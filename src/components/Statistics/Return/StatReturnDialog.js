import _ from 'lodash'import React from 'react'import PropTypes from 'prop-types'import {compose} from 'recompose'import injectSheet from 'react-jss'import IconButton from 'material-ui/IconButton'import Dialog from 'material-ui/Dialog'import Loader from '../../Loader'import CloseIcon from 'material-ui/svg-icons/navigation/close'import ReturnDetails from '../../Return/ReturnDetails'const enhance = compose(    injectSheet({        loader: {            width: '100%',            height: '400px',            background: '#fff',            alignItems: 'center',            zIndex: '999',            justifyContent: 'center',            display: 'flex'        },        dialog: {            overflowY: 'auto !important',            '& > div:first-child > div:first-child': {                transform: 'translate(0px, 0px) !important'            }        },        popUp: {            color: '#333 !important',            overflowY: 'hidden !important',            fontSize: '13px !important',            position: 'relative',            padding: '0 !important',            overflowX: 'hidden',            maxHeight: 'none !important',            marginBottom: '64px'        },        content: {            width: '100%',            display: 'block',            '& > div': {                width: 'auto',                border: 'none',                padding: '0',                maxHeight: '573px',                '& > div > div:last-child > div > div': {                    padding: '10px 0',                    minHeight: '50px'                }            }        },        titleSummary: {            padding: '20px 30px',            display: 'flex',            justifyContent: 'space-between'        },        downBlock: {            padding: '20px 30px',            '& .row': {                lineHeight: '35px',                padding: '0 10px',                display: 'flex',                justifyContent: 'space-between',                '& > div:last-child': {                    textAlign: 'right',                    fontWeight: '600'                }            },            '& .row:last-child': {                fontWeight: '600',                borderTop: '1px #efefef solid'            }        },        subTitle: {            paddingBottom: '8px',            fontStyle: 'italic',            fontWeight: '400'        },        titleContent: {            background: '#fff',            color: '#333',            zIndex: '999',            '& button': {                right: '10px',                top: '8px',                position: 'absolute !important',                zIndex: '4 !important'            },            '& div': {                display: 'flex',                alignItems: 'center'            },            '& .personImage': {                borderRadius: '50%',                overflow: 'hidden',                flexBasis: '35px',                height: '35px',                minWidth: '30px',                width: '35px',                marginRight: '10px',                '& img': {                    display: 'flex',                    height: '100%',                    width: '100%'                }            }        },        tableWrapper: {            padding: '0 30px',            maxHeight: '424px',            overflowY: 'auto',            '& .row': {                '&:first-child': {                    fontWeight: '600'                }            },            '& .dottedList': {                padding: '15px 0',                '& > div:last-child': {                    textAlign: 'right'                },                '&:last-child:after': {                    display: 'none'                }            }        }    }),)const StatReturnDialog = enhance((props) => {    const {        open,        onClose,        classes,        detailData,        loading    } = props    return (        <Dialog            modal={true}            open={open}            onRequestClose={onClose}            className={classes.dialog}            contentStyle={loading ? {width: '500px'} : {width: '1000px', maxWidth: 'unset'}}            bodyStyle={{minHeight: 'auto'}}            bodyClassName={classes.popUp}>            {loading ? <div className={classes.loader}>                <Loader size={0.75}/>            </div>                : <div>                    <div className={classes.titleContent}>                        <IconButton onTouchTap={onClose}>                            <CloseIcon color="#666666"/>                        </IconButton>                    </div>                    <div className={classes.content}>                        <ReturnDetails                            data={_.get(detailData, 'data')}                            loading={loading}                            stat={true}/>                    </div>                </div>}        </Dialog>    )})StatReturnDialog.propTyeps = {    filter: PropTypes.object.isRequired,    open: PropTypes.bool.isRequired,    onClose: PropTypes.func.isRequired,    loading: PropTypes.bool,    detailData: PropTypes.object}export default StatReturnDialog