{"version":3,"file":"28d4a330ee4c6df43712-0.main.js","sources":["webpack:///src/constants/routes.js","webpack:///src/constants/api.js","webpack:///src/helpers/axios.js","webpack:///src/helpers/toCamelCase.js","webpack:///src/components/ReduxForm/index.js","webpack:///src/constants/actionTypes.js","webpack:///src/components/CloseIcon2/index.js","webpack:///src/components/Container/index.js","webpack:///src/helpers/serializer.js","webpack:///src/components/Layout/index.js","webpack:///src/components/Styles/MainStyles.js","webpack:///src/components/SubMenu/index.js","webpack:///src/helpers/filter.js","webpack:///./~/material-ui/svg-icons/action/delete.js","webpack:///src/components/GridList/index.js","webpack:///src/components/ToolTip/index.js","webpack:///src/helpers/numberFormat.js","webpack:///src/helpers/toBoolean.js","webpack:///src/components/ReduxForm/Basic/SearchField.js","webpack:///src/actions/snackbar.js","webpack:///./~/material-ui/svg-icons/content/add.js","webpack:///./~/material-ui/svg-icons/image/edit.js","webpack:///src/components/ConfirmDialog/index.js","webpack:///./~/material-ui/svg-icons/editor/mode-edit.js","webpack:///src/components/CloseIcon/index.js","webpack:///./~/material-ui/svg-icons/editor/border-color.js","webpack:///./~/material-ui/svg-icons/navigation/more-vert.js","webpack:///src/helpers/getConfig.js","webpack:///src/components/ReduxForm/Basic/DateToDateField.js","webpack:///./src/components/Images/dot.png","webpack:///src/components/ReduxForm/Basic/TextField.js","webpack:///./src/components/Images/not-found.png","webpack:///src/components/DeleteDialog/index.js","webpack:///src/components/DeleteIcon/index.js","webpack:///src/components/ReduxForm/normalizers/normalizeNumber.js","webpack:///src/actions/order.js","webpack:///src/components/GridList/GridListNavPagination/index.js","webpack:///src/components/ReduxForm/Product/ProductSearchField.js","webpack:///src/components/ReduxForm/Product/ProductTypeSearchField.js","webpack:///src/components/Statistics/StatSideMenu.js","webpack:///src/constants/googleMaps.js","webpack:///./src/components/Images/groceries.svg","webpack:///src/actions/client.js","webpack:///src/components/Client/ClientCreateDialog.js","webpack:///src/components/Manufacture/PersonFilterForm.js","webpack:///src/components/Product/ProductFilterForm.js","webpack:///src/components/ReduxForm/Basic/CheckBox.js","webpack:///src/components/ReduxForm/Provider/ProviderSearchField.js","webpack:///src/components/ReduxForm/Shop/MarketTypeSearchField.js","webpack:///src/components/ReduxForm/Users/UsersSearchField.js","webpack:///src/components/Statistics/index.js","webpack:///src/helpers/createReducer.js","webpack:///src/helpers/numberWithoutSpaces.js","webpack:///src/helpers/storage.js","webpack:///src/helpers/validate.js","webpack:///./~/material-ui/svg-icons/action/account-balance-wallet.js","webpack:///./~/material-ui/svg-icons/action/date-range.js","webpack:///./~/material-ui/svg-icons/action/home.js","webpack:///./~/material-ui/svg-icons/action/search.js","webpack:///./~/react-google-maps/lib/async/withScriptjs.js","webpack:///src/actions/cashbox.js","webpack:///src/actions/equipment.js","webpack:///src/actions/marketType.js","webpack:///src/actions/notifications.js","webpack:///src/actions/product.js","webpack:///src/actions/signIn.js","webpack:///src/components/Brand/BrandCreateDialog.js","webpack:///src/components/Cashbox/CashboxCreateDialog.js","webpack:///src/components/ClientTransaction/ClientTransactionFilterForm.js","webpack:///src/components/Currency/CurrencyCreateDialog.js","webpack:///src/components/Equipment/EquipmentCreateDialog.js","webpack:///src/components/ExpensiveCategory/ExpensiveCategoryCreateDialog.js","webpack:///src/components/GridList/GridListNavSearch/index.js","webpack:///src/components/Icons/check.js","webpack:///src/components/LinearProgress/index.js","webpack:///src/components/Manufacture/ManufactureAddProductDialog.js","webpack:///src/components/Manufacture/ManufactureAddStaffDialog.js","webpack:///src/components/Manufacture/ManufactureEditProductDialog.js","webpack:///src/components/Manufacture/ManufactureShowBom.js","webpack:///src/components/MarketType/MarketTypeCreateDialog.js","webpack:///src/components/Measurement/MeasurementCreateDialog.js","webpack:///src/components/Order/OrderCreateDialog.js","webpack:///src/components/Order/OrderFilterForm.js","webpack:///src/components/Order/OrderItemReturnDialog.js","webpack:///src/components/Order/OrderReturnDialog.js","webpack:///src/components/Order/OrderShortage.js","webpack:///src/components/Order/OrderTransactionsDialog.js","webpack:///src/components/PendingExpenses/PendingExpensesFilterForm.js","webpack:///src/components/PendingPayments/PendingPaymentsCreateDialog.js","webpack:///src/components/PendingPayments/PendingPaymentsFilterForm.js","webpack:///src/components/Price/PriceFilterForm.js","webpack:///src/components/Prices/PricesCreateDialog.js","webpack:///src/components/Prices/PricesFilterForm.js","webpack:///src/components/ProductPrice/ProductPriceFilterForm.js","webpack:///src/components/ProductType/ProductTypeCreateDialog.js","webpack:///src/components/Product/ProductCreateDialog.js","webpack:///src/components/Product/ProductShowPhotoDialog.js","webpack:///src/components/Product/index.js","webpack:///src/components/Provider/ProviderCreateDialog.js","webpack:///src/components/ReduxForm/Stock/StockSearchField.js","webpack:///src/components/ReduxForm/Supply/ProductCustomSearchField.js","webpack:///src/components/Remainder/RemainderFilterForm.js","webpack:///src/components/Shift/ShiftCreateDialog.js","webpack:///src/components/Shop/ShopCreateDialog.js","webpack:///src/components/Shop/ShopFilterForm.js","webpack:///src/components/SidebarMenu/MenuItems.js","webpack:///src/components/StatDebtors/StatDebtorsFilterForm.js","webpack:///src/components/StatDebtors/StatDebtorsOrderDetails.js","webpack:///src/components/StatManufacture/StatManufactureCreateDialog.js","webpack:///src/components/StatStock/StatStockFilterForm.js","webpack:///src/components/StockReceive/StockReceiveCreateDialog.js","webpack:///src/components/Stock/StockCreateDialog.js","webpack:///src/components/Supply/SupplyCreateDialog.js","webpack:///src/components/Supply/SupplyExpenseCreateDialog.js","webpack:///src/components/Supply/SupplyFilterForm.js","webpack:///src/components/Transaction/TransactionFilterForm.js","webpack:///src/components/Users/UsersCreateDialog.js","webpack:///src/components/Users/UsersFilterForm.js","webpack:///src/components/Zones/ZonesWrapper.js","webpack:///src/constants/manufactureTab.js","webpack:///src/constants/orderTab.js","webpack:///src/constants/stockReceiveTab.js","webpack:///src/constants/storage.js","webpack:///./src/components/Images/badge.png","webpack:///./src/components/Images/cut.png","webpack:///./src/components/Images/cylindrical.png","webpack:///./src/components/Images/excel.png","webpack:///./src/components/Images/glue.png","webpack:///./src/components/Images/person.png","webpack:///./src/components/Images/press.png","webpack:///./~/material-ui/svg-icons/av/fiber-manual-record.js","webpack:///./~/material-ui/svg-icons/av/playlist-add-check.js","webpack:///./~/material-ui/svg-icons/content/remove.js","webpack:///./~/material-ui/svg-icons/editor/attach-money.js","webpack:///./~/material-ui/svg-icons/maps/map.js","webpack:///./~/material-ui/svg-icons/navigation/arrow-downward.js","webpack:///./~/material-ui/svg-icons/navigation/arrow-upward.js","webpack:///./~/react-google-maps/lib/drawing/DrawingManager.js","webpack:///src/routes/index.js","webpack:///src/store/createStore.js","webpack:///src/styles/index.js","webpack:///./~/recompose/rxjsObservableConfig.js","webpack:///src/actions/brand.js","webpack:///src/actions/clientTransaction.js","webpack:///src/actions/currency.js","webpack:///src/actions/expensiveCategory.js","webpack:///src/actions/ingredient.js","webpack:///src/actions/manufacture.js","webpack:///src/actions/manufactureProduct.js","webpack:///src/actions/measurement.js","webpack:///src/actions/pendingExpenses.js","webpack:///src/actions/pendingPayments.js","webpack:///src/actions/price.js","webpack:///src/actions/prices.js","webpack:///src/actions/primeryCurrency.js","webpack:///src/actions/productPrice.js","webpack:///src/actions/productType.js","webpack:///src/actions/provider.js","webpack:///src/actions/remainder.js","webpack:///src/actions/remainderStock.js","webpack:///src/actions/shift.js","webpack:///src/actions/shipment.js","webpack:///src/actions/shop.js","webpack:///src/actions/statAgent.js","webpack:///src/actions/statCashbox.js","webpack:///src/actions/statDebtors.js","webpack:///src/actions/statManufacture.js","webpack:///src/actions/statProduct.js","webpack:///src/actions/statStock.js","webpack:///src/actions/statistics.js","webpack:///src/actions/stock.js","webpack:///src/actions/stockReceive.js","webpack:///src/actions/supply.js","webpack:///src/actions/supplyExpense.js","webpack:///src/actions/transaction.js","webpack:///src/actions/transactionStock.js","webpack:///src/actions/userShift.js","webpack:///src/actions/users.js","webpack:///src/actions/zones.js","webpack:///src/components/AddPlace/AddPlace.js","webpack:///src/components/AddPlace/index.js","webpack:///src/components/BankPayment/BankPayment.js","webpack:///src/components/BankPayment/index.js","webpack:///src/components/Brand/BrandGridList.js","webpack:///src/components/Brand/index.js","webpack:///src/components/CashPayment/CashPayment.js","webpack:///src/components/CashPayment/index.js","webpack:///src/components/Cashbox/CashboxGridList.js","webpack:///src/components/Cashbox/index.js","webpack:///src/components/ClientTransaction/ClientTransactionCreateDialog.js","webpack:///src/components/ClientTransaction/ClientTransactionGridList.js","webpack:///src/components/ClientTransaction/ClientTransactionSendDialog.js","webpack:///src/components/ClientTransaction/index.js","webpack:///src/components/Client/ClientDetails.js","webpack:///src/components/Client/ClientGridList.js","webpack:///src/components/Client/index.js","webpack:///src/components/CloseIcon2/CloseIcon2.js","webpack:///src/components/CloseIcon/CloseIcon.js","webpack:///src/components/ConfirmDialog/ConfirmDialog.js","webpack:///src/components/Container/Container.js","webpack:///src/components/Currency/CurrencyGridList.js","webpack:///src/components/Currency/PrimaryCurrencyDialog.js","webpack:///src/components/Currency/index.js","webpack:///src/components/DeleteDialog/DeleteDialog.js","webpack:///src/components/DeleteIcon/DeleteIcon.js","webpack:///src/components/Equipment/EquipmentGridList.js","webpack:///src/components/Equipment/index.js","webpack:///src/components/ExpensiveCategory/ExpensiveCategoryGridList.js","webpack:///src/components/ExpensiveCategory/index.js","webpack:///src/components/GoogleMap/GoogleMap.js","webpack:///src/components/GoogleMap/index.js","webpack:///src/components/GridList/GridListBody/GridListBody.js","webpack:///src/components/GridList/GridListBody/index.js","webpack:///src/components/GridList/GridListHeader/ArrowDownIcon.js","webpack:///src/components/GridList/GridListHeader/ArrowUpIcon.js","webpack:///src/components/GridList/GridListHeader/GridListHeader.js","webpack:///src/components/GridList/GridListHeader/index.js","webpack:///src/components/GridList/GridListNavPagination/ArrowLeftIcon.js","webpack:///src/components/GridList/GridListNavPagination/ArrowRightIcon.js","webpack:///src/components/GridList/GridListNavPagination/GridListNavPagination.js","webpack:///src/components/GridList/GridListNavSearch/GridListNavSearch.js","webpack:///src/components/GridList/GridListNav/GridListNav.js","webpack:///src/components/GridList/GridListNav/index.js","webpack:///src/components/GridList/GridList/GridList.js","webpack:///src/components/GridList/GridList/index.js","webpack:///src/components/Layout/Layout.js","webpack:///src/components/LinearProgress/LinearProgress.js","webpack:///src/components/Manufacture/ManufactureChangeDialog.js","webpack:///src/components/Manufacture/ManufactureDetails.js","webpack:///src/components/Manufacture/ManufactureGridList.js","webpack:///src/components/Manufacture/ManufactureTab.js","webpack:///src/components/Manufacture/Tab/ManufactureEquipment.js","webpack:///src/components/Manufacture/Tab/ManufacturePerson.js","webpack:///src/components/Manufacture/Tab/ManufactureProduct.js","webpack:///src/components/Manufacture/Tab/ManufactureShipment.js","webpack:///src/components/Manufacture/Tab/ManufactureShipmentDetail.js","webpack:///src/components/Manufacture/index.js","webpack:///src/components/MarketType/MarketTypeGridList.js","webpack:///src/components/MarketType/index.js","webpack:///src/components/Measurement/MeasurementGridList.js","webpack:///src/components/Measurement/index.js","webpack:///src/components/Order/OrderDetails.js","webpack:///src/components/Order/OrderGridList.js","webpack:///src/components/Order/index.js","webpack:///src/components/PendingExpenses/PendingExpensesCreateDialog.js","webpack:///src/components/PendingExpenses/PendingExpensesGridList.js","webpack:///src/components/PendingExpenses/index.js","webpack:///src/components/PendingPayments/PendingPaymentsGridList.js","webpack:///src/components/PendingPayments/index.js","webpack:///src/components/Price/PriceDetails.js","webpack:///src/components/Price/PriceGridList.js","webpack:///src/components/Price/PriceSetForm.js","webpack:///src/components/Price/PriceSupplyDialog.js","webpack:///src/components/Price/index.js","webpack:///src/components/Prices/PricesDetails.js","webpack:///src/components/Prices/PricesGridList.js","webpack:///src/components/Prices/index.js","webpack:///src/components/ProductPrice/ProductPriceCreateDialog.js","webpack:///src/components/ProductPrice/ProductPriceDetails.js","webpack:///src/components/ProductPrice/ProductPriceGridList.js","webpack:///src/components/ProductPrice/index.js","webpack:///src/components/ProductType/ProductTypeGridList.js","webpack:///src/components/ProductType/index.js","webpack:///src/components/Product/ProductGridList.js","webpack:///src/components/Provider/ProviderDetails.js","webpack:///src/components/Provider/ProviderGridList.js","webpack:///src/components/Provider/index.js","webpack:///src/components/ReduxForm/Basic/DateField.js","webpack:///src/components/ReduxForm/Basic/DateToDateFieldCustom.js","webpack:///src/components/ReduxForm/Basic/ImageUploadField.js","webpack:///src/components/ReduxForm/Basic/LocationField.js","webpack:///src/components/ReduxForm/Basic/TimeField.js","webpack:///src/components/ReduxForm/BrandSearchField.js","webpack:///src/components/ReduxForm/CashboxCurrencyField.js","webpack:///src/components/ReduxForm/CashboxSearchField.js","webpack:///src/components/ReduxForm/CategorySearchField.js","webpack:///src/components/ReduxForm/Client/ClientContactsField.js","webpack:///src/components/ReduxForm/Client/ClientContactsListField.js","webpack:///src/components/ReduxForm/Client/ClientSearchField.js","webpack:///src/components/ReduxForm/CurrencySearchField.js","webpack:///src/components/ReduxForm/DealTypeSearchField.js","webpack:///src/components/ReduxForm/DeliveryTypeSearchField.js","webpack:///src/components/ReduxForm/ExpensiveCategorySearchField.js","webpack:///src/components/ReduxForm/Manufacture/ManufactureListMaterialField.js","webpack:///src/components/ReduxForm/Manufacture/ManufactureSearchField.js","webpack:///src/components/ReduxForm/MarketSearchField.js","webpack:///src/components/ReduxForm/MeasurementSearchField.js","webpack:///src/components/ReduxForm/Order/OrderListProductField.js","webpack:///src/components/ReduxForm/Order/OrderListReturnField.js","webpack:///src/components/ReduxForm/Order/OrderProductMeasurementField.js","webpack:///src/components/ReduxForm/Order/OrderProductSearchField.js","webpack:///src/components/ReduxForm/Order/OrderReturnMeasurementField.js","webpack:///src/components/ReduxForm/Order/OrderReturnTotalSum.js","webpack:///src/components/ReduxForm/Order/OrderStatusSearchField.js","webpack:///src/components/ReduxForm/Order/OrderTotalSum.js","webpack:///src/components/ReduxForm/Order/ProductReturnCostField.js","webpack:///src/components/ReduxForm/Order/ReturnProductsSearchField.js","webpack:///src/components/ReduxForm/PaymentTypeSearchField.js","webpack:///src/components/ReduxForm/PendingPaymentRadioButton.js","webpack:///src/components/ReduxForm/PendingPayments/CashboxCustomField.js","webpack:///src/components/ReduxForm/PricesListProductField.js","webpack:///src/components/ReduxForm/Product/ProductCostField.js","webpack:///src/components/ReduxForm/Product/ProductMeasurementField.js","webpack:///src/components/ReduxForm/Provider/ProviderContactsField.js","webpack:///src/components/ReduxForm/Provider/ProviderContactsListField.js","webpack:///src/components/ReduxForm/RemainderDateField.js","webpack:///src/components/ReduxForm/ShiftSearchField.js","webpack:///src/components/ReduxForm/Shop/ShopStatusSearchField.js","webpack:///src/components/ReduxForm/Shop/VisitFrequencySearchField.js","webpack:///src/components/ReduxForm/StockReceive/StockReceiveProductSearchField.js","webpack:///src/components/ReduxForm/Stock/StockTypeSearchField.js","webpack:///src/components/ReduxForm/Supply/SupplyListProductField.js","webpack:///src/components/ReduxForm/TransactionTypeSearchField.js","webpack:///src/components/ReduxForm/Users/UsersGroupSearchField.js","webpack:///src/components/Remainder/RemainderDetails.js","webpack:///src/components/Remainder/RemainderGridList.js","webpack:///src/components/Remainder/index.js","webpack:///src/components/Shift/ShiftGridList.js","webpack:///src/components/Shift/index.js","webpack:///src/components/Shop/AddPhotoDialog.js","webpack:///src/components/Shop/ShopDetails.js","webpack:///src/components/Shop/ShopGridList.js","webpack:///src/components/Shop/ShopMapDialog.js","webpack:///src/components/Shop/SlideShowDialog.js","webpack:///src/components/Shop/index.js","webpack:///src/components/SidebarMenu/SidebarMenu.js","webpack:///src/components/SidebarMenu/index.js","webpack:///src/components/SignInForm/SignInForm.js","webpack:///src/components/SignInForm/index.js","webpack:///src/components/SingInLayout/SingInLayout.js","webpack:///src/components/SingInLayout/index.js","webpack:///src/components/Snackbar/Snackbar.js","webpack:///src/components/Snackbar/index.js","webpack:///src/components/StatCashbox/StatCashboxGridList.js","webpack:///src/components/StatCashbox/StatCashboxOrderDetails.js","webpack:///src/components/StatCashbox/index.js","webpack:///src/components/StatDebtors/StatDebtorsGridList.js","webpack:///src/components/StatDebtors/index.js","webpack:///src/components/StatManufacture/StatManufactureGridList.js","webpack:///src/components/StatManufacture/index.js","webpack:///src/components/StatStock/StatStockGridList.js","webpack:///src/components/StatStock/index.js","webpack:///src/components/Statistics/StatAgentDialog.js","webpack:///src/components/Statistics/StatAgentGridList.js","webpack:///src/components/Statistics/StatProductGridList.js","webpack:///src/components/Statistics/StatisticsGridList.js","webpack:///src/components/StockReceive/StockHistoryFilterForm.js","webpack:///src/components/StockReceive/StockReceiveDetails.js","webpack:///src/components/StockReceive/StockReceiveGridList.js","webpack:///src/components/StockReceive/StockTabHistory.js","webpack:///src/components/StockReceive/StockTabReceive.js","webpack:///src/components/StockReceive/StockTabTransfer.js","webpack:///src/components/StockReceive/StockTransferDetails.js","webpack:///src/components/StockReceive/index.js","webpack:///src/components/Stock/StockGridList.js","webpack:///src/components/Stock/index.js","webpack:///src/components/SubMenu/SubMenu.js","webpack:///src/components/Supply/SupplyDefectDialog.js","webpack:///src/components/Supply/SupplyDetails.js","webpack:///src/components/Supply/SupplyGridList.js","webpack:///src/components/Supply/index.js","webpack:///src/components/ToolTip/ToolTip.js","webpack:///src/components/Tracking/TrackingMap.js","webpack:///src/components/Tracking/TrackingWrapper.js","webpack:///src/components/Transaction/TransactionCreateDialog.js","webpack:///src/components/Transaction/TransactionGridList.js","webpack:///src/components/Transaction/TransactionSendDialog.js","webpack:///src/components/Transaction/index.js","webpack:///src/components/Users/UsersGridList.js","webpack:///src/components/Users/index.js","webpack:///src/components/Zones/AddZonePopup.js","webpack:///src/components/Zones/ZoneDetails.js","webpack:///src/components/Zones/ZoneMap.js","webpack:///src/components/Zones/index.js","webpack:///src/containers/App/App.js","webpack:///src/containers/App/index.js","webpack:///src/containers/Brand/BrandList.js","webpack:///src/containers/Brand/index.js","webpack:///src/containers/Cashbox/CashboxList.js","webpack:///src/containers/Cashbox/index.js","webpack:///src/containers/ClientTransaction/ClientTransactionList.js","webpack:///src/containers/ClientTransaction/index.js","webpack:///src/containers/Client/ClientList.js","webpack:///src/containers/Client/index.js","webpack:///src/containers/Currency/CurrencyList.js","webpack:///src/containers/Currency/index.js","webpack:///src/containers/Equipment/EquipmentList.js","webpack:///src/containers/Equipment/index.js","webpack:///src/containers/ExpensiveCategory/ExpensiveCategoryList.js","webpack:///src/containers/ExpensiveCategory/index.js","webpack:///src/containers/Manufacture/ManufactureList.js","webpack:///src/containers/Manufacture/index.js","webpack:///src/containers/MarketType/MarketTypeList.js","webpack:///src/containers/MarketType/index.js","webpack:///src/containers/Measurement/MeasurementList.js","webpack:///src/containers/Measurement/index.js","webpack:///src/containers/NotFound/NotFound.js","webpack:///src/containers/NotFound/index.js","webpack:///src/containers/Order/OrderList.js","webpack:///src/containers/Order/index.js","webpack:///src/containers/PendingExpenses/PendingExpensesList.js","webpack:///src/containers/PendingExpenses/index.js","webpack:///src/containers/PendingPayments/PendingPaymentsList.js","webpack:///src/containers/PendingPayments/index.js","webpack:///src/containers/Price/PriceList.js","webpack:///src/containers/Price/index.js","webpack:///src/containers/Prices/PricesList.js","webpack:///src/containers/Prices/index.js","webpack:///src/containers/ProductPrice/ProductPriceList.js","webpack:///src/containers/ProductPrice/index.js","webpack:///src/containers/ProductType/ProductTypeList.js","webpack:///src/containers/ProductType/index.js","webpack:///src/containers/Product/ProductList.js","webpack:///src/containers/Product/index.js","webpack:///src/containers/Provider/ProviderList.js","webpack:///src/containers/Provider/index.js","webpack:///src/containers/Remainder/RemainderList.js","webpack:///src/containers/Remainder/index.js","webpack:///src/containers/Shift/ShiftList.js","webpack:///src/containers/Shift/index.js","webpack:///src/containers/Shop/ShopList.js","webpack:///src/containers/Shop/index.js","webpack:///src/containers/SignIn/SignIn.js","webpack:///src/containers/SignIn/index.js","webpack:///src/containers/StatCashbox/StatCashbox.js","webpack:///src/containers/StatCashbox/index.js","webpack:///src/containers/StatDebtors/StatDebtors.js","webpack:///src/containers/StatDebtors/index.js","webpack:///src/containers/StatManufacture/StatManufacture.js","webpack:///src/containers/StatManufacture/index.js","webpack:///src/containers/StatStock/StatStock.js","webpack:///src/containers/StatStock/index.js","webpack:///src/containers/Statistics/StatAgent.js","webpack:///src/containers/Statistics/StatProduct.js","webpack:///src/containers/Statistics/Statistics.js","webpack:///src/containers/Statistics/index.js","webpack:///src/containers/StockReceive/StockReceiveList.js","webpack:///src/containers/StockReceive/index.js","webpack:///src/containers/Stock/StockList.js","webpack:///src/containers/Stock/index.js","webpack:///src/containers/Supply/SupplyList.js","webpack:///src/containers/Supply/index.js","webpack:///src/containers/Tracking/Tracking.js","webpack:///src/containers/Tracking/index.js","webpack:///src/containers/Transaction/TransactionList.js","webpack:///src/containers/Transaction/index.js","webpack:///src/containers/Users/UsersList.js","webpack:///src/containers/Users/index.js","webpack:///src/containers/Zones/Zones.js","webpack:///src/containers/Zones/index.js","webpack:///src/helpers/createStandardReducer.js","webpack:///src/helpers/createThunkReducer.js","webpack:///src/helpers/excludeObjKey.js","webpack:///src/permissions/index.js","webpack:///src/reducers/index.js","webpack:///src/reducers/snackbarReducer.js","webpack:///src/serializers/Product/productPriceSerializer.js","webpack:///src/serializers/Product/productSerializer.js","webpack:///src/serializers/Product/productTypeSerializer.js","webpack:///src/serializers/Statistics/statAgentSerializer.js","webpack:///src/serializers/Statistics/statProductSerializer.js","webpack:///src/serializers/Statistics/statisticsSerializer.js","webpack:///src/serializers/Supply/supplyExpenseSerializer.js","webpack:///src/serializers/Supply/supplySerializer.js","webpack:///src/serializers/Transaction/transactionSerializer.js","webpack:///src/serializers/Transaction/transactionStockSerializer.js","webpack:///src/serializers/Users/userShiftSerializer.js","webpack:///src/serializers/Users/usersSerializer.js","webpack:///src/serializers/brandSerializer.js","webpack:///src/serializers/cashboxSerializer.js","webpack:///src/serializers/clientSerializer.js","webpack:///src/serializers/clientTransactionSerializer.js","webpack:///src/serializers/currencySerializer.js","webpack:///src/serializers/equipmentSerializer.js","webpack:///src/serializers/expensiveCategorySerializer.js","webpack:///src/serializers/ingredientSerializer.js","webpack:///src/serializers/manufactureProductSerializer.js","webpack:///src/serializers/marketTypeSerializer.js","webpack:///src/serializers/measurementSerializer.js","webpack:///src/serializers/orderReturnSerializer.js","webpack:///src/serializers/orderSerializer.js","webpack:///src/serializers/pendingExpensesSerializer.js","webpack:///src/serializers/pendingPaymentsSerializer.js","webpack:///src/serializers/priceSerializer.js","webpack:///src/serializers/pricesSerializer.js","webpack:///src/serializers/providerSerializer.js","webpack:///src/serializers/remainderSerializer.js","webpack:///src/serializers/remainderStockSerializer.js","webpack:///src/serializers/shiftSerializer.js","webpack:///src/serializers/shipmentSerializer.js","webpack:///src/serializers/shopSerializer.js","webpack:///src/serializers/statCashboxSerializer.js","webpack:///src/serializers/statDebtorsSerializer.js","webpack:///src/serializers/statManufactureSerializer.js","webpack:///src/serializers/statStockSerializer.js","webpack:///src/serializers/stockReceiveSerializer.js","webpack:///src/serializers/stockSerializer.js","webpack:///src/serializers/zoneSerializer.js","webpack:///./~/can-use-dom/index.js","webpack:///./src/styles/custom.css","webpack:///./src/components/Images/logo.png","webpack:///./src/components/Images/noPayment.png","webpack:///./~/material-ui/svg-icons/action/cached.js","webpack:///./~/material-ui/svg-icons/action/settings-power.js","webpack:///./~/material-ui/svg-icons/action/settings.js","webpack:///./~/material-ui/svg-icons/action/timeline.js","webpack:///./~/material-ui/svg-icons/action/touch-app.js","webpack:///./~/material-ui/svg-icons/action/trending-up.js","webpack:///./~/material-ui/svg-icons/action/visibility-off.js","webpack:///./~/material-ui/svg-icons/content/reply.js","webpack:///./~/material-ui/svg-icons/editor/insert-drive-file.js","webpack:///./~/material-ui/svg-icons/hardware/keyboard-arrow-right.js","webpack:///./~/material-ui/svg-icons/image/image.js","webpack:///./~/material-ui/svg-icons/image/landscape.js","webpack:///./~/material-ui/svg-icons/maps/local-shipping.js","webpack:///./~/material-ui/svg-icons/maps/place.js","webpack:///./~/material-ui/svg-icons/navigation/arrow-drop-down-circle.js","webpack:///./~/material-ui/svg-icons/navigation/arrow-drop-up.js","webpack:///./~/material-ui/svg-icons/social/notifications.js","webpack:///./~/material-ui/svg-icons/toggle/star.js","webpack:///./~/scriptjs/dist/script.js","webpack:///./src/styles/custom.css?b14b","webpack:///src/index.js"],"sourcesContent":["export const DASHBOARD_URL = '/'\r\n\r\nexport const SIGN_IN = 'sign-in'\r\nexport const SIGN_IN_URL = '/sign-in'\r\n\r\nexport const SHOP = 'shop'\r\nexport const SHOP_LIST_URL = `/${SHOP}`\r\nexport const SHOP_ITEM_URL = `${SHOP_LIST_URL}/:shopId`\r\nexport const SHOP_ITEM_TAB_URL = `${SHOP_ITEM_URL}/:tab`\r\nexport const SHOP_ITEM_PATH = `/${SHOP}/%d`\r\nexport const SHOP_ITEM_TAB_PATH = `/${SHOP}/%d/%s`\r\n\r\nexport const USERS = 'users'\r\nexport const USERS_LIST_URL = `/${USERS}`\r\nexport const USERS_ITEM_URL = `${USERS_LIST_URL}/:usersId`\r\nexport const USERS_ITEM_PATH = `/${USERS}/%d`\r\n\r\nexport const CASHBOX = 'cashbox'\r\nexport const CASHBOX_LIST_URL = `/${CASHBOX}`\r\nexport const CASHBOX_ITEM_URL = `${CASHBOX_LIST_URL}/:cashboxId`\r\nexport const CASHBOX_ITEM_PATH = `/${CASHBOX}/%d`\r\n\r\nexport const TRANSACTION = 'transaction'\r\nexport const TRANSACTION_LIST_URL = `/${TRANSACTION}`\r\nexport const TRANSACTION_ITEM_URL = `${TRANSACTION_LIST_URL}/:transactionId`\r\nexport const TRANSACTION_ITEM_PATH = `/${TRANSACTION}/%d`\r\n\r\nexport const CLIENT_TRANSACTION = 'clientTransaction'\r\nexport const CLIENT_TRANSACTION_LIST_URL = `/${CLIENT_TRANSACTION}`\r\nexport const CLIENT_TRANSACTION_ITEM_URL = `${CLIENT_TRANSACTION_LIST_URL}/:clientTransactionId`\r\nexport const CLIENT_TRANSACTION_ITEM_PATH = `/${CLIENT_TRANSACTION}/%d`\r\n\r\nexport const SUPPLY = 'supply'\r\nexport const SUPPLY_LIST_URL = `/${SUPPLY}`\r\nexport const SUPPLY_ITEM_URL = `${SUPPLY_LIST_URL}/:supplyId`\r\nexport const SUPPLY_ITEM_PATH = `/${SUPPLY}/%d`\r\n\r\nexport const PRICES = 'prices'\r\nexport const PRICES_LIST_URL = `/${PRICES}`\r\nexport const PRICES_ITEM_URL = `${PRICES_LIST_URL}/:pricesId`\r\nexport const PRICES_ITEM_PATH = `/${PRICES}/%d`\r\n\r\nexport const ORDER = 'order'\r\nexport const ORDER_LIST_URL = `/${ORDER}`\r\nexport const ORDER_ITEM_URL = `${ORDER_LIST_URL}/:orderId`\r\nexport const ORDER_ITEM_PATH = `/${ORDER}/%d`\r\n\r\nexport const PRODUCT = 'product'\r\nexport const PRODUCT_LIST_URL = `/${PRODUCT}`\r\nexport const PRODUCT_ITEM_URL = `${PRODUCT_LIST_URL}/:productId`\r\nexport const PRODUCT_ITEM_PATH = `/${PRODUCT}/%d`\r\n\r\nexport const PRODUCT_TYPE = 'productType'\r\nexport const PRODUCT_TYPE_LIST_URL = `/${PRODUCT_TYPE}`\r\nexport const PRODUCT_TYPE_ITEM_URL = `${PRODUCT_TYPE_LIST_URL}/:productTypeId`\r\nexport const PRODUCT_TYPE_ITEM_PATH = `/${PRODUCT_TYPE}/%d`\r\n\r\nexport const PRODUCT_PRICE = 'productPrice'\r\nexport const PRODUCT_PRICE_LIST_URL = `/${PRODUCT_PRICE}`\r\nexport const PRODUCT_PRICE_ITEM_URL = `${PRODUCT_PRICE_LIST_URL}/:productPriceId`\r\nexport const PRODUCT_PRICE_ITEM_PATH = `/${PRODUCT_PRICE}/%d`\r\n\r\nexport const CATEGORY = 'category'\r\nexport const CATEGORY_LIST_URL = `/${CATEGORY}`\r\nexport const CATEGORY_ITEM_URL = `${CATEGORY_LIST_URL}/:categoryId`\r\nexport const CATEGORY_ITEM_PATH = `/${CATEGORY}/%d`\r\n\r\nexport const EQUIPMENT = 'equipment'\r\nexport const EQUIPMENT_LIST_URL = `/${EQUIPMENT}`\r\nexport const EQUIPMENT_ITEM_URL = `${EQUIPMENT_LIST_URL}/:equipmentId`\r\nexport const EQUIPMENT_ITEM_PATH = `/${EQUIPMENT}/%d`\r\n\r\nexport const STOCK = 'stock'\r\nexport const STOCK_LIST_URL = `/${STOCK}`\r\nexport const STOCK_ITEM_URL = `${STOCK_LIST_URL}/:stockId`\r\nexport const STOCK_ITEM_PATH = `/${STOCK}/%d`\r\n\r\nexport const BRAND = 'brand'\r\nexport const BRAND_LIST_URL = `/${BRAND}`\r\nexport const BRAND_ITEM_URL = `${BRAND_LIST_URL}/:brandId`\r\nexport const BRAND_ITEM_PATH = `/${BRAND}/%d`\r\n\r\nexport const CURRENCY = 'currency'\r\nexport const CURRENCY_LIST_URL = `/${CURRENCY}`\r\nexport const CURRENCY_ITEM_URL = `${CURRENCY_LIST_URL}/:currencyId`\r\nexport const CURRENCY_ITEM_PATH = `${CURRENCY}/%d`\r\n\r\nexport const MEASUREMENT = 'measurement'\r\nexport const MEASUREMENT_LIST_URL = `/${MEASUREMENT}`\r\nexport const MEASUREMENT_ITEM_URL = `${MEASUREMENT_LIST_URL}/:measurementId`\r\nexport const MEASUREMENT_ITEM_PATH = `${MEASUREMENT}/%d`\r\n\r\nexport const EXPENSIVE_CATEGORY = 'expensiveCategory'\r\nexport const EXPENSIVE_CATEGORY_LIST_URL = `/${EXPENSIVE_CATEGORY}`\r\nexport const EXPENSIVE_CATEGORY_ITEM_URL = `${EXPENSIVE_CATEGORY_LIST_URL}/:expensiveCategoryId`\r\nexport const EXPENSIVE_CATEGORY_ITEM_PATH = `${EXPENSIVE_CATEGORY}/%d`\r\n\r\nexport const PROVIDER = 'provider'\r\nexport const PROVIDER_LIST_URL = `/${PROVIDER}`\r\nexport const PROVIDER_ITEM_URL = `${PROVIDER_LIST_URL}/:providerId`\r\nexport const PROVIDER_ITEM_PATH = `${PROVIDER}/%d`\r\n\r\nexport const CLIENT = 'client'\r\nexport const CLIENT_LIST_URL = `/${CLIENT}`\r\nexport const CLIENT_ITEM_URL = `${CLIENT_LIST_URL}/:clientId`\r\nexport const CLIENT_ITEM_PATH = `${CLIENT}/%d`\r\n\r\nexport const MANUFACTURE = 'manufacture'\r\nexport const MANUFACTURE_LIST_URL = `/${MANUFACTURE}`\r\nexport const MANUFACTURE_CUSTOM_URL = `/${MANUFACTURE}/3`\r\nexport const MANUFACTURE_ITEM_URL = `${MANUFACTURE_LIST_URL}/:manufactureId`\r\nexport const MANUFACTURE_ITEM_PATH = `${MANUFACTURE}/%d`\r\n\r\nexport const SHIFT = 'shift'\r\nexport const SHIFT_LIST_URL = `/${SHIFT}`\r\nexport const SHIFT_ITEM_URL = `${SHIFT_LIST_URL}/:shiftId`\r\nexport const SHIFT_ITEM_PATH = `${SHIFT}/%d`\r\n\r\nexport const PENDING_EXPENSES = 'pendingExpenses'\r\nexport const PENDING_EXPENSES_LIST_URL = `/${PENDING_EXPENSES}`\r\nexport const PENDING_EXPENSES_ITEM_URL = `${PENDING_EXPENSES_LIST_URL}/:pendingExpensesId`\r\nexport const PENDING_EXPENSES_ITEM_PATH = `${PENDING_EXPENSES}/%d`\r\n\r\nexport const STATSTOCK = 'stockStat'\r\nexport const STATSTOCK_LIST_URL = `/${STATSTOCK}`\r\nexport const STATSTOCK_ITEM_URL = `${STATSTOCK_LIST_URL}/:statStockId`\r\nexport const STATSTOCK_ITEM_PATH = `/${STATSTOCK}/%d`\r\n\r\nexport const REMAINDER_STOCK = 'stockRemainder'\r\nexport const REMAINDER_STOCK_LIST_URL = `/${REMAINDER_STOCK}/%d/balances/`\r\nexport const REMAINDER_STOCK_ITEM_URL = `${REMAINDER_STOCK_LIST_URL}/%d/balances/:remainderStockId`\r\nexport const REMAINDER_STOCK_ITEM_PATH = `/${REMAINDER_STOCK}/%d/balances/%d`\r\n\r\nexport const STATDEBTORS = 'statDebtors'\r\nexport const STATDEBTORS_LIST_URL = `/${STATDEBTORS}`\r\nexport const STATDEBTORS_ITEM_URL = `${STATDEBTORS_LIST_URL}/:statDebtorsId`\r\nexport const STATDEBTORS_ITEM_PATH = `/${STATDEBTORS}/%d`\r\n\r\nexport const STAT_MANUFACTURE = 'statManufacture'\r\nexport const STAT_MANUFACTURE_LIST_URL = `/${STAT_MANUFACTURE}`\r\nexport const STAT_MANUFACTURE_ITEM_URL = `${STAT_MANUFACTURE_LIST_URL}/:statManufactureId`\r\nexport const STAT_MANUFACTURE_ITEM_PATH = `/${STAT_MANUFACTURE}/%d`\r\n\r\nexport const STAT_CASHBOX = 'statCashbox'\r\nexport const STAT_CASHBOX_LIST_URL = `/${STAT_CASHBOX}`\r\nexport const STAT_CASHBOX_ITEM_URL = `${STAT_CASHBOX_LIST_URL}/:statCashboxId`\r\nexport const STAT_CASHBOX_ITEM_PATH = `/${STAT_CASHBOX}/%d`\r\n\r\nexport const PENDING_PAYMENTS = 'pendingPayments'\r\nexport const PENDING_PAYMENTS_LIST_URL = `/${PENDING_PAYMENTS}`\r\nexport const PENDING_PAYMENTS_ITEM_URL = `${PENDING_PAYMENTS_LIST_URL}/:pendingPaymentsId`\r\nexport const PENDING_PAYMENTS_ITEM_PATH = `${PENDING_PAYMENTS}/%d`\r\n\r\nexport const ZONES = 'zones'\r\nexport const ZONES_LIST_URL = `/${ZONES}`\r\nexport const ZONES_ITEM_URL = `${ZONES_LIST_URL}/:zoneId`\r\nexport const ZONES_ITEM_PATH = `/${ZONES}/%d`\r\n\r\nexport const TRACKING = 'tracking'\r\nexport const TRACKING_LIST_URL = `/${TRACKING}`\r\n\r\nexport const MARKET_TYPE = 'marketType'\r\nexport const MARKET_TYPE_LIST_URL = `/${MARKET_TYPE}`\r\nexport const MARKET_TYPE_ITEM_URL = `${MARKET_TYPE_LIST_URL}/:marketTypeId`\r\nexport const MARKET_TYPE_ITEM_PATH = `/${MARKET_TYPE}/%d`\r\n\r\nexport const PRICE = 'price'\r\nexport const PRICE_LIST_URL = `/${PRICE}`\r\nexport const PRICE_ITEM_URL = `${PRICE_LIST_URL}/:priceId`\r\nexport const PRICE_ITEM_PATH = `/${PRICE}/%d`\r\n\r\nexport const REMAINDER = 'remainder'\r\nexport const REMAINDER_LIST_URL = `/${REMAINDER}`\r\nexport const REMAINDER_ITEM_URL = `${REMAINDER_LIST_URL}/:remainderId`\r\nexport const REMAINDER_ITEM_PATH = `/${REMAINDER}/%d`\r\n\r\nexport const STATISTICS = 'statistics'\r\nexport const STATISTICS_LIST_URL = `/${STATISTICS}`\r\nexport const STATISTICS_AGENT_URL = `/${STATISTICS}/agent`\r\nexport const STATISTICS_PRODUCT_URL = `/${STATISTICS}/product`\r\n\r\nexport const STOCK_RECEIVE = 'stockReceive'\r\nexport const STOCK_RECEIVE_LIST_URL = `/${STOCK_RECEIVE}`\r\nexport const STOCK_RECEIVE_ITEM_URL = `${STOCK_RECEIVE_LIST_URL}/:stockReceiveId`\r\nexport const STOCK_RECEIVE_ITEM_PATH = `/${STOCK_RECEIVE}/%d`\r\n\n\n\n// WEBPACK FOOTER //\n// src/constants/routes.js","export const API_HOST = process.env.API_HOST\r\nexport const API_ROOT = 'api'\r\nexport const API_VERSION = 'v1'\r\nexport const API_URL = `http://${API_HOST}/${API_ROOT}/${API_VERSION}`\r\n\r\nexport const USER = 'main/crud'\r\nexport const SIGN_IN = '/main/user/auth/'\r\nexport const SIGN_OUT = `/${USER}/unauth/`\r\nexport const CONFIG = 'config/'\r\n\r\nexport const EQUIPMENT = 'manufacture/equipment'\r\nexport const EQUIPMENT_CREATE = `/${EQUIPMENT}/`\r\nexport const EQUIPMENT_LIST = `/${EQUIPMENT}/`\r\nexport const EQUIPMENT_ITEM = `/${EQUIPMENT}/%d/`\r\nexport const EQUIPMENT_DELETE = `/${EQUIPMENT}/%d/`\r\n\r\nexport const STOCK = 'stock/stock'\r\nexport const STOCK_CREATE = `/${STOCK}/`\r\nexport const STOCK_LIST = `/${STOCK}/`\r\nexport const STOCK_ITEM = `/${STOCK}/%d/`\r\nexport const STOCK_DELETE = `/${STOCK}/%d/`\r\n\r\nexport const MEASUREMENT = 'main/measurement'\r\nexport const MEASUREMENT_CREATE = `/${MEASUREMENT}/`\r\nexport const MEASUREMENT_LIST = `/${MEASUREMENT}/`\r\nexport const MEASUREMENT_ITEM = `/${MEASUREMENT}/%d/`\r\nexport const MEASUREMENT_DELETE = `/${MEASUREMENT}/%d/`\r\n\r\nexport const EXPENSIVE_CATEGORY = 'finance/expanse_category'\r\nexport const EXPENSIVE_CATEGORY_CREATE = `/${EXPENSIVE_CATEGORY}/`\r\nexport const EXPENSIVE_CATEGORY_LIST = `/${EXPENSIVE_CATEGORY}/`\r\nexport const EXPENSIVE_CATEGORY_ITEM = `/${EXPENSIVE_CATEGORY}/%d/`\r\nexport const EXPENSIVE_CATEGORY_DELETE = `/${EXPENSIVE_CATEGORY}/%d/`\r\n\r\nexport const PROVIDER = 'stock/provider'\r\nexport const PROVIDER_CREATE = `/${PROVIDER}/`\r\nexport const PROVIDER_DELETE = `/${PROVIDER}/%d/`\r\nexport const PROVIDER_LIST = `/${PROVIDER}/`\r\nexport const PROVIDER_ITEM = `/${PROVIDER}/%d/`\r\n\r\nexport const CLIENT = 'sales/client'\r\nexport const CLIENT_CREATE = `/${CLIENT}/`\r\nexport const CLIENT_DELETE = `/${CLIENT}/%d/`\r\nexport const CLIENT_LIST = `/${CLIENT}/`\r\nexport const CLIENT_ITEM = `/${CLIENT}/%d/`\r\n\r\nexport const CURRENCY = 'finance/currencies'\r\nexport const CURRENCY_CREATE = `/${CURRENCY}/`\r\nexport const CURRENCY_LIST = `/${CURRENCY}/`\r\nexport const CURRENCY_DELETE = `/${CURRENCY}/%d/`\r\nexport const CURRENCY_ITEM = `/${CURRENCY}/%d/`\r\nexport const CURRENCY_PRIMARY = 'currency_primary'\r\nexport const CURRENCY_PRIMARY_CREATE = `/${CURRENCY_PRIMARY}/`\r\nexport const CURRENCY_RATE = 'finance/currency_rate/'\r\nexport const SET_CURRENCY = 'finance/currency_rate'\r\nexport const SET_CURRENCY_CREATE = `/${SET_CURRENCY}/`\r\n\r\nexport const SHOP = 'market/market'\r\nexport const SHOP_CREATE = `/${SHOP}/`\r\nexport const SHOP_LIST = `/${SHOP}/`\r\nexport const SHOP_ITEM = `/${SHOP}/%d/`\r\nexport const SHOP_ITEM_ADD_IMAGE = `/${SHOP}/%d/image/`\r\nexport const SHOP_ITEM_SHOW_IMAGE = 'file/file/%d/'\r\nexport const SHOP_DELETE = `/${SHOP}/%d/`\r\n\r\nexport const USERS = 'main/crud'\r\nexport const USERS_CREATE = `/${USERS}/`\r\nexport const USERS_LIST = `/${USERS}/`\r\nexport const USERS_ITEM = `/${USERS}/%d/`\r\nexport const USERS_DELETE = `/${USERS}/%d/`\r\nexport const USERS_GROUP = 'group/gcrud/'\r\nexport const USERS_GROUP_ITEM = 'group/gcrud/%d/'\r\n\r\nexport const CASHBOX = 'finance/cashbox'\r\nexport const CASHBOX_CREATE = `/${CASHBOX}/`\r\nexport const CASHBOX_LIST = `/${CASHBOX}/`\r\nexport const CASHBOX_ITEM = `/${CASHBOX}/%d/`\r\nexport const CASHBOX_DELETE = `/${CASHBOX}/%d/`\r\n\r\nexport const TRANSACTION = 'finance/transaction'\r\nexport const TRANSACTION_CREATE = `/${TRANSACTION}/`\r\nexport const TRANSACTION_LIST = `/${TRANSACTION}/`\r\nexport const TRANSACTION_ITEM = `/${TRANSACTION}/%d/`\r\nexport const TRANSACTION_SEND = '/transfer/'\r\nexport const TRANSACTION_DELETE = `/${TRANSACTION}/%d/`\r\n\r\nexport const CLIENT_TRANSACTION = 'sales/client_transaction'\r\nexport const CLIENT_TRANSACTION_CREATE = `/${CLIENT_TRANSACTION}/`\r\nexport const CLIENT_TRANSACTION_LIST = `/${CLIENT_TRANSACTION}/`\r\nexport const CLIENT_TRANSACTION_ITEM = `/${CLIENT_TRANSACTION}/%d/`\r\nexport const CLIENT_TRANSACTION_SEND = '/transfer/'\r\nexport const CLIENT_TRANSACTION_DELETE = `/${CLIENT_TRANSACTION}/%d/`\r\n\r\nexport const SUPPLY = 'stock/supply'\r\nexport const SUPPLY_CREATE = `/${SUPPLY}/`\r\nexport const SUPPLY_LIST = `/${SUPPLY}/`\r\nexport const SUPPLY_ITEM = `/${SUPPLY}/%d/`\r\nexport const SUPPLY_DEFECT = `/${SUPPLY}/%d/product_detail/%d/`\r\nexport const SUPPLY_DELETE = `/${SUPPLY}/cancel/`\r\n\r\nexport const PRICES = 'market/discount'\r\nexport const PRICES_CREATE = `/${PRICES}/`\r\nexport const PRICES_LIST = `/${PRICES}/`\r\nexport const PRICES_ITEM = `/${PRICES}/%d/`\r\nexport const PRICES_DELETE = `/${PRICES}/%d/`\r\n\r\nexport const ORDER = 'sales/order'\r\nexport const ORDER_CREATE = `/${ORDER}/`\r\nexport const ORDER_RETURN = 'order_return/'\r\nexport const ORDER_RETURN_LIST = 'order_return/%d/'\r\nexport const ORDER_TRANSACTION = 'order_payment'\r\nexport const ORDER_LIST = `/${ORDER}/`\r\nexport const ORDER_ITEM = `/${ORDER}/%d/`\r\nexport const ORDER_DELETE = `/${ORDER}/%d/`\r\nexport const GET_DOCUMENT = 'order_document/%d/'\r\n\r\nexport const SUPPLY_EXPENSE = 'stock/supply_expanse'\r\nexport const SUPPLY_EXPENSE_CREATE = `/${SUPPLY_EXPENSE}/`\r\nexport const SUPPLY_EXPENSE_LIST = `/${SUPPLY_EXPENSE}/`\r\nexport const SUPPLY_EXPENSE_ITEM = `/${SUPPLY_EXPENSE}/%d/`\r\nexport const SUPPLY_EXPENSE_DELETE = `/${SUPPLY_EXPENSE}/%d/`\r\n\r\nexport const PRODUCT = 'main/product'\r\nexport const PRODUCT_CREATE = `/${PRODUCT}/`\r\nexport const PRODUCT_LIST = `/${PRODUCT}/`\r\nexport const PRODUCT_ITEM = `/${PRODUCT}/%d/`\r\nexport const PRODUCT_DELETE = `/${PRODUCT}/%d/`\r\nexport const PRODUCT_EXTRA = 'sales/products_extra_list/'\r\nexport const PRODUCT_INGREDIENT = 'main/product/%d/ingredient_list/'\r\n\r\nexport const PRODUCT_PRICE = 'main/product'\r\nexport const PRODUCT_PRICE_CREATE = `/${PRODUCT_PRICE}/`\r\nexport const PRODUCT_PRICE_LIST = `/${PRODUCT_PRICE}/`\r\nexport const PRODUCT_PRICE_ITEM = `/${PRODUCT_PRICE}/%d/`\r\nexport const PRODUCT_PRICE_SET = `/${PRODUCT_PRICE}/%d/set_price/`\r\nexport const PRODUCT_PRICE_DELETE = `/${PRODUCT_PRICE}/%d/`\r\n\r\nexport const PRODUCT_TYPE = 'main/product_type'\r\nexport const PRODUCT_TYPE_CREATE = `/${PRODUCT_TYPE}/`\r\nexport const PRODUCT_TYPE_LIST = `/${PRODUCT_TYPE}/`\r\nexport const PRODUCT_TYPE_ITEM = `/${PRODUCT_TYPE}/%d/`\r\nexport const PRODUCT_TYPE_DELETE = `/${PRODUCT_TYPE}/%d/`\r\n\r\nexport const BRAND = 'main/brand'\r\nexport const BRAND_CREATE = `/${BRAND}/`\r\nexport const BRAND_LIST = `/${BRAND}/`\r\nexport const BRAND_ITEM = `/${BRAND}/%d/`\r\nexport const BRAND_DELETE = `/${BRAND}/%d/`\r\n\r\nexport const INGREDIENT = 'ingredients'\r\nexport const INGREDIENT_CREATE = `/${INGREDIENT}/`\r\nexport const INGREDIENT_LIST = 'main/product/%d/ingredient_list/'\r\nexport const INGREDIENT_ITEM = `/${INGREDIENT}/%d/`\r\nexport const INGREDIENT_DELETE = `/${INGREDIENT}/%d/`\r\n\r\nexport const FILE_UPLOAD = '/main/file/'\r\n\r\nexport const MANUFACTURE = 'manufacture/manufacturing'\r\nexport const MANUFACTURE_CREATE = `/${MANUFACTURE}/`\r\nexport const MANUFACTURE_LIST = `/${MANUFACTURE}/`\r\nexport const MANUFACTURE_ITEM = `/${MANUFACTURE}/%d/`\r\n\r\nexport const NOTIFICATIONS = 'notification/notifications'\r\nexport const NOTIFICATIONS_LIST = `/${NOTIFICATIONS}/`\r\nexport const NOTIFICATIONS_ITEM = `/${NOTIFICATIONS}/%d/`\r\nexport const NOTIFICATIONS_DELETE = `/${NOTIFICATIONS}/%d/`\r\nexport const NOTIFICATIONS_GET_NOT_VIEWED = 'notification/notifications/get_not_viewed'\r\n\r\nexport const SHIFT = 'staff/shift'\r\nexport const SHIFT_CREATE = `/${SHIFT}/`\r\nexport const SHIFT_LIST = `/${SHIFT}/`\r\nexport const SHIFT_ITEM = `/${SHIFT}/%d/`\r\nexport const SHIFT_DELETE = `/${SHIFT}/%d/`\r\n\r\nexport const USER_SHIFT = 'staff/user_shift'\r\nexport const USER_SHIFT_CREATE = `/${USER_SHIFT}/`\r\nexport const USER_SHIFT_LIST = `/${USER_SHIFT}/`\r\nexport const USER_SHIFT_ITEM = `/${USER_SHIFT}/%d/`\r\nexport const USER_SHIFT_DELETE = `/${USER_SHIFT}/%d/`\r\n\r\nexport const PENDING_EXPENSES = 'stock/supply_expanse'\r\nexport const PENDING_EXPENSES_UPDATE = '/transactions/expanse_cashbox/'\r\nexport const PENDING_EXPENSES_LIST = `/${PENDING_EXPENSES}/`\r\nexport const PENDING_EXPENSES_ITEM = `/${PENDING_EXPENSES}/%d/`\r\n\r\nexport const STATSTOCK = 'stock/stock'\r\nexport const STATSTOCK_CREATE = `/${STATSTOCK}/`\r\nexport const STATSTOCK_LIST = `/${STATSTOCK}/`\r\nexport const STATSTOCK_ITEM = `/${STATSTOCK}/%d/`\r\nexport const STATSTOCK_DELETE = `/${STATSTOCK}/%d/`\r\nexport const STATSTOCK_DATA = '/stock/stock_stat/'\r\nexport const STATSTOCK_GET_DOCUMENT = 'stock/stock/export_balances/'\r\n\r\nexport const REMAINDER_STOCK = 'stock/stock'\r\nexport const REMAINDER_STOCK_CREATE = `/${REMAINDER_STOCK}/all_balances/`\r\nexport const REMAINDER_STOCK_LIST = `/${REMAINDER_STOCK}/all_balances/`\r\nexport const REMAINDER_STOCK_ITEM = `/${REMAINDER_STOCK}/all_balances/balances/%d`\r\nexport const REMAINDER_STOCK_DELETE = `/${REMAINDER_STOCK}/all_balances/%d`\r\n\r\nexport const TRANSACTION_STOCK = 'stock/barcode_history'\r\nexport const TRANSACTION_STOCK_LIST = `/${TRANSACTION_STOCK}/`\r\n\r\nexport const STATDEBTORS = 'sales/debtors'\r\nexport const STATDEBTORS_CREATE = `/${STATDEBTORS}/`\r\nexport const STATDEBTORS_LIST = `/${STATDEBTORS}/`\r\nexport const STATDEBTORS_ORDER_LIST = 'sales/order/'\r\nexport const STATDEBTORS_SUM = '/sales/debtors_statistics/'\r\nexport const STATDEBTORS_ITEM = `/${STATDEBTORS}/%d/`\r\nexport const STATDEBTORS_DELETE = `/${STATDEBTORS}/%d/`\r\nexport const STATDEBTORS_GET_DOCUMENT = 'sales/debtors_statistics/'\r\n\r\nexport const PENDING_PAYMENTS = 'sales/order_payment'\r\nexport const PENDING_PAYMENTS_CREATE = `/${PENDING_PAYMENTS}/`\r\nexport const PENDING_PAYMENTS_LIST = `/${PENDING_PAYMENTS}/`\r\nexport const PENDING_PAYMENTS_ITEM = `/${PENDING_PAYMENTS}/%d/`\r\n\r\nexport const STAT_MANUFACTURE = 'manufacture/manufacturing'\r\nexport const STAT_MANUFACTURE_CREATE = `/${STAT_MANUFACTURE}/`\r\nexport const STAT_MANUFACTURE_LIST = `/${STAT_MANUFACTURE}/`\r\nexport const STAT_MANUFACTURE_ITEM = `/${STAT_MANUFACTURE}/%d/`\r\nexport const STAT_MANUFACTURE_DELETE = `/${STAT_MANUFACTURE}/%d/`\r\n\r\nexport const STAT_CASHBOX = 'finance/cashbox'\r\nexport const STAT_CASHBOX_CREATE = `/${STAT_CASHBOX}/`\r\nexport const STAT_CASHBOX_LIST = `/${STAT_CASHBOX}/`\r\nexport const STAT_CASHBOX_ITEM = `/${STAT_CASHBOX}/%d/`\r\nexport const STAT_CASHBOX_DELETE = `/${STAT_CASHBOX}/%d/`\r\n\r\nexport const MANUFACTURE_PRODUCT = 'manufacture/create_ingredient'\r\nexport const MANUFACTURE_PRODUCT_CREATE = `/${MANUFACTURE_PRODUCT}/`\r\nexport const MANUFACTURE_PRODUCT_LIST = `/${MANUFACTURE_PRODUCT}/`\r\nexport const MANUFACTURE_PRODUCT_DELETE = '/delete_ingredient/%d/'\r\nexport const MANUFACTURE_PRODUCT_CHANGE = '/main/product/%d/change_manufacture/'\r\n\r\nexport const SHIPMENT = 'manufacture/shipment_statistics/'\r\nexport const SHIPMENT_LIST = `/${SHIPMENT}/`\r\nexport const SHIPMENT_ITEM = 'manufacture/shipment_details/%d/'\r\n\r\nexport const MARKET_TYPE = 'market/market_type'\r\nexport const MARKET_TYPE_CREATE = `/${MARKET_TYPE}/`\r\nexport const MARKET_TYPE_LIST = `/${MARKET_TYPE}/`\r\nexport const MARKET_TYPE_ITEM = `/${MARKET_TYPE}/%d/`\r\nexport const MARKET_TYPE_DELETE = `/${MARKET_TYPE}/%d/`\r\n\r\nexport const ZONE = 'market/border'\r\nexport const ZONE_CREATE = `/${ZONE}/`\r\nexport const ZONE_LIST = `/${ZONE}/`\r\nexport const ZONE_ITEM = `/${ZONE}/%d/`\r\nexport const ZONE_DELETE = `/${ZONE}/%d/`\r\nexport const ZONE_STAT = `/${ZONE}/statistics/`\r\n\r\nexport const PRICE = 'main/product'\r\nexport const PRICE_CREATE = `/${PRODUCT}/`\r\nexport const PRICE_LIST = `/${PRODUCT}/`\r\nexport const PRICE_ITEM = `/${PRODUCT}/%d/`\r\nexport const PRICE_DELETE = `/${PRODUCT}/%d/`\r\n\r\nexport const PRICE_LIST_ITEM = 'sales/price_list_item'\r\nexport const PRICE_LIST_ITEM_HISTORY = 'stock/supply_product_history/%d/'\r\nexport const PRICE_LIST_ITEM_LIST = `/${PRICE_LIST_ITEM}/`\r\nexport const PRICE_LIST_ITEM_ADD = `/${PRICE_LIST_ITEM}/add_items/`\r\n\r\nexport const TRACKING = 'dist/border'\r\n\r\nexport const REMAINDER = 'main/product'\r\nexport const REMAINDER_LIST = `/${REMAINDER}/`\r\nexport const REMAINDER_ITEM = `/${REMAINDER}/%d/`\r\n\r\nexport const STATISTICS = 'main/product'\r\nexport const STATISTICS_LIST = `/${STATISTICS}/`\r\nexport const STATISTICS_ITEM = `/${STATISTICS}/%d/`\r\n\r\nexport const REMAINDER_DELETE = `/${REMAINDER}/%d/`\r\n\r\nexport const STOCK_RECEIVE = 'stock/supply'\r\nexport const STOCK_HISTORY = 'stock/barcode_history'\r\nexport const STOCK_HISTORY_LIST = `/${STOCK_HISTORY}/`\r\nexport const STOCK_TRANSFER = 'stock/stock_transfer'\r\nexport const STOCK_TRANSFER_LIST = `/${STOCK_TRANSFER}/`\r\nexport const STOCK_TRANSFER_ITEM = `/${STOCK_TRANSFER}/%d/`\r\nexport const STOCK_RECEIVE_LIST = `/${STOCK_RECEIVE}/`\r\nexport const STOCK_RECEIVE_ITEM = `/${STOCK_RECEIVE}/%d/`\r\nexport const STOCK_RECEIVE_CREATE = `/${STOCK_RECEIVE}/%d/product_detail/%d/`\r\nexport const STOCK_BARCODE_LIST = STOCK_RECEIVE_CREATE\r\n\n\n\n// WEBPACK FOOTER //\n// src/constants/api.js","import axios from 'axios'\nimport {API_URL} from '../constants/api'\nimport * as storageHelper from '../helpers/storage'\nimport {hashHistory} from 'react-router'\nimport * as ROUTES from '../constants/routes'\n\nconst axiosRequest = () => {\n    const TOKEN = storageHelper.getToken()\n    const UNAUTHORIZATE_STATUS = 401\n    const NORM_STATUS_BEGIN = 200\n    const NORM_STATUS_END = 300\n    axios.defaults.baseURL = API_URL\n\n    if (TOKEN) {\n        axios.defaults.headers.common.Authorization = `Token ${TOKEN}`\n        axios.defaults.headers.common['cache-control'] = 'no-cache'\n        axios.defaults.validateStatus = (status) => {\n            if (status === UNAUTHORIZATE_STATUS) {\n                axios.defaults.headers.common.Authorization = ''\n                storageHelper.removeToken()\n                hashHistory.push(ROUTES.SIGN_IN)\n            }\n            return status >= NORM_STATUS_BEGIN && status < NORM_STATUS_END\n        }\n    }\n\n    return axios\n}\n\nexport default axiosRequest\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/axios.js","import _ from 'lodash'\n\nconst toCamelCase = (data) => {\n    if (_.isArray(data)) {\n        return _.map(data, (item) => toCamelCase(item))\n    }\n\n    if (_.isObject(data)) {\n        return _\n            .chain(data)\n            .mapKeys((value, key) => _.camelCase(key))\n            .mapValues((value) => toCamelCase(value))\n            .value()\n    }\n\n    return data\n}\n\nexport default toCamelCase\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/toCamelCase.js","import TextField from './Basic/TextField'\r\nimport CheckBox from './Basic/CheckBox'\r\nimport DateToDateField from './Basic/DateToDateField'\r\nimport SearchField from './Basic/SearchField'\r\nimport LocationField from './Basic/LocationField'\r\nimport CategorySearchField from './CategorySearchField'\r\nimport UsersSearchField from './Users/UsersSearchField'\r\nimport ProductTypeSearchField from './Product/ProductTypeSearchField'\r\nimport BrandSearchField from './BrandSearchField'\r\nimport MeasurementSearchField from './MeasurementSearchField'\r\nimport CurrencySearchField from './CurrencySearchField'\r\nimport ProviderSearchField from './Provider/ProviderSearchField'\r\nimport ClientSearchField from './Client/ClientSearchField'\r\nimport StockSearchField from './Stock/StockSearchField'\r\nimport ImageUploadField from './Basic/ImageUploadField'\r\nimport DateField from './Basic/DateField'\r\nimport TimeField from './Basic/TimeField'\r\nimport ProductSearchField from './Product/ProductSearchField'\r\nimport SupplyListProductField from './Supply/SupplyListProductField'\r\nimport PricesListProductField from './PricesListProductField'\r\nimport OrderListReturnField from './Order/OrderListReturnField'\r\nimport OrderListProductField from './Order/OrderListProductField'\r\nimport ExpensiveCategorySearchField from './ExpensiveCategorySearchField'\r\nimport PaymentTypeSearchField from './PaymentTypeSearchField'\r\nimport StockTypeSearchField from './Stock/StockTypeSearchField'\r\nimport CashboxSearchField from './CashboxSearchField'\r\nimport DeliveryTypeSearchField from './DeliveryTypeSearchField'\r\nimport ManufactureSearchField from './Manufacture/ManufactureSearchField'\r\nimport ManufactureListMaterialField from './Manufacture/ManufactureListMaterialField'\r\nimport ProviderContactsField from './Provider/ProviderContactsField'\r\nimport ClientContactsField from './Client/ClientContactsField'\r\nimport UsersGroupSearchField from './Users/UsersGroupSearchField'\r\nimport TransactionTypeSearchField from './TransactionTypeSearchField'\r\nimport ProductMeasurementField from './Product/ProductMeasurementField'\r\nimport ShiftSearchField from './ShiftSearchField'\r\nimport CashboxCustomField from './PendingPayments/CashboxCustomField'\r\nimport VisitFrequencySearchField from './Shop/VisitFrequencySearchField'\r\nimport ShopStatusSearchField from './Shop/ShopStatusSearchField'\r\nimport DealTypeSearchField from './DealTypeSearchField'\r\nimport MarketTypeSearchField from './Shop/MarketTypeSearchField'\r\nimport MarketSearchField from './MarketSearchField'\r\nimport StockReceiveProductSearchField from './StockReceive/StockReceiveProductSearchField'\r\n\r\nexport {\r\n    ShiftSearchField,\r\n    ProductMeasurementField,\r\n    TransactionTypeSearchField,\r\n    UsersGroupSearchField,\r\n    ClientContactsField,\r\n    ManufactureListMaterialField,\r\n    OrderListProductField,\r\n    OrderListReturnField,\r\n    DeliveryTypeSearchField,\r\n    ManufactureSearchField,\r\n    ProductSearchField,\r\n    DateField,\r\n    TimeField,\r\n    CheckBox,\r\n    TextField,\r\n    DateToDateField,\r\n    LocationField,\r\n    SearchField,\r\n    CategorySearchField,\r\n    UsersSearchField,\r\n    ProductTypeSearchField,\r\n    BrandSearchField,\r\n    MeasurementSearchField,\r\n    ImageUploadField,\r\n    CurrencySearchField,\r\n    ProviderSearchField,\r\n    ClientSearchField,\r\n    StockSearchField,\r\n    SupplyListProductField,\r\n    ExpensiveCategorySearchField,\r\n    ProviderContactsField,\r\n    PaymentTypeSearchField,\r\n    StockTypeSearchField,\r\n    CashboxSearchField,\r\n    CashboxCustomField,\r\n    VisitFrequencySearchField,\r\n    PricesListProductField,\r\n    ShopStatusSearchField,\r\n    MarketTypeSearchField,\r\n    MarketSearchField,\r\n    DealTypeSearchField,\r\n    StockReceiveProductSearchField\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/index.js","/**\r\n * Action Types\r\n */\r\nexport const SIGN_IN = 'SIGN_IN'\r\n\r\nexport const SHOP_LIST = 'SHOP_LIST'\r\nexport const SHOP_ITEM = 'SHOP_ITEM'\r\nexport const SHOP_UPDATE = 'SHOP_UPDATE'\r\nexport const SHOP_CREATE = 'SHOP_CREATE'\r\nexport const SHOP_DELETE = 'SHOP_DELETE'\r\nexport const SHOP_ITEM_ADD_IMAGE = 'SHOP_ITEM_ADD_IMAGE'\r\nexport const SHOP_ITEM_SHOW_IMAGE = 'SHOP_ITEM_SHOW_IMAGE'\r\n\r\nexport const CONFIG = 'CONFIG'\r\n\r\nexport const USERS_LIST = 'USERS_LIST'\r\nexport const USERS_ITEM = 'USERS_ITEM'\r\nexport const USERS_UPDATE = 'USERS_UPDATE'\r\nexport const USERS_CREATE = 'USERS_CREATE'\r\nexport const USERS_DELETE = 'USERS_DELETE'\r\n\r\nexport const CASHBOX_LIST = 'CASHBOX_LIST'\r\nexport const CASHBOX_ITEM = 'CASHBOX_ITEM'\r\nexport const CASHBOX_UPDATE = 'CASHBOX_UPDATE'\r\nexport const CASHBOX_CREATE = 'CASHBOX_CREATE'\r\nexport const CASHBOX_DELETE = 'CASHBOX_DELETE'\r\n\r\nexport const TRANSACTION_LIST = 'TRANSACTION_LIST'\r\nexport const TRANSACTION_ITEM = 'TRANSACTION_ITEM'\r\nexport const TRANSACTION_UPDATE = 'TRANSACTION_UPDATE'\r\nexport const TRANSACTION_UPDATE_INCOME = 'TRANSACTION_UPDATE_INCOME'\r\nexport const TRANSACTION_CREATE = 'TRANSACTION_CREATE'\r\nexport const TRANSACTION_INCOME = 'TRANSACTION_INCOME'\r\nexport const TRANSACTION_EXPENSE = 'TRANSACTION_EXPENSE'\r\nexport const TRANSACTION_SEND = 'TRANSACTION_SEND'\r\nexport const TRANSACTION_DELETE = 'TRANSACTION_DELETE'\r\n\r\nexport const CLIENT_TRANSACTION_LIST = 'CLIENT_TRANSACTION_LIST'\r\nexport const CLIENT_TRANSACTION_ITEM = 'CLIENT_TRANSACTION_ITEM'\r\nexport const CLIENT_TRANSACTION_UPDATE = 'CLIENT_TRANSACTION_UPDATE'\r\nexport const CLIENT_TRANSACTION_CREATE = 'CLIENT_TRANSACTION_CREATE'\r\nexport const CLIENT_TRANSACTION_EXPENSE = 'CLIENT_TRANSACTION_EXPENSE'\r\nexport const CLIENT_TRANSACTION_INCOME = 'CLIENT_TRANSACTION_INCOME'\r\nexport const CLIENT_TRANSACTION_SEND = 'CLIENT_TRANSACTION_SEND'\r\nexport const CLIENT_TRANSACTION_DELETE = 'CLIENT_TRANSACTION_DELETE'\r\n\r\nexport const SUPPLY_LIST = 'SUPPLY_LIST'\r\nexport const SUPPLY_ITEM = 'SUPPLY_ITEM'\r\nexport const SUPPLY_UPDATE = 'SUPPLY_UPDATE'\r\nexport const SUPPLY_CREATE = 'SUPPLY_CREATE'\r\nexport const SUPPLY_DELETE = 'SUPPLY_DELETE'\r\nexport const SUPPLY_DEFECT = 'SUPPLY_DEFECT'\r\n\r\nexport const PRICES_LIST = 'PRICES_LIST'\r\nexport const PRICES_LIST_CSV = 'PRICES_LIST_CSV'\r\nexport const PRICES_ITEM = 'PRICES_ITEM'\r\nexport const PRICES_UPDATE = 'PRICES_UPDATE'\r\nexport const PRICES_CREATE = 'PRICES_CREATE'\r\nexport const PRICES_DELETE = 'PRICES_DELETE'\r\n\r\nexport const ORDER_LIST = 'ORDER_LIST'\r\nexport const ORDER_ITEM = 'ORDER_ITEM'\r\nexport const ORDER_TRANSACTION = 'ORDER_TRANSACTION'\r\nexport const ORDER_UPDATE = 'ORDER_UPDATE'\r\nexport const ORDER_CREATE = 'ORDER_CREATE'\r\nexport const ORDER_DELETE = 'ORDER_DELETE'\r\nexport const ORDER_RETURN = 'ORDER_RETURN'\r\nexport const ORDER_RETURN_LIST = 'ORDER_RETURN_LIST'\r\nexport const GET_DOCUMENT = 'GET_DOCUMENT'\r\n\r\nexport const SUPPLY_EXPENSE_LIST = 'SUPPLY_EXPENSE_LIST'\r\nexport const SUPPLY_EXPENSE_ITEM = 'SUPPLY_EXPENSE_ITEM'\r\nexport const SUPPLY_EXPENSE_UPDATE = 'SUPPLY_EXPENSE_UPDATE'\r\nexport const SUPPLY_EXPENSE_CREATE = 'SUPPLY_EXPENSE_CREATE'\r\nexport const SUPPLY_EXPENSE_DELETE = 'SUPPLY_EXPENSE_DELETE'\r\n\r\nexport const PRODUCT_LIST = 'PRODUCT_LIST'\r\nexport const PRODUCT_UPDATE = 'PRODUCT_UPDATE'\r\nexport const PRODUCT_CREATE = 'PRODUCT_CREATE'\r\nexport const PRODUCT_ITEM = 'PRODUCT_ITEM'\r\nexport const PRODUCT_DELETE = 'PRODUCT_DELETE'\r\nexport const PRODUCT_MEASUREMENT = 'PRODUCT_MEASUREMENT'\r\nexport const PRODUCT_EXTRA = 'PRODUCT_EXTRA'\r\n\r\nexport const PRODUCT_PRICE_LIST = 'PRODUCT_PRICE_LIST'\r\nexport const PRODUCT_PRICE_UPDATE = 'PRODUCT_PRICE_UPDATE'\r\nexport const PRODUCT_PRICE_CREATE = 'PRODUCT_PRICE_CREATE'\r\nexport const PRODUCT_PRICE_DELETE = 'PRODUCT_PRICE_DELETE'\r\nexport const PRODUCT_PRICE_ITEM = 'PRODUCT_PRICE_ITEM'\r\n\r\nexport const PRODUCT_TYPE_LIST = 'PRODUCT_TYPE_LIST'\r\nexport const PRODUCT_TYPE_ITEM = 'PRODUCT_TYPE_ITEM'\r\nexport const PRODUCT_TYPE_UPDATE = 'PRODUCT_TYPE_UPDATE'\r\nexport const PRODUCT_TYPE_CREATE = 'PRODUCT_TYPE_CREATE'\r\nexport const PRODUCT_TYPE_DELETE = 'PRODUCT_TYPE_DELETE'\r\n\r\nexport const INGREDIENT_LIST = 'INGREDIENT_LIST'\r\nexport const INGREDIENT_ITEM = 'INGREDIENT_ITEM'\r\nexport const INGREDIENT_UPDATE = 'INGREDIENT_UPDATE'\r\nexport const INGREDIENT_CREATE = 'INGREDIENT_CREATE'\r\nexport const INGREDIENT_DELETE = 'INGREDIENT_DELETE'\r\n\r\nexport const CATEGORY_LIST = 'CATEGORY_LIST'\r\nexport const CATEGORY_ITEM = 'CATEGORY_ITEM'\r\nexport const CATEGORY_UPDATE = 'CATEGORY_UPDATE'\r\nexport const CATEGORY_CREATE = 'CATEGORY_CREATE'\r\nexport const CATEGORY_DELETE = 'CATEGORY_DELETE'\r\n\r\nexport const EQUIPMENT_LIST = 'EQUIPMENT_LIST'\r\nexport const EQUIPMENT_ITEM = 'EQUIPMENT_ITEM'\r\nexport const EQUIPMENT_UPDATE = 'EQUIPMENT_UPDATE'\r\nexport const EQUIPMENT_CREATE = 'EQUIPMENT_CREATE'\r\nexport const EQUIPMENT_DELETE = 'EQUIPMENT_DELETE'\r\n\r\nexport const STOCK_LIST = 'STOCK_LIST'\r\nexport const STOCK_ITEM = 'STOCK_ITEM'\r\nexport const STOCK_UPDATE = 'STOCK_UPDATE'\r\nexport const STOCK_CREATE = 'STOCK_CREATE'\r\nexport const STOCK_DELETE = 'STOCK_DELETE'\r\n\r\nexport const STATSTOCK_LIST = 'STATSTOCK_LIST'\r\nexport const STATSTOCK_ITEM = 'STATSTOCK_ITEM'\r\nexport const STATSTOCK_UPDATE = 'STATSTOCK_UPDATE'\r\nexport const STATSTOCK_CREATE = 'STATSTOCK_CREATE'\r\nexport const STATSTOCK_DELETE = 'STATSTOCK_DELETE'\r\nexport const STATSTOCK_DATA = 'STATSTOCK_DATA'\r\nexport const STATSTOCK_GET_DOCUMENT = 'STATSTOCK_GET_DOCUMENT'\r\n\r\nexport const REMAINDER_STOCK_LIST = 'REMAINDER_STOCK_LIST'\r\nexport const REMAINDER_STOCK_ITEM = 'REMAINDER_STOCK_ITEM'\r\nexport const REMAINDER_STOCK_UPDATE = 'REMAINDER_STOCK_UPDATE'\r\nexport const REMAINDER_STOCK_CREATE = 'REMAINDER_STOCK_CREATE'\r\nexport const REMAINDER_STOCK_DELETE = 'REMAINDER_STOCK_DELETE'\r\n\r\nexport const TRANSACTION_STOCK_LIST = 'TRANSACTION_STOCK_LIST'\r\nexport const TRANSACTION_STOCK_UPDATE = 'TRANSACTION_STOCK_UPDATE'\r\nexport const TRANSACTION_STOCK_CREATE = 'TRANSACTION_STOCK_CREATE'\r\n\r\nexport const MEASUREMENT_LIST = 'MEASUREMENT_LIST'\r\nexport const MEASUREMENT_ITEM = 'MEASUREMENT_ITEM'\r\nexport const MEASUREMENT_UPDATE = 'MEASUREMENT_UPDATE'\r\nexport const MEASUREMENT_CREATE = 'MEASUREMENT_CREATE'\r\nexport const MEASUREMENT_DELETE = 'MEASUREMENT_DELETE'\r\n\r\nexport const EXPENSIVE_CATEGORY_LIST = 'EXPENSIVE_CATEGORY_LIST'\r\nexport const EXPENSIVE_CATEGORY_ITEM = 'EXPENSIVE_CATEGORY_ITEM'\r\nexport const EXPENSIVE_CATEGORY_UPDATE = 'EXPENSIVE_CATEGORY_UPDATE'\r\nexport const EXPENSIVE_CATEGORY_CREATE = 'EXPENSIVE_CATEGORY_CREATE'\r\nexport const EXPENSIVE_CATEGORY_DELETE = 'EXPENSIVE_CATEGORY_DELETE'\r\n\r\nexport const BRAND_LIST = 'BRAND_LIST'\r\nexport const BRAND_ITEM = 'BRAND_ITEM'\r\nexport const BRAND_UPDATE = 'BRAND_UPDATE'\r\nexport const BRAND_CREATE = 'BRAND_CREATE'\r\nexport const BRAND_DELETE = 'BRAND_DELETE'\r\n\r\nexport const PROVIDER_LIST = 'PROVIDER_LIST'\r\nexport const PROVIDER_ITEM = 'PROVIDER_ITEM'\r\nexport const PROVIDER_CONTACTS = 'PROVIDER_CONTACTS'\r\nexport const PROVIDER_UPDATE = 'PROVIDER_UPDATE'\r\nexport const PROVIDER_CREATE = 'PROVIDER_CREATE'\r\nexport const PROVIDER_DELETE = 'PROVIDER_DELETE'\r\n\r\nexport const CLIENT_LIST = 'CLIENT_LIST'\r\nexport const CLIENT_ITEM = 'CLIENT_ITEM'\r\nexport const CLIENT_CONTACTS = 'CLIENT_CONTACTS'\r\nexport const CLIENT_UPDATE = 'CLIENT_UPDATE'\r\nexport const CLIENT_CREATE = 'CLIENT_CREATE'\r\nexport const CLIENT_DELETE = 'CLIENT_DELETE'\r\n\r\nexport const CURRENCY_LIST = 'CURRENCY_LIST'\r\nexport const CURRENCY_ITEM = 'CURRENCY_ITEM'\r\nexport const CURRENCY_UPDATE = 'CURRENCY_UPDATE'\r\nexport const CURRENCY_CREATE = 'CURRENCY_CREATE'\r\nexport const CURRENCY_DELETE = 'CURRENCY_DELETE'\r\nexport const CURRENCY_PRIMARY = 'CURRENCY_PRIMARY'\r\nexport const CURRENCY_PRIMARY_UPDATE = 'CURRENCY_PRIMARY_UPDATE'\r\nexport const SET_CURRENCY_UPDATE = 'SET_CURRENCY_UPDATE'\r\n\r\nexport const SNACKBAR = 'SNACKBAR'\r\nexport const SNACKBAR_OPEN = `${SNACKBAR}_OPEN`\r\nexport const SNACKBAR_CLOSE = `${SNACKBAR}_CLOSE`\r\n\r\nexport const MANUFACTURE_LIST = 'MANUFACTURE_LIST'\r\nexport const MANUFACTURE_ITEM = 'MANUFACTURE_ITEM'\r\nexport const MANUFACTURE_UPDATE = 'MANUFACTURE_UPDATE'\r\nexport const MANUFACTURE_CREATE = 'MANUFACTURE_CREATE'\r\n\r\nexport const NOTIFICATIONS_LIST = 'NOTIFICATIONS_LIST'\r\nexport const NOTIFICATIONS_ITEM = 'NOTIFICATIONS_ITEM'\r\nexport const NOTIFICATIONS_DELETE = 'NOTIFICATIONS_DELETE'\r\nexport const NOTIFICATIONS_TIME_INTERVAL = 'NOTIFICATIONS_TIME_INTERVAL'\r\n\r\nexport const SHIFT_LIST = 'SHIFT_LIST'\r\nexport const SHIFT_ITEM = 'SHIFT_ITEM'\r\nexport const SHIFT_UPDATE = 'SHIFT_UPDATE'\r\nexport const SHIFT_CREATE = 'SHIFT_CREATE'\r\nexport const SHIFT_DELETE = 'SHIFT_DELETE'\r\n\r\nexport const USER_SHIFT_LIST = 'USER_SHIFT_LIST'\r\nexport const USER_SHIFT_ITEM = 'USER_SHIFT_ITEM'\r\nexport const USER_SHIFT_UPDATE = 'USER_SHIFT_UPDATE'\r\nexport const USER_SHIFT_CREATE = 'USER_SHIFT_CREATE'\r\nexport const USER_SHIFT_DELETE = 'USER_SHIFT_DELETE'\r\n\r\nexport const PENDING_EXPENSES_LIST = 'PENDING_EXPENSES_LIST'\r\nexport const PENDING_EXPENSES_ITEM = 'PENDING_EXPENSES_ITEM'\r\nexport const PENDING_EXPENSES_UPDATE = 'PENDING_EXPENSES_UPDATE'\r\nexport const PENDING_EXPENSES_CREATE = 'PENDING_EXPENSES_CREATE'\r\nexport const PENDING_EXPENSES_DELETE = 'PENDING_EXPENSES_DELETE'\r\n\r\nexport const PENDING_PAYMENTS_LIST = 'PENDING_PAYMENTS_LIST'\r\nexport const PENDING_PAYMENTS_ITEM = 'PENDING_PAYMENTS_ITEM'\r\nexport const PENDING_PAYMENTS_UPDATE = 'PENDING_PAYMENTS_UPDATE'\r\nexport const PENDING_PAYMENTS_CREATE = 'PENDING_PAYMENTS_CREATE'\r\nexport const PENDING_PAYMENTS_DELETE = 'PENDING_PAYMENTS_DELETE'\r\n\r\nexport const STATDEBTORS_LIST = 'STATDEBTORS_LIST'\r\nexport const STATDEBTORS_ORDER_LIST = 'STATDEBTORS_ORDER_LIST'\r\nexport const STATDEBTORS_SUM = 'STATDEBTORS_SUM'\r\nexport const STATDEBTORS_ITEM = 'STATDEBTORS_ITEM'\r\nexport const STATDEBTORS_UPDATE = 'STATDEBTORS_UPDATE'\r\nexport const STATDEBTORS_CREATE = 'STATDEBTORS_CREATE'\r\nexport const STATDEBTORS_DELETE = 'STATDEBTORS_DELETE'\r\nexport const STATDEBTORS_GET_DOCUMENT = 'STATDEBTORS_GET_DOCUMENT'\r\n\r\nexport const STAT_MANUFACTURE_LIST = 'STAT_MANUFACTURE_LIST'\r\nexport const STAT_MANUFACTURE_ITEM = 'STAT_MANUFACTURE_ITEM'\r\nexport const STAT_MANUFACTURE_UPDATE = 'STAT_MANUFACTURE_UPDATE'\r\nexport const STAT_MANUFACTURE_CREATE = 'STAT_MANUFACTURE_CREATE'\r\nexport const STAT_MANUFACTURE_DELETE = 'STAT_MANUFACTURE_DELETE'\r\n\r\nexport const STAT_CASHBOX_LIST = 'STAT_CASHBOX_LIST'\r\nexport const STAT_CASHBOX_ITEM = 'STAT_CASHBOX_ITEM'\r\nexport const STAT_CASHBOX_UPDATE = 'STAT_CASHBOX_UPDATE'\r\nexport const STAT_CASHBOX_CREATE = 'STAT_CASHBOX_CREATE'\r\nexport const STAT_CASHBOX_DELETE = 'STAT_CASHBOX_DELETE'\r\n\r\nexport const MANUFACTURE_PRODUCT_CREATE = 'MANUFACTURE_PRODUCT_CREATE'\r\nexport const MANUFACTURE_PRODUCT_DELETE = 'MANUFACTURE_PRODUCT_DELETE'\r\nexport const MANUFACTURE_PRODUCT_CHANGE = 'MANUFACTURE_PRODUCT_CHANGE'\r\n\r\nexport const SHIPMENT_LIST = 'SHIPMENT_LIST'\r\nexport const SHIPMENT_ITEM = 'SHIPMENT_ITEM'\r\n\r\nexport const MARKET_TYPE_LIST = 'MARKET_TYPE_LIST'\r\nexport const MARKET_TYPE_ITEM = 'MARKET_TYPE_ITEM'\r\nexport const MARKET_TYPE_UPDATE = 'MARKET_TYPE_UPDATE'\r\nexport const MARKET_TYPE_CREATE = 'MARKET_TYPE_CREATE'\r\nexport const MARKET_TYPE_DELETE = 'MARKET_TYPE_DELETE'\r\n\r\nexport const PRICE_LIST = 'PRICE_LIST'\r\nexport const PRICE_UPDATE = 'PRICE_UPDATE'\r\nexport const PRICE_CREATE = 'PRICE_CREATE'\r\nexport const PRICE_ITEM = 'PRICE_ITEM'\r\nexport const PRICE_DELETE = 'PRICE_DELETE'\r\nexport const PRICE_LIST_CSV = 'PRICE_LIST_CSV'\r\nexport const PRICE_LIST_ITEM_LIST = 'PRICE_LIST_ITEM_LIST'\r\n\r\nexport const ZONE_LIST = 'ZONE_LIST'\r\nexport const ZONE_ITEM = 'ZONE_ITEM'\r\nexport const ZONE_UPDATE = 'ZONE_UPDATE'\r\nexport const ZONE_CREATE = 'ZONE_CREATE'\r\nexport const ZONE_DELETE = 'ZONE_DELETE'\r\nexport const ZONE_STAT = 'ZONE_STAT'\r\n\r\nexport const TRACKING_LIST = 'TRACKING_LIST'\r\nexport const TRACKING_ITEM = 'TRACKING_ITEM'\r\n\r\nexport const REMAINDER_LIST = 'REMAINDER_LIST'\r\nexport const REMAINDER_ITEM = 'REMAINDER_ITEM'\r\n\r\nexport const STATISTICS_LIST = 'REMAINDER_LIST'\r\nexport const STATISTICS_ITEM = 'REMAINDER_ITEM'\r\n\r\nexport const REMAINDER_UPDATE = 'REMAINDER_UPDATE'\r\nexport const REMAINDER_CREATE = 'REMAINDER_CREATE'\r\nexport const REMAINDER_DELETE = 'REMAINDER_DELETE'\r\n\r\nexport const STOCK_RECEIVE_LIST = 'STOCK_RECEIVE_LIST'\r\nexport const STOCK_TRANSFER_LIST = 'STOCK_TRANSFER_LIST'\r\nexport const STOCK_TRANSFER_ITEM = 'STOCK_TRANSFER_ITEM'\r\nexport const STOCK_HISTORY_LIST = 'STOCK_HISTORY_LIST'\r\nexport const STOCK_RECEIVE_ITEM = 'STOCK_RECEIVE_ITEM'\r\nexport const STOCK_RECEIVE_CREATE = 'STOCK_RECEIVE_CREATE'\r\nexport const STOCK_BARCODE_LIST = 'STOCK_BARCODE_LIST'\r\n\n\n\n// WEBPACK FOOTER //\n// src/constants/actionTypes.js","import CloseIcon2 from './CloseIcon2'\n\nexport default CloseIcon2\n\n\n\n// WEBPACK FOOTER //\n// src/components/CloseIcon2/index.js","import Container from './Container'\n\nexport default Container\n\n\n\n// WEBPACK FOOTER //\n// src/components/Container/index.js","import _ from 'lodash'\n\nexport const orderingSnakeCase = (ordering) => {\n    return _\n        .chain(ordering)\n        .split(',')\n        .map((item) => {\n            const trans = _.chain(item).split('.').map(_.snakeCase).join('__')\n            return _.startsWith(item, '-') ? '-' + trans : trans\n        })\n        .join(',')\n        .value()\n}\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/serializer.js","import Layout from './Layout'\n\nexport default Layout\n\n\n\n// WEBPACK FOOTER //\n// src/components/Layout/index.js","const MainStyles = {\n    test: {\n        padding: '10px'\n    },\n    dashedLink: {\n        borderBottom: '1px dashed'\n    },\n    lightBlueBg: {\n        background: '#f1f5f8',\n        color: '#333'\n    },\n    dottedList: {\n\n    },\n    // MODAL\n    body: {\n        overflowY: 'hidden !important',\n        fontSize: '13px !important',\n        position: 'relative',\n        padding: '0 !important',\n        overflowX: 'hidden',\n        minHeight: '317px !important'\n    },\n    popUp: {\n        overflowY: 'hidden !important',\n        fontSize: '13px !important',\n        position: 'relative',\n        padding: '0 !important',\n        overflowX: 'hidden',\n        height: '100%'\n    },\n    titleContent: {\n        background: '#fff',\n        color: '#333',\n        fontWeight: 'bold',\n        textTransform: 'uppercase',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        borderBottom: '1px solid #efefef',\n        padding: '20px 30px',\n        zIndex: '999',\n        '& button': {\n            right: '13px',\n            padding: '0 !important',\n            position: 'absolute !important'\n        }\n    },\n    inContent: {\n        display: 'flex',\n        maxHeight: '50vh',\n        minHeight: '184px',\n        overflow: 'auto',\n        padding: '0 30px',\n        color: '#333'\n    },\n    bodyContent: {\n        width: '100%'\n    },\n    form: {\n        position: 'relative'\n    },\n    field: {\n        width: '100%'\n    },\n    inputField: {\n        fontSize: '13px !important',\n        height: '45px !important',\n        marginTop: '7px',\n        '& div': {\n            fontSize: '13px !important'\n        },\n        '& label': {\n            top: '20px !important',\n            lineHeight: '5px !important'\n        },\n        '& input': {\n            marginTop: '0 !important'\n        }\n    },\n    bottomButton: {\n        bottom: '0',\n        left: '0',\n        right: '0',\n        padding: '10px',\n        zIndex: '999',\n        borderTop: '1px solid #efefef',\n        background: '#fff',\n        textAlign: 'right',\n        '& span': {\n            fontSize: '13px !important',\n            fontWeight: '600 !important',\n            color: '#129fdd',\n            verticalAlign: 'inherit !important'\n        }\n    },\n    inputFieldCustom: {\n        fontSize: '13px !important',\n        height: '45px !important',\n        marginTop: '7px',\n        '& div': {\n            fontSize: '13px !important'\n        },\n        '& label': {\n            top: '20px !important',\n            lineHeight: '5px !important'\n        },\n        '& input': {\n            marginTop: '0 !important'\n        }\n    },\n    inputDateCustom: {\n        fontSize: '13px !important',\n        height: '45px !important',\n        marginTop: '7px',\n        '& div': {\n            fontSize: '13px !important'\n        },\n        '& label': {\n            top: '20px !important',\n            lineHeight: '5px !important'\n        },\n        '& input': {\n            marginTop: '0 !important'\n        },\n        '& div:first-child': {\n            height: '45px !important'\n        }\n    },\n    actionButton: {\n        fontSize: '13px !important',\n        margin: '0 !important'\n    }\n    // GRID LIST\n\n}\n\nexport default MainStyles\n\n\n\n// WEBPACK FOOTER //\n// src/components/Styles/MainStyles.js","import SubMenu from './SubMenu'\n\nexport default SubMenu\n\n\n\n// WEBPACK FOOTER //\n// src/components/SubMenu/index.js","import _ from 'lodash'\nimport {hashHistory} from 'react-router'\nimport sprintf from 'sprintf'\n\nconst filter = (data, pathname, query = {}) => {\n    const params = query\n    const first = 1\n    const defaultPageRange = 10\n    const currentPage = _.toInteger(_.get(params, 'page') || first)\n    const pageRange = _.toInteger(_.get(params, 'pageSize') || defaultPageRange)\n    const itemsCount = _.get(data, 'count')\n\n    const pageCount = Math.ceil(itemsCount / pageRange)\n\n    const getParam = (paramName) => _.get(params, paramName)\n\n    const getParams = (newParams) => _.assign({}, params, newParams)\n\n    const getSelects = () => {\n        return _\n            .chain(getParam('select'))\n            .split(',')\n            .filter(item => item)\n            .map((item) => _.toInteger(item))\n            .value()\n    }\n\n    const paramsToQueryUrl = (paramsItems) => {\n        if (_.isEmpty(paramsItems)) {\n            return null\n        }\n\n        const url = _\n            .chain(paramsItems)\n            .keys()\n            .map((key) => {\n                return {\n                    key: key,\n                    value: paramsItems[key]\n                }\n            })\n            .filter((item) => !_.isEmpty(item.value) || _.isNumber(item.value))\n            .map((item) => {\n                return sprintf('%s=%s', item.key, encodeURIComponent(item.value))\n            })\n            .reduce((result, item) => {\n                return sprintf('%s&%s', result, item)\n            })\n            .value()\n\n        return url ? '?' + url : null\n    }\n\n    const createURL = (newParams) => {\n        const queryUrl = paramsToQueryUrl(_.assign({}, params, newParams))\n        return queryUrl ? pathname + queryUrl : pathname\n    }\n\n    const prevPage = () => {\n        const prevPageNumber = currentPage - first\n        if (currentPage <= first) {\n            return null\n        }\n\n        return createURL({page: prevPageNumber})\n    }\n\n    const nextPage = () => {\n        const nextPageNumber = currentPage + first\n        if (pageCount < nextPageNumber) {\n            return null\n        }\n        return createURL({page: nextPageNumber})\n    }\n\n    const getSortingType = (columnSortingName) => {\n        const currentOrdering = _.get(params, 'ordering')\n\n        const columnType = _\n            .chain(currentOrdering)\n            .split(',')\n            .filter((item) => !_.isEmpty(item))\n            .map((column) => ({column: _.trimStart(column, '-'), desc: _.startsWith(column, '-')}))\n            .find({column: columnSortingName})\n            .get('desc')\n            .value()\n\n        return _.isUndefined(columnType) ? null : columnType\n    }\n\n    const sortingURL = (columnSortingName) => {\n        const currentOrdering = _.get(params, 'ordering')\n        const columnList = _\n            .chain(currentOrdering)\n            .split(',')\n            .filter((item) => !_.isEmpty(item))\n            .map((column) => ({column: _.trimStart(column, '-'), desc: _.startsWith(column, '-')}))\n            .value()\n\n        const columnSortingType = _\n            .chain(columnList)\n            .find({column: columnSortingName})\n            .get('desc')\n            .value()\n\n        const columnSortingDesc = _.isUndefined(columnSortingType) ? false : (columnSortingType ? null : true)\n\n        const ordering = _\n            .chain(columnList)\n            .filter((item) => item.column !== columnSortingName)\n            .union([{column: columnSortingName, desc: columnSortingDesc}])\n            .filter((item) => !_.isNull(_.get(item, 'desc')))\n            .map((item) => {\n                return _.get(item, 'desc') ? '-' + _.get(item, 'column') : _.get(item, 'column')\n            })\n            .join(',')\n            .value()\n\n        return createURL({ordering})\n    }\n\n    const getCounts = () => itemsCount\n\n    const getPageRange = () => pageRange\n\n    const getCurrentPage = () => currentPage\n\n    const pageItemList = () => _.range(first, pageCount + first)\n\n    const hasPagination = () => pageCount > first\n\n    const filterRequest = () => {\n        return paramsToQueryUrl(_.assign({}, params, {\n            select: null,\n            openFilterDialog: null,\n            openCreateDialog: null,\n            openSendDialog: null,\n            openDefectDialog: null,\n            openPriceSupplyDialog: null,\n            openMapDialog: null,\n            openAddPhoto: null,\n            openImagesDialog: null,\n            tab: null,\n            openCreateIncomeDialog: null,\n            openPriceSetFrom: null,\n            shipmentId: null,\n            openShowBigImg: null,\n            openIncomeDialog: null,\n            openTransactionsDialog: null,\n            openShortageDialog: null,\n            openOrderItemReturnDialog: null,\n            openSupplyExpenseCreateDialog: null,\n            openReturnDialog: null,\n            openSetCurrencyDialog: null,\n            openHistoryDialog: null,\n            openDeleteDialog: null,\n            openUpdateDialog: null\n        }))\n    }\n\n    const filterBy = (newParams) => {\n        hashHistory.push({\n            pathname,\n            query: {\n                ...params,\n                page: first,\n                ...newParams\n            }\n        })\n    }\n\n    return {\n        getParam,\n        getParams,\n        getCounts,\n        getPageRange,\n        getCurrentPage,\n        getSortingType,\n        getSelects,\n        sortingURL,\n        filterBy,\n        filterRequest,\n        createURL,\n        prevPage,\n        nextPage,\n        pageItemList,\n        hasPagination\n    }\n}\n\nexport default filter\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/filter.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionDelete = function ActionDelete(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z' })\n  );\n};\nActionDelete = (0, _pure2.default)(ActionDelete);\nActionDelete.displayName = 'ActionDelete';\nActionDelete.muiName = 'SvgIcon';\n\nexports.default = ActionDelete;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/delete.js\n// module id = 46\n// module chunks = 0","import GridList from './GridList'\n\nexport default GridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/index.js","import ToolTip from './ToolTip'\n\nexport default ToolTip\n\n\n\n// WEBPACK FOOTER //\n// src/components/ToolTip/index.js","const numberFormat = (amount, suffix) => {\n    const formatter = new Intl.NumberFormat('ru-RU')\n    const ZERO_NUM = 0\n    return ((amount) ? formatter.format(amount) : ZERO_NUM) + ' ' + (suffix || '')\n}\n\nexport default numberFormat\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/numberFormat.js","/* globals JSON */\nconst toBoolean = (str) => {\n    return (str === 'true')\n}\n\nexport default toBoolean\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/toBoolean.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {compose, withPropsOnChange, withReducer} from 'recompose'\nimport MUIAutoComplete from 'material-ui/AutoComplete'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport excludeObjKey from '../../../helpers/excludeObjKey'\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\n\nconst DELAY_FOR_TYPE_ATTACK = 300\n\nconst fetchList = ({state, dispatch, getOptions, getText, getValue}) => {\n    dispatch({loading: true})\n\n    getOptions(state.text)\n        .then((data) => {\n            return _.map(data, (item) => {\n                return {\n                    text: getText(item),\n                    value: getValue(item)\n                }\n            })\n        })\n        .then((data) => {\n            dispatch({dataSource: data, loading: false})\n        })\n}\n\nconst fetchItem = (props) => {\n    const {dispatch, getItem, getItemText} = props\n    const id = _.get(props, ['input', 'value', 'value'])\n\n    id && getItem(id)\n        .then(data => {\n            return getItemText(data)\n        })\n        .then(data => dispatch({text: data}))\n}\n\nconst errorStyle = {\n    textAlign: 'left',\n    bottom: '5px'\n}\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            position: 'relative',\n            width: '100%'\n        },\n        icon: {\n            position: 'absolute',\n            right: '0',\n            top: '20px'\n        }\n    }),\n\n    withReducer('state', 'dispatch', (state, action) => {\n        return {...state, ...action}\n    }, {dataSource: [], text: '', loading: false}),\n\n    withPropsOnChange((props, nextProps) => {\n        return _.get(props, ['state', 'text']) !== _.get(nextProps, ['state', 'text'])\n    }, (props) => _.debounce(fetchList, DELAY_FOR_TYPE_ATTACK)(props)),\n\n    withPropsOnChange((props, nextProps) => {\n        const value = _.get(props, ['input', 'value', 'value'])\n        const nextValue = _.get(nextProps, ['input', 'value', 'value'])\n        return nextValue && value !== nextValue\n    }, (props) => fetchItem(props))\n)\n\nconst SearchField = enhance((props) => {\n    const {\n        classes,\n        input,\n        label,\n        meta: {error},\n        state,\n        dispatch,\n        ...defaultProps\n    } = props\n\n    const autoCompleteProps = excludeObjKey(defaultProps, [\n        'sheet', 'getText', 'getValue', 'getOptions', 'getItem', 'getItemText'\n    ])\n    const inputAutoComplete = excludeObjKey(input, ['value', 'onChange'])\n\n    return (\n        <div className={classes.wrapper}>\n            <MUIAutoComplete\n                errorText={error}\n                searchText={state.text}\n                errorStyle={errorStyle}\n                floatingLabelText={label}\n                dataSource={state.dataSource}\n                dataSourceConfig={{text: 'text', value: 'value'}}\n                onUpdateInput={value => dispatch({text: value})}\n                onNewRequest={value => input.onChange(value)}\n                openOnFocus={true}\n                filter={() => true}\n                {...inputAutoComplete}\n                {...autoCompleteProps}\n            />\n            {!state.loading && <div className={classes.icon}>\n                <KeyboardArrowDown style={{color: '#ccc', height: '20px', width: '20px'}}/>\n            </div>}\n            {state.loading && <div className={classes.icon}>\n                <CircularProgress size={20} thickness={2} />\n            </div>}\n        </div>\n    )\n})\n\nSearchField.defaultGetText = (text) => {\n    return (obj) => {\n        return _.get(obj, text)\n    }\n}\n\nSearchField.defaultGetValue = (value) => {\n    return (obj) => {\n        return _.get(obj, value)\n    }\n}\n\nSearchField.propTypes = {\n    getText: PropTypes.func.isRequired,\n    getValue: PropTypes.func.isRequired,\n    getOptions: PropTypes.func.isRequired,\n    getItemText: PropTypes.func.isRequired,\n    getItem: PropTypes.func.isRequired\n}\n\nexport default SearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Basic/SearchField.js","import * as actionTypes from '../constants/actionTypes'\n\nexport const openSnackbarAction = (payload) => {\n    return {\n        type: actionTypes.SNACKBAR_OPEN,\n        payload\n    }\n}\n\nexport const closeSnackbarAction = () => {\n    return {\n        type: actionTypes.SNACKBAR_CLOSE\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/snackbar.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ContentAdd = function ContentAdd(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z' })\n  );\n};\nContentAdd = (0, _pure2.default)(ContentAdd);\nContentAdd.displayName = 'ContentAdd';\nContentAdd.muiName = 'SvgIcon';\n\nexports.default = ContentAdd;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/content/add.js\n// module id = 55\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ImageEdit = function ImageEdit(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z' })\n  );\n};\nImageEdit = (0, _pure2.default)(ImageEdit);\nImageEdit.displayName = 'ImageEdit';\nImageEdit.muiName = 'SvgIcon';\n\nexports.default = ImageEdit;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/image/edit.js\n// module id = 61\n// module chunks = 0","import ConfirmDialog from './ConfirmDialog'\n\nexport default ConfirmDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/ConfirmDialog/index.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar EditorModeEdit = function EditorModeEdit(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z' })\n  );\n};\nEditorModeEdit = (0, _pure2.default)(EditorModeEdit);\nEditorModeEdit.displayName = 'EditorModeEdit';\nEditorModeEdit.muiName = 'SvgIcon';\n\nexports.default = EditorModeEdit;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/editor/mode-edit.js\n// module id = 64\n// module chunks = 0","import CloseIcon from './CloseIcon'\n\nexport default CloseIcon\n\n\n\n// WEBPACK FOOTER //\n// src/components/CloseIcon/index.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar EditorBorderColor = function EditorBorderColor(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M17.75 7L14 3.25l-10 10V17h3.75l10-10zm2.96-2.96c.39-.39.39-1.02 0-1.41L18.37.29c-.39-.39-1.02-.39-1.41 0L15 2.25 18.75 6l1.96-1.96z' }),\n    _react2.default.createElement('path', { fillOpacity: '.36', d: 'M0 20h24v4H0z' })\n  );\n};\nEditorBorderColor = (0, _pure2.default)(EditorBorderColor);\nEditorBorderColor.displayName = 'EditorBorderColor';\nEditorBorderColor.muiName = 'SvgIcon';\n\nexports.default = EditorBorderColor;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/editor/border-color.js\n// module id = 77\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar NavigationMoreVert = function NavigationMoreVert(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z' })\n  );\n};\nNavigationMoreVert = (0, _pure2.default)(NavigationMoreVert);\nNavigationMoreVert.displayName = 'NavigationMoreVert';\nNavigationMoreVert.muiName = 'SvgIcon';\n\nexports.default = NavigationMoreVert;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/navigation/more-vert.js\n// module id = 78\n// module chunks = 0","import _ from 'lodash'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\n\nconst getStorage = (local) => {\n    return local ? localStorage : sessionStorage\n}\n\nconst setConfigs = (configs) => {\n    const storage = getStorage(false)\n\n    _.forIn(configs, (value, key) => {\n        storage.setItem(key, value)\n    })\n}\n\nconst getConfig = (text) => {\n    if (getStorage(false).getItem(text)) {\n        return getStorage(false).getItem(text)\n    }\n    axios()\n        .get(API.CONFIG)\n        .then((response) => {\n            setConfigs(_.get(response, 'data'))\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return getStorage(false).getItem(text)\n}\n\nexport default getConfig\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/getConfig.js","/* eslint no-invalid-this: 0 */\n/* eslint no-undefined: 0 */\n\nimport _ from 'lodash'\nimport moment from 'moment'\nimport React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\nimport DatePickerDialog from 'material-ui/DatePicker/DatePickerDialog'\nimport MUITextField from 'material-ui/TextField'\nimport DateRange from 'material-ui/svg-icons/action/date-range'\n\nconst DELAY = 300\n\nclass DateToDateField extends React.Component {\n    datePicker = null\n\n    constructor (props) {\n        super(props)\n        this.state = {\n            starting: false\n        }\n    }\n\n    handleOnFocus = () => {\n        _.delay(() => this.datePicker.show(), DELAY)\n    }\n\n    handleOnAccept = (value) => {\n        const {input} = this.props\n        const fromDate = _.get(input, ['value', 'fromDate'])\n\n        if (!fromDate || !this.state.starting) {\n            input.onChange({fromDate: moment(value)})\n            this.setState({starting: true})\n            _.delay(() => this.datePicker.show(), DELAY)\n        } else {\n            input.onChange({\n                fromDate: _.get(input, ['value', 'fromDate']),\n                toDate: moment(value)\n            })\n            this.setState({starting: false})\n        }\n    }\n\n    textField = () => {\n        const {input, format} = this.props\n        const fromDate = _.get(input, ['value', 'fromDate'])\n        const toDate = _.get(input, ['value', 'toDate'])\n\n        if (fromDate && !toDate) {\n            return moment(fromDate).format(format)\n        }\n\n        if (fromDate && toDate) {\n            return moment(fromDate).format(format) + ' - ' + moment(toDate).format(format)\n        }\n\n        return ''\n    }\n\n    getMinDate = () => {\n        const {input} = this.props\n        const fromDate = _.get(input, ['value', 'fromDate'])\n        const toDate = _.get(input, ['value', 'toDate'])\n\n        if (fromDate && !toDate) {\n            return fromDate.toDate()\n        }\n\n        return undefined\n    }\n\n    render () {\n        const {label, classes, meta: {error}} = this.props\n\n        return (\n            <div className={classes.wrapper}>\n                <div style={{position: 'relative'}}>\n                    <DatePickerDialog\n                        ref={(element) => {\n                            this.datePicker = element\n                        }}\n                        minDate={this.getMinDate()}\n                        onAccept={this.handleOnAccept}\n                        firstDayOfWeek={0}\n                    />\n                    <div className={classes.icon}>\n                        <DateRange />\n                    </div>\n                    <MUITextField\n                        errorText={error}\n                        floatingLabelText={label}\n                        onFocus={this.handleOnFocus}\n                        value={this.textField()}\n                        className={classes.inputDateCustom}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nDateToDateField.defaultProps = {\n    format: 'DD.MM.YYYY'\n}\n\nDateToDateField.propTypes = {\n    format: PropTypes.string\n}\n\nexport default injectSheet({\n    icon: {\n        position: 'absolute',\n        right: '0',\n        top: '19px',\n        '& svg': {\n            color: '#ccc !important',\n            height: '20px !important',\n            width: '20px !important'\n        }\n    },\n    inputDateCustom: {\n        fontSize: '13px !important',\n        height: '45px !important',\n        marginTop: '7px',\n        width: '100% !important',\n        '& div': {\n            fontSize: '13px !important'\n        },\n        '& label': {\n            top: '20px !important',\n            lineHeight: '5px !important'\n        },\n        '& input': {\n            marginTop: '0 !important'\n        },\n        '& div:first-child': {\n            height: '45px !important'\n        },\n        '& div:first-child div:first-child': {\n            transform: 'translate(0px, 0px) !important'\n        }\n    }\n})(DateToDateField)\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Basic/DateToDateField.js","module.exports = __webpack_public_path__ + \"601310d230b1f1e491b8ef41fc42036a.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Images/dot.png\n// module id = 99\n// module chunks = 0","import React from 'react'\nimport MUITextField from 'material-ui/TextField'\n\nconst errorStyle = {\n    textAlign: 'left',\n    bottom: '5px'\n}\n\nconst TextField = ({input, label, meta: {error}, ...defaultProps}) => {\n    return (\n        <MUITextField\n            errorText={error}\n            errorStyle={errorStyle}\n            floatingLabelText={label}\n            {...input}\n            {...defaultProps}\n        />\n    )\n}\n\nexport default TextField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Basic/TextField.js","module.exports = __webpack_public_path__ + \"cff0e167f036f041ca4bcbdf1149e52c.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Images/not-found.png\n// module id = 120\n// module chunks = 0","import DeleteDialog, {DELETE_DIALOG_OPEN} from './DeleteDialog'\n\nexport {DELETE_DIALOG_OPEN}\nexport default DeleteDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/DeleteDialog/index.js","import DeleteIcon from './DeleteIcon'\n\nexport default DeleteIcon\n\n\n\n// WEBPACK FOOTER //\n// src/components/DeleteIcon/index.js","const normalizeNumber = value => {\n    if (!value) {\n        return value\n    }\n\n    const onlyNums = value.replace(/[^\\d]/g, '')\n    return onlyNums.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')\n}\n\nexport default normalizeNumber\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/normalizers/normalizeNumber.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/orderSerializer'\r\nimport * as returnSerializers from '../serializers/orderReturnSerializer'\r\nimport fileDownload from 'react-file-download'\r\n\r\nexport const orderCreateAction = (formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n\r\n    const payload = axios()\r\n        .post(API.ORDER_CREATE, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.ORDER_CREATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const orderReturnAction = (formValues, detail) => {\r\n    const requestData = returnSerializers.createSerializer(formValues, detail)\r\n    const payload = axios()\r\n        .post(API.ORDER_RETURN, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.ORDER_RETURN,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const orderReturnListAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.ORDER_RETURN_LIST, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.ORDER_RETURN_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const orderDeleteAction = (id) => {\r\n    const payload = axios()\r\n        .delete(sprintf(API.ORDER_DELETE, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.ORDER_DELETE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const orderUpdateAction = (id, formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .put(sprintf(API.ORDER_ITEM, id), requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.ORDER_UPDATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const orderListFetchAction = (filter) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams())\r\n    const payload = axios()\r\n        .get(API.ORDER_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.ORDER_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const orderTransactionFetchAction = (orderId) => {\r\n    const payload = axios()\r\n        .get(API.ORDER_TRANSACTION, {params: {'order': orderId}})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.ORDER_TRANSACTION,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const orderItemReturnFetchAction = (orderId) => {\r\n    const payload = axios()\r\n        .get(API.ORDER_RETURN, {params: {'order': orderId}})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.ORDER_RETURN,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const orderItemFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.ORDER_ITEM, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.ORDER_ITEM,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const getDocumentAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.GET_DOCUMENT, id))\r\n        .then((response) => {\r\n            fileDownload(response.data, 'договор.pdf')\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.GET_DOCUMENT,\r\n        payload\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/order.js","import GridListNavPagination from './GridListNavPagination'\n\nexport default GridListNavPagination\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridListNavPagination/index.js","import sprintf from 'sprintf'\nimport _ from 'lodash'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\nimport axios from '../../../helpers/axios'\nimport * as PATH from '../../../constants/api'\nimport toCamelCase from '../../../helpers/toCamelCase'\nimport * as actionTypes from '../../../constants/actionTypes'\nimport {connect} from 'react-redux'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.PRODUCT_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst setMeasurementAction = (data, loading) => {\n    return {\n        type: actionTypes.PRODUCT_MEASUREMENT,\n        data: data,\n        loading: loading\n    }\n}\n\nconst getItem = (id, dispatch) => {\n    dispatch(setMeasurementAction(null, true))\n    return axios().get(sprintf(PATH.PRODUCT_ITEM, id))\n        .then(({data}) => {\n            dispatch(setMeasurementAction(_.get(data, ['measurement', 'name']), false))\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst ProductSearchField = connect()((props) => {\n    const {dispatch, ...defaultProps} = props\n    const test = (id) => {\n        return getItem(id, dispatch)\n    }\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={test}\n            getItemText={SearchField.defaultGetText('name')}\n            {...defaultProps}\n        />\n    )\n})\n\nexport default ProductSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Product/ProductSearchField.js","import sprintf from 'sprintf'\r\nimport React from 'react'\r\nimport SearchField from '../Basic/SearchField'\r\nimport axios from '../../../helpers/axios'\r\nimport * as PATH from '../../../constants/api'\r\nimport toCamelCase from '../../../helpers/toCamelCase'\r\n\r\nconst getOptions = (search) => {\r\n    return axios().get(`${PATH.PRODUCT_TYPE_LIST}?search=${search || ''}`)\r\n        .then(({data}) => {\r\n            return Promise.resolve(toCamelCase(data.results))\r\n        })\r\n}\r\n\r\nconst getItem = (id) => {\r\n    return axios().get(sprintf(PATH.PRODUCT_TYPE_ITEM, id))\r\n        .then(({data}) => {\r\n            return Promise.resolve(toCamelCase(data))\r\n        })\r\n}\r\nconst ProductTypeSearchField = (props) => {\r\n    return (\r\n        <SearchField\r\n            getValue={SearchField.defaultGetValue('id')}\r\n            getText={SearchField.defaultGetText('name')}\r\n            getOptions={getOptions}\r\n            getItem={getItem}\r\n            getItemText={SearchField.defaultGetText('name')}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ProductTypeSearchField\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Product/ProductTypeSearchField.js","import React from 'react'\r\nimport injectSheet from 'react-jss'\r\nimport {compose} from 'recompose'\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            padding: '20px 30px',\r\n            '& .row': {\r\n                margin: '0rem !important',\r\n                '& div': {\r\n                    lineHeight: '55px'\r\n                }\r\n            }\r\n        },\r\n        ul: {\r\n            fontWeight: '600'\r\n        },\r\n        li: {\r\n            paddingLeft: '20px',\r\n            paddingTop: '18px',\r\n            fontWeight: '500'\r\n        }\r\n    })\r\n)\r\n\r\nconst StatSideMenu = enhance((props) => {\r\n    const {classes} = props\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <ul className={classes.ul}>\r\n                Продажи\r\n                <li className={classes.li}>\r\n                    Агенты\r\n                </li>\r\n                <li className={classes.li}>\r\n                    Магазины\r\n                </li>\r\n                <li className={classes.li}>\r\n                    Товары\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n})\r\n\r\nStatSideMenu.propTypes = {\r\n\r\n}\r\n\r\nexport default StatSideMenu\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Statistics/StatSideMenu.js","import _ from 'lodash'\n\nexport const GOOGLE_API_HOST = 'maps.googleapis.com'\nexport const GOOGLE_API_VERSION = '3.exp'\nexport const GOOGLE_USE_LIBRARY = ['geometry', 'drawing', 'places']\nexport const GOOGLE_API_KEY = 'AIzaSyC4R6AN7SmujjPUIGKdyao2Kqitzr1kiRg'\nexport const GOOGLE_API_URL = `https://${GOOGLE_API_HOST}/maps/api/js?v=${GOOGLE_API_VERSION}&libraries=${_.join(GOOGLE_USE_LIBRARY, ',')}&key=${GOOGLE_API_KEY}`\nexport const DEFAULT_LOCATION = {\n    lat: 41.3076492,\n    lng: 69.2705497\n}\n\n\n\n// WEBPACK FOOTER //\n// src/constants/googleMaps.js","module.exports = __webpack_public_path__ + \"668c8e03dd163ffcc3155b258f7d01dd.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Images/groceries.svg\n// module id = 207\n// module chunks = 0","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/clientSerializer'\r\n\r\nexport const clientCreateAction = (formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .post(API.CLIENT_CREATE, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.CLIENT_CREATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const clientDeleteAction = (id) => {\r\n    const payload = axios()\r\n        .delete(sprintf(API.CLIENT_DELETE, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.CLIENT_DELETE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const clientUpdateAction = (id, formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .put(sprintf(API.CLIENT_ITEM, id), requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.CLIENT_UPDATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const clientListFetchAction = (filter) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams())\r\n    const payload = axios()\r\n        .get(API.CLIENT_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.CLIENT_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const clientItemFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.CLIENT_ITEM, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.CLIENT_ITEM,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/client.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport {Field, FieldArray, reduxForm, SubmissionError} from 'redux-form'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport {TextField} from '../ReduxForm'\r\nimport ClientContactsListField from '../ReduxForm/Client/ClientContactsListField'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport MainStyles from '../Styles/MainStyles'\r\n\r\nexport const CLIENT_CREATE_DIALOG_OPEN = 'openCreateDialog'\r\nexport const CLIENT_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\r\n\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\r\n\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        latLng,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        },\r\n        contacts: {\r\n            background: '#f1f5f8',\r\n            color: '#333',\r\n            margin: '12px -30px 0',\r\n            padding: '20px 30px'\r\n        }\r\n    })),\r\n    reduxForm({\r\n        form: 'ClientCreateForm',\r\n        enableReinitialize: true\r\n    })\r\n)\r\n\r\nconst ClientCreateDialog = enhance((props) => {\r\n    const {open, loading, handleSubmit, onClose, classes, isUpdate} = props\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            className={classes.dialog}\r\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\r\n            bodyClassName={classes.popUp}>\r\n\r\n            <div className={classes.titleContent}>\r\n                <span>{isUpdate ? 'Изменение клиента' : 'Добавление клиента'}</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit} className={classes.form}>\r\n                    <div className={classes.loader}>\r\n                        <CircularProgress size={40} thickness={4}/>\r\n                    </div>\r\n                    <div className={classes.inContent} style={{minHeight: '300px'}}>\r\n                        <div className={classes.field} style={{padding: '10px 0 0'}}>\r\n                            <Field\r\n                                name=\"name\"\r\n                                component={TextField}\r\n                                className={classes.inputFieldCustom}\r\n                                label=\"Организация\"\r\n                                fullWidth={true}/>\r\n                            <Field\r\n                                name=\"address\"\r\n                                component={TextField}\r\n                                className={classes.inputFieldCustom}\r\n                                label=\"Местположение\"\r\n                                fullWidth={true}/>\r\n\r\n                            <div className={classes.contacts}>\r\n                                Контактные данные\r\n                                <FieldArray\r\n                                    name=\"contacts\"\r\n                                    component={ClientContactsListField}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <FlatButton\r\n                            label=\"Сохранить\"\r\n                            className={classes.actionButton}\r\n                            primary={true}\r\n                            type=\"submit\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\n\r\nClientCreateDialog.propTypes = {\r\n    isUpdate: PropTypes.bool,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\nClientCreateDialog.defaultProps = {\r\n    isUpdate: false\r\n}\r\n\r\nexport default ClientCreateDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Client/ClientCreateDialog.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport {compose, withHandlers} from 'recompose'\r\nimport {reduxForm, Field} from 'redux-form'\r\nimport PropTypes from 'prop-types'\r\nimport injectSheet from 'react-jss'\r\nimport {Link} from 'react-router'\r\nimport Paper from 'material-ui/Paper'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport RaisedButton from 'material-ui/RaisedButton'\r\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\r\nimport {ShiftSearchField} from '../ReduxForm'\r\nimport CloseIcon from '../CloseIcon'\r\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\r\n\r\nexport const PERSON_FILTER_OPEN = 'openPersonFilterDialog'\r\n\r\nexport const PERSON_FILTER_KEY = {\r\n    SHIFT: 'shift'\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            position: 'absolute',\r\n            minWidth: '300px',\r\n            background: '#fff',\r\n            zIndex: 99,\r\n            top: 0,\r\n            left: 0,\r\n            borderRadius: 0,\r\n            padding: '10px 20px 10px 20px'\r\n        },\r\n        afterFilter: {\r\n            width: '268px',\r\n            alignItems: 'center',\r\n            display: 'flex',\r\n            backgroundColor: '#efefef',\r\n            position: 'relative',\r\n            padding: '16px 30px',\r\n            marginLeft: '-30px',\r\n            '& > div:nth-child(2)': {\r\n                position: 'absolute',\r\n                right: '0'\r\n            },\r\n            '& > div:nth-child(1)': {\r\n                color: '#666666'\r\n            },\r\n            '& button': {\r\n                borderLeft: '1px solid white !important'\r\n            }\r\n        },\r\n        icon: {\r\n            color: '#8f8f8f !important'\r\n        },\r\n        arrow: {\r\n            color: '#12aaeb',\r\n            paddingRight: '14px',\r\n            position: 'relative',\r\n            '& svg': {\r\n                position: 'absolute',\r\n                width: '13px !important',\r\n                height: '20px !important'\r\n            }\r\n        },\r\n        header: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n            '& button': {\r\n                marginRight: '-12px !important'\r\n            }\r\n        },\r\n        title: {\r\n            fontSize: '15px',\r\n            color: '#5d6474'\r\n        },\r\n        submit: {\r\n            color: '#fff !important'\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        }\r\n    }),\r\n    reduxForm({\r\n        form: 'PersonFilterForm',\r\n        enableReinitialize: true\r\n    }),\r\n    withHandlers({\r\n        getCount: props => () => {\r\n            const {filter} = props\r\n            return _(PERSON_FILTER_KEY)\r\n                .values()\r\n                .filter(item => item !== PERSON_FILTER_KEY.FROM_DATE)\r\n                .filter(item => filter.getParam(item))\r\n                .value()\r\n                .length\r\n        }\r\n    })\r\n)\r\n\r\nconst UsersFilterForm = enhance((props) => {\r\n    const {classes, filterDialog, getCount} = props\r\n    const filterCounts = getCount()\r\n\r\n    if (!filterDialog.openFilterDialog) {\r\n        if (filterCounts) {\r\n            return (\r\n                <div className={classes.afterFilter}>\r\n                    <div>Фильтр: {filterCounts} элемента</div>\r\n                    <div>\r\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                            <BorderColorIcon color=\"#8f8f8f\" />\r\n                        </IconButton>\r\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\r\n                            <CloseIcon className={classes.icon}/>\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Link\r\n                    className={classes.arrow}\r\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.wrapper} zDepth={2}>\r\n                <div className={classes.header}>\r\n                    <span className={classes.title}>Фильтр</span>\r\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\r\n                        <CloseIcon className={classes.icon} />\r\n                    </IconButton>\r\n                </div>\r\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\r\n                    <div>\r\n                        <Field className={classes.inputFieldCustom} name=\"shift\" component={ShiftSearchField} label=\"Смена\" fullWidth={true}/>\r\n                    </div>\r\n\r\n                    <RaisedButton\r\n                        type=\"submit\"\r\n                        primary={true}\r\n                        buttonStyle={{color: '#fff'}}\r\n                        label=\"Применить\"\r\n                        style={{marginTop: '15px'}}>\r\n                    </RaisedButton>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n})\r\n\r\nUsersFilterForm.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    filterDialog: PropTypes.shape({\r\n        filterLoading: PropTypes.bool.isRequired,\r\n        openFilterDialog: PropTypes.bool.isRequired,\r\n        handleOpenFilterDialog: PropTypes.func.isRequired,\r\n        handleCloseFilterDialog: PropTypes.func.isRequired,\r\n        handleSubmitFilterDialog: PropTypes.func.isRequired\r\n    })\r\n}\r\n\r\nexport default UsersFilterForm\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Manufacture/PersonFilterForm.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport {compose, withHandlers} from 'recompose'\r\nimport {reduxForm, Field} from 'redux-form'\r\nimport PropTypes from 'prop-types'\r\nimport injectSheet from 'react-jss'\r\nimport {Link} from 'react-router'\r\nimport Paper from 'material-ui/Paper'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport RaisedButton from 'material-ui/RaisedButton'\r\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\r\nimport {ProductTypeSearchField, BrandSearchField, MeasurementSearchField} from '../ReduxForm'\r\nimport CloseIcon from '../CloseIcon'\r\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\r\n\r\nexport const PRODUCT_FILTER_OPEN = 'openFilterDialog'\r\n\r\nexport const PRODUCT_FILTER_KEY = {\r\n    BRAND: 'brand',\r\n    TYPE: 'type',\r\n    MEASUREMENT: 'measurement'\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            position: 'absolute',\r\n            minWidth: '300px',\r\n            background: '#fff',\r\n            zIndex: 99,\r\n            top: 0,\r\n            left: 0,\r\n            borderRadius: 0,\r\n            padding: '10px 20px 10px 20px'\r\n        },\r\n        afterFilter: {\r\n            width: '268px',\r\n            alignItems: 'center',\r\n            display: 'flex',\r\n            backgroundColor: '#efefef',\r\n            position: 'relative',\r\n            padding: '16px 30px',\r\n            marginLeft: '-30px',\r\n            '& > div:nth-child(2)': {\r\n                position: 'absolute',\r\n                right: '0'\r\n            },\r\n            '& > div:nth-child(1)': {\r\n                color: '#666666'\r\n            },\r\n            '& button': {\r\n                borderLeft: '1px solid white !important'\r\n            }\r\n        },\r\n        icon: {\r\n            color: '#8f8f8f !important'\r\n        },\r\n        arrow: {\r\n            color: '#12aaeb',\r\n            paddingRight: '14px',\r\n            position: 'relative',\r\n            '& svg': {\r\n                position: 'absolute',\r\n                width: '13px !important',\r\n                height: '20px !important'\r\n            }\r\n        },\r\n        header: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n            '& button': {\r\n                marginRight: '-12px !important'\r\n            }\r\n        },\r\n        title: {\r\n            fontSize: '15px',\r\n            color: '#5d6474'\r\n        },\r\n        submit: {\r\n            color: '#fff !important'\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        }\r\n    }),\r\n    reduxForm({\r\n        form: 'ProductFilterForm',\r\n        enableReinitialize: true\r\n    }),\r\n    withHandlers({\r\n        getCount: props => () => {\r\n            const {filter} = props\r\n            return _(PRODUCT_FILTER_KEY)\r\n                .values()\r\n                .filter(item => item !== PRODUCT_FILTER_KEY.FROM_DATE)\r\n                .filter(item => filter.getParam(item))\r\n                .value()\r\n                .length\r\n        }\r\n    })\r\n)\r\n\r\nconst ProductFilterForm = enhance((props) => {\r\n    const {classes, filterDialog, getCount} = props\r\n    const filterCounts = getCount()\r\n\r\n    if (!filterDialog.openFilterDialog) {\r\n        if (filterCounts) {\r\n            return (\r\n                <div className={classes.afterFilter}>\r\n                    <div>Фильтр: {filterCounts} элемента</div>\r\n                    <div>\r\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                            <BorderColorIcon color=\"#8f8f8f\" />\r\n                        </IconButton>\r\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\r\n                            <CloseIcon className={classes.icon}/>\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Link\r\n                    className={classes.arrow}\r\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.wrapper} zDepth={2}>\r\n                <div className={classes.header}>\r\n                    <span className={classes.title}>Фильтр</span>\r\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\r\n                        <CloseIcon className={classes.icon} />\r\n                    </IconButton>\r\n                </div>\r\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\r\n                    <div>\r\n                        <Field className={classes.inputFieldCustom} name=\"type\" component={ProductTypeSearchField} label=\"Тип продукта\"/>\r\n                    </div>\r\n                    <div>\r\n                        <Field className={classes.inputFieldCustom} name=\"measurement\" component={MeasurementSearchField} label=\"Мера\"/>\r\n                    </div>\r\n                    <div>\r\n                        <Field className={classes.inputFieldCustom} name=\"brand\" component={BrandSearchField} label=\"Бренд\"/>\r\n                    </div>\r\n                    <RaisedButton\r\n                        type=\"submit\"\r\n                        primary={true}\r\n                        buttonStyle={{color: '#fff'}}\r\n                        label=\"Применить\"\r\n                        style={{marginTop: '15px'}}>\r\n                    </RaisedButton>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n})\r\n\r\nProductFilterForm.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    filterDialog: PropTypes.shape({\r\n        filterLoading: PropTypes.bool.isRequired,\r\n        openFilterDialog: PropTypes.bool.isRequired,\r\n        handleOpenFilterDialog: PropTypes.func.isRequired,\r\n        handleCloseFilterDialog: PropTypes.func.isRequired,\r\n        handleSubmitFilterDialog: PropTypes.func.isRequired\r\n    })\r\n}\r\n\r\nexport default ProductFilterForm\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Product/ProductFilterForm.js","import React from 'react'\nimport MUICheckbox from 'material-ui/Checkbox'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\n\nconst checkboxStyle = {\n    textAlign: 'left',\n    marginBottom: '10px',\n    marginTop: '10px'\n}\n\nconst enhance = compose(\n    injectSheet({\n        checkBox: {\n            '& svg:first-child': {\n                fill: '#666666 !important',\n                color: '#666666 !important'\n            },\n            '& svg:last-child': {\n                fill: '#666666 !important',\n                color: '#666666 !important'\n            },\n            '& span': {\n                top: '-10px !important',\n                left: '-10px !important'\n            }\n        }\n    })\n)\n\nconst Checkbox = ({classes, input, meta, label, ...defaultProps}) => (\n    <MUICheckbox\n        label={label}\n        className={classes.checkBox}\n        style={checkboxStyle}\n        iconStyle={{width: '20px', height: '20px'}}\n        labelStyle={{lineHeight: '20px', left: '-10px'}}\n        checked={Boolean(input.value)}\n        onCheck={input.onChange}\n        {...defaultProps}\n    />\n)\n\nexport default enhance(Checkbox)\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Basic/CheckBox.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\nimport axios from '../../../helpers/axios'\nimport * as PATH from '../../../constants/api'\nimport toCamelCase from '../../../helpers/toCamelCase'\nimport * as actionTypes from '../../../constants/actionTypes'\nimport {connect} from 'react-redux'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.PROVIDER_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nexport const setItemAction = (data, loading) => {\n    return {\n        type: actionTypes.PROVIDER_CONTACTS,\n        data: data,\n        loading: loading\n    }\n}\n\nconst getItem = (id, dispatch) => {\n    dispatch(setItemAction(null, true))\n\n    return axios().get(sprintf(PATH.PROVIDER_ITEM, id))\n        .then(({data}) => {\n            dispatch(setItemAction(_.get(data, 'contacts'), false))\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst ProviderSearchField = connect()((props) => {\n    const {dispatch} = props\n    const test = (id) => {\n        return getItem(id, dispatch)\n    }\n\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={test}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n})\n\nexport default ProviderSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Provider/ProviderSearchField.js","import sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\nimport axios from '../../../helpers/axios'\nimport * as PATH from '../../../constants/api'\nimport toCamelCase from '../../../helpers/toCamelCase'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.MARKET_TYPE_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst getItem = (id) => {\n    return axios().get(sprintf(PATH.MARKET_TYPE_ITEM, id))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst MarketTypeSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default MarketTypeSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Shop/MarketTypeSearchField.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\nimport axios from '../../../helpers/axios'\nimport * as PATH from '../../../constants/api'\nimport toCamelCase from '../../../helpers/toCamelCase'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.USERS_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst getItem = (id) => {\n    return axios().get(sprintf(PATH.USERS_ITEM, id))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst getText = (obj) => {\n    return _.get(obj, 'firstName') + ' ' + _.get(obj, 'secondName')\n}\n\nconst UsersSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={getText}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={getText}\n            {...props}\n        />\n    )\n}\n\nexport default UsersSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Users/UsersSearchField.js","import StatisticsGridList from './StatisticsGridList'\r\nimport StatSideMenu from './StatSideMenu'\r\nimport StatAgentGridList from './StatAgentGridList'\r\nimport StatProductGridList from './StatProductGridList'\r\nconst STAT_AGENT_DIALOG_OPEN = 'openStatAgentDialog'\r\n\r\nexport {\r\n    StatisticsGridList,\r\n    StatSideMenu,\r\n    StatAgentGridList,\r\n    StatProductGridList,\r\n    STAT_AGENT_DIALOG_OPEN\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Statistics/index.js","import _ from 'lodash'\n\nexport default function createReducer (initialState, handlers) {\n    return function reducer (state = initialState, action) {\n        if (_.has(handlers, action.type)) {\n            return handlers[action.type](state, action)\n        }\n\n        return state\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/createReducer.js","import _ from 'lodash'\nconst ZERO = 0\nconst numberWithoutSpaces = (amount) => {\n    if (amount) {\n        return _.toNumber(amount.replace(/[^\\d]/g, ''))\n    }\n    return ZERO\n}\n\nexport default numberWithoutSpaces\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/numberWithoutSpaces.js","import {TOKEN_KEY} from '../constants/storage'\n\nexport const getStorage = (local) => {\n    return local ? localStorage : sessionStorage\n}\n\nexport const getToken = () => {\n    return localStorage.getItem(TOKEN_KEY) || sessionStorage.getItem(TOKEN_KEY)\n}\n\nexport const setToken = (token, local = false) => {\n    const storage = getStorage(local)\n\n    storage.setItem(TOKEN_KEY, token)\n}\n\nexport const removeToken = () => {\n    localStorage.removeItem(TOKEN_KEY)\n    sessionStorage.removeItem(TOKEN_KEY)\n}\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/storage.js","import _ from 'lodash'\nimport toCamelCase from './toCamelCase'\nimport {SubmissionError} from 'redux-form'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n\n    throw new SubmissionError({\n        ...errors,\n        _error: nonFieldErrors\n    })\n}\n\nexport default validate\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/validate.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionAccountBalanceWallet = function ActionAccountBalanceWallet(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M21 18v1c0 1.1-.9 2-2 2H5c-1.11 0-2-.9-2-2V5c0-1.1.89-2 2-2h14c1.1 0 2 .9 2 2v1h-9c-1.11 0-2 .9-2 2v8c0 1.1.89 2 2 2h9zm-9-2h10V8H12v8zm4-2.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z' })\n  );\n};\nActionAccountBalanceWallet = (0, _pure2.default)(ActionAccountBalanceWallet);\nActionAccountBalanceWallet.displayName = 'ActionAccountBalanceWallet';\nActionAccountBalanceWallet.muiName = 'SvgIcon';\n\nexports.default = ActionAccountBalanceWallet;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/account-balance-wallet.js\n// module id = 357\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionDateRange = function ActionDateRange(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z' })\n  );\n};\nActionDateRange = (0, _pure2.default)(ActionDateRange);\nActionDateRange.displayName = 'ActionDateRange';\nActionDateRange.muiName = 'SvgIcon';\n\nexports.default = ActionDateRange;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/date-range.js\n// module id = 358\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionHome = function ActionHome(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z' })\n  );\n};\nActionHome = (0, _pure2.default)(ActionHome);\nActionHome.displayName = 'ActionHome';\nActionHome.muiName = 'SvgIcon';\n\nexports.default = ActionHome;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/home.js\n// module id = 359\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionSearch = function ActionSearch(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z' })\n  );\n};\nActionSearch = (0, _pure2.default)(ActionSearch);\nActionSearch.displayName = 'ActionSearch';\nActionSearch.muiName = 'SvgIcon';\n\nexports.default = ActionSearch;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/search.js\n// module id = 360\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _objectWithoutProperties2 = require(\"babel-runtime/helpers/objectWithoutProperties\");\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _getPrototypeOf = require(\"babel-runtime/core-js/object/get-prototype-of\");\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nexports.default = withScriptjs;\n\nvar _invariant = require(\"invariant\");\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _canUseDom = require(\"can-use-dom\");\n\nvar _canUseDom2 = _interopRequireDefault(_canUseDom);\n\nvar _reactDisplayName = require(\"react-display-name\");\n\nvar _reactDisplayName2 = _interopRequireDefault(_reactDisplayName);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar LOADING_STATE_NONE = \"NONE\";\nvar LOADING_STATE_BEGIN = \"BEGIN\";\nvar LOADING_STATE_LOADED = \"LOADED\";\n\nfunction withScriptjs(WrappedComponent) {\n  var _class, _temp2;\n\n  return _temp2 = _class = function (_Component) {\n    (0, _inherits3.default)(Container, _Component);\n\n    function Container() {\n      var _ref;\n\n      var _temp, _this, _ret;\n\n      (0, _classCallCheck3.default)(this, Container);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Container.__proto__ || (0, _getPrototypeOf2.default)(Container)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n        loadingState: LOADING_STATE_NONE\n      }, _this.isUnmounted = false, _this.handleLoaded = _this.handleLoaded.bind(_this), _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n    }\n\n    (0, _createClass3.default)(Container, [{\n      key: \"handleLoaded\",\n      value: function handleLoaded() {\n        if (this.isUnmounted) {\n          return;\n        }\n        this.setState({\n          loadingState: LOADING_STATE_LOADED\n        });\n      }\n    }, {\n      key: \"componentWillMount\",\n      value: function componentWillMount() {\n        var _props = this.props,\n            loadingElement = _props.loadingElement,\n            googleMapURL = _props.googleMapURL;\n\n        (0, _invariant2.default)(!!loadingElement && !!googleMapURL, \"Required props loadingElement or googleMapURL is missing. You need to provide both of them.\");\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var loadingState = this.state.loadingState;\n\n        if (loadingState !== LOADING_STATE_NONE || !_canUseDom2.default) {\n          return;\n        }\n        this.setState({\n          loadingState: LOADING_STATE_BEGIN\n        });\n        // Don't load scriptjs as dependency since we want this module be used on server side.\n        // eslint-disable-next-line global-require\n        var scriptjs = require(\"scriptjs\");\n        var googleMapURL = this.props.googleMapURL;\n\n        scriptjs(googleMapURL, this.handleLoaded);\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this.isUnmounted = true;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _props2 = this.props,\n            loadingElement = _props2.loadingElement,\n            googleMapURL = _props2.googleMapURL,\n            restProps = (0, _objectWithoutProperties3.default)(_props2, [\"loadingElement\", \"googleMapURL\"]);\n        var loadingState = this.state.loadingState;\n\n\n        if (loadingState === LOADING_STATE_LOADED) {\n          return _react2.default.createElement(WrappedComponent, restProps);\n        } else {\n          return loadingElement;\n        }\n      }\n    }]);\n    return Container;\n  }(_react.Component), _class.displayName = \"withScriptjs(\" + (0, _reactDisplayName2.default)(WrappedComponent) + \")\", _class.propTypes = {\n    loadingElement: _propTypes2.default.node.isRequired,\n    googleMapURL: _propTypes2.default.string.isRequired\n  }, _temp2;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-google-maps/lib/async/withScriptjs.js\n// module id = 386\n// module chunks = 0","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/cashboxSerializer'\r\n\r\nexport const cashboxCreateAction = (formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .post(API.CASHBOX_CREATE, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.CASHBOX_CREATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const cashboxDeleteAction = (id) => {\r\n    const payload = axios()\r\n        .delete(sprintf(API.CASHBOX_DELETE, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.CASHBOX_DELETE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const cashboxUpdateAction = (id, formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .put(sprintf(API.CASHBOX_ITEM, id), requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.CASHBOX_UPDATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const cashboxListFetchAction = (filter) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams())\r\n    const payload = axios()\r\n        .get(API.CASHBOX_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.CASHBOX_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const cashboxItemFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.CASHBOX_ITEM, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.CASHBOX_ITEM,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/cashbox.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/equipmentSerializer'\r\n\r\nexport const equipmentCreateAction = (formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .post(API.EQUIPMENT_CREATE, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.EQUIPMENT_CREATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const equipmentDeleteAction = (id) => {\r\n    const payload = axios()\r\n        .delete(sprintf(API.EQUIPMENT_DELETE, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.EQUIPMENT_DELETE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const equipmentUpdateAction = (id, formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .put(sprintf(API.EQUIPMENT_ITEM, id), requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.EQUIPMENT_UPDATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const equipmentListFetchAction = (filter, manufacture) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams(), manufacture)\r\n    const payload = axios()\r\n        .get(API.EQUIPMENT_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.EQUIPMENT_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const equipmentItemFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.EQUIPMENT_ITEM, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.EQUIPMENT_ITEM,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/equipment.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/marketTypeSerializer'\r\n\r\nexport const marketTypeCreateAction = (formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .post(API.MARKET_TYPE_CREATE, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.MARKET_TYPE_CREATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const marketTypeDeleteAction = (id) => {\r\n    const payload = axios()\r\n        .delete(sprintf(API.MARKET_TYPE_DELETE, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n    return {\r\n        type: actionTypes.MARKET_TYPE_DELETE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const marketTypeUpdateAction = (id, formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .put(sprintf(API.MARKET_TYPE_ITEM, id), requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.MARKET_TYPE_UPDATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const marketTypeListFetchAction = (filter) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams())\r\n    const payload = axios()\r\n        .get(API.MARKET_TYPE_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.MARKET_TYPE_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const marketTypeGetAllAction = () => {\r\n    const params = {\r\n        'page': 1,\r\n        'page_size': 100\r\n    }\r\n    const payload = axios()\r\n        .get(API.MARKET_TYPE_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.MARKET_TYPE_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const marketTypeItemFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.MARKET_TYPE_ITEM, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.MARKET_TYPE_ITEM,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/marketType.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\n\r\nexport const notificationDeleteAction = (id) => {\r\n    const payload = axios()\r\n        .delete(sprintf(API.NOTIFICATIONS_DELETE, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.NOTIFICATIONS_DELETE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const notificationListFetchAction = () => {\r\n    const payload = axios()\r\n        .get(API.NOTIFICATIONS_LIST)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.NOTIFICATIONS_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const notificationGetNotViewed = () => {\r\n    const payload = axios()\r\n        .get(API.NOTIFICATIONS_GET_NOT_VIEWED)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.NOTIFICATIONS_TIME_INTERVAL,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/notifications.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/Product/productSerializer'\r\n\r\nexport const productCreateAction = (formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .post(API.PRODUCT_CREATE, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PRODUCT_CREATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const productDeleteAction = (id) => {\r\n    const payload = axios()\r\n        .delete(sprintf(API.PRODUCT_DELETE, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PRODUCT_DELETE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const productUpdateAction = (id, formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .put(sprintf(API.PRODUCT_ITEM, id), requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PRODUCT_UPDATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const productListFetchAction = (filter, manufacture) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams(), manufacture)\r\n    const payload = axios()\r\n        .get(API.PRODUCT_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PRODUCT_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const productItemFetchAction = (id) => {\r\n    const params = {'thumbnail_type': 'large'}\r\n    const payload = axios()\r\n        .get(sprintf(API.PRODUCT_ITEM, id), {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PRODUCT_ITEM,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/product.js","import _ from 'lodash'\nimport axios from '../helpers/axios'\nimport * as storageHelper from '../helpers/storage'\nimport * as API from '../constants/api'\nimport {TOKEN_KEY} from '../constants/storage'\nimport * as actionTypes from '../constants/actionTypes'\n\nexport const setTokenAction = () => {\n    return {\n        type: `${actionTypes.SIGN_IN}_FULFILLED`,\n        payload: storageHelper.getToken()\n    }\n}\n\nexport const signInAction = (params) => {\n    const payload = axios()\n        .post(API.SIGN_IN, params)\n        .then((response) => {\n            const rememberMe = _.get(params, 'rememberMe')\n            const token = _.get(response, ['data', 'token'])\n\n            // Save token in browser storage\n            storageHelper.setToken(token, rememberMe)\n\n            return token\n        })\n        .catch((error) => {\n            const errorData = _.get(error, ['response', 'data'])\n\n            return Promise.reject(\n                errorData || {'nonFieldErrors': ['Internet connection error']}\n            )\n        })\n\n    return {\n        type: actionTypes.SIGN_IN,\n        payload\n    }\n}\n\nexport const signOutAction = () => {\n    const payload = axios().delete(API.SIGN_OUT)\n        .then(() => {\n            localStorage.removeItem(TOKEN_KEY)\n            sessionStorage.removeItem(TOKEN_KEY)\n        })\n        .catch((error) => {\n            const errorData = _.get(error, ['response', 'data'])\n            return Promise.reject(errorData)\n        })\n\n    return {\n        type: `${actionTypes.SIGN_IN}_CLEAR`,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/signIn.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport {TextField} from '../ReduxForm'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport MainStyles from '../Styles/MainStyles'\r\n\r\nexport const BRAND_CREATE_DIALOG_OPEN = 'openCreateDialog'\r\n\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\r\n\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        latLng,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        }\r\n    })),\r\n    reduxForm({\r\n        form: 'BrandCreateForm',\r\n        enableReinitialize: true\r\n    })\r\n)\r\n\r\nconst BrandCreateDialog = enhance((props) => {\r\n    const {open, loading, handleSubmit, onClose, classes, isUpdate} = props\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            className={classes.dialog}\r\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\r\n            bodyStyle={{minHeight: 'auto'}}\r\n            bodyClassName={classes.popUp}>\r\n            <div className={classes.titleContent}>\r\n                <span>{isUpdate ? 'Изменить бренд' : 'Добавить бренд'}</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit} className={classes.form} style={{minHeight: 'auto'}}>\r\n                    <div className={classes.loader}>\r\n                        <CircularProgress size={40} thickness={4}/>\r\n                    </div>\r\n                    <div className={classes.inContent} style={{minHeight: '100px', paddingTop: '15px'}}>\r\n                        <div className={classes.field}>\r\n                            <Field\r\n                                name=\"name\"\r\n                                component={TextField}\r\n                                className={classes.inputFieldCustom}\r\n                                label=\"Наименование\"\r\n                                fullWidth={true}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <FlatButton\r\n                            label=\"Сохранить\"\r\n                            className={classes.actionButton}\r\n                            primary={true}\r\n                            type=\"submit\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\n\r\nBrandCreateDialog.propTyeps = {\r\n    isUpdate: PropTypes.bool,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\nBrandCreateDialog.defaultProps = {\r\n    isUpdate: false\r\n}\r\n\r\nexport default BrandCreateDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Brand/BrandCreateDialog.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport {TextField, CurrencySearchField, UsersSearchField, PaymentTypeSearchField} from '../ReduxForm'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport MainStyles from '../Styles/MainStyles'\r\n\r\nexport const CASHBOX_CREATE_DIALOG_OPEN = 'openCreateDialog'\r\n\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\r\n\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        latLng,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\n\r\nconst styles = _.merge(MainStyles, {\r\n    loader: {\r\n        position: 'absolute',\r\n        width: '100%',\r\n        height: '100%',\r\n        background: '#fff',\r\n        top: '0',\r\n        left: '0',\r\n        alignItems: 'center',\r\n        zIndex: '999',\r\n        textAlign: 'center',\r\n        display: ({loading}) => loading ? 'flex' : 'none'\r\n    }\r\n})\r\n\r\nconst enhance = compose(\r\n    injectSheet(styles),\r\n    reduxForm({\r\n        form: 'CashboxCreateForm',\r\n        enableReinitialize: true\r\n    })\r\n)\r\n\r\nconst CashboxCreateDialog = enhance((props) => {\r\n    const {open, loading, handleSubmit, onClose, classes, isUpdate} = props\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            className={classes.dialog}\r\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\r\n            bodyStyle={{minHeight: 'auto'}}\r\n            bodyClassName={classes.popUp}>\r\n            <div className={classes.titleContent}>\r\n                <span>{isUpdate ? 'Изменить кассу' : 'Добавить кассу'}</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit} className={classes.form}>\r\n                    <div className={classes.loader}>\r\n                        <CircularProgress size={40} thickness={4}/>\r\n                    </div>\r\n                    <div className={classes.inContent} style={{minHeight: '235px', paddingTop: '15px'}}>\r\n                        <div className={classes.field}>\r\n                            <Field\r\n                                name=\"name\"\r\n                                component={TextField}\r\n                                className={classes.inputFieldCustom}\r\n                                label=\"Наименование\"\r\n                                fullWidth={true}\r\n                            />\r\n                            <Field\r\n                                name=\"currency\"\r\n                                component={CurrencySearchField}\r\n                                className={classes.inputFieldCustom}\r\n                                label=\"Валюта\"\r\n                                fullWidth={true}\r\n                            />\r\n                            <Field\r\n                                name=\"cashier\"\r\n                                component={UsersSearchField}\r\n                                className={classes.inputFieldCustom}\r\n                                label=\"Кассир\"\r\n                                fullWidth={true}\r\n                            />\r\n                            <Field\r\n                                name=\"type\"\r\n                                component={PaymentTypeSearchField}\r\n                                className={classes.inputFieldCustom}\r\n                                label=\"Тип оплаты\"\r\n                                fullWidth={true}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <FlatButton\r\n                            label=\"Сохранить\"\r\n                            className={classes.actionButton}\r\n                            primary={true}\r\n                            type=\"submit\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\n\r\nCashboxCreateDialog.propTyeps = {\r\n    isUpdate: PropTypes.bool.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\nCashboxCreateDialog.defaultProps = {\r\n    isUpdate: false\r\n}\r\nexport default CashboxCreateDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Cashbox/CashboxCreateDialog.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport {compose, withHandlers} from 'recompose'\r\nimport {reduxForm, Field} from 'redux-form'\r\nimport PropTypes from 'prop-types'\r\nimport injectSheet from 'react-jss'\r\nimport {Link} from 'react-router'\r\nimport Paper from 'material-ui/Paper'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport RaisedButton from 'material-ui/RaisedButton'\r\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\r\nimport DateToDateField from '../ReduxForm/Basic/DateToDateField'\r\nimport {TransactionTypeSearchField, ExpensiveCategorySearchField} from '../ReduxForm'\r\nimport CloseIcon from '../CloseIcon'\r\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\r\n\r\nexport const CLIENT_TRANSACTION_FILTER_OPEN = 'openFilterDialog'\r\n\r\nexport const CLIENT_TRANSACTION_FILTER_KEY = {\r\n    TYPE: 'type',\r\n    CATEGORY_EXPENSE: 'categoryExpense',\r\n    FROM_DATE: 'fromDate',\r\n    TO_DATE: 'toDate'\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            position: 'absolute',\r\n            minWidth: '300px',\r\n            background: '#fff',\r\n            zIndex: 99,\r\n            top: 0,\r\n            left: 0,\r\n            borderRadius: 0,\r\n            padding: '10px 20px 10px 20px'\r\n        },\r\n        afterFilter: {\r\n            width: '268px',\r\n            alignItems: 'center',\r\n            display: 'flex',\r\n            backgroundColor: '#efefef',\r\n            position: 'relative',\r\n            padding: '16px 30px',\r\n            marginLeft: '-30px',\r\n            '& > div:nth-child(2)': {\r\n                position: 'absolute',\r\n                right: '0'\r\n            },\r\n            '& > div:nth-child(1)': {\r\n                color: '#666666'\r\n            },\r\n            '& button': {\r\n                borderLeft: '1px solid white !important'\r\n            }\r\n        },\r\n        icon: {\r\n            color: '#8f8f8f !important'\r\n        },\r\n        arrow: {\r\n            color: '#12aaeb',\r\n            paddingRight: '14px',\r\n            position: 'relative',\r\n            '& svg': {\r\n                position: 'absolute',\r\n                width: '13px !important',\r\n                height: '20px !important'\r\n            }\r\n        },\r\n        header: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n            '& button': {\r\n                marginRight: '-12px !important'\r\n            }\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        },\r\n        title: {\r\n            fontSize: '15px',\r\n            color: '#5d6474'\r\n        },\r\n        submit: {\r\n            color: '#fff !important'\r\n        }\r\n    }),\r\n    reduxForm({\r\n        form: 'ClientTransactionFilterForm',\r\n        enableReinitialize: true\r\n    }),\r\n    withHandlers({\r\n        getCount: props => () => {\r\n            const {filter} = props\r\n            return _(CLIENT_TRANSACTION_FILTER_KEY)\r\n                .values()\r\n                .filter(item => item !== CLIENT_TRANSACTION_FILTER_KEY.FROM_DATE)\r\n                .filter(item => filter.getParam(item))\r\n                .value()\r\n                .length\r\n        }\r\n    })\r\n)\r\n\r\nconst ClientTransactionFilterForm = enhance((props) => {\r\n    const {classes, filterDialog, getCount} = props\r\n    const filterCounts = getCount()\r\n\r\n    if (!filterDialog.openFilterDialog) {\r\n        if (filterCounts) {\r\n            return (\r\n                <div className={classes.afterFilter}>\r\n                    <div>Фильтр: {filterCounts} элемента</div>\r\n                    <div>\r\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                            <BorderColorIcon color=\"#8f8f8f\" />\r\n                        </IconButton>\r\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\r\n                            <CloseIcon className={classes.icon}/>\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Link\r\n                    className={classes.arrow}\r\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.wrapper} zDepth={2}>\r\n                <div className={classes.header}>\r\n                    <span className={classes.title}>Фильтр</span>\r\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\r\n                        <CloseIcon className={classes.icon} />\r\n                    </IconButton>\r\n                </div>\r\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\r\n                    <div>\r\n                        <Field className={classes.inputFieldCustom} name=\"categoryExpense\" component={ExpensiveCategorySearchField} label=\"Категории расходов\"/>\r\n                    </div>\r\n                    <div>\r\n                        <Field className={classes.inputFieldCustom} name=\"type\" component={TransactionTypeSearchField} label=\"Тип\"/>\r\n                    </div>\r\n                    <div>\r\n                        <Field className={classes.inputFieldCustom} name=\"date\" component={DateToDateField} label=\"Диапазон дат\" fullWidth={true}/>\r\n                    </div>\r\n\r\n                    <RaisedButton\r\n                        type=\"submit\"\r\n                        primary={true}\r\n                        buttonStyle={{color: '#fff'}}\r\n                        label=\"Применить\"\r\n                        style={{marginTop: '15px'}}>\r\n                    </RaisedButton>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n})\r\n\r\nClientTransactionFilterForm.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    filterDialog: PropTypes.shape({\r\n        filterLoading: PropTypes.bool.isRequired,\r\n        openFilterDialog: PropTypes.bool.isRequired,\r\n        handleOpenFilterDialog: PropTypes.func.isRequired,\r\n        handleCloseFilterDialog: PropTypes.func.isRequired,\r\n        handleSubmitFilterDialog: PropTypes.func.isRequired\r\n    })\r\n}\r\n\r\nexport default ClientTransactionFilterForm\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ClientTransaction/ClientTransactionFilterForm.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport {TextField} from '../ReduxForm'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport MainStyles from '../Styles/MainStyles'\r\nexport const CURRENCY_CREATE_DIALOG_OPEN = 'openCreateDialog'\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        latLng,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        }\r\n    })),\r\n    reduxForm({\r\n        form: 'CurrencyCreateForm',\r\n        enableReinitialize: true\r\n    })\r\n)\r\nconst CurrencyCreateDialog = enhance((props) => {\r\n    const {open, loading, handleSubmit, onClose, classes, isUpdate} = props\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            className={classes.dialog}\r\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\r\n            bodyStyle={{minHeight: '100px !important'}}\r\n            bodyClassName={classes.popUp}>\r\n            <div className={classes.titleContent}>\r\n                <span>{isUpdate ? 'Изменить валюту' : 'Добавить валюту'}</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit} className={classes.form} style={{minHeight: 'auto'}}>\r\n                    <div className={classes.loader}>\r\n                        <CircularProgress size={40} thickness={4}/>\r\n                    </div>\r\n                    <div className={classes.inContent} style={{minHeight: '120px', paddingTop: '15px'}}>\r\n                        <div className={classes.field}>\r\n                            <Field\r\n                                name=\"name\"\r\n                                component={TextField}\r\n                                className={classes.inputFieldCustom}\r\n                                label=\"Наименование\"\r\n                                fullWidth={true}\r\n                            />\r\n                            <Field\r\n                                name=\"rate\"\r\n                                component={TextField}\r\n                                className={classes.inputFieldCustom}\r\n                                label=\"Курс\"\r\n                                fullWidth={true}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <FlatButton\r\n                            label=\"Сохранить\"\r\n                            className={classes.actionButton}\r\n                            primary={true}\r\n                            type=\"submit\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\nCurrencyCreateDialog.propTypes = {\r\n    isUpdate: PropTypes.bool,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\nCurrencyCreateDialog.defaultProps = {\r\n    isUpdate: false\r\n}\r\nexport default CurrencyCreateDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Currency/CurrencyCreateDialog.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport {TextField, ManufactureSearchField, ImageUploadField} from '../ReduxForm'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport MainStyles from '../Styles/MainStyles'\r\n\r\nexport const EQUIPMENT_CREATE_DIALOG_OPEN = 'openCreateDialog'\r\n\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\r\n\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        latLng,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        },\r\n        equipmentPhoto: {\r\n            '& .imageDropZone': {\r\n                width: '160px',\r\n                height: '160px',\r\n                marginLeft: '30px',\r\n                marginBottom: '30px',\r\n                '& svg': {\r\n                    width: '40px !important'\r\n                }\r\n            }\r\n        }\r\n    })),\r\n    reduxForm({\r\n        form: 'EquipmentCreateForm',\r\n        enableReinitialize: true\r\n    })\r\n)\r\n\r\nconst EquipmentCreateDialog = enhance((props) => {\r\n    const {open, loading, handleSubmit, onClose, classes, isUpdate} = props\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            className={classes.dialog}\r\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\r\n            bodyStyle={{minHeight: 'auto'}}\r\n            bodyClassName={classes.popUp}>\r\n            <div className={classes.titleContent}>\r\n                <span>{isUpdate ? 'Изменить оборудование' : 'Добавить оборудование'}</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit} className={classes.form}>\r\n                    <div className={classes.loader}>\r\n                        <CircularProgress size={40} thickness={4}/>\r\n                    </div>\r\n                    <div className={classes.inContent} style={{minHeight: '200px'}}>\r\n                        <div className={classes.field} style={{paddingTop: '15px'}}>\r\n                            <Field\r\n                                name=\"name\"\r\n                                component={TextField}\r\n                                className={classes.inputFieldCustom}\r\n                                label=\"Наименование\"\r\n                                fullWidth={true}\r\n                            />\r\n                            <Field\r\n                                name=\"manufacture\"\r\n                                component={ManufactureSearchField}\r\n                                className={classes.inputFieldCustom}\r\n                                label=\"Производство\"\r\n                                fullWidth={true}\r\n                            />\r\n                        </div>\r\n                        <div className={classes.equipmentPhoto}>\r\n                            <Field\r\n                                name=\"image\"\r\n                                className={classes.imageUpload}\r\n                                component={ImageUploadField}\r\n                                label=\"Изображения\"\r\n                                fullWidth={true}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <FlatButton\r\n                            label=\"Сохранить\"\r\n                            className={classes.actionButton}\r\n                            primary={true}\r\n                            type=\"submit\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\n\r\nEquipmentCreateDialog.propTypes = {\r\n    isUpdate: PropTypes.bool,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\nEquipmentCreateDialog.defaultProps = {\r\n    isUpdate: false\r\n}\r\n\r\nexport default EquipmentCreateDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Equipment/EquipmentCreateDialog.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport {TextField} from '../ReduxForm'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport MainStyles from '../Styles/MainStyles'\r\n\r\nexport const EXPENSIVE_CATEGORY_CREATE_DIALOG_OPEN = 'openCreateDialog'\r\n\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\r\n\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        latLng,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        }\r\n    })),\r\n    reduxForm({\r\n        form: 'ExpensiveCategoryCreateForm',\r\n        enableReinitialize: true\r\n    })\r\n)\r\n\r\nconst ExpensiveCategoryCreateDialog = enhance((props) => {\r\n    const {open, loading, handleSubmit, onClose, classes, isUpdate} = props\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            className={classes.dialog}\r\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\r\n            bodyStyle={{minHeight: 'auto'}}\r\n            bodyClassName={classes.popUp}>\r\n            <div className={classes.titleContent}>\r\n                <span>{isUpdate ? 'Изменить категорию расходов' : 'Добавить категорию расходов'}</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit} className={classes.form} style={{minHeight: 'auto'}}>\r\n                    <div className={classes.loader}>\r\n                        <CircularProgress size={40} thickness={4}/>\r\n                    </div>\r\n                    <div className={classes.inContent} style={{minHeight: '100px', paddingTop: '15px'}}>\r\n                        <div className={classes.field}>\r\n                            <Field\r\n                                name=\"name\"\r\n                                component={TextField}\r\n                                className={classes.inputFieldCustom}\r\n                                label=\"Наименование\"\r\n                                fullWidth={true}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <FlatButton\r\n                            label=\"Сохранить\"\r\n                            className={classes.actionButton}\r\n                            primary={true}\r\n                            type=\"submit\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\n\r\nExpensiveCategoryCreateDialog.propTypes = {\r\n    isUpdate: PropTypes.bool,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\nExpensiveCategoryCreateDialog.defaultProps = {\r\n    isUpdate: false\r\n}\r\n\r\nexport default ExpensiveCategoryCreateDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ExpensiveCategory/ExpensiveCategoryCreateDialog.js","import GridListNavSearch from './GridListNavSearch'\n\nexport default GridListNavSearch\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridListNavSearch/index.js","import React from 'react'\nimport SvgIcon from 'material-ui/SvgIcon'\n\nconst CheckIcon = (props) => {\n    return (\n        <SvgIcon {...props} style={{width: '24px', height: '24px'}}>\n            <g>\n                <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"/>\n            </g>\n        </SvgIcon>\n    )\n}\n\nexport default CheckIcon\n\n\n\n// WEBPACK FOOTER //\n// src/components/Icons/check.js","import LinearProgress from './LinearProgress'\r\n\r\nexport default LinearProgress\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/LinearProgress/index.js","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose, withState} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport {Field, reduxForm, Fields} from 'redux-form'\nimport {ManufactureListMaterialField, ProductSearchField} from '../ReduxForm'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport validate from '../../helpers/validate'\n\nexport const MANUFACTURE_ADD_PRODUCT_DIALOG_OPEN = 'addProduct'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        popUp: {\n            overflowY: 'hidden !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            overflowX: 'hidden',\n            height: '100%'\n        },\n        titleContent: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '20px 30px',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                padding: '0 !important',\n                position: 'absolute !important'\n            }\n        },\n        inContent: {\n            display: 'flex',\n            maxHeight: '50vh',\n            minHeight: '220px',\n            overflow: 'auto',\n            padding: '0 30px',\n            color: '#333'\n        },\n        bodyContent: {\n            width: '100%'\n        },\n        form: {\n            position: 'relative'\n        },\n        field: {\n            width: '100%'\n        },\n        inputField: {\n            fontSize: '13px !important',\n            height: '50px !important',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        bottomButton: {\n            bottom: '0',\n            left: '0',\n            right: '0',\n            padding: '10px',\n            zIndex: '999',\n            borderTop: '1px solid #efefef',\n            background: '#fff',\n            textAlign: 'right',\n            '& span': {\n                fontSize: '13px !important',\n                fontWeight: '600 !important',\n                color: '#129fdd',\n                verticalAlign: 'inherit !important'\n            }\n        },\n        actionButton: {\n            fontSize: '13px !important',\n            margin: '0 !important'\n        },\n        buttonSub: {\n            textAlign: 'right',\n            marginTop: '10px',\n            '& span': {\n                fontSize: '13px !important',\n                fontWeight: '600 !important',\n                paddingLeft: '10px',\n                paddingRight: '10px'\n            },\n            '& button': {\n                margin: '0 !important',\n                fontSize: '13px !important',\n                marginRight: '-20px !important'\n            }\n        },\n        productAddForm: {\n            padding: '5px 0 20px 0',\n            borderBottom: '1px solid #efefef',\n            width: '100%',\n            '& input': {\n                fontSize: '13px !important',\n                marginTop: '5px !important'\n            },\n            '& label': {\n                fontSize: '13px',\n                top: '24px !important'\n            },\n            '& div': {\n                height: '55px !important'\n            },\n            '& div div': {\n                height: '0px !important'\n            },\n            '& div:first-child': {\n                width: '70%'\n            }\n        },\n        titleAdd: {\n            margin: '20px 0 5px',\n            '& h3': {\n                display: 'inline-block',\n                fontSize: '13px',\n                fontWeight: '800',\n                margin: '0'\n            },\n            '& a': {\n                float: 'right'\n            }\n        },\n        modalListTable: {\n            '& li': {\n                margin: '0',\n                padding: '10px 0',\n                display: 'flex',\n                alignItems: 'center',\n                position: 'relative',\n                '& div:first-child': {\n                    paddingLeft: '0'\n                },\n                '& div:last-child': {\n                    paddingRight: '0'\n                }\n            },\n            '& .dottedList:last-child:after': {\n                content: '\"\"',\n                backgroundImage: 'none'\n            },\n            '& .dottedList input': {\n                fontSize: '13px !important'\n            },\n            '& .dottedList:last-child': {\n                marginBottom: '20px'\n            }\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        addMaterials: {\n            background: 'rgb(242, 245, 248)',\n            margin: '10px -30px',\n            padding: '10px 23px',\n            display: 'flex',\n            '& input': {\n                fontSize: '13px !important',\n                marginTop: '5px !important'\n            },\n            '& label': {\n                fontSize: '13px !important',\n                top: '20px !important'\n            },\n            '& div div:first-child': {\n                height: '50px !important'\n            }\n        },\n        error: {\n            textAlign: 'center',\n            color: 'red'\n        }\n    }),\n    withState('openAddMaterials', 'setOpenAddMaterials', false),\n    reduxForm({\n        form: 'ProviderCreateForm',\n        enableReinitialize: true\n    })\n)\n\nconst ManufactureAddProductDialog = enhance((props) => {\n    const {open, handleSubmit, loading, onClose, classes, error} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '135px'} : {width: '600px'}}\n            bodyClassName={classes.popUp}>\n            <form onSubmit={onSubmit} className={classes.form}>\n                <div className={classes.titleContent}>\n                    <span>Добавление продукта</span>\n                    <IconButton onTouchTap={onClose}>\n                        <CloseIcon2 color=\"#666666\"/>\n                    </IconButton>\n                </div>\n                {error && <div className={classes.error}>Ошибка: {error}</div>}\n                <div className={classes.bodyContent}>\n                    <div className={classes.inContent}>\n                        <div style={{width: '100%', paddingTop: '10px'}}>\n                            <Field\n                                name=\"product\"\n                                label=\"Продукт\"\n                                className={classes.inputFieldCustom}\n                                component={ProductSearchField}\n                                fullWidth={true}/>\n                            <Fields\n                                names={['ingredients', 'ingredient', 'amount', 'measurement']}\n                                component={ManufactureListMaterialField}\n                            />\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </div>\n            </form>\n        </Dialog>\n    )\n})\n\nManufactureAddProductDialog.propTypes = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func,\n    loading: PropTypes.bool\n}\n\nManufactureAddProductDialog.defaultProps = {\n    isUpdate: false\n}\n\nexport default ManufactureAddProductDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Manufacture/ManufactureAddProductDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport IconButton from 'material-ui/IconButton'\nimport FlatButton from 'material-ui/FlatButton'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport CloseIcon2 from '../CloseIcon2'\nimport {ShiftSearchField, UsersSearchField} from '../ReduxForm'\nimport toCamelCase from '../../helpers/toCamelCase'\n\nexport const OPEN_USER_CREATE_DIALOG = 'openCreateUser'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        popUp: {\n            overflowY: 'hidden !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            overflowX: 'hidden',\n            height: '100%'\n        },\n        titleContent: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '20px 30px',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                padding: '0 !important',\n                position: 'absolute !important'\n            }\n        },\n        inContent: {\n            display: 'flex',\n            maxHeight: '50vh',\n            minHeight: '140px',\n            overflow: 'auto',\n            padding: '0 30px',\n            color: '#333'\n        },\n        bodyContent: {\n            width: '100%'\n        },\n        form: {\n            position: 'relative'\n        },\n        field: {\n            width: '100%'\n        },\n        inputField: {\n            fontSize: '13px !important'\n        },\n        bottomButton: {\n            bottom: '0',\n            left: '0',\n            right: '0',\n            padding: '10px',\n            zIndex: '999',\n            borderTop: '1px solid #efefef',\n            background: '#fff',\n            textAlign: 'right',\n            '& span': {\n                fontSize: '13px !important',\n                fontWeight: '600 !important',\n                color: '#129fdd',\n                verticalAlign: 'inherit !important'\n            }\n        },\n        actionButton: {\n            fontSize: '13px !important',\n            margin: '0 !important'\n        }\n    }),\n    reduxForm({\n        form: 'ManufactureCreateUserForm',\n        enableReinitialize: true\n    })\n)\n\nconst ManufactureAddStaffDialog = enhance((props) => {\n    const {\n        open,\n        loading,\n        onClose,\n        handleSubmit,\n        classes,\n        isUpdate\n    } = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '135px'} : {width: '400px'}}\n            bodyClassName={classes.popUp}>\n            <form onSubmit={onSubmit} className={classes.form}>\n                <div className={classes.titleContent}>\n                    <span>Производство клея: персонал</span>\n                    <IconButton onTouchTap={onClose}>\n                        <CloseIcon2 color=\"#666666\"/>\n                    </IconButton>\n                </div>\n                <div className={classes.bodyContent}>\n                    <div className={classes.inContent}>\n                        <div style={{width: '100%', paddingTop: '10px'}}>\n                            <Field\n                                name=\"user\"\n                                component={UsersSearchField}\n                                className={classes.inputFieldCustom}\n                                disabled={Boolean(isUpdate)}\n                                label=\"Сотрудник\"\n                                fullWidth={true}/>\n                            <Field\n                                name=\"shift\"\n                                component={ShiftSearchField}\n                                className={classes.inputFieldCustom}\n                                label=\"Смена\"\n                                fullWidth={true}/>\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </div>\n            </form>\n        </Dialog>\n    )\n})\n\nManufactureAddStaffDialog.propTypes = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired\n}\n\nManufactureAddStaffDialog.defaultProps = {\n    isUpdate: false\n}\n\nexport default ManufactureAddStaffDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Manufacture/ManufactureAddStaffDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose, withState} from 'recompose'\nimport {connect} from 'react-redux'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport {Row, Col} from 'react-flexbox-grid'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {TextField, ProductSearchField} from '../ReduxForm'\n\nexport const MANUFACTURE_EDIT_PRODUCT_DIALOG_OPEN = 'editMaterials'\nconst enhance = compose(\n    connect((state) => {\n        const measurementExp = _.get(state, ['product', 'measurement', 'data'])\n        return {\n            measurementExp\n        }\n    }),\n    injectSheet({\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        popUp: {\n            overflowY: 'hidden !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            overflowX: 'hidden',\n            height: '100%'\n        },\n        titleContent: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '20px 30px',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                padding: '0 !important',\n                position: 'absolute !important'\n            }\n        },\n        inContent: {\n            display: 'flex',\n            maxHeight: '50vh',\n            minHeight: '220px',\n            overflow: 'auto',\n            padding: '0 30px',\n            color: '#333'\n        },\n        bodyContent: {\n            width: '100%'\n        },\n        form: {\n            position: 'relative'\n        },\n        field: {\n            width: '100%'\n        },\n        inputField: {\n            fontSize: '13px !important',\n            height: '50px !important',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        bottomButton: {\n            bottom: '0',\n            left: '0',\n            right: '0',\n            padding: '10px',\n            zIndex: '999',\n            borderTop: '1px solid #efefef',\n            background: '#fff',\n            textAlign: 'right',\n            '& span': {\n                fontSize: '13px !important',\n                fontWeight: '600 !important',\n                color: '#129fdd',\n                verticalAlign: 'inherit !important'\n            }\n        },\n        actionButton: {\n            fontSize: '13px !important',\n            margin: '0 !important'\n        },\n        buttonSub: {\n            textAlign: 'right',\n            marginTop: '10px',\n            '& span': {\n                fontSize: '13px !important',\n                fontWeight: '600 !important',\n                paddingLeft: '10px',\n                paddingRight: '10px'\n            },\n            '& button': {\n                margin: '0 !important',\n                fontSize: '13px !important',\n                marginRight: '-20px !important'\n            }\n        },\n        productAddForm: {\n            padding: '5px 0 20px 0',\n            borderBottom: '1px solid #efefef',\n            width: '100%',\n            '& input': {\n                fontSize: '13px !important',\n                marginTop: '5px !important'\n            },\n            '& label': {\n                fontSize: '13px',\n                top: '24px !important'\n            },\n            '& div': {\n                height: '55px !important'\n            },\n            '& div div': {\n                height: '0px !important'\n            },\n            '& div:first-child': {\n                width: '70%'\n            }\n        },\n        titleAdd: {\n            margin: '20px 0 5px',\n            '& h3': {\n                display: 'inline-block',\n                fontSize: '13px',\n                fontWeight: '800',\n                margin: '0'\n            },\n            '& a': {\n                float: 'right'\n            }\n        },\n        modalListTable: {\n            '& li': {\n                margin: '0',\n                padding: '10px 0',\n                display: 'flex',\n                alignItems: 'center',\n                position: 'relative',\n                '& div:first-child': {\n                    paddingLeft: '0'\n                },\n                '& div:last-child': {\n                    paddingRight: '0'\n                }\n            },\n            '& .dottedList:last-child:after': {\n                content: '\"\"',\n                backgroundImage: 'none'\n            },\n            '& .dottedList input': {\n                fontSize: '13px !important'\n            },\n            '& .dottedList:last-child': {\n                marginBottom: '20px'\n            }\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        addMaterials: {\n            margin: '10px -30px',\n            padding: '10px 23px',\n            display: 'flex',\n            '& input:disabled': {\n                color: '#333 !important'\n            }\n        }\n    }),\n    withState('openAddMaterials', 'setOpenAddMaterials', false),\n    reduxForm({\n        form: 'IngredientCreateForm',\n        enableReinitialize: true\n    })\n)\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\nconst ManufactureEditProductDialog = enhance((props) => {\n    const {open, handleSubmit, loading, onClose, classes, isUpdate, measurement, measurementExp} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '135px'} : {width: '600px'}}\n            bodyClassName={classes.popUp}>\n            <form onSubmit={onSubmit} className={classes.form}>\n                <div className={classes.titleContent}>\n                    <span>Редактирование сырья</span>\n                    <IconButton onTouchTap={onClose}>\n                        <CloseIcon2 color=\"#666666\"/>\n                    </IconButton>\n                </div>\n                <div className={classes.bodyContent}>\n                    <div className={classes.inContent} style={{minHeight: '115px'}}>\n                        <div style={{width: '100%', paddingTop: '10px'}}>\n                            <div className={classes.addMaterials}>\n                                <Row className={classes.addRaw} style={{width: '100%'}}>\n                                    <Col xs={8}>\n                                        <Field\n                                            label=\"Наименование товара\"\n                                            name=\"ingredient\"\n                                            component={ProductSearchField}\n                                            className={classes.inputFieldCustom}\n                                            fullWidth={true}\n                                            disabled={isUpdate}\n                                        />\n                                    </Col>\n                                    <Col xs={3}>\n                                        <Field\n                                            name=\"amount\"\n                                            style={{textAlign: 'right'}}\n                                            label=\"Кол-во\"\n                                            component={TextField}\n                                            className={classes.inputFieldCustom}\n                                            fullWidth={true}\n                                        />\n                                    </Col>\n                                    <Col xs={1}>\n                                        <span style={{position: 'relative', top: '22px'}}>{!measurement ? measurementExp : measurement}</span>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </div>\n            </form>\n        </Dialog>\n    )\n})\n\nManufactureEditProductDialog.propTypes = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func,\n    loading: PropTypes.bool\n}\n\nManufactureEditProductDialog.defaultProps = {\n    isUpdate: false\n}\n\nexport default ManufactureEditProductDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Manufacture/ManufactureEditProductDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Col} from 'react-flexbox-grid'\nimport {compose, withState} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport {Field, reduxForm} from 'redux-form'\nimport {TextField} from '../ReduxForm'\nimport CloseIcon2 from '../CloseIcon2'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\nimport MainStyles from '../Styles/MainStyles'\nimport IconMenu from 'material-ui/IconMenu'\nimport MenuItem from 'material-ui/MenuItem'\nimport IconButton from 'material-ui/IconButton'\nimport Edit from 'material-ui/svg-icons/image/edit'\nimport ImageCheck from '../Icons/check'\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\n\nexport const MANUFACTURE_SHOW_BOM_DIALOG_OPEN = 'showBom'\n\nconst colorBlue = '#129fdd !important'\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        buttonSub: {\n            textAlign: 'right',\n            marginTop: '10px',\n            '& span': {\n                fontSize: '13px !important',\n                fontWeight: '600 !important',\n                color: colorBlue,\n                paddingLeft: '10px',\n                paddingRight: '10px'\n            },\n            '& button': {\n                margin: '0 !important',\n                fontSize: '13px !important',\n                marginRight: '-20px !important'\n            }\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        body: {\n            minHeight: '450px'\n        },\n        listBom: {\n            margin: '0 30px',\n            width: '100%'\n        },\n        titleBom: {\n            padding: '20px 0',\n            borderBottom: '1px solid #efefef',\n            width: '100%'\n        },\n        titleAdd: {\n            margin: '20px 0 5px',\n            '& h3': {\n                display: 'inline-block',\n                fontSize: '13px',\n                fontWeight: '800',\n                margin: '0'\n            },\n            '& a': {\n                float: 'right'\n            }\n        },\n        modalListTable: {\n            '& li': {\n                margin: '0',\n                padding: '10px 0',\n                display: 'flex',\n                alignItems: 'center',\n                position: 'relative',\n                '& div:first-child': {\n                    paddingLeft: '0'\n                },\n                '& div:last-child': {\n                    paddingRight: '0'\n                }\n            },\n            '& .dottedList:last-child:after': {\n                content: '\"\"',\n                backgroundImage: 'none'\n            },\n            '& .dottedList input': {\n                fontSize: '13px !important'\n            },\n            '& .dottedList:last-child': {\n                marginBottom: '20px'\n            }\n        },\n        addMaterials: {\n            background: 'rgb(242, 245, 248)',\n            margin: '10px -30px',\n            padding: '10px 23px',\n            display: 'flex',\n            '& input': {\n                fontSize: '13px !important',\n                marginTop: '5px !important'\n            },\n            '& label': {\n                fontSize: '13px !important',\n                top: '20px !important'\n            }\n        }\n    })),\n    withState('openAddMaterials', 'setOpenAddMaterials', false),\n    reduxForm({\n        form: 'ProviderCreateForm',\n        enableReinitialize: true\n    })\n)\n\nconst ManufactureShowBom = enhance((props) => {\n    const {open, loading, onClose, classes, openAddMaterials, setOpenAddMaterials} = props\n\n    const iconButton = (\n        <IconButton style={{padding: '0 12px', height: 'auto'}}>\n            <MoreVertIcon />\n        </IconButton>\n    )\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '135px'} : {width: '600px'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>BoM</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <div className={classes.inContent}>\n                    <div style={{width: '100%'}}>\n                        <div className={classes.titleBom}>\n                            <span>Продукт: <strong>Клей для скотча</strong></span><br />\n                            Lorem Ipsum has been the industry's standard dummy text ever since the 1500s.\n                        </div>\n                        <div className={classes.titleAdd}>\n                            <h3>Сырье</h3>\n                            <a onClick={() => { setOpenAddMaterials(!openAddMaterials) }}>\n                                <ContentAdd style={{height: '13px', width: '13px', color: 'rgb(18, 170, 235)'}} viewBox=\"0 0 24 15\" />\n                                добавить сырье\n                            </a>\n                        </div>\n                        {openAddMaterials && <div className={classes.addMaterials}>\n                            <Col xs={8}>\n                                <Field\n                                    name=\"nameAdd\"\n                                    component={TextField}\n                                    className={classes.inputFieldCustom}\n                                    label=\"Наименование\"\n                                    fullWidth={true}/>\n                            </Col>\n                            <Col xs={2}>\n                                <Field\n                                    name=\"countAdd\"\n                                    component={TextField}\n                                    className={classes.inputFieldCustom}\n                                    label=\"Кол-во\"\n                                    fullWidth={true}/>\n                            </Col>\n                            <Col xs={1}>\n                                <Field\n                                    name=\"edAdd\"\n                                    component={TextField}\n                                    className={classes.inputFieldCustom}\n                                    label=\"Ед.\"\n                                    fullWidth={true}/>\n                            </Col>\n                            <Col xs={1}>\n                                <IconButton>\n                                    <div>\n                                        <ImageCheck style={{color: '#129fdd'}} />\n                                    </div>\n                                </IconButton>\n                            </Col>\n                        </div>}\n                        <ul className={classes.modalListTable}>\n                            <li className=\"dottedList\">\n                                <Col xs={8}>\n                                    <strong>Наименование</strong>\n                                </Col>\n                                <Col xs={2}>\n                                    <strong>Кол-во</strong>\n                                </Col>\n                                <Col xs={1}>\n                                    <strong>Ед.</strong>\n                                </Col>\n                                <Col xs={1}>\n                                    &nbsp;\n                                </Col>\n                            </li>\n                            <li className=\"dottedList\">\n                                <Col xs={8}>\n                                    Дистилированная вода\n                                </Col>\n                                <Col xs={2}>\n                                    100\n                                </Col>\n                                <Col xs={1}>\n                                    л\n                                </Col>\n                                <Col xs={1}>\n                                    <IconMenu\n                                        iconButtonElement={iconButton}\n                                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\n                                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\n                                        <MenuItem\n                                            primaryText=\"Изменить\"\n                                            leftIcon={<Edit />}\n                                        />\n                                        <MenuItem\n                                            primaryText=\"Удалить \"\n                                            leftIcon={<DeleteIcon />}\n                                        />\n                                    </IconMenu>\n                                </Col>\n                            </li>\n                            <li className=\"dottedList\" style={{margin: '0 -29px', padding: '10px 30px', background: '#f2f5f8'}}>\n                                <Col xs={8}>\n                                    <Field\n                                        name=\"name\"\n                                        defaultValue=\"Value on load\"\n                                        component={TextField}\n                                        className={classes.inputFieldMaterials}\n                                        fullWidth={true}/>\n                                </Col>\n                                <Col xs={2}>\n                                    <Field\n                                        name=\"count\"\n                                        component={TextField}\n                                        className={classes.inputFieldMaterials}\n                                        fullWidth={true}/>\n                                </Col>\n                                <Col xs={1}>\n                                    <Field\n                                        name=\"unit\"\n                                        component={TextField}\n                                        className={classes.inputFieldMaterials}\n                                        fullWidth={true}/>\n                                </Col>\n                                <Col xs={1}>\n                                    <IconButton>\n                                        <div>\n                                            <ImageCheck style={{color: '#129fdd'}} />\n                                        </div>\n                                    </IconButton>\n                                </Col>\n                            </li>\n                            <li className=\"dottedList\">\n                                <Col xs={8}>\n                                    Дистилированная вода\n                                </Col>\n                                <Col xs={2}>\n                                    100\n                                </Col>\n                                <Col xs={1}>\n                                    л\n                                </Col>\n                                <Col xs={1}>\n                                    <IconMenu\n                                        iconButtonElement={iconButton}\n                                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\n                                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\n                                        <MenuItem\n                                            primaryText=\"Изменить\"\n                                            leftIcon={<Edit />}\n                                        />\n                                        <MenuItem\n                                            primaryText=\"Удалить \"\n                                            leftIcon={<DeleteIcon />}\n                                        />\n                                    </IconMenu>\n                                </Col>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </Dialog>\n    )\n})\n\nManufactureShowBom.propTypes = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func,\n    loading: PropTypes.bool\n}\n\nManufactureShowBom.defaultProps = {\n    isUpdate: false\n}\n\nexport default ManufactureShowBom\n\n\n\n// WEBPACK FOOTER //\n// src/components/Manufacture/ManufactureShowBom.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport {TextField} from '../ReduxForm'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport MainStyles from '../Styles/MainStyles'\r\n\r\nexport const MARKET_TYPE_CREATE_DIALOG_OPEN = 'openCreateDialog'\r\n\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\r\n\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        latLng,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        }\r\n    })),\r\n    reduxForm({\r\n        form: 'MarketTypeCreateForm',\r\n        enableReinitialize: true\r\n    })\r\n)\r\n\r\nconst MarketTypeCreateDialog = enhance((props) => {\r\n    const {open, loading, handleSubmit, onClose, classes, isUpdate} = props\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            className={classes.dialog}\r\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\r\n            bodyStyle={{minHeight: 'auto'}}\r\n            bodyClassName={classes.popUp}>\r\n            <div className={classes.titleContent}>\r\n                <span>{isUpdate ? 'Изменить тип магазина' : 'Добавить тип магазина'}</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit} className={classes.form} style={{minHeight: 'auto'}}>\r\n                    <div className={classes.loader}>\r\n                        <CircularProgress size={40} thickness={4}/>\r\n                    </div>\r\n                    <div className={classes.inContent} style={{minHeight: '100px', paddingTop: '15px'}}>\r\n                        <div className={classes.field}>\r\n                            <Field\r\n                                name=\"name\"\r\n                                component={TextField}\r\n                                className={classes.inputFieldCustom}\r\n                                label=\"Наименование\"\r\n                                fullWidth={true}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <FlatButton\r\n                            label=\"Сохранить\"\r\n                            className={classes.actionButton}\r\n                            primary={true}\r\n                            type=\"submit\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\n\r\nMarketTypeCreateDialog.propTyeps = {\r\n    isUpdate: PropTypes.bool,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\nMarketTypeCreateDialog.defaultProps = {\r\n    isUpdate: false\r\n}\r\n\r\nexport default MarketTypeCreateDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/MarketType/MarketTypeCreateDialog.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport {TextField} from '../ReduxForm'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport MainStyles from '../Styles/MainStyles'\r\n\r\nexport const MEASUREMENT_CREATE_DIALOG_OPEN = 'openCreateDialog'\r\n\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\r\n\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        latLng,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        }\r\n    })),\r\n    reduxForm({\r\n        form: 'MeasurementCreateForm',\r\n        enableReinitialize: true\r\n    })\r\n)\r\n\r\nconst MeasurementCreateDialog = enhance((props) => {\r\n    const {open, loading, handleSubmit, onClose, classes, isUpdate} = props\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            className={classes.dialog}\r\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\r\n            bodyStyle={{minHeight: 'auto'}}\r\n            bodyClassName={classes.popUp}>\r\n            <div className={classes.titleContent}>\r\n                <span>{isUpdate ? 'Изменить измерение' : 'Добавить измерение'}</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit} className={classes.form} style={{minHeight: 'auto'}}>\r\n                    <div className={classes.loader}>\r\n                        <CircularProgress size={40} thickness={4}/>\r\n                    </div>\r\n                    <div className={classes.inContent} style={{minHeight: '100px', paddingTop: '15px'}}>\r\n                        <div className={classes.field}>\r\n                            <Field\r\n                                name=\"name\"\r\n                                component={TextField}\r\n                                className={classes.inputFieldCustom}\r\n                                label=\"Наименование\"\r\n                                fullWidth={true}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <FlatButton\r\n                            label=\"Сохранить\"\r\n                            className={classes.actionButton}\r\n                            primary={true}\r\n                            type=\"submit\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\n\r\nMeasurementCreateDialog.propTypes = {\r\n    isUpdate: PropTypes.bool,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\nMeasurementCreateDialog.defaultProps = {\r\n    isUpdate: false\r\n}\r\n\r\nexport default MeasurementCreateDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Measurement/MeasurementCreateDialog.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport {Field, Fields, reduxForm, SubmissionError} from 'redux-form'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport normalizeNumber from '../ReduxForm/normalizers/normalizeNumber'\r\nimport {\r\n    ClientSearchField,\r\n    DeliveryTypeSearchField,\r\n    OrderListProductField,\r\n    ClientContactsField,\r\n    TextField,\r\n    DateField,\r\n    MarketSearchField,\r\n    DealTypeSearchField\r\n} from '../ReduxForm'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport MainStyles from '../Styles/MainStyles'\r\nimport OrderTotalSum from '../ReduxForm/Order/OrderTotalSum'\r\nimport getConfig from '../../helpers/getConfig'\r\n\r\nexport const ORDER_CREATE_DIALOG_OPEN = 'openCreateDialog'\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            justifyContent: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        },\r\n        popUp: {\r\n            overflowY: 'hidden !important',\r\n            fontSize: '13px !important',\r\n            position: 'relative',\r\n            padding: '0 !important',\r\n            overflowX: 'hidden',\r\n            height: '100%',\r\n            maxHeight: 'inherit !important'\r\n        },\r\n        titleContent: {\r\n            background: '#fff',\r\n            color: '#333',\r\n            fontWeight: 'bold',\r\n            textTransform: 'uppercase',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            borderBottom: '1px solid #efefef',\r\n            padding: '20px 30px',\r\n            zIndex: '999',\r\n            '& button': {\r\n                right: '13px',\r\n                padding: '0 !important',\r\n                position: 'absolute !important'\r\n            }\r\n        },\r\n        inContent: {\r\n            display: 'flex',\r\n            color: '#333',\r\n            minHeight: '450px'\r\n        },\r\n        innerWrap: {\r\n            maxHeight: '100vh',\r\n            overflow: 'auto'\r\n        },\r\n        bodyContent: {\r\n            color: '#333',\r\n            width: '100%'\r\n        },\r\n        form: {\r\n            position: 'relative'\r\n        },\r\n        field: {\r\n            width: '100%'\r\n        },\r\n        subTitleOrder: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            marginBottom: '5px !important',\r\n            justifyContent: 'space-between',\r\n            fontWeight: '600',\r\n            padding: '0 !important',\r\n            '& span': {\r\n                fontWeight: '600 !important'\r\n            }\r\n        },\r\n        radioButton: {\r\n            marginTop: '10px',\r\n            '&>div': {\r\n                marginBottom: '10px'\r\n            }\r\n        },\r\n        condition: {\r\n            marginTop: '20px',\r\n            '&>div:first-child': {\r\n                marginBottom: '-20px'\r\n            }\r\n        },\r\n        commentField: {\r\n            padding: '5px 20px',\r\n            fontSize: '16px !important',\r\n            textAlign: 'left',\r\n            width: '50%',\r\n            float: 'left'\r\n        },\r\n        bottomButton: {\r\n            bottom: '0',\r\n            left: '0',\r\n            right: '0',\r\n            padding: '10px',\r\n            zIndex: '999',\r\n            borderTop: '1px solid #efefef',\r\n            background: '#fff',\r\n            textAlign: 'right',\r\n            '& span': {\r\n                fontSize: '13px !important',\r\n                fontWeight: '600 !important',\r\n                color: '#129fdd',\r\n                verticalAlign: 'inherit !important'\r\n            }\r\n        },\r\n        actionButton: {\r\n            fontSize: '13px !important',\r\n            margin: '0 !important'\r\n        },\r\n        leftOrderPart: {\r\n            flexBasis: '35%',\r\n            padding: '20px 30px 20px 0',\r\n            borderRight: '1px #efefef solid'\r\n        },\r\n        rightOrderPart: {\r\n            flexBasis: '65%',\r\n            maxWidth: '65%',\r\n            padding: '20px 0 20px 30px'\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        },\r\n        inputDateCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            },\r\n            '& div:first-child': {\r\n                height: '45px !important'\r\n            }\r\n        },\r\n        inputFieldDis: {\r\n            fontSize: '13px !important',\r\n            paddingTop: '24px',\r\n            '& div': {\r\n                color: 'rgb(229, 115, 115) !important'\r\n            }\r\n        },\r\n        podlojkaScroll: {\r\n            overflowY: 'auto !important',\r\n            '& > div:first-child > div:first-child': {\r\n                transform: 'translate(0px, 0px) !important'\r\n            }\r\n        },\r\n        notEnough: {\r\n            padding: '20px 30px',\r\n            color: '#ff2626',\r\n            margin: '0 -30px',\r\n            background: '#ffecec'\r\n        }\r\n    })),\r\n    reduxForm({\r\n        form: 'OrderCreateForm',\r\n        enableReinitialize: true\r\n    })\r\n)\r\n\r\nconst customContentStyle = {\r\n    width: '1000px',\r\n    maxWidth: 'none'\r\n}\r\nconst OrderCreateDialog = enhance((props) => {\r\n    const {\r\n        open,\r\n        handleSubmit,\r\n        onClose,\r\n        classes,\r\n        shortageDialog,\r\n        isUpdate,\r\n        createClientDialog,\r\n        products\r\n    } = props\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n    let notEnough = false\r\n    _.map(products, (item) => {\r\n        const amount = _.toNumber(_.get(item, 'amount'))\r\n        const balance = _.toNumber(_.get(item, ['extra', 'balance']))\r\n        if (amount > balance) {\r\n            notEnough = true\r\n        }\r\n    })\r\n\r\n    const primaryCurrency = getConfig('PRIMARY_CURRENCY')\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            className={classes.podlojkaScroll}\r\n            contentStyle={customContentStyle}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            bodyClassName={classes.popUp}\r\n            autoScrollBodyContent={true}>\r\n            <div className={classes.titleContent}>\r\n                <span>{isUpdate ? 'Изменение заказа' : 'Добавление заказа'}</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit} scrolling=\"auto\" className={classes.form}>\r\n                    <div className={classes.loader}>\r\n                        <CircularProgress size={40} thickness={4}/>\r\n                    </div>\r\n                    <div className={classes.innerWrap}>\r\n                        <div style={{minHeight: '470px', maxHeight: '75vh'}} className={classes.inContent}>\r\n                            <div className={classes.leftOrderPart}>\r\n\r\n                                <div className={classes.subTitleOrder}>\r\n                                    <span>Выбор клиента</span>\r\n                                    {!isUpdate && <a style={{color: '#12aaeb'}} onClick={createClientDialog.handleOpenCreateClientDialog}>+ добавить</a>}\r\n                                </div>\r\n                                <div>\r\n                                    <Field\r\n                                        name=\"client\"\r\n                                        component={ClientSearchField}\r\n                                        className={classes.inputFieldCustom}\r\n                                        label=\"Клиент\"\r\n                                        fullWidth={true}/>\r\n                                    <Field\r\n                                        name=\"contact\"\r\n                                        component={ClientContactsField}\r\n                                    />\r\n                                    <Field\r\n                                        name=\"market\"\r\n                                        component={MarketSearchField}\r\n                                        className={classes.inputFieldCustom}\r\n                                        label=\"Название магазина\"\r\n                                        fullWidth={true}/>\r\n                                </div>\r\n\r\n                                {(!notEnough) ? <div className={classes.condition}>\r\n                                    <div className={classes.subTitleOrder} style={{padding: '0 !important'}}>Условия доставки</div>\r\n                                    <Field\r\n                                        name=\"deliveryType\"\r\n                                        component={DeliveryTypeSearchField}\r\n                                        className={classes.inputFieldCustom}\r\n                                        label=\"Тип доставки\"\r\n                                        fullWidth={true}/>\r\n                                    <Field\r\n                                        name=\"dealType\"\r\n                                        component={DealTypeSearchField}\r\n                                        className={classes.inputFieldCustom}\r\n                                        label=\"Тип сделки\"\r\n                                        fullWidth={true}/>\r\n                                    <Field\r\n                                        name=\"deliveryPrice\"\r\n                                        component={TextField}\r\n                                        className={classes.inputFieldCustom}\r\n                                        label={'Стоимость доставки (' + primaryCurrency + ')'}\r\n                                        fullWidth={true}\r\n                                        />\r\n                                    <Field\r\n                                            name=\"deliveryDate\"\r\n                                            component={DateField}\r\n                                            className={classes.inputDateCustom}\r\n                                            floatingLabelText=\"Дата доставки\"\r\n                                            container=\"inline\"\r\n                                            fullWidth={true}/>\r\n                                </div>\r\n                                : <div className={classes.notEnough}>Недостаточно товаров на складе</div>}\r\n\r\n                                <div className={classes.condition}>\r\n                                    <div className={classes.subTitleOrder} style={{padding: '0 !important'}}>Оплата</div>\r\n                                    <Field\r\n                                        name=\"discountPrice\"\r\n                                        component={TextField}\r\n                                        className={classes.inputFieldCustom}\r\n                                        label=\"Скидка (%)\"\r\n                                        style={{width: '50%'}}\r\n                                        normalize={normalizeNumber}/>\r\n                                    <Field\r\n                                        name=\"paymentDate\"\r\n                                        component={DateField}\r\n                                        className={classes.inputDateCustom}\r\n                                        floatingLabelText=\"Дата оплаты\"\r\n                                        container=\"inline\"\r\n                                        fullWidth={true}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.rightOrderPart}>\r\n                                <Fields\r\n                                    names={['products', 'product', 'amount', 'cost']}\r\n                                    component={OrderListProductField}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <div className={classes.commentField}>\r\n                            Общая сумма заказа: <OrderTotalSum/>\r\n                        </div>\r\n                        {(notEnough) ? <FlatButton\r\n                            label=\"Далее\"\r\n                            className={classes.actionButton}\r\n                            primary={true}\r\n                            onTouchTap={shortageDialog.handleOpenShortageDialog}/>\r\n\r\n                        : <FlatButton\r\n                            label=\"Оформить заказ\"\r\n                            className={classes.actionButton}\r\n                            primary={true}\r\n                            type=\"submit\"/>\r\n                        }\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\nOrderCreateDialog.propTyeps = {\r\n    products: PropTypes.array,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    shortageDialog: PropTypes.shape({\r\n        shortageLoading: PropTypes.bool.isRequired,\r\n        openShortageDialog: PropTypes.bool.isRequired,\r\n        handleOpenShortageDialog: PropTypes.func.isRequired,\r\n        handleCloseShortageDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    createClientDialog: PropTypes.shape({\r\n        createClientLoading: PropTypes.bool.isRequired,\r\n        openCreateClientDialog: PropTypes.bool.isRequired,\r\n        handleOpenCreateClientDialog: PropTypes.func.isRequired,\r\n        handleCloseCreateClientDialog: PropTypes.func.isRequired,\r\n        handleSubmitCreateClientDialog: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\nOrderCreateDialog.defaultProps = {\r\n    isUpdate: false\r\n}\r\nexport default OrderCreateDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Order/OrderCreateDialog.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport {compose, withHandlers} from 'recompose'\r\nimport {reduxForm, Field} from 'redux-form'\r\nimport PropTypes from 'prop-types'\r\nimport injectSheet from 'react-jss'\r\nimport {Link} from 'react-router'\r\nimport Paper from 'material-ui/Paper'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport RaisedButton from 'material-ui/RaisedButton'\r\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\r\nimport DateToDateField from '../ReduxForm/Basic/DateToDateField'\r\nimport {ClientSearchField} from '../ReduxForm'\r\nimport OrderStatusSearchField from '../ReduxForm/Order/OrderStatusSearchField'\r\nimport CloseIcon from '../CloseIcon'\r\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\r\n\r\nexport const ORDER_FILTER_OPEN = 'openFilterDialog'\r\n\r\nexport const ORDER_FILTER_KEY = {\r\n    CLIENT: 'client',\r\n    ORDERSTATUS: 'orderStatus',\r\n    DOST_DATE: 'dostDate',\r\n    CREATE_DATE: 'createDate',\r\n    FROM_DATE: 'fromDate',\r\n    DELIVERY_FROM_DATE: 'deliveryFromDate',\r\n    TO_DATE: 'fromDate',\r\n    DELIVERY_TO_DATE: 'deliveryToDate'\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            position: 'absolute',\r\n            minWidth: '300px',\r\n            background: '#fff',\r\n            zIndex: 99,\r\n            top: 0,\r\n            left: 0,\r\n            borderRadius: 0,\r\n            padding: '10px 20px 10px 20px'\r\n        },\r\n        afterFilter: {\r\n            width: '268px',\r\n            alignItems: 'center',\r\n            display: 'flex',\r\n            backgroundColor: '#efefef',\r\n            position: 'relative',\r\n            padding: '16px 30px',\r\n            marginLeft: '-30px',\r\n            '& > div:nth-child(2)': {\r\n                position: 'absolute',\r\n                right: '0'\r\n            },\r\n            '& > div:nth-child(1)': {\r\n                color: '#666666'\r\n            },\r\n            '& button': {\r\n                borderLeft: '1px solid white !important'\r\n            }\r\n        },\r\n        icon: {\r\n            color: '#8f8f8f !important'\r\n        },\r\n        arrow: {\r\n            color: '#12aaeb',\r\n            paddingRight: '14px',\r\n            position: 'relative',\r\n            '& svg': {\r\n                position: 'absolute',\r\n                width: '13px !important',\r\n                height: '20px !important'\r\n            }\r\n        },\r\n        header: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n            '& button': {\r\n                marginRight: '-12px !important'\r\n            }\r\n        },\r\n        title: {\r\n            fontSize: '15px',\r\n            color: '#5d6474'\r\n        },\r\n        submit: {\r\n            color: '#fff !important'\r\n        },\r\n        inputField: {\r\n            fontSize: '13px !important'\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        },\r\n        inputDateCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            },\r\n            '& div:first-child': {\r\n                height: '45px !important'\r\n            },\r\n            '& div:first-child div:first-child': {\r\n                transform: 'translate(0px, 0px) !important'\r\n            }\r\n        }\r\n    }),\r\n    reduxForm({\r\n        form: 'OrderFilterForm',\r\n        enableReinitialize: true\r\n    }),\r\n    withHandlers({\r\n        getCount: props => () => {\r\n            const {filter} = props\r\n            return _(ORDER_FILTER_KEY)\r\n                .values()\r\n                .filter(item => item !== ORDER_FILTER_KEY.FROM_DATE)\r\n                .filter(item => filter.getParam(item))\r\n                .value()\r\n                .length\r\n        }\r\n    })\r\n)\r\n\r\nconst OrderFilterForm = enhance((props) => {\r\n    const {classes, filterDialog, getCount} = props\r\n    const filterCounts = getCount()\r\n\r\n    if (!filterDialog.openFilterDialog) {\r\n        if (filterCounts) {\r\n            return (\r\n                <div className={classes.afterFilter}>\r\n                    <div>Фильтр: {filterCounts} элемента</div>\r\n                    <div>\r\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                            <BorderColorIcon color=\"#8f8f8f\" />\r\n                        </IconButton>\r\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\r\n                            <CloseIcon className={classes.icon}/>\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Link\r\n                    className={classes.arrow}\r\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.wrapper} zDepth={2}>\r\n                <div className={classes.header}>\r\n                    <span className={classes.title}>Фильтр</span>\r\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\r\n                        <CloseIcon className={classes.icon} />\r\n                    </IconButton>\r\n                </div>\r\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\r\n                    <div>\r\n                        <Field className={classes.inputFieldCustom} name=\"client\" component={ClientSearchField} label=\"Клиент\"/>\r\n                        <Field className={classes.inputFieldCustom} name=\"orderStatus\" component={OrderStatusSearchField} label=\"Статус\"/>\r\n                        <Field className={classes.inputDateCustom} name=\"data\" component={DateToDateField} label=\"Период создания\"/>\r\n                        <Field className={classes.inputDateCustom} name=\"deliveryDate\" component={DateToDateField} label=\"Дата доставки\"/>\r\n                    </div>\r\n\r\n                    <RaisedButton\r\n                        type=\"submit\"\r\n                        primary={true}\r\n                        buttonStyle={{color: '#fff'}}\r\n                        label=\"Применить\"\r\n                        style={{marginTop: '15px'}}>\r\n                    </RaisedButton>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n})\r\n\r\nOrderFilterForm.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    filterDialog: PropTypes.shape({\r\n        filterLoading: PropTypes.bool.isRequired,\r\n        openFilterDialog: PropTypes.bool.isRequired,\r\n        handleOpenFilterDialog: PropTypes.func.isRequired,\r\n        handleCloseFilterDialog: PropTypes.func.isRequired,\r\n        handleSubmitFilterDialog: PropTypes.func.isRequired\r\n    })\r\n}\r\n\r\nexport default OrderFilterForm\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Order/OrderFilterForm.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose, withReducer} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport {reduxForm} from 'redux-form'\r\nimport moment from 'moment'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport MainStyles from '../Styles/MainStyles'\r\nimport numberFormat from '../../helpers/numberFormat'\r\nimport getConfig from '../../helpers/getConfig'\r\n\r\nexport const ORDER_ITEM_RETURN_DIALOG_OPEN = 'openOrderItemReturnDialog'\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            justifyContent: 'center',\r\n            display: ({loading}) => !loading ? 'flex' : 'none'\r\n        },\r\n        returnInfo: {\r\n            padding: '25px 0',\r\n            borderBottom: '1px #efefef solid',\r\n            '& span': {\r\n                display: 'block',\r\n                '&:first-child': {\r\n                    fontWeight: '600'\r\n                }\r\n            }\r\n        },\r\n        returnedItems: {\r\n            padding: '10px 0 0',\r\n            '& .row': {\r\n                '& > div': {\r\n                    textAlign: 'left !important'\r\n                },\r\n                '&:after': {\r\n                    left: '0.5rem',\r\n                    right: '0.5rem'\r\n                },\r\n                '&:first-child': {\r\n                    fontWeight: '600'\r\n                },\r\n                '&:last-child:after': {\r\n                    position: 'static'\r\n                },\r\n                '& > div:nth-child(3)': {\r\n                    textAlign: 'right !important'\r\n                },\r\n                '& > div:nth-child(4)': {\r\n                    textAlign: 'right !important'\r\n                }\r\n            }\r\n        }\r\n    })),\r\n    reduxForm({\r\n        form: 'OrderCreateForm',\r\n        enableReinitialize: true\r\n    }),\r\n    withReducer('state', 'dispatch', (state, action) => {\r\n        return {...state, ...action}\r\n    }, {open: false}),\r\n)\r\n\r\nconst OrderItemReturnDialog = enhance((props) => {\r\n    const {open, loading, onClose, classes, returnListData} = props\r\n    const id = _.get(returnListData, 'id')\r\n    const date = moment(_.get(returnListData, 'createdDate')).format('DD.MM.YYYY')\r\n    const comment = _.get(returnListData, 'comment')\r\n    const totalPrice = numberFormat(_.get(returnListData, 'totalPrice'))\r\n    const productList = _.map(_.get(returnListData, 'returnedProducts'), (item) => {\r\n        const amount = _.get(item, 'amount')\r\n        const returnId = _.get(item, 'id')\r\n        return (\r\n            <Row key={returnId} className=\"dottedList\">\r\n                <Col xs={3}>Товар</Col>\r\n                <Col xs={3}>{amount}</Col>\r\n                <Col xs={3}>Цена</Col>\r\n                <Col xs={3}>{totalPrice}</Col>\r\n            </Row>\r\n        )\r\n    })\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            contentStyle={loading ? {width: '300px'} : {width: '700px'}}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            bodyClassName={classes.popUp}\r\n            autoScrollBodyContent={true}>\r\n            <div className={classes.titleContent}>\r\n                <span>Возврат №{id}</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <div className={classes.loader}>\r\n                    <CircularProgress size={40} thickness={4}/>\r\n                </div>\r\n                <div className={classes.inContent} style={{minHeight: 'initial'}}>\r\n                    <div className={classes.field}>\r\n                        <div className={classes.returnInfo}>\r\n                            <div className={classes.flex} style={{justifyContent: 'space-between'}}>\r\n                                <div>\r\n                                    <span>Причина возврата</span>\r\n                                    <span>{comment}</span>\r\n                                </div>\r\n                                <div>Экспедитор: <span style={{fontWeight: '600'}}>Егор Вячеславович</span></div>\r\n                            </div>\r\n                            <div style={{marginTop: '20px'}}>\r\n                                <span>Дата возврата</span>\r\n                                <span>{date}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.returnedItems}>\r\n                            <Row className=\"dottedList\">\r\n                                <Col xs={3}>Товар</Col>\r\n                                <Col xs={3}>Количество</Col>\r\n                                <Col xs={3}>Цена ({getConfig('PRIMARY_CURRENCY')})</Col>\r\n                                <Col xs={3}>Сумма ({getConfig('PRIMARY_CURRENCY')})</Col>\r\n                            </Row>\r\n                            {productList}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\nOrderItemReturnDialog.propTyeps = {\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    returnListData: PropTypes.object\r\n}\r\nexport default OrderItemReturnDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Order/OrderItemReturnDialog.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose, withReducer} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport {Field, Fields, reduxForm, SubmissionError} from 'redux-form'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport {TextField, OrderListReturnField} from '../ReduxForm'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport OrderReturnTotalSum from '../ReduxForm/Order/OrderReturnTotalSum'\r\n\r\nexport const ORDER_RETURN_DIALOG_OPEN = 'openReturnDialog'\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\nconst enhance = compose(\r\n    injectSheet({\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            justifyContent: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        },\r\n        popUp: {\r\n            overflowY: 'hidden !important',\r\n            fontSize: '13px !important',\r\n            position: 'relative',\r\n            padding: '0 !important',\r\n            overflowX: 'hidden',\r\n            height: '100%',\r\n            minHeight: '641px'\r\n        },\r\n        titleContent: {\r\n            background: '#fff',\r\n            color: '#333',\r\n            fontWeight: 'bold',\r\n            textTransform: 'uppercase',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            borderBottom: '1px solid #efefef',\r\n            padding: '20px 30px',\r\n            zIndex: '999',\r\n            '& button': {\r\n                right: '13px',\r\n                padding: '0 !important',\r\n                position: 'absolute !important'\r\n            }\r\n        },\r\n        inContent: {\r\n            display: 'flex',\r\n            color: '#333',\r\n            padding: '15px 30px'\r\n        },\r\n        innerWrap: {\r\n            overflow: 'auto'\r\n        },\r\n        bodyContent: {\r\n            color: '#333',\r\n            width: '100%'\r\n        },\r\n        form: {\r\n            position: 'relative'\r\n        },\r\n        field: {\r\n            width: '100%'\r\n        },\r\n        left: {\r\n            flexBasis: '35%',\r\n            padding: '15px 30px',\r\n            borderRight: '1px #efefef solid'\r\n        },\r\n        title: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            height: '40px',\r\n            fontWeight: '600'\r\n        },\r\n        right: {\r\n            flexBasis: '65%',\r\n            maxWidth: '55%',\r\n            padding: '15px 30px'\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        },\r\n        selectContent: {\r\n            marginTop: '-15px'\r\n        },\r\n        radioButton: {\r\n            marginTop: '10px',\r\n            '&>div': {\r\n                marginBottom: '10px'\r\n            }\r\n        },\r\n        condition: {\r\n            marginTop: '20px',\r\n            '&>div:first-child': {\r\n                marginBottom: '-20px'\r\n            }\r\n        },\r\n        commentField: {\r\n            fontSize: '16px',\r\n            padding: '20px 30px',\r\n            textAlign: 'right',\r\n            borderTop: '1px #efefef solid'\r\n        },\r\n        returnComment: {\r\n            fontSize: '13px !important',\r\n            margin: '-20px 0 20px',\r\n            position: 'relative',\r\n            '& label': {\r\n                left: '0'\r\n            }\r\n        },\r\n        bottomButton: {\r\n            bottom: '0',\r\n            left: '0',\r\n            right: '0',\r\n            padding: '10px',\r\n            zIndex: '999',\r\n            borderTop: '1px solid #efefef',\r\n            background: '#fff',\r\n            textAlign: 'right',\r\n            '& span': {\r\n                fontSize: '13px !important',\r\n                fontWeight: '600 !important',\r\n                color: '#129fdd',\r\n                verticalAlign: 'inherit !important'\r\n            }\r\n        },\r\n        actionButton: {\r\n            fontSize: '13px !important',\r\n            margin: '0 !important'\r\n        },\r\n        podlojkaScroll: {\r\n            overflowY: 'auto !important',\r\n            padding: '0 !important'\r\n        }\r\n    }),\r\n    reduxForm({\r\n        form: 'OrderReturnForm',\r\n        enableReinitialize: true\r\n    }),\r\n    withReducer('state', 'dispatch', (state, action) => {\r\n        return {...state, ...action}\r\n    }, {open: false}),\r\n)\r\n\r\nconst OrderReturnDialog = enhance((props) => {\r\n    const {open, loading, handleSubmit, onClose, classes, orderData} = props\r\n    const returnId = _.get(orderData, 'id')\r\n\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            contentStyle={loading ? {width: '500px'} : {width: '800px'}}\r\n            className={classes.podlojkaScroll}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            bodyClassName={classes.popUp}\r\n            autoScrollBodyContent={true}>\r\n            <div className={classes.titleContent}>\r\n                <span>Возврат товаров заказа №{returnId}</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit} scrolling=\"auto\" className={classes.form}>\r\n                    <div className={classes.loader}>\r\n                        <CircularProgress size={40} thickness={4}/>\r\n                    </div>\r\n                    <div className={classes.innerWrap}>\r\n                        <div className={classes.inContent}>\r\n                            <div className={classes.field}>\r\n                                <Fields\r\n                                    names={['returned_products', 'product', 'amount', 'cost']}\r\n                                    component={OrderListReturnField}\r\n                                    orderData={orderData}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.commentField}>\r\n                            <Field\r\n                                name=\"comment\"\r\n                                component={TextField}\r\n                                className={classes.returnComment}\r\n                                label=\"Комментарий к возврату\"\r\n                                fullWidth={true}\r\n                                multiLine={true}\r\n                                rows={2}\r\n                                rowsMax={3}/>\r\n                            <div>Общая сумма возврата: <OrderReturnTotalSum/></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <FlatButton\r\n                            label=\"Возврат\"\r\n                            className={classes.actionButton}\r\n                            primary={true}\r\n                            type=\"submit\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\nOrderReturnDialog.propTyeps = {\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    orderData: PropTypes.object.isRequired\r\n}\r\nexport default OrderReturnDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Order/OrderReturnDialog.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose, withReducer} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport {DateField} from '../ReduxForm'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport {Col} from 'react-flexbox-grid'\r\nimport numberFormat from '../../helpers/numberFormat'\r\n\r\nexport const ORDER_SHORTAGE_DIALOG_OPEN = 'openShortageDialog'\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\nconst enhance = compose(\r\n    injectSheet({\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            justifyContent: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        },\r\n        popUp: {\r\n            overflowY: 'hidden !important',\r\n            fontSize: '13px !important',\r\n            position: 'relative',\r\n            padding: '0 !important',\r\n            overflowX: 'hidden',\r\n            height: '100%'\r\n        },\r\n        titleContent: {\r\n            background: '#fff',\r\n            color: '#333',\r\n            fontWeight: 'bold',\r\n            textTransform: 'uppercase',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            borderBottom: '1px solid #efefef',\r\n            padding: '20px 30px',\r\n            zIndex: '999',\r\n            '& button': {\r\n                right: '13px',\r\n                padding: '0 !important',\r\n                position: 'absolute !important'\r\n            }\r\n        },\r\n        inContent: {\r\n            display: 'flex',\r\n            color: '#333',\r\n            padding: '15px 30px 0',\r\n            borderBottom: '1px #efefef solid'\r\n        },\r\n        innerWrap: {\r\n            maxHeight: '50vh',\r\n            overflow: 'auto'\r\n        },\r\n        bodyContent: {\r\n            color: '#333',\r\n            width: '100%'\r\n        },\r\n        form: {\r\n            position: 'relative',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n            padding: '10px'\r\n        },\r\n        field: {\r\n            width: '100%'\r\n        },\r\n        title: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            height: '40px',\r\n            fontWeight: '600'\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        },\r\n        bottomButton: {\r\n            bottom: '0'\r\n        },\r\n        actionButton: {\r\n            fontSize: '13px !important',\r\n            margin: '0 !important'\r\n        },\r\n        modalListTable: {\r\n            width: '100%',\r\n            '& li': {\r\n                margin: '0',\r\n                padding: '10px 0',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                position: 'relative',\r\n                '& div:first-child': {\r\n                    paddingLeft: '0'\r\n                },\r\n                '& div:last-child': {\r\n                    paddingRight: '0'\r\n                },\r\n                '& div div:last-child': {\r\n                    display: 'inline-block'\r\n                }\r\n            },\r\n            '& .dottedList:last-child:after': {\r\n                content: '\"\"',\r\n                backgroundImage: 'none'\r\n            },\r\n            '& .dottedList input': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& .dottedList:last-child': {\r\n                marginBottom: '20px'\r\n            }\r\n        },\r\n        specialModalButton: {\r\n            '& span': {\r\n                color: '#12aaeb !important',\r\n                fontWeight: '600 !important'\r\n            }\r\n        }\r\n    }),\r\n    reduxForm({\r\n        form: 'OrderCreateForm',\r\n        enableReinitialize: true\r\n    }),\r\n    withReducer('state', 'dispatch', (state, action) => {\r\n        return {...state, ...action}\r\n    }, {open: false})\r\n)\r\nconst ZERO = 0\r\nconst OrderShortageDialog = enhance((props) => {\r\n    const {open, loading, handleSubmit, onClose, classes, products} = props\r\n    const productsList = _.map(products, (item, index) => {\r\n        const name = _.get(item, ['product', 'text'])\r\n        const shortage = _.get(item, 'amount') - _.get(item, ['extra', 'balance'])\r\n        const firstname = _.get(item, ['extra', 'supply_manager', 'first_name'])\r\n        const lastname = _.get(item, ['extra', 'supply_manager', 'second_name'])\r\n\r\n        if (shortage > ZERO) {\r\n            return (\r\n                <li key={index} className=\"dottedList\">\r\n                    <Col xs={6}>{name}</Col>\r\n                    <Col xs={3}>{numberFormat(shortage)}</Col>\r\n                    <Col xs={3}>{firstname} {lastname}</Col>\r\n                </li>\r\n            )\r\n        }\r\n        return (null)\r\n    })\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            contentStyle={loading ? {width: '300px'} : {width: '800px'}}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            bodyClassName={classes.popUp}\r\n            autoScrollBodyContent={true}>\r\n            <div className={classes.titleContent}>\r\n                <span>Добавление заказа / недостающие товары</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <div className={classes.loader}>\r\n                    <CircularProgress size={40} thickness={4}/>\r\n                </div>\r\n                <div className={classes.innerWrap}>\r\n                    <div className={classes.inContent}>\r\n                        <ul className={classes.modalListTable}>\r\n                            <li className=\"dottedList\">\r\n                                <Col xs={6}>\r\n                                    <strong>Наименование</strong>\r\n                                </Col>\r\n                                <Col xs={3}>\r\n                                    <strong>Недостоющее кол-во</strong>\r\n                                </Col>\r\n                                <Col xs={3}>\r\n                                    <strong>Исполнитель</strong>\r\n                                </Col>\r\n                            </li>\r\n                            {productsList}\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <form onSubmit={onSubmit} scrolling=\"auto\" className={classes.form}>\r\n                        <Field\r\n                            name=\"request_dedline\"\r\n                            component={DateField}\r\n                            className={classes.inputFieldCustom}\r\n                            hintText=\"Срок запроса\"\r\n                            fullWidth={true}/>\r\n                        <div className={classes.specialModalButton}>\r\n                            <FlatButton\r\n                                label=\"Передать запрос на подготовку\"\r\n                                className={classes.actionButton}\r\n                                primary={true}\r\n                                type=\"submit\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\n\r\nOrderShortageDialog.propTyeps = {\r\n    products: PropTypes.array\r\n}\r\nexport default OrderShortageDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Order/OrderShortage.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose, withReducer} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport {reduxForm} from 'redux-form'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport MainStyles from '../Styles/MainStyles'\r\nimport numberFormat from '../../helpers/numberFormat'\r\nimport moment from 'moment'\r\nimport noPayment from '../Images/noPayment.png'\r\n\r\nexport const ORDER_TRANSACTIONS_DIALOG_OPEN = 'openTransactionsDialog'\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            justifyContent: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        },\r\n        transactions: {\r\n            padding: '10px 0 0',\r\n            '& .row': {\r\n                '& > div': {\r\n                    textAlign: 'left !important'\r\n                },\r\n                '&:after': {\r\n                    left: '0.5rem',\r\n                    right: '0.5rem'\r\n                },\r\n                '&:first-child': {\r\n                    fontWeight: '600'\r\n                },\r\n                '&:last-child:after': {\r\n                    position: 'static'\r\n                },\r\n                '& > div:nth-child(3)': {\r\n                    textAlign: 'right !important'\r\n                },\r\n                '& > div:nth-child(4)': {\r\n                    textAlign: 'right !important'\r\n                }\r\n            }\r\n        },\r\n        noPayment: {\r\n            background: 'url(' + noPayment + ') no-repeat center 70px',\r\n            backgroundSize: '270px',\r\n            height: '100%',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            boxSizing: 'border-box',\r\n            paddingTop: '25px',\r\n            '& > div': {\r\n                marginTop: '140px',\r\n                fontSize: '15px',\r\n                width: '50%',\r\n                textAlign: 'center'\r\n            }\r\n        }\r\n    })),\r\n    reduxForm({\r\n        form: 'OrderCreateForm',\r\n        enableReinitialize: true\r\n    }),\r\n    withReducer('state', 'dispatch', (state, action) => {\r\n        return {...state, ...action}\r\n    }, {open: false}),\r\n)\r\n\r\nconst OrderTransactionsDialog = enhance((props) => {\r\n    const {open, loading, onClose, classes, paymentData} = props\r\n    const orderId = _.get(paymentData, 'id')\r\n    const data = _.get(paymentData, 'data')\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            contentStyle={loading ? {width: '300px'} : {width: '600px'}}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            bodyClassName={classes.popUp}\r\n            autoScrollBodyContent={true}>\r\n            <div className={classes.titleContent}>\r\n                <span>Список оплат по заказу №{orderId}</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <div className={classes.loader}>\r\n                    <CircularProgress size={40} thickness={4}/>\r\n                </div>\r\n                <div className={classes.inContent}>\r\n                    <div className={classes.field}>\r\n                        {data ? <div className={classes.transactions}>\r\n                            <Row className=\"dottedList\">\r\n                                <Col xs={3}>Код оплаты</Col>\r\n                                <Col xs={3}>Касса</Col>\r\n                                <Col xs={3}>Дата оплаты</Col>\r\n                                <Col xs={3}>Сумма оплаты</Col>\r\n                            </Row>\r\n                            {_.map(_.get(paymentData, 'data'), (item) => {\r\n                                const id = _.get(item, ['transaction', 'id'])\r\n                                const cashbox = _.get(item, ['transaction', 'cashbox', 'name'])\r\n                                const payDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\r\n                                const amount = numberFormat(_.get(item, ['transaction', 'amount']))\r\n\r\n                                return (\r\n                                    <Row key={id} className=\"dottedList\">\r\n                                        <Col xs={3}>{id}</Col>\r\n                                        <Col xs={3}>{cashbox}</Col>\r\n                                        <Col xs={3}>{payDate}</Col>\r\n                                        <Col xs={3}>{amount}</Col>\r\n                                    </Row>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        : <div className={classes.noPayment}>\r\n                                <div>По данному заказу еще не произведено оплат</div>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\nOrderTransactionsDialog.propTyeps = {\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    paymentData: PropTypes.object\r\n}\r\nexport default OrderTransactionsDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Order/OrderTransactionsDialog.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport {compose, withHandlers} from 'recompose'\r\nimport {reduxForm, Field} from 'redux-form'\r\nimport PropTypes from 'prop-types'\r\nimport injectSheet from 'react-jss'\r\nimport {Link} from 'react-router'\r\nimport Paper from 'material-ui/Paper'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport RaisedButton from 'material-ui/RaisedButton'\r\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\r\nimport DateToDateField from '../ReduxForm/Basic/DateToDateField'\r\n\r\nimport CloseIcon from '../CloseIcon'\r\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\r\n\r\nexport const PENDING_EXPENSES_FILTER_OPEN = 'openFilterDialog'\r\n\r\nexport const PENDING_EXPENSES_FILTER_KEY = {\r\n    FROM_DATE: 'fromDate',\r\n    TO_DATE: 'toDate'\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            position: 'absolute',\r\n            minWidth: '300px',\r\n            background: '#fff',\r\n            zIndex: 99,\r\n            top: 0,\r\n            left: 0,\r\n            borderRadius: 0,\r\n            padding: '10px 20px 10px 20px'\r\n        },\r\n        afterFilter: {\r\n            width: '268px',\r\n            alignItems: 'center',\r\n            display: 'flex',\r\n            backgroundColor: '#efefef',\r\n            position: 'relative',\r\n            padding: '16px 30px',\r\n            marginLeft: '-30px',\r\n            '& > div:nth-child(2)': {\r\n                position: 'absolute',\r\n                right: '0'\r\n            },\r\n            '& > div:nth-child(1)': {\r\n                color: '#666666'\r\n            },\r\n            '& button': {\r\n                borderLeft: '1px solid white !important'\r\n            }\r\n        },\r\n        icon: {\r\n            color: '#8f8f8f !important'\r\n        },\r\n        arrow: {\r\n            color: '#12aaeb',\r\n            paddingRight: '14px',\r\n            position: 'relative',\r\n            '& svg': {\r\n                position: 'absolute',\r\n                width: '13px !important',\r\n                height: '20px !important'\r\n            }\r\n        },\r\n        header: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n            '& button': {\r\n                marginRight: '-12px !important'\r\n            }\r\n        },\r\n        title: {\r\n            fontSize: '15px',\r\n            color: '#5d6474'\r\n        },\r\n        submit: {\r\n            color: '#fff !important'\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        }\r\n    }),\r\n    reduxForm({\r\n        form: 'PendingExpensesFilterForm',\r\n        enableReinitialize: true\r\n    }),\r\n    withHandlers({\r\n        getCount: props => () => {\r\n            const {filter} = props\r\n            return _(PENDING_EXPENSES_FILTER_KEY)\r\n                .values()\r\n                .filter(item => item !== PENDING_EXPENSES_FILTER_KEY.FROM_DATE)\r\n                .filter(item => filter.getParam(item))\r\n                .value()\r\n                .length\r\n        }\r\n    })\r\n)\r\n\r\nconst PendingExpensesFilterForm = enhance((props) => {\r\n    const {classes, filterDialog, getCount} = props\r\n    const filterCounts = getCount()\r\n\r\n    if (!filterDialog.openFilterDialog) {\r\n        if (filterCounts) {\r\n            return (\r\n                <div className={classes.afterFilter}>\r\n                    <div>Фильтр: {filterCounts} элемента</div>\r\n                    <div>\r\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                            <BorderColorIcon color=\"#8f8f8f\" />\r\n                        </IconButton>\r\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\r\n                            <CloseIcon className={classes.icon}/>\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Link\r\n                    className={classes.arrow}\r\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.wrapper} zDepth={2}>\r\n                <div className={classes.header}>\r\n                    <span className={classes.title}>Фильтр</span>\r\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\r\n                        <CloseIcon className={classes.icon} />\r\n                    </IconButton>\r\n                </div>\r\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\r\n                    <div>\r\n                        <Field className={classes.inputFieldCustom} name=\"date\" component={DateToDateField} label=\"Диапазон дат\" fullWidth={true}/>\r\n                    </div>\r\n                    <RaisedButton\r\n                        type=\"submit\"\r\n                        primary={true}\r\n                        buttonStyle={{color: '#fff'}}\r\n                        label=\"Применить\"\r\n                        style={{marginTop: '15px'}}>\r\n                    </RaisedButton>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n})\r\n\r\nPendingExpensesFilterForm.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    filterDialog: PropTypes.shape({\r\n        filterLoading: PropTypes.bool.isRequired,\r\n        openFilterDialog: PropTypes.bool.isRequired,\r\n        handleOpenFilterDialog: PropTypes.func.isRequired,\r\n        handleCloseFilterDialog: PropTypes.func.isRequired,\r\n        handleSubmitFilterDialog: PropTypes.func.isRequired\r\n    })\r\n}\r\n\r\nexport default PendingExpensesFilterForm\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/PendingExpenses/PendingExpensesFilterForm.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport {TextField, CashboxCustomField} from '../ReduxForm'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport MainStyles from '../Styles/MainStyles'\r\nimport numberformat from '../../helpers/numberFormat'\r\nimport CashboxCurrencyField from '../ReduxForm/CashboxCurrencyField'\r\nimport PendingPaymentRadioButton from '../ReduxForm/PendingPaymentRadioButton'\r\n\r\nexport const PENDING_PAYMENTS_CREATE_DIALOG_OPEN = 'openCreateDialog'\r\n\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\r\n\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        latLng,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        },\r\n        info: {\r\n            padding: '20px 0'\r\n        },\r\n        infoHeader: {\r\n            fontWeight: '600',\r\n            lineHeight: '20px'\r\n        },\r\n        infoSummary: {\r\n            color: '#666',\r\n            marginTop: '10px'\r\n        }\r\n    })),\r\n    reduxForm({\r\n        form: 'PendingPaymentsCreateForm',\r\n        enableReinitialize: true\r\n    })\r\n)\r\n\r\nconst PendingPaymentsCreateDialog = enhance((props) => {\r\n    const {open, loading, handleSubmit, onClose, detailData, classes} = props\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n\r\n    const id = _.get(detailData, 'id')\r\n    const client = _.get(detailData, ['data', 'client'])\r\n    const totalBalance = numberformat(_.get(detailData, ['data', 'totalBalance']))\r\n    const clientName = _.get(client, 'name')\r\n\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            className={classes.dialog}\r\n            contentStyle={loading ? {width: '300px'} : {width: '350px'}}\r\n            bodyStyle={{minHeight: 'auto'}}\r\n            bodyClassName={classes.popUp}>\r\n            <div className={classes.titleContent}>\r\n                <span>Оплата</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit} className={classes.form}>\r\n                    <div className={classes.inContent} style={{minHeight: '220px'}}>\r\n                        <div className={classes.loader}>\r\n                            <CircularProgress size={40} thickness={4}/>\r\n                        </div>\r\n                        <div className={classes.field}>\r\n                            <div className={classes.info}>\r\n                                <div className={classes.infoHeader}>\r\n                                    <div>{clientName}</div>\r\n                                    <div>Заказ №{id}</div>\r\n                                </div>\r\n                                <div className={classes.infoSummary}>\r\n                                    <div>Сумма заказа:<span style={{marginLeft: '10px'}}>{totalBalance}</span></div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.cashbox}>\r\n                                <Field\r\n                                    name=\"cashbox\"\r\n                                    className={classes.inputFieldCustom}\r\n                                    component={CashboxCustomField}\r\n                                    label=\"Касса получатель\"\r\n                                    fullWidth={true}\r\n                                />\r\n                                <div className={classes.flex}>\r\n                                    <Field\r\n                                        name=\"amount\"\r\n                                        className={classes.inputFieldCustom}\r\n                                        component={TextField}\r\n                                        label=\"Сумма\"\r\n                                        value={null}\r\n                                        fullWidth={true}\r\n                                    />\r\n                                    <CashboxCurrencyField/>\r\n                                </div>\r\n                                <div>Использовать</div>\r\n                                <Field\r\n                                    name=\"now\"\r\n                                    style={{marginTop: '10px'}}\r\n                                    component={PendingPaymentRadioButton}\r\n                                    label=\"Текущий курс\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <FlatButton\r\n                            label=\"Сохранить\"\r\n                            className={classes.actionButton}\r\n                            primary={true}\r\n                            type=\"submit\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\n\r\nPendingPaymentsCreateDialog.propTyeps = {\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default PendingPaymentsCreateDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/PendingPayments/PendingPaymentsCreateDialog.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport {compose, withHandlers} from 'recompose'\r\nimport {reduxForm, Field} from 'redux-form'\r\nimport PropTypes from 'prop-types'\r\nimport injectSheet from 'react-jss'\r\nimport {Link} from 'react-router'\r\nimport Paper from 'material-ui/Paper'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport RaisedButton from 'material-ui/RaisedButton'\r\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\r\nimport DateToDateField from '../ReduxForm/Basic/DateToDateField'\r\n\r\nimport CloseIcon from '../CloseIcon'\r\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\r\n\r\nexport const PENDING_PAYMENTS_FILTER_OPEN = 'openFilterDialog'\r\n\r\nexport const PENDING_PAYMENTS_FILTER_KEY = {\r\n    FROM_DATE: 'fromDate',\r\n    TO_DATE: 'toDate'\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            position: 'absolute',\r\n            minWidth: '300px',\r\n            background: '#fff',\r\n            zIndex: 99,\r\n            top: 0,\r\n            left: 0,\r\n            borderRadius: 0,\r\n            padding: '10px 20px 10px 20px'\r\n        },\r\n        afterFilter: {\r\n            width: '268px',\r\n            alignItems: 'center',\r\n            display: 'flex',\r\n            backgroundColor: '#efefef',\r\n            position: 'relative',\r\n            padding: '16px 30px',\r\n            marginLeft: '-30px',\r\n            '& > div:nth-child(2)': {\r\n                position: 'absolute',\r\n                right: '0'\r\n            },\r\n            '& > div:nth-child(1)': {\r\n                color: '#666666'\r\n            },\r\n            '& button': {\r\n                borderLeft: '1px solid white !important'\r\n            }\r\n        },\r\n        icon: {\r\n            color: '#8f8f8f !important'\r\n        },\r\n        arrow: {\r\n            color: '#12aaeb',\r\n            paddingRight: '14px',\r\n            position: 'relative',\r\n            '& svg': {\r\n                position: 'absolute',\r\n                width: '13px !important',\r\n                height: '20px !important'\r\n            }\r\n        },\r\n        header: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n            '& button': {\r\n                marginRight: '-12px !important'\r\n            }\r\n        },\r\n        title: {\r\n            fontSize: '15px',\r\n            color: '#5d6474'\r\n        },\r\n        submit: {\r\n            color: '#fff !important'\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        }\r\n    }),\r\n    reduxForm({\r\n        form: 'PendingPaymentsFilterForm',\r\n        enableReinitialize: true\r\n    }),\r\n    withHandlers({\r\n        getCount: props => () => {\r\n            const {filter} = props\r\n            return _(PENDING_PAYMENTS_FILTER_KEY)\r\n                .values()\r\n                .filter(item => item !== PENDING_PAYMENTS_FILTER_KEY.FROM_DATE)\r\n                .filter(item => filter.getParam(item))\r\n                .value()\r\n                .length\r\n        }\r\n    })\r\n)\r\n\r\nconst PendingPaymentsFilterForm = enhance((props) => {\r\n    const {classes, filterDialog, getCount} = props\r\n    const filterCounts = getCount()\r\n\r\n    if (!filterDialog.openFilterDialog) {\r\n        if (filterCounts) {\r\n            return (\r\n                <div className={classes.afterFilter}>\r\n                    <div>Фильтр: {filterCounts} элемента</div>\r\n                    <div>\r\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                            <BorderColorIcon color=\"#8f8f8f\" />\r\n                        </IconButton>\r\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\r\n                            <CloseIcon className={classes.icon}/>\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Link\r\n                    className={classes.arrow}\r\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.wrapper} zDepth={2}>\r\n                <div className={classes.header}>\r\n                    <span className={classes.title}>Фильтр</span>\r\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\r\n                        <CloseIcon className={classes.icon} />\r\n                    </IconButton>\r\n                </div>\r\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\r\n                    <div>\r\n                        <Field className={classes.inputFieldCustom} name=\"date\" component={DateToDateField} label=\"Диапазон дат\" fullWidth={true}/>\r\n                    </div>\r\n                    <RaisedButton\r\n                        type=\"submit\"\r\n                        primary={true}\r\n                        buttonStyle={{color: '#fff'}}\r\n                        label=\"Применить\"\r\n                        style={{marginTop: '15px'}}>\r\n                    </RaisedButton>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n})\r\n\r\nPendingPaymentsFilterForm.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    filterDialog: PropTypes.shape({\r\n        filterLoading: PropTypes.bool.isRequired,\r\n        openFilterDialog: PropTypes.bool.isRequired,\r\n        handleOpenFilterDialog: PropTypes.func.isRequired,\r\n        handleCloseFilterDialog: PropTypes.func.isRequired,\r\n        handleSubmitFilterDialog: PropTypes.func.isRequired\r\n    })\r\n}\r\n\r\nexport default PendingPaymentsFilterForm\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/PendingPayments/PendingPaymentsFilterForm.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport {compose, withHandlers} from 'recompose'\r\nimport {reduxForm, Field} from 'redux-form'\r\nimport PropTypes from 'prop-types'\r\nimport injectSheet from 'react-jss'\r\nimport {Link} from 'react-router'\r\nimport Paper from 'material-ui/Paper'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport RaisedButton from 'material-ui/RaisedButton'\r\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\r\nimport {BrandSearchField, MeasurementSearchField} from '../ReduxForm'\r\nimport CloseIcon from '../CloseIcon'\r\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\r\n\r\nexport const PRICE_FILTER_OPEN = 'openFilterDialog'\r\n\r\nexport const PRICE_FILTER_KEY = {\r\n    BRAND: 'brand',\r\n    TYPE: 'type',\r\n    MEASUREMENT: 'measurement'\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            position: 'absolute',\r\n            minWidth: '300px',\r\n            background: '#fff',\r\n            zIndex: 99,\r\n            top: 0,\r\n            left: 0,\r\n            borderRadius: 0,\r\n            padding: '10px 20px 10px 20px'\r\n        },\r\n        afterFilter: {\r\n            width: '268px',\r\n            alignItems: 'center',\r\n            display: 'flex',\r\n            backgroundColor: '#efefef',\r\n            position: 'relative',\r\n            padding: '16px 30px',\r\n            marginLeft: '-30px',\r\n            '& > div:nth-child(2)': {\r\n                position: 'absolute',\r\n                right: '0'\r\n            },\r\n            '& > div:nth-child(1)': {\r\n                color: '#666666'\r\n            },\r\n            '& button': {\r\n                borderLeft: '1px solid white !important'\r\n            }\r\n        },\r\n        icon: {\r\n            color: '#8f8f8f !important'\r\n        },\r\n        arrow: {\r\n            color: '#12aaeb',\r\n            paddingRight: '14px',\r\n            position: 'relative',\r\n            '& svg': {\r\n                position: 'absolute',\r\n                width: '13px !important',\r\n                height: '20px !important'\r\n            }\r\n        },\r\n        header: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n            '& button': {\r\n                marginRight: '-12px !important'\r\n            }\r\n        },\r\n        title: {\r\n            fontSize: '15px',\r\n            color: '#5d6474'\r\n        },\r\n        submit: {\r\n            color: '#fff !important'\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        }\r\n    }),\r\n    reduxForm({\r\n        form: 'PriceFilterForm',\r\n        enableReinitialize: true\r\n    }),\r\n    withHandlers({\r\n        getCount: props => () => {\r\n            const {filter} = props\r\n            return _(PRICE_FILTER_KEY)\r\n                .values()\r\n                .filter(item => item !== PRICE_FILTER_KEY.FROM_DATE)\r\n                .filter(item => filter.getParam(item))\r\n                .value()\r\n                .length\r\n        }\r\n    })\r\n)\r\n\r\nconst PriceFilterForm = enhance((props) => {\r\n    const {classes, filterDialog, getCount} = props\r\n    const filterCounts = getCount()\r\n\r\n    if (!filterDialog.openFilterDialog) {\r\n        if (filterCounts) {\r\n            return (\r\n                <div className={classes.afterFilter}>\r\n                    <div>Фильтр: {filterCounts} элемента</div>\r\n                    <div>\r\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                            <BorderColorIcon color=\"#8f8f8f\" />\r\n                        </IconButton>\r\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\r\n                            <CloseIcon className={classes.icon}/>\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Link\r\n                    className={classes.arrow}\r\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.wrapper} zDepth={2}>\r\n                <div className={classes.header}>\r\n                    <span className={classes.title}>Фильтр</span>\r\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\r\n                        <CloseIcon className={classes.icon} />\r\n                    </IconButton>\r\n                </div>\r\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\r\n                    <div>\r\n                        <Field className={classes.inputFieldCustom} name=\"measurement\" component={MeasurementSearchField} label=\"Мера\"/>\r\n                    </div>\r\n                    <div>\r\n                        <Field className={classes.inputFieldCustom} name=\"brand\" component={BrandSearchField} label=\"Бренд\"/>\r\n                    </div>\r\n                    <RaisedButton\r\n                        type=\"submit\"\r\n                        primary={true}\r\n                        buttonStyle={{color: '#fff'}}\r\n                        label=\"Применить\"\r\n                        style={{marginTop: '15px'}}>\r\n                    </RaisedButton>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n})\r\n\r\nPriceFilterForm.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    filterDialog: PropTypes.shape({\r\n        filterLoading: PropTypes.bool.isRequired,\r\n        openFilterDialog: PropTypes.bool.isRequired,\r\n        handleOpenFilterDialog: PropTypes.func.isRequired,\r\n        handleCloseFilterDialog: PropTypes.func.isRequired,\r\n        handleSubmitFilterDialog: PropTypes.func.isRequired\r\n    })\r\n}\r\n\r\nexport default PriceFilterForm\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Price/PriceFilterForm.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport {Field, Fields, reduxForm, SubmissionError} from 'redux-form'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport {\r\n    ProviderContactsField,\r\n    PricesListProductField,\r\n    TextField,\r\n    DateField\r\n} from '../ReduxForm'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\n\r\nexport const PRICES_CREATE_DIALOG_OPEN = 'openCreateDialog'\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\nconst enhance = compose(\r\n    injectSheet({\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            justifyContent: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        },\r\n        podlojkaScroll: {\r\n            overflowY: 'auto !important',\r\n            padding: '0 !important',\r\n            '& > div:first-child > div:first-child': {\r\n                transform: 'translate(0px, 0px) !important'\r\n            },\r\n            '& > div': {\r\n                height: '100% !important',\r\n                '& > div': {\r\n                    height: '100% !important',\r\n                    padding: '50px 0',\r\n                    '& > div': {\r\n                        height: '100%'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        popUp: {\r\n            background: '#fff',\r\n            overflowY: 'hidden !important',\r\n            fontSize: '13px !important',\r\n            position: 'relative',\r\n            padding: '0 !important',\r\n            overflowX: 'hidden',\r\n            height: '100%',\r\n            minHeight: '700px',\r\n            maxHeight: 'inherit !important'\r\n        },\r\n        titleContent: {\r\n            background: '#fff',\r\n            color: '#333',\r\n            fontWeight: 'bold',\r\n            textTransform: 'uppercase',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            borderBottom: '1px solid #efefef',\r\n            padding: '20px 30px',\r\n            zIndex: '999',\r\n            '& button': {\r\n                right: '13px',\r\n                padding: '0 !important',\r\n                position: 'absolute !important'\r\n            }\r\n        },\r\n        inContent: {\r\n            display: 'flex',\r\n            color: '#333',\r\n            height: '100%',\r\n            padding: '0 30px'\r\n        },\r\n        innerWrap: {\r\n            height: 'calc(100% - 57px)'\r\n        },\r\n        bodyContent: {\r\n            color: '#333',\r\n            width: '100%',\r\n            height: 'calc(100% - 59px)'\r\n        },\r\n        form: {\r\n            position: 'relative',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            height: '100%',\r\n            justifyContent: 'space-between'\r\n        },\r\n        field: {\r\n            width: '100%'\r\n        },\r\n        subTitleOrder: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            marginBottom: '5px !important',\r\n            justifyContent: 'space-between',\r\n            fontWeight: '600',\r\n            padding: '0 !important',\r\n            '& span': {\r\n                fontWeight: '600 !important'\r\n            }\r\n        },\r\n        radioButton: {\r\n            marginTop: '10px',\r\n            '&>div': {\r\n                marginBottom: '10px'\r\n            }\r\n        },\r\n        condition: {\r\n            marginTop: '20px',\r\n            '&>div:first-child': {\r\n                marginBottom: '-20px'\r\n            }\r\n        },\r\n        commentFieldPrices: {\r\n            textAlign: 'left',\r\n            width: '100%'\r\n        },\r\n        bottomButton: {\r\n            bottom: '0',\r\n            left: '0',\r\n            right: '0',\r\n            padding: '10px',\r\n            zIndex: '999',\r\n            borderTop: '1px solid #efefef',\r\n            background: '#fff',\r\n            textAlign: 'right',\r\n            '& span': {\r\n                fontSize: '13px !important',\r\n                fontWeight: '600 !important',\r\n                color: '#129fdd',\r\n                verticalAlign: 'inherit !important'\r\n            }\r\n        },\r\n        actionButton: {\r\n            fontSize: '13px !important',\r\n            margin: '0 !important'\r\n        },\r\n        leftOrderPart: {\r\n            flexBasis: '35%',\r\n            padding: '20px 30px 20px 0',\r\n            borderRight: '1px #efefef solid'\r\n        },\r\n        rightOrderPart: {\r\n            flexBasis: '65%',\r\n            maxWidth: '65%',\r\n            padding: '20px 1px 20px 30px',\r\n            maxHeight: '694px',\r\n            overflow: 'auto'\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        },\r\n        inputDateCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            },\r\n            '& div:first-child': {\r\n                height: '45px !important'\r\n            }\r\n        },\r\n        inputFieldDis: {\r\n            fontSize: '13px !important',\r\n            paddingTop: '24px',\r\n            '& div': {\r\n                color: 'rgb(229, 115, 115) !important'\r\n            }\r\n        }\r\n    }),\r\n    reduxForm({\r\n        form: 'PricesCreateForm',\r\n        enableReinitialize: true\r\n    })\r\n)\r\n\r\nconst customContentStyle = {\r\n    width: '1000px',\r\n    maxWidth: 'none'\r\n}\r\nconst PricesCreateDialog = enhance((props) => {\r\n    const {openDialog, handleSubmit, onClose, classes, isUpdate} = props\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            className={classes.podlojkaScroll}\r\n            contentStyle={customContentStyle}\r\n            open={openDialog}\r\n            onRequestClose={onClose}\r\n            bodyClassName={classes.popUp}\r\n            autoScrollBodyContent={true}>\r\n            <div className={classes.titleContent}>\r\n                <span>{isUpdate ? 'Изменение поставки' : 'Добавление поставки'}</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit} scrolling=\"auto\" className={classes.form}>\r\n                    <div className={classes.loader}>\r\n                        <CircularProgress size={40} thickness={4}/>\r\n                    </div>\r\n                    <div className={classes.innerWrap}>\r\n                        <div className={classes.inContent} style={{minHeight: '350px'}}>\r\n                            <div className={classes.leftOrderPart}>\r\n                                <div className={classes.subTitleOrder}>Выбор поставщика</div>\r\n                                <div className={classes.selectContent}>\r\n                                    <Field\r\n                                        name=\"name\"\r\n                                        component={TextField}\r\n                                        className={classes.inputFieldCustom}\r\n                                        label=\"Наименование\"\r\n                                        fullWidth={true}/>\r\n                                    <Field\r\n                                        name=\"contact\"\r\n                                        component={ProviderContactsField}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.condition}>\r\n                                    <div className={classes.subTitleOrder}>Условия акции </div>\r\n                                    <Field\r\n                                        name=\"beginDate\"\r\n                                        component={DateField}\r\n                                        className={classes.inputDateCustom}\r\n                                        floatingLabelText=\"Дата начала акции\"\r\n                                        container=\"inline\"\r\n                                        fullWidth={true}/>\r\n                                    <Field\r\n                                        name=\"tillDate\"\r\n                                        component={DateField}\r\n                                        className={classes.inputDateCustom}\r\n                                        floatingLabelText=\"Дата завершения акции\"\r\n                                        container=\"inline\"\r\n                                        fullWidth={true}/>\r\n                                    <Field\r\n                                        name=\"discount\"\r\n                                        component={TextField}\r\n                                        className={classes.inputFieldCustom}\r\n                                        label=\"Размер акции\"\r\n                                        /> %\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.rightOrderPart}>\r\n                                <Fields\r\n                                    names={['products', 'product', 'amount']}\r\n                                    component={PricesListProductField}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <FlatButton\r\n                            label=\"Оформить заказ\"\r\n                            className={classes.actionButton}\r\n                            primary={true}\r\n                            type=\"submit\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\nPricesCreateDialog.propTyeps = {\r\n    isUpdate: PropTypes.bool,\r\n    openDialog: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\nPricesCreateDialog.defaultProps = {\r\n    isUpdate: false\r\n}\r\nexport default PricesCreateDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Prices/PricesCreateDialog.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport {compose, withHandlers} from 'recompose'\r\nimport {reduxForm, Field} from 'redux-form'\r\nimport PropTypes from 'prop-types'\r\nimport injectSheet from 'react-jss'\r\nimport {Link} from 'react-router'\r\nimport Paper from 'material-ui/Paper'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport RaisedButton from 'material-ui/RaisedButton'\r\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\r\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\r\nimport CloseIcon from '../CloseIcon'\r\nimport DateToDateField from '../ReduxForm/Basic/DateToDateField'\r\n\r\nexport const PRICES_FILTER_OPEN = 'openFilterDialog'\r\n\r\nexport const PRICES_FILTER_KEY = {\r\n    BEGIN_FROM_DATE: 'beginFromDate',\r\n    BEGIN_TO_DATE: 'beginToDate',\r\n    TILL_FROM_DATE: 'tillFromDate',\r\n    TILL_TO_DATE: 'tillToDate'\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            position: 'absolute',\r\n            minWidth: '300px',\r\n            background: '#fff',\r\n            zIndex: 99,\r\n            top: 0,\r\n            left: 0,\r\n            borderRadius: 0,\r\n            padding: '10px 20px 10px 20px'\r\n        },\r\n        afterFilter: {\r\n            width: '268px',\r\n            alignItems: 'center',\r\n            display: 'flex',\r\n            backgroundColor: '#efefef',\r\n            position: 'relative',\r\n            padding: '16px 30px',\r\n            marginLeft: '-30px',\r\n            '& > div:nth-child(2)': {\r\n                position: 'absolute',\r\n                right: '0'\r\n            },\r\n            '& > div:nth-child(1)': {\r\n                color: '#666666'\r\n            },\r\n            '& button': {\r\n                borderLeft: '1px solid white !important'\r\n            }\r\n        },\r\n        icon: {\r\n            color: '#8f8f8f !important'\r\n        },\r\n        arrow: {\r\n            color: '#12aaeb',\r\n            paddingRight: '14px',\r\n            position: 'relative',\r\n            '& svg': {\r\n                position: 'absolute',\r\n                width: '13px !important',\r\n                height: '20px !important'\r\n            }\r\n        },\r\n        header: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n            '& button': {\r\n                marginRight: '-12px !important'\r\n            }\r\n        },\r\n        title: {\r\n            fontSize: '15px',\r\n            color: '#5d6474'\r\n        },\r\n        submit: {\r\n            color: '#fff !important'\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        }\r\n    }),\r\n    reduxForm({\r\n        form: 'PricesFilterForm',\r\n        enableReinitialize: true\r\n    }),\r\n    withHandlers({\r\n        getCount: props => () => {\r\n            const {filter} = props\r\n            return _(PRICES_FILTER_KEY)\r\n                .values()\r\n                .filter(item => item !== PRICES_FILTER_KEY.FROM_DATE)\r\n                .filter(item => filter.getParam(item))\r\n                .value()\r\n                .length\r\n        }\r\n    })\r\n)\r\n\r\nconst PricesFilterForm = enhance((props) => {\r\n    const {classes, filterDialog, getCount} = props\r\n    const filterCounts = getCount()\r\n\r\n    if (!filterDialog.openFilterDialog) {\r\n        if (filterCounts) {\r\n            return (\r\n                <div className={classes.afterFilter}>\r\n                    <div>Фильтр: {filterCounts} элемента</div>\r\n                    <div>\r\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                            <BorderColorIcon color=\"#8f8f8f\" />\r\n                        </IconButton>\r\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\r\n                            <CloseIcon className={classes.icon}/>\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Link\r\n                    className={classes.arrow}\r\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.wrapper} zDepth={2}>\r\n                <div className={classes.header}>\r\n                    <span className={classes.title}>Фильтр</span>\r\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\r\n                        <CloseIcon className={classes.icon} />\r\n                    </IconButton>\r\n                </div>\r\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\r\n                    <div>\r\n                        <Field className={classes.inputField} name=\"beginDate\" component={DateToDateField} label=\"Дата поставки\" fullWidth={true}/>\r\n                    </div>\r\n                    <div>\r\n                        <Field className={classes.inputField} name=\"tillDate\" component={DateToDateField} label=\"Дата создания\" fullWidth={true}/>\r\n                    </div>\r\n                    <div>\r\n                        <RaisedButton\r\n                            type=\"submit\"\r\n                            primary={true}\r\n                            buttonStyle={{color: '#fff'}}>\r\n                            Применить\r\n                        </RaisedButton>\r\n                    </div>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n})\r\n\r\nPricesFilterForm.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    filterDialog: PropTypes.shape({\r\n        filterLoading: PropTypes.bool.isRequired,\r\n        openFilterDialog: PropTypes.bool.isRequired,\r\n        handleOpenFilterDialog: PropTypes.func.isRequired,\r\n        handleCloseFilterDialog: PropTypes.func.isRequired,\r\n        handleSubmitFilterDialog: PropTypes.func.isRequired\r\n    })\r\n}\r\n\r\nexport default PricesFilterForm\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Prices/PricesFilterForm.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport {compose, withHandlers} from 'recompose'\r\nimport {reduxForm, Field} from 'redux-form'\r\nimport PropTypes from 'prop-types'\r\nimport injectSheet from 'react-jss'\r\nimport {Link} from 'react-router'\r\nimport Paper from 'material-ui/Paper'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport RaisedButton from 'material-ui/RaisedButton'\r\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\r\nimport {ProductTypeSearchField, BrandSearchField, MeasurementSearchField} from '../ReduxForm'\r\nimport CloseIcon from '../CloseIcon'\r\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\r\n\r\nexport const PRODUCT_PRICE_FILTER_OPEN = 'openFilterDialog'\r\n\r\nexport const PRODUCT_PRICE_FILTER_KEY = {\r\n    BRAND: 'brand',\r\n    TYPE: 'type',\r\n    MEASUREMENT: 'measurement'\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            position: 'absolute',\r\n            minWidth: '300px',\r\n            background: '#fff',\r\n            zIndex: 99,\r\n            top: 0,\r\n            left: 0,\r\n            borderRadius: 0,\r\n            padding: '10px 20px 10px 20px'\r\n        },\r\n        afterFilter: {\r\n            width: '268px',\r\n            alignItems: 'center',\r\n            display: 'flex',\r\n            backgroundColor: '#efefef',\r\n            position: 'relative',\r\n            padding: '16px 30px',\r\n            marginLeft: '-30px',\r\n            '& > div:nth-child(2)': {\r\n                position: 'absolute',\r\n                right: '0'\r\n            },\r\n            '& > div:nth-child(1)': {\r\n                color: '#666666'\r\n            },\r\n            '& button': {\r\n                borderLeft: '1px solid white !important'\r\n            }\r\n        },\r\n        icon: {\r\n            color: '#8f8f8f !important'\r\n        },\r\n        arrow: {\r\n            color: '#12aaeb',\r\n            paddingRight: '14px',\r\n            position: 'relative',\r\n            '& svg': {\r\n                position: 'absolute',\r\n                width: '13px !important',\r\n                height: '20px !important'\r\n            }\r\n        },\r\n        header: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n            '& button': {\r\n                marginRight: '-12px !important'\r\n            }\r\n        },\r\n        title: {\r\n            fontSize: '15px',\r\n            color: '#5d6474'\r\n        },\r\n        submit: {\r\n            color: '#fff !important'\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        }\r\n    }),\r\n    reduxForm({\r\n        form: 'ProductPriceFilterForm',\r\n        enableReinitialize: true\r\n    }),\r\n    withHandlers({\r\n        getCount: props => () => {\r\n            const {filter} = props\r\n            return _(PRODUCT_PRICE_FILTER_KEY)\r\n                .values()\r\n                .filter(item => item !== PRODUCT_PRICE_FILTER_KEY.FROM_DATE)\r\n                .filter(item => filter.getParam(item))\r\n                .value()\r\n                .length\r\n        }\r\n    })\r\n)\r\n\r\nconst ProductPriceFilterForm = enhance((props) => {\r\n    const {classes, filterDialog, getCount} = props\r\n    const filterCounts = getCount()\r\n\r\n    if (!filterDialog.openFilterDialog) {\r\n        if (filterCounts) {\r\n            return (\r\n                <div className={classes.afterFilter}>\r\n                    <div>Фильтр: {filterCounts} элемента</div>\r\n                    <div>\r\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                            <BorderColorIcon color=\"#8f8f8f\" />\r\n                        </IconButton>\r\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\r\n                            <CloseIcon className={classes.icon}/>\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Link\r\n                    className={classes.arrow}\r\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.wrapper} zDepth={2}>\r\n                <div className={classes.header}>\r\n                    <span className={classes.title}>Фильтр</span>\r\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\r\n                        <CloseIcon className={classes.icon} />\r\n                    </IconButton>\r\n                </div>\r\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\r\n                    <div>\r\n                        <Field className={classes.inputFieldCustom} name=\"type\" component={ProductTypeSearchField} label=\"Тип продукта\"/>\r\n                    </div>\r\n                    <div>\r\n                        <Field className={classes.inputFieldCustom} name=\"measurement\" component={MeasurementSearchField} label=\"Мера\"/>\r\n                    </div>\r\n                    <div>\r\n                        <Field className={classes.inputFieldCustom} name=\"brand\" component={BrandSearchField} label=\"Бренд\"/>\r\n                    </div>\r\n                    <RaisedButton\r\n                        type=\"submit\"\r\n                        primary={true}\r\n                        buttonStyle={{color: '#fff'}}\r\n                        label=\"Применить\"\r\n                        style={{marginTop: '15px'}}>\r\n                    </RaisedButton>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n})\r\n\r\nProductPriceFilterForm.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    filterDialog: PropTypes.shape({\r\n        filterLoading: PropTypes.bool.isRequired,\r\n        openFilterDialog: PropTypes.bool.isRequired,\r\n        handleOpenFilterDialog: PropTypes.func.isRequired,\r\n        handleCloseFilterDialog: PropTypes.func.isRequired,\r\n        handleSubmitFilterDialog: PropTypes.func.isRequired\r\n    })\r\n}\r\n\r\nexport default ProductPriceFilterForm\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ProductPrice/ProductPriceFilterForm.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport {TextField} from '../ReduxForm'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport MainStyles from '../Styles/MainStyles'\r\n\r\nexport const PRODUCT_TYPE_CREATE_DIALOG_OPEN = 'openCreateDialog'\r\n\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\r\n\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        latLng,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        }\r\n    })),\r\n    reduxForm({\r\n        form: 'ProductTypeCreateForm',\r\n        enableReinitialize: true\r\n    })\r\n)\r\n\r\nconst ProductTypeCreateDialog = enhance((props) => {\r\n    const {open, loading, handleSubmit, onClose, classes, isUpdate} = props\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            className={classes.dialog}\r\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\r\n            bodyStyle={{minHeight: 'auto'}}\r\n            bodyClassName={classes.popUp}>\r\n            <div className={classes.titleContent}>\r\n                <span>{isUpdate ? 'Изменить тип продукта' : 'Добавить тип продукта'}</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit} className={classes.form} style={{minHeight: 'auto'}}>\r\n                    <div className={classes.loader}>\r\n                        <CircularProgress size={40} thickness={4}/>\r\n                    </div>\r\n                    <div className={classes.inContent} style={{minHeight: '100px', paddingTop: '15px'}}>\r\n                        <div className={classes.field}>\r\n                            <Field\r\n                                name=\"name\"\r\n                                component={TextField}\r\n                                className={classes.inputFieldCustom}\r\n                                label=\"Наименование\"\r\n                                fullWidth={true}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <FlatButton\r\n                            label=\"Сохранить\"\r\n                            className={classes.actionButton}\r\n                            primary={true}\r\n                            type=\"submit\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\n\r\nProductTypeCreateDialog.propTyeps = {\r\n    isUpdate: PropTypes.bool,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\nProductTypeCreateDialog.defaultProps = {\r\n    isUpdate: false\r\n}\r\n\r\nexport default ProductTypeCreateDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ProductType/ProductTypeCreateDialog.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport {TextField, ProductTypeSearchField, BrandSearchField, MeasurementSearchField, ImageUploadField} from '../ReduxForm'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport MainStyles from '../Styles/MainStyles'\r\n\r\nexport const PRODUCT_CREATE_DIALOG_OPEN = 'openCreateDialog'\r\n\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\r\n\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        latLng,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        }\r\n    })),\r\n    reduxForm({\r\n        form: 'ProductCreateForm',\r\n        enableReinitialize: true\r\n    })\r\n)\r\n\r\nconst ProductCreateDialog = enhance((props) => {\r\n    const {open, loading, handleSubmit, onClose, classes, isUpdate} = props\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            className={classes.dialog}\r\n            contentStyle={loading ? {width: '300px'} : {}}\r\n            bodyStyle={{minHeight: 'auto'}}\r\n            bodyClassName={classes.popUp}>\r\n            <div className={classes.titleContent}>\r\n                <span>{isUpdate ? 'Изменить продукт' : 'Добавить продукт'}</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit} className={classes.form}>\r\n                    <div className={classes.inContent} style={{minHeight: '250px'}}>\r\n                        <div className={classes.loader}>\r\n                            <CircularProgress size={40} thickness={4}/>\r\n                        </div>\r\n                        <div className={classes.field} style={{marginTop: '10px'}}>\r\n                            <Field\r\n                                name=\"name\"\r\n                                className={classes.inputFieldCustom}\r\n                                component={TextField}\r\n                                label=\"Наименование\"\r\n                                fullWidth={true}\r\n                            />\r\n                            <Field\r\n                                name=\"type\"\r\n                                className={classes.inputFieldCustom}\r\n                                component={ProductTypeSearchField}\r\n                                label=\"Тип продукта\"\r\n                                fullWidth={true}\r\n                            />\r\n                            <Field\r\n                                name=\"brand\"\r\n                                className={classes.inputFieldCustom}\r\n                                component={BrandSearchField}\r\n                                label=\"Бренд\"\r\n                                fullWidth={true}\r\n                            />\r\n                            <Field\r\n                                name=\"measurement\"\r\n                                className={classes.inputFieldCustom}\r\n                                component={MeasurementSearchField}\r\n                                label=\"Мера\"\r\n                                fullWidth={true}\r\n                            />\r\n                        </div>\r\n                        <div className={classes.field} style={{maxWidth: '224px'}}>\r\n                            <Field\r\n                                name=\"image\"\r\n                                className={classes.imageUpload}\r\n                                component={ImageUploadField}\r\n                                label=\"Изображения\"\r\n                                fullWidth={true}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <FlatButton\r\n                            label=\"Сохранить\"\r\n                            className={classes.actionButton}\r\n                            primary={true}\r\n                            type=\"submit\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\n\r\nProductCreateDialog.propTyeps = {\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default ProductCreateDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Product/ProductCreateDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport IconButton from 'material-ui/IconButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport CloseIcon2 from '../CloseIcon2'\n\nexport const PRODUCT_SHOW_PHOTO_OPEN = 'openShowBigImg'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            justifyContent: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        popUp: {\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            height: '100%',\n            overflow: 'auto !important'\n        },\n        titleContent: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '20px 30px',\n            border: 'none !important',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                padding: '0 !important',\n                position: 'absolute !important'\n            }\n        },\n        inContent: {\n            display: 'flex',\n            maxHeight: '50vh',\n            minHeight: '184px',\n            overflow: 'auto',\n            padding: '0 30px',\n            color: '#333'\n        },\n        bodyContent: {\n            width: '100%'\n        },\n        imagePopup: {\n            '& div div': {\n                background: 'transparent !important',\n                boxShadow: 'none !important'\n            }\n        },\n        imgPopup: {\n            background: 'transparent !important',\n            boxShadow: 'none !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            height: '100%',\n            overflow: 'initial !important',\n            textAlign: 'center',\n            minHeight: '300px !important',\n            '& img': {\n                margin: '0 auto',\n                display: 'block',\n                boxShadow: 'rgba(0, 0, 0, 0.25) 0px 14px 45px, rgba(0, 0, 0, 0.22) 0px 10px 18px'\n            }\n        },\n        imgWrapper: {\n            display: 'inline-block',\n            position: 'relative'\n        },\n        closeBtn: {\n            position: 'absolute !important',\n            right: '-48px',\n            top: '-48px'\n        }\n    }),\n)\n\nconst ProductShowPhotoDialog = enhance((props) => {\n    const {open, loading, onClose, classes, detailData} = props\n    const items = _.get(detailData, 'data')\n    const image = _.get(items, ['image', 'file'])\n    if (loading) {\n        return (\n            <div>\n                <div className={classes.loader}>\n                    <CircularProgress />\n                </div>\n            </div>\n        )\n    }\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.imagePopup}\n            contentStyle={loading ? {width: '300px'} : {}}\n            bodyStyle={{minHeight: 'auto'}}\n            bodyClassName={classes.imgPopup}>\n\n            <div className={classes.imgWrapper}>\n                <IconButton onTouchTap={onClose} style={{color: '#fff'}} className={classes.closeBtn}>\n                    <CloseIcon2 color=\"#fff\"/>\n                </IconButton>\n                <img src={image}/>\n            </div>\n        </Dialog>\n    )\n})\n\nProductShowPhotoDialog.propTyeps = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired,\n    detailData: PropTypes.object\n}\n\nexport default ProductShowPhotoDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Product/ProductShowPhotoDialog.js","import ProductGridList from './ProductGridList'\r\nimport {PRODUCT_CREATE_DIALOG_OPEN} from './ProductCreateDialog'\r\nimport {PRODUCT_SHOW_PHOTO_OPEN} from './ProductShowPhotoDialog'\r\nimport {PRODUCT_FILTER_KEY, PRODUCT_FILTER_OPEN} from './ProductFilterForm'\r\nimport {PERSON_FILTER_OPEN, PERSON_FILTER_KEY} from '../Manufacture/PersonFilterForm'\r\n\r\nconst PRODUCT_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\r\nconst PRODUCT_DELETE_DIALOG_OPEN = 'openDeleteDialog'\r\n\r\nexport {\r\n    PRODUCT_CREATE_DIALOG_OPEN,\r\n    PRODUCT_UPDATE_DIALOG_OPEN,\r\n    PRODUCT_DELETE_DIALOG_OPEN,\r\n    PRODUCT_SHOW_PHOTO_OPEN,\r\n    PRODUCT_FILTER_KEY,\r\n    PRODUCT_FILTER_OPEN,\r\n    PERSON_FILTER_OPEN,\r\n    PERSON_FILTER_KEY,\r\n    ProductGridList\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Product/index.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport {Field, FieldArray, reduxForm, SubmissionError} from 'redux-form'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport {TextField} from '../ReduxForm'\r\nimport ProviderContactsListField from '../ReduxForm/Provider/ProviderContactsListField'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport MainStyles from '../Styles/MainStyles'\r\n\r\nexport const PROVIDER_CREATE_DIALOG_OPEN = 'openCreateDialog'\r\nexport const PROVIDER_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\r\n\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\r\n\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        latLng,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        },\r\n        contacts: {\r\n            background: '#f1f5f8',\r\n            color: '#333',\r\n            margin: '12px -30px 0',\r\n            padding: '20px 30px'\r\n        }\r\n    })),\r\n    reduxForm({\r\n        form: 'ProviderCreateForm',\r\n        enableReinitialize: true\r\n    })\r\n)\r\n\r\nconst ProviderCreateDialog = enhance((props) => {\r\n    const {open, loading, handleSubmit, onClose, classes, isUpdate} = props\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            className={classes.dialog}\r\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\r\n            bodyClassName={classes.popUp}>\r\n\r\n            <div className={classes.titleContent}>\r\n                <span>{isUpdate ? 'Изменение поставщика' : 'Добавление поставщика'}</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit} className={classes.form} style={{width: '100%'}}>\r\n                    <div className={classes.inContent} style={{minHeight: '300px'}}>\r\n                        <div className={classes.loader}>\r\n                            <CircularProgress size={40} thickness={4}/>\r\n                        </div>\r\n                        <div className={classes.field} style={{padding: '10px 0 0'}}>\r\n                            <Field\r\n                                name=\"name\"\r\n                                component={TextField}\r\n                                className={classes.inputFieldCustom}\r\n                                label=\"Организация\"\r\n                                fullWidth={true}/>\r\n                            <Field\r\n                                name=\"address\"\r\n                                component={TextField}\r\n                                className={classes.inputFieldCustom}\r\n                                label=\"Местположение\"\r\n                                fullWidth={true}/>\r\n\r\n                            <div className={classes.contacts}>\r\n                                Контактные данные\r\n                                <FieldArray\r\n                                    name=\"contacts\"\r\n                                    component={ProviderContactsListField}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <FlatButton\r\n                            label=\"Сохранить\"\r\n                            className={classes.actionButton}\r\n                            primary={true}\r\n                            type=\"submit\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\n\r\nProviderCreateDialog.propTypes = {\r\n    isUpdate: PropTypes.bool,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\nProviderCreateDialog.defaultProps = {\r\n    isUpdate: false\r\n}\r\n\r\nexport default ProviderCreateDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Provider/ProviderCreateDialog.js","import sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\nimport axios from '../../../helpers/axios'\nimport * as PATH from '../../../constants/api'\nimport toCamelCase from '../../../helpers/toCamelCase'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.STOCK_LIST}?stock_type=0&search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst getItem = (id) => {\n    return axios().get(sprintf(PATH.STOCK_ITEM, id))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst StockSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default StockSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Stock/StockSearchField.js","import sprintf from 'sprintf'\r\nimport _ from 'lodash'\r\nimport React from 'react'\r\nimport {compose} from 'recompose'\r\nimport SearchField from '../Basic/SearchField'\r\nimport axios from '../../../helpers/axios'\r\nimport * as PATH from '../../../constants/api'\r\nimport toCamelCase from '../../../helpers/toCamelCase'\r\nimport * as actionTypes from '../../../constants/actionTypes'\r\nimport {connect} from 'react-redux'\r\n\r\nconst getOptions = (search, type) => {\r\n    return axios().get(`${PATH.PRODUCT_LIST}?type=${type || ''}&search=${search || ''}`)\r\n        .then(({data}) => {\r\n            return Promise.resolve(toCamelCase(data.results))\r\n        })\r\n}\r\n\r\nconst setMeasurementAction = (data, loading) => {\r\n    return {\r\n        type: actionTypes.PRODUCT_MEASUREMENT,\r\n        data: data,\r\n        loading: loading\r\n    }\r\n}\r\n\r\nconst getItem = (id, dispatch) => {\r\n    dispatch(setMeasurementAction(null, true))\r\n    return axios().get(sprintf(PATH.PRODUCT_ITEM, _.get(id, 'id')))\r\n        .then(({data}) => {\r\n            dispatch(setMeasurementAction(_.get(data, ['measurement', 'name']), false))\r\n            return Promise.resolve(toCamelCase(data))\r\n        })\r\n}\r\n\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const dispatch = _.get(props, 'dispatch')\r\n        return {\r\n            state,\r\n            dispatch\r\n        }\r\n    })\r\n)\r\n\r\nconst ProductCustomSearchField = enhance((props) => {\r\n    const {dispatch, state, ...defaultProps} = props\r\n    const test = (id) => {\r\n        return getItem(id, dispatch)\r\n    }\r\n    const type = _.get(state, ['form', 'PricesCreateForm', 'values', 'type', 'value'])\r\n    return (\r\n        <SearchField\r\n            getValue={(value) => {\r\n                return value\r\n            }}\r\n            getText={(value) => {\r\n                return _.get(value, ['name'])\r\n            }}\r\n            getOptions={ (search) => { return getOptions(search, type) }}\r\n            getItem={test}\r\n            getItemText={(value) => {\r\n                return _.get(value, ['name'])\r\n            }}\r\n            {...defaultProps}\r\n        />\r\n    )\r\n})\r\n\r\nexport default ProductCustomSearchField\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Supply/ProductCustomSearchField.js","import React from 'react'\r\nimport {compose} from 'recompose'\r\nimport {reduxForm, Field} from 'redux-form'\r\nimport injectSheet from 'react-jss'\r\nimport Paper from 'material-ui/Paper'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport TextField from 'material-ui/TextField'\r\nimport SearchIcon from 'material-ui/svg-icons/action/search'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport StockSearchField from '../ReduxForm/Stock/StockSearchField'\r\nimport ProductTypeSearchField from '../ReduxForm/Product/ProductTypeSearchField'\r\nimport DateField from '../ReduxForm/RemainderDateField'\r\nimport CheckBox from '../ReduxForm/Basic/CheckBox'\r\nimport {RaisedButton} from 'material-ui'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const REMAINDER_FILTER_OPEN = 'openFilterDialog'\r\n\r\nexport const REMAINDER_FILTER_KEY = {\r\n    PRODUCT_TYPE: 'productType',\r\n    STOCK: 'stock',\r\n    BIGGER_THAN: 'biggerThan',\r\n    LESS_THAN: 'lessThan',\r\n    DEFECTIVE: 'defective',\r\n    OUT_DATED: 'outDated',\r\n    CURRENT: 'current'\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        filterWrapper: {\r\n            width: '330px',\r\n            zIndex: '99',\r\n            position: 'absolute',\r\n            right: '-28px',\r\n            top: '0',\r\n            bottom: '-28px'\r\n        },\r\n        filterBtnWrapper: {\r\n            position: 'absolute',\r\n            top: '15px',\r\n            right: '0',\r\n            marginBottom: '0px'\r\n        },\r\n        filterBtn: {\r\n            backgroundColor: '#12aaeb !important',\r\n            color: '#fff',\r\n            fontWeight: '600',\r\n            padding: '7px 7px',\r\n            borderRadius: '3px',\r\n            lineHeight: '12px'\r\n        },\r\n        filterTitle: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            padding: '0 30px',\r\n            borderBottom: '1px #efefef solid',\r\n            lineHeight: '60px',\r\n            fontWeight: '600',\r\n            position: 'relative'\r\n        },\r\n        search: {\r\n            position: 'relative',\r\n            display: 'flex',\r\n            maxWidth: '300px'\r\n        },\r\n        searchField: {\r\n            fontSize: '13px !important'\r\n        },\r\n        searchButton: {\r\n            position: 'absolute !important',\r\n            right: '-10px'\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        },\r\n        subTitle: {\r\n            fontWeight: '600',\r\n            padding: '15px 0 10px 0'\r\n        },\r\n        dateLabel: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            height: '40px',\r\n            marginTop: '10px',\r\n            '&:first-child': {\r\n                margin: '0'\r\n            },\r\n            alignItems: 'baseline'\r\n        },\r\n        submitBtn: {\r\n            '& button': {\r\n                backgroundColor: '#61a7e7!important',\r\n                height: '32px!important',\r\n                lineHeight: '32px!important',\r\n                '& div': {\r\n                    '& div': {\r\n                        padding: '0 10px'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        inputDateCustom: {\r\n            '& input': {\r\n                width: '140px'\r\n            }\r\n        },\r\n        closeIcon: {\r\n            position: 'absolute !important',\r\n            right: '20px'\r\n        }\r\n    }),\r\n    reduxForm({\r\n        form: 'RemainderFilterForm',\r\n        enableReinitialize: true\r\n    }),\r\n)\r\nconst iconStyle = {\r\n    icon: {\r\n        color: '#666',\r\n        width: 20,\r\n        height: 20\r\n    },\r\n    button: {\r\n        width: 46,\r\n        height: 46,\r\n        padding: 0\r\n    }\r\n}\r\n\r\nconst RemainderFilterForm = enhance((props) => {\r\n    const {classes, onClose} = props\r\n    return (\r\n        <div className={classes.filterWrapper}>\r\n            <Paper zDepth={1} style={{height: '100%'}}>\r\n                <div className={classes.filterTitle}>\r\n                    <div>Фильтры</div>\r\n                    <IconButton\r\n                        iconStyle={iconStyle.icon}\r\n                        style={iconStyle.button}\r\n                        touch={true}\r\n                        className={classes.closeIcon}\r\n                        onTouchTap={onClose}>\r\n                        <CloseIcon2 color=\"#666666\"/>\r\n                    </IconButton>\r\n                </div>\r\n                <form style={{padding: '0 30px'}}>\r\n                    <div className={classes.search}>\r\n                        <TextField\r\n                            fullWidth={true}\r\n                            hintText=\"Поиск товара\"\r\n                            className={classes.searchField}\r\n\r\n                        />\r\n                        <IconButton\r\n                            iconStyle={{color: '#ccc'}}\r\n                            className={classes.searchButton}>\r\n                            <SearchIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                    <div>\r\n                        <Field\r\n                            className={classes.inputFieldCustom}\r\n                            name=\"stock\"\r\n                            component={StockSearchField}\r\n                            label=\"Укажите нужный склад\"\r\n                            fullWidth={true}/>\r\n                        <Field\r\n                            className={classes.inputFieldCustom}\r\n                            name=\"productType\"\r\n                            component={ProductTypeSearchField}\r\n                            label=\"Выберите тип товара\"\r\n                            fullWidth={true}/>\r\n                        <div className={classes.subTitle}>Статус товаров</div>\r\n                        <Field\r\n                            name=\"current\"\r\n                            component={CheckBox}\r\n                            label=\"Действующие товары\"/>\r\n                        <Field\r\n                            name=\"defective\"\r\n                            component={CheckBox}\r\n                            label=\"Бракованные товары\"/>\r\n                        <Field\r\n                            name=\"outDated\"\r\n                            component={CheckBox}\r\n                            label=\"Просроченные товары\"/>\r\n                        <div className={classes.subTitle}>Фильтр по сроку годности</div>\r\n                        <div className={classes.dateLabel} style={{margin: '0'}}>\r\n                            <div>Больше чем:</div>\r\n                            <Field\r\n                                name=\"biggerThan\"\r\n                                component={DateField}\r\n                                fullWidth={true}/>\r\n                        </div>\r\n                        <div className={classes.dateLabel}>\r\n                            <div>Меньше чем:</div>\r\n                            <Field\r\n                                name=\"lessThan\"\r\n                                component={DateField}\r\n                                fullWidth={true}/>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{textAlign: 'center', paddingTop: '20px'}}>\r\n                        <RaisedButton\r\n                            className={classes.submitBtn}\r\n                            type=\"submit\"\r\n                            primary={true}\r\n                            buttonStyle={{color: '#fff'}}>\r\n                            Применить фильтр\r\n                        </RaisedButton>\r\n                    </div>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n})\r\n\r\nRemainderFilterForm.propTypes = {\r\n    onClose: PropTypes.func.isRequired\r\n}\r\n\r\nexport default RemainderFilterForm\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Remainder/RemainderFilterForm.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport {TextField, TimeField} from '../ReduxForm'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport MainStyles from '../Styles/MainStyles'\r\n\r\nexport const SHIFT_CREATE_DIALOG_OPEN = 'openCreateDialog'\r\n\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\r\n\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        latLng,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        buttonSub: {\r\n            textAlign: 'right',\r\n            marginTop: '10px',\r\n            '& span': {\r\n                color: '#129fdd !important'\r\n            }\r\n        },\r\n        timePick: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            '& > div': {\r\n                flexBasis: '49%'\r\n            }\r\n        },\r\n        inputFieldShift: {\r\n            fontSize: '13px !important',\r\n            marginRight: '20px',\r\n            height: '50px !important',\r\n            '& input': {\r\n                top: '-10px'\r\n            },\r\n            '& label': {\r\n                top: '20px !important'\r\n            }\r\n        },\r\n        inputFieldTime: {\r\n            fontSize: '13px !important',\r\n            height: '50px !important',\r\n            '& input': {\r\n                top: '-10px'\r\n            },\r\n            '& label': {\r\n                top: '20px !important'\r\n            }\r\n        }\r\n    })),\r\n    reduxForm({\r\n        form: 'ShiftCreateForm',\r\n        enableReinitialize: true\r\n    })\r\n)\r\n\r\nconst ShiftCreateDialog = enhance((props) => {\r\n    const {open, loading, handleSubmit, onClose, classes, isUpdate} = props\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            className={classes.dialog}\r\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\r\n            bodyStyle={{minHeight: 'auto'}}\r\n            bodyClassName={classes.body}>\r\n            <div className={classes.titleContent}>\r\n                <span>{isUpdate ? 'Редактирование смены' : 'Добавить смену'}</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit}>\r\n                    <div className={classes.loader}>\r\n                        <CircularProgress size={40} thickness={4}/>\r\n                    </div>\r\n                    <div className={classes.inContent} style={{minHeight: '150px'}}>\r\n                        <div className={classes.field} style={{paddingTop: '15px'}}>\r\n                            <Field\r\n                                name=\"name\"\r\n                                component={TextField}\r\n                                className={classes.inputFieldShift}\r\n                                label=\"Наименование\"\r\n                                fullWidth={true}/>\r\n                            <div className={classes.timePick}>\r\n                                <Field\r\n                                    name=\"beginTime\"\r\n                                    component={TimeField}\r\n                                    className={classes.inputFieldTime}\r\n                                    label=\"Начало\"\r\n                                    fullWidth={true}/>\r\n                                <Field\r\n                                    name=\"endTime\"\r\n                                    component={TimeField}\r\n                                    className={classes.inputFieldTime}\r\n                                    label=\"Конец\"\r\n                                    fullWidth={true}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <FlatButton\r\n                            label=\"Применить\"\r\n                            className={classes.actionButton}\r\n                            type=\"submit\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\n\r\nShiftCreateDialog.propTypes = {\r\n    isUpdate: PropTypes.bool,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\nShiftCreateDialog.defaultProps = {\r\n    isUpdate: false\r\n}\r\n\r\nexport default ShiftCreateDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Shift/ShiftCreateDialog.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose, withState} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport {\r\n    TextField,\r\n    MarketTypeSearchField,\r\n    ClientSearchField,\r\n    VisitFrequencySearchField,\r\n    ShopStatusSearchField\r\n} from '../ReduxForm'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport Place from '../AddPlace'\r\nimport Dot from '../Images/dot.png'\r\n\r\nexport const SHOP_CREATE_DIALOG_OPEN = 'openCreateDialog'\r\n\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\r\n\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        latLng,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            justifyContent: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        },\r\n        popUp: {\r\n            overflowY: 'hidden !important',\r\n            fontSize: '13px !important',\r\n            position: 'relative',\r\n            padding: '0 !important',\r\n            overflowX: 'hidden',\r\n            height: '100%',\r\n            maxHeight: 'inherit !important'\r\n        },\r\n        titleContent: {\r\n            background: '#fff',\r\n            color: '#333',\r\n            fontWeight: 'bold',\r\n            textTransform: 'uppercase',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            borderBottom: '1px solid #efefef',\r\n            padding: '20px 30px',\r\n            zIndex: '999',\r\n            '& button': {\r\n                right: '13px',\r\n                padding: '0 !important',\r\n                position: 'absolute !important'\r\n            }\r\n        },\r\n        inContent: {\r\n            display: 'flex',\r\n            color: '#333',\r\n            minHeight: '450px'\r\n        },\r\n        padding: {\r\n            padding: '20px 30px'\r\n        },\r\n        leftSide: {\r\n            flexBasis: '50%',\r\n            maxWidth: '50%',\r\n            borderRight: '1px solid #efefef',\r\n            extend: 'padding'\r\n        },\r\n        rightSide: {\r\n            flexBasis: '50%',\r\n            maxWidth: '50%',\r\n            extend: 'padding',\r\n            maxHeight: '442px',\r\n            overflowY: 'auto'\r\n        },\r\n        bodyContent: {\r\n            color: '#333',\r\n            width: '100%'\r\n        },\r\n        form: {\r\n            position: 'relative'\r\n        },\r\n        fields: {\r\n            width: '100%',\r\n            padding: '20px 30px',\r\n            boxSizing: 'border-box',\r\n            maxHeight: '622px',\r\n            overflowY: 'auto'\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        },\r\n        bottomButton: {\r\n            bottom: '0',\r\n            left: '0',\r\n            right: '0',\r\n            padding: '10px',\r\n            zIndex: '999',\r\n            borderTop: '1px solid #efefef',\r\n            background: '#fff',\r\n            textAlign: 'right',\r\n            '& span': {\r\n                fontSize: '13px !important',\r\n                fontWeight: '600 !important',\r\n                color: '#129fdd',\r\n                verticalAlign: 'inherit !important'\r\n            }\r\n        },\r\n        actionButton: {\r\n            fontSize: '13px !important',\r\n            margin: '0 !important'\r\n        },\r\n        podlojkaScroll: {\r\n            padding: '0 !important',\r\n            overflowY: 'auto !important',\r\n            '& > div > div': {\r\n                width: 'auto !important',\r\n                maxWidth: '820px !important'\r\n            }\r\n        },\r\n        flex: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n            width: '100%'\r\n        },\r\n        divider: {\r\n            paddingBottom: '20px',\r\n            marginBottom: '20px',\r\n            position: 'relative',\r\n            '&:after': {\r\n                content: '\"\"',\r\n                backgroundImage: 'url(' + Dot + ')',\r\n                position: 'absolute',\r\n                bottom: '0',\r\n                height: '2px',\r\n                left: '0',\r\n                right: '0'\r\n            }\r\n        },\r\n        inputHalfWrap: {\r\n            flexBasis: '50%',\r\n            width: '50%'\r\n        },\r\n        add: {\r\n            marginTop: '5px',\r\n            marginBottom: '-5px',\r\n            textAlign: 'right'\r\n        },\r\n        addPlace: {\r\n            extend: 'add',\r\n            textAlign: 'left',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            '& a': {\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                '& svg': {\r\n                    marginRight: '5px',\r\n                    width: '16px !important'\r\n                }\r\n            },\r\n            '& div': {\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                '& span': {\r\n                    marginRight: '5px',\r\n                    fontSize: '12px !important'\r\n                },\r\n                '& svg': {\r\n                    marginRight: '5px',\r\n                    width: '16px !important'\r\n                }\r\n            }\r\n        }\r\n    }),\r\n    reduxForm({\r\n        form: 'ShopCreateForm',\r\n        enableReinitialize: true\r\n    }),\r\n    withState('openClient', 'setOpenClient', false)\r\n)\r\nconst ShopCreateDialog = enhance((props) => {\r\n    const {\r\n        open,\r\n        loading,\r\n        handleSubmit,\r\n        onClose,\r\n        classes,\r\n        isUpdate,\r\n        openClient,\r\n        setOpenClient,\r\n        mapDialog,\r\n        updateMapDialog,\r\n        mapLocation\r\n    } = props\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n    const lat = _.get(mapLocation, 'lat')\r\n    const lng = _.get(mapLocation, 'lng')\r\n\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            className={classes.podlojkaScroll}\r\n            contentStyle={loading ? {width: '500px'} : {width: '100%'}}\r\n            bodyClassName={classes.popUp}>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit} className={classes.form}>\r\n                    <div className={classes.loader}>\r\n                        <CircularProgress size={40} thickness={4}/>\r\n                    </div>\r\n                    <div className={classes.titleContent}>\r\n                        <span>{isUpdate ? 'Изменение магазина' : 'Добавление магазина'}</span>\r\n                        <IconButton onTouchTap={onClose}>\r\n                            <CloseIcon2 color=\"#666666\"/>\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className={classes.inContent}>\r\n                        <div className={classes.leftSide}>\r\n                            <div className={classes.divider}>\r\n                                {!openClient ? <Field\r\n                                    name=\"client\"\r\n                                    component={ClientSearchField}\r\n                                    className={classes.inputFieldCustom}\r\n                                    label=\"Клиент\"\r\n                                    fullWidth={true}/>\r\n                                : <Field\r\n                                    name=\"newClientName\"\r\n                                    component={TextField}\r\n                                    className={classes.inputFieldCustom}\r\n                                    label=\"Имя клиента\"\r\n                                    fullWidth={true}/>\r\n                                }\r\n                                <div className={classes.add}>\r\n                                    {!openClient && <a onClick={() => { setOpenClient(true) }}>+ добавить клиента</a>}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.divider}>\r\n                                <Field\r\n                                    name=\"name\"\r\n                                    component={TextField}\r\n                                    className={classes.inputFieldCustom}\r\n                                    label=\"Наименование\"\r\n                                    fullWidth={true}/>\r\n                                <Field\r\n                                    name=\"marketType\"\r\n                                    component={MarketTypeSearchField}\r\n                                    className={classes.inputFieldCustom}\r\n                                    label=\"Тип заведения\"\r\n                                    fullWidth={true}/>\r\n                            </div>\r\n                            <div className={classes.flex} style={{alignItems: 'baseline'}}>\r\n                                <div className={classes.inputHalfWrap}>Частота посещений:</div>\r\n                                <div className={classes.inputHalfWrap}>\r\n                                    <Field\r\n                                        name=\"frequency\"\r\n                                        component={VisitFrequencySearchField}\r\n                                        className={classes.inputFieldCustom}\r\n                                        hintText=\"Ежедневно\"\r\n                                        fullWidth={true}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.flex} style={{alignItems: 'baseline'}}>\r\n                                <div className={classes.inputHalfWrap}>Статус объекта:</div>\r\n                                <div className={classes.inputHalfWrap}>\r\n                                    <Field\r\n                                        name=\"status\"\r\n                                        component={ShopStatusSearchField}\r\n                                        className={classes.inputFieldCustom}\r\n                                        hintText=\"Активен\"\r\n                                        fullWidth={true}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.rightSide}>\r\n                            <div className={classes.divider}>\r\n                                <Field\r\n                                    name=\"address\"\r\n                                    component={TextField}\r\n                                    className={classes.inputFieldCustom}\r\n                                    label=\"Адрес\"\r\n                                    fullWidth={true}/>\r\n                                <Field\r\n                                    name=\"guide\"\r\n                                    component={TextField}\r\n                                    className={classes.inputFieldCustom}\r\n                                    label=\"Ориентир\"\r\n                                    fullWidth={true}/>\r\n                                <div className={classes.addPlace}>\r\n                                    {!mapLocation ? <a onClick={mapDialog.handleOpenMapDialog}><Place color=\"#129fdd\"/> отметить местоположение на карте</a>\r\n                                    : <div className={classes.flex}>\r\n                                            <div>\r\n                                                <Place color=\"#999\"/> <span>{lat}</span> <span>{lng}</span>\r\n                                            </div>\r\n                                            <a onClick={updateMapDialog.handleOpenMapUpdateDialog}>Изменить</a>\r\n                                        </div>}\r\n                                </div>\r\n                            </div>\r\n                            <Field\r\n                                name=\"phone\"\r\n                                component={TextField}\r\n                                className={classes.inputFieldCustom}\r\n                                label=\"Телефон\"\r\n                                fullWidth={true}/>\r\n                            <Field\r\n                                name=\"contactName\"\r\n                                component={TextField}\r\n                                className={classes.inputFieldCustom}\r\n                                label=\"Контактное лицо\"\r\n                                fullWidth={true}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <FlatButton\r\n                            label=\"Сохранить\"\r\n                            className={classes.actionButton}\r\n                            primary={true}\r\n                            type=\"submit\"/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\n\r\nShopCreateDialog.propTyeps = {\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    mapLocation: PropTypes.object,\r\n    mapDialog: PropTypes.shape({\r\n        openMapDialog: PropTypes.bool.isRequired,\r\n        handleOpenMapDialog: PropTypes.func.isRequired,\r\n        handleCloseMapDialog: PropTypes.func.isRequired,\r\n        handleSubmitMapDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    updateMapDialog: PropTypes.shape({\r\n        openUpdateMapDialog: PropTypes.bool.isRequired,\r\n        handleOpenMapUpdateDialog: PropTypes.func.isRequired,\r\n        handleCloseMapUpdateDialog: PropTypes.func.isRequired,\r\n        handleSubmitMapUpdateDialog: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\nShopCreateDialog.defaultProps = {\r\n    isUpdate: false\r\n}\r\nexport default ShopCreateDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Shop/ShopCreateDialog.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport {compose, withHandlers} from 'recompose'\r\nimport {reduxForm, Field} from 'redux-form'\r\nimport PropTypes from 'prop-types'\r\nimport injectSheet from 'react-jss'\r\nimport {Link} from 'react-router'\r\nimport Paper from 'material-ui/Paper'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport RaisedButton from 'material-ui/RaisedButton'\r\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\r\nimport MarketTypeField from '../ReduxForm/Shop/MarketTypeSearchField'\r\nimport {ClientSearchField} from '../ReduxForm'\r\nimport CloseIcon from '../CloseIcon'\r\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\r\n\r\nexport const SHOP_FILTER_OPEN = 'openFilterDialog'\r\n\r\nexport const SHOP_FILTER_KEY = {\r\n    CLIENT: 'client',\r\n    MARKET_TYPE: 'marketType'\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            position: 'absolute',\r\n            minWidth: '300px',\r\n            background: '#fff',\r\n            zIndex: 99,\r\n            top: 0,\r\n            left: 0,\r\n            borderRadius: 0,\r\n            padding: '10px 20px 10px 20px'\r\n        },\r\n        afterFilter: {\r\n            width: '268px',\r\n            alignItems: 'center',\r\n            display: 'flex',\r\n            backgroundColor: '#efefef',\r\n            position: 'relative',\r\n            padding: '16px 30px',\r\n            marginLeft: '-30px',\r\n            '& > div:nth-child(2)': {\r\n                position: 'absolute',\r\n                right: '0'\r\n            },\r\n            '& > div:nth-child(1)': {\r\n                color: '#666666'\r\n            },\r\n            '& button': {\r\n                borderLeft: '1px solid white !important'\r\n            }\r\n        },\r\n        icon: {\r\n            color: '#8f8f8f !important'\r\n        },\r\n        arrow: {\r\n            color: '#12aaeb',\r\n            paddingRight: '14px',\r\n            position: 'relative',\r\n            '& svg': {\r\n                position: 'absolute',\r\n                width: '13px !important',\r\n                height: '20px !important'\r\n            }\r\n        },\r\n        header: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n            '& button': {\r\n                marginRight: '-12px !important'\r\n            }\r\n        },\r\n        title: {\r\n            fontSize: '15px',\r\n            color: '#5d6474'\r\n        },\r\n        submit: {\r\n            color: '#fff !important'\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        }\r\n    }),\r\n    reduxForm({\r\n        form: 'ShopFilterForm',\r\n        enableReinitialize: true\r\n    }),\r\n    withHandlers({\r\n        getCount: props => () => {\r\n            const {filter} = props\r\n            return _(SHOP_FILTER_KEY)\r\n                .values()\r\n                .filter(item => item !== SHOP_FILTER_KEY.FROM_DATE)\r\n                .filter(item => filter.getParam(item))\r\n                .value()\r\n                .length\r\n        }\r\n    })\r\n)\r\n\r\nconst ShopFilterForm = enhance((props) => {\r\n    const {classes, filterDialog, getCount} = props\r\n    const filterCounts = getCount()\r\n\r\n    if (!filterDialog.openFilterDialog) {\r\n        if (filterCounts) {\r\n            return (\r\n                <div className={classes.afterFilter}>\r\n                    <div>Фильтр: {filterCounts} элемента</div>\r\n                    <div>\r\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                            <BorderColorIcon color=\"#8f8f8f\" />\r\n                        </IconButton>\r\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\r\n                            <CloseIcon className={classes.icon}/>\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Link\r\n                    className={classes.arrow}\r\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.wrapper} zDepth={2}>\r\n                <div className={classes.header}>\r\n                    <span className={classes.title}>Фильтр</span>\r\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\r\n                        <CloseIcon className={classes.icon} />\r\n                    </IconButton>\r\n                </div>\r\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\r\n                    <Field\r\n                        className={classes.inputFieldCustom}\r\n                        name=\"client\"\r\n                        component={ClientSearchField}\r\n                        label=\"Клиент\"/>\r\n\r\n                    <Field\r\n                        className={classes.inputFieldCustom}\r\n                        name=\"marketType\"\r\n                        component={MarketTypeField}\r\n                        label=\"Тип магазина\"\r\n                        fullWidth={true}/>\r\n\r\n                    <RaisedButton\r\n                        type=\"submit\"\r\n                        primary={true}\r\n                        buttonStyle={{color: '#fff'}}\r\n                        label=\"Применить\"\r\n                        style={{marginTop: '15px'}}>\r\n                    </RaisedButton>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n})\r\n\r\nShopFilterForm.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    filterDialog: PropTypes.shape({\r\n        filterLoading: PropTypes.bool.isRequired,\r\n        openFilterDialog: PropTypes.bool.isRequired,\r\n        handleOpenFilterDialog: PropTypes.func.isRequired,\r\n        handleCloseFilterDialog: PropTypes.func.isRequired,\r\n        handleSubmitFilterDialog: PropTypes.func.isRequired\r\n    })\r\n}\r\n\r\nexport default ShopFilterForm\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Shop/ShopFilterForm.js","import React from 'react'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport AttachMoney from 'material-ui/svg-icons/editor/attach-money'\r\nimport Home from 'material-ui/svg-icons/action/home'\r\nimport AccountBalanceWallet from 'material-ui/svg-icons/action/account-balance-wallet'\r\nimport Map from 'material-ui/svg-icons/maps/map'\r\nimport Settings from 'material-ui/svg-icons/action/settings'\r\nimport Statistics from 'material-ui/svg-icons/action/trending-up'\r\nimport Zone from 'material-ui/svg-icons/maps/place'\r\n\r\nexport const MenuItems = [\r\n    {\r\n        name: 'Метрика',\r\n        icon: (<Statistics />),\r\n        url: ROUTES.STATSTOCK_LIST_URL,\r\n        childs: [\r\n            {name: 'Склады', url: ROUTES.STATSTOCK_LIST_URL},\r\n            {name: 'Должники', url: ROUTES.STATDEBTORS_LIST_URL},\r\n            {name: 'Производство', url: ROUTES.STAT_MANUFACTURE_LIST_URL},\r\n            {name: 'Финансы', url: ROUTES.STAT_CASHBOX_LIST_URL},\r\n            {name: 'Статистика', url: ROUTES.STATISTICS_LIST_URL}\r\n        ]\r\n    },\r\n    {\r\n        name: 'Продажи',\r\n        icon: (<AttachMoney />),\r\n        url: ROUTES.SHOP_LIST_URL,\r\n        childs: [\r\n            {name: 'Магазины', url: ROUTES.SHOP_LIST_URL},\r\n            {name: 'Заказы', url: ROUTES.ORDER_LIST_URL},\r\n            {name: 'Клиенты', url: ROUTES.CLIENT_LIST_URL},\r\n            {name: 'Ценообразование', url: ROUTES.PRODUCT_PRICE_LIST_URL},\r\n            {name: 'Маркетинговые акции', url: ROUTES.PRICES_LIST_URL},\r\n            {name: 'Формирование цен', url: ROUTES.PRICE_LIST_URL}\r\n        ]\r\n    },\r\n    {\r\n        name: 'Склад',\r\n        icon: (<Home />),\r\n        childs: [\r\n            {name: 'Продукты', url: ROUTES.PRODUCT_LIST_URL},\r\n            {name: 'Поставщики', url: ROUTES.PROVIDER_LIST_URL},\r\n            {name: 'Остаток', url: ROUTES.REMAINDER_LIST_URL},\r\n            {name: 'Поставки', url: ROUTES.SUPPLY_LIST_URL},\r\n            {name: 'Приемка / Передача', url: ROUTES.STOCK_RECEIVE_LIST_URL}\r\n        ],\r\n        url: ROUTES.PRODUCT_LIST_URL\r\n    },\r\n    {\r\n        name: 'Бухгалтерия',\r\n        icon: (<AccountBalanceWallet />),\r\n        url: ROUTES.TRANSACTION_LIST_URL,\r\n        childs: [\r\n            {name: 'Транзакции', url: ROUTES.TRANSACTION_LIST_URL},\r\n            {name: 'Транзакции по клиентам', url: ROUTES.CLIENT_TRANSACTION_LIST_URL},\r\n            {name: 'Ожидаемые расходы', url: ROUTES.PENDING_EXPENSES_LIST_URL},\r\n            {name: 'Ожидание оплаты', url: ROUTES.PENDING_PAYMENTS_LIST_URL}\r\n        ]\r\n    },\r\n    {\r\n        name: 'Производство',\r\n        icon: (<Map />),\r\n        url: ROUTES.MANUFACTURE_CUSTOM_URL,\r\n        childs: [\r\n            {name: 'Производство', url: ROUTES.MANUFACTURE_CUSTOM_URL}\r\n        ]\r\n    },\r\n    {\r\n        name: 'Зоны',\r\n        icon: (<Zone />),\r\n        url: ROUTES.ZONES_LIST_URL,\r\n        childs: [\r\n            {name: 'Зоны', url: ROUTES.ZONES_LIST_URL},\r\n            {name: 'Отслеживание', url: ROUTES.TRACKING_LIST_URL}\r\n        ]\r\n    },\r\n    {\r\n        name: 'Настройки',\r\n        icon: (<Settings />),\r\n        url: ROUTES.STOCK_LIST_URL,\r\n        childs: [\r\n            {name: 'Склады', url: ROUTES.STOCK_LIST_URL},\r\n            {name: 'Валюты', url: ROUTES.CURRENCY_LIST_URL},\r\n            {name: 'Кассы', url: ROUTES.CASHBOX_LIST_URL},\r\n            {name: 'Категории расходов', url: ROUTES.EXPENSIVE_CATEGORY_LIST_URL},\r\n            {name: 'Бренды', url: ROUTES.BRAND_LIST_URL},\r\n            {name: 'Типы продуктов', url: ROUTES.PRODUCT_TYPE_LIST_URL},\r\n            {name: 'Пользователи', url: ROUTES.USERS_LIST_URL},\r\n            {name: 'Измерения', url: ROUTES.MEASUREMENT_LIST_URL},\r\n            {name: 'Оборудование', url: ROUTES.EQUIPMENT_LIST_URL},\r\n            {name: 'Смена', url: ROUTES.SHIFT_LIST_URL},\r\n            {name: 'Тип магазина', url: ROUTES.MARKET_TYPE_LIST_URL}\r\n        ]\r\n    }\r\n]\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/SidebarMenu/MenuItems.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport {compose, withHandlers} from 'recompose'\r\nimport {reduxForm, Field} from 'redux-form'\r\nimport PropTypes from 'prop-types'\r\nimport injectSheet from 'react-jss'\r\nimport {Link} from 'react-router'\r\nimport Paper from 'material-ui/Paper'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport RaisedButton from 'material-ui/RaisedButton'\r\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\r\nimport DateToDateField from '../ReduxForm/Basic/DateToDateField'\r\nimport ExportExel from '../Images/excel.png'\r\nimport CloseIcon from '../CloseIcon'\r\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\r\n\r\nexport const STATDEBTORS_FILTER_OPEN = 'openFilterDialog'\r\n\r\nexport const STATDEBTORS_FILTER_KEY = {\r\n    FROM_DATE: 'fromDate',\r\n    TO_DATE: 'toDate'\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            position: 'absolute',\r\n            minWidth: '300px',\r\n            background: '#fff',\r\n            zIndex: 99,\r\n            top: 0,\r\n            left: 0,\r\n            borderRadius: 0,\r\n            padding: '10px 20px 10px 20px'\r\n        },\r\n        afterFilter: {\r\n            width: '268px',\r\n            alignItems: 'center',\r\n            display: 'flex',\r\n            backgroundColor: '#efefef',\r\n            position: 'relative',\r\n            padding: '16px 30px',\r\n            marginLeft: '-30px',\r\n            '& > div:nth-child(2)': {\r\n                position: 'absolute',\r\n                right: '0'\r\n            },\r\n            '& > div:nth-child(1)': {\r\n                color: '#666666'\r\n            },\r\n            '& button': {\r\n                borderLeft: '1px solid white !important'\r\n            }\r\n        },\r\n        icon: {\r\n            color: '#8f8f8f !important'\r\n        },\r\n        arrow: {\r\n            color: '#12aaeb',\r\n            paddingRight: '14px',\r\n            position: 'relative',\r\n            '& svg': {\r\n                position: 'absolute',\r\n                width: '13px !important',\r\n                height: '20px !important'\r\n            }\r\n        },\r\n        header: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n            '& button': {\r\n                marginRight: '-12px !important'\r\n            }\r\n        },\r\n        title: {\r\n            fontSize: '15px',\r\n            color: '#5d6474'\r\n        },\r\n        submit: {\r\n            color: '#fff !important'\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        }\r\n    }),\r\n    reduxForm({\r\n        form: 'StatDebtorsFilterForm',\r\n        enableReinitialize: true\r\n    }),\r\n    withHandlers({\r\n        getCount: props => () => {\r\n            const {filter} = props\r\n            return _(STATDEBTORS_FILTER_KEY)\r\n                .values()\r\n                .filter(item => item !== STATDEBTORS_FILTER_KEY.FROM_DATE)\r\n                .filter(item => filter.getParam(item))\r\n                .value()\r\n                .length\r\n        }\r\n    })\r\n)\r\n\r\nconst StatDebtorsFilterForm = enhance((props) => {\r\n    const {classes, filterDialog, getCount, getDocument} = props\r\n    const filterCounts = getCount()\r\n\r\n    if (!filterDialog.openFilterDialog) {\r\n        if (filterCounts) {\r\n            return (\r\n                <div className={classes.afterFilter}>\r\n                    <div>Фильтр: {filterCounts} элемента</div>\r\n                    <div>\r\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                            <BorderColorIcon color=\"#8f8f8f\" />\r\n                        </IconButton>\r\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\r\n                            <CloseIcon className={classes.icon}/>\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div\r\n                    style={{position: 'absolute', top: '15px', right: '260px'}}\r\n                     onTouchTap={getDocument.handleGetDocument}>\r\n                    <a><img src={ExportExel} style={{width: '24px'}} /></a>\r\n                </div>\r\n                <Link\r\n                    className={classes.arrow}\r\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.wrapper} zDepth={2}>\r\n                <div className={classes.header}>\r\n                    <span className={classes.title}>Фильтр</span>\r\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\r\n                        <CloseIcon className={classes.icon} />\r\n                    </IconButton>\r\n                </div>\r\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\r\n                    <div>\r\n                        <Field className={classes.inputFieldCustom} name=\"date\" component={DateToDateField} label=\"Диапазон дат\" fullWidth={true}/>\r\n                    </div>\r\n\r\n                    <RaisedButton\r\n                        type=\"submit\"\r\n                        primary={true}\r\n                        buttonStyle={{color: '#fff'}}\r\n                        label=\"Применить\"\r\n                        style={{marginTop: '15px'}}>\r\n                    </RaisedButton>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n})\r\n\r\nStatDebtorsFilterForm.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    filterDialog: PropTypes.shape({\r\n        filterLoading: PropTypes.bool.isRequired,\r\n        openFilterDialog: PropTypes.bool.isRequired,\r\n        handleOpenFilterDialog: PropTypes.func.isRequired,\r\n        handleCloseFilterDialog: PropTypes.func.isRequired,\r\n        handleSubmitFilterDialog: PropTypes.func.isRequired\r\n    }),\r\n    getDocument: PropTypes.shape({\r\n        handleGetDocument: PropTypes.func.isRequired\r\n    })\r\n}\r\n\r\nexport default StatDebtorsFilterForm\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/StatDebtors/StatDebtorsFilterForm.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose, withState} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport Dot from '../Images/dot.png'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport MainStyles from '../Styles/MainStyles'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport IconButton from 'material-ui/IconButton'\r\n\r\nexport const STAT_DEBTORS_ORDER_D = 'statDebtors'\r\n\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        dottedList: {\r\n            padding: '20px 0'\r\n        },\r\n        wrapper: {\r\n            color: '#333 !important',\r\n            width: '100%',\r\n            display: 'flex',\r\n            flexWrap: 'wrap'\r\n        },\r\n        dropdown: {\r\n            position: 'relative',\r\n            paddingRight: '15px',\r\n            zIndex: '10',\r\n            '&:after': {\r\n                top: '8px',\r\n                right: '0',\r\n                content: '\"\"',\r\n                position: 'absolute',\r\n                borderTop: '4px solid',\r\n                borderLeft: '4px solid transparent',\r\n                borderRight: '4px solid transparent'\r\n            }\r\n        },\r\n        link: {\r\n            extend: 'blue',\r\n            borderBottom: '1px dashed',\r\n            fontWeight: '600'\r\n        },\r\n        red: {\r\n            color: '#e57373 !important'\r\n        },\r\n        blue: {\r\n            color: '#12aaeb !important'\r\n        },\r\n        green: {\r\n            color: '#81c784 !important'\r\n        },\r\n        loader: {\r\n            width: '100%',\r\n            background: '#fff',\r\n            height: '400px',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        },\r\n        title: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            borderBottom: '1px #efefef solid',\r\n            alignItems: 'center',\r\n            width: '100%',\r\n            height: '65px',\r\n            padding: '0 30px'\r\n        },\r\n        titleLabel: {\r\n            fontSize: '18px',\r\n            color: '#333',\r\n            fontWeight: '600'\r\n        },\r\n        titleSupplier: {\r\n            width: '34%',\r\n            padding: '0 33%',\r\n            position: 'absolute',\r\n            marginLeft: '-30px',\r\n            textAlign: 'center',\r\n            fontSize: '14px',\r\n            '& .supplierDetails': {\r\n                background: '#fff',\r\n                boxShadow: '0 2px 5px 0px rgba(0, 0, 0, 0.16)',\r\n                fontSize: '13px',\r\n                position: 'absolute',\r\n                padding: '64px 28px 20px',\r\n                top: '-21px',\r\n                left: '50%',\r\n                zIndex: '9',\r\n                minWidth: '300px',\r\n                transform: 'translate(-50%, 0)',\r\n                '& .detailsWrap': {\r\n                    position: 'relative',\r\n                    paddingTop: '10px',\r\n                    '&:before': {\r\n                        content: '\"\"',\r\n                        background: 'url(' + Dot + ')',\r\n                        position: 'absolute',\r\n                        top: '0',\r\n                        left: '0',\r\n                        right: '0',\r\n                        height: '2px'\r\n                    }\r\n                },\r\n                '& .detailsList': {\r\n                    padding: '10px 0',\r\n                    textAlign: 'left',\r\n                    textTransform: 'initial',\r\n                    fontWeight: '600',\r\n                    '&:last-child': {\r\n                        paddingBottom: '0'\r\n                    },\r\n                    '& div:first-child': {\r\n                        color: '#666'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        titleClient: {\r\n            '& span': {\r\n                fontWeight: '600'\r\n            }\r\n        },\r\n        content: {\r\n            display: 'flex',\r\n            width: '100%'\r\n        },\r\n        padding: {\r\n            padding: '20px 30px'\r\n        },\r\n        leftSide: {\r\n            flexBasis: '35%',\r\n            borderRight: '1px #efefef solid'\r\n        },\r\n        subBlock: {\r\n            extend: 'padding',\r\n            borderBottom: '1px #efefef solid',\r\n            '&:last-child': {\r\n                border: 'none'\r\n            }\r\n        },\r\n        rightSide: {\r\n            flexBasis: '65%',\r\n            padding: '0 30px 20px'\r\n        },\r\n        subtitle: {\r\n            fontWeight: '600',\r\n            textTransform: 'uppercase',\r\n            marginBottom: '10px'\r\n        },\r\n        dataBox: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            '& ul:last-child': {\r\n                fontWeight: '600',\r\n                marginLeft: '30px',\r\n                textAlign: 'right'\r\n            },\r\n            '& li': {\r\n                lineHeight: '25px'\r\n            }\r\n        },\r\n        tabNav: {\r\n            padding: '15px 0',\r\n            borderBottom: '1px #f2f5f8 solid',\r\n            '& a': {\r\n                margin: '-15px 0',\r\n                padding: '15px 0',\r\n                marginRight: '40px',\r\n                color: '#9b9b9b',\r\n                '&.active': {\r\n                    color: '#12aaeb',\r\n                    borderBottom: '1px solid'\r\n                }\r\n            }\r\n        },\r\n        tabContent: {\r\n            '& .row:first-child': {\r\n                fontWeight: '600'\r\n            },\r\n            '& .row': {\r\n                '& > div': {\r\n                    textAlign: 'right'\r\n                },\r\n                '& > div:first-child': {\r\n                    textAlign: 'left'\r\n                }\r\n            }\r\n        },\r\n        tabWrapper: {\r\n            maxHeight: '232px',\r\n            overflowY: 'auto',\r\n            overflowX: 'hidden',\r\n            paddingRight: '0'\r\n        },\r\n        summary: {\r\n            fontWeight: '600',\r\n            marginTop: '20px',\r\n            paddingRight: '30px',\r\n            textTransform: 'uppercase',\r\n            textAlign: 'right'\r\n        }\r\n    })),\r\n    withState('openDetails', 'setOpenDetails', false)\r\n)\r\n\r\nconst StatDebtorsOrderDetails = enhance((props) => {\r\n    const {classes,\r\n        loading,\r\n        data,\r\n        setOpenDetails,\r\n        openDetails,\r\n        open,\r\n        close\r\n    } = props\r\n\r\n    const id = _.get(data, 'id')\r\n    const products = _.get(data, 'products')\r\n    const contact = _.get(data, 'contact')\r\n    const contactName = _.get(contact, 'name')\r\n    const contactEmail = _.get(contact, 'email') || 'N/A'\r\n    const contactPhone = _.get(contact, 'telephone') || 'N/A'\r\n\r\n    const client = _.get(data, 'client')\r\n    const clientPerson = _.get(client, 'name')\r\n    const deliveryType = _.get(data, 'deliveryType')\r\n\r\n    const percent = 100\r\n    const zero = 0\r\n    const deliveryPrice = _.get(data, 'deliveryPrice')\r\n    const discount = _.get(data, 'discountPrice')\r\n    const totalPrice = _.get(data, 'totalPrice')\r\n    const totalBalance = _.get(data, 'totalBalance')\r\n    const discountPrice = deliveryPrice * (discount / percent)\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className={classes.loader}>\r\n                <div>\r\n                    <CircularProgress size={40} thickness={4}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n            <Dialog\r\n                modal={true}\r\n                open={open}\r\n                onRequestClose={close}\r\n                className={classes.dialog}\r\n                contentStyle={loading ? {width: '300px'} : {width: '1000px', maxWidth: '1000px'}}\r\n                bodyStyle={{minHeight: 'auto'}}\r\n                bodyClassName={classes.popUp}>\r\n                <div className={classes.titleContent}>\r\n                    <span>Заказ №{id}</span>\r\n                    <div className={classes.titleSupplier}>\r\n                        <a className={classes.dropdown} onMouseEnter={() => {\r\n                            setOpenDetails(true)\r\n                        }}>{clientPerson}</a>\r\n                        {openDetails &&\r\n                        <div className=\"supplierDetails\" onMouseLeave={() => {\r\n                            setOpenDetails(false)\r\n                        }}>\r\n                            <div className=\"detailsWrap\">\r\n                                <Row className=\"detailsList\">\r\n                                    <Col xs={6}>Контактное лицо</Col>\r\n                                    <Col xs={6}>{contactName}</Col>\r\n                                </Row>\r\n                                <Row className=\"detailsList\">\r\n                                    <Col xs={6}>Телефон</Col>\r\n                                    <Col xs={6}>{contactPhone}</Col>\r\n                                </Row>\r\n                                <Row className=\"detailsList\">\r\n                                    <Col xs={6}>Email</Col>\r\n                                    <Col xs={6}>{contactEmail}</Col>\r\n                                </Row>\r\n                            </div>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                    <IconButton onTouchTap={close}>\r\n                        <CloseIcon2 color=\"#666666\"/>\r\n                    </IconButton>\r\n                </div>\r\n                <div className={classes.wrapper}>\r\n                    <div className={classes.content}>\r\n                        <div className={classes.leftSide} style={{paddingRight: '0'}}>\r\n                            <div className={classes.subBlock}>\r\n                                <div className={classes.subtitle}>Баланс</div>\r\n                                <div className={classes.dataBox}>\r\n                                    <ul style={{width: '50%'}}>\r\n                                        <li>Тип оплаты:</li>\r\n                                        <li>Дата оплаты:</li>\r\n                                        <li>Стоимость:</li>\r\n                                        <li>Скидка ({discount}%):</li>\r\n                                        <li>Оплачено:</li>\r\n                                        <li>Остаток:</li>\r\n                                    </ul>\r\n                                    <ul style={{width: '50%', textAlign: 'left'}}>\r\n                                        <li>Перечисление</li>\r\n                                        <li>22.05.2017</li>\r\n                                        <li>{deliveryPrice}</li>\r\n                                        <li>{discountPrice}</li>\r\n                                        <li>\r\n                                            <span className={classes.link}>500 000 UZS</span>\r\n                                        </li>\r\n                                        <li className={totalBalance > zero ? classes.red : classes.green}>{totalBalance}</li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className={classes.subBlock}>\r\n                                <div className={classes.subtitle}>Передача</div>\r\n                                <div className={classes.dataBox}>\r\n                                    <ul>\r\n                                        <li>Тип передачи:</li>\r\n                                        <li>Статус передачи:</li>\r\n                                    </ul>\r\n                                    <ul>\r\n                                        <li>{deliveryType > zero ? 'Доставка' : 'Самовывоз'}</li>\r\n                                        <li className={classes.red}>не доставлен</li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.rightSide}>\r\n                            <div className={classes.tab}>\r\n                                <div className={classes.tabNav}>\r\n                                    <a className=\"active\">Список товаров</a>\r\n                                    <a>Возврат</a>\r\n                                </div>\r\n                                <div className={classes.tabContent}>\r\n                                    <div className={classes.tabWrapper}>\r\n                                        <Row className=\"dottedList\">\r\n                                            <Col xs={6}>Товар</Col>\r\n                                            <Col xs={2}>Количество</Col>\r\n                                            <Col xs={2}>Цена (UZS)</Col>\r\n                                            <Col xs={2}>Сумма (UZS)</Col>\r\n                                        </Row>\r\n\r\n                                        {_.map(products, (item) => {\r\n                                            const product = _.get(item, 'product')\r\n                                            const productId = _.get(product, 'id')\r\n                                            const productName = _.get(product, 'name')\r\n                                            const price = _.get(item, 'price')\r\n                                            const cost = _.get(item, 'cost')\r\n                                            const amount = _.get(item, 'amount')\r\n                                            const measurement = _.get(product, ['measurement', 'name'])\r\n                                            return (\r\n                                                <Row className=\"dottedList\" key={productId}>\r\n                                                    <Col xs={6}>{productName}</Col>\r\n                                                    <Col xs={2}>{amount} {measurement}</Col>\r\n                                                    <Col xs={2}>{price}</Col>\r\n                                                    <Col xs={2}>{cost}</Col>\r\n                                                </Row>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n\r\n                                    <div className={classes.summary}>Итого: {totalPrice} UZS</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n\r\n    )\r\n})\r\n\r\nStatDebtorsOrderDetails.propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    data: PropTypes.object.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    orderListData: PropTypes.object,\r\n    close: PropTypes.func.isRequired\r\n}\r\n\r\nexport default StatDebtorsOrderDetails\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/StatDebtors/StatDebtorsOrderDetails.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport MainStyles from '../Styles/MainStyles'\nimport {Row, Col} from 'react-flexbox-grid'\n\nexport const STAT_MANUFACTURE_CREATE_DIALOG_OPEN = 'openCreateDialog'\n\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        innerTitle: {\n            fontWeight: 'bold'\n        },\n        transactions: {\n            padding: '10px 0',\n            '& .row': {\n                padding: '15px 0',\n                '&:after': {\n                    left: '0.5rem',\n                    right: '0.5rem'\n                },\n                '&:first-child': {\n                    fontWeight: '600'\n                },\n                '&:last-child:after': {\n                    position: 'static'\n                },\n                '& > div:nth-child(2)': {\n                    textAlign: 'right'\n                },\n                '& > div:nth-child(3)': {\n                    textAlign: 'right'\n                }\n            }\n        }\n    }))\n)\n\nconst statManufactureCreateDialog = enhance((props) => {\n    const {open, loading, onClose, classes} = props\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\n            bodyStyle={{minHeight: 'auto'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>Использованные материалы</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <div className={classes.inContent}>\n                    <div className={classes.field}>\n                        <div className={classes.innerTitle}>Сырье</div>\n                        <div className={classes.transactions}>\n                            <Row className=\"dottedList\">\n                                <Col xs={6}>Наименование</Col>\n                                <Col xs={3}>Кол-во</Col>\n                                <Col xs={3}>Норма</Col>\n                            </Row>\n                            <Row className=\"dottedList\">\n                                <Col xs={6}>Дистилированная вода</Col>\n                                <Col xs={3}>76 л</Col>\n                                <Col xs={3}>70 л</Col>\n                            </Row>\n                            <Row className=\"dottedList\">\n                                <Col xs={6}>Бура</Col>\n                                <Col xs={3}>3 кг</Col>\n                                <Col xs={3}>3 кг</Col>\n                            </Row>\n                            <Row className=\"dottedList\">\n                                <Col xs={6}>Каустик</Col>\n                                <Col xs={3}>3 кг</Col>\n                                <Col xs={3}>3 кг</Col>\n                            </Row>\n                            <Row className=\"dottedList\">\n                                <Col xs={6}>Гранит</Col>\n                                <Col xs={3}>3 кг</Col>\n                                <Col xs={3}>3 кг</Col>\n                            </Row>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Dialog>\n    )\n})\n\nstatManufactureCreateDialog.propTypes = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\n\nstatManufactureCreateDialog.defaultProps = {\n    isUpdate: false\n}\n\nexport default statManufactureCreateDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/StatManufacture/StatManufactureCreateDialog.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport {compose, withHandlers} from 'recompose'\r\nimport {reduxForm, Field} from 'redux-form'\r\nimport PropTypes from 'prop-types'\r\nimport injectSheet from 'react-jss'\r\nimport {Link} from 'react-router'\r\nimport Paper from 'material-ui/Paper'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport RaisedButton from 'material-ui/RaisedButton'\r\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\r\nimport DateToDateField from '../ReduxForm/Basic/DateToDateField'\r\nimport ExportExel from '../Images/excel.png'\r\nimport CloseIcon from '../CloseIcon'\r\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\r\nimport {BrandSearchField, ProductTypeSearchField} from '../../components/ReduxForm'\r\n\r\nexport const STATSTOCK_FILTER_OPEN = 'openFilterDialog'\r\n\r\nexport const STATSTOCK_FILTER_KEY = {\r\n    TYPE: 'type',\r\n    BRAND: 'brand',\r\n    FROM_DATE: 'from_date',\r\n    TO_DATE: 'to_date'\r\n}\r\nconst TWO = 2\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            position: 'absolute',\r\n            minWidth: '300px',\r\n            background: '#fff',\r\n            zIndex: 99,\r\n            top: 0,\r\n            left: 0,\r\n            borderRadius: 0,\r\n            padding: '10px 20px 10px 20px'\r\n        },\r\n        afterFilter: {\r\n            width: '268px',\r\n            alignItems: 'center',\r\n            display: 'flex',\r\n            backgroundColor: '#efefef',\r\n            position: 'relative',\r\n            padding: '16px 30px',\r\n            marginLeft: '-30px',\r\n            '& > div:nth-child(2)': {\r\n                position: 'absolute',\r\n                right: '0'\r\n            },\r\n            '& > div:nth-child(1)': {\r\n                color: '#666666'\r\n            },\r\n            '& button': {\r\n                borderLeft: '1px solid white !important'\r\n            }\r\n        },\r\n        icon: {\r\n            color: '#8f8f8f !important'\r\n        },\r\n        arrow: {\r\n            color: '#12aaeb',\r\n            paddingRight: '14px',\r\n            position: 'relative',\r\n            '& svg': {\r\n                position: 'absolute',\r\n                width: '13px !important',\r\n                height: '20px !important'\r\n            }\r\n        },\r\n        header: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n            '& button': {\r\n                marginRight: '-12px !important'\r\n            }\r\n        },\r\n        title: {\r\n            fontSize: '15px',\r\n            color: '#5d6474'\r\n        },\r\n        submit: {\r\n            color: '#fff !important'\r\n        },\r\n        inputField: {\r\n            fontSize: '13px !important'\r\n        }\r\n    }),\r\n    reduxForm({\r\n        form: 'StatStockFilterForm',\r\n        enableReinitialize: true\r\n    }),\r\n    withHandlers({\r\n        getCount: props => () => {\r\n            const {filter} = props\r\n            return _(STATSTOCK_FILTER_KEY)\r\n                .values()\r\n                .filter(item => item !== STATSTOCK_FILTER_KEY.FROM_DATE)\r\n                .filter(item => filter.getParam(item))\r\n                .value()\r\n                .length\r\n        }\r\n    })\r\n)\r\n\r\nconst StatStockFilterForm = enhance((props) => {\r\n    const {classes, filterDialog, getCount, isBalance, getDocument} = props\r\n    const filterCounts = getCount()\r\n\r\n    if (!filterDialog.openFilterDialog) {\r\n        if (filterCounts) {\r\n            return (\r\n                <div className={classes.afterFilter}>\r\n                    <div>Фильтр: {filterCounts} элемента</div>\r\n                    <div>\r\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                            <BorderColorIcon color=\"#8f8f8f\" />\r\n                        </IconButton>\r\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\r\n                            <CloseIcon className={classes.icon}/>\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div\r\n                    style={{position: 'absolute', top: '15px', right: '260px'}}\r\n                    onTouchTap = {getDocument.handleGetDocument}>\r\n                    <a><img src={ExportExel} style={{width: '24px'}} /></a>\r\n                </div>\r\n                <Link\r\n                    className={classes.arrow}\r\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.wrapper} zDepth={2}>\r\n                <div className={classes.header}>\r\n                    <span className={classes.title}>Фильтр</span>\r\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\r\n                        <CloseIcon className={classes.icon} />\r\n                    </IconButton>\r\n                </div>\r\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\r\n                    {isBalance === TWO && <div>\r\n                        <Field className={classes.inputFieldCustom} name=\"date\" component={DateToDateField} label=\"Диапазон дат\" fullWidth={true}/>\r\n                    </div>}\r\n                    <div>\r\n                        <Field className={classes.inputFieldCustom} name=\"brand\" component={BrandSearchField} label=\"Бренд\" fullWidth={true}/>\r\n                    </div>\r\n                    <div>\r\n                        <Field className={classes.inputFieldCustom} name=\"type\" component={ProductTypeSearchField} label=\"Тип продукта\" fullWidth={true}/>\r\n                    </div>\r\n                    <RaisedButton\r\n                        type=\"submit\"\r\n                        primary={true}\r\n                        buttonStyle={{color: '#fff'}}\r\n                        label=\"Применить\"\r\n                        style={{marginTop: '15px'}}>\r\n                    </RaisedButton>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n})\r\n\r\nStatStockFilterForm.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    filterDialog: PropTypes.shape({\r\n        filterLoading: PropTypes.bool.isRequired,\r\n        openFilterDialog: PropTypes.bool.isRequired,\r\n        handleOpenFilterDialog: PropTypes.func.isRequired,\r\n        handleCloseFilterDialog: PropTypes.func.isRequired,\r\n        handleSubmitFilterDialog: PropTypes.func.isRequired\r\n    })\r\n}\r\nStatStockFilterForm.defaultDate = {\r\n    isBalance: false\r\n}\r\n\r\nexport default StatStockFilterForm\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/StatStock/StatStockFilterForm.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport {TextField} from '../ReduxForm'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport numberFormat from '../../helpers/numberFormat'\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\nconst enhance = compose(\r\n    injectSheet({\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            justifyContent: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        },\r\n        listLoader: {\r\n            extend: 'loader',\r\n            display: 'flex'\r\n        },\r\n        popUp: {\r\n            overflowY: 'hidden !important',\r\n            fontSize: '13px !important',\r\n            position: 'relative',\r\n            padding: '0 !important',\r\n            overflowX: 'hidden',\r\n            height: '100%',\r\n            maxHeight: 'inherit !important'\r\n        },\r\n        titleContent: {\r\n            background: '#fff',\r\n            color: '#333',\r\n            fontWeight: 'bold',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            borderBottom: '1px solid #efefef',\r\n            padding: '20px 30px',\r\n            zIndex: '999',\r\n            '& button': {\r\n                right: '13px',\r\n                padding: '0 !important',\r\n                position: 'absolute !important'\r\n            }\r\n        },\r\n        inContent: {\r\n            display: 'flex',\r\n            color: '#333'\r\n        },\r\n        innerWrap: {\r\n            maxHeight: '100vh',\r\n            overflow: 'auto'\r\n        },\r\n        bodyContent: {\r\n            color: '#333',\r\n            width: '100%'\r\n        },\r\n        form: {\r\n            position: 'relative'\r\n        },\r\n        field: {\r\n            width: '100%'\r\n        },\r\n        half: {\r\n            display: 'flex',\r\n            alignItems: 'baseline',\r\n            width: '50%'\r\n        },\r\n        content: {\r\n            padding: '0 30px',\r\n            width: '100%',\r\n            position: 'relative'\r\n        },\r\n        amount: {\r\n            '& > div': {\r\n                display: 'inline-block',\r\n                marginLeft: '10px',\r\n                '& span': {\r\n                    display: 'block'\r\n                }\r\n            }\r\n        },\r\n        list: {\r\n            marginTop: '10px',\r\n            '& .dottedList': {\r\n                padding: '10px 0',\r\n                height: '50px',\r\n                margin: '0',\r\n                justifyContent: 'space-between',\r\n                '& > div': {\r\n                    display: 'flex',\r\n                    alignItems: 'baseline'\r\n                },\r\n                '&:first-child': {\r\n                    fontWeight: '600',\r\n                    whiteSpace: 'nowrap'\r\n                },\r\n                '&:last-child:after': {\r\n                    display: 'none'\r\n                }\r\n            }\r\n        },\r\n        inputFieldCustom: {\r\n            flexBasis: '200px',\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        },\r\n        bottomButton: {\r\n            bottom: '0',\r\n            left: '0',\r\n            right: '0',\r\n            padding: '10px',\r\n            zIndex: '999',\r\n            borderTop: '1px solid #efefef',\r\n            background: '#fff',\r\n            textAlign: 'right',\r\n            '& span': {\r\n                fontSize: '13px !important',\r\n                fontWeight: '600 !important',\r\n                color: '#129fdd',\r\n                verticalAlign: 'inherit !important'\r\n            }\r\n        },\r\n        actionButton: {\r\n            fontSize: '13px !important',\r\n            margin: '0 !important'\r\n        }\r\n    }),\r\n    reduxForm({\r\n        form: 'StockReceiveCreateForm',\r\n        enableReinitialize: true\r\n    })\r\n)\r\n\r\nconst customContentStyle = {\r\n    width: '1000px',\r\n    maxWidth: 'none'\r\n}\r\n\r\nconst OrderCreateDialog = enhance((props) => {\r\n    const {\r\n        open,\r\n        handleSubmit,\r\n        onClose,\r\n        classes,\r\n        detailProducts,\r\n        listLoading\r\n    } = props\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n    const supplyId = _.get(detailProducts, 'id')\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            className={classes.podlojkaScroll}\r\n            contentStyle={customContentStyle}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            bodyClassName={classes.popUp}\r\n            autoScrollBodyContent={true}>\r\n            <div className={classes.titleContent}>\r\n                <span>ПРИЕМКА ТОВАРА (Заказ №{supplyId})</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit} scrolling=\"auto\" className={classes.form}>\r\n                    <div className={classes.loader}>\r\n                        <CircularProgress size={40} thickness={4}/>\r\n                    </div>\r\n                    <div className={classes.inContent}>\r\n                        <div className={classes.content}>\r\n                            {listLoading && <div className={classes.listLoader}>\r\n                                <CircularProgress size={40} thickness={4}/>\r\n                            </div>}\r\n\r\n                            <div className={classes.list}>\r\n                                <Row className=\"dottedList\">\r\n                                    <Col xs={3}>Товар</Col>\r\n                                    <Col xs={3}>Тип товара</Col>\r\n                                    <Col xs={2}>Кол-во</Col>\r\n                                    <Col xs={2}>Принято</Col>\r\n                                    <Col xs={2}>Брак</Col>\r\n                                </Row>\r\n                                {_.map(_.get(detailProducts, 'products'), (item) => {\r\n                                    const id = _.get(item, 'id')\r\n                                    const name = _.get(item, ['product', 'name'])\r\n                                    const amount = numberFormat(_.get(item, 'amount'))\r\n                                    const measurement = _.get(item, ['product', 'measurement', 'name'])\r\n\r\n                                    return (\r\n                                        <Row key={id} className=\"dottedList\">\r\n                                            <Col xs={3}>{name}</Col>\r\n                                            <Col xs={3}>Тип товара</Col>\r\n                                            <Col xs={2}>{amount} {measurement}</Col>\r\n                                            <Col xs={2}>\r\n                                                <Field\r\n                                                    name=\"accepted\"\r\n                                                    component={TextField}\r\n                                                    className={classes.inputFieldCustom}\r\n                                                    fullWidth={true}\r\n                                                />\r\n                                                {measurement}\r\n                                            </Col>\r\n                                            <Col xs={2}>\r\n                                                <Field\r\n                                                    name=\"defected\"\r\n                                                    component={TextField}\r\n                                                    className={classes.inputFieldCustom}\r\n                                                    fullWidth={true}\r\n                                                />\r\n                                                {measurement}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <FlatButton\r\n                            label=\"Принять товар\"\r\n                            className={classes.actionButton}\r\n                            primary={true}\r\n                            type=\"submit\"/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\nOrderCreateDialog.propTyeps = {\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    isDefect: PropTypes.bool,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    detailProducts: PropTypes.object,\r\n    listLoading: PropTypes.bool\r\n}\r\nexport default OrderCreateDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/StockReceive/StockReceiveCreateDialog.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport {TextField, UsersSearchField, StockTypeSearchField} from '../ReduxForm'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport MainStyles from '../Styles/MainStyles'\r\n\r\nexport const STOCK_CREATE_DIALOG_OPEN = 'openCreateDialog'\r\n\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\r\n\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        latLng,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        },\r\n\r\n        body: {\r\n            minHeight: 'auto'\r\n        },\r\n        form: {\r\n            minHeight: 'auto'\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        }\r\n    })),\r\n    reduxForm({\r\n        form: 'StockCreateForm',\r\n        enableReinitialize: true\r\n    })\r\n)\r\n\r\nconst StockCreateDialog = enhance((props) => {\r\n    const {open, loading, handleSubmit, onClose, classes, isUpdate} = props\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            className={classes.dialog}\r\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\r\n            bodyStyle={{minHeight: 'auto'}}\r\n            bodyClassName={classes.popUp}>\r\n            <div className={classes.titleContent}>\r\n                <span>{isUpdate ? 'Изменить склад' : 'Добавить склад'}</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit} className={classes.form}>\r\n                    <div className={classes.loader}>\r\n                        <CircularProgress size={40} thickness={4}/>\r\n                    </div>\r\n                    <div className={classes.inContent} style={{minHeight: '200px'}}>\r\n                        <div className={classes.field} style={{paddingTop: '15px'}}>\r\n                            <Field\r\n                                name=\"name\"\r\n                                component={TextField}\r\n                                className={classes.inputFieldCustom}\r\n                                label=\"Наименование\"\r\n                                fullWidth={true}\r\n                            />\r\n                            <Field\r\n                                name=\"manager\"\r\n                                component={UsersSearchField}\r\n                                className={classes.inputFieldCustom}\r\n                                label=\"Завсклад\"\r\n                                fullWidth={true}\r\n                            />\r\n                            <Field\r\n                                name=\"stockType\"\r\n                                component={StockTypeSearchField}\r\n                                className={classes.inputFieldCustom}\r\n                                label=\"Тип склада\"\r\n                                fullWidth={true}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <FlatButton\r\n                            label=\"Сохранить\"\r\n                            type=\"submit\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\n\r\nStockCreateDialog.propTypes = {\r\n    isUpdate: PropTypes.bool,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\nStockCreateDialog.defaultProps = {\r\n    isUpdate: false\r\n}\r\n\r\nexport default StockCreateDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Stock/StockCreateDialog.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose, withReducer} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport {Field, Fields, reduxForm, SubmissionError} from 'redux-form'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport {\r\n    CurrencySearchField,\r\n    ProviderSearchField,\r\n    ProviderContactsField,\r\n    StockSearchField,\r\n    SupplyListProductField,\r\n    TextField,\r\n    DateField\r\n} from '../ReduxForm'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\n\r\nexport const SUPPLY_CREATE_DIALOG_OPEN = 'openCreateDialog'\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\nconst enhance = compose(\r\n    injectSheet({\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            justifyContent: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        },\r\n        podlojkaScroll: {\r\n            overflowY: 'auto !important',\r\n            padding: '0 !important',\r\n            '& > div:first-child > div:first-child': {\r\n                transform: 'translate(0px, 0px) !important'\r\n            },\r\n            '& > div': {\r\n                height: '100% !important',\r\n                '& > div': {\r\n                    height: '100% !important',\r\n                    padding: '50px 0',\r\n                    '& > div': {\r\n                        height: '100%'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        popUp: {\r\n            background: '#fff',\r\n            overflowY: 'hidden !important',\r\n            fontSize: '13px !important',\r\n            position: 'relative',\r\n            padding: '0 !important',\r\n            overflowX: 'hidden',\r\n            height: '100%',\r\n            minHeight: '700px',\r\n            maxHeight: 'inherit !important'\r\n        },\r\n        titleContent: {\r\n            background: '#fff',\r\n            color: '#333',\r\n            fontWeight: 'bold',\r\n            textTransform: 'uppercase',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            borderBottom: '1px solid #efefef',\r\n            padding: '20px 30px',\r\n            zIndex: '999',\r\n            '& button': {\r\n                right: '13px',\r\n                padding: '0 !important',\r\n                position: 'absolute !important'\r\n            }\r\n        },\r\n        inContent: {\r\n            display: 'flex',\r\n            color: '#333',\r\n            height: '100%',\r\n            padding: '0 30px'\r\n        },\r\n        innerWrap: {\r\n            height: 'calc(100% - 57px)'\r\n        },\r\n        bodyContent: {\r\n            color: '#333',\r\n            width: '100%',\r\n            height: 'calc(100% - 59px)'\r\n        },\r\n        form: {\r\n            position: 'relative',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            height: '100%',\r\n            justifyContent: 'space-between'\r\n        },\r\n        field: {\r\n            width: '100%'\r\n        },\r\n        subTitleOrder: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            marginBottom: '5px !important',\r\n            justifyContent: 'space-between',\r\n            fontWeight: '600',\r\n            padding: '0 !important',\r\n            '& span': {\r\n                fontWeight: '600 !important'\r\n            }\r\n        },\r\n        radioButton: {\r\n            marginTop: '10px',\r\n            '&>div': {\r\n                marginBottom: '10px'\r\n            }\r\n        },\r\n        condition: {\r\n            marginTop: '20px',\r\n            '&>div:first-child': {\r\n                marginBottom: '-20px'\r\n            }\r\n        },\r\n        commentFieldSupply: {\r\n            textAlign: 'left',\r\n            width: '100%'\r\n        },\r\n        bottomButton: {\r\n            bottom: '0',\r\n            left: '0',\r\n            right: '0',\r\n            padding: '10px',\r\n            zIndex: '999',\r\n            borderTop: '1px solid #efefef',\r\n            background: '#fff',\r\n            textAlign: 'right',\r\n            '& span': {\r\n                fontSize: '13px !important',\r\n                fontWeight: '600 !important',\r\n                color: '#129fdd',\r\n                verticalAlign: 'inherit !important'\r\n            }\r\n        },\r\n        actionButton: {\r\n            fontSize: '13px !important',\r\n            margin: '0 !important'\r\n        },\r\n        leftOrderPart: {\r\n            flexBasis: '35%',\r\n            padding: '20px 30px 20px 0',\r\n            borderRight: '1px #efefef solid'\r\n        },\r\n        rightOrderPart: {\r\n            flexBasis: '65%',\r\n            maxWidth: '65%',\r\n            padding: '20px 1px 20px 30px',\r\n            maxHeight: '694px',\r\n            overflow: 'auto'\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        },\r\n        inputDateCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            },\r\n            '& div:first-child': {\r\n                height: '45px !important'\r\n            }\r\n        },\r\n        inputFieldDis: {\r\n            fontSize: '13px !important',\r\n            paddingTop: '24px',\r\n            '& div': {\r\n                color: 'rgb(229, 115, 115) !important'\r\n            }\r\n        }\r\n    }),\r\n    reduxForm({\r\n        form: 'SupplyCreateForm',\r\n        enableReinitialize: true\r\n    }),\r\n    withReducer('state', 'dispatch', (state, action) => {\r\n        return {...state, ...action}\r\n    }, {open: false}),\r\n)\r\n\r\nconst customContentStyle = {\r\n    width: '1000px',\r\n    maxWidth: 'none'\r\n}\r\nconst SupplyCreateDialog = enhance((props) => {\r\n    const {open, handleSubmit, onClose, classes, isUpdate} = props\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            className={classes.podlojkaScroll}\r\n            contentStyle={customContentStyle}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            bodyClassName={classes.popUp}\r\n            autoScrollBodyContent={true}>\r\n            <div className={classes.titleContent}>\r\n                <span>{isUpdate ? 'Изменение поставки' : 'Добавление поставки'}</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit} scrolling=\"auto\" className={classes.form}>\r\n                    <div className={classes.loader}>\r\n                        <CircularProgress size={40} thickness={4}/>\r\n                    </div>\r\n                    <div className={classes.innerWrap}>\r\n                        <div className={classes.inContent} style={{minHeight: '350px'}}>\r\n                            <div className={classes.leftOrderPart}>\r\n                                <div className={classes.subTitleOrder}>Выбор поставщика</div>\r\n                                <div className={classes.selectContent}>\r\n                                    <Field\r\n                                        name=\"provider\"\r\n                                        component={ProviderSearchField}\r\n                                        className={classes.inputFieldCustom}\r\n                                        label=\"Поставщик\"\r\n                                        fullWidth={true}/>\r\n                                    <Field\r\n                                        name=\"contact\"\r\n                                        component={ProviderContactsField}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.condition}>\r\n                                    <div className={classes.subTitleOrder}>Условия доставки</div>\r\n                                    <Field\r\n                                        name=\"date_delivery\"\r\n                                        component={DateField}\r\n                                        className={classes.inputDateCustom}\r\n                                        floatingLabelText=\"Дата поставки\"\r\n                                        container=\"inline\"\r\n                                        fullWidth={true}/>\r\n                                    <Field\r\n                                        name=\"stock\"\r\n                                        component={StockSearchField}\r\n                                        className={classes.inputFieldCustom}\r\n                                        label=\"Склад назначения\"\r\n                                        fullWidth={true}/>\r\n                                    <Field\r\n                                        name=\"currency\"\r\n                                        component={CurrencySearchField}\r\n                                        className={classes.inputFieldCustom}\r\n                                        label=\"Валюта оплаты\"\r\n                                        fullWidth={true}/>\r\n                                </div>\r\n                                <div className={classes.commentFieldSupply}>\r\n                                    <div>\r\n                                        <div className={classes.subTitleOrder} style={{marginTop: '15px'}}>Комментарии по заказу</div>\r\n                                        <Field\r\n                                            style={{marginTop: '-20px', lineHeight: '20px', fontSize: '13px'}}\r\n                                            name=\"comment\"\r\n                                            component={TextField}\r\n                                            label=\"Оставить комментарий...\"\r\n\r\n                                            multiLine={true}\r\n                                            rows={4}\r\n                                            rowsMax={6}\r\n                                            fullWidth={true}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.rightOrderPart}>\r\n                                <Fields\r\n                                    names={['products', 'product', 'amount', 'cost']}\r\n                                    component={SupplyListProductField}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <FlatButton\r\n                            label=\"Оформить заказ\"\r\n                            className={classes.actionButton}\r\n                            primary={true}\r\n                            type=\"submit\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\nSupplyCreateDialog.propTyeps = {\r\n    isUpdate: PropTypes.bool,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\nSupplyCreateDialog.defaultProps = {\r\n    isUpdate: false\r\n}\r\nexport default SupplyCreateDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Supply/SupplyCreateDialog.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport {TextField, CurrencySearchField, CheckBox} from '../ReduxForm'\r\nimport MainStyles from '../Styles/MainStyles'\r\nimport ProductSearchField from '../ReduxForm/Product/ProductSearchField'\r\nimport {connect} from 'react-redux'\r\n\r\nexport const SUPPLY_EXPENSE_CREATE_DIALOG_OPEN = 'openSupplyExpenseCreateDialog'\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        },\r\n        inputHalfWrap: {\r\n            flexBasis: '49%',\r\n            width: '49%'\r\n        }\r\n    })),\r\n    reduxForm({\r\n        form: 'SupplyExpenseCreateForm',\r\n        enableReinitialize: true\r\n    }),\r\n    connect((state) => {\r\n        const isChecked = _.get(state, ['form', 'SupplyExpenseCreateForm', 'values', 'linkToProduct'])\r\n        return {\r\n            isChecked\r\n        }\r\n    }),\r\n)\r\n\r\nconst ExpenseCreateDialog = enhance((props) => {\r\n    const {open, handleSubmit, onClose, classes, loading, isChecked} = props\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            className={classes.dialog}\r\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\r\n            bodyClassName={classes.popUp}>\r\n            <div className={classes.titleContent}>\r\n                <span>Добавление расхода</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit} className={classes.form}>\r\n                    <div className={classes.loader}>\r\n                        <CircularProgress size={40} thickness={4}/>\r\n                    </div>\r\n                    <div className={classes.inContent} style={{minHeight: 'auto', paddingBottom: '20px', paddingTop: '20px'}}>\r\n                        <div className={classes.field}>\r\n                            <Field\r\n                                name=\"comment\"\r\n                                component={TextField}\r\n                                className={classes.inputFieldCustom}\r\n                                label=\"Описание раскода\"\r\n                                fullWidth={true}/>\r\n                            <div className={classes.flex} style={{justifyContent: 'space-between'}}>\r\n                                <div className={classes.inputHalfWrap}>\r\n                                    <Field\r\n                                        name=\"amount\"\r\n                                        component={TextField}\r\n                                        className={classes.inputFieldCustom}\r\n                                        label=\"Сумма\"\r\n                                        fullWidth={true}/>\r\n                                </div>\r\n                                <div className={classes.inputHalfWrap}>\r\n                                    <Field\r\n                                        name=\"currency\"\r\n                                        component={CurrencySearchField}\r\n                                        className={classes.inputFieldCustom}\r\n                                        label=\"Валюта\"\r\n                                        fullWidth={true}/>\r\n                                </div>\r\n                            </div>\r\n                            <Field\r\n                                name=\"linkToProduct\"\r\n                                style={{margin: '20px 0 10px'}}\r\n                                component={CheckBox}\r\n                                label=\"Привязать к товару\"\r\n                            />\r\n                            {isChecked && <Field\r\n                                name=\"product\"\r\n                                label=\"Наименование товара\"\r\n                                component={ProductSearchField}\r\n                                className={classes.inputFieldCustom}\r\n                                fullWidth={true}\r\n                            />}\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <FlatButton\r\n                            label=\"Применить\"\r\n                            className={classes.actionButton}\r\n                            primary={true}\r\n                            type=\"submit\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\nExpenseCreateDialog.propTyeps = {\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\nexport default ExpenseCreateDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Supply/SupplyExpenseCreateDialog.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport {compose, withHandlers} from 'recompose'\r\nimport {reduxForm, Field} from 'redux-form'\r\nimport PropTypes from 'prop-types'\r\nimport injectSheet from 'react-jss'\r\nimport {Link} from 'react-router'\r\nimport Paper from 'material-ui/Paper'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport RaisedButton from 'material-ui/RaisedButton'\r\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\r\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\r\nimport {ProviderSearchField, StockSearchField} from '../ReduxForm'\r\nimport CloseIcon from '../CloseIcon'\r\nimport DateToDateField from '../ReduxForm/Basic/DateToDateField'\r\n\r\nexport const SUPPLY_FILTER_OPEN = 'openFilterDialog'\r\n\r\nexport const SUPPLY_FILTER_KEY = {\r\n    PROVIDER: 'provider',\r\n    STOCK: 'stock',\r\n    DELIVERY_FROM_DATE: 'deliveryFromDate',\r\n    DELIVERY_TO_DATE: 'deliveryToDate',\r\n    CREATED_FROM_DATE: 'createdFromDate',\r\n    CREATED_TO_DATE: 'createdToDate'\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            position: 'absolute',\r\n            minWidth: '300px',\r\n            background: '#fff',\r\n            zIndex: 99,\r\n            top: 0,\r\n            left: 0,\r\n            borderRadius: 0,\r\n            padding: '10px 20px 10px 20px'\r\n        },\r\n        afterFilter: {\r\n            width: '268px',\r\n            alignItems: 'center',\r\n            display: 'flex',\r\n            backgroundColor: '#efefef',\r\n            position: 'relative',\r\n            padding: '16px 30px',\r\n            marginLeft: '-30px',\r\n            '& > div:nth-child(2)': {\r\n                position: 'absolute',\r\n                right: '0'\r\n            },\r\n            '& > div:nth-child(1)': {\r\n                color: '#666666'\r\n            },\r\n            '& button': {\r\n                borderLeft: '1px solid white !important'\r\n            }\r\n        },\r\n        icon: {\r\n            color: '#8f8f8f !important'\r\n        },\r\n        arrow: {\r\n            color: '#12aaeb',\r\n            paddingRight: '14px',\r\n            position: 'relative',\r\n            '& svg': {\r\n                position: 'absolute',\r\n                width: '13px !important',\r\n                height: '20px !important'\r\n            }\r\n        },\r\n        header: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n            '& button': {\r\n                marginRight: '-12px !important'\r\n            }\r\n        },\r\n        title: {\r\n            fontSize: '15px',\r\n            color: '#5d6474'\r\n        },\r\n        submit: {\r\n            color: '#fff !important'\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        }\r\n    }),\r\n    reduxForm({\r\n        form: 'SupplyFilterForm',\r\n        enableReinitialize: true\r\n    }),\r\n    withHandlers({\r\n        getCount: props => () => {\r\n            const {filter} = props\r\n            return _(SUPPLY_FILTER_KEY)\r\n                .values()\r\n                .filter(item => item !== SUPPLY_FILTER_KEY.FROM_DATE)\r\n                .filter(item => filter.getParam(item))\r\n                .value()\r\n                .length\r\n        }\r\n    })\r\n)\r\n\r\nconst SupplyFilterForm = enhance((props) => {\r\n    const {classes, filterDialog, getCount} = props\r\n    const filterCounts = getCount()\r\n\r\n    if (!filterDialog.openFilterDialog) {\r\n        if (filterCounts) {\r\n            return (\r\n                <div className={classes.afterFilter}>\r\n                    <div>Фильтр: {filterCounts} элемента</div>\r\n                    <div>\r\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                            <BorderColorIcon color=\"#8f8f8f\" />\r\n                        </IconButton>\r\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\r\n                            <CloseIcon className={classes.icon}/>\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Link\r\n                    className={classes.arrow}\r\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.wrapper} zDepth={2}>\r\n                <div className={classes.header}>\r\n                    <span className={classes.title}>Фильтр</span>\r\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\r\n                        <CloseIcon className={classes.icon} />\r\n                    </IconButton>\r\n                </div>\r\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\r\n                    <div>\r\n                        <Field className={classes.inputFieldCustom} name=\"provider\" component={ProviderSearchField} label=\"Поставщик\"/>\r\n                        <Field className={classes.inputFieldCustom} name=\"stock\" component={StockSearchField} label=\"Склад\"/>\r\n                    </div>\r\n                    <div>\r\n                        <Field className={classes.inputFieldCustom} name=\"dateDelivery\" component={DateToDateField} label=\"Дата поставки\" fullWidth={true}/>\r\n                    </div>\r\n                    <div>\r\n                        <Field className={classes.inputFieldCustom} name=\"dateCreated\" component={DateToDateField} label=\"Дата создания\" fullWidth={true}/>\r\n                    </div>\r\n                    <RaisedButton\r\n                        type=\"submit\"\r\n                        primary={true}\r\n                        buttonStyle={{color: '#fff'}}\r\n                        label=\"Применить\"\r\n                        style={{marginTop: '15px'}}>\r\n                    </RaisedButton>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n})\r\n\r\nSupplyFilterForm.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    filterDialog: PropTypes.shape({\r\n        filterLoading: PropTypes.bool.isRequired,\r\n        openFilterDialog: PropTypes.bool.isRequired,\r\n        handleOpenFilterDialog: PropTypes.func.isRequired,\r\n        handleCloseFilterDialog: PropTypes.func.isRequired,\r\n        handleSubmitFilterDialog: PropTypes.func.isRequired\r\n    })\r\n}\r\n\r\nexport default SupplyFilterForm\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Supply/SupplyFilterForm.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport {compose, withHandlers} from 'recompose'\r\nimport {reduxForm, Field} from 'redux-form'\r\nimport PropTypes from 'prop-types'\r\nimport injectSheet from 'react-jss'\r\nimport {Link} from 'react-router'\r\nimport Paper from 'material-ui/Paper'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport RaisedButton from 'material-ui/RaisedButton'\r\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\r\nimport DateToDateField from '../ReduxForm/Basic/DateToDateField'\r\nimport {TransactionTypeSearchField, ExpensiveCategorySearchField} from '../ReduxForm'\r\nimport CloseIcon from '../CloseIcon'\r\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\r\n\r\nexport const TRANSACTION_FILTER_OPEN = 'openFilterDialog'\r\n\r\nexport const TRANSACTION_FILTER_KEY = {\r\n    TYPE: 'type',\r\n    CATEGORY_EXPENSE: 'categoryExpense',\r\n    FROM_DATE: 'fromDate',\r\n    TO_DATE: 'toDate'\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            position: 'absolute',\r\n            minWidth: '300px',\r\n            background: '#fff',\r\n            zIndex: 99,\r\n            top: 0,\r\n            left: 0,\r\n            borderRadius: 0,\r\n            padding: '10px 20px 10px 20px'\r\n        },\r\n        afterFilter: {\r\n            width: '268px',\r\n            alignItems: 'center',\r\n            display: 'flex',\r\n            backgroundColor: '#efefef',\r\n            position: 'relative',\r\n            padding: '16px 30px',\r\n            marginLeft: '-30px',\r\n            '& > div:nth-child(2)': {\r\n                position: 'absolute',\r\n                right: '0'\r\n            },\r\n            '& > div:nth-child(1)': {\r\n                color: '#666666'\r\n            },\r\n            '& button': {\r\n                borderLeft: '1px solid white !important'\r\n            }\r\n        },\r\n        icon: {\r\n            color: '#8f8f8f !important'\r\n        },\r\n        arrow: {\r\n            color: '#12aaeb',\r\n            paddingRight: '14px',\r\n            position: 'relative',\r\n            '& svg': {\r\n                position: 'absolute',\r\n                width: '13px !important',\r\n                height: '20px !important'\r\n            }\r\n        },\r\n        header: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n            '& button': {\r\n                marginRight: '-12px !important'\r\n            }\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        },\r\n        title: {\r\n            fontSize: '15px',\r\n            color: '#5d6474'\r\n        },\r\n        submit: {\r\n            color: '#fff !important'\r\n        }\r\n    }),\r\n    reduxForm({\r\n        form: 'TransactionFilterForm',\r\n        enableReinitialize: true\r\n    }),\r\n    withHandlers({\r\n        getCount: props => () => {\r\n            const {filter} = props\r\n            return _(TRANSACTION_FILTER_KEY)\r\n                .values()\r\n                .filter(item => item !== TRANSACTION_FILTER_KEY.FROM_DATE)\r\n                .filter(item => filter.getParam(item))\r\n                .value()\r\n                .length\r\n        }\r\n    })\r\n)\r\n\r\nconst TransactionFilterForm = enhance((props) => {\r\n    const {classes, filterDialog, getCount} = props\r\n    const filterCounts = getCount()\r\n\r\n    if (!filterDialog.openFilterDialog) {\r\n        if (filterCounts) {\r\n            return (\r\n                <div className={classes.afterFilter}>\r\n                    <div>Фильтр: {filterCounts} элемента</div>\r\n                    <div>\r\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                            <BorderColorIcon color=\"#8f8f8f\" />\r\n                        </IconButton>\r\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\r\n                            <CloseIcon className={classes.icon}/>\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Link\r\n                    className={classes.arrow}\r\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.wrapper} zDepth={2}>\r\n                <div className={classes.header}>\r\n                    <span className={classes.title}>Фильтр</span>\r\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\r\n                        <CloseIcon className={classes.icon} />\r\n                    </IconButton>\r\n                </div>\r\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\r\n                    <div>\r\n                        <Field className={classes.inputFieldCustom} name=\"categoryExpense\" component={ExpensiveCategorySearchField} label=\"Категории расходов\"/>\r\n                    </div>\r\n                    <div>\r\n                        <Field className={classes.inputFieldCustom} name=\"type\" component={TransactionTypeSearchField} label=\"Тип\"/>\r\n                    </div>\r\n                    <div>\r\n                        <Field className={classes.inputFieldCustom} name=\"date\" component={DateToDateField} label=\"Диапазон дат\" fullWidth={true}/>\r\n                    </div>\r\n\r\n                    <RaisedButton\r\n                        type=\"submit\"\r\n                        primary={true}\r\n                        buttonStyle={{color: '#fff'}}\r\n                        label=\"Применить\"\r\n                        style={{marginTop: '15px'}}>\r\n                    </RaisedButton>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n})\r\n\r\nTransactionFilterForm.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    filterDialog: PropTypes.shape({\r\n        filterLoading: PropTypes.bool.isRequired,\r\n        openFilterDialog: PropTypes.bool.isRequired,\r\n        handleOpenFilterDialog: PropTypes.func.isRequired,\r\n        handleCloseFilterDialog: PropTypes.func.isRequired,\r\n        handleSubmitFilterDialog: PropTypes.func.isRequired\r\n    })\r\n}\r\n\r\nexport default TransactionFilterForm\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Transaction/TransactionFilterForm.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport {TextField, ImageUploadField, UsersGroupSearchField} from '../ReduxForm'\r\nimport MainStyles from '../Styles/MainStyles'\r\n\r\nexport const USERS_CREATE_DIALOG_OPEN = 'openCreateDialog'\r\n\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\r\n\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        latLng,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\n\r\nconst validateForm = values => {\r\n    const errors = {}\r\n    if (values.password && values.passwordExp && values.password !== values.passwordExp) {\r\n        errors.password = 'Правильно введите'\r\n    }\r\n    return errors\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        },\r\n        dialogAddUser: {\r\n            overflowY: 'auto !important',\r\n            '& div:first-child div:first-child': {\r\n                transform: 'translate(0px, 0px) !important'\r\n            },\r\n            '& .imageDropZone': {\r\n                width: '150px !important',\r\n                height: '145px !important',\r\n                '& svg': {\r\n                    width: '30px !important',\r\n                    height: '30px !important'\r\n                }\r\n            }\r\n        }\r\n    })),\r\n    reduxForm({\r\n        form: 'UsersCreateForm',\r\n        validate: validateForm,\r\n        enableReinitialize: true\r\n    })\r\n)\r\n\r\nconst UsersCreateDialog = enhance((props) => {\r\n    const {open, loading, handleSubmit, onClose, classes, isUpdate, errorData} = props\r\n\r\n    const errorText = _.get(errorData, 'errorText')\r\n    const show = _.get(errorData, 'show')\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            className={classes.dialogAddUser}\r\n            contentStyle={loading ? {width: '300px'} : {width: '600px'}}\r\n            bodyClassName={classes.popUp}>\r\n            <div className={classes.titleContent}>\r\n                <span>{isUpdate ? 'Изменить пользователя' : 'Добавить пользователя'}</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit} className={classes.form}>\r\n                    <div className={classes.loader}>\r\n                        <CircularProgress size={40} thickness={4}/>\r\n                    </div>\r\n                    <div className={classes.inContent} style={{display: 'block', minHeight: '350px'}}>\r\n                        <Row className={classes.field}>\r\n                            <Col xs={7} style={{paddingTop: '15px'}}>\r\n                                <Field\r\n                                    name=\"firstName\"\r\n                                    component={TextField}\r\n                                    label=\"Имя\"\r\n                                    className={classes.inputFieldCustom}\r\n                                    fullWidth={true}/>\r\n                                <Field\r\n                                    name=\"secondName\"\r\n                                    component={TextField}\r\n                                    label=\"Фамилия\"\r\n                                    className={classes.inputFieldCustom}\r\n                                    fullWidth={true}/>\r\n                                <Field\r\n                                    name=\"group\"\r\n                                    component={UsersGroupSearchField}\r\n                                    label=\"Тип Пользователя\"\r\n                                    className={classes.inputFieldCustom}\r\n                                    fullWidth={true}/>\r\n                            </Col>\r\n                            <Col xs={5}>\r\n                                <Field\r\n                                    name=\"image\"\r\n                                    className={classes.imageUpload}\r\n                                    component={ImageUploadField}\r\n                                    fullWidth={true}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <div className=\"dottedList\"></div>\r\n                        <Row className={classes.field} style={{paddingTop: '15px'}}>\r\n                            <Col xs={6}>\r\n                                <Field\r\n                                    name=\"username\"\r\n                                    component={TextField}\r\n                                    label=\"Логин\"\r\n                                    className={classes.inputFieldCustom}\r\n                                    fullWidth={true}/>\r\n                                <Field\r\n                                    name=\"phoneNumber\"\r\n                                    component={TextField}\r\n                                    label=\"Телефон\"\r\n                                    className={classes.inputFieldCustom}\r\n                                    fullWidth={true}/>\r\n                            </Col>\r\n                            <Col xs={6}>\r\n                                <Field\r\n                                    name=\"password\"\r\n                                    component={TextField}\r\n                                    type=\"password\"\r\n                                    label=\"Пароль\"\r\n                                    className={classes.inputFieldCustom}\r\n                                    fullWidth={true}/>\r\n                                <Field\r\n                                    name=\"passwordExp\"\r\n                                    errorText={show ? errorText : ''}\r\n                                    type=\"password\"\r\n                                    component={TextField}\r\n                                    label=\"Подтвердите пароль\"\r\n                                    className={classes.inputFieldCustom}\r\n                                    fullWidth={true}/>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <FlatButton\r\n                            label=\"Сохранить\"\r\n                            className={classes.actionButton}\r\n                            primary={true}\r\n                            type=\"submit\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\n\r\nUsersCreateDialog.propTyeps = {\r\n    isUpdate: PropTypes.bool,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default UsersCreateDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Users/UsersCreateDialog.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport {compose, withHandlers} from 'recompose'\r\nimport {reduxForm, Field} from 'redux-form'\r\nimport PropTypes from 'prop-types'\r\nimport injectSheet from 'react-jss'\r\nimport {Link} from 'react-router'\r\nimport Paper from 'material-ui/Paper'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport RaisedButton from 'material-ui/RaisedButton'\r\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\r\nimport {ManufactureSearchField, UsersGroupSearchField} from '../ReduxForm'\r\nimport CloseIcon from '../CloseIcon'\r\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\r\n\r\nexport const USERS_FILTER_OPEN = 'openFilterDialog'\r\n\r\nexport const USERS_FILTER_KEY = {\r\n    MANUFACTURE: 'manufacture',\r\n    GROUP: 'group'\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            position: 'absolute',\r\n            minWidth: '300px',\r\n            background: '#fff',\r\n            zIndex: 99,\r\n            top: 0,\r\n            left: 0,\r\n            borderRadius: 0,\r\n            padding: '10px 20px 10px 20px'\r\n        },\r\n        afterFilter: {\r\n            width: '268px',\r\n            alignItems: 'center',\r\n            display: 'flex',\r\n            backgroundColor: '#efefef',\r\n            position: 'relative',\r\n            padding: '16px 30px',\r\n            marginLeft: '-30px',\r\n            '& > div:nth-child(2)': {\r\n                position: 'absolute',\r\n                right: '0'\r\n            },\r\n            '& > div:nth-child(1)': {\r\n                color: '#666666'\r\n            },\r\n            '& button': {\r\n                borderLeft: '1px solid white !important'\r\n            }\r\n        },\r\n        icon: {\r\n            color: '#8f8f8f !important'\r\n        },\r\n        arrow: {\r\n            color: '#12aaeb',\r\n            paddingRight: '14px',\r\n            position: 'relative',\r\n            '& svg': {\r\n                position: 'absolute',\r\n                width: '13px !important',\r\n                height: '20px !important'\r\n            }\r\n        },\r\n        header: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n            '& button': {\r\n                marginRight: '-12px !important'\r\n            }\r\n        },\r\n        title: {\r\n            fontSize: '15px',\r\n            color: '#5d6474'\r\n        },\r\n        submit: {\r\n            color: '#fff !important'\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        }\r\n    }),\r\n    reduxForm({\r\n        form: 'UsersFilterForm',\r\n        enableReinitialize: true\r\n    }),\r\n    withHandlers({\r\n        getCount: props => () => {\r\n            const {filter} = props\r\n            return _(USERS_FILTER_KEY)\r\n                .values()\r\n                .filter(item => item !== USERS_FILTER_KEY.FROM_DATE)\r\n                .filter(item => filter.getParam(item))\r\n                .value()\r\n                .length\r\n        }\r\n    })\r\n)\r\n\r\nconst UsersFilterForm = enhance((props) => {\r\n    const {classes, filterDialog, getCount} = props\r\n    const filterCounts = getCount()\r\n\r\n    if (!filterDialog.openFilterDialog) {\r\n        if (filterCounts) {\r\n            return (\r\n                <div className={classes.afterFilter}>\r\n                    <div>Фильтр: {filterCounts} элемента</div>\r\n                    <div>\r\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                            <BorderColorIcon color=\"#8f8f8f\" />\r\n                        </IconButton>\r\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\r\n                            <CloseIcon className={classes.icon}/>\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Link\r\n                    className={classes.arrow}\r\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.wrapper} zDepth={2}>\r\n                <div className={classes.header}>\r\n                    <span className={classes.title}>Фильтр</span>\r\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\r\n                        <CloseIcon className={classes.icon} />\r\n                    </IconButton>\r\n                </div>\r\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\r\n                    <div>\r\n                        <Field className={classes.inputFieldCustom} name=\"manufacture\" component={ManufactureSearchField} label=\"Производство\" fullWidth={true}/>\r\n                    </div>\r\n                    <div>\r\n                        <Field className={classes.inputFieldCustom} name=\"group\" component={UsersGroupSearchField} label=\"Принадлежность к группе\" fullWidth={true}/>\r\n                    </div>\r\n\r\n                    <RaisedButton\r\n                        type=\"submit\"\r\n                        primary={true}\r\n                        buttonStyle={{color: '#fff'}}\r\n                        label=\"Применить\"\r\n                        style={{marginTop: '15px'}}>\r\n                    </RaisedButton>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n})\r\n\r\nUsersFilterForm.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    filterDialog: PropTypes.shape({\r\n        filterLoading: PropTypes.bool.isRequired,\r\n        openFilterDialog: PropTypes.bool.isRequired,\r\n        handleOpenFilterDialog: PropTypes.func.isRequired,\r\n        handleCloseFilterDialog: PropTypes.func.isRequired,\r\n        handleSubmitFilterDialog: PropTypes.func.isRequired\r\n    })\r\n}\r\n\r\nexport default UsersFilterForm\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Users/UsersFilterForm.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport {hashHistory, Link} from 'react-router'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport sprintf from 'sprintf'\r\nimport PropTypes from 'prop-types'\r\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport {reduxForm} from 'redux-form'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport TextFieldSearch from 'material-ui/TextField'\r\nimport SearchIcon from 'material-ui/svg-icons/action/search'\r\nimport Container from '../Container'\r\nimport SubMenu from '../SubMenu'\r\nimport injectSheet from 'react-jss'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport {compose, withState, withHandlers} from 'recompose'\r\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\r\nimport ContentAdd from 'material-ui/svg-icons/content/add'\r\nimport IconMenu from 'material-ui/IconMenu'\r\nimport MenuItem from 'material-ui/MenuItem'\r\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\r\nimport Edit from 'material-ui/svg-icons/image/edit'\r\nimport Tooltip from '../ToolTip'\r\nimport Arrow from 'material-ui/svg-icons/navigation/arrow-drop-down'\r\nimport ZoneMap from './ZoneMap'\r\nimport AddZonePopup from './AddZonePopup'\r\nimport ZoneDetails from './ZoneDetails'\r\nimport NotFound from '../Images/not-found.png'\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            justifyContent: 'center',\r\n            display: 'flex'\r\n        },\r\n        addButton: {\r\n            '& button': {\r\n                backgroundColor: '#275482 !important'\r\n            }\r\n        },\r\n        addPerson: {\r\n            boxShadow: 'none !important',\r\n            '& button': {\r\n                background: '#199ee0 !important',\r\n                width: '30px !important',\r\n                height: '30px !important',\r\n                '& svg': {\r\n                    width: '20px !important',\r\n                    height: '30px !important'\r\n                }\r\n            }\r\n        },\r\n        addButtonWrapper: {\r\n            position: 'absolute',\r\n            top: '10px',\r\n            right: '0',\r\n            marginBottom: '0px'\r\n        },\r\n        zonesWrapper: {\r\n            background: '#f2f5f8',\r\n            position: 'relative',\r\n            overflowX: 'hidden',\r\n            margin: '0 -28px',\r\n            minHeight: 'calc(100% - 4px)',\r\n            boxShadow: 'rgba(0, 0, 0, 0.09) 0px -2px 5px, rgba(0, 0, 0, 0.05) 0px -2px 6px',\r\n            '& > div:first-child': {\r\n                position: 'absolute',\r\n                top: '0',\r\n                left: '0',\r\n                right: '0',\r\n                bottom: '0'\r\n            }\r\n        },\r\n        zonesInfo: {\r\n            background: '#fff',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'space-between',\r\n            position: 'absolute',\r\n            width: '450px',\r\n            top: '0',\r\n            bottom: '0',\r\n            transition: 'all 0.3s ease',\r\n            zIndex: '2'\r\n        },\r\n        toggleButton: {\r\n            position: 'absolute',\r\n            left: '-24px',\r\n            top: '18px',\r\n            padding: '8px 0',\r\n            background: '#fff',\r\n            cursor: 'pointer'\r\n        },\r\n        expanded: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            '& svg': {\r\n                transform: 'rotate(-90deg)',\r\n                position: 'relative',\r\n                left: '1px'\r\n            }\r\n        },\r\n        collapsed: {\r\n            extend: 'expanded',\r\n            '& svg': {\r\n                transform: 'rotate(90deg)',\r\n                position: 'relative',\r\n                left: '1px'\r\n            }\r\n        },\r\n        zonesInfoTitle: {\r\n            display: 'flex',\r\n            padding: '20px 30px',\r\n            borderBottom: '1px #efefef solid',\r\n            position: 'relative',\r\n            '& > div': {\r\n                display: 'flex',\r\n                marginRight: '50px',\r\n                '& big': {\r\n                    fontSize: '28px',\r\n                    lineHeight: '28px',\r\n                    marginRight: '10px'\r\n                },\r\n                '& span': {\r\n                    fontSize: '12px !important',\r\n                    lineHeight: '14px'\r\n                }\r\n            },\r\n            '& > div:last-child': {\r\n                margin: '0'\r\n            }\r\n        },\r\n        zonesInfoFooter: {\r\n            extend: 'zonesInfoTitle',\r\n            borderBottom: 'none',\r\n            borderTop: '1px #efefef solid',\r\n            '& > div big': {\r\n                color: '#ff7374'\r\n            }\r\n        },\r\n        list: {\r\n            height: 'calc(100% - 138px)',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'flex-start',\r\n            '& .row': {\r\n                alignItems: 'center',\r\n                margin: '0',\r\n                paddingLeft: '22px',\r\n                height: '50px',\r\n                '& > div:last-child': {\r\n                    paddingRight: '0'\r\n                },\r\n                '& > div:nth-child(3)': {\r\n                    textAlign: 'center'\r\n                },\r\n                '& button > div': {\r\n                    display: 'flex'\r\n                }\r\n            }\r\n        },\r\n        listHeader: {\r\n            background: '#5d6474',\r\n            color: '#fff',\r\n            fontWeight: 'bold',\r\n            height: '57px !important'\r\n        },\r\n        listTitle: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n            padding: '0 30px',\r\n            height: '57px',\r\n            '& > span': {\r\n                fontWeight: '600'\r\n            }\r\n        },\r\n        itemList: {\r\n            height: '100%',\r\n            overflowY: 'auto',\r\n            position: 'relative'\r\n        },\r\n        search: {\r\n            position: 'relative',\r\n            display: 'flex',\r\n            width: '100%',\r\n            '& > div': {\r\n                paddingRight: '35px'\r\n            }\r\n        },\r\n        searchField: {\r\n            fontSize: '13px !important',\r\n            width: '100%',\r\n            marginLeft: '50px'\r\n        },\r\n        searchButton: {\r\n            position: 'absolute !important',\r\n            right: '-10px'\r\n        },\r\n        addZoneWrapper: {\r\n            position: 'absolute',\r\n            top: '10px',\r\n            left: '50%',\r\n            marginLeft: '-275px',\r\n            padding: '7px 20px',\r\n            width: '550px',\r\n            height: '60px',\r\n            '& form': {\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'space-between',\r\n                width: '100%',\r\n                height: '100%'\r\n            }\r\n        },\r\n        inputFieldCustom: {\r\n            flexBasis: '200px',\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        },\r\n        actionButton: {\r\n            '& span': {\r\n                color: '#129fdd !important',\r\n                fontWeight: '600 !important'\r\n            }\r\n        },\r\n        addZoneClose: {\r\n            position: 'absolute',\r\n            right: '30px',\r\n            '& button': {\r\n                background: '#fff !important'\r\n            },\r\n            '& svg': {\r\n                fill: '#666 !important'\r\n            }\r\n        },\r\n        emptyQuery: {\r\n            background: 'url(' + NotFound + ') no-repeat center center',\r\n            backgroundSize: '200px',\r\n            padding: '200px 0 0',\r\n            textAlign: 'center',\r\n            fontSize: '13px',\r\n            color: '#666',\r\n            '& svg': {\r\n                width: '50px !important',\r\n                height: '50px !important',\r\n                color: '#999 !important'\r\n            }\r\n        }\r\n    }),\r\n    reduxForm({\r\n        form: 'ZoneCreateForm',\r\n        enableReinitialize: true\r\n    }),\r\n    withState('search', 'setSearch', ({filter}) => filter.getParam('search')),\r\n    withHandlers({\r\n        onSubmit: props => (event) => {\r\n            const {search, filter} = props\r\n            event.preventDefault()\r\n\r\n            hashHistory.push(filter.createURL({search}))\r\n        }\r\n    })\r\n)\r\n\r\nconst iconStyle = {\r\n    icon: {\r\n        color: '#666'\r\n    },\r\n    button: {\r\n        width: 45,\r\n        height: 45,\r\n        padding: '0 12px'\r\n    }\r\n}\r\n\r\nconst ZonesWrapper = enhance((props) => {\r\n    const {\r\n        filter,\r\n        listData,\r\n        statData,\r\n        classes,\r\n        addZone,\r\n        detailData,\r\n        toggle,\r\n        search,\r\n        setSearch,\r\n        onSubmit\r\n    } = props\r\n    const ONE = 1\r\n    const isOpenToggle = toggle.openToggle\r\n    const isOpenPopup = addZone.openAddZone\r\n    const isLoadingList = _.get(listData, 'listLoading')\r\n    const isListEmpty = _.isEmpty(_.get(listData, 'data'))\r\n\r\n    const openDetail = _.get(detailData, 'openDetail')\r\n\r\n    const isLoadingStat = _.get(statData, 'statLoading')\r\n    const activeZones = _.get(statData, ['data', 'activeBorders'])\r\n    const boundMarkets = _.get(statData, ['data', 'boundMarkets'])\r\n    const passiveMarkets = _.get(statData, ['data', 'passiveMarkets'])\r\n    const passiveAgents = _.get(statData, ['data', 'passiveAgents'])\r\n\r\n    const iconButton = (\r\n        <IconButton\r\n            iconStyle={iconStyle.icon}\r\n            style={iconStyle.button}>\r\n            <MoreVertIcon/>\r\n        </IconButton>\r\n    )\r\n\r\n    const zoneInfoToggle = (\r\n        <div className={classes.zonesInfo} style={isOpenToggle ? {right: '0'} : {right: '-450px'}}>\r\n            <div className={classes.toggleButton}>\r\n                {isOpenToggle ? <div className={classes.expanded} onClick={toggle.handleCollapseInfo}><Arrow/></div>\r\n                    : <div className={classes.collapsed} onClick={toggle.handleExpandInfo}><Arrow/></div>}\r\n            </div>\r\n            {!openDetail ? <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'space-between', height: '100%'}}>\r\n                <div className={classes.zonesInfoTitle}>\r\n                    {isLoadingStat &&\r\n                    <div className={classes.loader}>\r\n                        <CircularProgress size={25} thickness={3}/>\r\n                    </div>}\r\n                    <div>\r\n                        <big>{activeZones}</big>\r\n                        <span>{(activeZones === ONE) ? 'активная' : 'активных'} <br/> {(activeZones === ONE) ? 'зона' : 'зон'}</span>\r\n                    </div>\r\n                    <div>\r\n                        <big>{boundMarkets}</big>\r\n                        <span>магазинов <br/> в зонах</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.list}>\r\n                    <div className={classes.listTitle}>\r\n                        <span>Зоны</span>\r\n                        <div className={classes.searchField}>\r\n                            <form onSubmit={onSubmit}>\r\n                                <div className={classes.search}>\r\n                                    <TextFieldSearch\r\n                                        fullWidth={true}\r\n                                        hintText=\"Поиск\"\r\n                                        className={classes.searchField}\r\n                                        value={search}\r\n                                        onChange={(event) => setSearch(event.target.value)}\r\n                                    />\r\n                                    <IconButton\r\n                                        iconStyle={{color: '#ccc'}}\r\n                                        className={classes.searchButton}\r\n                                        disableTouchRipple={true}>\r\n                                        <SearchIcon />\r\n                                    </IconButton>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <Row className={classes.listHeader}>\r\n                        <Col xs={2}>ID</Col>\r\n                        <Col xs={6}>Наименование зоны</Col>\r\n                        <Col xs={2}>Магазины</Col>\r\n                    </Row>\r\n                    <div className={classes.itemList}>\r\n                        {isLoadingList &&\r\n                        <div className={classes.loader}>\r\n                            <CircularProgress size={40} thickness={4}/>\r\n                        </div>}\r\n                        {!isListEmpty ? _.map(_.get(listData, 'data'), (item) => {\r\n                            const id = _.get(item, 'id')\r\n                            const marketsCount = _.get(item, 'marketsCount')\r\n                            const name = _.get(item, 'title')\r\n                            return (\r\n                                <Row key={id}>\r\n                                    <Col xs={2} style={{color: '#237bde'}}>Z-{id}</Col>\r\n                                    <Col xs={6}>\r\n                                        <Link to={{\r\n                                            pathname: sprintf(ROUTES.ZONES_ITEM_PATH, id),\r\n                                            query: filter.getParams()\r\n                                        }}>{name}</Link>\r\n                                    </Col>\r\n                                    <Col xs={2}>{marketsCount}</Col>\r\n                                    <Col xs={2} style={{textAlign: 'right'}}>\r\n                                        <IconMenu\r\n                                            iconButtonElement={iconButton}\r\n                                            anchorOrigin={{horizontal: 'right', vertical: 'top'}}\r\n                                            targetOrigin={{horizontal: 'right', vertical: 'top'}}>\r\n                                            <MenuItem\r\n                                                primaryText=\"Изменить\"\r\n                                                leftIcon={<Edit />}\r\n                                            />\r\n                                            <MenuItem\r\n                                                primaryText=\"Удалить \"\r\n                                                leftIcon={<DeleteIcon />}\r\n                                            />\r\n                                        </IconMenu>\r\n                                    </Col>\r\n                                </Row>\r\n                            )\r\n                        })\r\n                        : <div className={classes.emptyQuery}>\r\n                                <div>По вашему запросу ничего не найдено</div>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.zonesInfoFooter}>\r\n                    {isLoadingStat &&\r\n                    <div className={classes.loader}>\r\n                        <CircularProgress size={25} thickness={3}/>\r\n                    </div>}\r\n                    <div>\r\n                        <big>{passiveMarkets}</big>\r\n                        <span>магазинов <br/> не распределено</span>\r\n                    </div>\r\n                    <div>\r\n                        <big>{passiveAgents}</big>\r\n                        <span>агентов <br/> не распределено</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            : <ZoneDetails\r\n                    detailData={detailData}\r\n                    filter={filter}\r\n                />}\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.ZONES_LIST_URL}/>\r\n\r\n            <div className={classes.addButtonWrapper}>\r\n                <Tooltip position=\"left\" text=\"Добавить зону\">\r\n                    <FloatingActionButton\r\n                        mini={true}\r\n                        className={classes.addButton}\r\n                        onTouchTap={addZone.handleOpenAddZone}>\r\n                        <ContentAdd />\r\n                    </FloatingActionButton>\r\n                </Tooltip>\r\n            </div>\r\n\r\n            <div className={classes.zonesWrapper}>\r\n                <ZoneMap />\r\n                {isOpenPopup && <AddZonePopup\r\n                    onClose={addZone.handleCloseAddZone}\r\n                    onSubmit={addZone.handleSubmitAddZone}\r\n                />}\r\n                {zoneInfoToggle}\r\n            </div>\r\n        </Container>\r\n    )\r\n})\r\n\r\nZonesWrapper.PropTypes = {\r\n    filter: PropTypes.object,\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object,\r\n    statData: PropTypes.object,\r\n    addZone: PropTypes.shape({\r\n        openAddZone: PropTypes.bool.isRequired,\r\n        handleOpenAddZone: PropTypes.func.isRequired,\r\n        handleCloseAddZone: PropTypes.func.isRequired,\r\n        handleSubmitAddZone: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    toggle: PropTypes.shape({\r\n        openToggle: PropTypes.bool.isRequired,\r\n        handleExpandInfo: PropTypes.func.isRequired,\r\n        handleCollapseInfo: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default ZonesWrapper\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Zones/ZonesWrapper.js","export const MANUFACTURE_TAB_PRODUCT = 'product'\nexport const MANUFACTURE_TAB_PERSON = 'person'\nexport const MANUFACTURE_TAB_EQUIPMENT = 'equipment'\nexport const MANUFACTURE_TAB_SHIPMENT = 'shipment'\n\nexport const MANUFACTURE_DEFAULT_TAB = MANUFACTURE_TAB_PRODUCT\n\n\n\n// WEBPACK FOOTER //\n// src/constants/manufactureTab.js","export const ORDER_TAB_PRODUCT_LIST = 'productList'\nexport const ORDER_TAB_RETURN = 'return'\nexport const ORDER_TAB_PERFORMANCE = 'performance'\n\nexport const ORDER_DEFAULT_TAB = ORDER_TAB_PRODUCT_LIST\n\n\n\n// WEBPACK FOOTER //\n// src/constants/orderTab.js","export const STOCK_RECEIVE_TAB_RECEIVE = 'receive'\r\nexport const STOCK_RECEIVE_TAB_TRANSFER = 'transfer'\r\nexport const STOCK_RECEIVE_TAB_HISTORY = 'history'\r\n\r\nexport const STOCK_RECEIVE_DEFAULT_TAB = STOCK_RECEIVE_TAB_RECEIVE\r\n\n\n\n// WEBPACK FOOTER //\n// src/constants/stockReceiveTab.js","export const TOKEN_KEY = 'token'\n\n\n\n// WEBPACK FOOTER //\n// src/constants/storage.js","module.exports = __webpack_public_path__ + \"d9f29071735cb71be3f0e89870e8899f.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Images/badge.png\n// module id = 521\n// module chunks = 0","module.exports = __webpack_public_path__ + \"305f1e1d4ce61c0c5eaedc6dcf7154df.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Images/cut.png\n// module id = 522\n// module chunks = 0","module.exports = __webpack_public_path__ + \"3ead59a7f1824afd7fd2d85780be9922.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Images/cylindrical.png\n// module id = 523\n// module chunks = 0","module.exports = __webpack_public_path__ + \"ecc0f78a568cf1c319d70c6873812d87.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Images/excel.png\n// module id = 524\n// module chunks = 0","module.exports = __webpack_public_path__ + \"7c6cef250a3046fcc773aca8907ac82c.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Images/glue.png\n// module id = 525\n// module chunks = 0","module.exports = __webpack_public_path__ + \"43629f39ed09a4077104cf3a8c233fee.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Images/person.png\n// module id = 526\n// module chunks = 0","module.exports = __webpack_public_path__ + \"341a661712f6f184db83172b38e1e195.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Images/press.png\n// module id = 527\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar AvFiberManualRecord = function AvFiberManualRecord(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('circle', { cx: '12', cy: '12', r: '8' })\n  );\n};\nAvFiberManualRecord = (0, _pure2.default)(AvFiberManualRecord);\nAvFiberManualRecord.displayName = 'AvFiberManualRecord';\nAvFiberManualRecord.muiName = 'SvgIcon';\n\nexports.default = AvFiberManualRecord;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/av/fiber-manual-record.js\n// module id = 633\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar AvPlaylistAddCheck = function AvPlaylistAddCheck(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M14 10H2v2h12v-2zm0-4H2v2h12V6zM2 16h8v-2H2v2zm19.5-4.5L23 13l-6.99 7-4.51-4.5L13 14l3.01 3 5.49-5.5z' })\n  );\n};\nAvPlaylistAddCheck = (0, _pure2.default)(AvPlaylistAddCheck);\nAvPlaylistAddCheck.displayName = 'AvPlaylistAddCheck';\nAvPlaylistAddCheck.muiName = 'SvgIcon';\n\nexports.default = AvPlaylistAddCheck;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/av/playlist-add-check.js\n// module id = 634\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ContentRemove = function ContentRemove(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M19 13H5v-2h14v2z' })\n  );\n};\nContentRemove = (0, _pure2.default)(ContentRemove);\nContentRemove.displayName = 'ContentRemove';\nContentRemove.muiName = 'SvgIcon';\n\nexports.default = ContentRemove;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/content/remove.js\n// module id = 635\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar EditorAttachMoney = function EditorAttachMoney(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M11.8 10.9c-2.27-.59-3-1.2-3-2.15 0-1.09 1.01-1.85 2.7-1.85 1.78 0 2.44.85 2.5 2.1h2.21c-.07-1.72-1.12-3.3-3.21-3.81V3h-3v2.16c-1.94.42-3.5 1.68-3.5 3.61 0 2.31 1.91 3.46 4.7 4.13 2.5.6 3 1.48 3 2.41 0 .69-.49 1.79-2.7 1.79-2.06 0-2.87-.92-2.98-2.1h-2.2c.12 2.19 1.76 3.42 3.68 3.83V21h3v-2.15c1.95-.37 3.5-1.5 3.5-3.55 0-2.84-2.43-3.81-4.7-4.4z' })\n  );\n};\nEditorAttachMoney = (0, _pure2.default)(EditorAttachMoney);\nEditorAttachMoney.displayName = 'EditorAttachMoney';\nEditorAttachMoney.muiName = 'SvgIcon';\n\nexports.default = EditorAttachMoney;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/editor/attach-money.js\n// module id = 636\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MapsMap = function MapsMap(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M20.5 3l-.16.03L15 5.1 9 3 3.36 4.9c-.21.07-.36.25-.36.48V20.5c0 .28.22.5.5.5l.16-.03L9 18.9l6 2.1 5.64-1.9c.21-.07.36-.25.36-.48V3.5c0-.28-.22-.5-.5-.5zM15 19l-6-2.11V5l6 2.11V19z' })\n  );\n};\nMapsMap = (0, _pure2.default)(MapsMap);\nMapsMap.displayName = 'MapsMap';\nMapsMap.muiName = 'SvgIcon';\n\nexports.default = MapsMap;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/maps/map.js\n// module id = 637\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar NavigationArrowDownward = function NavigationArrowDownward(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z' })\n  );\n};\nNavigationArrowDownward = (0, _pure2.default)(NavigationArrowDownward);\nNavigationArrowDownward.displayName = 'NavigationArrowDownward';\nNavigationArrowDownward.muiName = 'SvgIcon';\n\nexports.default = NavigationArrowDownward;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/navigation/arrow-downward.js\n// module id = 638\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar NavigationArrowUpward = function NavigationArrowUpward(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z' })\n  );\n};\nNavigationArrowUpward = (0, _pure2.default)(NavigationArrowUpward);\nNavigationArrowUpward.displayName = 'NavigationArrowUpward';\nNavigationArrowUpward.muiName = 'SvgIcon';\n\nexports.default = NavigationArrowUpward;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/navigation/arrow-upward.js\n// module id = 639\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _defineProperty2 = require(\"babel-runtime/helpers/defineProperty\");\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _flowRight2 = require(\"lodash/flowRight\");\n\nvar _flowRight3 = _interopRequireDefault(_flowRight2);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _createReactClass = require(\"create-react-class\");\n\nvar _createReactClass2 = _interopRequireDefault(_createReactClass);\n\nvar _constants = require(\"../constants\");\n\nvar _enhanceElement = require(\"../enhanceElement\");\n\nvar _enhanceElement2 = _interopRequireDefault(_enhanceElement);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* global google */\nvar controlledPropTypes = {\n  // NOTICE!!!!!!\n  //\n  // Only expose those with getters & setters in the table as controlled props.\n  //\n  // [].map.call($0.querySelectorAll(\"tr>td>code\", function(it){ return it.textContent; })\n  //    .filter(function(it){ return it.match(/^set/) && !it.match(/^setMap/); })\n  //\n  // https://developers.google.com/maps/documentation/javascript/3.exp/reference#DrawingManager\n  drawingMode: _propTypes2.default.any,\n  options: _propTypes2.default.object\n};\n\nvar defaultUncontrolledPropTypes = (0, _enhanceElement.addDefaultPrefixToPropTypes)(controlledPropTypes);\n\nvar eventMap = {\n  // https://developers.google.com/maps/documentation/javascript/3.exp/reference#DrawingManager\n  // [].map.call($0.querySelectorAll(\"tr>td>code\"), function(it){ return it.textContent; })\n  onCircleComplete: \"circlecomplete\",\n\n  onMarkerComplete: \"markercomplete\",\n\n  onOverlayComplete: \"overlaycomplete\",\n\n  onPolygonComplete: \"polygoncomplete\",\n\n  onPolylineComplete: \"polylinecomplete\",\n\n  onRectangleComplete: \"rectanglecomplete\"\n};\n\nvar publicMethodMap = {\n  // Public APIs\n  //\n  // https://developers.google.com/maps/documentation/javascript/3.exp/reference#DrawingManager\n  //\n  // [].map.call($0.querySelectorAll(\"tr>td>code\"), function(it){ return it.textContent; })\n  //    .filter(function(it){ return it.match(/^get/) && !it.match(/Map$/); })\n  getDrawingMode: function getDrawingMode(drawingManager) {\n    return drawingManager.getDrawingMode();\n  }\n};\n\nvar controlledPropUpdaterMap = {\n  drawingMode: function drawingMode(drawingManager, _drawingMode) {\n    drawingManager.setDrawingMode(_drawingMode);\n  },\n  options: function options(drawingManager, _options) {\n    drawingManager.setOptions(_options);\n  }\n};\n\nfunction getInstanceFromComponent(component) {\n  return component.state[_constants.DRAWING_MANAGER];\n}\n\nexports.default = (0, _flowRight3.default)(_createReactClass2.default, (0, _enhanceElement2.default)(getInstanceFromComponent, publicMethodMap, eventMap, controlledPropUpdaterMap))({\n  displayName: \"DrawingManager\",\n\n  propTypes: (0, _extends3.default)({}, controlledPropTypes, defaultUncontrolledPropTypes),\n\n  contextTypes: (0, _defineProperty3.default)({}, _constants.MAP, _propTypes2.default.object),\n\n  getInitialState: function getInitialState() {\n    // https://developers.google.com/maps/documentation/javascript/3.exp/reference#DrawingManager\n    var drawingManager = new google.maps.drawing.DrawingManager((0, _extends3.default)({\n      map: this.context[_constants.MAP]\n    }, (0, _enhanceElement.collectUncontrolledAndControlledProps)(defaultUncontrolledPropTypes, controlledPropTypes, this.props)));\n    return (0, _defineProperty3.default)({}, _constants.DRAWING_MANAGER, drawingManager);\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    var drawingManager = getInstanceFromComponent(this);\n    if (drawingManager) {\n      drawingManager.setMap(null);\n    }\n  },\n  render: function render() {\n    return false;\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-google-maps/lib/drawing/DrawingManager.js\n// module id = 795\n// module chunks = 0","import {hashHistory} from 'react-router'\r\nimport {userIsAuth} from '../permissions'\r\nimport {getToken} from '../helpers/storage'\r\nimport * as ROUTES from '../constants/routes'\r\nimport App from '../containers/App'\r\nimport SignIn from '../containers/SignIn'\r\nimport {ShopList} from '../containers/Shop'\r\nimport {CashboxList} from '../containers/Cashbox'\r\nimport {TransactionList} from '../containers/Transaction'\r\nimport {ClientTransactionList} from '../containers/ClientTransaction'\r\nimport {SupplyList} from '../containers/Supply'\r\nimport {OrderList} from '../containers/Order'\r\nimport {ProductList} from '../containers/Product'\r\nimport {ProductTypeList} from '../containers/ProductType'\r\nimport {ProductPriceList} from '../containers/ProductPrice'\r\nimport {StockList} from '../containers/Stock'\r\nimport {CurrencyList} from '../containers/Currency'\r\nimport {BrandList} from '../containers/Brand'\r\nimport {MeasurementList} from '../containers/Measurement'\r\nimport {ExpensiveCategoryList} from '../containers/ExpensiveCategory'\r\nimport {UsersList} from '../containers/Users'\r\nimport {ProviderList} from '../containers/Provider'\r\nimport {ClientList} from '../containers/Client'\r\nimport {ManufactureList} from '../containers/Manufacture'\r\nimport {PendingExpensesList} from '../containers/PendingExpenses'\r\nimport {StatStock} from '../containers/StatStock'\r\nimport {StatDebtors} from '../containers/StatDebtors'\r\nimport {StatManufacture} from '../containers/StatManufacture'\r\nimport {StatCashbox} from '../containers/StatCashbox'\r\nimport {PendingPaymentsList} from '../containers/PendingPayments'\r\nimport {EquipmentList} from '../containers/Equipment'\r\nimport {ShiftList} from '../containers/Shift'\r\nimport {Zones} from '../containers/Zones'\r\nimport {Tracking} from '../containers/Tracking'\r\nimport {MarketTypeList} from '../containers/MarketType'\r\nimport {PricesList} from '../containers/Prices'\r\nimport {PriceList} from '../containers/Price'\r\nimport NotFound from '../containers/NotFound'\r\nimport {RemainderList} from '../containers/Remainder'\r\nimport {\r\n    StatisticsList,\r\n    StatAgentList,\r\n    StatProductList\r\n        } from '../containers/Statistics'\r\nimport {StockReceiveList} from '../containers/StockReceive'\r\n\r\nexport default {\r\n    path: '/',\r\n    component: App,\r\n    indexRoute: {\r\n        component: userIsAuth(StatStock)\r\n    },\r\n    childRoutes: [\r\n        {\r\n            path: ROUTES.SIGN_IN_URL,\r\n            component: SignIn,\r\n            onEnter: () => {\r\n                if (getToken()) {\r\n                    hashHistory.push(ROUTES.DASHBOARD_URL)\r\n                }\r\n            }\r\n        },\r\n\r\n        // Shop\r\n        {\r\n            path: ROUTES.SHOP_LIST_URL,\r\n            component: userIsAuth(ShopList),\r\n            childRoutes: [\r\n                {\r\n                    path: ROUTES.SHOP_ITEM_URL,\r\n                    component: userIsAuth(ShopList)\r\n                },\r\n\r\n                {\r\n                    path: ROUTES.SHOP_ITEM_TAB_URL,\r\n                    component: userIsAuth(ShopList)\r\n                }\r\n            ]\r\n        },\r\n        // Users\r\n        {\r\n            path: ROUTES.USERS_LIST_URL,\r\n            component: userIsAuth(UsersList),\r\n            childRoutes: [\r\n                {\r\n                    path: ROUTES.USERS_ITEM_URL,\r\n                    component: userIsAuth(UsersList)\r\n                }\r\n            ]\r\n        },\r\n        // Cashbox\r\n        {\r\n            path: ROUTES.CASHBOX_LIST_URL,\r\n            component: userIsAuth(CashboxList),\r\n            childRoutes: [\r\n                {\r\n                    path: ROUTES.CASHBOX_ITEM_URL,\r\n                    component: userIsAuth(CashboxList)\r\n                }\r\n            ]\r\n        },\r\n        // Transactoin\r\n        {\r\n            path: ROUTES.TRANSACTION_LIST_URL,\r\n            component: userIsAuth(TransactionList),\r\n            childRoutes: [\r\n                {\r\n                    path: ROUTES.TRANSACTION_ITEM_URL,\r\n                    component: userIsAuth(TransactionList)\r\n                }\r\n            ]\r\n        },\r\n        // Client Transactoin\r\n        {\r\n            path: ROUTES.CLIENT_TRANSACTION_LIST_URL,\r\n            component: userIsAuth(ClientTransactionList),\r\n            childRoutes: [\r\n                {\r\n                    path: ROUTES.CLIENT_TRANSACTION_ITEM_URL,\r\n                    component: userIsAuth(ClientTransactionList)\r\n                }\r\n            ]\r\n        },\r\n        // Supply\r\n        {\r\n            path: ROUTES.SUPPLY_LIST_URL,\r\n            component: userIsAuth(SupplyList),\r\n            childRoutes: [\r\n                {\r\n                    path: ROUTES.SUPPLY_ITEM_URL,\r\n                    component: userIsAuth(SupplyList)\r\n                }\r\n            ]\r\n        },\r\n        // Prices\r\n        {\r\n            path: ROUTES.PRICES_LIST_URL,\r\n            component: userIsAuth(PricesList),\r\n            childRoutes: [\r\n                {\r\n                    path: ROUTES.PRICES_ITEM_URL,\r\n                    component: userIsAuth(PricesList)\r\n                }\r\n            ]\r\n        },\r\n        // PRICE\r\n        {\r\n            path: ROUTES.PRICE_LIST_URL,\r\n            component: userIsAuth(PriceList),\r\n            childRoutes: [\r\n                {\r\n                    path: ROUTES.PRICE_ITEM_URL,\r\n                    component: userIsAuth(PriceList)\r\n                }\r\n            ]\r\n        },\r\n        // Order\r\n        {\r\n            path: ROUTES.ORDER_LIST_URL,\r\n            component: userIsAuth(OrderList),\r\n            childRoutes: [\r\n                {\r\n                    path: ROUTES.ORDER_ITEM_URL,\r\n                    component: userIsAuth(OrderList)\r\n                }\r\n            ]\r\n        },\r\n        // Product\r\n        {\r\n            path: ROUTES.PRODUCT_LIST_URL,\r\n            component: userIsAuth(ProductList),\r\n            childRoutes: [\r\n                {\r\n                    path: ROUTES.PRODUCT_ITEM_URL,\r\n                    component: userIsAuth(ProductList)\r\n                }\r\n            ]\r\n        },\r\n        // Product Type\r\n        {\r\n            path: ROUTES.PRODUCT_TYPE_LIST_URL,\r\n            component: userIsAuth(ProductTypeList),\r\n            childRoutes: [\r\n                {\r\n                    path: ROUTES.PRODUCT_TYPE_ITEM_URL,\r\n                    component: userIsAuth(ProductTypeList)\r\n                }\r\n            ]\r\n        },\r\n        // Product Price\r\n        {\r\n            path: ROUTES.PRODUCT_PRICE_LIST_URL,\r\n            component: userIsAuth(ProductPriceList),\r\n            childRoutes: [\r\n                {\r\n                    path: ROUTES.PRODUCT_PRICE_ITEM_URL,\r\n                    component: userIsAuth(ProductPriceList)\r\n                }\r\n            ]\r\n        },\r\n        // Equipment\r\n        {\r\n            path: ROUTES.EQUIPMENT_LIST_URL,\r\n            component: userIsAuth(EquipmentList),\r\n            childRoutes: [\r\n                {\r\n                    path: ROUTES.EQUIPMENT_ITEM_URL,\r\n                    component: userIsAuth(EquipmentList)\r\n                }\r\n            ]\r\n        },\r\n        // Stock\r\n        {\r\n            path: ROUTES.STOCK_LIST_URL,\r\n            component: userIsAuth(StockList),\r\n            childRoutes: [\r\n                {\r\n                    path: ROUTES.STOCK_ITEM_URL,\r\n                    component: userIsAuth(StockList)\r\n                }\r\n            ]\r\n        },\r\n        // Currency\r\n        {\r\n            path: ROUTES.CURRENCY_LIST_URL,\r\n            component: userIsAuth(CurrencyList),\r\n            childRoutes: [\r\n                {\r\n                    path: ROUTES.CURRENCY_ITEM_URL,\r\n                    component: userIsAuth(CurrencyList)\r\n                }\r\n            ]\r\n        },\r\n        // Measurement\r\n        {\r\n            path: ROUTES.MEASUREMENT_LIST_URL,\r\n            component: userIsAuth(MeasurementList),\r\n            childRoutes: [\r\n                {\r\n                    path: ROUTES.MEASUREMENT_ITEM_URL,\r\n                    component: userIsAuth(MeasurementList)\r\n                }\r\n            ]\r\n        },\r\n        // ExpensiveCategory\r\n        {\r\n            path: ROUTES.EXPENSIVE_CATEGORY_LIST_URL,\r\n            component: userIsAuth(ExpensiveCategoryList),\r\n            childRoutes: [\r\n                {\r\n                    path: ROUTES.EXPENSIVE_CATEGORY_ITEM_URL,\r\n                    component: userIsAuth(ExpensiveCategoryList)\r\n                }\r\n            ]\r\n        },\r\n        // Provider\r\n        {\r\n            path: ROUTES.PROVIDER_LIST_URL,\r\n            component: userIsAuth(ProviderList),\r\n            childRoutes: [\r\n                {\r\n                    path: ROUTES.PROVIDER_ITEM_URL,\r\n                    component: userIsAuth(ProviderList)\r\n                }\r\n            ]\r\n        },\r\n        // Client\r\n        {\r\n            path: ROUTES.CLIENT_LIST_URL,\r\n            component: userIsAuth(ClientList),\r\n            childRoutes: [\r\n                {\r\n                    path: ROUTES.CLIENT_ITEM_URL,\r\n                    component: userIsAuth(ClientList)\r\n                }\r\n            ]\r\n        },\r\n        // Brand\r\n        {\r\n            path: ROUTES.BRAND_LIST_URL,\r\n            component: userIsAuth(BrandList),\r\n            childRoutes: [\r\n                {\r\n                    path: ROUTES.BRAND_ITEM_URL,\r\n                    component: userIsAuth(BrandList)\r\n                }\r\n            ]\r\n        },\r\n        // Shift\r\n        {\r\n            path: ROUTES.SHIFT_LIST_URL,\r\n            component: userIsAuth(ShiftList),\r\n            childRoutes: [\r\n                {\r\n                    path: ROUTES.SHIFT_ITEM_URL,\r\n                    component: userIsAuth(ShiftList)\r\n                }\r\n            ]\r\n        },\r\n        // Manufacture\r\n        {\r\n            path: ROUTES.MANUFACTURE_LIST_URL,\r\n            component: userIsAuth(ManufactureList),\r\n            childRoutes: [\r\n                {\r\n                    path: ROUTES.MANUFACTURE_ITEM_URL,\r\n                    component: userIsAuth(ManufactureList)\r\n                }\r\n            ]\r\n        },\r\n        // Pending Expenses\r\n        {\r\n            path: ROUTES.PENDING_EXPENSES_LIST_URL,\r\n            component: userIsAuth(PendingExpensesList),\r\n            childRoutes: [{\r\n                path: ROUTES.PENDING_EXPENSES_ITEM_URL,\r\n                component: userIsAuth(PendingExpensesList)\r\n            }]\r\n        },\r\n\r\n        // Pending Payments\r\n        {\r\n            path: ROUTES.PENDING_PAYMENTS_LIST_URL,\r\n            component: userIsAuth(PendingPaymentsList),\r\n            childRoutes: [{\r\n                path: ROUTES.PENDING_PAYMENTS_ITEM_URL,\r\n                component: userIsAuth(PendingPaymentsList)\r\n            }]\r\n        },\r\n        // METRICA (Stat Stock)\r\n        {\r\n            path: ROUTES.STATSTOCK_LIST_URL,\r\n            component: userIsAuth(StatStock),\r\n            childRoutes: [{\r\n                path: ROUTES.STATSTOCK_ITEM_URL,\r\n                component: userIsAuth(StatStock)\r\n            }]\r\n        },\r\n        // METRICA (Stat Debtors)\r\n        {\r\n            path: ROUTES.STATDEBTORS_LIST_URL,\r\n            component: userIsAuth(StatDebtors),\r\n            childRoutes: [{\r\n                path: ROUTES.STATDEBTORS_ITEM_URL,\r\n                component: userIsAuth(StatDebtors)\r\n            }]\r\n        },\r\n        // METRICA (Stat Manufacture)\r\n        {\r\n            path: ROUTES.STAT_MANUFACTURE_LIST_URL,\r\n            component: userIsAuth(StatManufacture),\r\n            childRoutes: [{\r\n                path: ROUTES.STAT_MANUFACTURE_ITEM_URL,\r\n                component: userIsAuth(StatManufacture)\r\n            }]\r\n        },\r\n        // METRICA (Stat Cashbox)\r\n        {\r\n            path: ROUTES.STAT_CASHBOX_LIST_URL,\r\n            component: userIsAuth(StatCashbox),\r\n            childRoutes: [{\r\n                path: ROUTES.STAT_CASHBOX_ITEM_URL,\r\n                component: userIsAuth(StatCashbox)\r\n            }]\r\n        },\r\n        // ZONES\r\n        {\r\n            path: ROUTES.ZONES_LIST_URL,\r\n            component: userIsAuth(Zones),\r\n            childRoutes: [{\r\n                path: ROUTES.ZONES_ITEM_URL,\r\n                component: userIsAuth(Zones)\r\n            }]\r\n        },\r\n        // TRACKING\r\n        {\r\n            path: ROUTES.TRACKING_LIST_URL,\r\n            component: userIsAuth(Tracking),\r\n            childRoutes: [{\r\n                path: ROUTES.TRACKING_LIST_URL,\r\n                component: userIsAuth(Tracking)\r\n            }]\r\n        },\r\n        // MARKET TYPE\r\n        {\r\n            path: ROUTES.MARKET_TYPE_LIST_URL,\r\n            component: userIsAuth(MarketTypeList),\r\n            childRoutes: [\r\n                {\r\n                    path: ROUTES.MARKET_TYPE_ITEM_URL,\r\n                    component: userIsAuth(MarketTypeList)\r\n                }\r\n            ]\r\n        },\r\n        // Price\r\n        {\r\n            path: ROUTES.PRICES_LIST_URL,\r\n            component: userIsAuth(PricesList),\r\n            childRoutes: [\r\n                {\r\n                    path: ROUTES.PRICES_ITEM_URL,\r\n                    component: userIsAuth(PricesList)\r\n                }\r\n            ]\r\n        },\r\n        // Remainder\r\n        {\r\n            path: ROUTES.REMAINDER_LIST_URL,\r\n            component: userIsAuth(RemainderList),\r\n            childRoutes: [\r\n                {\r\n                    path: ROUTES.REMAINDER_ITEM_URL,\r\n                    component: userIsAuth(RemainderList)\r\n                }\r\n            ]\r\n        },\r\n        // Statistics\r\n        {\r\n            path: ROUTES.STATISTICS_LIST_URL,\r\n            component: userIsAuth(StatisticsList),\r\n            childRoutes: [\r\n            ]\r\n        },\r\n        // Statistics/agent\r\n        {\r\n            path: ROUTES.STATISTICS_AGENT_URL,\r\n            component: userIsAuth(StatAgentList),\r\n            childRoutes: [\r\n            ]\r\n        },\r\n        // Statistics/product\r\n        {\r\n            path: ROUTES.STATISTICS_PRODUCT_URL,\r\n            component: userIsAuth(StatProductList),\r\n            childRoutes: []\r\n        },\r\n        // Stock Receive Transfer\r\n        {\r\n            path: ROUTES.STOCK_RECEIVE_LIST_URL,\r\n            component: userIsAuth(StockReceiveList),\r\n            childRoutes: [\r\n                {\r\n                    path: ROUTES.STOCK_RECEIVE_ITEM_URL,\r\n                    component: userIsAuth(StockReceiveList)\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            path: '*',\r\n            component: NotFound\r\n        }\r\n    ]\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/routes/index.js","import {createStore, applyMiddleware} from 'redux'\nimport {routerMiddleware} from 'react-router-redux'\nimport thunkMiddleware from 'redux-thunk'\nimport promiseMiddleware from 'redux-promise-middleware'\nimport {hashHistory} from 'react-router'\nimport rootReducer from '../reducers'\n\nexport default (initialState) => {\n    const middleware = [\n        promiseMiddleware(),\n        thunkMiddleware,\n        routerMiddleware(hashHistory)\n    ]\n\n    if (process.env.NODE_ENV === 'development') {\n        const createLogger = require('redux-logger')\n        middleware.push(createLogger())\n    }\n\n    return createStore(rootReducer, initialState, applyMiddleware(...middleware))\n}\n\n\n\n// WEBPACK FOOTER //\n// src/store/createStore.js","import './custom.css'\n\n\n\n// WEBPACK FOOTER //\n// src/styles/index.js","'use strict';\n\nexports.__esModule = true;\n\nvar _rxjs = require('rxjs');\n\nvar _rxjs2 = _interopRequireDefault(_rxjs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar config = {\n  fromESObservable: _rxjs2.default.Observable.from\n};\n\nexports.default = config;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/recompose/rxjsObservableConfig.js\n// module id = 876\n// module chunks = 0","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/brandSerializer'\r\n\r\nexport const brandCreateAction = (formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .post(API.BRAND_CREATE, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.BRAND_CREATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const brandDeleteAction = (id) => {\r\n    const payload = axios()\r\n        .delete(sprintf(API.BRAND_DELETE, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n    return {\r\n        type: actionTypes.BRAND_DELETE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const brandUpdateAction = (id, formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .put(sprintf(API.BRAND_ITEM, id), requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.BRAND_UPDATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const brandListFetchAction = (filter) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams())\r\n    const payload = axios()\r\n        .get(API.BRAND_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.BRAND_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const brandItemFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.BRAND_ITEM, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.BRAND_ITEM,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/brand.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/clientTransactionSerializer'\r\n\r\nexport const clientTransactionCreateIncomeAction = (formValues, clientId) => {\r\n    const requestData = serializers.createIncomeSerializer(formValues, clientId)\r\n    const payload = axios()\r\n        .post(API.CLIENT_TRANSACTION_CREATE, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.CLIENT_TRANSACTION_INCOME,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const clientTransactionCreateExpenseAction = (formValues, clientId) => {\r\n    const requestData = serializers.createExpenseSerializer(formValues, clientId)\r\n    const payload = axios()\r\n        .post(API.CLIENT_TRANSACTION_CREATE, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.CLIENT_TRANSACTION_EXPENSE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const clientTransactionCreateSendAction = () => {\r\n    const payload = axios()\r\n        .post(API.CLIENT_TRANSACTION_SEND)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.CLIENT_TRANSACTION_SEND,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const clientTransactionDeleteAction = (id) => {\r\n    const payload = axios()\r\n        .delete(sprintf(API.CLIENT_TRANSACTION_DELETE, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.CLIENT_TRANSACTION_DELETE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const clientTransactionListFetchAction = (filter, clientId) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams(), clientId)\r\n    const payload = axios()\r\n        .get(API.CLIENT_TRANSACTION_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.CLIENT_TRANSACTION_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/clientTransaction.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/currencySerializer'\r\n\r\nexport const currencyCreateAction = (formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .post(API.CURRENCY_CREATE, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.CURRENCY_CREATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const currencyDeleteAction = (id) => {\r\n    const payload = axios()\r\n        .delete(sprintf(API.CURRENCY_DELETE, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.CURRENCY_DELETE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const currencyUpdateAction = (id, formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .put(sprintf(API.CURRENCY_ITEM, id), requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.CURRENCY_UPDATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const currencyListFetchAction = (filter) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams())\r\n    const payload = axios()\r\n        .get(API.CURRENCY_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n    return {\r\n        type: actionTypes.CURRENCY_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const currencyItemFetchAction = (filter, id) => {\r\n    const params = serializers.itemSerializer(filter.getParams(), id)\r\n    const payload = axios()\r\n        .get(API.CURRENCY_RATE, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.CURRENCY_ITEM,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const currencyPrimaryFetchAction = () => {\r\n    const payload = axios()\r\n        .get(API.CURRENCY_PRIMARY)\r\n        .then((response) => {\r\n            return response\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.CURRENCY_PRIMARY,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const currencyPrimaryCreateAction = (formValues) => {\r\n    const requestData = serializers.createPrimarySerializer(formValues)\r\n    const payload = axios()\r\n        .post(sprintf(API.CURRENCY_PRIMARY_CREATE), requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.CURRENCY_PRIMARY_UPDATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const setCurrencyCreateAction = (formValues, currency) => {\r\n    const requestData = serializers.setCurrencySerializer(formValues, currency)\r\n    const payload = axios()\r\n        .post(sprintf(API.SET_CURRENCY_CREATE), requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.SET_CURRENCY_UPDATE,\r\n        payload\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/currency.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/expensiveCategorySerializer'\r\n\r\nexport const expensiveCategoryCreateAction = (formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .post(API.EXPENSIVE_CATEGORY_CREATE, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.EXPENSIVE_CATEGORY_CREATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const expensiveCategoryDeleteAction = (id) => {\r\n    const payload = axios()\r\n        .delete(sprintf(API.EXPENSIVE_CATEGORY_DELETE, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.EXPENSIVE_CATEGORY_DELETE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const expensiveCategoryUpdateAction = (id, formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .put(sprintf(API.EXPENSIVE_CATEGORY_ITEM, id), requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.EXPENSIVE_CATEGORY_UPDATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const expensiveCategoryListFetchAction = (filter) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams())\r\n    const payload = axios()\r\n        .get(API.EXPENSIVE_CATEGORY_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.EXPENSIVE_CATEGORY_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const expensiveCategoryItemFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.EXPENSIVE_CATEGORY_ITEM, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.EXPENSIVE_CATEGORY_ITEM,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/expensiveCategory.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/ingredientSerializer'\r\n\r\nexport const ingredientCreateAction = (formValues, id) => {\r\n    const requestData = serializers.createSerializer(formValues, id)\r\n    const payload = axios()\r\n        .post(API.INGREDIENT_CREATE, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.INGREDIENT_CREATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const ingredientDeleteAction = (id) => {\r\n    const payload = axios()\r\n        .delete(sprintf(API.INGREDIENT_DELETE, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n    return {\r\n        type: actionTypes.INGREDIENT_DELETE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const ingredientUpdateAction = (formValues, id, productId) => {\r\n    const requestData = serializers.createSerializer(formValues, productId)\r\n    const payload = axios()\r\n        .put(sprintf(API.INGREDIENT_ITEM, id), requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.INGREDIENT_UPDATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const ingredientListFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.INGREDIENT_LIST, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.INGREDIENT_LIST,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/ingredient.js","import _ from 'lodash'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\n\r\nexport const manufactureListFetchAction = () => {\r\n    const payload = axios()\r\n        .get(API.MANUFACTURE_LIST)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.MANUFACTURE_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/manufacture.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/manufactureProductSerializer'\r\n\r\nexport const manufactureProductCreateAction = (formValues, manufactureId) => {\r\n    const requestData = serializers.createSerializer(formValues, manufactureId)\r\n    const payload = axios()\r\n        .post(API.MANUFACTURE_PRODUCT_CREATE, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.MANUFACTURE_PRODUCT_CREATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const manufactureProductDeleteAction = (id) => {\r\n    const payload = axios()\r\n        .delete(sprintf(API.MANUFACTURE_PRODUCT_DELETE, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.MANUFACTURE_PRODUCT_DELETE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const productChangeManufacture = (id, formValues) => {\r\n    const requestData = serializers.changeManufacture(formValues)\r\n    const payload = axios()\r\n        .post(sprintf(API.MANUFACTURE_PRODUCT_CHANGE, id), requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.MANUFACTURE_PRODUCT_CHANGE,\r\n        payload\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/manufactureProduct.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/measurementSerializer'\r\n\r\nexport const measurementCreateAction = (formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .post(API.MEASUREMENT_CREATE, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.MEASUREMENT_CREATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const measurementDeleteAction = (id) => {\r\n    const payload = axios()\r\n        .delete(sprintf(API.MEASUREMENT_DELETE, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.MEASUREMENT_DELETE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const measurementUpdateAction = (id, formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .put(sprintf(API.MEASUREMENT_ITEM, id), requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.MEASUREMENT_UPDATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const measurementListFetchAction = (filter) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams())\r\n    const payload = axios()\r\n        .get(API.MEASUREMENT_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.MEASUREMENT_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const measurementItemFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.MEASUREMENT_ITEM, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.MEASUREMENT_ITEM,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/measurement.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/pendingExpensesSerializer'\r\n\r\nexport const pendingExpensesUpdateAction = (id, formValues) => {\r\n    const requestData = serializers.createSerializer(formValues, id)\r\n    const payload = axios()\r\n        .post(API.PENDING_EXPENSES_UPDATE, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PENDING_EXPENSES_UPDATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const pendingExpensesListFetchAction = (filter) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams())\r\n    const payload = axios()\r\n        .get(API.PENDING_EXPENSES_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PENDING_EXPENSES_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const pendingExpensesItemFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.PENDING_EXPENSES_ITEM, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PENDING_EXPENSES_ITEM,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/pendingExpenses.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/pendingPaymentsSerializer'\r\n\r\nexport const pendingPaymentsUpdateAction = (formValues, order) => {\r\n    const requestData = serializers.createSerializer(formValues, order)\r\n    const payload = axios()\r\n        .post(API.PENDING_PAYMENTS_CREATE, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PENDING_PAYMENTS_CREATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const pendingPaymentsListFetchAction = (filter) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams())\r\n    const payload = axios()\r\n        .get(API.PENDING_PAYMENTS_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PENDING_PAYMENTS_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const pendingPaymentsItemFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.PENDING_PAYMENTS_ITEM, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PENDING_PAYMENTS_ITEM,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/pendingPayments.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/priceSerializer'\r\nexport const priceCreateAction = (formValues, productId) => {\r\n    const requestData = serializers.createSerializer(formValues, productId)\r\n    const payload = axios()\r\n        .post(API.PRICE_LIST_ITEM_ADD, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n    return {\r\n        type: actionTypes.PRICE_CREATE,\r\n        payload\r\n    }\r\n}\r\nexport const priceListFetchAction = (filter, manufacture) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams(), manufacture)\r\n    const payload = axios()\r\n        .get(API.PRICE_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n    return {\r\n        type: actionTypes.PRICE_LIST,\r\n        payload\r\n    }\r\n}\r\nexport const priceListItemHistoryAction = (id) => {\r\n    const payload = axios()\r\n        .post(sprintf(API.PRICE_LIST_ITEM_HISTORY), id)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n    return {\r\n        type: actionTypes.PRICE_LIST_ITEM_HISTORY,\r\n        payload\r\n    }\r\n}\r\nexport const priceItemFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.PRICE_ITEM, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n    return {\r\n        type: actionTypes.PRICE_ITEM,\r\n        payload\r\n    }\r\n}\r\nexport const getPriceItemsAction = (id) => {\r\n    const params = {\r\n        'product': id\r\n    }\r\n    const payload = axios()\r\n        .get(API.PRICE_LIST_ITEM_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n    return {\r\n        type: actionTypes.PRICE_LIST_ITEM_LIST,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/price.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/pricesSerializer'\r\n\r\nexport const pricesCreateAction = (formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n\r\n    const payload = axios()\r\n        .post(API.PRICES_CREATE, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PRICES_CREATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const pricesDeleteAction = (id) => {\r\n    const payload = axios()\r\n        .delete(sprintf(API.PRICES_DELETE, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PRICES_DELETE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const pricesUpdateAction = (id, formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .put(sprintf(API.PRICES_ITEM, id), requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PRICES_UPDATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const pricesListFetchAction = (filter) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams())\r\n    const payload = axios()\r\n        .get(API.PRICES_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PRICES_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const pricesCSVFetchAction = (filter) => {\r\n    const params = serializers.csvFilterSerializer(filter.getParams())\r\n    const payload = axios()\r\n        .get(API.PRICES_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PRICES_LIST_CSV,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const pricesItemFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.PRICES_ITEM, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PRICES_ITEM,\r\n        payload: payload\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/prices.js","import _ from 'lodash'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\n\nexport const getConfig = () => {\n    const payload = axios()\n        .post(API.CONFIG)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.CONFIG,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/primeryCurrency.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/Product/productPriceSerializer'\r\n\r\nexport const productPriceCreateAction = (formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .post(API.PRODUCT_PRICE_CREATE, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PRODUCT_PRICE_CREATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const productPriceDeleteAction = (id) => {\r\n    const payload = axios()\r\n        .delete(sprintf(API.PRODUCT_PRICE_DELETE, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PRODUCT_PRICE_DELETE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const productPriceUpdateAction = (id, formValues) => {\r\n    const requestData = serializers.createSerializer(formValues, id)\r\n    const payload = axios()\r\n        .post(sprintf(API.PRODUCT_PRICE_SET, id), requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PRODUCT_PRICE_UPDATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const productPriceListFetchAction = (filter) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams())\r\n    const payload = axios()\r\n        .get(API.PRODUCT_PRICE_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PRODUCT_PRICE_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const productPriceItemFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.PRODUCT_PRICE_ITEM, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PRODUCT_PRICE_ITEM,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/productPrice.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/Product/productTypeSerializer'\r\n\r\nexport const productTypeCreateAction = (formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .post(API.PRODUCT_TYPE_CREATE, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PRODUCT_TYPE_CREATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const productTypeDeleteAction = (id) => {\r\n    const payload = axios()\r\n        .delete(sprintf(API.PRODUCT_TYPE_DELETE, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n    return {\r\n        type: actionTypes.PRODUCT_TYPE_DELETE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const productTypeUpdateAction = (id, formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .put(sprintf(API.PRODUCT_TYPE_ITEM, id), requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PRODUCT_TYPE_UPDATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const productTypeListFetchAction = (filter) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams())\r\n    const payload = axios()\r\n        .get(API.PRODUCT_TYPE_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PRODUCT_TYPE_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const productTypeItemFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.PRODUCT_TYPE_ITEM, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PRODUCT_TYPE_ITEM,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/productType.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/providerSerializer'\r\n\r\nexport const providerCreateAction = (formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .post(API.PROVIDER_CREATE, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PROVIDER_CREATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const providerDeleteAction = (id) => {\r\n    const payload = axios()\r\n        .delete(sprintf(API.PROVIDER_DELETE, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PROVIDER_DELETE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const providerUpdateAction = (id, formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .put(sprintf(API.PROVIDER_ITEM, id), requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PROVIDER_UPDATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const providerListFetchAction = (filter) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams())\r\n    const payload = axios()\r\n        .get(API.PROVIDER_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PROVIDER_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const providerItemFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.PROVIDER_ITEM, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.PROVIDER_ITEM,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/provider.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/remainderSerializer'\r\n\r\nexport const remainderListFetchAction = (filter, id) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams(), id)\r\n    const payload = axios()\r\n        .get((API.REMAINDER_LIST), {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.REMAINDER_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const remainderItemFetchAction = (id, filter) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams(), id)\r\n    const payload = axios()\r\n        .get(sprintf(API.REMAINDER_ITEM, id), {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.REMAINDER_ITEM,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/remainder.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/remainderStockSerializer'\n\nexport const remainderStockCreateAction = (formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .post(API.REMAINDER_STOCK_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.REMAINDER_STOCK_CREATE,\n        payload\n    }\n}\n\nexport const remainderStockDeleteAction = (id) => {\n    const payload = axios()\n        .delete(sprintf(API.REMAINDER_STOCK_DELETE, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.REMAINDER_STOCK_DELETE,\n        payload\n    }\n}\n\nexport const remainderStockUpdateAction = (id, formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .put(sprintf(API.REMAINDER_STOCK_ITEM, id), requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.REMAINDER_STOCK_UPDATE,\n        payload\n    }\n}\n\nexport const remainderStockListFetchAction = (filter, id) => {\n    const params = serializers.listFilterSerializer(filter.getParams(), id)\n    const payload = axios()\n        .get((API.REMAINDER_STOCK_LIST), {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.REMAINDER_STOCK_LIST,\n        payload\n    }\n}\n\nexport const remainderStockCSVFetchAction = (filter) => {\n    const params = serializers.csvFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(API.REMAINDER_STOCK_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.REMAINDER_STOCK_LIST_CSV,\n        payload\n    }\n}\n\nexport const remainderStockItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.REMAINDER_STOCK_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.REMAINDER_STOCK_ITEM,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/remainderStock.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/shiftSerializer'\r\n\r\nexport const shiftCreateAction = (formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .post(API.SHIFT_CREATE, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.SHIFT_CREATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const shiftDeleteAction = (id) => {\r\n    const payload = axios()\r\n        .delete(sprintf(API.SHIFT_DELETE, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.SHIFT_DELETE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const shiftUpdateAction = (id, formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .put(sprintf(API.SHIFT_ITEM, id), requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.SHIFT_UPDATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const shiftListFetchAction = (filter, manufactureId) => {\r\n    const params = serializers.listFilterSerializer(filter.getParam(), manufactureId)\r\n    const payload = axios()\r\n        .get(API.SHIFT_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.SHIFT_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const shiftItemFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.SHIFT_ITEM, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.SHIFT_ITEM,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/shift.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/shipmentSerializer'\r\n\r\nexport const shipmentListFetchAction = (filter, manufacture) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams(), manufacture)\r\n    const payload = axios()\r\n        .get(API.SHIPMENT_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.SHIPMENT_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const shipmentItemFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.SHIPMENT_ITEM, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.SHIPMENT_ITEM,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/shipment.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/shopSerializer'\r\nexport const shopCreateAction = (formValues, location) => {\r\n    const requestData = serializers.createSerializer(formValues, location)\r\n    const payload = axios()\r\n        .post(API.SHOP_CREATE, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n    return {\r\n        type: actionTypes.SHOP_CREATE,\r\n        payload\r\n    }\r\n}\r\nexport const imageCreateAction = (image, id) => {\r\n    const requestData = serializers.imageSerializer(image, id)\r\n    const payload = axios()\r\n        .post(sprintf(API.SHOP_ITEM_ADD_IMAGE, id), requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n    return {\r\n        type: actionTypes.SHOP_ITEM_ADD_IMAGE,\r\n        payload\r\n    }\r\n}\r\nexport const shopDeleteAction = (id) => {\r\n    const payload = axios()\r\n        .delete(sprintf(API.SHOP_DELETE, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n    return {\r\n        type: actionTypes.SHOP_DELETE,\r\n        payload\r\n    }\r\n}\r\nexport const shopUpdateAction = (id, formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .put(sprintf(API.SHOP_ITEM, id), requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n    return {\r\n        type: actionTypes.SHOP_UPDATE,\r\n        payload\r\n    }\r\n}\r\nexport const shopListFetchAction = (filter) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams())\r\n    const payload = axios()\r\n        .get(API.SHOP_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n    return {\r\n        type: actionTypes.SHOP_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const shopItemFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.SHOP_ITEM, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n    return {\r\n        type: actionTypes.SHOP_ITEM,\r\n        payload\r\n    }\r\n}\r\nexport const slideShowFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.SHOP_ITEM_SHOW_IMAGE, id), {params: {'thumbnail_type': 'large'}})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n    return {\r\n        type: actionTypes.SHOP_ITEM_SHOW_IMAGE,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/shop.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/Statistics/statAgentSerializer'\r\n\r\nexport const statAgentListFetchAction = (filter, id) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams(), id)\r\n    const payload = axios()\r\n        .get((API.STATISTICS_LIST), {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.STAT_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const statAgentItemFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.STATISTICS_ITEM, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.STATISTICS_ITEM,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/statAgent.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/statCashboxSerializer'\r\n\r\nexport const statCashboxListFetchAction = (filter) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams())\r\n    const payload = axios()\r\n        .get(API.STAT_CASHBOX_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.STAT_CASHBOX_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const statCashboxItemFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.STAT_CASHBOX_ITEM, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.STAT_CASHBOX_ITEM,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/statCashbox.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/statDebtorsSerializer'\r\nimport fileDownload from 'react-file-download'\r\n\r\nexport const statDebtorsListFetchAction = (filter) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams())\r\n    const payload = axios()\r\n        .get(API.STATDEBTORS_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.STATDEBTORS_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const statDebtorsOrderListFetchAction = (id) => {\r\n    const params = serializers.orderListFilterSerializer(id)\r\n    const payload = axios()\r\n        .get(API.STATDEBTORS_ORDER_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.STATDEBTORS_ORDER_LIST,\r\n        payload\r\n\r\n    }\r\n}\r\nexport const statDebtorsSumFetchAction = () => {\r\n    const payload = axios()\r\n        .get(API.STATDEBTORS_SUM)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.STATDEBTORS_SUM,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const getDocumentAction = (filter) => {\r\n    const params = serializers.csvFilterSerializer(filter.getParams())\r\n    const payload = axios()\r\n        .get(sprintf(API.STATDEBTORS_GET_DOCUMENT), {params})\r\n        .then((response) => {\r\n            fileDownload(response.data, 'договор.xls')\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.STATDEBTORS_GET_DOCUMENT,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/statDebtors.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/statManufactureSerializer'\r\n\r\nexport const statManufactureListFetchAction = (filter) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams())\r\n    const payload = axios()\r\n        .get(API.STAT_MANUFACTURE_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.STAT_MANUFACTURE_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const statManufactureItemFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.STAT_MANUFACTURE_ITEM, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.STAT_MANUFACTURE_ITEM,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/statManufacture.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/Statistics/statProductSerializer'\r\n\r\nexport const statProductListFetchAction = (filter, id) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams(), id)\r\n    const payload = axios()\r\n        .get((API.STATISTICS_LIST), {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.STAT_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const statProductItemFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.STATISTICS_ITEM, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.STATISTICS_ITEM,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/statProduct.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/statStockSerializer'\r\nimport fileDownload from 'react-file-download'\r\n\r\nexport const statStockListFetchAction = (filter) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams())\r\n    const payload = axios()\r\n        .get(API.STATSTOCK_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.STATSTOCK_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const statStockDataFetchAction = (id) => {\r\n    const params = (id) ? {stock: id} : {}\r\n    const payload = axios()\r\n        .post(API.STATSTOCK_DATA, params)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.STATSTOCK_DATA,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const getDocumentAction = (filter) => {\r\n    const params = serializers.csvFilterSerializer(filter.getParams())\r\n    const payload = axios()\r\n        .get(sprintf(API.STATSTOCK_GET_DOCUMENT), {params})\r\n        .then((response) => {\r\n            fileDownload(response.data, 'договор.xls')\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.STATSTOCK_GET_DOCUMENT,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/statStock.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/Statistics/statisticsSerializer'\r\n\r\nexport const statisticsListFetchAction = (filter, id) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams(), id)\r\n    const payload = axios()\r\n        .get((API.STATISTICS_LIST), {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.STATISTICS_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const statisticsItemFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.STATISTICS_ITEM, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.STATISTICS_ITEM,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/statistics.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/stockSerializer'\r\n\r\nexport const stockCreateAction = (formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .post(API.STOCK_CREATE, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.STOCK_CREATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const stockDeleteAction = (id) => {\r\n    const payload = axios()\r\n        .delete(sprintf(API.STOCK_DELETE, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.STOCK_DELETE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const stockUpdateAction = (id, formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .put(sprintf(API.STOCK_ITEM, id), requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n    return {\r\n        type: actionTypes.STOCK_UPDATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const stockListFetchAction = (filter) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams())\r\n    const payload = axios()\r\n        .get(API.STOCK_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.STOCK_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const stockItemFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.STOCK_ITEM, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.STOCK_ITEM,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/stock.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/stockReceiveSerializer'\r\n\r\nexport const stockReceiveCreateAction = (formValues, supplyId, productId) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .post(sprintf(API.STOCK_RECEIVE_CREATE, supplyId, productId), requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.STOCK_RECEIVE_CREATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const stockReceiveBarcodeFetchAction = (supplyId, productId) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.STOCK_BARCODE_LIST, supplyId, productId))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.STOCK_BARCODE_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const stockReceiveListFetchAction = (filter) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams())\r\n    const payload = axios()\r\n        .get((API.STOCK_RECEIVE_LIST), {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.STOCK_RECEIVE_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const stockReceiveItemFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.STOCK_RECEIVE_ITEM, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.STOCK_RECEIVE_ITEM,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const stockHistoryListFetchAction = (filter) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams())\r\n    const payload = axios()\r\n        .get((API.STOCK_HISTORY_LIST), {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.STOCK_HISTORY_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const stockTransferListFetchAction = (filter) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams())\r\n    const payload = axios()\r\n        .get((API.STOCK_TRANSFER_LIST), {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.STOCK_TRANSFER_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const stockTransferItemFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.STOCK_TRANSFER_ITEM, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.STOCK_TRANSFER_ITEM,\r\n        payload\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/stockReceive.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/Supply/supplySerializer'\r\n\r\nexport const supplyCreateAction = (formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n\r\n    const payload = axios()\r\n        .post(API.SUPPLY_CREATE, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.SUPPLY_CREATE,\r\n        payload\r\n    }\r\n}\r\nexport const supplyDefectAction = (supplyId, productId) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.SUPPLY_DEFECT, supplyId, productId))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.SUPPLY_DEFECT,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const supplyDeleteAction = (id) => {\r\n    const payload = axios()\r\n        .post(API.SUPPLY_DELETE, {pk: id})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.SUPPLY_DELETE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const supplyUpdateAction = (id, formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .put(sprintf(API.SUPPLY_ITEM, id), requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.SUPPLY_UPDATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const supplyListFetchAction = (filter) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams())\r\n    const payload = axios()\r\n        .get(API.SUPPLY_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.SUPPLY_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const supplyItemFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.SUPPLY_ITEM, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.SUPPLY_ITEM,\r\n        payload\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/supply.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/Supply/supplyExpenseSerializer'\r\n\r\nexport const supplyExpenseCreateAction = (formValues, id) => {\r\n    const requestData = serializers.createSerializer(formValues, id)\r\n    const payload = axios()\r\n        .post(API.SUPPLY_EXPENSE_CREATE, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.SUPPLY_EXPENSE_CREATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const supplyExpenseDeleteAction = (id) => {\r\n    const payload = axios()\r\n        .delete(sprintf(API.SUPPLY_EXPENSE_DELETE, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.SUPPLY_EXPENSE_DELETE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const supplyExpenseListFetchAction = (supplyId) => {\r\n    const params = serializers.expenseSupplySerializer(supplyId)\r\n    const payload = axios()\r\n        .get(API.SUPPLY_EXPENSE_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.SUPPLY_EXPENSE_LIST,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/supplyExpense.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/Transaction/transactionSerializer'\r\n\r\nexport const transactionCreateIncomeAction = (formValues, cashboxId) => {\r\n    const requestData = serializers.createIncomeSerializer(formValues, cashboxId)\r\n    const payload = axios()\r\n        .post(API.TRANSACTION_CREATE, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.TRANSACTION_INCOME,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const transactionCreateExpenseAction = (formValues, cashboxId) => {\r\n    const requestData = serializers.createExpenseSerializer(formValues, cashboxId)\r\n    const payload = axios()\r\n        .post(API.TRANSACTION_CREATE, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.TRANSACTION_EXPENSE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const transactionCreateSendAction = (formValues, cashboxId) => {\r\n    const requestData = serializers.createSendSerializer(formValues, cashboxId)\r\n    const payload = axios()\r\n        .post(API.TRANSACTION_SEND, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.TRANSACTION_SEND,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const transactionDeleteAction = (id) => {\r\n    const payload = axios()\r\n        .delete(sprintf(API.TRANSACTION_DELETE, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.TRANSACTION_DELETE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const transactionUpdateExpenseAction = (id, formValues, cashboxId) => {\r\n    const requestData = serializers.createExpenseSerializer(formValues, cashboxId)\r\n    const payload = axios()\r\n        .put(sprintf(API.TRANSACTION_ITEM, id), requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.TRANSACTION_UPDATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const transactionUpdateIncomeAction = (id, formValues, cashboxId) => {\r\n    const requestData = serializers.createIncomeSerializer(formValues, cashboxId)\r\n    const payload = axios()\r\n        .put(sprintf(API.TRANSACTION_ITEM, id), requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.TRANSACTION_UPDATE_INCOME,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const transactionListFetchAction = (filter, cashboxId) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams(), cashboxId)\r\n    const payload = axios()\r\n        .get(API.TRANSACTION_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.TRANSACTION_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const transactionItemFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.TRANSACTION_ITEM, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.TRANSACTION_ITEM,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/transaction.js","import _ from 'lodash'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/Transaction/transactionStockSerializer'\r\n\r\nexport const transactionStockListFetchAction = (filter, id) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams(), id)\r\n    const payload = axios()\r\n        .get(API.TRANSACTION_STOCK_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.TRANSACTION_STOCK_LIST,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/transactionStock.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/Users/userShiftSerializer'\r\n\r\nexport const userShiftCreateAction = (formValues, manufacture) => {\r\n    const requestData = serializers.createSerializer(formValues, manufacture)\r\n    const payload = axios()\r\n        .post(API.USER_SHIFT_CREATE, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.USER_SHIFT_CREATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const userShiftDeleteAction = (id) => {\r\n    const payload = axios()\r\n        .delete(sprintf(API.USER_SHIFT_DELETE, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.USER_SHIFT_DELETE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const userShiftUpdateAction = (id, formValues, manufacture) => {\r\n    const requestData = serializers.createSerializer(formValues, manufacture)\r\n    const payload = axios()\r\n        .put(sprintf(API.USER_SHIFT_ITEM, id), requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.USER_SHIFT_UPDATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const userShiftListFetchAction = (data, manufactureId) => {\r\n    const params = serializers.listFilterSerializer(data, manufactureId)\r\n    const payload = axios()\r\n        .get(API.USER_SHIFT_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.USER_SHIFT_LIST,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/userShift.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport axios from '../helpers/axios'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/Users/usersSerializer'\r\n\r\nexport const usersCreateAction = (formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .post(API.USERS_CREATE, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.USERS_CREATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const usersDeleteAction = (id) => {\r\n    const payload = axios()\r\n        .delete(sprintf(API.USERS_DELETE, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.USERS_DELETE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const usersUpdateAction = (id, formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .put(sprintf(API.USERS_ITEM, id), requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.USERS_UPDATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const usersListFetchAction = (filter) => {\r\n    const params = serializers.listFilterSerializer(filter.getParams())\r\n    const payload = axios()\r\n        .get(API.USERS_LIST, {params})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.USERS_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const usersItemFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.USERS_ITEM, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.USERS_ITEM,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/users.js","import _ from 'lodash'\r\nimport axios from '../helpers/axios'\r\nimport sprintf from 'sprintf'\r\nimport * as API from '../constants/api'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport * as serializers from '../serializers/zoneSerializer'\r\n\r\nexport const zoneCreateAction = (formValues) => {\r\n    const requestData = serializers.createSerializer(formValues)\r\n    const payload = axios()\r\n        .post(API.ZONE_CREATE, requestData)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n\r\n    return {\r\n        type: actionTypes.ZONE_CREATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const zoneListFetchAction = () => {\r\n    const payload = axios()\r\n        .get(API.ZONE_LIST)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n    return {\r\n        type: actionTypes.ZONE_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const zoneItemFetchAction = (id) => {\r\n    const payload = axios()\r\n        .get(sprintf(API.ZONE_ITEM, id))\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n    return {\r\n        type: actionTypes.ZONE_ITEM,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const zoneListSearchFetchAction = (search) => {\r\n    const payload = axios()\r\n        .get(API.ZONE_LIST, {params: {'search': search}})\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n    return {\r\n        type: actionTypes.ZONE_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const zoneStatisticsFetchAction = () => {\r\n    const payload = axios()\r\n        .get(API.ZONE_STAT)\r\n        .then((response) => {\r\n            return _.get(response, 'data')\r\n        })\r\n        .catch((error) => {\r\n            return Promise.reject(_.get(error, ['response', 'data']))\r\n        })\r\n    return {\r\n        type: actionTypes.ZONE_STAT,\r\n        payload\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/actions/zones.js","import React from 'react'\nimport SvgIcon from 'material-ui/SvgIcon'\n\nconst AddPlace = (props) => {\n    return (\n        <SvgIcon {...props} fill=\"#000000\" height=\"24\" viewBox=\"-255.4 385.6 24 23.5\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M-243.3,395.8c1.5,0,2.7-1.2,2.7-2.7c0-1.5-1.2-2.7-2.7-2.7c-1.5,0-2.7,1.2-2.7,2.7C-246,394.6-244.8,395.8-243.3,395.8z M-243.3,391.1c1.1,0,2,0.9,2,2c0,1.1-0.9,2-2,2s-2-0.9-2-2C-245.2,392-244.4,391.1-243.3,391.1z\"/>\n            <path d=\"M-235.7,400.2h-2.8l1.2-1.7c2.3-3,1.9-8-0.7-10.6c-1.4-1.4-3.3-2.2-5.3-2.2c-2,0-3.9,0.8-5.3,2.2c-2.6,2.6-3,7.6-0.7,10.6 l1.2,1.7h-2.9l-4.3,9h24L-235.7,400.2z M-248.7,398c-2-2.7-1.7-7.2,0.6-9.6c1.3-1.3,3-2,4.8-2s3.5,0.7,4.8,2 c2.4,2.4,2.7,6.8,0.6,9.6l-5.4,7.8l-3.9-5.6l0,0L-248.7,398z M-250.6,400.9h3l4.3,6.2l4.3-6.2h2.9l3.6,7.5h-21.5L-250.6,400.9z\"/>\n        </SvgIcon>\n\n    )\n}\n\nexport default AddPlace\n\n\n\n// WEBPACK FOOTER //\n// src/components/AddPlace/AddPlace.js","import AddPlace from './AddPlace'\n\nexport default AddPlace\n\n\n\n// WEBPACK FOOTER //\n// src/components/AddPlace/index.js","import React from 'react'\nimport SvgIcon from 'material-ui/SvgIcon'\n\nconst CloseIcon = (props) => {\n    return (\n        <SvgIcon {...props} fill=\"#000000\" height=\"16\" viewBox=\"0 0 24 24\" width=\"16\"\n                 xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n            <path\n                d=\"M20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zm0 14H4v-6h16v6zm0-10H4V6h16v2z\"/>\n        </SvgIcon>\n    )\n}\n\nexport default CloseIcon\n\n\n\n// WEBPACK FOOTER //\n// src/components/BankPayment/BankPayment.js","import BankPayment from './BankPayment'\n\nexport default BankPayment\n\n\n\n// WEBPACK FOOTER //\n// src/components/BankPayment/index.js","import _ from 'lodash'\r\nimport moment from 'moment'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport injectSheet from 'react-jss'\r\nimport {compose} from 'recompose'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\r\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\r\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\r\nimport ContentAdd from 'material-ui/svg-icons/content/add'\r\nimport Edit from 'material-ui/svg-icons/image/edit'\r\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\r\nimport IconMenu from 'material-ui/IconMenu'\r\nimport MenuItem from 'material-ui/MenuItem'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport GridList from '../GridList'\r\nimport Container from '../Container'\r\nimport BrandCreateDialog from './BrandCreateDialog'\r\nimport ConfirmDialog from '../ConfirmDialog'\r\nimport SubMenu from '../SubMenu'\r\nimport Tooltip from '../ToolTip'\r\n\r\nconst listHeader = [\r\n    {\r\n        sorting: true,\r\n        name: 'id',\r\n        xs: 2,\r\n        title: 'Id'\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'name',\r\n        xs: 5,\r\n        title: 'Наименование'\r\n    },\r\n    {\r\n        sorting: true,\r\n        xs: 4,\r\n        name: 'created_date',\r\n        title: 'Дата создания'\r\n    },\r\n    {\r\n        sorting: true,\r\n        xs: 1,\r\n        name: 'actions',\r\n        title: ''\r\n    }\r\n\r\n]\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        addButton: {\r\n            '& button': {\r\n                backgroundColor: '#275482 !important'\r\n            }\r\n        },\r\n        addButtonWrapper: {\r\n            position: 'absolute',\r\n            top: '10px',\r\n            right: '0',\r\n            marginBottom: '0px'\r\n        },\r\n        marginLeft: {\r\n            marginLeft: '20px !important'\r\n        },\r\n        right: {\r\n            textAlign: 'right'\r\n        }\r\n    })\r\n)\r\n\r\nconst BrandGridList = enhance((props) => {\r\n    const {\r\n        filter,\r\n        createDialog,\r\n        updateDialog,\r\n        actionsDialog,\r\n        confirmDialog,\r\n        listData,\r\n        detailData,\r\n        classes\r\n    } = props\r\n\r\n    const actions = (\r\n        <div>\r\n            <IconButton onTouchTap={actionsDialog.handleActionEdit}>\r\n                <ModEditorIcon />\r\n            </IconButton>\r\n\r\n            <IconButton onTouchTap={actionsDialog.handleActionDelete}>\r\n                <DeleteIcon />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n\r\n    const brandDetail = (\r\n        <span>a</span>\r\n    )\r\n\r\n    const brandList = _.map(_.get(listData, 'data'), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const name = _.get(item, 'name')\r\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\r\n        const iconButton = (\r\n            <IconButton style={{padding: '0 12px'}}>\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n        )\r\n        return (\r\n            <Row key={id}>\r\n                <Col xs={2}>{id}</Col>\r\n                <Col xs={5}>{name}</Col>\r\n                <Col xs={4}>{createdDate}</Col>\r\n                <Col xs={1} className={classes.right}>\r\n                    <IconMenu\r\n                        iconButtonElement={iconButton}\r\n                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\r\n                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\r\n                        <MenuItem\r\n                            primaryText=\"Изменить\"\r\n                            leftIcon={<Edit />}\r\n                            onTouchTap={() => { updateDialog.handleOpenUpdateDialog(id) }}\r\n                        />\r\n                        <MenuItem\r\n                            primaryText=\"Удалить \"\r\n                            leftIcon={<DeleteIcon />}\r\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(id) }}\r\n                        />\r\n                    </IconMenu>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    })\r\n\r\n    const list = {\r\n        header: listHeader,\r\n        list: brandList,\r\n        loading: _.get(listData, 'listLoading')\r\n    }\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.BRAND_LIST_URL}/>\r\n            <div className={classes.addButtonWrapper}>\r\n                <Tooltip position=\"left\" text=\"Добавить бренд\">\r\n                    <FloatingActionButton\r\n                        mini={true}\r\n                        className={classes.addButton}\r\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\r\n                        <ContentAdd />\r\n                    </FloatingActionButton>\r\n                </Tooltip>\r\n            </div>\r\n            <GridList\r\n                filter={filter}\r\n                list={list}\r\n                detail={brandDetail}\r\n                actionsDialog={actions}\r\n            />\r\n\r\n            <BrandCreateDialog\r\n                open={createDialog.openCreateDialog}\r\n                loading={createDialog.createLoading}\r\n                onClose={createDialog.handleCloseCreateDialog}\r\n                onSubmit={createDialog.handleSubmitCreateDialog}\r\n            />\r\n\r\n            <BrandCreateDialog\r\n                isUpdate={true}\r\n                initialValues={updateDialog.initialValues}\r\n                open={updateDialog.openUpdateDialog}\r\n                loading={updateDialog.updateLoading}\r\n                onClose={updateDialog.handleCloseUpdateDialog}\r\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\r\n            />\r\n\r\n            {detailData.data && <ConfirmDialog\r\n                type=\"delete\"\r\n                message={_.get(detailData, ['data', 'name'])}\r\n                loading={confirmDialog.confirmLoading}\r\n                onClose={confirmDialog.handleCloseConfirmDialog}\r\n                onSubmit={confirmDialog.handleSendConfirmDialog}\r\n                open={confirmDialog.openConfirmDialog}\r\n            />}\r\n        </Container>\r\n    )\r\n})\r\n\r\nBrandGridList.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object,\r\n    createDialog: PropTypes.shape({\r\n        createLoading: PropTypes.bool.isRequired,\r\n        openCreateDialog: PropTypes.bool.isRequired,\r\n        handleOpenCreateDialog: PropTypes.func.isRequired,\r\n        handleCloseCreateDialog: PropTypes.func.isRequired,\r\n        handleSubmitCreateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    confirmDialog: PropTypes.shape({\r\n        confirmLoading: PropTypes.bool.isRequired,\r\n        openConfirmDialog: PropTypes.bool.isRequired,\r\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\r\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\r\n        handleSendConfirmDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    updateDialog: PropTypes.shape({\r\n        updateLoading: PropTypes.bool.isRequired,\r\n        openUpdateDialog: PropTypes.bool.isRequired,\r\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\r\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\r\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    actionsDialog: PropTypes.shape({\r\n        handleActionEdit: PropTypes.func.isRequired,\r\n        handleActionDelete: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default BrandGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Brand/BrandGridList.js","import BrandGridList from './BrandGridList'\nimport {BRAND_CREATE_DIALOG_OPEN} from './BrandCreateDialog'\n\nconst BRAND_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nconst BRAND_DELETE_DIALOG_OPEN = 'openDeleteDialog'\n\nexport {\n    BRAND_UPDATE_DIALOG_OPEN,\n    BRAND_CREATE_DIALOG_OPEN,\n    BRAND_DELETE_DIALOG_OPEN,\n    BrandGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Brand/index.js","import React from 'react'\nimport SvgIcon from 'material-ui/SvgIcon'\n\nconst CloseIcon = (props) => {\n    return (\n        <SvgIcon {...props} fill=\"#000000\" height=\"18\" viewBox=\"0 0 24 24\" width=\"18\"\n                 xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M15 4c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z\"/>\n            <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n            <path d=\"M3 12c0-2.61 1.67-4.83 4-5.65V4.26C3.55 5.15 1 8.27 1 12s2.55 6.85 6 7.74v-2.09c-2.33-.82-4-3.04-4-5.65z\"/>\n        </SvgIcon>\n    )\n}\n\nexport default CloseIcon\n\n\n\n// WEBPACK FOOTER //\n// src/components/CashPayment/CashPayment.js","import CashPayment from './CashPayment'\n\nexport default CashPayment\n\n\n\n// WEBPACK FOOTER //\n// src/components/CashPayment/index.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\r\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\r\nimport IconMenu from 'material-ui/IconMenu'\r\nimport MenuItem from 'material-ui/MenuItem'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport GridList from '../GridList'\r\nimport Container from '../Container'\r\nimport CashboxCreateDialog from './CashboxCreateDialog'\r\nimport ConfirmDialog from '../ConfirmDialog'\r\nimport SubMenu from '../SubMenu'\r\nimport injectSheet from 'react-jss'\r\nimport {compose} from 'recompose'\r\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\r\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\r\nimport Edit from 'material-ui/svg-icons/image/edit'\r\nimport ContentAdd from 'material-ui/svg-icons/content/add'\r\nimport Tooltip from '../ToolTip'\r\n\r\nconst listHeader = [\r\n    {\r\n        sorting: true,\r\n        name: 'id',\r\n        title: 'Id',\r\n        xs: 2\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'name',\r\n        title: 'Name',\r\n        xs: 2\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'currency',\r\n        title: 'Валюта',\r\n        xs: 2\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'cashier',\r\n        title: 'Кассир',\r\n        xs: 2\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'type',\r\n        title: 'Тип',\r\n        xs: 2\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: '',\r\n        title: '',\r\n        xs: 2\r\n    }\r\n]\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        addButton: {\r\n            '& button': {\r\n                backgroundColor: '#275482 !important'\r\n            }\r\n        },\r\n        addButtonWrapper: {\r\n            position: 'absolute',\r\n            top: '10px',\r\n            right: '0',\r\n            marginBottom: '0px'\r\n        }\r\n    }),\r\n)\r\n\r\nconst CashboxGridList = enhance((props) => {\r\n    const {\r\n        filter,\r\n        createDialog,\r\n        updateDialog,\r\n        actionsDialog,\r\n        confirmDialog,\r\n        listData,\r\n        detailData,\r\n        classes\r\n    } = props\r\n\r\n    const actions = (\r\n        <div>\r\n            <IconButton onTouchTap={actionsDialog.handleActionEdit}>\r\n                <ModEditorIcon />\r\n            </IconButton>\r\n\r\n            <IconButton onTouchTap={actionsDialog.handleActionDelete}>\r\n                <DeleteIcon />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n\r\n    const cashboxDetail = (\r\n        <span>a</span>\r\n    )\r\n    const bank = 1\r\n    const cashboxList = _.map(_.get(listData, 'data'), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const name = _.get(item, 'name')\r\n        const currency = _.get(item, ['currency', 'name']) || 'N/A'\r\n        const cashier = _.get(item, ['cashier', 'firstName']) + ' ' + _.get(item, ['cashier', 'secondName'])\r\n        const type = _.toInteger(_.get(item, 'type')) === bank ? 'банковский счет' : 'наличный'\r\n        const iconButton = (\r\n            <IconButton style={{padding: '0 12px'}}>\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n        )\r\n        return (\r\n            <Row key={id}>\r\n                <Col xs={2}>{id}</Col>\r\n                <Col xs={2}>{name}</Col>\r\n                <Col xs={2}>{currency}</Col>\r\n                <Col xs={2}>{cashier}</Col>\r\n                <Col xs={2}>{type}</Col>\r\n                <Col xs={2} style={{textAlign: 'right'}}>\r\n                    <IconMenu\r\n                        iconButtonElement={iconButton}\r\n                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\r\n                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\r\n                        <MenuItem\r\n                            primaryText=\"Изменить\"\r\n                            leftIcon={<Edit />}\r\n                            onTouchTap={() => { updateDialog.handleOpenUpdateDialog(id) }}\r\n                        />\r\n                        <MenuItem\r\n                            primaryText=\"Удалить \"\r\n                            leftIcon={<DeleteIcon />}\r\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(id) }}\r\n                        />\r\n                    </IconMenu>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    })\r\n\r\n    const list = {\r\n        header: listHeader,\r\n        list: cashboxList,\r\n        loading: _.get(listData, 'listLoading')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.CASHBOX_LIST_URL}/>\r\n\r\n            <div className={classes.addButtonWrapper}>\r\n                <Tooltip position=\"left\" text=\"Добавить кассу\">\r\n                    <FloatingActionButton\r\n                        mini={true}\r\n                        className={classes.addButton}\r\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\r\n                        <ContentAdd />\r\n                    </FloatingActionButton>\r\n                </Tooltip>\r\n            </div>\r\n            <GridList\r\n                filter={filter}\r\n                list={list}\r\n                detail={cashboxDetail}\r\n                actionsDialog={actions}\r\n            />\r\n\r\n            <CashboxCreateDialog\r\n                open={createDialog.openCreateDialog}\r\n                loading={createDialog.createLoading}\r\n                onClose={createDialog.handleCloseCreateDialog}\r\n                onSubmit={createDialog.handleSubmitCreateDialog}\r\n            />\r\n\r\n            <CashboxCreateDialog\r\n                initialValues={updateDialog.initialValues}\r\n                isUpdate={true}\r\n                open={updateDialog.openUpdateDialog}\r\n                loading={updateDialog.updateLoading}\r\n                onClose={updateDialog.handleCloseUpdateDialog}\r\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\r\n            />\r\n\r\n            {detailData.data && <ConfirmDialog\r\n                type=\"delete\"\r\n                message={_.get(detailData, ['data', 'name'])}\r\n                loading={confirmDialog.confirmLoading}\r\n                onClose={confirmDialog.handleCloseConfirmDialog}\r\n                onSubmit={confirmDialog.handleSendConfirmDialog}\r\n                open={confirmDialog.openConfirmDialog}\r\n            />}\r\n        </Container>\r\n    )\r\n})\r\n\r\nCashboxGridList.propTypes = {\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object,\r\n    createDialog: PropTypes.shape({\r\n        createLoading: PropTypes.bool.isRequired,\r\n        openCreateDialog: PropTypes.bool.isRequired,\r\n        handleOpenCreateDialog: PropTypes.func.isRequired,\r\n        handleCloseCreateDialog: PropTypes.func.isRequired,\r\n        handleSubmitCreateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    confirmDialog: PropTypes.shape({\r\n        confirmLoading: PropTypes.bool.isRequired,\r\n        openConfirmDialog: PropTypes.bool.isRequired,\r\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\r\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\r\n        handleSendConfirmDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    updateDialog: PropTypes.shape({\r\n        updateLoading: PropTypes.bool.isRequired,\r\n        openUpdateDialog: PropTypes.bool.isRequired,\r\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\r\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\r\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    actionsDialog: PropTypes.shape({\r\n        handleActionEdit: PropTypes.func.isRequired,\r\n        handleActionDelete: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default CashboxGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Cashbox/CashboxGridList.js","import CashboxGridList from './CashboxGridList'\nimport {CASHBOX_CREATE_DIALOG_OPEN} from './CashboxCreateDialog'\nconst CASHBOX_DELETE_DIALOG_OPEN = 'openDeleteDialog'\n\nconst CASHBOX_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nexport {\n    CASHBOX_CREATE_DIALOG_OPEN,\n    CASHBOX_UPDATE_DIALOG_OPEN,\n    CASHBOX_DELETE_DIALOG_OPEN,\n    CashboxGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Cashbox/index.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport {TextField, ExpensiveCategorySearchField, CurrencySearchField} from '../ReduxForm'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport MainStyles from '../Styles/MainStyles'\r\n\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\r\n\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        latLng,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        },\r\n        nav: {\r\n            fontSize: '18px',\r\n            fontWeight: 'bold',\r\n            padding: '20px',\r\n            color: 'black',\r\n            borderBottom: '1px solid #efefef',\r\n            '& button': {\r\n                float: 'right',\r\n                marginTop: '-5px !important'\r\n            }\r\n        },\r\n        flex: {\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n        },\r\n        label: {\r\n            fontSize: '75%',\r\n            color: '#999'\r\n        },\r\n        itemList: {\r\n            marginTop: '20px'\r\n        }\r\n    })),\r\n    reduxForm({\r\n        form: 'ClientTransactionCreateForm',\r\n        enableReinitialize: true\r\n    })\r\n)\r\n\r\nconst ClientTransactionCreateDialog = enhance((props) => {\r\n    const {open, loading, handleSubmit, onClose, classes, cashboxData, isExpense} = props\r\n\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n    const cashbox = _.find(_.get(cashboxData, 'data'), {'id': _.get(cashboxData, 'cashboxId')})\r\n\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            className={classes.dialog}\r\n            contentStyle={loading ? {width: '300px'} : {width: '400px'}}\r\n            bodyClassName={classes.popUp}>\r\n            <div className={classes.titleContent}>\r\n                <span>{isExpense ? 'Расход' : 'Приход'}</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit} className={classes.form}>\r\n                    <div className={classes.inContent} style={{minHeight: '230px'}}>\r\n                        <div className={classes.loader}>\r\n                            <CircularProgress size={40} thickness={4}/>\r\n                        </div>\r\n                        <div className={classes.field}>\r\n                            <div className={classes.itemList}>\r\n                                <div className={classes.label}>Касса:</div>\r\n                                <div style={{fontWeight: '600', marginBottom: '5px'}}>{_.get(cashbox, 'name')}</div>\r\n                            </div>\r\n                            {isExpense && <Field\r\n                                name=\"categoryId\"\r\n                                component={ExpensiveCategorySearchField}\r\n                                label=\"Категория расхода\"\r\n                                className={classes.inputFieldCustom}\r\n                                fullWidth={true}/>\r\n                            }\r\n                            <div className={classes.flex} style={{alignItems: 'baseline'}}>\r\n                                <Field\r\n                                    name=\"amount\"\r\n                                    component={TextField}\r\n                                    label=\"Сумма\"\r\n                                    className={classes.inputFieldCustom}\r\n                                    style={{width: '50%'}}\r\n                                    fullWidth={false}/>\r\n                                <div style={{marginLeft: '20px'}}>\r\n                                    <Field\r\n                                        name=\"currency\"\r\n                                        component={CurrencySearchField}\r\n                                        label=\"Валюта\"\r\n                                        className={classes.inputFieldCustom}\r\n                                        style={{width: '50%'}}\r\n                                        fullWidth={false}/>\r\n                                </div>\r\n                            </div>\r\n                            <Field\r\n                                name=\"comment\"\r\n                                style={{top: '-20px', lineHeight: '20px', fontSize: '13px'}}\r\n                                component={TextField}\r\n                                label=\"Комментарий...\"\r\n                                multiLine={true}\r\n                                rows={1}\r\n                                rowsMax={3}\r\n                                fullWidth={true}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <FlatButton\r\n                            label=\"Сохранить\"\r\n                            className={classes.actionButton}\r\n                            primary={true}\r\n                            type=\"submit\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\n\r\nClientTransactionCreateDialog.propTyeps = {\r\n    isExpense: PropTypes.bool,\r\n    open: PropTypes.bool.isRequired,\r\n    cashboxData: PropTypes.object.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\nClientTransactionCreateDialog.defaultProps = {\r\n    isExpense: false\r\n}\r\n\r\nexport default ClientTransactionCreateDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ClientTransaction/ClientTransactionCreateDialog.js","import _ from 'lodash'\r\nimport moment from 'moment'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\r\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport GridList from '../GridList'\r\nimport Container from '../Container'\r\nimport ClientTransactionFilterForm from './ClientTransactionFilterForm'\r\nimport ClientTransactionCreateDialog from './ClientTransactionCreateDialog'\r\nimport ClientTransactionSendDialog from './ClientTransactionSendDialog'\r\nimport ConfirmDialog from '../ConfirmDialog'\r\nimport SubMenu from '../SubMenu'\r\nimport injectSheet from 'react-jss'\r\nimport {compose} from 'recompose'\r\nimport Paper from 'material-ui/Paper'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport numberFormat from '../../helpers/numberFormat'\r\nimport GridListNavSearch from '../GridList/GridListNavSearch'\r\n\r\nconst listHeader = [\r\n    {\r\n        sorting: true,\r\n        name: 'id',\r\n        title: 'Id',\r\n        xs: 1\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'comment',\r\n        title: 'Описание',\r\n        xs: 5\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'date',\r\n        title: 'Дата',\r\n        xs: 3\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'amount',\r\n        title: 'Сумма',\r\n        xs: 3\r\n    }\r\n]\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrap: {\r\n            display: 'flex',\r\n            margin: '0 -28px',\r\n            padding: '0 28px 0 0',\r\n            minHeight: 'calc(100% - 41px)'\r\n        },\r\n        listWrapper: {\r\n            border: '1px solid #d9dde1',\r\n            borderBottom: 'none',\r\n            height: '100%'\r\n        },\r\n        leftSide: {\r\n            flexBasis: '25%'\r\n        },\r\n        rightSide: {\r\n            flexBasis: '75%',\r\n            marginLeft: '28px'\r\n        },\r\n        list: {\r\n            borderBottom: '1px solid #efefef',\r\n            display: 'flex',\r\n            padding: '20px 30px',\r\n            margin: '0',\r\n            boxSizing: 'border-box',\r\n            cursor: 'pointer',\r\n            justifyContent: 'space-between',\r\n            position: 'relative'\r\n        },\r\n        flex: {\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n        },\r\n        outerTitle: {\r\n            extend: 'flex',\r\n            justifyContent: 'space-between',\r\n            fontWeight: '600',\r\n            paddingBottom: '10px',\r\n            paddingTop: '5px',\r\n            '& a': {\r\n                padding: '2px 10px',\r\n                border: '1px solid',\r\n                borderRadius: '2px',\r\n                marginLeft: '12px'\r\n            }\r\n        },\r\n        balance: {\r\n            textAlign: 'right',\r\n            position: 'absolute',\r\n            right: '30px'\r\n        },\r\n        btnSend: {\r\n            color: '#12aaeb !important'\r\n        },\r\n        btnAdd: {\r\n            color: '#8acb8d !important'\r\n        },\r\n        btnRemove: {\r\n            color: '#e57373 !important'\r\n        },\r\n        title: {\r\n            fontWeight: '600',\r\n            '& span': {\r\n                fontSize: '11px !important',\r\n                display: 'block',\r\n                color: '#999'\r\n            }\r\n        },\r\n        rightTitle: {\r\n            extend: 'flex',\r\n            justifyContent: 'space-between'\r\n        },\r\n        green: {\r\n            color: '#92ce95 !important'\r\n        },\r\n        red: {\r\n            color: '#e57373 !important'\r\n        }\r\n    }),\r\n)\r\n\r\nconst ClientTransactionGridList = enhance((props) => {\r\n    const {\r\n        filter,\r\n        filterClient,\r\n        createExpenseDialog,\r\n        createIncomeDialog,\r\n        updateExpenseDialog,\r\n        updateIncomeDialog,\r\n        createSendDialog,\r\n        filterDialog,\r\n        clientData,\r\n        actionsDialog,\r\n        clientListLoading,\r\n        confirmDialog,\r\n        listData,\r\n        detailData,\r\n        classes\r\n    } = props\r\n\r\n    const actions = (\r\n        <div>\r\n            <IconButton onTouchTap={actionsDialog.handleActionEdit}>\r\n                <ModEditorIcon />\r\n            </IconButton>\r\n\r\n            <IconButton onTouchTap={actionsDialog.handleActionDelete}>\r\n                <DeleteIcon />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n\r\n    const clientTransactionFilterDialog = (\r\n        <ClientTransactionFilterForm\r\n            initialValues={filterDialog.initialValues}\r\n            filter={filter}\r\n            filterDialog={filterDialog}\r\n        />\r\n    )\r\n\r\n    const clientTransactionDetail = (\r\n        <span>a</span>\r\n    )\r\n\r\n    const clientTransactionList = _.map(_.get(listData, 'data'), (item) => {\r\n        const zero = 0\r\n        const id = _.get(item, 'id')\r\n        const comment = _.get(item, 'comment')\r\n        const type = _.get(item, 'amount') || 'N/A'\r\n        const amount = numberFormat(_.get(item, 'amount')) || 'N/A'\r\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY HH:mm')\r\n        const currency = _.get(item, ['currency', 'name']) || 'N/A'\r\n\r\n        return (\r\n            <Row key={id}>\r\n                <Col xs={1}>{id}</Col>\r\n                <Col xs={5}>{comment}</Col>\r\n                <Col xs={3}>{createdDate}</Col>\r\n                <Col className={type >= zero ? classes.green : classes.red} xs={3}>{amount} {currency}</Col>\r\n            </Row>\r\n        )\r\n    })\r\n    const clientList = _.map(_.get(clientData, 'data'), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const name = _.get(item, 'name')\r\n        const isActive = _.get(detailData, 'id') === id\r\n        return (\r\n            <div key={id} className={classes.list}\r\n                 onTouchTap={() => { clientData.handleClickClient(id) }}\r\n                 style={isActive ? {backgroundColor: '#ffffff'} : {backgroundColor: '#f2f5f8'}}>\r\n                <div>\r\n                    <div className={classes.title}>{name}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    const list = {\r\n        header: listHeader,\r\n        list: clientTransactionList,\r\n        loading: _.get(listData, 'listLoading')\r\n    }\r\n    const AllClientId = 0\r\n    const selectedClient = _.find(_.get(clientData, 'data'),\r\n        (o) => {\r\n            return _.toInteger(o.id) === _.toInteger(_.get(clientData, 'cashboxId'))\r\n        })\r\n    const cashboxName = _.get(clientData, 'cashboxId') === AllClientId ? 'Общий объем' : _.get(selectedClient, 'name')\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.CLIENT_TRANSACTION_LIST_URL}/>\r\n\r\n            <div className={classes.wrap}>\r\n                <div className={classes.leftSide}>\r\n                    <div className={classes.outerTitle} style={{paddingLeft: '30px'}}>\r\n                        <div>Кассы</div>\r\n                    </div>\r\n                    <Paper zDepth={2} style={{height: '100%'}}>\r\n                        <div className={classes.listWrapper}>\r\n                            <div>\r\n                                <GridListNavSearch filter={filterClient} filterIsEmpty={false}/>\r\n                            </div>\r\n                            <div className={classes.list}\r\n                                 onClick={() => {\r\n                                     clientData.handleClickClient(AllClientId)\r\n                                 } }\r\n                                 style={_.get(clientData, 'clientId') === AllClientId ? {backgroundColor: '#ffffff'} : {backgroundColor: '#f2f5f8'}}>\r\n                                <div className={classes.title}>\r\n                                    Общий объем\r\n                                    <span>во всех классах</span>\r\n                                </div>\r\n                            </div>\r\n                            {clientListLoading\r\n                                ? <div style={{textAlign: 'center'}}>\r\n                                    <CircularProgress size={40} thickness={4}/>\r\n                                </div>\r\n                                : clientList\r\n                            }\r\n                        </div>\r\n                    </Paper>\r\n                </div>\r\n                <div className={classes.rightSide}>\r\n                    <div className={classes.rightTitle}>\r\n                        <div className={classes.outerTitle}>{cashboxName}</div>\r\n                        { _.get(clientData, 'cashboxId') !== AllClientId && <div className={classes.outerTitle}>\r\n                            <div className={classes.buttons}>\r\n                                <a onClick={createIncomeDialog.handleOpenDialog} className={classes.btnAdd}>+ Доход</a>\r\n                                <a onClick={createExpenseDialog.handleOpenDialog} className={classes.btnRemove}>-\r\n                                    Расход</a>\r\n                            </div>\r\n                        </div>}\r\n                    </div>\r\n\r\n                    <GridList\r\n                        filter={filter}\r\n                        list={list}\r\n                        detail={clientTransactionDetail}\r\n                        actionsDialog={actions}\r\n                        filterDialog={clientTransactionFilterDialog}\r\n                    />\r\n\r\n                    <ClientTransactionCreateDialog\r\n                        isExpense={true}\r\n                        clientData={clientData}\r\n                        open={createExpenseDialog.open}\r\n                        loading={createExpenseDialog.loading}\r\n                        onClose={createExpenseDialog.handleCloseDialog}\r\n                        onSubmit={createExpenseDialog.handleSubmitDialog}\r\n                    />\r\n\r\n                    <ClientTransactionCreateDialog\r\n                        clientData={clientData}\r\n                        open={createIncomeDialog.open}\r\n                        loading={createIncomeDialog.loading}\r\n                        onClose={createIncomeDialog.handleCloseDialog}\r\n                        onSubmit={createIncomeDialog.handleSubmitDialog}\r\n                    />\r\n\r\n                    <ClientTransactionCreateDialog\r\n                        initialValues={updateExpenseDialog.initialValues}\r\n                        isUpdate={true}\r\n                        isExpense={true}\r\n                        open={updateExpenseDialog.open}\r\n                        loading={updateExpenseDialog.loading}\r\n                        onClose={updateExpenseDialog.handleCloseUpdateDialog}\r\n                        onSubmit={updateExpenseDialog.handleSubmitUpdateDialog}\r\n                    />\r\n\r\n                    <ClientTransactionCreateDialog\r\n                        initialValues={updateIncomeDialog.initialValues}\r\n                        isUpdate={true}\r\n                        open={updateIncomeDialog.open}\r\n                        loading={updateIncomeDialog.loading}\r\n                        onClose={updateIncomeDialog.handleCloseUpdateDialog}\r\n                        onSubmit={updateIncomeDialog.handleSubmitUpdateDialog}\r\n                    />\r\n\r\n                    <ClientTransactionSendDialog\r\n                        clientData={clientData}\r\n                        open={createSendDialog.open}\r\n                        loading={createSendDialog.loading}\r\n                        onClose={createSendDialog.handleCloseDialog}\r\n                        onSubmit={createSendDialog.handleSubmitDialog}\r\n                    />\r\n\r\n                    {detailData.data && <ConfirmDialog\r\n                        type=\"delete\"\r\n                        message={_.get(detailData, ['data', 'comment'])}\r\n                        onClose={confirmDialog.handleCloseConfirmDialog}\r\n                        onSubmit={confirmDialog.handleExpenseConfirmDialog}\r\n                        open={confirmDialog.open}\r\n                    />}\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    )\r\n})\r\n\r\nClientTransactionGridList.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    listData: PropTypes.object,\r\n    clientData: PropTypes.object,\r\n    clientListLoading: PropTypes.bool,\r\n    detailData: PropTypes.object,\r\n    createExpenseDialog: PropTypes.shape({\r\n        loading: PropTypes.bool.isRequired,\r\n        open: PropTypes.bool.isRequired,\r\n        handleOpenDialog: PropTypes.func.isRequired,\r\n        handleCloseDialog: PropTypes.func.isRequired,\r\n        handleSubmitDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    createIncomeDialog: PropTypes.shape({\r\n        loading: PropTypes.bool.isRequired,\r\n        open: PropTypes.bool.isRequired,\r\n        handleOpenDialog: PropTypes.func.isRequired,\r\n        handleCloseDialog: PropTypes.func.isRequired,\r\n        handleSubmitDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    updateExpenseDialog: PropTypes.shape({\r\n        loading: PropTypes.bool.isRequired,\r\n        open: PropTypes.bool.isRequired,\r\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\r\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\r\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    updateIncomeDialog: PropTypes.shape({\r\n        loading: PropTypes.bool.isRequired,\r\n        open: PropTypes.bool.isRequired,\r\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\r\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\r\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    createSendDialog: PropTypes.shape({\r\n        loading: PropTypes.bool.isRequired,\r\n        open: PropTypes.bool.isRequired,\r\n        handleOpenDialog: PropTypes.func.isRequired,\r\n        handleCloseDialog: PropTypes.func.isRequired,\r\n        handleSubmitDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    confirmDialog: PropTypes.shape({\r\n        open: PropTypes.bool.isRequired,\r\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\r\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\r\n        handleExpenseConfirmDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    actionsDialog: PropTypes.shape({\r\n        handleActionEdit: PropTypes.func.isRequired,\r\n        handleActionDelete: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    filterDialog: PropTypes.shape({\r\n        initialValues: PropTypes.object,\r\n        filterLoading: PropTypes.bool,\r\n        openFilterDialog: PropTypes.bool.isRequired,\r\n        handleOpenFilterDialog: PropTypes.func.isRequired,\r\n        handleCloseFilterDialog: PropTypes.func.isRequired,\r\n        handleSubmitFilterDialog: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default ClientTransactionGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ClientTransaction/ClientTransactionGridList.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport {TextField, CashboxSearchField} from '../ReduxForm'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport MainStyles from '../Styles/MainStyles'\r\nimport normalizeNumber from '../ReduxForm/normalizers/normalizeNumber'\r\n\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\r\n\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        latLng,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        },\r\n        nav: {\r\n            fontSize: '18px',\r\n            fontWeight: 'bold',\r\n            padding: '20px',\r\n            color: 'black',\r\n            borderBottom: '1px solid #efefef',\r\n            '& button': {\r\n                float: 'right',\r\n                marginTop: '-5px !important'\r\n            }\r\n        },\r\n        flex: {\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n        },\r\n        label: {\r\n            fontSize: '75%',\r\n            color: '#999'\r\n        },\r\n        itemList: {\r\n            marginTop: '20px'\r\n        }\r\n    })),\r\n    reduxForm({\r\n        form: 'ClientTransactionCreateForm',\r\n        enableReinitialize: true\r\n    })\r\n)\r\n\r\nconst ClientTransactionSendDialog = enhance((props) => {\r\n    const {open, loading, handleSubmit, onClose, classes, cashboxData} = props\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n    const cashbox = _.find(_.get(cashboxData, 'data'), {'id': _.get(cashboxData, 'cashboxId')})\r\n\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            className={classes.dialog}\r\n            contentStyle={loading ? {width: '300px'} : {width: '400px'}}\r\n            bodyClassName={classes.popUp}>\r\n            <div className={classes.titleContent}>\r\n                <span>Перевод</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit} className={classes.form}>\r\n                    <div className={classes.inContent} style={{minHeight: '325px'}}>\r\n                        <div className={classes.loader}>\r\n                            <CircularProgress size={40} thickness={4}/>\r\n                        </div>\r\n                        <div className={classes.field}>\r\n                            <div className={classes.itemList}>\r\n                                <div className={classes.label}>Текущая касса:</div>\r\n                                <div style={{fontWeight: '600'}}>{_.get(cashbox, 'name')}</div>\r\n                            </div>\r\n                            <Field\r\n                                name=\"categoryId\"\r\n                                component={CashboxSearchField}\r\n                                label=\"Касса получатель\"\r\n                                fullWidth={true}/>\r\n                            <div className={classes.flex} style={{alignItems: 'baseline'}}>\r\n                                <Field\r\n                                    name=\"amount\"\r\n                                    component={TextField}\r\n                                    label=\"Сумма\"\r\n                                    normalize={normalizeNumber}\r\n                                    style={{width: '50%'}}\r\n                                    fullWidth={false}/>\r\n                                <div style={{marginLeft: '20px'}}>\r\n                                   {_.get(cashbox, ['currency', 'name'])}\r\n                                </div>\r\n                            </div>\r\n                            <Field\r\n                                name=\"comment\"\r\n                                style={{lineHeight: '20px', fontSize: '13px'}}\r\n                                component={TextField}\r\n                                label=\"Комментарий...\"\r\n                                multiLine={true}\r\n                                rows={1}\r\n                                rowsMax={3}\r\n                                fullWidth={true}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <FlatButton\r\n                            label=\"Отправить\"\r\n                            className={classes.actionButton}\r\n                            primary={true}\r\n                            type=\"submit\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\n\r\nClientTransactionSendDialog.propTyeps = {\r\n    open: PropTypes.bool.isRequired,\r\n    cashboxData: PropTypes.object.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default ClientTransactionSendDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ClientTransaction/ClientTransactionSendDialog.js","import ClientTransactionGridList from './ClientTransactionGridList'\nimport {CLIENT_TRANSACTION_FILTER_KEY, CLIENT_TRANSACTION_FILTER_OPEN} from './ClientTransactionFilterForm'\n\nconst CLIENT_TRANSACTION_CREATE_EXPENSE_DIALOG_OPEN = 'openCreateExpenseDialog'\nconst CLIENT_TRANSACTION_CREATE_INCOME_DIALOG_OPEN = 'openCreateIncomeDialog'\nconst CLIENT_TRANSACTION_UPDATE_EXPENSE_DIALOG_OPEN = 'openUpdateExpenseDialog'\nconst CLIENT_TRANSACTION_UPDATE_INCOME_DIALOG_OPEN = 'openUpdateIncomeDialog'\nconst CLIENT_TRANSACTION_CREATE_SEND_DIALOG_OPEN = 'openSendDialog'\nconst CLIENT_TRANSACTION_DELETE_DIALOG_OPEN = 'openDeleteDialog'\n\nexport {\n\n    CLIENT_TRANSACTION_CREATE_EXPENSE_DIALOG_OPEN,\n    CLIENT_TRANSACTION_CREATE_INCOME_DIALOG_OPEN,\n    CLIENT_TRANSACTION_UPDATE_EXPENSE_DIALOG_OPEN,\n    CLIENT_TRANSACTION_UPDATE_INCOME_DIALOG_OPEN,\n    CLIENT_TRANSACTION_CREATE_SEND_DIALOG_OPEN,\n    CLIENT_TRANSACTION_DELETE_DIALOG_OPEN,\n    CLIENT_TRANSACTION_FILTER_KEY,\n    CLIENT_TRANSACTION_FILTER_OPEN,\n    ClientTransactionGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/ClientTransaction/index.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport moment from 'moment'\r\nimport PropTypes from 'prop-types'\r\nimport {compose, withState} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport Edit from 'material-ui/svg-icons/image/edit'\r\nimport Delete from 'material-ui/svg-icons/action/delete'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport Tooltip from '../ToolTip'\r\n\r\nconst colorBlue = '#12aaeb !important'\r\nconst enhance = compose(\r\n    injectSheet({\r\n        dottedList: {\r\n            padding: '20px 0'\r\n        },\r\n        wrapper: {\r\n            color: '#333 !important',\r\n            width: '100%',\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            '& a': {\r\n                color: colorBlue\r\n            }\r\n        },\r\n        loader: {\r\n            position: 'absolute',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            width: '100%'\r\n        },\r\n        title: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            width: '100%',\r\n            height: '65px',\r\n            padding: '0 30px',\r\n            borderBottom: '1px #efefef solid'\r\n        },\r\n        container: {\r\n            display: 'flex',\r\n            width: '100%'\r\n        },\r\n        sides: {\r\n            flexBasis: '27%'\r\n        },\r\n        leftSide: {\r\n            extend: 'sides',\r\n            borderRight: '1px #efefef solid',\r\n            padding: '20px 30px'\r\n        },\r\n        rightSide: {\r\n            extend: 'sides',\r\n            borderLeft: '1px #efefef solid',\r\n            padding: '20px 30px'\r\n        },\r\n        body: {\r\n            flexBasis: '66%',\r\n            padding: '20px 30px',\r\n            '& .dottedList': {\r\n                padding: '10px 0',\r\n                '&:after': {\r\n                    left: '0.5rem',\r\n                    right: '0.5rem'\r\n                },\r\n                '&:first-child': {\r\n                    padding: '0 0 10px'\r\n                },\r\n                '&:last-child': {\r\n                    padding: '10px 0 0',\r\n                    '&:after': {\r\n                        display: 'none'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        titleLabel: {\r\n            fontSize: '18px',\r\n            color: '#333',\r\n            fontWeight: '700',\r\n            cursor: 'pointer'\r\n        },\r\n        titleButtons: {\r\n            display: 'flex',\r\n            justifyContent: 'flex-end'\r\n        },\r\n        bodyTitle: {\r\n            fontWeight: '600',\r\n            marginBottom: '10px'\r\n        }\r\n    }),\r\n    withState('openDetails', 'setOpenDetails', false)\r\n)\r\n\r\nconst iconStyle = {\r\n    icon: {\r\n        color: '#666',\r\n        width: 20,\r\n        height: 20\r\n    },\r\n    button: {\r\n        width: 48,\r\n        height: 48,\r\n        padding: 0\r\n    }\r\n}\r\n\r\nconst ClientDetails = enhance((props) => {\r\n    const {classes,\r\n        loading,\r\n        data,\r\n        updateDialog,\r\n        confirmDialog,\r\n        handleCloseDetail\r\n    } = props\r\n    const detId = _.get(data, 'id')\r\n    const contacts = _.get(data, 'contacts')\r\n    const date = moment(_.get(data, 'createdDate')).format('DD.MM.YYYY')\r\n    const address = _.get(data, 'address') || 'N/A'\r\n    const providerName = _.get(data, 'name')\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className={classes.loader}>\r\n                <div>\r\n                    <CircularProgress size={40} thickness={4}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrapper} key={detId}>\r\n            <div className={classes.title}>\r\n                <div className={classes.titleLabel}\r\n                    onClick={handleCloseDetail}>{providerName}</div>\r\n                <div className={classes.titleButtons}>\r\n                    <Tooltip position=\"bottom\" text=\"Изменить\">\r\n                        <IconButton\r\n                            iconStyle={iconStyle.icon}\r\n                            style={iconStyle.button}\r\n                            touch={true}\r\n                            onTouchTap={ () => { updateDialog.handleOpenUpdateDialog(detId) }}>\r\n                            <Edit />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip position=\"bottom\" text=\"Удалить\">\r\n                        <IconButton\r\n                            iconStyle={iconStyle.icon}\r\n                            style={iconStyle.button}\r\n                            touch={true}\r\n                            onTouchTap={confirmDialog.handleOpenConfirmDialog}>\r\n                            <Delete />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </div>\r\n            </div>\r\n            <div className={classes.container}>\r\n                <div className={classes.leftSide}>\r\n                    <div className={classes.bodyTitle}>Адрес</div>\r\n                    <div>{address}</div>\r\n                </div>\r\n                <div className={classes.body}>\r\n                    <div className={classes.bodyTitle}>Контакты</div>\r\n                    <div>\r\n                        {_.map(contacts, (item) => {\r\n                            const name = _.get(item, 'name')\r\n                            const phone = _.get(item, 'telephone')\r\n                            const email = _.get(item, 'email')\r\n                            return (\r\n                                <Row key={item.id} className=\"dottedList\">\r\n                                    <Col xs={4}>{name}</Col>\r\n                                    <Col xs={4}>{email}</Col>\r\n                                    <Col xs={4}>{phone}</Col>\r\n                                </Row>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div className={classes.rightSide}>\r\n                    <div className={classes.bodyTitle}>Дата добавления</div>\r\n                    <div>{date}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nClientDetails.propTypes = {\r\n    data: PropTypes.object.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    detailData: PropTypes.object,\r\n    updateDialog: PropTypes.shape({\r\n        updateLoading: PropTypes.bool.isRequired,\r\n        openUpdateDialog: PropTypes.bool.isRequired,\r\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\r\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\r\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    confirmDialog: PropTypes.shape({\r\n        openConfirmDialog: PropTypes.bool.isRequired,\r\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\r\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\r\n        handleSendConfirmDialog: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default ClientDetails\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Client/ClientDetails.js","import _ from 'lodash'\nimport moment from 'moment'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Row, Col} from 'react-flexbox-grid'\nimport sprintf from 'sprintf'\nimport IconButton from 'material-ui/IconButton'\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\nimport Delete from 'material-ui/svg-icons/action/delete'\nimport * as ROUTES from '../../constants/routes'\nimport GridList from '../GridList'\nimport ClientDetails from './ClientDetails'\nimport Container from '../Container'\nimport ClientCreateDialog from './ClientCreateDialog'\nimport DeleteDialog from '../DeleteDialog'\nimport ConfirmDialog from '../ConfirmDialog'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport Tooltip from '../ToolTip'\nimport {Link} from 'react-router'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'id',\n        xs: 2,\n        title: 'Id'\n    },\n    {\n        sorting: true,\n        name: 'name',\n        xs: 6,\n        title: 'Наименование'\n    },\n    {\n        sorting: true,\n        xs: 3,\n        name: 'created_date',\n        title: 'Дата создания'\n    },\n    {\n        sorting: false,\n        xs: 1,\n        name: 'actions',\n        title: ''\n    }\n]\n\nconst colorBlue = '#12aaeb !important'\nconst enhance = compose(\n    injectSheet({\n        addButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        addButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px'\n        },\n        actionBtn: {\n            height: '48px'\n        },\n        wrapper: {\n            color: '#333 !important',\n            width: '100%',\n            display: 'flex',\n            flexWrap: 'wrap',\n            '& a': {\n                color: colorBlue\n            }\n        },\n        title: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            width: '100%',\n            height: '65px',\n            padding: '0 30px',\n            borderBottom: '1px #efefef solid'\n        },\n        container: {\n            display: 'flex',\n            width: '100%'\n        },\n        sides: {\n            flexBasis: '27%'\n        },\n        leftSide: {\n            extend: 'sides',\n            borderRight: '1px #efefef solid',\n            padding: '20px 30px'\n        },\n        rightSide: {\n            extend: 'sides',\n            borderLeft: '1px #efefef solid',\n            padding: '20px 30px'\n        },\n        body: {\n            flexBasis: '66%',\n            padding: '20px 30px',\n            '& .dottedList': {\n                padding: '10px 0',\n                '&:after': {\n                    left: '0.5rem',\n                    right: '0.5rem'\n                },\n                '&:first-child': {\n                    padding: '0 0 10px'\n                },\n                '&:last-child': {\n                    padding: '10px 0 0',\n                    '&:after': {\n                        display: 'none'\n                    }\n                }\n            }\n        },\n        titleLabel: {\n            fontSize: '18px',\n            color: '#333',\n            fontWeight: '700'\n        },\n        titleButtons: {\n            display: 'flex',\n            justifyContent: 'flex-end'\n        },\n        bodyTitle: {\n            fontWeight: '600',\n            marginBottom: '10px'\n        }\n    })\n)\nconst ClientGridList = enhance((props) => {\n    const {\n        filter,\n        createDialog,\n        updateDialog,\n        actionsDialog,\n        confirmDialog,\n        deleteDialog,\n        listData,\n        detailData,\n        classes\n    } = props\n    const clientDetail = (\n        <ClientDetails\n            key={_.get(detailData, 'id')}\n            data={_.get(detailData, 'data') || {}}\n            deleteDialog={deleteDialog}\n            confirmDialog={confirmDialog}\n            loading={_.get(detailData, 'detailLoading')}\n            updateDialog={updateDialog}\n            handleCloseDetail={_.get(detailData, 'handleCloseDetail')}\n        />\n    )\n    const actions = (\n        <div>\n            <IconButton onTouchTap={actionsDialog.handleActionEdit}>\n                <ModEditorIcon />\n            </IconButton>\n\n            <IconButton onTouchTap={actionsDialog.handleActionDelete}>\n                <Delete />\n            </IconButton>\n        </div>\n    )\n\n    const clientList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\n        return (\n            <Row key={id}>\n                <Col xs={2}>{id}</Col>\n                <Col xs={7}>\n                    <Link to={{\n                        pathname: sprintf(ROUTES.CLIENT_ITEM_PATH, id),\n                        query: filter.getParams()\n                    }}>{name}</Link>\n                </Col>\n                <Col xs={3}>{createdDate}</Col>\n            </Row>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: clientList,\n        loading: _.get(listData, 'listLoading')\n    }\n\n    return (\n        <Container>\n            <SubMenu url={ROUTES.CLIENT_LIST_URL}/>\n            <div className={classes.addButtonWrapper}>\n                <Tooltip position=\"left\" text=\"Добавить клиента\">\n                    <FloatingActionButton\n                        mini={true}\n                        className={classes.addButton}\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\n                        <ContentAdd />\n                    </FloatingActionButton>\n                </Tooltip>\n            </div>\n\n            <GridList\n                filter={filter}\n                list={list}\n                detail={clientDetail}\n                actionsDialog={actions}\n            />\n\n            <ClientCreateDialog\n                open={createDialog.openCreateDialog}\n                loading={createDialog.createLoading}\n                onClose={createDialog.handleCloseCreateDialog}\n                onSubmit={createDialog.handleSubmitCreateDialog}\n            />\n\n            <ClientCreateDialog\n                isUpdate={true}\n                initialValues={updateDialog.initialValues}\n                open={updateDialog.openUpdateDialog}\n                loading={updateDialog.updateLoading}\n                onClose={updateDialog.handleCloseUpdateDialog}\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\n            />\n\n            <DeleteDialog\n                filter={filter}\n                open={deleteDialog.openDeleteDialog}\n                onClose={deleteDialog.handleCloseDeleteDialog}\n            />\n\n            {detailData.data && <ConfirmDialog\n                type=\"delete\"\n                message={_.get(detailData, ['data', 'name'])}\n                onClose={confirmDialog.handleCloseConfirmDialog}\n                onSubmit={confirmDialog.handleSendConfirmDialog}\n                open={confirmDialog.openConfirmDialog}\n            />}\n        </Container>\n    )\n})\n\nClientGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    tabData: PropTypes.object.isRequired,\n    createDialog: PropTypes.shape({\n        createLoading: PropTypes.bool.isRequired,\n        openCreateDialog: PropTypes.bool.isRequired,\n        handleOpenCreateDialog: PropTypes.func.isRequired,\n        handleCloseCreateDialog: PropTypes.func.isRequired,\n        handleSubmitCreateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    confirmDialog: PropTypes.shape({\n        openConfirmDialog: PropTypes.bool.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleSendConfirmDialog: PropTypes.func.isRequired\n    }).isRequired,\n    deleteDialog: PropTypes.shape({\n        openDeleteDialog: PropTypes.bool.isRequired,\n        handleOpenDeleteDialog: PropTypes.func.isRequired,\n        handleCloseDeleteDialog: PropTypes.func.isRequired\n    }).isRequired,\n    updateDialog: PropTypes.shape({\n        updateLoading: PropTypes.bool.isRequired,\n        openUpdateDialog: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    actionsDialog: PropTypes.shape({\n        handleActionEdit: PropTypes.func.isRequired,\n        handleActionDelete: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default ClientGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Client/ClientGridList.js","import ClientGridList from './ClientGridList'\nimport {CLIENT_CREATE_DIALOG_OPEN, CLIENT_UPDATE_DIALOG_OPEN} from './ClientCreateDialog'\n\nexport {\n    CLIENT_CREATE_DIALOG_OPEN,\n    CLIENT_UPDATE_DIALOG_OPEN,\n    ClientGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Client/index.js","import React from 'react'\nimport SvgIcon from 'material-ui/SvgIcon'\n\nconst CloseIcon = (props) => {\n    return (\n        <SvgIcon {...props} fill=\"#000000\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n        </SvgIcon>\n\n    )\n}\n\nexport default CloseIcon\n\n\n\n// WEBPACK FOOTER //\n// src/components/CloseIcon2/CloseIcon2.js","import React from 'react'\nimport SvgIcon from 'material-ui/SvgIcon'\n\nconst CloseIcon = (props) => {\n    return (\n        <SvgIcon {...props}>\n            <path d=\"M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2C6.47,2 2,6.47 2,12C2,17.53 6.47,22 12,22C17.53,22 22,17.53 22,12C22,6.47 17.53,2 12,2M14.59,8L12,10.59L9.41,8L8,9.41L10.59,12L8,14.59L9.41,16L12,13.41L14.59,16L16,14.59L13.41,12L16,9.41L14.59,8Z\" />\n        </SvgIcon>\n    )\n}\n\nexport default CloseIcon\n\n\n\n// WEBPACK FOOTER //\n// src/components/CloseIcon/CloseIcon.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport CloseIcon2 from '../CloseIcon2'\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        popUp: {\r\n            overflowY: 'hidden !important',\r\n            fontSize: '13px !important',\r\n            position: 'relative',\r\n            padding: '0 !important',\r\n            overflowX: 'hidden',\r\n            height: '100%'\r\n        },\r\n        titleContent: {\r\n            background: '#fff',\r\n            color: '#333',\r\n            fontWeight: 'bold',\r\n            textTransform: 'uppercase',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            borderBottom: '1px solid #efefef',\r\n            padding: '20px 30px',\r\n            zIndex: '999',\r\n            '& button': {\r\n                right: '13px',\r\n                padding: '0 !important',\r\n                position: 'absolute !important'\r\n            }\r\n        },\r\n        inContent: {\r\n            maxHeight: '50vh',\r\n            minHeight: '184px',\r\n            overflow: 'auto',\r\n            padding: '0 30px',\r\n            color: '#333'\r\n        },\r\n        bodyContent: {\r\n            width: '100%'\r\n        },\r\n        form: {\r\n            position: 'relative'\r\n        },\r\n        field: {\r\n            width: '100%'\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        },\r\n        bottomButton: {\r\n            bottom: '0',\r\n            left: '0',\r\n            right: '0',\r\n            padding: '10px',\r\n            zIndex: '999',\r\n            borderTop: '1px solid #efefef',\r\n            background: '#fff',\r\n            textAlign: 'right',\r\n            '& span': {\r\n                fontSize: '13px !important',\r\n                fontWeight: '600 !important',\r\n                color: '#129fdd',\r\n                verticalAlign: 'inherit !important'\r\n            }\r\n        },\r\n        actionButton: {\r\n            fontSize: '13px !important',\r\n            margin: '0 !important'\r\n        },\r\n        background: {\r\n            background: '#f1f5f8',\r\n            fontWeight: '600',\r\n            padding: '20px 30px',\r\n            margin: '0 -30px',\r\n            width: '100%'\r\n        },\r\n        confirm: {\r\n            padding: '20px 0'\r\n        },\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            justifyContent: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        }\r\n    })\r\n)\r\n\r\nconst ConfirmDialog = enhance((props) => {\r\n    const {open, onClose, classes, type, message, onSubmit, loading} = props\r\n    const typesList = {\r\n        delete: {\r\n            name: 'Подтверждение удаления', submitName: 'Удалить', text: 'Вы уверены что хотите удалить эти данные?'\r\n        },\r\n        cancel: {\r\n            name: 'Подтверждение отмены', submitName: 'Отменить', text: 'Вы уверены что хотите отменить эти данные?'\r\n        }\r\n    }\r\n    const title = _.get(typesList, [type, 'name'])\r\n    const buttonLabel = _.get(typesList, [type, 'submitName'])\r\n    const text = _.get(typesList, [type, 'text'])\r\n\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            contentStyle={{width: '500px'}}\r\n            className={classes.dialog}\r\n            bodyClassName={classes.popUp}>\r\n            <div className={classes.titleContent}>\r\n                <span>{title}</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <div className={classes.inContent}>\r\n                    {loading &&\r\n                    <div className={classes.loader}>\r\n                        <CircularProgress size={40} thickness={4}/>\r\n                    </div>}\r\n                    <div className={classes.confirm}>\r\n                        {text}\r\n                    </div>\r\n                    <div className={classes.background}>\r\n                        {message}\r\n                    </div>\r\n                </div>\r\n                <div className={classes.bottomButton}>\r\n                    <FlatButton\r\n                        className={classes.actionButton}\r\n                        label={buttonLabel}\r\n                        primary={true}\r\n                        onTouchTap={onSubmit}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\n\r\nConfirmDialog.propTypes = {\r\n    type: PropTypes.oneOf(['delete', 'cancel']).isRequired,\r\n    message: PropTypes.string.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ConfirmDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ConfirmDialog/ConfirmDialog.js","import React from 'react'\n\nconst Container = (props) => {\n    return (\n        <div style={{width: '100%', height: '100%', position: 'relative'}}>{props.children}</div>\n    )\n}\n\nexport default Container\n\n\n\n// WEBPACK FOOTER //\n// src/components/Container/Container.js","import _ from 'lodash'\r\nimport moment from 'moment'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\r\nimport Delete from 'material-ui/svg-icons/action/delete'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport injectSheet from 'react-jss'\r\nimport {compose} from 'recompose'\r\nimport Paper from 'material-ui/Paper'\r\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\r\nimport ContentAdd from 'material-ui/svg-icons/content/add'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport CurrencyCreateDialog from './CurrencyCreateDialog'\r\nimport SubMenu from '../SubMenu'\r\nimport ConfirmDialog from '../ConfirmDialog'\r\nimport GridList from '../GridList'\r\nimport Tooltip from '../ToolTip'\r\nimport Container from '../Container'\r\nimport numberFormat from '../../helpers/numberFormat'\r\nimport getConfig from '../../helpers/getConfig'\r\n\r\nconst listHeader = [\r\n    {\r\n        sorting: true,\r\n        name: 'name',\r\n        xs: 4,\r\n        title: '№'\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'name',\r\n        xs: 4,\r\n        title: 'Курс'\r\n    },\r\n    {\r\n        sorting: true,\r\n        xs: 4,\r\n        name: 'created_date',\r\n        title: 'Дата обновления'\r\n    }\r\n]\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        addButton: {\r\n            '& button': {\r\n                backgroundColor: '#275482 !important'\r\n            }\r\n        },\r\n        addButtonWrapper: {\r\n            position: 'absolute',\r\n            top: '10px',\r\n            right: '0',\r\n            marginBottom: '0px'\r\n        },\r\n        semibold: {\r\n            fontWeight: '600'\r\n        },\r\n        editContent: {\r\n            width: '100%',\r\n            backgroundColor: '#fff',\r\n            color: '#333',\r\n            padding: '20px 30px',\r\n            boxSizing: 'border-box',\r\n            marginBottom: '30px',\r\n            '&>div': {\r\n                marginBottom: '10px',\r\n                '&:last-child': {\r\n                    margin: '0'\r\n                }\r\n            }\r\n        },\r\n        titleButtons: {\r\n            display: 'flex',\r\n            justifyContent: 'flex-end'\r\n        },\r\n        information: {\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n        },\r\n        link: {\r\n            color: '#12aaeb !important',\r\n            borderBottom: '1px dashed #12aaeb',\r\n            fontWeight: '600'\r\n        },\r\n        wrap: {\r\n            display: 'flex',\r\n            margin: '0 -28px',\r\n            padding: '0 28px 0 0',\r\n            minHeight: 'calc(100% - 41px)'\r\n        },\r\n        leftSide: {\r\n            flexBasis: '25%'\r\n        },\r\n        rightSide: {\r\n            flexBasis: '75%',\r\n            marginLeft: '28px'\r\n        }\r\n    })\r\n)\r\nconst MINUS_ONE = -1\r\n\r\nconst CurrencyGridList = enhance((props) => {\r\n    const {\r\n        createDialog,\r\n        updateDialog,\r\n        actionsDialog,\r\n        confirmDialog,\r\n        listData,\r\n        detailData,\r\n        classes,\r\n        detailId,\r\n        detailFilter\r\n    } = props\r\n\r\n    const actions = (\r\n        <div>\r\n            <IconButton onTouchTap={actionsDialog.handleActionEdit}>\r\n                <ModEditorIcon />\r\n            </IconButton>\r\n\r\n            <IconButton onTouchTap={actionsDialog.handleActionDelete}>\r\n                <Delete />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n    const currencyList = _.map(_.get(listData, 'data'), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const name = _.get(item, 'name')\r\n        const rate = numberFormat(_.get(item, 'rate'))\r\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\r\n        const isActive = _.get(detailData, 'id') === id\r\n        return (\r\n            <div key={id} className={classes.list}\r\n                 style={isActive ? {backgroundColor: '#ffffff', display: 'relative'}\r\n                 : {backgroundColor: '#f2f5f8', display: 'relative'}}\r\n                 onTouchTap={() => { listData.handleCurrencyClick(id) }}>\r\n                <div xs={6} className={classes.title}>{name}</div>\r\n                <div xs={6} className={classes.balance}>\r\n                    <div>{rate}</div>\r\n                    <div>{createdDate}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n    const currency = _.get(_.find(_.get(listData, 'data'), (o) => {\r\n        return o.id === _.toInteger(_.get(detailData, 'id'))\r\n    }), 'name')\r\n    const currentCurrency = getConfig('PRIMARY_CURRENCY')\r\n    const historyList = _.map(_.get(detailData, ['data', 'results']), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\r\n        const rate = numberFormat(_.get(item, 'rate')) || 'N/A'\r\n        return (\r\n            <Row key={id}>\r\n                <Col xs={4}>{id}</Col>\r\n                <Col xs={4}>1 {currency} = {rate} {currentCurrency}</Col>\r\n                <Col xs={4}>{createdDate}</Col>\r\n            </Row>\r\n        )\r\n    })\r\n\r\n    const list = {\r\n        header: listHeader,\r\n        list: historyList,\r\n        loading: _.get(detailData, 'detailLoading')\r\n    }\r\n    const currentDetail = _.find(_.get(listData, 'data'), {'id': _.toInteger(detailId)})\r\n    const detail = <div>a</div>\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.CURRENCY_LIST_URL}/>\r\n            <div className={classes.addButtonWrapper}>\r\n                <Tooltip position=\"left\" text=\"Добавить валюту\">\r\n                    <FloatingActionButton\r\n                        mini={true}\r\n                        className={classes.addButton}\r\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\r\n                        <ContentAdd />\r\n                    </FloatingActionButton>\r\n                </Tooltip>\r\n            </div>\r\n            <Paper zDepth={2}>\r\n                <div className={classes.editContent}>\r\n                    <div className={classes.semibold}>Основная валюта: <b>{currentCurrency}</b><i style={{fontWeight: '400', color: '#999'}}>(используется\r\n                        при формировании стоимости продукта / заказа)</i></div>\r\n                </div>\r\n            </Paper>\r\n            <div className={classes.wrap}>\r\n                <div className={classes.leftSide}>\r\n                    <div className={classes.outerTitle} style={{paddingLeft: '30px'}}>\r\n                        <div>Валюты</div>\r\n                    </div>\r\n                    <Paper zDepth={2} style={{height: '100%'}}>\r\n                        <div className={classes.listWrapper}>\r\n                            {_.get(listData, 'listLoading')\r\n                                ? <div style={{textAlign: 'center'}}>\r\n                                    <CircularProgress size={40} thickness={4}/>\r\n                                </div>\r\n                                : currencyList\r\n                            }\r\n                        </div>\r\n                    </Paper>\r\n                </div>\r\n                <div className={classes.rightSide}>\r\n                    <div className={classes.outerTitle}>История</div>\r\n                    <GridList\r\n                        filter={detailFilter}\r\n                        list={list}\r\n                        detail={detail}\r\n                        actionsDialog={actions}\r\n                    />\r\n\r\n                    <CurrencyCreateDialog\r\n                        initialValues={createDialog.initialValues}\r\n                        open={createDialog.openCreateDialog}\r\n                        loading={createDialog.createLoading}\r\n                        onClose={createDialog.handleCloseCreateDialog}\r\n                        onSubmit={createDialog.handleSubmitCreateDialog}\r\n                    />\r\n\r\n                    <CurrencyCreateDialog\r\n                        isUpdate={true}\r\n                        initialValues={updateDialog.initialValues}\r\n                        open={updateDialog.openUpdateDialog}\r\n                        loading={updateDialog.updateLoading}\r\n                        onClose={updateDialog.handleCloseUpdateDialog}\r\n                        onSubmit={updateDialog.handleSubmitUpdateDialog}\r\n                    />\r\n\r\n                    {detailId !== MINUS_ONE && <ConfirmDialog\r\n                        type=\"delete\"\r\n                        message={_.get(currentDetail, 'name')}\r\n                        onClose={confirmDialog.handleCloseConfirmDialog}\r\n                        onSubmit={confirmDialog.handleSendConfirmDialog}\r\n                        open={confirmDialog.openConfirmDialog}\r\n                    />}\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    )\r\n})\r\n\r\nCurrencyGridList.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object,\r\n    createDialog: PropTypes.shape({\r\n        createLoading: PropTypes.bool.isRequired,\r\n        openCreateDialog: PropTypes.bool.isRequired,\r\n        handleOpenCreateDialog: PropTypes.func.isRequired,\r\n        handleCloseCreateDialog: PropTypes.func.isRequired,\r\n        handleSubmitCreateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    setCurrencyUpdateDialog: PropTypes.shape({\r\n        setCurrencyLoading: PropTypes.bool.isRequired,\r\n        openSetCurrencyDialog: PropTypes.bool.isRequired,\r\n        handleOpenSetCurrencyDialog: PropTypes.func.isRequired,\r\n        handleCloseSetCurrencyDialog: PropTypes.func.isRequired,\r\n        handleSubmitSetCurrencyDialog: PropTypes.func.isRequired\r\n    }),\r\n    confirmDialog: PropTypes.shape({\r\n        openConfirmDialog: PropTypes.bool.isRequired,\r\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\r\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\r\n        handleSendConfirmDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    updateDialog: PropTypes.shape({\r\n        updateLoading: PropTypes.bool.isRequired,\r\n        openUpdateDialog: PropTypes.bool.isRequired,\r\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\r\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\r\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    actionsDialog: PropTypes.shape({\r\n        handleActionEdit: PropTypes.func.isRequired,\r\n        handleActionDelete: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default CurrencyGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Currency/CurrencyGridList.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport {CurrencySearchField} from '../ReduxForm'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport MainStyles from '../Styles/MainStyles'\r\n\r\nexport const PRIMARY_CURRENCY_DIALOG_OPEN = 'openPrimaryDialog'\r\n\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\r\n\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        latLng,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        },\r\n\r\n        fields: {\r\n            display: ({loading}) => !loading ? 'flex' : 'none'\r\n        }\r\n    })),\r\n    reduxForm({\r\n        form: 'BaseCurrencyCreateForm',\r\n        enableReinitialize: true\r\n    })\r\n)\r\n\r\nconst PrimaryCurrencyDialog = enhance((props) => {\r\n    const {classes, open, onClose, handleSubmit, loading} = props\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            className={classes.dialog}\r\n            contentStyle={loading ? {width: '400px'} : {width: '400px'}}\r\n            bodyClassName={classes.popUp}>\r\n            <div className={classes.titleContent}>\r\n                <span>Выбрать основную валюту</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit} className={classes.form}>\r\n                    <div className={classes.loader}>\r\n                        <CircularProgress size={40} thickness={4}/>\r\n                    </div>\r\n                    <div className={classes.inContent} style={{minHeight: '100px', paddingTop: '25px'}}>\r\n                        <div className={classes.fields}>\r\n                            <Field\r\n                                name=\"currency\"\r\n                                component={CurrencySearchField}\r\n                                className={classes.inputFieldCustom}\r\n                                label=\"Валюта\"\r\n                                fullWidth={true}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <FlatButton\r\n                            label=\"Сохранить\"\r\n                            type=\"submit\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\n\r\nPrimaryCurrencyDialog.propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    onSubmit: PropTypes.func.isRequired\r\n}\r\n\r\nPrimaryCurrencyDialog.defaultProps = {\r\n    isUpdate: false\r\n}\r\n\r\nexport default PrimaryCurrencyDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Currency/PrimaryCurrencyDialog.js","import CurrencyGridList from './CurrencyGridList'\r\nimport {CURRENCY_CREATE_DIALOG_OPEN} from './CurrencyCreateDialog'\r\nimport {PRIMARY_CURRENCY_DIALOG_OPEN} from './PrimaryCurrencyDialog'\r\nconst CURRENCY_DELETE_DIALOG_OPEN = 'openDeleteDialog'\r\nconst CURRENCY_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\r\n\r\nexport {\r\n    CURRENCY_CREATE_DIALOG_OPEN,\r\n    CURRENCY_UPDATE_DIALOG_OPEN,\r\n    PRIMARY_CURRENCY_DIALOG_OPEN,\r\n    CURRENCY_DELETE_DIALOG_OPEN,\r\n    CurrencyGridList\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Currency/index.js","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport {reduxForm} from 'redux-form'\n\nexport const DELETE_DIALOG_OPEN = 'openDeleteDialog'\n\nconst enhance = compose(\n    injectSheet({\n        dialog: {\n            '& div:last-child': {\n                textAlign: 'left !important',\n                '& button': {\n                    marginLeft: '50px !important',\n                    marginBottom: '5px !important',\n                    color: '#12aaeb !important'\n                }\n            }\n        },\n\n        body: {\n            maxHeight: '600px !important',\n            padding: '0 0 0 15px !important',\n            overflow: 'hidden !important'\n        },\n\n        title: {\n            width: '220px',\n            margin: '0 auto',\n            padding: '10px 0',\n            textAlign: 'center',\n            background: '#12aaeb',\n            color: '#fff',\n            position: 'relative'\n        },\n\n        form: {\n            display: 'flex'\n        },\n\n        map: {\n            height: '600px',\n            paddingRight: '0'\n        }\n    }),\n    reduxForm({\n        form: 'ShopCreateForm'\n    })\n)\n\nconst DeleteDialog = enhance((props) => {\n    const {open, onClose, classes, filter} = props\n\n    const selects = filter.getSelects()\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            bodyClassName={classes.body}>\n                    <div>\n                        <h4 className={classes.title}>ПОДТВЕРЖДЕНИЕ УДАЛЕНИЯ</h4>\n                    </div>\n                        IDS: {selects}\n                    <div>\n                        <div>\n                            <FlatButton\n                                label=\"СВЕРНУТЬ\"\n                                primary={true}\n                                onTouchTap={onClose}\n                            />\n\n                            <FlatButton\n                                label=\"УДАЛИТЬ\"\n                                primary={true}\n                                type=\"submit\"\n                            />\n                        </div>\n                    </div>\n        </Dialog>\n    )\n})\n\nDeleteDialog.propTyeps = {\n    filter: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    loading: PropTypes.bool.isRequired\n}\n\nexport default DeleteDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/DeleteDialog/DeleteDialog.js","import React from 'react'\nimport SvgIcon from 'material-ui/SvgIcon'\nconst DeleteIcon = (props) => {\n    return (\n        <SvgIcon {...props} height=\"18\" viewBox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n            <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\" fill=\"rgb(158,158,158)\"/>\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n        </SvgIcon>\n    )\n}\nexport default DeleteIcon\n\n\n\n// WEBPACK FOOTER //\n// src/components/DeleteIcon/DeleteIcon.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport GridList from '../GridList'\r\nimport Container from '../Container'\r\nimport EquipmentCreateDialog from './EquipmentCreateDialog'\r\nimport ConfirmDialog from '../ConfirmDialog'\r\nimport SubMenu from '../SubMenu'\r\nimport injectSheet from 'react-jss'\r\nimport {compose} from 'recompose'\r\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\r\nimport ContentAdd from 'material-ui/svg-icons/content/add'\r\nimport Tooltip from '../ToolTip'\r\nimport IconMenu from 'material-ui/IconMenu'\r\nimport MenuItem from 'material-ui/MenuItem'\r\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\r\nimport Edit from 'material-ui/svg-icons/image/edit'\r\n\r\nconst listHeader = [\r\n    {\r\n        sorting: true,\r\n        name: 'id',\r\n        xs: 2,\r\n        title: 'Id'\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'name',\r\n        xs: 6,\r\n        title: 'Наименование'\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'manufacture',\r\n        title: 'Производство',\r\n        xs: 3\r\n    },\r\n    {\r\n        sorting: false,\r\n        name: 'actions',\r\n        title: '',\r\n        xs: 1\r\n    }\r\n]\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        addButton: {\r\n            '& button': {\r\n                backgroundColor: '#275482 !important'\r\n            }\r\n        },\r\n        addButtonWrapper: {\r\n            position: 'absolute',\r\n            top: '10px',\r\n            right: '0',\r\n            marginBottom: '0px'\r\n        }\r\n    })\r\n)\r\n\r\nconst EquipmentGridList = enhance((props) => {\r\n    const {\r\n        filter,\r\n        createDialog,\r\n        updateDialog,\r\n        confirmDialog,\r\n        listData,\r\n        detailData,\r\n        classes\r\n    } = props\r\n\r\n    const actions = (\r\n        <div></div>\r\n    )\r\n\r\n    const equipmentDetail = (\r\n        <span>a</span>\r\n    )\r\n\r\n    const equipmentList = _.map(_.get(listData, 'data'), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const name = _.get(item, 'name')\r\n        const manufacture = _.get(item, ['manufacture', 'name'])\r\n        const iconButton = (\r\n            <IconButton style={{padding: '0 12px'}}>\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n        )\r\n        return (\r\n            <Row key={id}>\r\n                <Col xs={2}>{id}</Col>\r\n                <Col xs={6}>{name}</Col>\r\n                <Col xs={3}>{manufacture}</Col>\r\n                <Col xs={1} style={{textAlign: 'right'}}>\r\n                    <IconMenu\r\n                        iconButtonElement={iconButton}\r\n                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\r\n                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\r\n                        <MenuItem\r\n                            primaryText=\"Изменить\"\r\n                            leftIcon={<Edit />}\r\n                            onTouchTap={() => { updateDialog.handleOpenUpdateDialog(id) }}\r\n                        />\r\n                        <MenuItem\r\n                            primaryText=\"Удалить \"\r\n                            leftIcon={<DeleteIcon />}\r\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(id) }}\r\n                        />\r\n                    </IconMenu>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    })\r\n\r\n    const list = {\r\n        header: listHeader,\r\n        list: equipmentList,\r\n        loading: _.get(listData, 'listLoading')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.EQUIPMENT_LIST_URL}/>\r\n            <div className={classes.addButtonWrapper}>\r\n                <Tooltip position=\"left\" text=\"Добавить оборудование\">\r\n                    <FloatingActionButton\r\n                        mini={true}\r\n                        className={classes.addButton}\r\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\r\n                        <ContentAdd />\r\n                    </FloatingActionButton>\r\n                </Tooltip>\r\n            </div>\r\n\r\n            <GridList\r\n                filter={filter}\r\n                list={list}\r\n                detail={equipmentDetail}\r\n                actionsDialog={actions}\r\n            />\r\n            <EquipmentCreateDialog\r\n                isUpdate={true}\r\n                initialValues={updateDialog.initialValues}\r\n                open={updateDialog.openUpdateDialog}\r\n                loading={updateDialog.updateLoading}\r\n                onClose={updateDialog.handleCloseUpdateDialog}\r\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\r\n            />\r\n\r\n            <EquipmentCreateDialog\r\n                open={createDialog.openCreateDialog}\r\n                loading={createDialog.createLoading}\r\n                onClose={createDialog.handleCloseCreateDialog}\r\n                onSubmit={createDialog.handleSubmitCreateDialog}\r\n            />\r\n\r\n            {detailData.data && <ConfirmDialog\r\n                type=\"delete\"\r\n                message={_.get(detailData, ['data', 'name'])}\r\n                loading={confirmDialog.confirmLoading}\r\n                onClose={confirmDialog.handleCloseConfirmDialog}\r\n                onSubmit={confirmDialog.handleSendConfirmDialog}\r\n                open={confirmDialog.openConfirmDialog}\r\n            />}\r\n        </Container>\r\n    )\r\n})\r\n\r\nEquipmentGridList.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object,\r\n    createDialog: PropTypes.shape({\r\n        createLoading: PropTypes.bool.isRequired,\r\n        openCreateDialog: PropTypes.bool.isRequired,\r\n        handleOpenCreateDialog: PropTypes.func.isRequired,\r\n        handleCloseCreateDialog: PropTypes.func.isRequired,\r\n        handleSubmitCreateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    confirmDialog: PropTypes.shape({\r\n        confirmLoading: PropTypes.bool.isRequired,\r\n        openConfirmDialog: PropTypes.bool.isRequired,\r\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\r\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\r\n        handleSendConfirmDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    updateDialog: PropTypes.shape({\r\n        updateLoading: PropTypes.bool.isRequired,\r\n        openUpdateDialog: PropTypes.bool.isRequired,\r\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\r\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\r\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default EquipmentGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Equipment/EquipmentGridList.js","import EquipmentGridList from './EquipmentGridList'\nimport {EQUIPMENT_CREATE_DIALOG_OPEN} from './EquipmentCreateDialog'\n\nconst EQUIPMENT_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nconst EQUIPMENT_DELETE_DIALOG_OPEN = 'openDeleteDialog'\n\nexport {\n    EQUIPMENT_CREATE_DIALOG_OPEN,\n    EQUIPMENT_UPDATE_DIALOG_OPEN,\n    EQUIPMENT_DELETE_DIALOG_OPEN,\n    EquipmentGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Equipment/index.js","import _ from 'lodash'\r\nimport moment from 'moment'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\r\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport GridList from '../GridList'\r\nimport Container from '../Container'\r\nimport ExpensiveCategoryCreateDialog from './ExpensiveCategoryCreateDialog'\r\nimport ConfirmDialog from '../ConfirmDialog'\r\nimport SubMenu from '../SubMenu'\r\nimport injectSheet from 'react-jss'\r\nimport {compose} from 'recompose'\r\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\r\nimport ContentAdd from 'material-ui/svg-icons/content/add'\r\nimport Tooltip from '../ToolTip'\r\nimport IconMenu from 'material-ui/IconMenu'\r\nimport MenuItem from 'material-ui/MenuItem'\r\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\r\nimport Edit from 'material-ui/svg-icons/image/edit'\r\n\r\nconst listHeader = [\r\n    {\r\n        sorting: true,\r\n        name: 'id',\r\n        xs: 2,\r\n        title: 'Id'\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'name',\r\n        xs: 6,\r\n        title: 'Наименование'\r\n    },\r\n    {\r\n        sorting: true,\r\n        xs: 3,\r\n        name: 'created_date',\r\n        title: 'Дата создания'\r\n    },\r\n    {\r\n        sorting: false,\r\n        xs: 1,\r\n        name: 'actions',\r\n        title: ''\r\n    }\r\n]\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        addButton: {\r\n            '& button': {\r\n                backgroundColor: '#275482 !important'\r\n            }\r\n        },\r\n        addButtonWrapper: {\r\n            position: 'absolute',\r\n            top: '10px',\r\n            right: '0',\r\n            marginBottom: '0px'\r\n        }\r\n    })\r\n)\r\n\r\nconst ExpensiveCategoryGridList = enhance((props) => {\r\n    const {\r\n        filter,\r\n        createDialog,\r\n        updateDialog,\r\n        actionsDialog,\r\n        confirmDialog,\r\n        listData,\r\n        detailData,\r\n        classes\r\n    } = props\r\n\r\n    const actions = (\r\n        <div>\r\n            <IconButton onTouchTap={actionsDialog.handleActionEdit}>\r\n                <ModEditorIcon />\r\n            </IconButton>\r\n\r\n            <IconButton onTouchTap={actionsDialog.handleActionDelete}>\r\n                <DeleteIcon />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n\r\n    const expensiveCategoryDetail = (\r\n        <span>a</span>\r\n    )\r\n\r\n    const expensiveCategoryList = _.map(_.get(listData, 'data'), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const name = _.get(item, 'name')\r\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\r\n        const iconButton = (\r\n            <IconButton style={{padding: '0 12px'}}>\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n        )\r\n        return (\r\n            <Row key={id}>\r\n                <Col xs={2}>{id}</Col>\r\n                <Col xs={6}>{name}</Col>\r\n                <Col xs={3}>{createdDate}</Col>\r\n                <Col xs={1} style={{textAlign: 'right'}}>\r\n                    <IconMenu\r\n                        iconButtonElement={iconButton}\r\n                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\r\n                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\r\n                        <MenuItem\r\n                            primaryText=\"Изменить\"\r\n                            leftIcon={<Edit />}\r\n                            onTouchTap={() => { updateDialog.handleOpenUpdateDialog(id) }}\r\n                        />\r\n                        <MenuItem\r\n                            primaryText=\"Удалить \"\r\n                            leftIcon={<DeleteIcon />}\r\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(id) }}\r\n                        />\r\n                    </IconMenu>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    })\r\n\r\n    const list = {\r\n        header: listHeader,\r\n        list: expensiveCategoryList,\r\n        loading: _.get(listData, 'listLoading')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.EXPENSIVE_CATEGORY_LIST_URL}/>\r\n            <div className={classes.addButtonWrapper}>\r\n                <Tooltip position=\"left\" text=\"Добавить категорию\">\r\n                    <FloatingActionButton\r\n                        mini={true}\r\n                        className={classes.addButton}\r\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\r\n                        <ContentAdd />\r\n                    </FloatingActionButton>\r\n                </Tooltip>\r\n            </div>\r\n\r\n            <GridList\r\n                filter={filter}\r\n                list={list}\r\n                detail={expensiveCategoryDetail}\r\n                actionsDialog={actions}\r\n            />\r\n\r\n            <ExpensiveCategoryCreateDialog\r\n                open={createDialog.openCreateDialog}\r\n                loading={createDialog.createLoading}\r\n                onClose={createDialog.handleCloseCreateDialog}\r\n                onSubmit={createDialog.handleSubmitCreateDialog}\r\n            />\r\n\r\n            <ExpensiveCategoryCreateDialog\r\n                isUpdate={true}\r\n                initialValues={updateDialog.initialValues}\r\n                open={updateDialog.openUpdateDialog}\r\n                loading={updateDialog.updateLoading}\r\n                onClose={updateDialog.handleCloseUpdateDialog}\r\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\r\n            />\r\n\r\n            {detailData.data && <ConfirmDialog\r\n                type=\"delete\"\r\n                message={_.get(detailData, ['data', 'name'])}\r\n                loading={confirmDialog.confirmLoading}\r\n                onClose={confirmDialog.handleCloseConfirmDialog}\r\n                onSubmit={confirmDialog.handleSendConfirmDialog}\r\n                open={confirmDialog.openConfirmDialog}\r\n            />}\r\n        </Container>\r\n    )\r\n})\r\n\r\nExpensiveCategoryGridList.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object,\r\n    createDialog: PropTypes.shape({\r\n        createLoading: PropTypes.bool.isRequired,\r\n        openCreateDialog: PropTypes.bool.isRequired,\r\n        handleOpenCreateDialog: PropTypes.func.isRequired,\r\n        handleCloseCreateDialog: PropTypes.func.isRequired,\r\n        handleSubmitCreateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    confirmDialog: PropTypes.shape({\r\n        confirmLoading: PropTypes.bool.isRequired,\r\n        openConfirmDialog: PropTypes.bool.isRequired,\r\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\r\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\r\n        handleSendConfirmDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    updateDialog: PropTypes.shape({\r\n        updateLoading: PropTypes.bool.isRequired,\r\n        openUpdateDialog: PropTypes.bool.isRequired,\r\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\r\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\r\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    actionsDialog: PropTypes.shape({\r\n        handleActionEdit: PropTypes.func.isRequired,\r\n        handleActionDelete: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default ExpensiveCategoryGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ExpensiveCategory/ExpensiveCategoryGridList.js","import ExpensiveCategoryGridList from './ExpensiveCategoryGridList'\r\nimport {EXPENSIVE_CATEGORY_CREATE_DIALOG_OPEN} from './ExpensiveCategoryCreateDialog'\r\n\r\nconst EXPENSIVE_CATEGORY_DELETE_DIALOG_OPEN = 'openDeleteDialog'\r\nconst EXPENSIVE_CATEGORY_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\r\n\r\nexport {\r\n    EXPENSIVE_CATEGORY_CREATE_DIALOG_OPEN,\r\n    EXPENSIVE_CATEGORY_DELETE_DIALOG_OPEN,\r\n    EXPENSIVE_CATEGORY_UPDATE_DIALOG_OPEN,\r\n    ExpensiveCategoryGridList\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ExpensiveCategory/index.js","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport {withGoogleMap, GoogleMap as DefaultGoogleMap} from 'react-google-maps'\r\nimport withScriptjs from 'react-google-maps/lib/async/withScriptjs'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport * as GOOGLE_MAP from '../../constants/googleMaps'\r\n\r\nconst enhance = compose(\r\n    withScriptjs,\r\n    withGoogleMap\r\n)\r\n\r\nconst GoogleMapWrapper = enhance(({onMapLoad, ...props}) => {\r\n    return (\r\n        <DefaultGoogleMap ref={onMapLoad} {...props}>\r\n            {props.children}\r\n        </DefaultGoogleMap>\r\n    )\r\n})\r\n\r\nconst Loader = () =>\r\n    <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%'}}>\r\n        <CircularProgress size={40} thickness={4} />\r\n    </div>\r\n\r\nconst GoogleMap = (props) => {\r\n    const {center, ...defaultProps} = props\r\n\r\n    return (\r\n        <GoogleMapWrapper\r\n            defaultCenter={center}\r\n            googleMapURL={GOOGLE_MAP.GOOGLE_API_URL}\r\n            loadingElement={<Loader />}\r\n            containerElement={<div style={{height: '100%'}} />}\r\n            mapElement={<div style={{height: '100%'}} />}\r\n            defaultZoom={15}\r\n            radius=\"500\"\r\n            {...defaultProps}>\r\n            {props.children}\r\n        </GoogleMapWrapper>\r\n    )\r\n}\r\n\r\nGoogleMap.propTypes = {\r\n    center: PropTypes.object.isRequired,\r\n    onMapLoad: PropTypes.func\r\n}\r\n\r\nexport default GoogleMap\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/GoogleMap/GoogleMap.js","import GoogleMap from './GoogleMap'\n\nexport default GoogleMap\n\n\n\n// WEBPACK FOOTER //\n// src/components/GoogleMap/index.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport {hashHistory} from 'react-router'\r\nimport {compose, withHandlers} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Checkbox from 'material-ui/Checkbox'\r\nimport Dot from '../../Images/dot.png'\r\nimport NotFound from '../../Images/not-found.png'\r\nimport Paper from 'material-ui/Paper'\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        item: {\r\n            height: '50px',\r\n            padding: '0 30px',\r\n            background: '#fff',\r\n            '& .row': {\r\n                width: '100%',\r\n                alignItems: 'center',\r\n                height: '100%',\r\n                margin: '0',\r\n                '&>div:first-child': {\r\n                    paddingLeft: '0'\r\n                },\r\n                '&>div:last-child': {\r\n                    paddingRight: '0'\r\n                }\r\n            },\r\n            '&:after': {\r\n                content: '\"\"',\r\n                backgroundImage: 'url(' + Dot + ')',\r\n                position: 'absolute',\r\n                height: '2px',\r\n                left: '0',\r\n                right: '0',\r\n                marginTop: '-1px'\r\n            },\r\n            '&:last-child:after': {\r\n                content: '\"\"',\r\n                backgroundImage: 'none'\r\n            },\r\n            '& a': {\r\n                color: '#333',\r\n                fontWeight: '600'\r\n            }\r\n\r\n        },\r\n        detail: {\r\n            margin: '20px -15px !important',\r\n            background: '#fff',\r\n            display: 'flex',\r\n            borderBottom: '1px dotted #eee',\r\n            alignItems: 'center',\r\n            position: 'relative',\r\n            minHeight: '150px',\r\n            transition: 'all 400ms ease-out !important'\r\n        },\r\n        emptyQuery: {\r\n            background: 'url(' + NotFound + ') no-repeat center center',\r\n            backgroundSize: '225px',\r\n            padding: '260px 0 50px',\r\n            textAlign: 'center',\r\n            fontSize: '13px',\r\n            color: '#999',\r\n            '& svg': {\r\n                width: '50px !important',\r\n                height: '50px !important',\r\n                color: '#999 !important'\r\n            }\r\n        }\r\n    }),\r\n    withHandlers({\r\n        onChecked: props => (id) => {\r\n            return (event, isChecked) => {\r\n                const {filter} = props\r\n                const selects = filter.getSelects()\r\n                const selectsInChecked = _\r\n                    .chain(selects)\r\n                    .union([id])\r\n                    .uniq()\r\n                    .value()\r\n                const selectsUnChecked = _\r\n                    .chain(selects)\r\n                    .filter(item => id !== item)\r\n                    .value()\r\n                const newSelects = isChecked ? selectsInChecked : selectsUnChecked\r\n                const url = filter.createURL({select: _.join(newSelects, ',')})\r\n\r\n                hashHistory.push(url)\r\n            }\r\n        }\r\n    })\r\n)\r\n\r\nconst GridListBody = enhance((props) => {\r\n    const {classes, filter, list, onChecked, detail, withoutCheckboxes} = props\r\n\r\n    const items = _.map(list, (item, index) => {\r\n        const id = _.toInteger(_.get(item, 'key'))\r\n        const detailId = _.toInteger(_.get(detail, 'key'))\r\n        const selects = filter.getSelects()\r\n        const checkboxChecked = _\r\n            .chain(selects)\r\n            .find(selectId => selectId === id)\r\n            .isNumber()\r\n            .value()\r\n\r\n        if (id === detailId) {\r\n            return (\r\n                <Paper zDepth={2} className={classes.detail} key={index}>\r\n                    {detail}\r\n                </Paper>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Paper zDepth={1} className={classes.item} key={index}>\r\n                    <div className={classes.checkbox}>\r\n                        {withoutCheckboxes &&\r\n                        <Checkbox onCheck={onChecked(id)} checked={checkboxChecked}/>\r\n                        }\r\n                    </div>\r\n                {item}\r\n            </Paper>\r\n        )\r\n    })\r\n    return (\r\n        <div>\r\n            {!_.isEmpty(items)\r\n                ? <div>{items}</div>\r\n                : <div className={classes.emptyQuery}>\r\n                    <div>По вашему запросу ничего не найдено</div>\r\n                  </div>}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default GridListBody\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridListBody/GridListBody.js","import GridListBody from './GridListBody'\n\nexport default GridListBody\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridListBody/index.js","import React from 'react'\nimport SvgIcon from 'material-ui/SvgIcon'\n\nconst ArrowDownIcon = (props) => (\n    <SvgIcon {...props}>\n        <path d=\"M11,4H13V16L18.5,10.5L19.92,11.92L12,19.84L4.08,11.92L5.5,10.5L11,16V4Z\" />\n    </SvgIcon>\n)\n\nexport default ArrowDownIcon\n\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridListHeader/ArrowDownIcon.js","import React from 'react'\nimport SvgIcon from 'material-ui/SvgIcon'\n\nconst ArrowUpIcon = (props) => (\n    <SvgIcon {...props}>\n        <path d=\"M13,20H11V8L5.5,13.5L4.08,12.08L12,4.16L19.92,12.08L18.5,13.5L13,8V20Z\" />\n    </SvgIcon>\n)\n\nexport default ArrowUpIcon\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridListHeader/ArrowUpIcon.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport injectSheet from 'react-jss'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport {Link, hashHistory} from 'react-router'\r\nimport {compose, withHandlers} from 'recompose'\r\nimport ArrowUpIcon from './ArrowUpIcon'\r\nimport ArrowDownIcon from './ArrowDownIcon'\r\nimport Checkbox from 'material-ui/Checkbox'\r\nimport FlatButton from 'material-ui/FlatButton'\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        header: {\r\n            position: 'absolute',\r\n            top: '50px',\r\n            width: '100%',\r\n            height: '50px',\r\n            alignItems: 'center',\r\n            background: '#5d6474',\r\n            overflow: 'hidden',\r\n            fontWeight: '600',\r\n            color: '#fff',\r\n            display: 'flex',\r\n            '& .row': {\r\n                width: '100%',\r\n                alignItems: 'center',\r\n                '& span': {\r\n                    lineHeight: 'normal !important'\r\n                },\r\n                '& button': {\r\n                    lineHeight: 'normal !important'\r\n                }\r\n            }\r\n        },\r\n        sortingButton: {\r\n            color: '#ffffff',\r\n            cursor: 'pointer',\r\n            '& hover': {\r\n                color: '#ffffff',\r\n                cursor: 'pointer'\r\n            }\r\n        },\r\n        icon: {\r\n            height: '15px !important',\r\n            position: 'absolute !important',\r\n            top: '10px !important',\r\n            right: '0px !important',\r\n            color: '#fff !important'\r\n        },\r\n        button: {\r\n            color: '#fff !important',\r\n            minWidth: 'auto !important',\r\n            padding: '0px 30px 0px 0px !important',\r\n            position: 'relative !important',\r\n            '&:hover': {\r\n                backgroundColor: 'transparent !important'\r\n            },\r\n            '& span': {\r\n                fontWeight: '600'\r\n            }\r\n        },\r\n        headerPadding: {\r\n            padding: '0 30px',\r\n            width: '100%',\r\n            '& div div': {\r\n                paddingLeft: '10px'\r\n            },\r\n            '& div div:first-child': {\r\n                paddingLeft: '5px'\r\n            }\r\n        },\r\n        withoutRowDiv: {\r\n            width: '100%',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            '& div': {\r\n                paddingLeft: '0 !important'\r\n            },\r\n            '& div:last-child': {\r\n                textAlign: 'right',\r\n                paddingRight: '10px'\r\n            }\r\n        }\r\n    }),\r\n    withHandlers({\r\n        onChecked: props => (event, isChecked) => {\r\n            const {filter, listIds} = props\r\n            const selects = filter.getSelects()\r\n            const selectsInChecked = _\r\n                .chain(selects)\r\n                .union(listIds)\r\n                .uniq()\r\n                .value()\r\n            const selectsUnChecked = _\r\n                .chain(selects)\r\n                .filter(itemId => !_.includes(listIds, itemId))\r\n                .value()\r\n\r\n            const newSelects = isChecked ? selectsInChecked : selectsUnChecked\r\n            const url = filter.createURL({select: _.join(newSelects, ',')})\r\n\r\n            hashHistory.push(url)\r\n        }\r\n    })\r\n)\r\n\r\nconst GridListHeader = enhance((props) => {\r\n    const {classes, filter, column, listIds, onChecked, withoutCheckboxes, withoutRow} = props\r\n\r\n    // Calculate row size for correct showing grid list\r\n    const rowSize = 12\r\n    const defaultColumnSize = Math.floor(rowSize / column.length)\r\n    const fullSize = (defaultColumnSize * column.length)\r\n    const firstColumnSize = rowSize !== fullSize ? rowSize - fullSize + defaultColumnSize : defaultColumnSize\r\n\r\n    const checkboxChecked = _\r\n        .chain(filter.getSelects())\r\n        .filter(itemId => _.includes(listIds, itemId))\r\n        .sortBy(itemId => itemId)\r\n        .isEqual(_.sortBy(listIds, itemId => itemId))\r\n        .value()\r\n\r\n    const firstIndex = 0\r\n    const items = _.map(column, (item, index) => {\r\n        const xs = (!_.isNil(item.xs)) ? item.xs : (index === firstIndex ? firstColumnSize : defaultColumnSize)\r\n\r\n        if (_.get(item, 'sorting')) {\r\n            const name = _.get(item, 'name')\r\n            const sortingType = filter.getSortingType(name)\r\n            const Icon = !_.isNull(sortingType) ? sortingType ? (\r\n                        <ArrowUpIcon className={classes.icon}/>\r\n                    ) : (<ArrowDownIcon className={classes.icon}/>) : null\r\n\r\n            if (withoutRow) {\r\n                return (<Col style={{width: xs}} key={index}>\r\n                    <Link\r\n                        className={classes.sortingButton}\r\n                        onTouchTap={() => hashHistory.push(filter.sortingURL(name))}>\r\n                        <FlatButton className={classes.button}>\r\n                            <span>{_.get(item, 'title')}</span> {Icon}\r\n                        </FlatButton>\r\n                    </Link>\r\n                </Col>)\r\n            }\r\n            return (<Col xs={xs} key={index}>\r\n                        <Link\r\n                            className={classes.sortingButton}\r\n                            onTouchTap={() => hashHistory.push(filter.sortingURL(name))}>\r\n                            <FlatButton className={classes.button}>\r\n                                <span>{_.get(item, 'title')}</span> {Icon}\r\n                            </FlatButton>\r\n                        </Link>\r\n                    </Col>)\r\n        }\r\n\r\n        return (\r\n            <Col xs={xs} key={index}>{_.get(item, 'title')}</Col>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className={classes.header}>\r\n            <div className={classes.checkbox}>\r\n                {withoutCheckboxes &&\r\n                <Checkbox onCheck={onChecked} checked={checkboxChecked}/>\r\n                }\r\n            </div>\r\n            <div className={classes.headerPadding}>\r\n                {!withoutRow && <Row>\r\n                    {items}\r\n                </Row>}\r\n                {withoutRow && <div className={classes.withoutRowDiv}>\r\n                    {items}\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default GridListHeader\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridListHeader/GridListHeader.js","import GridListHeader from './GridListHeader'\n\nexport default GridListHeader\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridListHeader/index.js","import React from 'react'\nimport SvgIcon from 'material-ui/SvgIcon'\n\nconst ArrowLeftIcon = (props) => (\n    <SvgIcon {...props}>\n        <path d=\"M22,12A10,10 0 0,0 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12M14,7L9,12L14,17V7Z\" />\n    </SvgIcon>\n)\n\nexport default ArrowLeftIcon\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridListNavPagination/ArrowLeftIcon.js","import React from 'react'\nimport SvgIcon from 'material-ui/SvgIcon'\n\nconst ArrowRightIcon = (props) => (\n    <SvgIcon {...props}>\n        <path d=\"M2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2A10,10 0 0,0 2,12M4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12M10,17L15,12L10,7V17Z\" />\n    </SvgIcon>\n)\n\nexport default ArrowRightIcon\n\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridListNavPagination/ArrowRightIcon.js","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {hashHistory} from 'react-router'\r\nimport {compose, withHandlers} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport SelectField from 'material-ui/SelectField'\r\nimport MenuItem from 'material-ui/MenuItem'\r\nimport ArrowLeftIcon from './ArrowLeftIcon'\r\nimport ArrowRightIcon from './ArrowRightIcon'\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n            color: '#5d6474'\r\n        },\r\n        customWrapper: {\r\n            extend: 'wrapper',\r\n            position: 'absolute',\r\n            right: '30px',\r\n            top: '-52px',\r\n            height: '52px'\r\n        },\r\n\r\n        count: {\r\n            marginRight: '15px',\r\n            height: '54px !important',\r\n            '& > div': {\r\n                fontSize: '13px !important',\r\n                marginTop: '3px !important'\r\n            }\r\n        },\r\n\r\n        nav: {\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n        },\r\n        gridPagination: {\r\n            '& button': {\r\n                padding: '0 !important',\r\n                width: 'inherit !important',\r\n                height: 'inherit !important',\r\n                top: '2px'\r\n            },\r\n            '& button:first-child': {\r\n                padding: '0 5px 0 10px !important'\r\n            }\r\n        }\r\n    }),\r\n    withHandlers({\r\n        onChange: props => (event, index, value) => {\r\n            const {filter} = props\r\n            event.preventDefault()\r\n\r\n            hashHistory.push(filter.createURL({pageSize: value, page: 1}))\r\n        }\r\n    })\r\n)\r\nconst GridListNavPagination = enhance(({classes, onChange, filter, customPagination}) => {\r\n    const prev = filter.prevPage()\r\n    const next = filter.nextPage()\r\n    const firstPage = 1\r\n    const startPage = (filter.getPageRange() * (filter.getCurrentPage() - firstPage)) + firstPage\r\n    const startEnd = filter.getCounts() < (filter.getPageRange() * filter.getCurrentPage()) ? filter.getCounts() : filter.getPageRange() * filter.getCurrentPage()\r\n\r\n    return (\r\n        <div className={customPagination ? classes.customWrapper : classes.wrapper}>\r\n            <div className={classes.count}>\r\n                <SelectField\r\n                    value={filter.getPageRange()}\r\n                    style={{width: '60px', marginTop: '10px'}}\r\n                    underlineStyle={{border: '0px solid'}}\r\n                    onChange={onChange}>\r\n                    <MenuItem value={10} primaryText=\"10\" />\r\n                    <MenuItem value={50} primaryText=\"50\" />\r\n                    <MenuItem value={100} primaryText=\"100\" />\r\n                </SelectField>\r\n            </div>\r\n            <div className={classes.nav}>\r\n                <div>{startPage} - {startEnd} из {filter.getCounts()}</div>\r\n                <div className={classes.gridPagination}>\r\n                    <IconButton\r\n                        disabled={Boolean(!prev)}\r\n                        disableTouchRipple={true}\r\n                        iconStyle={{color: 'rgba(0, 0, 0, 0.56)'}}\r\n                        onTouchTap={() => prev && hashHistory.push(prev)}>\r\n                        <ArrowLeftIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton\r\n                        disabled={Boolean(!next)}\r\n                        disableTouchRipple={true}\r\n                        iconStyle={{color: 'rgba(0, 0, 0, 0.56)'}}\r\n                        onTouchTap={() => next && hashHistory.push(next)}>\r\n                        <ArrowRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nGridListNavPagination.propTypes = {\r\n    filter: PropTypes.object.isRequired\r\n}\r\nGridListNavPagination.defaultProps = {\r\n    customPagination: false\r\n}\r\n\r\nexport default GridListNavPagination\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridListNavPagination/GridListNavPagination.js","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose, withState, withHandlers} from 'recompose'\nimport {hashHistory} from 'react-router'\nimport injectSheet from 'react-jss'\nimport TextField from 'material-ui/TextField'\nimport SearchIcon from 'material-ui/svg-icons/action/search'\nimport IconButton from 'material-ui/IconButton'\n\nconst enhance = compose(\n    injectSheet({\n        search: {\n            position: 'relative',\n            display: 'flex',\n            maxWidth: '300px',\n            margin: '0 auto',\n\n            '& > div': {\n                paddingRight: '35px'\n            }\n        },\n        searchField: {\n            fontSize: '13px !important'\n        },\n        filterEmptySearch: {\n            extend: 'search',\n            margin: '0 0 0 10px'\n        },\n\n        searchButton: {\n            position: 'absolute !important',\n            right: '-10px'\n        }\n    }),\n    withState('search', 'setSearch', ({filter}) => filter.getParam('search')),\n    withHandlers({\n        onSubmit: props => (event) => {\n            const {search, filter} = props\n            event.preventDefault()\n\n            hashHistory.push(filter.createURL({search}))\n        }\n    })\n)\n\nconst GridListNavSearch = enhance(({classes, search, setSearch, onSubmit, filterIsEmpty}) => {\n    return (\n        <form onSubmit={onSubmit}>\n            <div className={filterIsEmpty ? classes.filterEmptySearch : classes.search}>\n                <TextField\n                    fullWidth={true}\n                    hintText=\"Поиск\"\n                    className={classes.searchField}\n                    value={search}\n                    onChange={(event) => setSearch(event.target.value)}\n                />\n                <IconButton\n                    iconStyle={{color: '#ccc'}}\n                    className={classes.searchButton}\n                    onClick={onSubmit}>\n                    <SearchIcon />\n                </IconButton>\n            </div>\n        </form>\n    )\n})\n\nGridListNavSearch.propTypes = {\n    filter: PropTypes.object.isRequired,\n    filterIsEmpty: PropTypes.bool.isRequired\n}\n\nexport default GridListNavSearch\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridListNavSearch/GridListNavSearch.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport injectSheet from 'react-jss'\r\nimport GridListNavPagination from '../GridListNavPagination'\r\nimport GridListNavSearch from '../GridListNavSearch'\r\n\r\nconst GridListNav = ({classes, filter, filterDialog, actions, withoutSearch, customData}) => {\r\n    const selectIsEmpty = _.isEmpty(filter.getSelects())\r\n    const filterIsEmpty = _.isEmpty(filterDialog)\r\n    const listData = _.get(customData, ['listData', 'data'])\r\n    const handleUpdateDialog = _.get(customData, ['dialog', 'handleOpenSetCurrencyDialog'])\r\n    const gridDataId = _.get(customData, 'id')\r\n    const currentCurrency = _.get(_.find(listData, {'id': gridDataId}), 'name')\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div style={{padding: '0 30px'}}>\r\n                {(selectIsEmpty && filterIsEmpty) && <Row>\r\n                    <Col xs={6} style={{display: 'flex', alignItems: 'center'}}>\r\n                        {!withoutSearch && <GridListNavSearch filter={filter} filterIsEmpty={filterIsEmpty}/>}\r\n                        {withoutSearch &&\r\n                        <div className={classes.currencyName}>\r\n                            <span>{currentCurrency}</span>\r\n                            <a onClick={() => {\r\n                                handleUpdateDialog(gridDataId)\r\n                            }} className={classes.link}>Установить курс</a>\r\n                        </div>}\r\n                    </Col>\r\n                    <Col xs={6}>\r\n                        <GridListNavPagination filter={filter}/>\r\n                    </Col>\r\n                </Row>}\r\n\r\n                {(selectIsEmpty && !filterIsEmpty) && <Row>\r\n                    <Col xs={4}>\r\n                        {filterDialog}\r\n                    </Col>\r\n                    <Col xs={4}>\r\n                        {!withoutSearch && <GridListNavSearch filter={filter} filterIsEmpty={filterIsEmpty}/>}\r\n                    </Col>\r\n                    <Col xs={4}>\r\n                        <GridListNavPagination filter={filter}/>\r\n                    </Col>\r\n                </Row>}\r\n\r\n                {!selectIsEmpty && <Row className={classes.action}>\r\n                    <Col xs={1}>\r\n                        {filter.getSelects().length} selected\r\n                    </Col>\r\n                    <Col xs={11} className={classes.actionButtons}>\r\n                        {actions}\r\n                    </Col>\r\n                </Row>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nGridListNav.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    actions: PropTypes.node,\r\n    withoutSearch: PropTypes.bool.isRequired,\r\n    customData: PropTypes.shape({\r\n        dialog: PropTypes.node.isRequired,\r\n        listData: PropTypes.array.isRequired\r\n    }),\r\n    setCurrencyUpdateDialog: PropTypes.shape({\r\n        setCurrencyLoading: PropTypes.bool.isRequired,\r\n        openSetCurrencyDialog: PropTypes.bool.isRequired,\r\n        handleOpenSetCurrencyDialog: PropTypes.func.isRequired,\r\n        handleCloseSetCurrencyDialog: PropTypes.func.isRequired,\r\n        handleSubmitSetCurrencyDialog: PropTypes.func.isRequired\r\n    })\r\n}\r\n\r\nexport default injectSheet({\r\n    wrapper: {\r\n        '& .row': {\r\n            height: '100%'\r\n        },\r\n        '& > div': {\r\n            marginLeft: '0 !important',\r\n            marginRight: '0 !important',\r\n            height: '50px',\r\n            background: '#fff',\r\n            alignItems: 'center',\r\n            padding: '0 5px',\r\n            marginBottom: '50px'\r\n        }\r\n    },\r\n    currencyName: {\r\n        fontWeight: '600',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        width: '100%'\r\n    },\r\n    link: {\r\n        color: '#12aaeb !important',\r\n        fontWeight: '600 !important'\r\n    },\r\n    action: {\r\n        background: '#ccc !important'\r\n    },\r\n    actionButtons: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end'\r\n    }\r\n})(GridListNav)\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridListNav/GridListNav.js","import GridListBody from './GridListNav'\n\nexport default GridListBody\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridListNav/index.js","import _ from 'lodash'\r\nimport {compose} from 'recompose'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport injectSheet from 'react-jss'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport Paper from 'material-ui/Paper'\r\nimport GridListNav from '../GridListNav'\r\nimport GridListHeader from '../GridListHeader'\r\nimport GridListBody from '../GridListBody'\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            position: 'relative',\r\n            width: '100%'\r\n        },\r\n        header: {\r\n            height: '100px'\r\n        },\r\n\r\n        loader: {\r\n            background: '#fff',\r\n            height: '400px',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        }\r\n    })\r\n)\r\n\r\nconst GridList = enhance((props) => {\r\n    const {classes, list, customData, detail, filter, filterDialog, actionsDialog, withoutCheckboxes, withoutRow, withoutSearch} = props\r\n    const header = _.get(list, 'header')\r\n    const listItems = _.get(list, 'list')\r\n    const loading = _.get(list, 'loading')\r\n    const listIds = _.map(listItems, item => _.toInteger(_.get(item, 'key')))\r\n    const loaderOrList = (listLoading) => {\r\n        if (listLoading) {\r\n            return (\r\n                <Paper zDepth={1} className={classes.loader}>\r\n                    <CircularProgress size={40} thickness={4} />\r\n                </Paper>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <GridListBody\r\n                filter={filter}\r\n                list={listItems}\r\n                detail={detail}\r\n                withoutCheckboxes={withoutCheckboxes}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <Paper zDepth={1} className={classes.header}>\r\n                <GridListNav\r\n                    filter={filter}\r\n                    customData={customData}\r\n                    filterDialog={filterDialog}\r\n                    actions={actionsDialog}\r\n                    withoutSearch={withoutSearch}\r\n                />\r\n                <GridListHeader\r\n                    filter={filter}\r\n                    listIds={listIds}\r\n                    withoutCheckboxes={withoutCheckboxes}\r\n                    withoutRow={withoutRow}\r\n                    column={header}\r\n                />\r\n            </Paper>\r\n            {loaderOrList(loading)}\r\n        </div>\r\n    )\r\n})\r\n\r\nGridList.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    withoutCheckboxes: PropTypes.bool,\r\n    withoutSearch: PropTypes.bool,\r\n    withoutRow: PropTypes.bool,\r\n    list: PropTypes.shape({\r\n        header: PropTypes.array.isRequired,\r\n        list: PropTypes.array.isRequired,\r\n        loading: PropTypes.bool.isRequired\r\n    }),\r\n    customData: PropTypes.shape({\r\n        dialog: PropTypes.node.isRequired,\r\n        listData: PropTypes.array.isRequired\r\n    }),\r\n    detail: PropTypes.node.isRequired,\r\n    actionsDialog: PropTypes.node,\r\n    filterDialog: PropTypes.node\r\n}\r\n\r\nGridList.defaultProps = {\r\n    withoutCheckboxes: false,\r\n    withoutSearch: false,\r\n    actionsDialog: (<div>no</div>)\r\n}\r\n\r\nexport default GridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridList/GridList.js","import GridList from './GridList'\n\nexport default GridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridList/index.js","import _ from 'lodash'\r\nimport moment from 'moment'\r\nimport filterHelper from '../../helpers/filter'\r\nimport {compose, withState, withHandlers} from 'recompose'\r\nimport React from 'react'\r\nimport injectSheet from 'react-jss'\r\nimport SideBarMenu from '../SidebarMenu'\r\nimport SnakeBar from '../Snackbar'\r\nimport {connect} from 'react-redux'\r\nimport ConfirmDialog from '../ConfirmDialog'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport Paper from 'material-ui/Paper'\r\nimport Money from 'material-ui/svg-icons/editor/attach-money'\r\nimport Clear from 'material-ui/svg-icons/action/delete'\r\nimport Storehouse from 'material-ui/svg-icons/action/home'\r\nimport Balance from 'material-ui/svg-icons/action/account-balance-wallet'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport {\r\n    notificationListFetchAction,\r\n    notificationDeleteAction,\r\n    notificationGetNotViewed\r\n} from '../../actions/notifications'\r\nimport {openSnackbarAction} from '../../actions/snackbar'\r\nimport NotFound from '../Images/not-found.png'\r\n\r\nconst iconStyle = {\r\n    icon: {\r\n        color: '#fff',\r\n        width: 22,\r\n        height: 22\r\n    },\r\n    button: {\r\n        width: 48,\r\n        height: 48,\r\n        padding: 0\r\n    }\r\n}\r\nconst moneyIcon = '#64b5f6'\r\nconst balanceIcon = '#4db6ac'\r\nconst storeIcon = '#f06292'\r\nconst ZERO = 0\r\n\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const filter = filterHelper(pathname, query)\r\n        const notificationsList = _.get(state, ['notifications', 'list', 'data', 'results'])\r\n        const notificationsLoading = _.get(state, ['notifications', 'list', 'loading'])\r\n\r\n        return {\r\n            filter,\r\n            notificationsList,\r\n            notificationsLoading\r\n        }\r\n    }),\r\n    withState('openConfirmDialog', 'setOpenConfirmDialog', false),\r\n    withState('notificationId', 'setNotificationId', null),\r\n    withState('openNotifications', 'setOpenNotifications', false),\r\n    withState('clickNotifications', 'setClickNotifications', false),\r\n\r\n    withHandlers({\r\n        handleOpenConfirmDialog: props => (id) => {\r\n            const {setOpenConfirmDialog, setNotificationId} = props\r\n            setOpenConfirmDialog(true)\r\n            setNotificationId(id)\r\n        },\r\n\r\n        handleCloseConfirmDialog: props => () => {\r\n            const {setOpenConfirmDialog} = props\r\n            setOpenConfirmDialog(false)\r\n        },\r\n        handleSendConfirmDialog: props => () => {\r\n            const {dispatch, setOpenConfirmDialog, notificationId} = props\r\n            dispatch(notificationDeleteAction(notificationId))\r\n                .catch(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\r\n                })\r\n                .then(() => {\r\n                    setOpenConfirmDialog(false)\r\n                    dispatch(notificationListFetchAction())\r\n                })\r\n        },\r\n\r\n        handleOpenNotificationBar: props => (status) => {\r\n            const {setOpenNotifications, dispatch} = props\r\n            setOpenNotifications(status)\r\n            if (status) {\r\n                dispatch(notificationListFetchAction())\r\n            } else {\r\n                dispatch(notificationGetNotViewed())\r\n            }\r\n        }\r\n\r\n    }),\r\n    injectSheet({\r\n        wrapper: {\r\n            height: '100%',\r\n            width: '100%',\r\n            display: 'flex'\r\n        },\r\n        sidenav: {\r\n            width: '84px',\r\n            zIndex: '6'\r\n        },\r\n        content: {\r\n            background: '#f2f5f8',\r\n            width: 'calc(100% - 140px)',\r\n            padding: '0 28px 28px',\r\n            overflow: 'auto'\r\n        },\r\n        notifications: {\r\n            background: 'rgba(0,0,0,0.3)',\r\n            position: 'fixed',\r\n            top: '0',\r\n            left: '0',\r\n            width: '100%',\r\n            height: '100%',\r\n            zIndex: '5'\r\n        },\r\n        notificationsWrapper: {\r\n            background: '#fff',\r\n            color: '#333 !important',\r\n            position: 'absolute',\r\n            left: '84px',\r\n            top: '0',\r\n            bottom: '0',\r\n            width: '400px'\r\n        },\r\n        header: {\r\n            background: '#495061',\r\n            color: '#fff',\r\n            fontSize: '15px',\r\n            fontWeight: '600',\r\n            padding: '0 20px',\r\n            height: '70px',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between'\r\n        },\r\n        notifBody: {\r\n            overflowY: 'auto',\r\n            height: 'calc(100% - 70px)'\r\n        },\r\n        notif: {\r\n            padding: '10px 20px',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n            borderBottom: '1px #efefef solid',\r\n            cursor: 'pointer',\r\n            '& .notifIcon': {\r\n                display: 'flex',\r\n                position: 'relative',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                width: '36px',\r\n                height: '20.78px',\r\n                backgroundColor: '#dadada',\r\n                margin: '10.39px 0',\r\n                '&:before': {\r\n                    content: '\"\"',\r\n                    position: 'absolute',\r\n                    width: '0',\r\n                    borderLeft: '18px solid transparent',\r\n                    borderRight: '18px solid transparent',\r\n                    bottom: '100%',\r\n                    left: '0',\r\n                    borderBottom: '10.39px solid #dadada'\r\n                },\r\n                '&:after': {\r\n                    content: '\"\"',\r\n                    position: 'absolute',\r\n                    width: '0',\r\n                    borderLeft: '18px solid transparent',\r\n                    borderRight: '18px solid transparent',\r\n                    top: '100%',\r\n                    left: '0',\r\n                    borderTop: '10.39px solid #dadada'\r\n                },\r\n                '& svg': {\r\n                    width: '17px !important',\r\n                    height: '17px !important',\r\n                    color: '#fff !important'\r\n                }\r\n            },\r\n            '& .notifIcon.money': {\r\n                backgroundColor: moneyIcon,\r\n                '&:before': {\r\n                    borderBottomColor: moneyIcon\r\n                },\r\n                '&:after': {\r\n                    borderTopColor: moneyIcon\r\n                }\r\n            },\r\n            '& .notifIcon.balance': {\r\n                backgroundColor: balanceIcon,\r\n                '&:before': {\r\n                    borderBottomColor: balanceIcon\r\n                },\r\n                '&:after': {\r\n                    borderTopColor: balanceIcon\r\n                }\r\n            },\r\n            '& .notifIcon.store': {\r\n                backgroundColor: storeIcon,\r\n                '&:before': {\r\n                    borderBottomColor: storeIcon\r\n                },\r\n                '&:after': {\r\n                    borderTopColor: storeIcon\r\n                }\r\n            }\r\n        },\r\n        notifContent: {\r\n            flexBasis: '250px'\r\n        },\r\n        notifTitle: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            fontWeight: '600',\r\n            marginBottom: '5px',\r\n            '& span': {\r\n                fontSize: '11px !important',\r\n                fontWeight: 'normal',\r\n                color: '#999'\r\n            }\r\n        },\r\n        loading: {\r\n            textAlign: 'center !important',\r\n            top: '40% !important',\r\n            position: 'relative !important'\r\n        },\r\n        emptyQuery: {\r\n            background: 'url(' + NotFound + ') no-repeat center center',\r\n            backgroundSize: '215px',\r\n            padding: '215px 0 0',\r\n            textAlign: 'center',\r\n            color: '#999'\r\n        }\r\n    })\r\n)\r\nconst Layout = enhance((props) => {\r\n    const {\r\n        classes,\r\n        handleSignOut,\r\n        children,\r\n        notificationId,\r\n        openNotifications,\r\n        setClickNotifications,\r\n        notificationsList,\r\n        notificationsLoading\r\n    } = props\r\n\r\n    const notificationData = {\r\n        open: props.openConfirmDialog,\r\n        notificationsId: props.notificationsId,\r\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\r\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\r\n        handleSendConfirmDialog: props.handleSendConfirmDialog,\r\n        handleOpenNotificationBar: props.handleOpenNotificationBar\r\n    }\r\n    const notificationListExp = _.map(notificationsList, (item) => {\r\n        const id = _.get(item, 'id')\r\n        const title = _.get(item, 'title')\r\n        const text = _.get(item, 'text')\r\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\r\n        const viewed = _.get(item, 'viewed')\r\n        const template = _.get(item, ['template', 'name']) === 'accountant'\r\n            ? <div className=\"notifIcon balance\"><Balance/></div>\r\n            : (_.get(item, ['template', 'name']) === 'order'\r\n                    ? <div className=\"notifIcon money\"><Money/></div>\r\n                    : (_.get(item, ['template', 'name']) === 'supply'\r\n                        ? <div className=\"notifIcon store\"><Storehouse/></div>\r\n                        : <div className=\"notifIcon store\"><Storehouse/></div>)\r\n            )\r\n\r\n        return (\r\n            <div key={id} className={classes.notif} onClick={() => {\r\n                setClickNotifications(true)\r\n            }} style={viewed ? {opacity: '0.5'} : {opacity: '1'}}>\r\n                {template}\r\n                <div className={classes.notifContent}>\r\n                    <div className={classes.notifTitle}>\r\n                        <div>{title}</div>\r\n                        <span>{createdDate}</span>\r\n                    </div>\r\n                    <div className=\"notificationText\">\r\n                        {text}\r\n                    </div>\r\n                </div>\r\n                <IconButton\r\n                    iconStyle={iconStyle.icon}\r\n                    style={iconStyle.button}\r\n                    onTouchTap={ () => {\r\n                        notificationData.handleOpenConfirmDialog(id)\r\n                    }}\r\n                >\r\n                    <Clear color=\"#dadada\"/>\r\n                </IconButton>\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.notifications} style={openNotifications ? {} : {display: 'none'}}>\r\n                <Paper className={classes.notificationsWrapper} zDepth={4}>\r\n                    <div className={classes.header}>\r\n                        <div>Уведомления test33</div>\r\n                        <div>\r\n                            <IconButton\r\n                                iconStyle={iconStyle.icon}\r\n                                style={iconStyle.button}\r\n                                onTouchTap={() => {\r\n                                    notificationData.handleOpenNotificationBar(false)\r\n                                }}>\r\n                                <CloseIcon2 color=\"#fff\"/>\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.notifBody}>\r\n                        {\r\n                            notificationsLoading ? <div className={classes.loading}>\r\n                                <CircularProgress size={40} thickness={4}/>\r\n                            </div>\r\n                                : (notificationListExp.length > ZERO ? notificationListExp\r\n                                : <div className={classes.emptyQuery}>\r\n                                    <div>По вашему запросу ничего не найдено</div>\r\n                                </div>)\r\n                        }\r\n                    </div>\r\n                </Paper>\r\n            </div>\r\n            <div className={classes.sidenav}>\r\n                <SideBarMenu handleSignOut={handleSignOut}\r\n                             handleOpenNotificationBar={notificationData.handleOpenNotificationBar}/>\r\n            </div>\r\n            <div className={classes.content}>\r\n                {children}\r\n            </div>\r\n\r\n            <SnakeBar />\r\n            {notificationsList && <ConfirmDialog\r\n                type=\"delete\"\r\n                message={_.get(_.find(notificationsList, {'id': notificationId}), 'title')}\r\n                onClose={notificationData.handleCloseConfirmDialog}\r\n                onSubmit={notificationData.handleSendConfirmDialog}\r\n                open={notificationData.open}\r\n            />}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Layout\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Layout/Layout.js","import React from 'react'\r\n\r\nconst LinearProgress = (props) => {\r\n    return (\r\n        <div {...props} className=\"progress\">\r\n            <div className=\"indeterminate\"></div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default LinearProgress\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/LinearProgress/LinearProgress.js","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {ManufactureSearchField} from '../ReduxForm'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport validate from '../../helpers/validate'\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        },\r\n        titleContent: {\r\n            background: '#fff',\r\n            color: '#333',\r\n            fontWeight: 'bold',\r\n            textTransform: 'uppercase',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            borderBottom: '1px solid #efefef',\r\n            padding: '20px 30px',\r\n            zIndex: '999',\r\n            '& button': {\r\n                right: '13px',\r\n                padding: '0 !important',\r\n                position: 'absolute !important'\r\n            }\r\n        }\r\n    }),\r\n    reduxForm({\r\n        form: 'ChangeManufactureForm',\r\n        enableReinitialize: true\r\n    })\r\n)\r\n\r\nconst ManufactureChange = enhance((props) => {\r\n    const {open, handleSubmit, loading, onClose, classes, error} = props\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            className={classes.dialog}\r\n            contentStyle={loading ? {width: '135px'} : {width: '600px'}}\r\n            bodyClassName={classes.popUp}>\r\n            <form onSubmit={onSubmit} className={classes.form}>\r\n                <div className={classes.titleContent}>\r\n                    <span>Изменение производитель</span>\r\n                    <IconButton onTouchTap={onClose}>\r\n                        <CloseIcon2 color=\"#666666\"/>\r\n                    </IconButton>\r\n                </div>\r\n                {error && <div className={classes.error}>Ошибка: {error}</div>}\r\n                <div>\r\n                    <Field\r\n                        name=\"manufacture\"\r\n                        label=\"Производство\"\r\n                        className={classes.inputFieldCustom}\r\n                        component={ManufactureSearchField}\r\n                        fullWidth={true}/>\r\n                </div>\r\n                <div className={classes.bottomButton}>\r\n                    <FlatButton\r\n                        label=\"Сохранить\"\r\n                        className={classes.actionButton}\r\n                        primary={true}\r\n                        type=\"submit\"\r\n                    />\r\n                </div>\r\n            </form>\r\n        </Dialog>\r\n    )\r\n})\r\n\r\nManufactureChange.propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func,\r\n    loading: PropTypes.bool\r\n}\r\n\r\nManufactureChange.defaultProps = {\r\n    isUpdate: false\r\n}\r\n\r\nexport default ManufactureChange\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Manufacture/ManufactureChangeDialog.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport {Col} from 'react-flexbox-grid'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\r\nimport ContentAdd from 'material-ui/svg-icons/content/add'\r\nimport Map from 'material-ui/svg-icons/maps/map'\r\nimport Tooltip from '../ToolTip'\r\nimport NotFound from '../Images/not-found.png'\r\n\r\nconst ZERO = 0\r\nconst iconStyle = {\r\n    icon: {\r\n        color: '#666',\r\n        width: 20,\r\n        height: 20\r\n    },\r\n    addButton: {\r\n        borderRadius: '50%',\r\n        background: '#666666',\r\n        height: 24,\r\n        width: 24,\r\n        padding: '2px 0 0 0'\r\n    },\r\n    button: {\r\n        width: 48,\r\n        height: 48,\r\n        padding: 0\r\n    }\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        dottedList: {\r\n            padding: '20px 0'\r\n        },\r\n        wrapper: {\r\n            width: '100%'\r\n        },\r\n        loader: {\r\n            width: '100%',\r\n            background: '#fff',\r\n            height: '200px',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        },\r\n        title: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            height: '65px',\r\n            padding: '0 30px',\r\n            borderBottom: '1px #efefef solid'\r\n        },\r\n        titleLabel: {\r\n            fontSize: '18px',\r\n            color: '#333',\r\n            fontWeight: '700',\r\n            cursor: 'pointer'\r\n        },\r\n        materialsList: {\r\n            padding: '0 30px'\r\n        },\r\n        rawMaterials: {\r\n            '& .dottedList': {\r\n                padding: '10px 0'\r\n            },\r\n            '& .dottedList:last-child:after': {\r\n                backgroundImage: 'none'\r\n            }\r\n        },\r\n        titleButtons: {\r\n            display: 'flex',\r\n            justifyContent: 'flex-end',\r\n            '& svg': {\r\n                color: '#fff !important'\r\n            }\r\n        },\r\n        listButtons: {\r\n            display: 'flex',\r\n            justifyContent: 'flex-end',\r\n            '& button': {\r\n                height: '20px !important',\r\n                width: '25px !important'\r\n            }\r\n        },\r\n        emptyQuery: {\r\n            background: 'url(' + NotFound + ') no-repeat center center',\r\n            backgroundSize: '285px',\r\n            padding: '260px 0 0',\r\n            textAlign: 'center',\r\n            fontSize: '15px',\r\n            color: '#666',\r\n            '& svg': {\r\n                width: '50px !important',\r\n                height: '50px !important',\r\n                color: '#999 !important'\r\n            }\r\n        }\r\n    }),\r\n)\r\n\r\nconst ManufactureDetails = enhance((props) => {\r\n    const {\r\n        classes,\r\n        loading,\r\n        data,\r\n        handleOpenEditMaterials,\r\n        handleOpenConfirmDialog,\r\n        productTitle,\r\n        createMaterials,\r\n        handleDeleteAllIngredient,\r\n        handleOpenChangeManufacture,\r\n        handleCloseDetail\r\n    } = props\r\n\r\n    const id = _.get(data, 'id')\r\n    if (loading) {\r\n        return (\r\n            <div className={classes.loader}>\r\n                <div>\r\n                    <CircularProgress size={40} thickness={4}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    const ingredientList = _.map(_.get(data, 'ingredient'), (item) => {\r\n        const itemId = _.get(item, 'id')\r\n        const ingredient = _.get(item, ['ingredient', 'name'])\r\n        const amount = _.get(item, 'amount')\r\n        const measurement = _.get(item, ['ingredient', 'measurement', 'name'])\r\n        return (\r\n            <li key={itemId} className=\"dottedList\">\r\n                <Col xs={7}>{ingredient}</Col>\r\n                <Col xs={3}>{amount} {measurement}</Col>\r\n                <Col xs={2}>\r\n                    <div className={classes.listButtons}>\r\n                        <Tooltip position=\"bottom\" text=\"Изменить\">\r\n                            <IconButton\r\n                                iconStyle={iconStyle.icon}\r\n                                style={iconStyle.button}\r\n                                touch={true}\r\n                                onClick={() => {\r\n                                    handleOpenEditMaterials(itemId)\r\n                                }}>\r\n                                <ModEditorIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip position=\"bottom\" text=\"Удалить\">\r\n                            <IconButton\r\n                                iconStyle={iconStyle.icon}\r\n                                style={iconStyle.button}\r\n                                touch={true}\r\n                                onClick={() => {\r\n                                    handleOpenConfirmDialog(itemId)\r\n                                }}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </div>\r\n                </Col>\r\n            </li>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div key={id} className={classes.wrapper}>\r\n            <div className={classes.title}>\r\n                <div className={classes.titleLabel}\r\n                     onTouchTap={handleCloseDetail}>{productTitle}</div>\r\n                <div className={classes.titleButtons}>\r\n                    <Tooltip position=\"bottom\" text=\"Изменение производитель\">\r\n                        <IconButton\r\n                            iconStyle={iconStyle.icon}\r\n                            style={iconStyle.addButton}\r\n                            onClick={handleOpenChangeManufacture}>\r\n                            <Map />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip position=\"bottom\" text=\"Удалить продукт\">\r\n                        <IconButton\r\n                            iconStyle={iconStyle.icon}\r\n                            style={iconStyle.addButton}\r\n                            onClick={() => { handleDeleteAllIngredient(id) }}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip position=\"bottom\" text=\"Добавить сырье\">\r\n                        <IconButton\r\n                            iconStyle={iconStyle.icon}\r\n                            style={iconStyle.addButton} onClick={ createMaterials.handleOpen }>\r\n                            <ContentAdd />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </div>\r\n            </div>\r\n            <div className={classes.materialsList}>\r\n                {ingredientList.length > ZERO\r\n                    ? <div>\r\n                        <ul className={classes.rawMaterials}>\r\n                            <li key={id} className=\"dottedList\">\r\n                                <Col xs={7}>\r\n                                    <strong>Сырье</strong>\r\n                                </Col>\r\n                                <Col xs={3}>\r\n                                    <strong>Обьем</strong>\r\n                                </Col>\r\n                            </li>\r\n                            {ingredientList}\r\n                        </ul>\r\n                    </div>\r\n                    : <div className={classes.emptyQuery}>\r\n                        <div>По вашему запросу ничего не найдено</div>\r\n                    </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nManufactureDetails.propTypes = {\r\n    handleOpenEditMaterials: PropTypes.func.isRequired,\r\n    handleOpenConfirmDialog: PropTypes.func.isRequired,\r\n    handleOpenChangeManufacture: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ManufactureDetails\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Manufacture/ManufactureDetails.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Row} from 'react-flexbox-grid'\r\nimport injectSheet from 'react-jss'\r\nimport {compose} from 'recompose'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport ManufactureAddStaffDialog from './ManufactureAddStaffDialog'\r\nimport ManufactureShowBom from './ManufactureShowBom'\r\nimport ManufactureChangeDialog from './ManufactureChangeDialog'\r\nimport ManufactureAddProductDialog from './ManufactureAddProductDialog'\r\nimport ManufactureEditProductDialog from './ManufactureEditProductDialog'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport Container from '../Container'\r\nimport Paper from 'material-ui/Paper'\r\nimport SubMenu from '../SubMenu'\r\nimport ManufactureTab from './ManufactureTab'\r\nimport ConfirmDialog from '../ConfirmDialog'\r\nimport Glue from '../Images/glue.png'\r\nimport Cylindrical from '../Images/cylindrical.png'\r\nimport Press from '../Images/press.png'\r\nimport Cut from '../Images/cut.png'\r\nimport Badge from '../Images/badge.png'\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        addButton: {\r\n            '& button': {\r\n                backgroundColor: '#275482 !important'\r\n            }\r\n        },\r\n        addButtonWrapper: {\r\n            position: 'absolute',\r\n            top: '10px',\r\n            right: '0',\r\n            marginBottom: '0px'\r\n        },\r\n        productionMainRow: {\r\n            margin: '0 -28px',\r\n            height: 'calc(100vh - 60px)'\r\n        },\r\n        productionLeftSide: {\r\n            padding: '0',\r\n            flexBasis: '25%',\r\n            maxWidth: '25%'\r\n        },\r\n        productionRightSide: {\r\n            background: '#fff',\r\n            padding: '0 30px',\r\n            '& .row:first-child img': {\r\n                width: '18px',\r\n                height: '18px',\r\n                marginRight: '10px'\r\n            }\r\n        },\r\n        productionUl: {\r\n            listStyle: 'none',\r\n            margin: '0',\r\n            padding: '0',\r\n            minHeight: 'calc(100% - 59px)',\r\n            borderRight: '1px #efefef solid'\r\n        },\r\n        productionStaffUl: {\r\n            extend: 'productionUl',\r\n            '& .dottedList': {\r\n                margin: '0',\r\n                padding: '10px 0 10px 0',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                position: 'relative',\r\n                '& div:first-child': {\r\n                    width: '30px',\r\n                    height: '30px',\r\n                    display: 'inline-block',\r\n                    borderRadius: '50%',\r\n                    marginRight: '10px',\r\n                    overflow: 'hidden'\r\n                },\r\n                '& div:first-child img': {\r\n                    width: '30px'\r\n                },\r\n                '& div:last-child': {\r\n                    display: 'inline-block',\r\n                    verticalAlign: 'top'\r\n                },\r\n                '& div:last-child span': {\r\n                    color: '#666'\r\n                }\r\n            },\r\n            '& .dottedList:last-child:after': {\r\n                content: '\"\"',\r\n                backgroundImage: 'none'\r\n            }\r\n        },\r\n        productionTypeLi: {\r\n            background: '#f2f5f8',\r\n            margin: '0',\r\n            padding: '15px 30px',\r\n            borderBottom: '1px solid #efefef',\r\n            display: 'flex',\r\n            position: 'relative',\r\n            alignItems: 'center',\r\n            cursor: 'pointer',\r\n            transition: 'all 0.3s ease',\r\n            '& img': {\r\n                width: '24px',\r\n                height: '24px',\r\n                marginRight: '10px'\r\n            }\r\n        },\r\n        productionH2: {\r\n            fontSize: '13px',\r\n            fontWeight: 'bold',\r\n            margin: '0',\r\n            padding: '20px 30px'\r\n        },\r\n        productionRightH2: {\r\n            fontSize: '13px',\r\n            fontWeight: '800',\r\n            margin: '0',\r\n            borderBottom: '1px solid #efefef',\r\n            padding: '20px 0',\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n        },\r\n\r\n        productionStaffGroupTitle: {\r\n            margin: '0',\r\n            '& .dottedList': {\r\n                padding: '20px 0 10px',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                '& p': {\r\n                    margin: '0',\r\n                    fontWeight: '600 !important'\r\n                },\r\n                '& span': {\r\n                    color: '#999',\r\n                    fontSize: '12px !important'\r\n                }\r\n            }\r\n        },\r\n        productList: {\r\n            width: '100%',\r\n            '& li': {\r\n                width: '100%',\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n                alignItems: 'center',\r\n                padding: '10px 0'\r\n            },\r\n            '& .dottedList:last-child:after': {\r\n                content: '\"\"',\r\n                backgroundImage: 'none'\r\n            },\r\n            '& .dottedList:after': {\r\n                left: '0.7em',\r\n                right: '0.7em'\r\n            }\r\n        },\r\n        deleteHideIco: {\r\n            display: 'none',\r\n            position: 'absolute',\r\n            right: '0'\r\n        },\r\n        productionEquipment: {\r\n            padding: '20px 0',\r\n            borderBottom: '1px solid #efefef'\r\n        },\r\n        productionEquipmentElement: {\r\n            background: '#f2f5f8',\r\n            textAlign: 'center',\r\n            padding: '20px 30px'\r\n        },\r\n        workerWrap: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            padding: '10px 0',\r\n            position: 'relative',\r\n            '&:hover > div:last-child': {\r\n                display: 'flex'\r\n            }\r\n        },\r\n        workerAvatar: {\r\n            width: '30px',\r\n            height: '30px',\r\n            borderRadius: '50%',\r\n            marginRight: '10px',\r\n            overflow: 'hidden',\r\n            '& img': {\r\n                width: '100%',\r\n                height: '100%'\r\n            }\r\n        },\r\n        workerPosition: {\r\n            '& span': {\r\n                display: 'block',\r\n                color: '#666',\r\n                fontSize: '11px !important'\r\n            }\r\n        },\r\n        tabNav: {\r\n            padding: '15px 0',\r\n            borderBottom: '1px #f2f5f8 solid',\r\n            '& a': {\r\n                margin: '-15px 0',\r\n                padding: '15px 0',\r\n                marginRight: '40px',\r\n                color: '#9b9b9b',\r\n                '&.active': {\r\n                    color: '#12aaeb',\r\n                    borderBottom: '1px solid'\r\n                }\r\n            }\r\n        },\r\n        tabContent: {\r\n            '& .row:first-child': {\r\n                fontWeight: '600'\r\n            },\r\n            '& .row': {\r\n                '& > div:first-child': {\r\n                    textAlign: 'left'\r\n                }\r\n            }\r\n        },\r\n        tabWrapper: {\r\n            overflowY: 'auto',\r\n            overflowX: 'hidden',\r\n            height: 'calc(100vh - 120px)'\r\n        },\r\n        tableHeaderPN: {\r\n            width: '100%',\r\n            display: 'flex',\r\n            borderBottom: '1px solid #efefef',\r\n            height: '60px',\r\n            alignItems: 'center'\r\n        }\r\n    })\r\n)\r\n\r\nconst ManufactureGridList = enhance((props) => {\r\n    const {\r\n        listData,\r\n        detailData,\r\n        showBom,\r\n        classes,\r\n        equipmentData,\r\n        editMaterials,\r\n        createMaterials,\r\n        productData,\r\n        tabData,\r\n        productFilterDialog,\r\n        personData,\r\n        shipmentData,\r\n        deleteMaterials\r\n    } = props\r\n\r\n    const detailId = _.get(detailData, 'id')\r\n    const glue = 3\r\n    const cylindrical = 4\r\n    const press = 6\r\n    const cut = 7\r\n    const badge = 8\r\n    const manufactureList = _.map(_.get(listData, 'data'), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const name = _.get(item, 'name')\r\n        return (\r\n            <li key={id} className={classes.productionTypeLi}\r\n                onClick={() => {\r\n                    listData.handleClickItem(id)\r\n                }}\r\n                style={ detailId === id ? {backgroundColor: 'white'} : {}}>\r\n                { id === glue ? <img src={Glue}/> : (\r\n                    id === cylindrical ? <img src={Cylindrical}/> : (\r\n                        id === press ? <img src={Press}/> : (\r\n                            id === cut ? <img src={Cut}/> : (\r\n                                id === badge ? <img src={Badge}/> : '')\r\n                        )\r\n                    )\r\n                )}\r\n\r\n                {name}\r\n            </li>\r\n        )\r\n    })\r\n    const ZERO = 0\r\n\r\n    const productConfirm = _.get(productData, 'confirmDialog')\r\n    const productCreate = _.get(productData, 'createDialog')\r\n    const userCreate = _.get(personData, 'createDialog')\r\n    const userUpdate = _.get(personData, 'updateDialog')\r\n    const userConfirm = _.get(personData, 'confirmDialog')\r\n    const productName = _.get(_.find(_.get(productData, 'productList'), {'id': _.toInteger(_.get(productData, ['detailData', 'id']))}), 'name')\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.MANUFACTURE_CUSTOM_URL}/>\r\n            <ManufactureAddStaffDialog\r\n                open={userCreate.open}\r\n                onClose={userCreate.handleCloseDialog}\r\n                onSubmit={userCreate.handleSubmitDialog}\r\n            />\r\n            <ManufactureAddStaffDialog\r\n                isUpdate={true}\r\n                initialValues={userUpdate.initialValues}\r\n                open={userUpdate.open}\r\n                onClose={userUpdate.handleCloseUpdateDialog}\r\n                onSubmit={userUpdate.handleSubmitUpdateDialog}\r\n            />\r\n            <ManufactureShowBom\r\n                open={showBom.open}\r\n                onClose={showBom.handleClose}\r\n\r\n            />\r\n            <ManufactureAddProductDialog\r\n                open={productCreate.open}\r\n                onClose={productCreate.handleCloseCreateDialog}\r\n                onSubmit={productCreate.handleSubmitCreateDialog}\r\n            />\r\n            <ManufactureEditProductDialog\r\n                open={createMaterials.open}\r\n                onClose={createMaterials.handleClose}\r\n                onSubmit={createMaterials.handleSubmit}\r\n            />\r\n            <ManufactureEditProductDialog\r\n                isUpdate={true}\r\n                initialValues={editMaterials.initialValues}\r\n                measurement={editMaterials.measurement}\r\n                open={editMaterials.open}\r\n                onClose={editMaterials.handleClose}\r\n                onSubmit={editMaterials.handleSubmit}\r\n            />\r\n            <ManufactureChangeDialog\r\n                open={_.get(productData, ['changeManufacture', 'open'])}\r\n                onClose={_.get(productData, ['changeManufacture', 'handleCloseChangeManufacture'])}\r\n                onSubmit={_.get(productData, ['changeManufacture', 'handleSubmitChangeManufacture'])}\r\n            />\r\n\r\n            <Row className={classes.productionMainRow}>\r\n                <div className={classes.productionLeftSide}>\r\n                    <h2 className={classes.productionH2}>Этапы производства</h2>\r\n                    <Paper zDepth={2} style={{height: 'calc(100% - 59px)'}}>\r\n                        <ul className={classes.productionUl}>\r\n                            {\r\n                                _.get(listData, 'listLoading')\r\n                                    ? <div style={{textAlign: 'center'}}>\r\n                                    <CircularProgress size={40} thickness={4}/>\r\n                                </div>\r\n                                    : manufactureList\r\n                            }\r\n                        </ul>\r\n                    </Paper>\r\n                </div>\r\n\r\n                <ManufactureTab\r\n                    tabData={tabData}\r\n                    editMaterials={editMaterials}\r\n                    createMaterials={createMaterials}\r\n                    deleteMaterials={deleteMaterials}\r\n                    productData={productData}\r\n                    personData={personData}\r\n                    equipmentData={equipmentData}\r\n                    shipmentData={shipmentData}\r\n                    productFilterDialog={productFilterDialog}\r\n                    handleCloseDetail={_.get(detailData, 'handleCloseDetail')}/>\r\n            </Row>\r\n\r\n            {_.get(deleteMaterials, 'open') !== false && <ConfirmDialog\r\n                type=\"delete\"\r\n                open={deleteMaterials.open}\r\n                message={_.get(deleteMaterials, 'name')}\r\n                onClose={deleteMaterials.handleCloseConfirmDialog}\r\n                onSubmit={deleteMaterials.handleSendConfirmDialog}\r\n            />}\r\n            {_.get(productData, ['detailData', 'id']) > ZERO && <ConfirmDialog\r\n                type=\"delete\"\r\n                message={productName}\r\n                onClose={productConfirm.handleCloseConfirmDialog}\r\n                onSubmit={productConfirm.handleSendConfirmDialog}\r\n                open={productConfirm.openConfirmDialog}\r\n            />}\r\n            {_.get(personData, 'userShiftItem') && <ConfirmDialog\r\n                type=\"delete\"\r\n                message={_.get(_.get(personData, ['userShiftItem', 'user']), 'firstName') +\r\n                ' ' + _.get(_.get(personData, ['userShiftItem', 'user']), 'secondName')}\r\n                onClose={userConfirm.handleCloseConfirmDialog}\r\n                onSubmit={userConfirm.handleSendConfirmDialog}\r\n                open={userConfirm.open}\r\n            />}\r\n        </Container>\r\n    )\r\n})\r\n\r\nManufactureGridList.propTypes = {\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object,\r\n    showBom: PropTypes.shape({\r\n        open: PropTypes.bool.isRequired,\r\n        handleOpen: PropTypes.func.isRequired,\r\n        handleClose: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    productData: PropTypes.object.isRequired,\r\n    personData: PropTypes.object.isRequired,\r\n    equipmentData: PropTypes.object,\r\n    tabData: PropTypes.object.isRequired,\r\n    productFilterDialog: PropTypes.shape({\r\n        initialValues: PropTypes.object,\r\n        filterLoading: PropTypes.bool,\r\n        openFilterDialog: PropTypes.bool.isRequired,\r\n        handleOpenFilterDialog: PropTypes.func.isRequired,\r\n        handleCloseFilterDialog: PropTypes.func.isRequired,\r\n        handleSubmitFilterDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    createMaterials: PropTypes.shape({\r\n        open: PropTypes.bool.isRequired,\r\n        handleOpen: PropTypes.func.isRequired,\r\n        handleClose: PropTypes.func.isRequired,\r\n        handleSubmit: PropTypes.func.isRequired\r\n    }),\r\n    updateProductDialog: PropTypes.object\r\n}\r\n\r\nexport default ManufactureGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Manufacture/ManufactureGridList.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport injectSheet from 'react-jss'\r\nimport {compose} from 'recompose'\r\nimport {Col} from 'react-flexbox-grid'\r\nimport Paper from 'material-ui/Paper'\r\nimport * as TAB from '../../constants/manufactureTab'\r\nimport {Tabs, Tab} from 'material-ui/Tabs'\r\nimport ManufactureProduct from './Tab/ManufactureProduct'\r\nimport ManufacturePerson from './Tab/ManufacturePerson'\r\nimport ManufactureEquipment from './Tab/ManufactureEquipment'\r\nimport ManufactureShipment from './Tab/ManufactureShipment'\r\nconst enhance = compose(\r\n    injectSheet({\r\n        ManufactRightSide: {\r\n            padding: '0px 25px',\r\n            zIndex: '2'\r\n        },\r\n        colorCat: {\r\n            marginBottom: '0',\r\n            width: '100%',\r\n            '& > div': {\r\n                width: '450px !important',\r\n                paddingRight: 'calc(100% - 450px)',\r\n                background: '#fff !important'\r\n            },\r\n            '& > div:first-child': {\r\n                borderBottom: '1px #transparent solid'\r\n            },\r\n            '& > div:last-child': {\r\n                width: '100% !important',\r\n                padding: '0'\r\n            },\r\n            '& > div:nth-child(2) > div': {\r\n                marginTop: '0px !important',\r\n                marginBottom: '-1px',\r\n                backgroundColor: '#12aaeb !important',\r\n                height: '1px !important'\r\n            },\r\n            '& button': {\r\n                color: '#333 !important',\r\n                backgroundColor: '#fefefe !important',\r\n                '& > div > div': {\r\n                    height: '57px !important'\r\n                }\r\n            },\r\n            '& button > span:first-line': {\r\n                color: '#a6dff7'\r\n            },\r\n            '& button div div': {\r\n                textTransform: 'initial'\r\n            }\r\n        }\r\n    })\r\n)\r\n\r\nconst ManufactureTab = enhance((props) => {\r\n    const {classes,\r\n        tabData,\r\n        productFilterDialog,\r\n        productData,\r\n        personData,\r\n        equipmentData,\r\n        editMaterials,\r\n        createMaterials,\r\n        deleteMaterials,\r\n        shipmentData,\r\n        handleCloseDetail\r\n    } = props\r\n    const tab = _.get(tabData, 'tab')\r\n    return (\r\n        <Col className={classes.ManufactRightSide} xs={9} md={9}>\r\n            <div>\r\n                <Paper zDepth={1}>\r\n                    <Tabs\r\n                        className={classes.colorCat}\r\n                        value={tab}\r\n                        onChange={(value) => tabData.handleTabChange(value)}>\r\n                        <Tab label=\"Продукция\" value={TAB.MANUFACTURE_TAB_PRODUCT}/>\r\n                        <Tab label=\"Персонал\" value={TAB.MANUFACTURE_TAB_PERSON} />\r\n                        <Tab label=\"Оборудование\" value={TAB.MANUFACTURE_TAB_EQUIPMENT} />\r\n                        <Tab label=\"Партия товара\" value={TAB.MANUFACTURE_TAB_SHIPMENT} />\r\n                    </Tabs>\r\n                </Paper>\r\n                {TAB.MANUFACTURE_TAB_PRODUCT === tab && <ManufactureProduct\r\n                    productData={productData}\r\n                    editMaterials={editMaterials}\r\n                    filter={tabData.filter}\r\n                    filterDialog={productFilterDialog}\r\n                    createMaterials={createMaterials}\r\n                    deleteMaterials={deleteMaterials}\r\n                    handleCloseDetail={handleCloseDetail}/>}\r\n                {TAB.MANUFACTURE_TAB_PERSON === tab && <ManufacturePerson\r\n                    personData={personData}\r\n                    />}\r\n                {TAB.MANUFACTURE_TAB_EQUIPMENT === tab && <ManufactureEquipment\r\n                    equipmentData={equipmentData}/>}\r\n                {TAB.MANUFACTURE_TAB_SHIPMENT === tab && <ManufactureShipment\r\n                    shipmentData={shipmentData}/>}\r\n            </div>\r\n        </Col>\r\n    )\r\n})\r\nManufactureTab.propTypes = {\r\n    tabData: PropTypes.shape({\r\n        tab: PropTypes.string.isRequired,\r\n        handleTabChange: PropTypes.func.isRequired\r\n    }),\r\n    productData: PropTypes.object.isRequired,\r\n    personData: PropTypes.object.isRequired,\r\n    equipmentData: PropTypes.object.isRequired,\r\n    shipmentData: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ManufactureTab\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Manufacture/ManufactureTab.js","import _ from 'lodash'\nimport React from 'react'\nimport {Row, Col} from 'react-flexbox-grid'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport IconButton from 'material-ui/IconButton'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\nimport GridList from '../../GridList'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'name',\n        title: 'Наименование',\n        xs: 4\n    },\n    {\n        sorting: true,\n        name: 'type',\n        title: 'Последняя отгрузка №',\n        xs: 4\n    },\n    {\n        sorting: true,\n        name: 'brand',\n        title: 'Состояние',\n        xs: 4\n    }\n]\nconst enhance = compose(\n    injectSheet({\n\n        imgContent: {\n            '& img': {\n                width: '33%',\n                margin: '1px'\n            },\n            height: '390px',\n            boxSizing: 'border-box',\n            overflowY: 'scroll'\n        },\n        equipmentContent: {\n            marginTop: '56px'\n        }\n    })\n)\n\nconst ManufactureEquipment = enhance((props) => {\n    const {equipmentData, classes} = props\n\n    const filter = _.get(equipmentData, 'filter')\n    const detail = (\n        <span>a</span>\n    )\n\n    const equipmentList = _.map(_.get(equipmentData, 'equipmentList'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        const lastShipment = _.get(item, 'lastShipment')\n        const status = _.get(item, 'status') === '0' ? 'не работает'\n            : (_.get(item, 'status') === '1' ? 'рабочий'\n            : 'получить продукт')\n        return (\n            <Row key={id}>\n                <Col xs={4}>{name}</Col>\n                <Col xs={4}>{lastShipment}</Col>\n                <Col xs={4}>{status}</Col>\n            </Row>\n        )\n    })\n    const equipmentListExp = {\n        header: listHeader,\n        list: equipmentList,\n        loading: _.get(equipmentData, 'listLoading')\n    }\n    const actions = (\n        <div>\n            <IconButton>\n                <ModEditorIcon />\n            </IconButton>\n\n            <IconButton>\n                <DeleteIcon />\n            </IconButton>\n        </div>\n    )\n    return (\n        <Row className={classes.equipmentContent}>\n            <Col xs={12}>\n                <GridList\n                    filter={filter}\n                    list={equipmentListExp}\n                    detail={detail}\n                    actionsDialog={actions}/>\n            </Col>\n        </Row>\n    )\n})\n\nexport default ManufactureEquipment\n\n\n\n// WEBPACK FOOTER //\n// src/components/Manufacture/Tab/ManufactureEquipment.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\r\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\r\nimport FloatButton from 'material-ui/FlatButton'\r\nimport IconMenu from 'material-ui/IconMenu'\r\nimport MenuItem from 'material-ui/MenuItem'\r\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\r\nimport ContentAdd from 'material-ui/svg-icons/content/add'\r\nimport Edit from 'material-ui/svg-icons/image/edit'\r\nimport PersonFilterForm from '../PersonFilterForm'\r\nimport GridList from '../../GridList'\r\n\r\nconst listHeader = [\r\n    {\r\n        sorting: true,\r\n        name: 'name',\r\n        title: 'Сотрудник',\r\n        xs: 4\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'position',\r\n        title: 'Должность',\r\n        xs: 3\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'shift',\r\n        title: 'Смена',\r\n        xs: 3\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'action',\r\n        title: '',\r\n        xs: 2\r\n    }\r\n]\r\n\r\nconst ManufacturePerson = (props) => {\r\n    const {personData} = props\r\n\r\n    const filter = _.get(personData, 'filter')\r\n    const filterDialog = _.get(personData, 'filterDialog')\r\n\r\n    const personFilterDialog = (\r\n        <PersonFilterForm\r\n            initialValues={filterDialog.initialValues}\r\n            filter={filter}\r\n            filterDialog={filterDialog}\r\n        />\r\n    )\r\n\r\n    const actions = (\r\n        <div>\r\n            <IconButton>\r\n                <ModEditorIcon />\r\n            </IconButton>\r\n\r\n            <IconButton>\r\n                <DeleteIcon />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n\r\n    const detail = (\r\n        <span>a</span>\r\n    )\r\n    const updateDialog = _.get(personData, 'updateDialog')\r\n    const confirmDialog = _.get(personData, 'confirmDialog')\r\n\r\n    const personList = _.map(_.get(personData, ['list', 'results']), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const name = _.get(item, ['user', 'firstName']) + ' ' + _.get(item, ['user', 'secondName'])\r\n        const shift = _.get(item, 'name')\r\n        const beginTime = _.get(item, 'beginTime')\r\n        const iconButton = (\r\n            <IconButton style={{padding: '0 12px'}}>\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n        )\r\n        return (\r\n            <Row key={id}>\r\n                <Col xs={4}>{name}</Col>\r\n                <Col xs={3}>{shift}</Col>\r\n                <Col xs={3}>{beginTime}</Col>\r\n                <Col xs={2} style={{textAlign: 'right'}}>\r\n                    <IconMenu\r\n                        iconButtonElement={iconButton}\r\n                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\r\n                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\r\n                        <MenuItem\r\n                            primaryText=\"Изменить\"\r\n                            leftIcon={<Edit />}\r\n                            onTouchTap={() => {\r\n                                updateDialog.handleOpenUpdateDialog(id)\r\n                            }}\r\n                        />\r\n                        <MenuItem\r\n                            primaryText=\"Удалить \"\r\n                            leftIcon={<DeleteIcon />}\r\n                            onTouchTap={() => {\r\n                                confirmDialog.handleOpenConfirmDialog(id)\r\n                            }}\r\n                        />\r\n                    </IconMenu>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    })\r\n\r\n    const personListExp = {\r\n        header: listHeader,\r\n        list: personList,\r\n        loading: _.get(personData, 'listLoading')\r\n    }\r\n\r\n    const createDialog = _.get(personData, 'createDialog')\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={12}>\r\n                <div style={{padding: '10px 0', textAlign: 'right'}}>\r\n                    <FloatButton onClick={createDialog.handleOpenDialog} style={{color: '#12aaeb'}}>\r\n                        <ContentAdd style={{height: '13px', width: '13px', color: 'rgb(18, 170, 235)'}}\r\n                                    viewBox=\"0 0 24 15\"/>\r\n                        добавить сотрудников\r\n                    </FloatButton>\r\n                </div>\r\n                <GridList\r\n                    filter={filter}\r\n                    list={personListExp}\r\n                    detail={detail}\r\n                    actionsDialog={actions}\r\n                    filterDialog={personFilterDialog}\r\n                />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nManufacturePerson.propTypes = {\r\n    personData: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ManufacturePerson\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Manufacture/Tab/ManufacturePerson.js","import _ from 'lodash'\nimport React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport {Row, Col} from 'react-flexbox-grid'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport ProductFilterForm from '../../Product/ProductFilterForm'\nimport IconButton from 'material-ui/IconButton'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\nimport FloatButton from 'material-ui/FlatButton'\nimport ManufactureDetails from '../ManufactureDetails'\n\nimport GridList from '../../GridList'\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'name',\n        title: 'Наименование',\n        xs: 5\n    },\n    {\n        sorting: true,\n        name: 'description',\n        title: 'Описание',\n        xs: 4\n    },\n    {\n        sorting: true,\n        name: 'bom',\n        title: 'BoM',\n        xs: 3\n    }\n]\nconst enhance = compose(\n    injectSheet({\n\n        imgContent: {\n            '& img': {\n                width: '33%',\n                margin: '1px'\n            },\n            height: '390px',\n            boxSizing: 'border-box',\n            overflowY: 'scroll'\n        },\n        cursor: {\n            cursor: 'pointer'\n        }\n    })\n)\n\nconst ManufactureProduct = enhance((props) => {\n    const {classes, filter, filterDialog, productData, editMaterials, createMaterials, deleteMaterials, handleCloseDetail} = props\n\n    const productFilterDialog = (\n        <ProductFilterForm\n            initialValues={filterDialog.initialValues}\n            filter={filter}\n            filterDialog={filterDialog}\n        />\n    )\n\n    const actions = (\n        <div>\n            <IconButton>\n                <ModEditorIcon />\n            </IconButton>\n\n            <IconButton>\n                <DeleteIcon />\n            </IconButton>\n        </div>\n    )\n\n    const detailData = _.get(productData, 'detailData')\n    const productTitle = _.get(_.find(_.get(productData, 'productList'), {'id': _.toInteger(_.get(productData, ['detailData', 'id']))}), 'name')\n    const detail = (\n        <ManufactureDetails\n            createMaterials={createMaterials}\n            productTitle={productTitle}\n            key={_.get(detailData, 'id')}\n            id={_.get(detailData, 'id')}\n            data={_.get(detailData, 'data')}\n            handleDeleteAllIngredient={_.get(productData, ['confirmDialog', 'handleOpenConfirmDialog'])}\n            handleOpenConfirmDialog={_.get(deleteMaterials, ['handleOpenConfirmDialog'])}\n            handleOpenEditMaterials={_.get(editMaterials, ['handleOpen'])}\n            handleOpenChangeManufacture={_.get(productData, ['changeManufacture', 'handleOpenChangeManufacture'])}\n            loading={_.get(detailData, 'detailLoading')}\n            handleCloseDetail={handleCloseDetail}\n        />\n    )\n    const productList = _.map(_.get(productData, 'productList'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        const type = _.get(item, ['type', 'name']) || 'N/A'\n        const brand = _.get(item, ['brand', 'name']) || 'N/A'\n        return (\n            <Row key={id}>\n                <Col xs={5}>\n                    <span\n                        className={classes.cursor}\n                        onTouchTap={ () => {\n                            productData.handleItemClick(id)\n                        }}>\n                        {name}\n                    </span>\n                </Col>\n                <Col xs={4}>{type}</Col>\n                <Col xs={3}>{brand}</Col>\n            </Row>\n        )\n    })\n    const productListExp = {\n        header: listHeader,\n        list: productList,\n        loading: _.get(productData, 'listLoading')\n    }\n    const createDialog = _.get(productData, 'createDialog')\n    return (\n        <Row>\n            <Col xs={12}>\n                <div style={{padding: '10px 0', textAlign: 'right'}}>\n                    <FloatButton onClick={createDialog.handleOpenCreateDialog} style={{color: '#12aaeb'}}>\n                        <ContentAdd style={{height: '13px', width: '13px', color: 'rgb(18, 170, 235)'}}\n                                    viewBox=\"0 0 24 15\"/>\n                        добавить продукцию\n                    </FloatButton>\n                </div>\n            </Col>\n            <Col xs={12}>\n                <GridList\n                    filter={filter}\n                    list={productListExp}\n                    detail={detail}\n                    actionsDialog={actions}\n                    filterDialog={productFilterDialog}\n                />\n            </Col>\n        </Row>\n    )\n})\nManufactureProduct.propTypes = {\n    productData: PropTypes.object.isRequired\n}\n\nexport default ManufactureProduct\n\n\n\n// WEBPACK FOOTER //\n// src/components/Manufacture/Tab/ManufactureProduct.js","import _ from 'lodash'\nimport moment from 'moment'\nimport React from 'react'\nimport {Row, Col} from 'react-flexbox-grid'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport IconButton from 'material-ui/IconButton'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\nimport ManufactureShipmentDetail from './ManufactureShipmentDetail'\nimport GridList from '../../GridList'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'name',\n        title: 'Производство',\n        xs: 3\n    },\n    {\n        sorting: true,\n        name: 'type',\n        title: 'Время начала',\n        xs: 3\n    },\n    {\n        sorting: true,\n        name: 'brand',\n        title: 'Время окончания',\n        xs: 3\n    },\n    {\n        sorting: true,\n        name: 'brand',\n        title: 'Произведенный',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'brand',\n        title: 'Проводить',\n        xs: 1\n    }\n]\nconst enhance = compose(\n    injectSheet({\n\n        imgContent: {\n            '& img': {\n                width: '33%',\n                margin: '1px'\n            },\n            height: '390px',\n            boxSizing: 'border-box',\n            overflowY: 'scroll'\n        },\n        equipmentContent: {\n            marginTop: '56px'\n        }\n    })\n)\n\nconst ManufactureShipment = enhance((props) => {\n    const {shipmentData, classes} = props\n\n    const filter = _.get(shipmentData, 'filter')\n    const detail = (\n        <ManufactureShipmentDetail\n            key={_.get(shipmentData, ['detailData', 'id'])}\n            detailData={_.get(shipmentData, 'detailData')}\n            filter={_.get(shipmentData, 'filter')}\n        />\n    )\n    const handleClick = _.get(shipmentData, 'handleShipmentClick')\n    const shipment = _.map(_.get(shipmentData, 'shipmentList'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, ['equipment', 'name'])\n        const closedTime = moment(_.get(item, 'closedTime')).format('DD.MM.YYYY')\n        const openedTime = moment(_.get(item, 'openedTime')).format('DD.MM.YYYY')\n        const produced = _.get(item, 'produced')\n        const spend = _.get(item, 'spend')\n        return (\n            <Row key={id}>\n                <Col xs={3}><span onClick={() => { handleClick(id) }}>{name}</span></Col>\n                <Col xs={3}>{openedTime}</Col>\n                <Col xs={3}>{closedTime}</Col>\n                <Col xs={2}>{produced}</Col>\n                <Col xs={1}>{spend}</Col>\n            </Row>\n        )\n    })\n    const shipmentExp = {\n        header: listHeader,\n        list: shipment,\n        loading: _.get(shipmentData, 'listLoading')\n    }\n    const actions = (\n        <div>\n            <IconButton>\n                <ModEditorIcon />\n            </IconButton>\n\n            <IconButton>\n                <DeleteIcon />\n            </IconButton>\n        </div>\n    )\n    return (\n        <Row className={classes.equipmentContent}>\n            <Col xs={12}>\n                <GridList\n                    filter={filter}\n                    list={shipmentExp}\n                    detail={detail}\n                    actionsDialog={actions}/>\n            </Col>\n        </Row>\n    )\n})\n\nexport default ManufactureShipment\n\n\n\n// WEBPACK FOOTER //\n// src/components/Manufacture/Tab/ManufactureShipment.js","import _ from 'lodash'\nimport moment from 'moment'\nimport React from 'react'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport {Row, Col} from 'react-flexbox-grid'\nimport GridList from '../../GridList'\nimport NotFound from '../../Images/not-found.png'\nimport numberFormat from '../../../helpers/numberFormat'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'barcode',\n        title: 'Штрих-код',\n        xs: 3\n    },\n    {\n        sorting: true,\n        name: 'productName',\n        title: 'Наименование товара',\n        xs: 3\n    },\n    {\n        sorting: true,\n        name: 'amount',\n        title: 'Количество',\n        xs: 3\n    },\n    {\n        sorting: true,\n        name: 'date',\n        title: 'Время',\n        xs: 3\n    }\n]\n\nconst enhance = compose(\n    injectSheet({\n        dottedList: {\n            padding: '20px 0'\n        },\n        wrapper: {\n            width: '100%'\n        },\n        loader: {\n            width: '100%',\n            background: '#fff',\n            height: '200px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n        },\n        title: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            height: '65px',\n            padding: '0 30px',\n            borderBottom: '1px #efefef solid'\n        },\n        titleLabel: {\n            fontSize: '18px',\n            color: '#333',\n            fontWeight: '700'\n        },\n        materialsList: {\n            padding: '0 30px'\n        },\n        rawMaterials: {\n            '& .dottedList': {\n                padding: '10px 0'\n            },\n            '& .dottedList:last-child:after': {\n                backgroundImage: 'none'\n            }\n        },\n        titleButtons: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            '& svg': {\n                color: '#fff !important'\n            }\n        },\n        listButtons: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            '& button': {\n                height: '20px !important',\n                width: '25px !important'\n            }\n        },\n        emptyQuery: {\n            background: 'url(' + NotFound + ') no-repeat center center',\n            backgroundSize: '285px',\n            padding: '260px 0 0',\n            textAlign: 'center',\n            fontSize: '15px',\n            color: '#666',\n            '& svg': {\n                width: '50px !important',\n                height: '50px !important',\n                color: '#999 !important'\n            }\n        }\n    }),\n)\nconst actions = (<div></div>)\n\nconst ManufactureShipmentDetail = enhance((props) => {\n    const {\n        filter,\n        detailData\n    } = props\n\n    const loading = _.get(detailData, 'loading')\n    const detailList = _.map(_.get(detailData, ['data', 'results']), (item) => {\n        const id = _.get(item, 'id')\n        const barcode = _.get(item, 'barcode')\n        const amount = numberFormat(_.get(item, 'amount'))\n        const productName = _.get(item, ['product', 'name'])\n        const measurement = _.get(item, ['product', 'measurement', 'name'])\n        const createdDate = moment(_.get(item, 'createDate')).format('DD.MM.YYYY HH.mm')\n\n        return (\n            <Row key={id}>\n                <Col xs={3}>{barcode}</Col>\n                <Col xs={3}>{productName}</Col>\n                <Col xs={3}>{amount} {measurement}</Col>\n                <Col xs={2}>{createdDate}</Col>\n            </Row>\n        )\n    })\n\n    const detailDialog = <span></span>\n\n    const list = {\n        header: listHeader,\n        list: detailList,\n        loading: loading\n    }\n\n    return (\n        <GridList\n            filter={filter}\n            list={list}\n            detail={detailDialog}\n            actionsDialog={actions}\n        />\n    )\n})\n\nManufactureShipmentDetail.propTypes = {\n}\n\nexport default ManufactureShipmentDetail\n\n\n\n// WEBPACK FOOTER //\n// src/components/Manufacture/Tab/ManufactureShipmentDetail.js","import ManufactureGridList from './ManufactureGridList'\nimport {OPEN_USER_CREATE_DIALOG} from './ManufactureAddStaffDialog'\nimport {MANUFACTURE_SHOW_BOM_DIALOG_OPEN} from './ManufactureShowBom'\nimport {MANUFACTURE_ADD_PRODUCT_DIALOG_OPEN} from './ManufactureAddProductDialog'\nimport {MANUFACTURE_EDIT_PRODUCT_DIALOG_OPEN} from './ManufactureEditProductDialog'\n\nconst SHIFT_DELETE_DIALOG_OPEN = 'openDeleteDialog'\nconst USER_SHIFT_DELETE_DIALOG_OPEN = 'openUserStaffDeleteDialog'\nconst INGREDIENT_DELETE_DIALOG_OPEN = 'openIngredientDeleteDialog'\nconst OPEN_UPDATE_PRODUCT_DIALOG = 'openUpdateProductDialog'\nconst OPEN_DELETE_PRODUCT_DIALOG = 'openDeleteProductDialog'\nconst OPEN_USER_UPDATE_DIALOG = 'openUserUpdateDialog'\nconst MANUFACTURE_CREATE_PRODUCT_DIALOG_OPEN = 'createMaterials'\nconst OPEN_DELETE_MATERIALS_DIALOG = 'openDeleteIngredient'\nconst OPEN_USER_CONFIRM_DIALOG = 'openUserDeleteDialog'\nconst MANUFACTURE_CHANGE = 'openChangeManufacture'\nconst TAB = 'tab'\n\nexport {\n    OPEN_USER_CREATE_DIALOG,\n    MANUFACTURE_SHOW_BOM_DIALOG_OPEN,\n    MANUFACTURE_ADD_PRODUCT_DIALOG_OPEN,\n    MANUFACTURE_CREATE_PRODUCT_DIALOG_OPEN,\n    MANUFACTURE_EDIT_PRODUCT_DIALOG_OPEN,\n    SHIFT_DELETE_DIALOG_OPEN,\n    USER_SHIFT_DELETE_DIALOG_OPEN,\n    INGREDIENT_DELETE_DIALOG_OPEN,\n    OPEN_UPDATE_PRODUCT_DIALOG,\n    OPEN_DELETE_PRODUCT_DIALOG,\n    OPEN_USER_CONFIRM_DIALOG,\n    OPEN_USER_UPDATE_DIALOG,\n    OPEN_DELETE_MATERIALS_DIALOG,\n    MANUFACTURE_CHANGE,\n    TAB,\n    ManufactureGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Manufacture/index.js","import _ from 'lodash'\r\nimport moment from 'moment'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport injectSheet from 'react-jss'\r\nimport {compose} from 'recompose'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\r\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\r\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\r\nimport ContentAdd from 'material-ui/svg-icons/content/add'\r\nimport Edit from 'material-ui/svg-icons/image/edit'\r\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\r\nimport IconMenu from 'material-ui/IconMenu'\r\nimport MenuItem from 'material-ui/MenuItem'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport GridList from '../GridList'\r\nimport Container from '../Container'\r\nimport MarketTypeCreateDialog from './MarketTypeCreateDialog'\r\nimport ConfirmDialog from '../ConfirmDialog'\r\nimport SubMenu from '../SubMenu'\r\nimport Tooltip from '../ToolTip'\r\n\r\nconst listHeader = [\r\n    {\r\n        sorting: true,\r\n        name: 'id',\r\n        xs: 2,\r\n        title: 'Id'\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'name',\r\n        xs: 5,\r\n        title: 'Наименование'\r\n    },\r\n    {\r\n        sorting: true,\r\n        xs: 4,\r\n        name: 'created_date',\r\n        title: 'Дата создания'\r\n    },\r\n    {\r\n        sorting: true,\r\n        xs: 1,\r\n        name: 'actions',\r\n        title: ''\r\n    }\r\n\r\n]\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        addButton: {\r\n            '& button': {\r\n                backgroundColor: '#275482 !important'\r\n            }\r\n        },\r\n        addButtonWrapper: {\r\n            position: 'absolute',\r\n            top: '10px',\r\n            right: '0',\r\n            marginBottom: '0px'\r\n        },\r\n        marginLeft: {\r\n            marginLeft: '20px !important'\r\n        },\r\n        right: {\r\n            textAlign: 'right'\r\n        }\r\n    })\r\n)\r\n\r\nconst MarketTypeGridList = enhance((props) => {\r\n    const {\r\n        filter,\r\n        createDialog,\r\n        updateDialog,\r\n        actionsDialog,\r\n        confirmDialog,\r\n        listData,\r\n        detailData,\r\n        classes\r\n    } = props\r\n\r\n    const actions = (\r\n        <div>\r\n            <IconButton onTouchTap={actionsDialog.handleActionEdit}>\r\n                <ModEditorIcon />\r\n            </IconButton>\r\n\r\n            <IconButton onTouchTap={actionsDialog.handleActionDelete}>\r\n                <DeleteIcon />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n\r\n    const marketTypeDetail = (\r\n        <span>a</span>\r\n    )\r\n\r\n    const marketTypeList = _.map(_.get(listData, 'data'), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const name = _.get(item, 'name')\r\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\r\n        const iconButton = (\r\n            <IconButton style={{padding: '0 12px'}}>\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n        )\r\n        return (\r\n            <Row key={id}>\r\n                <Col xs={2}>{id}</Col>\r\n                <Col xs={5}>{name}</Col>\r\n                <Col xs={4}>{createdDate}</Col>\r\n                <Col xs={1} className={classes.right}>\r\n                    <IconMenu\r\n                        iconButtonElement={iconButton}\r\n                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\r\n                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\r\n                        <MenuItem\r\n                            primaryText=\"Изменить\"\r\n                            leftIcon={<Edit />}\r\n                            onTouchTap={() => { updateDialog.handleOpenUpdateDialog(id) }}\r\n                        />\r\n                        <MenuItem\r\n                            primaryText=\"Удалить \"\r\n                            leftIcon={<DeleteIcon />}\r\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(id) }}\r\n                        />\r\n                    </IconMenu>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    })\r\n\r\n    const list = {\r\n        header: listHeader,\r\n        list: marketTypeList,\r\n        loading: _.get(listData, 'listLoading')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.MARKET_TYPE_LIST_URL}/>\r\n            <div className={classes.addButtonWrapper}>\r\n                <Tooltip position=\"left\" text=\"Добавить тип магазина\">\r\n                    <FloatingActionButton\r\n                        mini={true}\r\n                        className={classes.addButton}\r\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\r\n                        <ContentAdd />\r\n                    </FloatingActionButton>\r\n                </Tooltip>\r\n            </div>\r\n\r\n            <GridList\r\n                filter={filter}\r\n                list={list}\r\n                detail={marketTypeDetail}\r\n                actionsDialog={actions}\r\n            />\r\n\r\n            <MarketTypeCreateDialog\r\n                open={createDialog.openCreateDialog}\r\n                loading={createDialog.createLoading}\r\n                onClose={createDialog.handleCloseCreateDialog}\r\n                onSubmit={createDialog.handleSubmitCreateDialog}\r\n            />\r\n\r\n            <MarketTypeCreateDialog\r\n                isUpdate={true}\r\n                initialValues={updateDialog.initialValues}\r\n                open={updateDialog.openUpdateDialog}\r\n                loading={updateDialog.updateLoading}\r\n                onClose={updateDialog.handleCloseUpdateDialog}\r\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\r\n            />\r\n\r\n            {detailData.data && <ConfirmDialog\r\n                type=\"delete\"\r\n                message={_.get(detailData, ['data', 'name'])}\r\n                loading={confirmDialog.confirmLoading}\r\n                onClose={confirmDialog.handleCloseConfirmDialog}\r\n                onSubmit={confirmDialog.handleSendConfirmDialog}\r\n                open={confirmDialog.openConfirmDialog}\r\n            />}\r\n        </Container>\r\n    )\r\n})\r\n\r\nMarketTypeGridList.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object,\r\n    createDialog: PropTypes.shape({\r\n        createLoading: PropTypes.bool,\r\n        openCreateDialog: PropTypes.bool.isRequired,\r\n        handleOpenCreateDialog: PropTypes.func.isRequired,\r\n        handleCloseCreateDialog: PropTypes.func.isRequired,\r\n        handleSubmitCreateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    confirmDialog: PropTypes.shape({\r\n        confirmLoading: PropTypes.bool.isRequired,\r\n        openConfirmDialog: PropTypes.bool.isRequired,\r\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\r\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\r\n        handleSendConfirmDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    updateDialog: PropTypes.shape({\r\n        updateLoading: PropTypes.bool,\r\n        openUpdateDialog: PropTypes.bool.isRequired,\r\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\r\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\r\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    actionsDialog: PropTypes.shape({\r\n        handleActionEdit: PropTypes.func.isRequired,\r\n        handleActionDelete: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default MarketTypeGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/MarketType/MarketTypeGridList.js","import MarketTypeGridList from './MarketTypeGridList'\nimport {MARKET_TYPE_CREATE_DIALOG_OPEN} from './MarketTypeCreateDialog'\n\nconst MARKET_TYPE_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nconst MARKET_TYPE_DELETE_DIALOG_OPEN = 'openDeleteDialog'\n\nexport {\n    MARKET_TYPE_UPDATE_DIALOG_OPEN,\n    MARKET_TYPE_CREATE_DIALOG_OPEN,\n    MARKET_TYPE_DELETE_DIALOG_OPEN,\n    MarketTypeGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/MarketType/index.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\r\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport GridList from '../GridList'\r\nimport Container from '../Container'\r\nimport MeasurementCreateDialog from './MeasurementCreateDialog'\r\nimport ConfirmDialog from '../ConfirmDialog'\r\nimport SubMenu from '../SubMenu'\r\nimport injectSheet from 'react-jss'\r\nimport {compose} from 'recompose'\r\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\r\nimport ContentAdd from 'material-ui/svg-icons/content/add'\r\nimport Tooltip from '../ToolTip'\r\nimport IconMenu from 'material-ui/IconMenu'\r\nimport MenuItem from 'material-ui/MenuItem'\r\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\r\nimport Edit from 'material-ui/svg-icons/image/edit'\r\n\r\nconst listHeader = [\r\n    {\r\n        sorting: true,\r\n        name: 'id',\r\n        xs: 2,\r\n        title: 'Id'\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'name',\r\n        xs: 9,\r\n        title: 'Наименование'\r\n    },\r\n    {\r\n        sorting: false,\r\n        xs: 1,\r\n        name: 'actions',\r\n        title: ''\r\n    }\r\n]\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        addButton: {\r\n            '& button': {\r\n                backgroundColor: '#275482 !important'\r\n            }\r\n        },\r\n        addButtonWrapper: {\r\n            position: 'absolute',\r\n            top: '10px',\r\n            right: '0',\r\n            marginBottom: '0px'\r\n        }\r\n    })\r\n)\r\n\r\nconst MeasurementGridList = enhance((props) => {\r\n    const {\r\n        filter,\r\n        createDialog,\r\n        updateDialog,\r\n        actionsDialog,\r\n        confirmDialog,\r\n        listData,\r\n        detailData,\r\n        classes\r\n    } = props\r\n\r\n    const actions = (\r\n        <div>\r\n            <IconButton onTouchTap={actionsDialog.handleActionEdit}>\r\n                <ModEditorIcon />\r\n            </IconButton>\r\n\r\n            <IconButton onTouchTap={actionsDialog.handleActionDelete}>\r\n                <DeleteIcon />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n\r\n    const measurementDetail = (\r\n        <span>a</span>\r\n    )\r\n\r\n    const measurementList = _.map(_.get(listData, 'data'), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const name = _.get(item, 'name')\r\n        const iconButton = (\r\n            <IconButton style={{padding: '0 12px'}}>\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n        )\r\n        return (\r\n            <Row key={id}>\r\n                <Col xs={2}>{id}</Col>\r\n                <Col xs={9}>{name}</Col>\r\n                <Col xs={1} style={{textAlign: 'right'}}>\r\n                    <IconMenu\r\n                        iconButtonElement={iconButton}\r\n                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\r\n                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\r\n                        <MenuItem\r\n                            primaryText=\"Изменить\"\r\n                            leftIcon={<Edit />}\r\n                            onTouchTap={() => { updateDialog.handleOpenUpdateDialog(id) }}\r\n                        />\r\n                        <MenuItem\r\n                            primaryText=\"Удалить \"\r\n                            leftIcon={<DeleteIcon />}\r\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(id) }}\r\n                        />\r\n                    </IconMenu>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    })\r\n\r\n    const list = {\r\n        header: listHeader,\r\n        list: measurementList,\r\n        loading: _.get(listData, 'listLoading')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.MEASUREMENT_LIST_URL}/>\r\n            <div className={classes.addButtonWrapper}>\r\n                <Tooltip position=\"left\" text=\"Добавить измерение\">\r\n                    <FloatingActionButton\r\n                        mini={true}\r\n                        className={classes.addButton}\r\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\r\n                        <ContentAdd />\r\n                    </FloatingActionButton>\r\n                </Tooltip>\r\n            </div>\r\n\r\n            <GridList\r\n                filter={filter}\r\n                list={list}\r\n                detail={measurementDetail}\r\n                actionsDialog={actions}\r\n            />\r\n\r\n            <MeasurementCreateDialog\r\n                initialValues={{}}\r\n                open={createDialog.openCreateDialog}\r\n                loading={createDialog.createLoading}\r\n                onClose={createDialog.handleCloseCreateDialog}\r\n                onSubmit={createDialog.handleSubmitCreateDialog}\r\n            />\r\n\r\n            <MeasurementCreateDialog\r\n                isUpdate={true}\r\n                initialValues={updateDialog.initialValues}\r\n                open={updateDialog.openUpdateDialog}\r\n                loading={updateDialog.updateLoading}\r\n                onClose={updateDialog.handleCloseUpdateDialog}\r\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\r\n            />\r\n\r\n            {detailData.data && <ConfirmDialog\r\n                type=\"delete\"\r\n                message={_.get(detailData, ['data', 'name'])}\r\n                loading={confirmDialog.confirmLoading}\r\n                onClose={confirmDialog.handleCloseConfirmDialog}\r\n                onSubmit={confirmDialog.handleSendConfirmDialog}\r\n                open={confirmDialog.openConfirmDialog}\r\n            />}\r\n        </Container>\r\n    )\r\n})\r\n\r\nMeasurementGridList.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object,\r\n    createDialog: PropTypes.shape({\r\n        createLoading: PropTypes.bool.isRequired,\r\n        openCreateDialog: PropTypes.bool.isRequired,\r\n        handleOpenCreateDialog: PropTypes.func.isRequired,\r\n        handleCloseCreateDialog: PropTypes.func.isRequired,\r\n        handleSubmitCreateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    confirmDialog: PropTypes.shape({\r\n        confirmLoading: PropTypes.bool.isRequired,\r\n        openConfirmDialog: PropTypes.bool.isRequired,\r\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\r\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\r\n        handleSendConfirmDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    updateDialog: PropTypes.shape({\r\n        updateLoading: PropTypes.bool.isRequired,\r\n        openUpdateDialog: PropTypes.bool.isRequired,\r\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\r\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\r\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    actionsDialog: PropTypes.shape({\r\n        handleActionEdit: PropTypes.func.isRequired,\r\n        handleActionDelete: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default MeasurementGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Measurement/MeasurementGridList.js","import MeasurementGridList from './MeasurementGridList'\nimport {MEASUREMENT_CREATE_DIALOG_OPEN} from './MeasurementCreateDialog'\nconst MEASUREMENT_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nconst MEASUREMENT_DELETE_DIALOG_OPEN = 'openDeleteDialog'\nexport {\n    MEASUREMENT_CREATE_DIALOG_OPEN,\n    MEASUREMENT_UPDATE_DIALOG_OPEN,\n    MEASUREMENT_DELETE_DIALOG_OPEN,\n    MeasurementGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Measurement/index.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose, withState} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport Edit from 'material-ui/svg-icons/image/edit'\r\nimport Delete from 'material-ui/svg-icons/action/delete'\r\nimport OrderTransactionsDialog from './OrderTransactionsDialog'\r\nimport OrderReturnDialog from './OrderReturnDialog'\r\nimport OrderItemReturnDialog from './OrderItemReturnDialog'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport Return from 'material-ui/svg-icons/content/reply'\r\nimport File from 'material-ui/svg-icons/editor/insert-drive-file'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport Tooltip from '../ToolTip'\r\nimport Dot from '../Images/dot.png'\r\nimport moment from 'moment'\r\nimport numberFormat from '../../helpers/numberFormat'\r\nimport {Tabs, Tab} from 'material-ui/Tabs'\r\nimport * as TAB from '../../constants/orderTab'\r\nimport NotFound from '../Images/not-found.png'\r\nimport getConfig from '../../helpers/getConfig'\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        dottedList: {\r\n            padding: '20px 0'\r\n        },\r\n        wrapper: {\r\n            color: '#333 !important',\r\n            width: '100%',\r\n            display: 'flex',\r\n            flexWrap: 'wrap'\r\n        },\r\n        dropdown: {\r\n            position: 'relative',\r\n            paddingRight: '18px',\r\n            zIndex: '4',\r\n            '&:after': {\r\n                top: '10px',\r\n                right: '0',\r\n                content: '\"\"',\r\n                position: 'absolute',\r\n                borderTop: '5px solid',\r\n                borderLeft: '5px solid transparent',\r\n                borderRight: '5px solid transparent'\r\n            }\r\n        },\r\n        link: {\r\n            extend: 'blue',\r\n            borderBottom: '1px dashed',\r\n            fontWeight: '600'\r\n        },\r\n        red: {\r\n            color: '#e57373 !important'\r\n        },\r\n        blue: {\r\n            color: '#12aaeb !important'\r\n        },\r\n        green: {\r\n            color: '#81c784 !important'\r\n        },\r\n        yellow: {\r\n            color: '#f0ad4e !important'\r\n        },\r\n        loader: {\r\n            width: '100%',\r\n            background: '#fff',\r\n            height: '400px',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        },\r\n        title: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            borderBottom: '1px #efefef solid',\r\n            alignItems: 'center',\r\n            width: '100%',\r\n            height: '65px',\r\n            padding: '0 30px'\r\n        },\r\n        titleLabel: {\r\n            fontSize: '18px',\r\n            color: '#333',\r\n            fontWeight: '600',\r\n            cursor: 'pointer'\r\n        },\r\n        titleSupplier: {\r\n            fontSize: '18px',\r\n            position: 'relative',\r\n            '& .supplierDetails': {\r\n                background: '#fff',\r\n                boxShadow: '0 2px 5px 0px rgba(0, 0, 0, 0.16)',\r\n                fontSize: '13px',\r\n                position: 'absolute',\r\n                padding: '64px 28px 20px',\r\n                top: '-21px',\r\n                left: '50%',\r\n                zIndex: '3',\r\n                minWidth: '300px',\r\n                transform: 'translate(-50%, 0)',\r\n                '& .detailsWrap': {\r\n                    position: 'relative',\r\n                    paddingTop: '10px',\r\n                    '&:before': {\r\n                        content: '\"\"',\r\n                        background: 'url(' + Dot + ')',\r\n                        position: 'absolute',\r\n                        top: '0',\r\n                        left: '0',\r\n                        right: '0',\r\n                        height: '2px'\r\n                    }\r\n                },\r\n                '& .detailsList': {\r\n                    padding: '10px 0',\r\n                    '&:last-child': {\r\n                        paddingBottom: '0'\r\n                    },\r\n                    '& div:first-child': {\r\n                        color: '#666'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        titleClient: {\r\n            '& span': {\r\n                fontWeight: '600'\r\n            }\r\n        },\r\n        titleButtons: {\r\n            display: 'flex',\r\n            justifyContent: 'flex-end'\r\n        },\r\n        content: {\r\n            display: 'flex',\r\n            width: '100%'\r\n        },\r\n        padding: {\r\n            padding: '20px 30px'\r\n        },\r\n        leftSide: {\r\n            flexBasis: '30%',\r\n            maxWidth: '30%',\r\n            borderRight: '1px #efefef solid'\r\n        },\r\n        subBlock: {\r\n            extend: 'padding',\r\n            borderBottom: '1px #efefef solid',\r\n            '&:last-child': {\r\n                border: 'none'\r\n            }\r\n        },\r\n        rightSide: {\r\n            flexBasis: '70%',\r\n            maxWidth: '70%',\r\n            padding: '0 30px 20px'\r\n        },\r\n        subtitle: {\r\n            fontWeight: '600',\r\n            textTransform: 'uppercase',\r\n            marginBottom: '10px'\r\n        },\r\n        dataBox: {\r\n            '& li': {\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                lineHeight: '25px',\r\n                width: '100%',\r\n                '& span:last-child': {\r\n                    fontWeight: '600',\r\n                    textAlign: 'right'\r\n                }\r\n            }\r\n        },\r\n        tabNav: {\r\n            padding: '15px 0',\r\n            borderBottom: '1px #f2f5f8 solid',\r\n            '& a': {\r\n                margin: '-15px 0',\r\n                padding: '15px 0',\r\n                marginRight: '40px',\r\n                color: '#9b9b9b',\r\n                '&.active': {\r\n                    color: '#12aaeb',\r\n                    borderBottom: '1px solid'\r\n                }\r\n            }\r\n        },\r\n        tabContent: {\r\n            '& .row:first-child': {\r\n                fontWeight: '600'\r\n            },\r\n            '& .row': {\r\n                '& > div': {\r\n                    textAlign: 'right'\r\n                },\r\n                '& > div:first-child': {\r\n                    textAlign: 'left'\r\n                }\r\n            }\r\n        },\r\n        tabWrapper: {\r\n            maxHeight: '232px',\r\n            overflowY: 'auto',\r\n            overflowX: 'hidden',\r\n            paddingRight: '30px'\r\n        },\r\n        summary: {\r\n            fontWeight: '600',\r\n            marginTop: '20px',\r\n            paddingRight: '30px',\r\n            textTransform: 'uppercase',\r\n            textAlign: 'right'\r\n        },\r\n        personOrder: {\r\n            '& div:first-child': {\r\n                width: '30px',\r\n                height: '30px',\r\n                display: 'inline-block',\r\n                overflow: 'hidden',\r\n                marginRight: '10px',\r\n                borderRadius: '50%',\r\n                '& img': {\r\n                    width: '30px'\r\n                }\r\n            },\r\n            '& div:last-child': {\r\n                verticalAlign: 'top',\r\n                display: 'inline-block'\r\n            }\r\n        },\r\n        colorCat: {\r\n            marginBottom: '0',\r\n            width: '100%',\r\n            '& > div': {\r\n                width: '40% !important',\r\n                paddingRight: '60%',\r\n                background: 'transparent !important'\r\n            },\r\n            '& > div:first-child': {\r\n                borderBottom: '1px #f2f5f8 solid'\r\n            },\r\n            '& > div:last-child': {\r\n                width: '100% !important',\r\n                padding: '0'\r\n            },\r\n            '& > div:nth-child(2) > div': {\r\n                marginTop: '0px !important',\r\n                marginBottom: '-1px',\r\n                backgroundColor: '#12aaeb !important',\r\n                height: '1px !important'\r\n            },\r\n            '& button': {\r\n                color: '#333 !important',\r\n                backgroundColor: '#fefefe !important'\r\n            },\r\n            '& button > span:first-line': {\r\n                color: '#a6dff7'\r\n            },\r\n            '& button div div': {\r\n                textTransform: 'initial'\r\n            }\r\n        },\r\n        noReturn: {\r\n            padding: '100px 0',\r\n            color: '#999'\r\n        },\r\n        emptyQuery: {\r\n            background: 'url(' + NotFound + ') no-repeat center center',\r\n            backgroundSize: '215px',\r\n            padding: '215px 0 0',\r\n            textAlign: 'center',\r\n            color: '#999'\r\n        }\r\n    }),\r\n        withState('openDetails', 'setOpenDetails', false)\r\n)\r\n\r\nconst iconStyle = {\r\n    icon: {\r\n        color: '#666',\r\n        width: 20,\r\n        height: 20\r\n    },\r\n    button: {\r\n        width: 48,\r\n        height: 48,\r\n        padding: 0\r\n    }\r\n}\r\nwithState('openDetails', 'setOpenDetails', false)\r\n\r\nconst OrderDetails = enhance((props) => {\r\n    const {classes,\r\n        loading,\r\n        data,\r\n        setOpenDetails,\r\n        openDetails,\r\n        transactionsDialog,\r\n        returnDialog,\r\n        returnListData,\r\n        returnDataLoading,\r\n        itemReturnDialog,\r\n        confirmDialog,\r\n        handleOpenUpdateDialog,\r\n        tabData,\r\n        paymentData,\r\n        getDocument,\r\n        returnData,\r\n        handleCloseDetail\r\n    } = props\r\n    const tab = _.get(tabData, 'tab')\r\n\r\n    const id = _.get(data, 'id')\r\n    const products = _.get(data, 'products')\r\n    const contact = _.get(data, 'contact')\r\n    const contactName = _.get(contact, 'name')\r\n    const contactEmail = _.get(contact, 'email') || 'N/A'\r\n    const contactPhone = _.get(contact, 'telephone') || 'N/A'\r\n\r\n    const client = _.get(data, 'client')\r\n    const clientPerson = _.get(client, 'name')\r\n    const deliveryType = _.get(data, 'deliveryType')\r\n    const dateDelivery = moment(_.get(data, 'dateDelivery')).format('DD.MM.YYYY')\r\n\r\n    const REQUESTED = 0\r\n    const READY = 1\r\n    const DELIVERED = 2\r\n    const status = _.toInteger(_.get(data, 'status'))\r\n\r\n    const percent = 100\r\n    const zero = 0\r\n    const deliveryPrice = _.toNumber(_.get(data, 'deliveryPrice'))\r\n    const discountPrice = _.toNumber(_.get(data, 'discountPrice'))\r\n    const totalPrice = _.toNumber(_.get(data, 'totalPrice'))\r\n    const totalPaid = _.get(data, 'totalPaid')\r\n    const totalBalance = _.get(data, 'totalBalance')\r\n    const discount = (discountPrice / (discountPrice + totalPrice)) * percent\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className={classes.loader}>\r\n                <div>\r\n                    <CircularProgress size={40} thickness={4}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    const primaryCurrency = getConfig('PRIMARY_CURRENCY')\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.title}>\r\n                <div className={classes.titleLabel}\r\n                     onClick={handleCloseDetail}>Заказ №{id}</div>\r\n                <div className={classes.titleSupplier}>\r\n                    <a className={classes.dropdown} onMouseEnter={() => {\r\n                        setOpenDetails(true)\r\n                    }}>{clientPerson}</a>\r\n                    {openDetails &&\r\n                    <div className=\"supplierDetails\" onMouseLeave={() => {\r\n                        setOpenDetails(false)\r\n                    }}>\r\n                        <div className=\"detailsWrap\">\r\n                            <Row className=\"detailsList\">\r\n                                <Col xs={6}>Контактное лицо</Col>\r\n                                <Col xs={6}>{contactName}</Col>\r\n                            </Row>\r\n                            <Row className=\"detailsList\">\r\n                                <Col xs={6}>Телефон</Col>\r\n                                <Col xs={6}>{contactPhone}</Col>\r\n                            </Row>\r\n                            <Row className=\"detailsList\">\r\n                                <Col xs={6}>Email</Col>\r\n                                <Col xs={6}>{contactEmail}</Col>\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                </div>\r\n                <div className={classes.titleButtons}>\r\n                    <Tooltip position=\"bottom\" text=\"Добавить возврат\">\r\n                        <IconButton\r\n                            iconStyle={iconStyle.icon}\r\n                            style={iconStyle.button}\r\n                            touch={true}\r\n                            onTouchTap={returnDialog.handleOpenReturnDialog}>\r\n                            <Return />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip position=\"bottom\" text=\"Скачать договор\">\r\n                        <IconButton\r\n                            iconStyle={iconStyle.icon}\r\n                            style={iconStyle.button}\r\n                            touch={true}\r\n                            onTouchTap={() => { getDocument.handleGetDocument(id) }}>\r\n                            <File />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip position=\"bottom\" text=\"Изменить\">\r\n                        <IconButton\r\n                            iconStyle={iconStyle.icon}\r\n                            style={iconStyle.button}\r\n                            touch={true}\r\n                            onTouchTap={handleOpenUpdateDialog}>\r\n                            <Edit />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip position=\"bottom\" text=\"Отменить\">\r\n                        <IconButton\r\n                            iconStyle={iconStyle.icon}\r\n                            style={iconStyle.button}\r\n                            touch={true}\r\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(id) }}>\r\n                            <Delete />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.content}>\r\n                <div className={classes.leftSide}>\r\n                    <div className={classes.subBlock}>\r\n                        <div className={classes.subtitle}>Баланс</div>\r\n                        <div className={classes.dataBox}>\r\n                            <ul>\r\n                                <li>\r\n                                    <span>Дата оплаты:</span>\r\n                                    <span>22.05.2017</span>\r\n                                </li>\r\n                                <li>\r\n                                    <span>Стоимость доставки:</span>\r\n                                    <span>{numberFormat(deliveryPrice)} {primaryCurrency}</span>\r\n                                </li>\r\n                                <li>\r\n                                    <span>Скидка({discount}%):</span>\r\n                                    <span>{numberFormat(discountPrice)} {primaryCurrency}</span>\r\n                                </li>\r\n                                <li>\r\n                                    <span>Оплачено:</span>\r\n                                    {(totalPaid !== zero) ? <span>\r\n                                        <a onClick={transactionsDialog.handleOpenTransactionsDialog} className={classes.link}>{numberFormat(totalPaid)} {primaryCurrency}</a>\r\n                                    </span>\r\n                                        : <span>{totalPaid} {primaryCurrency}</span>}\r\n                                </li>\r\n                                <li>\r\n                                    <span>Остаток:</span>\r\n                                    <span className={totalBalance > zero ? classes.red : classes.green}>{numberFormat(totalBalance)} {primaryCurrency}</span>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subBlock}>\r\n                        <div className={classes.subtitle}>Исполнение</div>\r\n                        <div className={classes.dataBox}>\r\n                            <ul>\r\n                                <li>\r\n                                    <span>Текущий статус:</span>\r\n                                    {(status === REQUESTED) ? <span className={classes.yellow}>Запрос отправлен</span>\r\n                                        : (status === READY) ? <span className={classes.green}>Готов</span>\r\n                                            : (status === DELIVERED) ? <span className={classes.green}>Доставлен</span>\r\n                                                : <span className={classes.red}>Отменен</span>\r\n                                    }\r\n                                </li>\r\n                                <li>\r\n                                    <span>Тип передачи:</span>\r\n                                    <span>{deliveryType > zero ? 'Доставка' : 'Самовывоз'}</span>\r\n                                </li>\r\n                                <li>\r\n                                    <span>Дата передачи:</span>\r\n                                    <span>{dateDelivery}</span>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.rightSide}>\r\n                    <Tabs\r\n                        value={tab}\r\n                        className={classes.colorCat}\r\n                        onChange={(value) => tabData.handleTabChange(value, id)}>\r\n                        <Tab label=\"Список товаров\" value={TAB.ORDER_TAB_PRODUCT_LIST}>\r\n                            <div className={classes.tabContent}>\r\n                                <div className={classes.tabWrapper}>\r\n                                    <Row className=\"dottedList\">\r\n                                        <Col xs={6}>Товар</Col>\r\n                                        <Col xs={2}>Количество</Col>\r\n                                        <Col xs={2}>Цена {primaryCurrency}</Col>\r\n                                        <Col xs={2}>Сумма {primaryCurrency}</Col>\r\n                                    </Row>\r\n\r\n                                    {_.map(products, (item, index) => {\r\n                                        const product = _.get(item, 'product')\r\n                                        const productName = _.get(product, 'name')\r\n                                        const price = _.get(item, 'price')\r\n                                        const productTotal = _.get(item, 'totalPrice')\r\n                                        const amount = _.get(item, 'amount')\r\n                                        const measurement = _.get(product, ['measurement', 'name'])\r\n                                        return (\r\n                                            <Row className=\"dottedList\" key={index}>\r\n                                                <Col xs={6}>{productName}</Col>\r\n                                                <Col xs={2}>{numberFormat(amount)} {measurement}</Col>\r\n                                                <Col xs={2}>{numberFormat(price)}</Col>\r\n                                                <Col xs={2}>{numberFormat(productTotal)}</Col>\r\n                                            </Row>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                                <div className={classes.summary}>Итого: {numberFormat(totalPrice)} {primaryCurrency}</div>\r\n                            </div>\r\n                        </Tab>\r\n                        <Tab label=\"Возврат\" value={TAB.ORDER_TAB_RETURN}>\r\n                            {!_.isEmpty(returnData) ? <div className={classes.tabContent}>\r\n                                    {!returnDataLoading ? <div className={classes.tabWrapper}>\r\n                                            <Row className=\"dottedList\">\r\n                                                <Col xs={2}>Код</Col>\r\n                                                <Col xs={6} style={{textAlign: 'left'}}>Причина возврата</Col>\r\n                                                <Col xs={2}>Дата возврата</Col>\r\n                                                <Col xs={2}>Сумма {primaryCurrency}</Col>\r\n                                            </Row>\r\n                                            {_.map(returnData, (item, index) => {\r\n                                                const returnId = _.get(item, 'id')\r\n                                                const comment = _.get(item, 'comment')\r\n                                                const dateReturn = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\r\n                                                const totalSum = numberFormat(_.get(item, 'totalPrice'))\r\n                                                return (\r\n                                                    <Row className=\"dottedList\" key={index}>\r\n                                                        <Col xs={2}><a\r\n                                                            onClick={() => { itemReturnDialog.handleOpenItemReturnDialog(returnId) }}\r\n                                                            className={classes.link}>\r\n                                                            {returnId}\r\n                                                        </a>\r\n                                                        </Col>\r\n                                                        <Col style={{textAlign: 'left'}} xs={6}>{comment}</Col>\r\n                                                        <Col xs={2}>{dateReturn}</Col>\r\n                                                        <Col xs={2}>{totalSum}</Col>\r\n                                                    </Row>\r\n                                                )\r\n                                            })}\r\n                                        </div>\r\n                                        : <div className={classes.loader} style={{height: '265px', marginTop: '1px'}}>\r\n                                            <div>\r\n                                                <CircularProgress size={40} thickness={4}/>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                            </div>\r\n                            : <div className={classes.emptyQuery}>\r\n                                    <div>В данном заказе нет возвратов</div>\r\n                                </div>}\r\n                        </Tab>\r\n                        <Tab label=\"Исполнение\" value={TAB.ORDER_TAB_PERFORMANCE}>3</Tab>\r\n                    </Tabs>\r\n                </div>\r\n            </div>\r\n            <OrderTransactionsDialog\r\n                open={transactionsDialog.openTransactionsDialog}\r\n                loading={transactionsDialog.transactionsLoading}\r\n                onClose={transactionsDialog.handleCloseTransactionsDialog}\r\n                paymentData={paymentData}\r\n            />\r\n            <OrderReturnDialog\r\n                open={returnDialog.openReturnDialog}\r\n                loading={returnDialog.returnLoading}\r\n                onClose={returnDialog.handleCloseReturnDialog}\r\n                onSubmit={returnDialog.handleSubmitReturnDialog}\r\n                orderData={data}\r\n            />\r\n            <OrderItemReturnDialog\r\n                returnListData={returnListData}\r\n                open={itemReturnDialog.openOrderItemReturnDialog}\r\n                loading={itemReturnDialog.returnDialogLoading}\r\n                onClose={itemReturnDialog.handleCloseItemReturnDialog}\r\n            />\r\n        </div>\r\n    )\r\n})\r\n\r\nOrderDetails.propTypes = {\r\n    paymentData: PropTypes.object,\r\n    returnListData: PropTypes.object,\r\n    tabData: PropTypes.shape({\r\n        tab: PropTypes.string.isRequired,\r\n        handleTabChange: PropTypes.func.isRequired\r\n    }),\r\n    data: PropTypes.object.isRequired,\r\n    returnData: PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    returnDialog: PropTypes.shape({\r\n        returnLoading: PropTypes.bool.isRequired,\r\n        openReturnDialog: PropTypes.bool.isRequired,\r\n        handleOpenReturnDialog: PropTypes.func.isRequired,\r\n        handleCloseReturnDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    itemReturnDialog: PropTypes.shape({\r\n        returnDialogLoading: PropTypes.bool.isRequired,\r\n        openOrderItemReturnDialog: PropTypes.bool.isRequired,\r\n        handleOpenItemReturnDialog: PropTypes.func.isRequired,\r\n        handleCloseItemReturnDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    handleOpenUpdateDialog: PropTypes.func.isRequired,\r\n    orderListData: PropTypes.object,\r\n    getDocument: PropTypes.shape({\r\n        handleGetDocument: PropTypes.func.isRequired\r\n    }),\r\n    returnDataLoading: PropTypes.bool\r\n}\r\n\r\nexport default OrderDetails\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Order/OrderDetails.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router'\nimport IconButton from 'material-ui/IconButton'\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\nimport * as ROUTES from '../../constants/routes'\nimport GridList from '../GridList'\nimport Container from '../Container'\nimport OrderFilterForm from './OrderFilterForm'\nimport OrderDetails from './OrderDetails'\nimport OrderCreateDialog from './OrderCreateDialog'\nimport OrderShortageDialog from './OrderShortage'\nimport DeleteDialog from '../DeleteDialog'\nimport ConfirmDialog from '../ConfirmDialog'\nimport ClientCreateDialog from '../Client/ClientCreateDialog'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport MapsLocalShipping from 'material-ui/svg-icons/maps/local-shipping'\nimport Tooltip from '../ToolTip'\nimport numberFormat from '../../helpers/numberFormat'\nimport Home from 'material-ui/svg-icons/action/home'\nimport AccountBalanceWallet from 'material-ui/svg-icons/action/account-balance-wallet'\nimport VisibilityOff from 'material-ui/svg-icons/action/visibility-off'\nimport moment from 'moment'\nimport CachedIcon from 'material-ui/svg-icons/action/cached'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'id',\n        title: 'Заказ №',\n        xs: '10%'\n    },\n    {\n        sorting: true,\n        name: 'client',\n        title: 'Клиент',\n        xs: '20%'\n    },\n    {\n        sorting: true,\n        name: 'user',\n        title: 'Инициатор',\n        xs: '15%'\n    },\n    {\n        sorting: true,\n        name: 'dateDelivery',\n        title: 'Дата доставки',\n        xs: '15%'\n    },\n    {\n        sorting: true,\n        name: 'totalCost',\n        title: 'Сумма заказа',\n        xs: '15%'\n    },\n    {\n        sorting: true,\n        name: 'createdDate',\n        title: 'Дата создания',\n        xs: '15%'\n    },\n    {\n        sorting: true,\n        name: 'acceptedCost',\n        title: 'Статус',\n        xs: '10%'\n    }\n]\n\nconst enhance = compose(\n    injectSheet({\n        addButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        addButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px'\n        },\n        dot: {\n            display: 'inline-block',\n            height: '7px',\n            width: '7px',\n            borderRadius: '50%',\n            marginRight: '6px'\n        },\n        success: {\n            extend: 'dot',\n            backgroundColor: '#81c784'\n        },\n        error: {\n            extend: 'dot',\n            backgroundColor: '#e57373'\n        },\n        buttons: {\n            display: 'flex',\n            justifyContent: 'flex-end'\n        }\n    })\n)\n\nconst OrderGridList = enhance((props) => {\n    const {\n        filter,\n        createDialog,\n        updateDialog,\n        filterDialog,\n        actionsDialog,\n        getDocument,\n        transactionsDialog,\n        returnDialog,\n        shortageDialog,\n        products,\n        confirmDialog,\n        itemReturnDialog,\n        deleteDialog,\n        listData,\n        detailData,\n        returnListData,\n        paymentData,\n        tabData,\n        classes,\n        createClientDialog,\n        returnDataLoading\n    } = props\n    const actions = (\n        <div>\n            <IconButton onTouchTap={actionsDialog.handleActionEdit}>\n                <ModEditorIcon />\n            </IconButton>\n\n            <IconButton onTouchTap={actionsDialog.handleActionDelete}>\n                <DeleteIcon />\n            </IconButton>\n        </div>\n    )\n\n    const orderFilterDialog = (\n        <OrderFilterForm\n            initialValues={filterDialog.initialValues}\n            filter={filter}\n            filterDialog={filterDialog}\n        />\n    )\n    const iconStyle = {\n        icon: {\n            color: '#666',\n            width: 20,\n            height: 20\n        },\n        button: {\n            width: 48,\n            height: 48,\n            padding: 0,\n            zIndex: 0\n        }\n    }\n    const orderDetail = (\n        <OrderDetails\n            key={_.get(detailData, 'id')}\n            data={_.get(detailData, 'data') || {}}\n            returnData={_.get(detailData, 'return')}\n            deleteDialog={deleteDialog}\n            transactionsDialog={transactionsDialog}\n            tabData={tabData}\n            getDocument={getDocument}\n            paymentData={paymentData}\n            returnListData={returnListData}\n            returnDialog={returnDialog}\n            itemReturnDialog={itemReturnDialog}\n            confirmDialog={confirmDialog}\n            loading={_.get(detailData, 'detailLoading')}\n            returnDataLoading={returnDataLoading}\n            handleOpenUpdateDialog={updateDialog.handleOpenUpdateDialog}\n            handleCloseDetail={_.get(detailData, 'handleCloseDetail')}\n        />\n    )\n    const orderList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const client = _.get(item, ['client', 'name'])\n        const user = _.get(item, ['user', 'firstName']) + ' ' + _.get(item, ['user', 'secondName']) || 'N/A'\n        const dateDelivery = _.get(item, 'dateDelivery') || 'N/A'\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY HH:MM')\n        const totalBalance = _.toInteger(_.get(item, 'totalBalance'))\n        const totalPrice = numberFormat(_.get(item, 'totalPrice'), 'SUM')\n        const status = _.toInteger(_.get(item, 'status'))\n        const REQUESTED = 0\n        const READY = 1\n        const DELIVERED = 2\n        const ZERO = 0\n        return (\n        <div style={{width: '100%', display: 'flex', alignItems: 'center'}} key={id}>\n            <div style={{width: '10%'}}>\n                {id}\n            </div>\n            <div style={{width: '20%'}}>\n                <Link to={{\n                    pathname: sprintf(ROUTES.ORDER_ITEM_PATH, id),\n                    query: filter.getParams()\n                }}>{client}</Link>\n            </div>\n            <div style={{width: '15%'}}>\n                {user}\n            </div>\n            <div style={{width: '15%'}}>\n                {dateDelivery}\n            </div>\n            <div style={{width: '15%'}}>\n                {totalPrice}\n            </div>\n            <div style={{width: '15%'}}>\n                {createdDate}\n            </div>\n            <div style={{width: '10%'}} className={classes.buttons}>\n                {(status === REQUESTED) ? <Tooltip position=\"bottom\" text=\"В процессе\">\n                        <IconButton\n                            iconStyle={iconStyle.icon}\n                            style={iconStyle.button}\n                            touch={true}>\n                            <CachedIcon color=\"#666\"/>\n                        </IconButton>\n                    </Tooltip>\n                    : (status === READY) ? <Tooltip position=\"bottom\" text=\"Есть на складе\">\n                            <IconButton\n                                iconStyle={iconStyle.icon}\n                                style={iconStyle.button}\n                                touch={true}>\n                                <Home color=\"#81c784\"/>\n                            </IconButton>\n                        </Tooltip>\n\n                        : (status === DELIVERED) ? <Tooltip position=\"bottom\" text=\"Забрали товар\">\n                            <IconButton\n                                iconStyle={iconStyle.icon}\n                                style={iconStyle.button}\n                                touch={true}>\n                                <MapsLocalShipping color=\"#81c784\" />\n                            </IconButton>\n                        </Tooltip>\n                            : <Tooltip position=\"bottom\" text=\"Заказ отменен\">\n                                <IconButton\n                                    iconStyle={iconStyle.icon}\n                                    style={iconStyle.button}\n                                    touch={true}>\n                                    <VisibilityOff color='#e57373'/>\n                                </IconButton>\n                            </Tooltip>\n                }\n               <Tooltip position=\"bottom\" text=\"Есть долг\">\n                    <IconButton\n                        iconStyle={iconStyle.icon}\n                        style={iconStyle.button}\n                        touch={true}>\n                        <AccountBalanceWallet color={totalBalance > ZERO ? '#e57373' : '#4db6ac'}/>\n                    </IconButton>\n                </Tooltip>\n            </div>\n        </div>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: orderList,\n        loading: _.get(listData, 'listLoading')\n    }\n\n    return (\n        <Container>\n            <SubMenu url={ROUTES.ORDER_LIST_URL}/>\n\n            <div className={classes.addButtonWrapper}>\n                <Tooltip position=\"left\" text=\"Добавить заказ\">\n                    <FloatingActionButton\n                        mini={true}\n                        className={classes.addButton}\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\n                        <ContentAdd />\n                    </FloatingActionButton>\n                </Tooltip>\n            </div>\n\n            <GridList\n                filter={filter}\n                list={list}\n                detail={orderDetail}\n                withoutRow={true}\n                actionsDialog={actions}\n                filterDialog={orderFilterDialog}\n            />\n\n            <OrderCreateDialog\n                open={createDialog.openCreateDialog}\n                loading={createDialog.createLoading}\n                createClientDialog={createClientDialog}\n                onClose={createDialog.handleCloseCreateDialog}\n                onSubmit={createDialog.handleSubmitCreateDialog}\n                shortageDialog={shortageDialog}\n                products={products}\n            />\n\n            <OrderShortageDialog\n                products={products}\n                open={shortageDialog.openShortageDialog}\n                loading={shortageDialog.shortageLoading}\n                onClose={shortageDialog.handleCloseShortageDialog}\n                onSubmit={shortageDialog.handleSubmitShortageDialog}\n            />\n\n            <OrderCreateDialog\n                isUpdate={true}\n                initialValues={updateDialog.initialValues}\n                open={updateDialog.openUpdateDialog}\n                loading={updateDialog.updateLoading}\n                onClose={updateDialog.handleCloseUpdateDialog}\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\n            />\n\n            <DeleteDialog\n                filter={filter}\n                open={deleteDialog.openDeleteDialog}\n                onClose={deleteDialog.handleCloseDeleteDialog}\n            />\n\n            <ClientCreateDialog\n                open={createClientDialog.openCreateClientDialog}\n                initialValues={createClientDialog.initialValues}\n                loading={createClientDialog.createClientLoading}\n                onClose={createClientDialog.handleCloseCreateClientDialog}\n                onSubmit={createClientDialog.handleSubmitCreateClientDialog}\n            />\n\n            {detailData.data && <ConfirmDialog\n                type=\"cancel\"\n                message={'Заказ № ' + _.get(detailData, ['data', 'id'])}\n                onClose={confirmDialog.handleCloseConfirmDialog}\n                onSubmit={confirmDialog.handleSendConfirmDialog}\n                open={confirmDialog.openConfirmDialog}\n            />}\n        </Container>\n    )\n})\n\nOrderGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    paymentData: PropTypes.object,\n    returnListData: PropTypes.object,\n    products: PropTypes.array,\n    tabData: PropTypes.shape({\n        tab: PropTypes.string.isRequired,\n        handleTabChange: PropTypes.func.isRequired\n    }),\n    detailData: PropTypes.object,\n    createDialog: PropTypes.shape({\n        createLoading: PropTypes.bool.isRequired,\n        openCreateDialog: PropTypes.bool.isRequired,\n        handleOpenCreateDialog: PropTypes.func.isRequired,\n        handleCloseCreateDialog: PropTypes.func.isRequired,\n        handleSubmitCreateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    confirmDialog: PropTypes.shape({\n        openConfirmDialog: PropTypes.bool.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleSendConfirmDialog: PropTypes.func.isRequired\n    }).isRequired,\n    deleteDialog: PropTypes.shape({\n        openDeleteDialog: PropTypes.bool.isRequired,\n        handleOpenDeleteDialog: PropTypes.func.isRequired,\n        handleCloseDeleteDialog: PropTypes.func.isRequired\n    }).isRequired,\n    updateDialog: PropTypes.shape({\n        updateLoading: PropTypes.bool.isRequired,\n        openUpdateDialog: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    actionsDialog: PropTypes.shape({\n        handleActionEdit: PropTypes.func.isRequired,\n        handleActionDelete: PropTypes.func.isRequired\n    }).isRequired,\n    transactionsDialog: PropTypes.shape({\n        transactionsLoading: PropTypes.bool.isRequired,\n        openTransactionsDialog: PropTypes.bool.isRequired,\n        handleOpenTransactionsDialog: PropTypes.func.isRequired,\n        handleCloseTransactionsDialog: PropTypes.func.isRequired\n    }).isRequired,\n    itemReturnDialog: PropTypes.shape({\n        returnDialogLoading: PropTypes.bool.isRequired,\n        openOrderItemReturnDialog: PropTypes.bool.isRequired,\n        handleOpenItemReturnDialog: PropTypes.func.isRequired,\n        handleCloseItemReturnDialog: PropTypes.func.isRequired\n    }).isRequired,\n    returnDialog: PropTypes.shape({\n        returnLoading: PropTypes.bool.isRequired,\n        openReturnDialog: PropTypes.bool.isRequired,\n        handleOpenReturnDialog: PropTypes.func.isRequired,\n        handleCloseReturnDialog: PropTypes.func.isRequired\n    }).isRequired,\n    shortageDialog: PropTypes.shape({\n        shortageLoading: PropTypes.bool.isRequired,\n        openShortageDialog: PropTypes.bool.isRequired,\n        handleOpenShortageDialog: PropTypes.func.isRequired,\n        handleCloseShortageDialog: PropTypes.func.isRequired\n    }).isRequired,\n    filterDialog: PropTypes.shape({\n        initialValues: PropTypes.object,\n        filterLoading: PropTypes.bool,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    }).isRequired,\n    createClientDialog: PropTypes.shape({\n        createClientLoading: PropTypes.bool.isRequired,\n        openCreateClientDialog: PropTypes.bool.isRequired,\n        handleOpenCreateClientDialog: PropTypes.func.isRequired,\n        handleCloseCreateClientDialog: PropTypes.func.isRequired,\n        handleSubmitCreateClientDialog: PropTypes.func.isRequired\n    }).isRequired,\n    getDocument: PropTypes.shape({\n        handleGetDocument: PropTypes.func.isRequired\n    }),\n    returnDataLoading: PropTypes.bool\n}\n\nexport default OrderGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Order/OrderGridList.js","import OrderGridList from './OrderGridList'\r\nimport {ORDER_CREATE_DIALOG_OPEN} from './OrderCreateDialog'\r\nimport {ORDER_TRANSACTIONS_DIALOG_OPEN} from './OrderTransactionsDialog'\r\nimport {ORDER_RETURN_DIALOG_OPEN} from './OrderReturnDialog'\r\nimport {ORDER_SHORTAGE_DIALOG_OPEN} from './OrderShortage'\r\nimport {ORDER_FILTER_KEY, ORDER_FILTER_OPEN} from './OrderFilterForm'\r\nimport {ORDER_ITEM_RETURN_DIALOG_OPEN} from './OrderItemReturnDialog'\r\n\r\nconst ORDER_DELETE_DIALOG_OPEN = 'openDeleteDialog'\r\nconst ORDER_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\r\nconst TAB = 'tab'\r\n\r\nexport {\r\n    ORDER_CREATE_DIALOG_OPEN,\r\n    ORDER_DELETE_DIALOG_OPEN,\r\n    ORDER_FILTER_KEY,\r\n    ORDER_FILTER_OPEN,\r\n    ORDER_TRANSACTIONS_DIALOG_OPEN,\r\n    ORDER_ITEM_RETURN_DIALOG_OPEN,\r\n    ORDER_RETURN_DIALOG_OPEN,\r\n    ORDER_SHORTAGE_DIALOG_OPEN,\r\n    ORDER_UPDATE_DIALOG_OPEN,\r\n    OrderGridList,\r\n    TAB\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Order/index.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\r\nimport numberFormat from '../../helpers/numberFormat'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport {CashboxSearchField, ExpensiveCategorySearchField} from '../ReduxForm'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport MainStyles from '../Styles/MainStyles'\r\n\r\nexport const PENDING_EXPENSES_CREATE_DIALOG_OPEN = 'openCreateDialog'\r\n\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\r\n\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        latLng,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        },\r\n        info: {\r\n            padding: '20px 0'\r\n        },\r\n        infoHeader: {\r\n            fontWeight: '600',\r\n            lineHeight: '20px'\r\n        },\r\n        infoSummary: {\r\n            color: '#666',\r\n            marginTop: '10px'\r\n        },\r\n        cashbox: {\r\n            padding: '5px 30px 15px',\r\n            margin: '0 -30px',\r\n            background: '#f1f5f8'\r\n        }\r\n    })),\r\n    reduxForm({\r\n        form: 'PendingExpensesCreateForm',\r\n        enableReinitialize: true\r\n    })\r\n)\r\n\r\nconst PendingExpensesCreateDialog = enhance((props) => {\r\n    const {open, loading, handleSubmit, onClose, detailData, classes} = props\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n\r\n    const supply = _.get(detailData, ['data', 'supply'])\r\n    const currency = _.get(detailData, ['data', 'currency'])\r\n    const currencyName = _.get(currency, 'name')\r\n    const summary = numberFormat(_.get(detailData, ['data', 'amount']))\r\n    const supplyId = _.get(supply, 'id')\r\n    const supplier = _.get(supply, ['provider', 'name'])\r\n\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            className={classes.dialog}\r\n            contentStyle={loading ? {width: '300px'} : {width: '350px'}}\r\n            bodyStyle={{minHeight: 'auto'}}\r\n            bodyClassName={classes.popUp}>\r\n            <div className={classes.titleContent}>\r\n                <span>Расход</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit} className={classes.form}>\r\n                    <div className={classes.inContent} style={{minHeight: '220px'}}>\r\n                        <div className={classes.loader}>\r\n                            <CircularProgress size={40} thickness={4}/>\r\n                        </div>\r\n                        <div className={classes.field}>\r\n                            <div className={classes.info}>\r\n                                <div className={classes.infoHeader}>\r\n                                    <div>{supplier}</div>\r\n                                    <div>Поставка №{supplyId}</div>\r\n                                </div>\r\n                                <div className={classes.infoSummary}>\r\n                                    <div>Сумма заказа: <span style={{marginLeft: '10px'}}>{summary} {currencyName}</span></div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.cashbox}>\r\n                                <Field\r\n                                    name=\"categoryId\"\r\n                                    component={ExpensiveCategorySearchField}\r\n                                    label=\"Категория расхода\"\r\n                                    className={classes.inputFieldCustom}\r\n                                    fullWidth={true}/>\r\n                                <Field\r\n                                    name=\"cashbox\"\r\n                                    className={classes.inputFieldCustom}\r\n                                    component={CashboxSearchField}\r\n                                    label=\"Касса получатель\"\r\n                                    fullWidth={true}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <FlatButton\r\n                            label=\"Сохранить\"\r\n                            className={classes.actionButton}\r\n                            primary={true}\r\n                            type=\"submit\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\n\r\nPendingExpensesCreateDialog.propTyeps = {\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default PendingExpensesCreateDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/PendingExpenses/PendingExpensesCreateDialog.js","import _ from 'lodash'\r\nimport moment from 'moment'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport GridList from '../GridList'\r\nimport Container from '../Container'\r\nimport PendingExpensesFilterForm from './PendingExpensesFilterForm'\r\nimport PendingExpensesCreateDialog from './PendingExpensesCreateDialog'\r\nimport SubMenu from '../SubMenu'\r\nimport injectSheet from 'react-jss'\r\nimport {compose} from 'recompose'\r\nimport AddPayment from 'material-ui/svg-icons/av/playlist-add-check'\r\nimport numberFormat from '../../helpers/numberFormat'\r\n\r\nconst listHeader = [\r\n    {\r\n        sorting: true,\r\n        name: 'supply',\r\n        title: '№ заказа',\r\n        xs: 2\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'type',\r\n        title: 'Описание',\r\n        xs: 4\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'brand',\r\n        title: 'Дата',\r\n        xs: 2\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'measurement',\r\n        title: 'Сумма',\r\n        xs: 3\r\n    }\r\n]\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        addButton: {\r\n            '& button': {\r\n                backgroundColor: '#275482 !important'\r\n            }\r\n        },\r\n        addButtonWrapper: {\r\n            position: 'absolute',\r\n            top: '10px',\r\n            right: '0',\r\n            marginBottom: '0px'\r\n        }\r\n    })\r\n)\r\n\r\nconst iconStyle = {\r\n    icon: {\r\n        color: '#12aaeb',\r\n        width: 24,\r\n        height: 24\r\n    },\r\n    button: {\r\n        width: 48,\r\n        height: 48,\r\n        padding: 0\r\n    }\r\n}\r\n\r\nconst PendingExpensesGridList = enhance((props) => {\r\n    const {\r\n        filter,\r\n        updateDialog,\r\n        filterDialog,\r\n        listData,\r\n        detailData\r\n    } = props\r\n\r\n    const pendingExpensesFilterDialog = (\r\n        <PendingExpensesFilterForm\r\n            initialValues={filterDialog.initialValues}\r\n            filter={filter}\r\n            filterDialog={filterDialog}\r\n        />\r\n    )\r\n\r\n    const pendingExpensesDetail = (\r\n        <span>a</span>\r\n    )\r\n\r\n    const pendingExpensesList = _.map(_.get(listData, 'data'), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const supplyNo = _.get(item, 'supply')\r\n        const comment = _.get(item, 'comment')\r\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\r\n        const summary = numberFormat(_.get(item, 'amount'))\r\n        const currency = _.get(item, ['currency', 'name'])\r\n        return (\r\n            <Row key={id}>\r\n                <Col xs={2}>{supplyNo}</Col>\r\n                <Col xs={4}>{comment}</Col>\r\n                <Col xs={2}>{createdDate}</Col>\r\n                <Col xs={3}>{summary} {currency}</Col>\r\n                <Col xs={1} style={{textAlign: 'right', padding: '0'}}>\r\n                    <IconButton\r\n                        iconStyle={iconStyle.icon}\r\n                        style={iconStyle.button}\r\n                        touch={true}\r\n                        onTouchTap={() => { updateDialog.handleOpenUpdateDialog(id) }}>\r\n                        <AddPayment />\r\n                    </IconButton>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    })\r\n\r\n    const list = {\r\n        header: listHeader,\r\n        list: pendingExpensesList,\r\n        loading: _.get(listData, 'listLoading')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.PENDING_EXPENSES_LIST_URL}/>\r\n\r\n            <GridList\r\n                filter={filter}\r\n                list={list}\r\n                detail={pendingExpensesDetail}\r\n                filterDialog={pendingExpensesFilterDialog}\r\n            />\r\n\r\n            <PendingExpensesCreateDialog\r\n                initialValues={updateDialog.initialValues}\r\n                open={updateDialog.openUpdateDialog}\r\n                detailData={detailData}\r\n                loading={updateDialog.updateLoading}\r\n                onClose={updateDialog.handleCloseUpdateDialog}\r\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\r\n            />\r\n        </Container>\r\n    )\r\n})\r\n\r\nPendingExpensesGridList.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object,\r\n    updateDialog: PropTypes.shape({\r\n        updateLoading: PropTypes.bool.isRequired,\r\n        openUpdateDialog: PropTypes.bool.isRequired,\r\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\r\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\r\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    filterDialog: PropTypes.shape({\r\n        initialValues: PropTypes.object,\r\n        filterLoading: PropTypes.bool,\r\n        openFilterDialog: PropTypes.bool.isRequired,\r\n        handleOpenFilterDialog: PropTypes.func.isRequired,\r\n        handleCloseFilterDialog: PropTypes.func.isRequired,\r\n        handleSubmitFilterDialog: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default PendingExpensesGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/PendingExpenses/PendingExpensesGridList.js","import PendingExpensesGridList from './PendingExpensesGridList'\r\nimport {PENDING_EXPENSES_FILTER_KEY, PENDING_EXPENSES_FILTER_OPEN} from './PendingExpensesFilterForm'\r\nconst PENDING_EXPENSES_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\r\n\r\nexport {\r\n    PENDING_EXPENSES_UPDATE_DIALOG_OPEN,\r\n    PENDING_EXPENSES_FILTER_KEY,\r\n    PENDING_EXPENSES_FILTER_OPEN,\r\n    PendingExpensesGridList\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/PendingExpenses/index.js","import _ from 'lodash'\r\nimport moment from 'moment'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport GridList from '../GridList'\r\nimport Container from '../Container'\r\nimport PendingPaymentsFilterForm from './PendingPaymentsFilterForm'\r\nimport PendingPaymentsCreateDialog from './PendingPaymentsCreateDialog'\r\nimport SubMenu from '../SubMenu'\r\nimport injectSheet from 'react-jss'\r\nimport {compose} from 'recompose'\r\nimport AddPayment from 'material-ui/svg-icons/av/playlist-add-check'\r\nimport numberFormat from '../../helpers/numberFormat'\r\nimport getConfig from '../../helpers/getConfig'\r\n\r\nconst listHeader = [\r\n    {\r\n        sorting: true,\r\n        name: 'id',\r\n        title: '№ заказа',\r\n        xs: 1\r\n    },\r\n    {\r\n        sorting: false,\r\n        name: 'clientName',\r\n        title: 'Клиент',\r\n        xs: 3\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'created_date',\r\n        title: 'Дата',\r\n        xs: 2\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'total_price',\r\n        title: 'Сумма заказа',\r\n        xs: 2\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'total_balance',\r\n        title: 'Остаток',\r\n        xs: 3\r\n    }\r\n]\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        addButton: {\r\n            '& button': {\r\n                backgroundColor: '#275482 !important'\r\n            }\r\n        },\r\n        addButtonWrapper: {\r\n            position: 'absolute',\r\n            top: '10px',\r\n            right: '0',\r\n            marginBottom: '0px'\r\n        }\r\n    })\r\n)\r\n\r\nconst iconStyle = {\r\n    icon: {\r\n        color: '#12aaeb',\r\n        width: 24,\r\n        height: 24\r\n    },\r\n    button: {\r\n        width: 48,\r\n        height: 48,\r\n        padding: 0\r\n    }\r\n}\r\nconst PendingPaymentsGridList = enhance((props) => {\r\n    const {\r\n        filter,\r\n        updateDialog,\r\n        filterDialog,\r\n        listData,\r\n        detailData\r\n    } = props\r\n\r\n    const pendingPaymentsFilterDialog = (\r\n        <PendingPaymentsFilterForm\r\n            initialValues={filterDialog.initialValues}\r\n            filter={filter}\r\n            filterDialog={filterDialog}\r\n        />\r\n    )\r\n\r\n    const pendingPaymentsDetail = (\r\n        <span>a</span>\r\n    )\r\n\r\n    const pendingPaymentsList = _.map(_.get(listData, 'data'), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const client = _.get(item, 'client')\r\n        const clientName = _.get(client, 'name')\r\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\r\n        const totalPrice = numberFormat(_.get(item, 'totalPrice'), getConfig('PRIMARY_CURRENCY'))\r\n        const totalBalance = numberFormat(_.get(item, 'totalBalance'), getConfig('PRIMARY_CURRENCY'))\r\n        return (\r\n            <Row key={id}>\r\n                <Col xs={1}>{id}</Col>\r\n                <Col xs={3}>{clientName}</Col>\r\n                <Col xs={2}>{createdDate}</Col>\r\n                <Col xs={2}>{totalPrice}</Col>\r\n                <Col xs={3}>{totalBalance}</Col>\r\n                <Col xs={1} style={{textAlign: 'right', padding: '0'}}>\r\n                    <IconButton\r\n                        iconStyle={iconStyle.icon}\r\n                        style={iconStyle.button}\r\n                        touch={true}\r\n                        onTouchTap={() => { updateDialog.handleOpenUpdateDialog(id) }}>\r\n                        <AddPayment />\r\n                    </IconButton>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    })\r\n\r\n    const list = {\r\n        header: listHeader,\r\n        list: pendingPaymentsList,\r\n        loading: _.get(listData, 'listLoading')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.PENDING_PAYMENTS_LIST_URL}/>\r\n\r\n            <GridList\r\n                filter={filter}\r\n                list={list}\r\n                detail={pendingPaymentsDetail}\r\n                filterDialog={pendingPaymentsFilterDialog}\r\n            />\r\n\r\n            <PendingPaymentsCreateDialog\r\n                initialValues={updateDialog.initialValues}\r\n                open={updateDialog.openUpdateDialog}\r\n                detailData={detailData}\r\n                loading={updateDialog.updateLoading}\r\n                onClose={updateDialog.handleCloseUpdateDialog}\r\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\r\n            />\r\n        </Container>\r\n    )\r\n})\r\n\r\nPendingPaymentsGridList.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object,\r\n    updateDialog: PropTypes.shape({\r\n        updateLoading: PropTypes.bool.isRequired,\r\n        openUpdateDialog: PropTypes.bool.isRequired,\r\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\r\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\r\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    filterDialog: PropTypes.shape({\r\n        initialValues: PropTypes.object,\r\n        filterLoading: PropTypes.bool,\r\n        openFilterDialog: PropTypes.bool.isRequired,\r\n        handleOpenFilterDialog: PropTypes.func.isRequired,\r\n        handleCloseFilterDialog: PropTypes.func.isRequired,\r\n        handleSubmitFilterDialog: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default PendingPaymentsGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/PendingPayments/PendingPaymentsGridList.js","import PendingPaymentsGridList from './PendingPaymentsGridList'\r\nimport {PENDING_PAYMENTS_CREATE_DIALOG_OPEN} from './PendingPaymentsCreateDialog'\r\nimport {PENDING_PAYMENTS_FILTER_KEY, PENDING_PAYMENTS_FILTER_OPEN} from './PendingPaymentsFilterForm'\r\nconst PENDING_PAYMENTS_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\r\n\r\nexport {\r\n    PENDING_PAYMENTS_CREATE_DIALOG_OPEN,\r\n    PENDING_PAYMENTS_UPDATE_DIALOG_OPEN,\r\n    PENDING_PAYMENTS_FILTER_KEY,\r\n    PENDING_PAYMENTS_FILTER_OPEN,\r\n    PendingPaymentsGridList\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/PendingPayments/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport PropTypes from 'prop-types'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport Edit from 'material-ui/svg-icons/image/edit'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport Tooltip from '../ToolTip'\r\nimport PriceSetForm from './PriceSetForm'\r\nimport getConfig from '../../helpers/getConfig'\r\nconst enhance = compose(\r\n    injectSheet({\r\n        loader: {\r\n            display: 'flex',\r\n            position: 'absolute',\r\n            top: '0',\r\n            left: '0',\r\n            right: '0',\r\n            bottom: '0',\r\n            alignItems: 'center',\r\n            background: '#fff',\r\n            justifyContent: 'space-around'\r\n        },\r\n        wrapper: {\r\n            color: '#333 !important',\r\n            width: '100%',\r\n            display: 'flex',\r\n            flexWrap: 'wrap'\r\n        },\r\n        title: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            width: '100%',\r\n            height: '60px',\r\n            padding: '0 30px',\r\n            borderBottom: '1px #efefef solid'\r\n        },\r\n        titleLabel: {\r\n            fontSize: '18px',\r\n            color: '#333',\r\n            fontWeight: '600',\r\n            cursor: 'pointer'\r\n        },\r\n        titleButtons: {\r\n            display: 'flex'\r\n        },\r\n        bodyTitle: {\r\n            display: 'flex',\r\n            fontWeight: '600',\r\n            marginBottom: '25px',\r\n            fontSize: '14px',\r\n            justifyContent: 'space-between',\r\n            height: '25px',\r\n            alignItems: 'center !important'\r\n        },\r\n        content: {\r\n            display: 'flex',\r\n            width: '100%'\r\n        },\r\n        subBlock: {\r\n            padding: '20px 30px',\r\n            '&:last-child': {\r\n                border: 'none'\r\n            }\r\n        },\r\n        leftSide: {\r\n            extend: 'subBlock',\r\n            flexBasis: '45%',\r\n            maxWidth: '45%',\r\n            borderRight: '1px #efefef solid'\r\n        },\r\n        rightSide: {\r\n            position: 'relative',\r\n            extend: 'subBlock',\r\n            flexBasis: '55%',\r\n            maxWidth: '55%'\r\n        },\r\n        rightSideTitleDate: {\r\n            fontWeight: '600',\r\n            fontSize: '12px!important',\r\n            color: '#a5a1a0'\r\n        },\r\n        tableContent: {\r\n            '& .row:first-child': {\r\n                fontWeight: '600',\r\n                '&:after': {\r\n                    display: 'none'\r\n                }\r\n            },\r\n            '& .row': {\r\n                margin: '0',\r\n                padding: '0 !important',\r\n                alignItems: 'center',\r\n                height: '40px',\r\n                '& > div': {\r\n                    textAlign: 'right'\r\n                },\r\n                '& > div:first-child': {\r\n                    textAlign: 'left'\r\n                }\r\n            },\r\n            overflowY: 'auto',\r\n            overflowX: 'hidden',\r\n            margin: '0 -0.5rem'\r\n        },\r\n        average: {\r\n            fontWeight: '600',\r\n            marginTop: '20px',\r\n            marginBottom: '20px',\r\n            textAlign: 'right'\r\n        },\r\n        averagePrice: {\r\n            fontWeight: '600',\r\n            paddingLeft: '20px'\r\n        }\r\n    })\r\n)\r\nconst PriceDetails = enhance((props) => {\r\n    const {\r\n        classes,\r\n        priceSupplyDialog,\r\n        priceSetForm,\r\n        detailData,\r\n        handleCloseDetail,\r\n        mergedList\r\n    } = props\r\n    const loading = _.get(detailData, 'detailLoading')\r\n    const marketTypeIsLoading = _.get(detailData, 'marketTypeLoading')\r\n    const priceListItemsIsLoading = _.get(detailData, 'priceListItemsLoading')\r\n    const priceList = _.get(detailData, 'priceListItemsList')\r\n    const name = _.get(detailData, ['data', 'name'])\r\n    const iconStyle = {\r\n        icon: {\r\n            color: '#666',\r\n            width: 20,\r\n            height: 20\r\n        },\r\n        button: {\r\n            width: 48,\r\n            height: 48,\r\n            padding: 0\r\n        }\r\n    }\r\n    if (loading) {\r\n        return (\r\n            <div className={classes.loader}>\r\n                <div>\r\n                    <CircularProgress size={40} thickness={4}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.title}>\r\n                <div className={classes.titleLabel}\r\n                     onTouchTap={handleCloseDetail}>\r\n                    {name}</div>\r\n                <div className={classes.titleButtons}>\r\n                    {!priceSetForm.openPriceSetForm && <Tooltip position=\"bottom\" text=\"Закрыть\">\r\n                        <IconButton\r\n                            iconStyle={iconStyle.icon}\r\n                            style={iconStyle.button}\r\n                            touch={true}\r\n                            onTouchTap={handleCloseDetail}>\r\n                            <CloseIcon2 />\r\n                        </IconButton>\r\n                    </Tooltip>}\r\n                </div>\r\n            </div>\r\n            <div className={classes.content}>\r\n                <div className={classes.leftSide}>\r\n                    <div className={classes.bodyTitle}>Поставки</div>\r\n                    <div className={classes.tableContent}>\r\n                        <Row>\r\n                            <Col xs={2} style={{fontSize: '15px'}}>&#8470;</Col>\r\n                            <Col style={{textAlign: 'left'}} xs={3}>Дата</Col>\r\n                            <Col style={{textAlign: 'left'}} xs={3}>Количество</Col>\r\n                            <Col xs={4}>Себестоимость</Col>\r\n                        </Row>\r\n                        <Row className=\"dottedList\">\r\n                            <Col xs={2}>\r\n                                <a onClick={ () => { priceSupplyDialog.handleOpenSupplyDialog() }} className={classes.link}>\r\n                                    P-1121\r\n                                </a>\r\n                            </Col>\r\n                            <Col style={{textAlign: 'left'}} xs={3}>23 апр, 2017</Col>\r\n                            <Col style={{textAlign: 'left'}} xs={3}>200 кг</Col>\r\n                            <Col xs={4}>90 000 UZS</Col>\r\n                        </Row>\r\n                        <div className={classes.average}> Усредненная себестоимость:\r\n                            <span className={classes.averagePrice}>100 000 UZS</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.rightSide}>\r\n                    {(marketTypeIsLoading || priceListItemsIsLoading) && <div className={classes.loader}>\r\n                        <CircularProgress size={40} thickness={4} />\r\n                    </div>}\r\n                    {priceSetForm.openPriceSetForm && <PriceSetForm\r\n                        initialValues={priceSetForm.initialValues}\r\n                        onClose={priceSetForm.handleClosePriceSetForm}\r\n                        onSubmit={priceSetForm.handleSubmitPriceSetForm}\r\n                        priceList={priceList}\r\n                        mergedList={mergedList}\r\n                    />\r\n                    }\r\n                    {(!marketTypeIsLoading && !priceListItemsIsLoading && !priceSetForm.openPriceSetForm) && <div>\r\n                        <div className={classes.bodyTitle}>\r\n                            <div>Цены на товар\r\n                                <span className={classes.rightSideTitleDate}> (23 апр, 2017)</span>\r\n                            </div>\r\n                            <div className={classes.titleButtons}>\r\n                                <Tooltip position=\"bottom\" text=\"Изменить\">\r\n                                    <IconButton\r\n                                        iconStyle={iconStyle.icon}\r\n                                        style={iconStyle.button}\r\n                                        touch={true}\r\n                                        onTouchTap={priceSetForm.handleOpenPriceSetForm}\r\n                                    >\r\n                                        <Edit />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.tableContent}>\r\n                            <Row className=\"dottedList\">\r\n                                <Col xs={6}>Тип обьекта</Col>\r\n                                <Col style={{textAlign: 'left'}} xs={3}>Нал</Col>\r\n                                <Col style={{textAlign: 'left'}} xs={3}>Безнал</Col>\r\n                            </Row>\r\n                            {_.map(mergedList, (item) => {\r\n                                const id = _.get(item, 'marketTypeId')\r\n                                const marketName = _.get(item, 'marketTypeName')\r\n                                const cashPrice = _.get(item, 'cash_price') + ' ' + getConfig('PRIMARY_CURRENCY')\r\n                                const transferPrice = _.get(item, 'transfer_price') + ' ' + getConfig('PRIMARY_CURRENCY')\r\n                                return (\r\n                                    <Row className=\"dottedList\" key={id}>\r\n                                        <Col xs={6}> {marketName}</Col>\r\n                                        <Col style={{textAlign: 'left'}} xs={3}>{cashPrice}</Col>\r\n                                        <Col style={{textAlign: 'left'}} xs={3}>{transferPrice}</Col>\r\n                                    </Row>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div> }\r\n                </div>\r\n            </div>\r\n        </div>)\r\n})\r\nPriceDetails.PropTypes = {\r\n    mergedList: PropTypes.func.isRequired,\r\n    priceSupplyDialog: PropTypes.shape({\r\n        openPriceSupplyDialog: PropTypes.bool.isRequired,\r\n        handleOpenSupplyDialog: PropTypes.func.isRequired,\r\n        handleCloseSupplyDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    priceSetForm: PropTypes.shape({\r\n        openPriceSetForm: PropTypes.bool.isRequired,\r\n        handleOpenPriceSetForm: PropTypes.func.isRequired,\r\n        handleClosePriceSetForm: PropTypes.func.isRequired,\r\n        handleSubmitPriceSetForm: PropTypes.func.isRequired\r\n    })\r\n}\r\nexport default PriceDetails\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Price/PriceDetails.js","import _ from 'lodash'\r\nimport moment from 'moment'\r\nimport sprintf from 'sprintf'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router'\r\nimport React from 'react'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport GridList from '../GridList'\r\nimport Container from '../Container'\r\nimport PriceFilterForm from './PriceFilterForm'\r\nimport PriceSupplyDialog from './PriceSupplyDialog'\r\nimport SubMenu from '../SubMenu'\r\nimport IconMenu from 'material-ui/IconMenu'\r\nimport MenuItem from 'material-ui/MenuItem'\r\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\r\nimport injectSheet from 'react-jss'\r\nimport {compose} from 'recompose'\r\nimport PriceDetails from './PriceDetails'\r\nconst listHeader = [\r\n    {\r\n        sorting: true,\r\n        name: 'name',\r\n        title: 'Названия',\r\n        xs: 5\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'type',\r\n        title: 'Себестоимость',\r\n        xs: 2\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'price',\r\n        title: 'Цена',\r\n        xs: 3\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'created_date',\r\n        title: 'Дата обновления',\r\n        xs: 2\r\n    }\r\n]\r\nconst enhance = compose(\r\n    injectSheet({\r\n        addButton: {\r\n            '& button': {\r\n                backgroundColor: '#275482 !important'\r\n            }\r\n        },\r\n        addButtonWrapper: {\r\n            position: 'absolute',\r\n            top: '10px',\r\n            right: '0',\r\n            marginBottom: '0px'\r\n        },\r\n        priceImg: {\r\n            width: '30px',\r\n            height: '30px',\r\n            overflow: 'hidden',\r\n            marginRight: '5px',\r\n            display: 'inline-block',\r\n            borderRadius: '4px',\r\n            textAlign: 'center',\r\n            '& img': {\r\n                height: '30px'\r\n            }\r\n        }\r\n    })\r\n)\r\nconst PriceGridList = enhance((props) => {\r\n    const {\r\n        filter,\r\n        filterDialog,\r\n        confirmDialog,\r\n        priceSupplyDialog,\r\n        priceSetForm,\r\n        listData,\r\n        detailData\r\n    } = props\r\n\r\n    const priceFilterDialog = (\r\n        <PriceFilterForm\r\n            initialValues={filterDialog.initialValues}\r\n            filter={filter}\r\n            filterDialog={filterDialog}\r\n        />\r\n    )\r\n    const priceDetail = (\r\n        <PriceDetails\r\n            key={_.get(detailData, 'id')}\r\n            detailData={detailData}\r\n            priceSupplyDialog={priceSupplyDialog}\r\n            priceSetForm = {priceSetForm}\r\n            handleCloseDetail={_.get(detailData, 'handleCloseDetail')}\r\n            mergedList={(detailData.mergedList())}>\r\n        </PriceDetails>\r\n    )\r\n    const priceList = _.map(_.get(listData, 'data'), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const name = _.get(item, 'name')\r\n        const type = _.get(item, ['type', 'name']) || 'N/A'\r\n        const price = _.get(item, ['measurement', 'name']) || ''\r\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\r\n        const iconButton = (\r\n            <IconButton style={{padding: '0 12px'}}>\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n        )\r\n        return (\r\n            <Row key={id}>\r\n                <Col xs={5} style={{display: 'flex', alignItems: 'center'}}>\r\n                    <Link to={{\r\n                        pathname: sprintf(ROUTES.PRICE_ITEM_PATH, id)\r\n                    }}>{name}</Link>\r\n                </Col>\r\n                <Col xs={2}>{type}</Col>\r\n                <Col xs={2}>{price}</Col>\r\n                <Col xs={2}>{createdDate}</Col>\r\n                <Col xs={1} style={{textAlign: 'right'}}>\r\n                    <IconMenu\r\n                        iconButtonElement={iconButton}\r\n                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\r\n                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\r\n                        <MenuItem\r\n                            primaryText=\"Удалить \"\r\n                            leftIcon={<DeleteIcon />}\r\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(id) }}\r\n                        />\r\n                    </IconMenu>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    })\r\n    const list = {\r\n        header: listHeader,\r\n        list: priceList,\r\n        loading: _.get(listData, 'listLoading')\r\n    }\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.PRICE_LIST_URL}/>\r\n            <GridList\r\n                filter={filter}\r\n                list={list}\r\n                detail={priceDetail}\r\n                filterDialog={priceFilterDialog}\r\n            />\r\n            <PriceSupplyDialog\r\n                open={priceSupplyDialog.openPriceSupplyDialog}\r\n                onClose={priceSupplyDialog.handleCloseSupplyDialog}\r\n            />\r\n        </Container>\r\n    )\r\n})\r\nPriceGridList.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object,\r\n    filterDialog: PropTypes.shape({\r\n        initialValues: PropTypes.object,\r\n        filterLoading: PropTypes.bool,\r\n        openFilterDialog: PropTypes.bool.isRequired,\r\n        handleOpenFilterDialog: PropTypes.func.isRequired,\r\n        handleCloseFilterDialog: PropTypes.func.isRequired,\r\n        handleSubmitFilterDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    priceSupplyDialog: PropTypes.shape({\r\n        openPriceSupplyDialog: PropTypes.bool.isRequired,\r\n        handleOpenSupplyDialog: PropTypes.func.isRequired,\r\n        handleCloseSupplyDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    priceSetForm: PropTypes.shape({\r\n        openPriceSetForm: PropTypes.bool.isRequired,\r\n        handleOpenPriceSetForm: PropTypes.func.isRequired,\r\n        handleClosePriceSetForm: PropTypes.func.isRequired,\r\n        handleSubmitPriceSetForm: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\nexport default PriceGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Price/PriceGridList.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport {TextField} from '../ReduxForm'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport MainStyles from '../Styles/MainStyles'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nexport const PRICE_SET_FORM_OPEN = 'openSetForm'\r\nimport Tooltip from '../ToolTip'\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        latLng,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        },\r\n        bodyTitle: {\r\n            display: 'flex',\r\n            fontWeight: '700',\r\n            marginBottom: '25px',\r\n            fontSize: '14px',\r\n            justifyContent: 'space-between',\r\n            height: '25px',\r\n            alignItems: 'center !important'\r\n        },\r\n        rightSide: {\r\n            position: 'relative',\r\n            flexBasis: '100%',\r\n            maxWidth: '100%'\r\n        },\r\n        rightSideTitleDate: {\r\n            fontWeight: '600',\r\n            fontSize: '12px!important',\r\n            color: '#a5a1a0'\r\n        },\r\n        tableContent: {\r\n            '& .row:first-child': {\r\n                fontWeight: '600'\r\n            },\r\n            '& .row': {\r\n                padding: '0 !important',\r\n                '& > div': {\r\n                    textAlign: 'right'\r\n                },\r\n                '& > div:first-child': {\r\n                    textAlign: 'left'\r\n                },\r\n                '& .dottedList': {\r\n                    padding: '0px!important',\r\n                    margin: '100px'\r\n                }\r\n            },\r\n            overflowY: 'hidden',\r\n            overflowX: 'hidden'\r\n        },\r\n        actionButton: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            bottom: '0',\r\n            left: '0',\r\n            right: '0',\r\n            padding: '0',\r\n            zIndex: '999',\r\n            background: '#fff',\r\n            textAlign: 'right',\r\n            '& span': {\r\n                fontSize: '13px !important',\r\n                fontWeight: '600 !important',\r\n                color: '#129fdd',\r\n                verticalAlign: 'inherit !important'\r\n            }\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            marginTop: '0px!important',\r\n            height: '40px!important'\r\n        },\r\n        priceRow: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            height: '40px'\r\n        },\r\n        dottedList: {\r\n            extend: 'priceRow'\r\n        }\r\n    })),\r\n    reduxForm({\r\n        form: 'PriceCreateForm',\r\n        enableReinitialize: true\r\n    })\r\n)\r\nconst PriceSetForm = enhance((props) => {\r\n    const {\r\n        handleSubmit,\r\n        classes,\r\n        mergedList,\r\n        onClose\r\n    } = props\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n    const iconStyle = {\r\n        icon: {\r\n            color: '#666',\r\n            width: 20,\r\n            height: 20\r\n        },\r\n        button: {\r\n            width: 48,\r\n            height: 48,\r\n            padding: 0\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit} className={classes.form}>\r\n                <div className={classes.bodyTitle}>\r\n                    <div>Цены на товар\r\n                        <span className={classes.rightSideTitleDate}> (23 апр, 2017)</span>\r\n                    </div>\r\n                    <div className={classes.actionButton}>\r\n                        <FlatButton\r\n                            label=\"Сохранить\"\r\n                            primary={true}\r\n                            type=\"submit\"\r\n                            onTouchTap={onSubmit}\r\n                        />\r\n                        <Tooltip position=\"bottom\" text=\"Закрыть\">\r\n                            <IconButton\r\n                                iconStyle={iconStyle.icon}\r\n                                style={iconStyle.button}\r\n                                touch={true}\r\n                                onTouchTap={onClose}>\r\n                                <CloseIcon2 color=\"#666666\"/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.tableContent}>\r\n                    <Row className={classes.priceRow}>\r\n                        <Col xs={6}>Тип обьекта</Col>\r\n                        <Col style={{textAlign: 'left'}} xs={3}>Нал</Col>\r\n                        <Col style={{textAlign: 'left'}} xs={3}>Безнал</Col>\r\n                    </Row>\r\n                    {_.map(mergedList, (item, index) => {\r\n                        const marketName = _.get(item, 'marketTypeName')\r\n                        return (\r\n                            <Row className='dottedList' key={index}>\r\n                                <Col xs={6}> {marketName}</Col>\r\n                                <Col style={{textAlign: 'left'}} xs={3}>\r\n                                    <Field\r\n                                        name={'prices[' + index + '][cash_price]'}\r\n                                        className={classes.inputFieldCustom}\r\n                                        component={TextField}\r\n                                        fullWidth={true}\r\n                                    />\r\n                                </Col>\r\n                                <Col style={{textAlign: 'left'}} xs={3}>\r\n                                    <Field\r\n                                        name={'prices[' + index + '][transfer_price]'}\r\n                                        className={classes.inputFieldCustom}\r\n                                        component={TextField}\r\n                                        fullWidth={true}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n})\r\nPriceSetForm.propTyeps = {\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\nexport default PriceSetForm\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Price/PriceSetForm.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport {reduxForm} from 'redux-form'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport MainStyles from '../Styles/MainStyles'\r\nimport {Row} from 'react-flexbox-grid'\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        },\r\n        content: {\r\n            width: '100%',\r\n            display: 'block'\r\n        },\r\n        topBlock: {\r\n            padding: '20px 30px 0px 30px',\r\n            '&:last-child': {\r\n                border: 'none'\r\n            },\r\n            '& .row': {\r\n                lineHeight: '35px',\r\n                padding: '0 10px',\r\n                '& > div:first-child': {\r\n                    flexBasis: '25%',\r\n                    maxWidth: '25%'\r\n                },\r\n                '& > div:last-child': {\r\n                    fontWeight: '600',\r\n                    flexBasis: '75%',\r\n                    maxWidth: '75%'\r\n                }\r\n            }\r\n        },\r\n        downBlock: {\r\n            padding: '20px 30px',\r\n            '& .row': {\r\n                lineHeight: '35px',\r\n                padding: '0 10px',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                '& > div:last-child': {\r\n                    textAlign: 'right',\r\n                    fontWeight: '600'\r\n                }\r\n            },\r\n            '& .row:last-child': {\r\n                fontWeight: '600',\r\n                borderTop: '1px #efefef solid'\r\n            }\r\n        },\r\n        dottedList: {\r\n            padding: '10px 0'\r\n        },\r\n        subTitle: {\r\n            paddingBottom: '8px',\r\n            fontStyle: 'italic',\r\n            fontWeight: '400'\r\n        }\r\n    })),\r\n    reduxForm({\r\n        form: 'PriceCreateForm',\r\n        enableReinitialize: true\r\n    })\r\n)\r\nconst PriceSupplyDialog = enhance((props) => {\r\n    const {open, loading, onClose, classes} = props\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            className={classes.dialog}\r\n            contentStyle={loading ? {width: '400px'} : {width: '500px'}}\r\n            bodyStyle={{minHeight: 'auto'}}\r\n            bodyClassName={classes.popUp}>\r\n            <div className={classes.titleContent}>\r\n                <div>\r\n                    Поставка <span style={{fontSize: '14px'}}> &#8470;</span>\r\n                </div>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.content}>\r\n                <div className={classes.topBlock}>\r\n                    <Row>\r\n                        <div>Товар</div>\r\n                        <div>Миф морозная свежесть (жесткая упаковка)</div>\r\n                    </Row>\r\n                    <Row>\r\n                        <div>Поставщик:</div>\r\n                        <div>ООО \"Эмомали Рахмон\"</div>\r\n                    </Row>\r\n                    <Row className=\"dottedList\" style={{paddingBottom: '10px'}}>\r\n                        <div>Дата поставки:</div>\r\n                        <div>22 апр, 2017</div>\r\n                    </Row>\r\n                </div>\r\n                <div className={classes.downBlock}>\r\n                    <div className={classes.subTitle}>Расчет себестоимости за еденицу товара:</div>\r\n                    <Row>\r\n                        <div>Стоимость товара</div>\r\n                        <div>20 000</div>\r\n                    </Row>\r\n                    <Row>\r\n                        <div>Стоимость товара</div>\r\n                        <div>20 000</div>\r\n                    </Row>\r\n                    <Row>\r\n                        <div>Стоимость товара</div>\r\n                        <div>20 000</div>\r\n                    </Row>\r\n                    <Row>\r\n                        <div>Себестоимость товара</div>\r\n                        <div>29 000</div>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\nPriceSupplyDialog.propTyeps = {\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\nexport default PriceSupplyDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Price/PriceSupplyDialog.js","import PriceGridList from './PriceGridList'\r\nimport {PRICE_FILTER_KEY, PRICE_FILTER_OPEN} from './PriceFilterForm'\r\nconst PRICE_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\r\nconst PRICE_DELETE_DIALOG_OPEN = 'openDeleteDialog'\r\nconst PRICE_SUPPLY_DIALOG_OPEN = 'openPriceSupplyDialog'\r\nconst PRICE_SET_FORM_OPEN = 'openPriceSetFrom'\r\nexport {\r\n    PRICE_UPDATE_DIALOG_OPEN,\r\n    PRICE_DELETE_DIALOG_OPEN,\r\n    PRICE_FILTER_KEY,\r\n    PRICE_FILTER_OPEN,\r\n    PRICE_SUPPLY_DIALOG_OPEN,\r\n    PRICE_SET_FORM_OPEN,\r\n    PriceGridList\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Price/index.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport Edit from 'material-ui/svg-icons/image/edit'\r\nimport Delete from 'material-ui/svg-icons/action/delete'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport Dot from '../Images/dot.png'\r\nimport numberFormat from '../../helpers/numberFormat'\r\nimport getConfig from '../../helpers/getConfig'\r\nimport Tooltip from '../ToolTip'\r\nimport moment from 'moment'\r\n\r\nconst colorBlue = '#12aaeb'\r\nconst enhance = compose(\r\n    injectSheet({\r\n        dottedList: {\r\n            padding: '20px 0'\r\n        },\r\n        wrapper: {\r\n            color: '#333 !important',\r\n            width: '100%',\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            padding: '20px 30px',\r\n            '& a': {\r\n                color: colorBlue\r\n            }\r\n        },\r\n        link: {\r\n            borderBottom: '1px dashed',\r\n            fontWeight: '600'\r\n        },\r\n        defect: {\r\n            extend: 'link',\r\n            color: '#e57373 !important'\r\n        },\r\n        loader: {\r\n            width: '100%',\r\n            background: '#fff',\r\n            height: '400px',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        },\r\n        expenseLoader: {\r\n            extend: 'loader',\r\n            height: 'auto',\r\n            padding: '20px 0'\r\n        },\r\n        title: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            width: '100%',\r\n            height: '65px',\r\n            margin: '-20px 0 0'\r\n        },\r\n        titleLabel: {\r\n            fontSize: '18px',\r\n            color: '#333',\r\n            fontWeight: '600',\r\n            cursor: 'pointer'\r\n        },\r\n        titleButtons: {\r\n            display: 'flex',\r\n            justifyContent: 'flex-end'\r\n        },\r\n        titleSupplier: {\r\n            fontSize: '18px',\r\n            position: 'relative',\r\n            '& .supplierDetails': {\r\n                background: '#fff',\r\n                boxShadow: '0 2px 5px 0px rgba(0, 0, 0, 0.16)',\r\n                fontSize: '13px',\r\n                position: 'absolute',\r\n                padding: '64px 28px 20px',\r\n                top: '-21px',\r\n                left: '50%',\r\n                zIndex: '9',\r\n                minWidth: '300px',\r\n                transform: 'translate(-50%, 0)',\r\n                '& .detailsWrap': {\r\n                    position: 'relative',\r\n                    paddingTop: '10px',\r\n                    '&:before': {\r\n                        content: '\"\"',\r\n                        background: 'url(' + Dot + ')',\r\n                        position: 'absolute',\r\n                        top: '0',\r\n                        left: '0',\r\n                        right: '0',\r\n                        height: '2px'\r\n                    }\r\n                },\r\n                '& .detailsList': {\r\n                    padding: '10px 0',\r\n                    '&:last-child': {\r\n                        paddingBottom: '0'\r\n                    },\r\n                    '& div:first-child': {\r\n                        color: '#666'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        dropdown: {\r\n            position: 'relative',\r\n            paddingRight: '18px',\r\n            zIndex: '10',\r\n            '&:after': {\r\n                top: '10px',\r\n                right: '0',\r\n                content: '\"\"',\r\n                position: 'absolute',\r\n                borderTop: '5px solid',\r\n                borderLeft: '5px solid transparent',\r\n                borderRight: '5px solid transparent'\r\n            }\r\n        },\r\n        details: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            width: '100%',\r\n            background: '#f2f5f8',\r\n            padding: '0 30px',\r\n            margin: '0 -30px',\r\n            minHeight: '60px'\r\n        },\r\n        payInfo: {\r\n            display: 'flex'\r\n        },\r\n        storeInfo: {\r\n            display: 'flex'\r\n        },\r\n        dateInfo: {\r\n            textAlign: 'right',\r\n            display: 'flex'\r\n        },\r\n        data: {\r\n            width: '100%',\r\n            '& .dataHeader': {\r\n                fontWeight: 'bold',\r\n                padding: '20px 0',\r\n                width: '100%',\r\n                borderBottom: '1px solid #efefef',\r\n                '& .row': {\r\n                    alignItems: 'center',\r\n                    '& div': {\r\n                        whiteSpace: 'nowrap',\r\n                        overflow: 'hidden',\r\n                        textOverflow: 'ellipsis'\r\n                    }\r\n                }\r\n            },\r\n            '& .summary': {\r\n                fontWeight: 'bold',\r\n                textTransform: 'uppercase',\r\n                textAlign: 'right',\r\n                padding: '20px 30px',\r\n                margin: '0 -30px',\r\n                borderBottom: '1px #efefef solid'\r\n            },\r\n            '& .dottedList': {\r\n                '&:after': {\r\n                    left: '0.5rem',\r\n                    right: '0.5rem'\r\n                }\r\n            },\r\n            '& .addExpenses': {\r\n                padding: '20px 30px 0',\r\n                margin: '0 -30px',\r\n                borderBottom: '1px #efefef solid',\r\n                '& .addExpense': {\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    paddingBottom: '20px',\r\n                    width: '100%',\r\n                    justifyContent: 'space-between',\r\n                    fontWeight: 'bold',\r\n                    '& .expenseButton > div > span ': {\r\n                        color: '#12aaeb !important',\r\n                        textTransform: 'inherit !important'\r\n                    }\r\n                }\r\n            },\r\n            '& .expenseInfo': {\r\n                padding: '0 !important',\r\n                display: 'block',\r\n                '&:last-child': {\r\n                    position: 'static'\r\n                },\r\n                '& .row': {\r\n                    alignItems: 'center'\r\n                }\r\n            },\r\n            '& .comment': {\r\n                display: 'flex',\r\n                padding: '20px 0 0',\r\n                alignItems: 'center',\r\n                '& .personImage': {\r\n                    borderRadius: '50%',\r\n                    overflow: 'hidden',\r\n                    flexBasis: '35px',\r\n                    flexGrow: '1',\r\n                    height: '35px',\r\n                    width: '35px',\r\n                    '& img': {\r\n                        display: 'block',\r\n                        height: '100%',\r\n                        width: '100%'\r\n                    }\r\n                },\r\n                '& .personText': {\r\n                    background: '#f2f5f8',\r\n                    borderRadius: '2px',\r\n                    marginLeft: '15px',\r\n                    padding: '15px',\r\n                    position: 'relative',\r\n                    width: 'calc(100% - 50px)',\r\n                    '&:after': {\r\n                        content: '\"\"',\r\n                        position: 'absolute',\r\n                        borderRightColor: '#f2f5f8',\r\n                        borderRightStyle: 'solid',\r\n                        borderRightWidth: '7px',\r\n                        borderTop: '7px solid transparent',\r\n                        borderBottom: '7px solid transparent',\r\n                        left: '-7px',\r\n                        top: '50%',\r\n                        marginTop: '-7px'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        expenseSum: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end'\r\n        }\r\n    }),\r\n)\r\n\r\nconst iconStyle = {\r\n    icon: {\r\n        color: '#666',\r\n        width: 20,\r\n        height: 20\r\n    },\r\n    button: {\r\n        width: 48,\r\n        height: 48,\r\n        padding: 0\r\n    }\r\n}\r\n\r\nconst PricesDetails = enhance((props) => {\r\n    const {\r\n        classes,\r\n        loading,\r\n        data,\r\n        updateDialog,\r\n        confirmDialog,\r\n        handleCloseDetail\r\n    } = props\r\n    const id = _.get(data, 'id')\r\n    const name = _.get(data, 'name')\r\n    const products = _.get(data, 'products')\r\n    const beginDate = moment(_.get(data, 'beginDate')).format('YY:MM:DD')\r\n    const tillDate = moment(_.get(data, 'tillDate')).format('YY:MM:DD')\r\n    const discount = _.get(data, 'discount')\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className={classes.loader}>\r\n                <div>\r\n                    <CircularProgress size={40} thickness={4}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    const currency = getConfig('PRIMARY_CURRENCY')\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.title}>\r\n                <div className={classes.titleLabel}\r\n                     onClick={() => { handleCloseDetail() }}>№ {id} {name}</div>\r\n                <div className={classes.titleButtons}>\r\n                    <Tooltip position=\"bottom\" text=\"Изменить\">\r\n                        <IconButton\r\n                            iconStyle={iconStyle.icon}\r\n                            style={iconStyle.button}\r\n                            touch={true}\r\n                            onTouchTap={() => { updateDialog.handleOpenUpdateDialog() }}>\r\n                            <Edit />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip position=\"bottom\" text=\"Отменить\">\r\n                        <IconButton\r\n                            iconStyle={iconStyle.icon}\r\n                            style={iconStyle.button}\r\n                            touch={true}\r\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(id) }}>\r\n                            <Delete />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.details}>\r\n                <div className={classes.storeInfo}>\r\n                    <div className={classes.store}>Размер <b>акции - {discount} %</b></div>\r\n                </div>\r\n                <div className={classes.dateInfo}>\r\n                    <div>Начало акции: <span style={{fontWeight: '600', marginRight: '30px'}}>{beginDate}</span></div>\r\n                    <div>Завершение акции: <span style={{fontWeight: '600'}}>{tillDate}</span></div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.data}>\r\n                <div className=\"dataHeader\">\r\n                    <Row>\r\n                        <Col xs={3}>Товар</Col>\r\n                        <Col xs={3}>Кол-во</Col>\r\n                        <Col xs={3}>Реальная стоимость</Col>\r\n                        <Col xs={3}>Стоимость по акции</Col>\r\n                    </Row>\r\n                </div>\r\n                <div>\r\n                    {_.map(products, (item) => {\r\n                        const product = _.get(item, 'product')\r\n                        const productId = _.get(product, 'id')\r\n                        const productName = _.get(product, 'name')\r\n                        const amount = _.get(product, 'id')\r\n                        const realCost = 1000\r\n                        const priceCost = 900\r\n                        return (\r\n                            <Row className=\"dataInfo dottedList\" key={productId}>\r\n                                <Col xs={3}>{productName}</Col>\r\n                                <Col xs={3}>{numberFormat(amount)}</Col>\r\n                                <Col xs={3}>{numberFormat(realCost)} {currency}</Col>\r\n                                <Col xs={3}>{numberFormat(priceCost)} {currency}</Col>\r\n                            </Row>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default PricesDetails\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Prices/PricesDetails.js","import _ from 'lodash'\r\nimport moment from 'moment'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\r\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport GridList from '../GridList'\r\nimport Container from '../Container'\r\nimport PricesFilterForm from './PricesFilterForm'\r\nimport PricesDetails from './PricesDetails'\r\nimport PricesCreateDialog from './PricesCreateDialog'\r\nimport ConfirmDialog from '../ConfirmDialog'\r\nimport SubMenu from '../SubMenu'\r\nimport injectSheet from 'react-jss'\r\nimport {compose} from 'recompose'\r\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\r\nimport ContentAdd from 'material-ui/svg-icons/content/add'\r\nimport Tooltip from '../ToolTip'\r\nimport numberFormat from '../../helpers/numberFormat'\r\n\r\nconst listHeader = [\r\n    {\r\n        sorting: true,\r\n        name: 'id',\r\n        title: '№ акции',\r\n        xs: 1\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'name',\r\n        title: 'Наименование',\r\n        xs: 5\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'beginDate',\r\n        title: 'Дата начала',\r\n        xs: 2\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'tillDate',\r\n        title: 'Дата завершения',\r\n        xs: 2\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'discount',\r\n        title: 'Мар. акция',\r\n        xs: 2\r\n    }\r\n]\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        addButton: {\r\n            '& button': {\r\n                backgroundColor: '#275482 !important'\r\n            }\r\n        },\r\n        addButtonWrapper: {\r\n            position: 'absolute',\r\n            top: '10px',\r\n            right: '0',\r\n            marginBottom: '0px'\r\n        },\r\n        dot: {\r\n            display: 'inline-block',\r\n            height: '7px',\r\n            width: '7px',\r\n            borderRadius: '50%',\r\n            marginRight: '6px'\r\n        },\r\n        success: {\r\n            extend: 'dot',\r\n            backgroundColor: '#81c784'\r\n        },\r\n        begin: {\r\n            extend: 'dot',\r\n            backgroundColor: '#f0ad4e'\r\n        },\r\n        error: {\r\n            extend: 'dot',\r\n            backgroundColor: '#e57373'\r\n        },\r\n        waiting: {\r\n            extend: 'dot',\r\n            backgroundColor: '#64b5f6'\r\n        }\r\n    })\r\n)\r\n\r\nconst PricesGridList = enhance((props) => {\r\n    const {\r\n        filter,\r\n        createDialog,\r\n        updateDialog,\r\n        filterDialog,\r\n        actionsDialog,\r\n        confirmDialog,\r\n        listData,\r\n        detailData,\r\n        classes\r\n    } = props\r\n\r\n    const actions = (\r\n        <div>\r\n            <IconButton onTouchTap={actionsDialog.handleActionEdit}>\r\n                <ModEditorIcon />\r\n            </IconButton>\r\n\r\n            <IconButton onTouchTap={actionsDialog.handleActionDelete}>\r\n                <DeleteIcon />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n\r\n    const pricesFilterDialog = (\r\n        <PricesFilterForm\r\n            initialValues={filterDialog.initialValues}\r\n            filter={filter}\r\n            filterDialog={filterDialog}\r\n        />\r\n    )\r\n\r\n    const pricesDetail = (\r\n        <PricesDetails\r\n            key={_.get(detailData, 'id')}\r\n            data={_.get(detailData, 'data') || {}}\r\n            confirmDialog={confirmDialog}\r\n            updateDialog={updateDialog}\r\n            loading={_.get(detailData, 'detailLoading')}\r\n            handleCloseDetail={_.get(detailData, 'handleCloseDetail')}\r\n        />\r\n    )\r\n\r\n    const pricesList = _.map(_.get(listData, 'data'), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const name = _.get(item, 'name')\r\n        const beginDate = moment(_.get(_.get(item, 'beginDate'), 'name')).format('YY:MM:DD')\r\n        const tillDate = _.get(item, 'tillDate') || 'Не указано'\r\n        const discount = numberFormat(_.get(item, 'discount'), '%')\r\n\r\n        return (\r\n            <Row key={id}>\r\n                <Col xs={1}>{id}</Col>\r\n                <Col xs={5} onTouchTap = {() => { listData.handleClickDetail(id) }}>{name}</Col>\r\n                <Col xs={2}>{beginDate}</Col>\r\n                <Col xs={2}>{tillDate}</Col>\r\n                <Col xs={2}>{discount}</Col>\r\n            </Row>\r\n        )\r\n    })\r\n\r\n    const list = {\r\n        header: listHeader,\r\n        list: pricesList,\r\n        loading: _.get(listData, 'listLoading')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.PRICES_LIST_URL}/>\r\n\r\n            <div className={classes.addButtonWrapper}>\r\n                <Tooltip position=\"left\" text=\"Добавить поставку\">\r\n                    <FloatingActionButton\r\n                        mini={true}\r\n                        className={classes.addButton}\r\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\r\n                        <ContentAdd />\r\n                    </FloatingActionButton>\r\n                </Tooltip>\r\n            </div>\r\n\r\n            <GridList\r\n                filter={filter}\r\n                list={list}\r\n                detail={pricesDetail}\r\n                actionsDialog={actions}\r\n                filterDialog={pricesFilterDialog}\r\n            />\r\n\r\n            <PricesCreateDialog\r\n                openDialog={createDialog.openCreateDialog}\r\n                loading={createDialog.createLoading}\r\n                onClose={createDialog.handleCloseCreateDialog}\r\n                onSubmit={createDialog.handleSubmitCreateDialog}\r\n            />\r\n\r\n            <PricesCreateDialog\r\n                isUpdate={true}\r\n                initialValues={updateDialog.initialValues}\r\n                openDialog={updateDialog.openUpdateDialog}\r\n                loading={updateDialog.updateLoading}\r\n                onClose={updateDialog.handleCloseUpdateDialog}\r\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\r\n            />\r\n\r\n            {detailData.id && <ConfirmDialog\r\n                type=\"delete\"\r\n                message={_.get(detailData, ['data', 'name'])}\r\n                onClose={confirmDialog.handleCloseConfirmDialog}\r\n                onSubmit={confirmDialog.handleSendConfirmDialog}\r\n                open={confirmDialog.openConfirmDialog}\r\n            />}\r\n\r\n        </Container>\r\n    )\r\n})\r\n\r\nPricesGridList.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object,\r\n    createDialog: PropTypes.shape({\r\n        createLoading: PropTypes.bool.isRequired,\r\n        openCreateDialog: PropTypes.bool.isRequired,\r\n        handleOpenCreateDialog: PropTypes.func.isRequired,\r\n        handleCloseCreateDialog: PropTypes.func.isRequired,\r\n        handleSubmitCreateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    confirmDialog: PropTypes.shape({\r\n        openConfirmDialog: PropTypes.bool.isRequired,\r\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\r\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\r\n        handleSendConfirmDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    updateDialog: PropTypes.shape({\r\n        updateLoading: PropTypes.bool.isRequired,\r\n        openUpdateDialog: PropTypes.bool.isRequired,\r\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\r\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\r\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    actionsDialog: PropTypes.shape({\r\n        handleActionEdit: PropTypes.func.isRequired,\r\n        handleActionDelete: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    filterDialog: PropTypes.shape({\r\n        initialValues: PropTypes.object,\r\n        filterLoading: PropTypes.bool,\r\n        openFilterDialog: PropTypes.bool.isRequired,\r\n        handleOpenFilterDialog: PropTypes.func.isRequired,\r\n        handleCloseFilterDialog: PropTypes.func.isRequired,\r\n        handleSubmitFilterDialog: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default PricesGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Prices/PricesGridList.js","import PricesGridList from './PricesGridList'\r\nimport {PRICES_CREATE_DIALOG_OPEN} from './PricesCreateDialog'\r\nimport {PRICES_FILTER_KEY, PRICES_FILTER_OPEN} from './PricesFilterForm'\r\nconst PRICES_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\r\nconst PRICES_DELETE_DIALOG_OPEN = 'openDeleteDialog'\r\nexport {\r\n    PRICES_CREATE_DIALOG_OPEN,\r\n    PRICES_UPDATE_DIALOG_OPEN,\r\n    PRICES_FILTER_KEY,\r\n    PRICES_FILTER_OPEN,\r\n    PRICES_DELETE_DIALOG_OPEN,\r\n    PricesGridList\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Prices/index.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport {TextField} from '../ReduxForm'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport MainStyles from '../Styles/MainStyles'\r\nimport normalizeNumber from '../ReduxForm/normalizers/normalizeNumber'\r\n\r\nexport const PRODUCT_PRICE_CREATE_DIALOG_OPEN = 'openCreateDialog'\r\n\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\r\n\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        latLng,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        }\r\n    })),\r\n    reduxForm({\r\n        form: 'ProductPriceCreateForm',\r\n        enableReinitialize: true\r\n    })\r\n)\r\n\r\nconst ProductPriceCreateDialog = enhance((props) => {\r\n    const {open, loading, handleSubmit, onClose, classes} = props\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            className={classes.dialog}\r\n            contentStyle={loading ? {width: '300px'} : {width: '400px'}}\r\n            bodyStyle={{minHeight: 'auto'}}\r\n            bodyClassName={classes.popUp}>\r\n            <div className={classes.titleContent}>\r\n                <span>Изменить стоимость</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit} className={classes.form}>\r\n                    <div className={classes.inContent} style={{minHeight: '100px', paddingTop: '25px'}}>\r\n                        <div className={classes.loader}>\r\n                            <CircularProgress size={40} thickness={4}/>\r\n                        </div>\r\n                        <div className={classes.field}>\r\n                            <Field\r\n                                name=\"price\"\r\n                                className={classes.inputFieldCustom}\r\n                                component={TextField}\r\n                                label=\"Стоимость\"\r\n                                fullWidth={true}\r\n                                normalize={normalizeNumber}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <FlatButton\r\n                            label=\"Сохранить\"\r\n                            className={classes.actionButton}\r\n                            primary={true}\r\n                            type=\"submit\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\n\r\nProductPriceCreateDialog.propTyeps = {\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default ProductPriceCreateDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ProductPrice/ProductPriceCreateDialog.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose, withState} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport {Col} from 'react-flexbox-grid'\r\nimport Popover from 'material-ui/Popover'\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        loader: {\r\n            position: 'absolute',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            width: '100%'\r\n        },\r\n        dottedList: {\r\n            padding: '20px 0'\r\n        },\r\n        wrapper: {\r\n            width: '100%'\r\n        },\r\n        title: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            height: '65px',\r\n            padding: '0 30px',\r\n            borderBottom: '1px #efefef solid'\r\n        },\r\n        titleLabel: {\r\n            fontSize: '18px',\r\n            color: '#333',\r\n            fontWeight: '600',\r\n            cursor: 'pointer'\r\n        },\r\n        buttons: {\r\n            display: 'flex',\r\n            justifyContent: 'flex-end'\r\n        },\r\n        bodyTitle: {\r\n            fontWeight: '600',\r\n            marginBottom: '10px'\r\n        },\r\n        containerPrice: {\r\n            display: 'flex'\r\n        },\r\n        leftPrSide: {\r\n            padding: '20px 30px',\r\n            flexBasis: '30%',\r\n            borderRight: '1px solid #efefef'\r\n        },\r\n        aboutPrice: {\r\n            padding: '20px 0',\r\n            '& span': {\r\n                color: '#999'\r\n            },\r\n            '& p': {\r\n                display: 'inline-block',\r\n                '& span': {\r\n                    fontSize: '11px !important'\r\n                }\r\n            },\r\n            '& p:last-child': {\r\n                fontWeight: '600',\r\n                paddingLeft: '15px'\r\n            }\r\n        },\r\n        rightPrSide: {\r\n            padding: '20px 30px',\r\n            flexBasis: '70%'\r\n        },\r\n        rawMaterials: {\r\n            '& .dottedList': {\r\n                padding: '10px 0'\r\n            },\r\n            '& li:last-child:after': {\r\n                backgroundImage: 'none'\r\n            },\r\n            '& li div:last-child': {\r\n                textAlign: 'right',\r\n                paddingRight: '10px'\r\n            },\r\n            '& a': {\r\n                borderBottom: '1px dashed'\r\n            }\r\n        },\r\n        changePrice: {\r\n            background: '#f1f5f8',\r\n            margin: '0 -30px 0',\r\n            padding: '20px 30px'\r\n        },\r\n        addPrice: {\r\n            display: 'flex',\r\n            alignItems: 'baseline',\r\n            justifyContent: 'space-between'\r\n        },\r\n        popoverMode: {\r\n            padding: '10px 30px',\r\n            boxShadow: 'none !important',\r\n            '& h4': {\r\n                padding: '10px 0'\r\n            },\r\n            '& div p': {\r\n                display: 'inline-block'\r\n            },\r\n            '& div p:first-child': {\r\n                width: '120px'\r\n            }\r\n        }\r\n    }),\r\n    withState('openDetails', 'setOpenDetails', false),\r\n    withState('showAddPrice', 'setShowAddPrice', false),\r\n    withState('priceDetailsOpen', 'setPriceDetailsOpen', false),\r\n    withState('anchorEl', 'setAnchorEl', (<div></div>)),\r\n)\r\n\r\nconst ProductPriceDetails = enhance((props) => {\r\n    const {classes,\r\n        loading,\r\n        data,\r\n        updateDialog,\r\n        anchorEl,\r\n        handleOpenDetails,\r\n        handleCloseDetails,\r\n        priceDetailsOpen,\r\n        handleCloseDetail\r\n    } = props\r\n    const detId = _.get(data, 'id')\r\n    const detnName = _.get(data, 'name')\r\n    if (loading) {\r\n        return (\r\n            <div className={classes.loader}>\r\n                <div>\r\n                    <CircularProgress size={40} thickness={4}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.title}>\r\n                <div className={classes.titleLabel}\r\n                onClick={handleCloseDetail}>{detnName}</div>\r\n            </div>\r\n            <div className={classes.containerPrice}>\r\n                <div className={classes.leftPrSide}>\r\n                    <div>Расчет произведен на 1 еденицу продукта</div>\r\n                    <div className={classes.aboutPrice}>\r\n                        <p className={classes.priceLabel}>Cебестоимость:</p>\r\n                        <p className={classes.priceCost}>20 000 UZS <span>(22 Апр, 2017)</span></p>\r\n                    </div>\r\n                    <hr className=\"lineDote\"/>\r\n                    <div className={classes.aboutPrice}>\r\n                        <p className={classes.priceLabel}>Рыночная цена:</p>\r\n                        <p className={classes.priceCost}>30 000 UZS <span>(22 Апр, 2017)</span></p>\r\n                    </div>\r\n                    <div className={classes.changePrice}>\r\n                        <a onClick={() => { updateDialog.handleOpenUpdateDialog(detId) }}>Изменить рыночную стоимость</a>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.rightPrSide}>\r\n                    <ul className={classes.rawMaterials}>\r\n                        <li className=\"dottedList\">\r\n                            <Col xs={7}><b>Сырье</b></Col>\r\n                            <Col xs={2}><b>Обьем</b></Col>\r\n                            <Col xs={3}><b>Стоимость</b></Col>\r\n                        </li>\r\n                        <li className=\"dottedList\">\r\n                            <Col xs={7}>Дистилированная вода</Col>\r\n                            <Col xs={2}>100 л</Col>\r\n                            <Col xs={3}>\r\n                                <a onClick={handleOpenDetails}>1 000 000 UZS</a>\r\n                            </Col>\r\n                        </li>\r\n                        <li className=\"dottedList\">\r\n                            <Col xs={7}>Дистилированная вода</Col>\r\n                            <Col xs={2}>100 л</Col>\r\n                            <Col xs={3}>\r\n                                <a onClick={handleOpenDetails}>1 000 000 UZS</a>\r\n                            </Col>\r\n                        </li>\r\n                        <li className=\"dottedList\">\r\n                            <Col xs={7}>Дистилированная вода</Col>\r\n                            <Col xs={2}>100 л</Col>\r\n                            <Col xs={3}>\r\n                                <a onClick={handleOpenDetails}>1 000 000 UZS</a>\r\n                            </Col>\r\n                        </li>\r\n                        <li className=\"dottedList\">\r\n                            <Col xs={7}>Дистилированная вода</Col>\r\n                            <Col xs={2}>100 л</Col>\r\n                            <Col xs={3}>\r\n                                <a onClick={handleOpenDetails}>1 000 000 UZS</a>\r\n                            </Col>\r\n                        </li>\r\n                        <li className=\"dottedList\">\r\n                            <Col xs={7}>Дистилированная вода</Col>\r\n                            <Col xs={2}>100 л</Col>\r\n                            <Col xs={3}>\r\n                                <a onClick={handleOpenDetails}>1 000 000 UZS</a>\r\n                            </Col>\r\n                        </li>\r\n                        <li className=\"dottedList\">\r\n                            <Col xs={7}>Дистилированная вода</Col>\r\n                            <Col xs={2}>100 л</Col>\r\n                            <Col xs={3}>\r\n                                <a onClick={handleOpenDetails}>1 000 000 UZS</a>\r\n                            </Col>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <Popover\r\n                open={priceDetailsOpen}\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{horizontal: 'right', vertical: 'bottom'}}\r\n                targetOrigin={{horizontal: 'right', vertical: 'top'}}\r\n                onRequestClose={handleCloseDetails}>\r\n                <div className={classes.popoverMode}>\r\n                    <h4>Дистилированая вода</h4>\r\n                    <div>\r\n                        <p>Объем:</p>\r\n                        <p>100 л</p>\r\n                    </div>\r\n                    <div>\r\n                        <p>Стоимость:</p>\r\n                        <p>500 000 UZS</p>\r\n                    </div>\r\n                    <div>\r\n                        <p>Доп. расход:</p>\r\n                        <p>100 000 UZS</p>\r\n                    </div>\r\n                    <h4><i>Примерная стоимость 1 л = 6 000 UZS</i></h4>\r\n                </div>\r\n            </Popover>\r\n        </div>\r\n    )\r\n})\r\n\r\nProductPriceDetails.propTypes = {\r\n    data: PropTypes.object.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    detailData: PropTypes.object,\r\n    updateDialog: PropTypes.shape({\r\n        updateLoading: PropTypes.bool.isRequired,\r\n        openUpdateDialog: PropTypes.bool.isRequired,\r\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\r\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\r\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default ProductPriceDetails\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ProductPrice/ProductPriceDetails.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport {reduxForm} from 'redux-form'\r\nimport {compose} from 'recompose'\r\nimport sprintf from 'sprintf'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport Edit from 'material-ui/svg-icons/image/edit'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport GridList from '../GridList'\r\nimport Container from '../Container'\r\nimport ProductPriceFilterForm from './ProductPriceFilterForm'\r\nimport ProductPriceCreateDialog from './ProductPriceCreateDialog'\r\nimport ProductPriceDetails from './ProductPriceDetails'\r\nimport SubMenu from '../SubMenu'\r\nimport injectSheet from 'react-jss'\r\nimport {Link} from 'react-router'\r\nimport Tooltip from '../ToolTip'\r\n\r\nconst listHeader = [\r\n    {\r\n        sorting: true,\r\n        name: 'name',\r\n        title: 'Наименование',\r\n        xs: 3\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'type',\r\n        title: 'Тип товара',\r\n        xs: 2\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'brand',\r\n        title: 'Бренд',\r\n        xs: 2\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'measurement',\r\n        title: 'Мера',\r\n        xs: 2\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'price',\r\n        title: 'Цена',\r\n        xs: 2\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'action',\r\n        title: '',\r\n        xs: 1\r\n    }\r\n]\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        addButton: {\r\n            '& button': {\r\n                backgroundColor: '#275482 !important'\r\n            }\r\n        },\r\n        addButtonWrapper: {\r\n            position: 'absolute',\r\n            top: '10px',\r\n            right: '0',\r\n            marginBottom: '0px'\r\n        },\r\n        buttons: {\r\n            display: 'flex',\r\n            justifyContent: 'flex-end'\r\n        }\r\n    }),\r\n\r\n    reduxForm({\r\n        form: 'ProductPriceCreateForm',\r\n        enableReinitialize: true\r\n    })\r\n)\r\n\r\nconst iconStyle = {\r\n    icon: {\r\n        color: '#666',\r\n        width: 20,\r\n        height: 20\r\n    },\r\n    button: {\r\n        width: 48,\r\n        height: 48,\r\n        padding: 0\r\n    }\r\n}\r\n\r\nconst ProductPriceGridList = enhance((props) => {\r\n    const {\r\n        filter,\r\n        updateDialog,\r\n        filterDialog,\r\n        handleOpenDetails,\r\n        handleCloseDetails,\r\n        priceDetailsOpen,\r\n        listData,\r\n        detailData,\r\n        classes\r\n    } = props\r\n    const productPriceDetail = (\r\n        <ProductPriceDetails\r\n            key={_.get(detailData, 'id')}\r\n            data={_.get(detailData, 'data') || {}}\r\n            priceDetailsOpen={priceDetailsOpen}\r\n            loading={_.get(detailData, 'detailLoading')}\r\n            updateDialog={updateDialog}\r\n            handleOpenDetails={handleOpenDetails}\r\n            handleCloseDetails={handleCloseDetails}\r\n            handleCloseDetail={_.get(detailData, 'handleCloseDetail')}\r\n        />\r\n    )\r\n\r\n    const productPriceFilterDialog = (\r\n        <ProductPriceFilterForm\r\n            initialValues={filterDialog.initialValues}\r\n            filter={filter}\r\n            filterDialog={filterDialog}\r\n        />\r\n    )\r\n\r\n    const productPriceList = _.map(_.get(listData, 'data'), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const name = _.get(item, 'name')\r\n        const type = _.get(item, ['type', 'name']) || 'N/A'\r\n        const brand = _.get(item, ['brand', 'name']) || 'N/A'\r\n        const measurement = _.get(item, ['measurement', 'name']) || ''\r\n        const price = _.get(item, 'price') || 'N/A'\r\n        return (\r\n            <Row key={id}>\r\n                <Col xs={3}>\r\n                    <Link to={{\r\n                        pathname: sprintf(ROUTES.PRODUCT_PRICE_ITEM_PATH, id),\r\n                        query: ''\r\n                    }}>{name}</Link>\r\n                </Col>\r\n                <Col xs={2}>{type}</Col>\r\n                <Col xs={2}>{brand}</Col>\r\n                <Col xs={2}>{measurement}</Col>\r\n                <Col xs={2}>{price}</Col>\r\n                <Col xs={1} className={classes.buttons}>\r\n                    <Tooltip position=\"bottom\" text=\"Изменить\">\r\n                        <IconButton\r\n                            onTouchTap={() => { updateDialog.handleOpenUpdateDialog(id) }}\r\n                            touch={true}\r\n                            iconStyle={iconStyle.icon}\r\n                            style={iconStyle.button}>\r\n                            <Edit />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    })\r\n\r\n    const list = {\r\n        header: listHeader,\r\n        list: productPriceList,\r\n        loading: _.get(listData, 'listLoading')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.PRODUCT_PRICE_LIST_URL}/>\r\n\r\n            <GridList\r\n                filter={filter}\r\n                list={list}\r\n                detail={productPriceDetail}\r\n                filterDialog={productPriceFilterDialog}\r\n            />\r\n\r\n            <ProductPriceCreateDialog\r\n                initialValues={updateDialog.initialValues}\r\n                open={updateDialog.openUpdateDialog}\r\n                loading={updateDialog.updateLoading}\r\n                onClose={updateDialog.handleCloseUpdateDialog}\r\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\r\n            />\r\n        </Container>\r\n    )\r\n})\r\n\r\nProductPriceGridList.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object,\r\n    updateDialog: PropTypes.shape({\r\n        updateLoading: PropTypes.bool.isRequired,\r\n        openUpdateDialog: PropTypes.bool.isRequired,\r\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\r\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\r\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    filterDialog: PropTypes.shape({\r\n        initialValues: PropTypes.object,\r\n        filterLoading: PropTypes.bool,\r\n        openFilterDialog: PropTypes.bool.isRequired,\r\n        handleOpenFilterDialog: PropTypes.func.isRequired,\r\n        handleCloseFilterDialog: PropTypes.func.isRequired,\r\n        handleSubmitFilterDialog: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default ProductPriceGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ProductPrice/ProductPriceGridList.js","import ProductPriceGridList from './ProductPriceGridList'\r\nimport {PRODUCT_PRICE_FILTER_KEY, PRODUCT_PRICE_FILTER_OPEN} from './ProductPriceFilterForm'\r\n\r\nconst PRODUCT_PRICE_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\r\n\r\nexport {\r\n    PRODUCT_PRICE_UPDATE_DIALOG_OPEN,\r\n    PRODUCT_PRICE_FILTER_KEY,\r\n    PRODUCT_PRICE_FILTER_OPEN,\r\n    ProductPriceGridList\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ProductPrice/index.js","import _ from 'lodash'\r\nimport moment from 'moment'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport injectSheet from 'react-jss'\r\nimport {compose} from 'recompose'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\r\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\r\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\r\nimport ContentAdd from 'material-ui/svg-icons/content/add'\r\nimport Edit from 'material-ui/svg-icons/image/edit'\r\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\r\nimport IconMenu from 'material-ui/IconMenu'\r\nimport MenuItem from 'material-ui/MenuItem'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport GridList from '../GridList'\r\nimport Container from '../Container'\r\nimport ProductTypeCreateDialog from './ProductTypeCreateDialog'\r\nimport ConfirmDialog from '../ConfirmDialog'\r\nimport SubMenu from '../SubMenu'\r\nimport Tooltip from '../ToolTip'\r\n\r\nconst listHeader = [\r\n    {\r\n        sorting: true,\r\n        name: 'id',\r\n        xs: 2,\r\n        title: 'Id'\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'name',\r\n        xs: 5,\r\n        title: 'Наименование'\r\n    },\r\n    {\r\n        sorting: true,\r\n        xs: 4,\r\n        name: 'created_date',\r\n        title: 'Дата создания'\r\n    },\r\n    {\r\n        sorting: true,\r\n        xs: 1,\r\n        name: 'actions',\r\n        title: ''\r\n    }\r\n\r\n]\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        addButton: {\r\n            '& button': {\r\n                backgroundColor: '#275482 !important'\r\n            }\r\n        },\r\n        addButtonWrapper: {\r\n            position: 'absolute',\r\n            top: '10px',\r\n            right: '0',\r\n            marginBottom: '0px'\r\n        },\r\n        marginLeft: {\r\n            marginLeft: '20px !important'\r\n        },\r\n        right: {\r\n            textAlign: 'right'\r\n        }\r\n    })\r\n)\r\n\r\nconst ProductTypeGridList = enhance((props) => {\r\n    const {\r\n        filter,\r\n        createDialog,\r\n        updateDialog,\r\n        actionsDialog,\r\n        confirmDialog,\r\n        listData,\r\n        detailData,\r\n        classes\r\n    } = props\r\n\r\n    const actions = (\r\n        <div>\r\n            <IconButton onTouchTap={actionsDialog.handleActionEdit}>\r\n                <ModEditorIcon />\r\n            </IconButton>\r\n\r\n            <IconButton onTouchTap={actionsDialog.handleActionDelete}>\r\n                <DeleteIcon />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n\r\n    const productTypeDetail = (\r\n        <span>a</span>\r\n    )\r\n\r\n    const productTypeList = _.map(_.get(listData, 'data'), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const name = _.get(item, 'name')\r\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\r\n        const iconButton = (\r\n            <IconButton style={{padding: '0 12px'}}>\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n        )\r\n        return (\r\n            <Row key={id}>\r\n                <Col xs={2}>{id}</Col>\r\n                <Col xs={5}>{name}</Col>\r\n                <Col xs={4}>{createdDate}</Col>\r\n                <Col xs={1} className={classes.right}>\r\n                    <IconMenu\r\n                        iconButtonElement={iconButton}\r\n                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\r\n                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\r\n                        <MenuItem\r\n                            primaryText=\"Изменить\"\r\n                            leftIcon={<Edit />}\r\n                            onTouchTap={() => { updateDialog.handleOpenUpdateDialog(id) }}\r\n                        />\r\n                        <MenuItem\r\n                            primaryText=\"Удалить \"\r\n                            leftIcon={<DeleteIcon />}\r\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(id) }}\r\n                        />\r\n                    </IconMenu>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    })\r\n\r\n    const list = {\r\n        header: listHeader,\r\n        list: productTypeList,\r\n        loading: _.get(listData, 'listLoading')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.PRODUCT_TYPE_LIST_URL}/>\r\n            <div className={classes.addButtonWrapper}>\r\n                <Tooltip position=\"left\" text=\"Добавить тип продукта\">\r\n                    <FloatingActionButton\r\n                        mini={true}\r\n                        className={classes.addButton}\r\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\r\n                        <ContentAdd />\r\n                    </FloatingActionButton>\r\n                </Tooltip>\r\n            </div>\r\n\r\n            <GridList\r\n                filter={filter}\r\n                list={list}\r\n                detail={productTypeDetail}\r\n                actionsDialog={actions}\r\n            />\r\n\r\n            <ProductTypeCreateDialog\r\n                open={createDialog.openCreateDialog}\r\n                loading={createDialog.createLoading}\r\n                onClose={createDialog.handleCloseCreateDialog}\r\n                onSubmit={createDialog.handleSubmitCreateDialog}\r\n            />\r\n\r\n            <ProductTypeCreateDialog\r\n                isUpdate={true}\r\n                initialValues={updateDialog.initialValues}\r\n                open={updateDialog.openUpdateDialog}\r\n                loading={updateDialog.updateLoading}\r\n                onClose={updateDialog.handleCloseUpdateDialog}\r\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\r\n            />\r\n\r\n            {detailData.data && <ConfirmDialog\r\n                type=\"delete\"\r\n                message={_.get(detailData, ['data', 'name'])}\r\n                loading={confirmDialog.confirmLoading}\r\n                onClose={confirmDialog.handleCloseConfirmDialog}\r\n                onSubmit={confirmDialog.handleSendConfirmDialog}\r\n                open={confirmDialog.openConfirmDialog}\r\n            />}\r\n        </Container>\r\n    )\r\n})\r\n\r\nProductTypeGridList.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object,\r\n    createDialog: PropTypes.shape({\r\n        createLoading: PropTypes.bool.isRequired,\r\n        openCreateDialog: PropTypes.bool.isRequired,\r\n        handleOpenCreateDialog: PropTypes.func.isRequired,\r\n        handleCloseCreateDialog: PropTypes.func.isRequired,\r\n        handleSubmitCreateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    confirmDialog: PropTypes.shape({\r\n        confirmLoading: PropTypes.bool.isRequired,\r\n        openConfirmDialog: PropTypes.bool.isRequired,\r\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\r\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\r\n        handleSendConfirmDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    updateDialog: PropTypes.shape({\r\n        updateLoading: PropTypes.bool.isRequired,\r\n        openUpdateDialog: PropTypes.bool.isRequired,\r\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\r\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\r\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    actionsDialog: PropTypes.shape({\r\n        handleActionEdit: PropTypes.func.isRequired,\r\n        handleActionDelete: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default ProductTypeGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ProductType/ProductTypeGridList.js","import ProductTypeGridList from './ProductTypeGridList'\nimport {PRODUCT_TYPE_CREATE_DIALOG_OPEN} from './ProductTypeCreateDialog'\n\nconst PRODUCT_TYPE_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nconst PRODUCT_TYPE_DELETE_DIALOG_OPEN = 'openDeleteDialog'\n\nexport {\n    PRODUCT_TYPE_UPDATE_DIALOG_OPEN,\n    PRODUCT_TYPE_CREATE_DIALOG_OPEN,\n    PRODUCT_TYPE_DELETE_DIALOG_OPEN,\n    ProductTypeGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/ProductType/index.js","import _ from 'lodash'\r\nimport moment from 'moment'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\r\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\r\nimport Edit from 'material-ui/svg-icons/image/edit'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport GridList from '../GridList'\r\nimport Container from '../Container'\r\nimport ProductFilterForm from './ProductFilterForm'\r\nimport ProductCreateDialog from './ProductCreateDialog'\r\nimport ProductShowPhotoDialog from './ProductShowPhotoDialog'\r\nimport ConfirmDialog from '../ConfirmDialog'\r\nimport SubMenu from '../SubMenu'\r\nimport injectSheet from 'react-jss'\r\nimport {compose} from 'recompose'\r\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\r\nimport ContentAdd from 'material-ui/svg-icons/content/add'\r\nimport Tooltip from '../ToolTip'\r\nimport IconMenu from 'material-ui/IconMenu'\r\nimport MenuItem from 'material-ui/MenuItem'\r\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\r\nimport Landscape from 'material-ui/svg-icons/image/landscape'\r\n\r\nconst listHeader = [\r\n    {\r\n        sorting: true,\r\n        name: 'name',\r\n        title: 'Наименование',\r\n        xs: 3\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'type',\r\n        title: 'Тип товара',\r\n        xs: 2\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'brand',\r\n        title: 'Бренд',\r\n        xs: 2\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'measurement',\r\n        title: 'Мера',\r\n        xs: 2\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'created_date',\r\n        title: 'Дата создания',\r\n        xs: 2\r\n    }\r\n]\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        addButton: {\r\n            '& button': {\r\n                backgroundColor: '#275482 !important'\r\n            }\r\n        },\r\n        addButtonWrapper: {\r\n            position: 'absolute',\r\n            top: '10px',\r\n            right: '0',\r\n            marginBottom: '0px'\r\n        },\r\n        productImg: {\r\n            width: '30px',\r\n            height: '30px',\r\n            overflow: 'hidden',\r\n            marginRight: '5px',\r\n            display: 'inline-block',\r\n            borderRadius: '4px',\r\n            textAlign: 'center',\r\n            '& img': {\r\n                height: '30px'\r\n            }\r\n        }\r\n    })\r\n)\r\n\r\nconst ProductGridList = enhance((props) => {\r\n    const {\r\n        filter,\r\n        createDialog,\r\n        updateDialog,\r\n        filterDialog,\r\n        actionsDialog,\r\n        showBigImg,\r\n        confirmDialog,\r\n        listData,\r\n        detailData,\r\n        classes\r\n    } = props\r\n\r\n    const actions = (\r\n        <div>\r\n            <IconButton onTouchTap={actionsDialog.handleActionEdit}>\r\n                <ModEditorIcon />\r\n            </IconButton>\r\n\r\n            <IconButton onTouchTap={actionsDialog.handleActionDelete}>\r\n                <DeleteIcon />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n\r\n    const productFilterDialog = (\r\n        <ProductFilterForm\r\n            initialValues={filterDialog.initialValues}\r\n            filter={filter}\r\n            filterDialog={filterDialog}\r\n        />\r\n    )\r\n\r\n    const productDetail = (\r\n        <span>a</span>\r\n    )\r\n\r\n    const productList = _.map(_.get(listData, 'data'), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const name = _.get(item, 'name')\r\n        const type = _.get(item, ['type', 'name']) || 'N/A'\r\n        const brand = _.get(item, ['brand', 'name']) || 'N/A'\r\n        const image = _.get(item, ['image', 'file'])\r\n        const measurement = _.get(item, ['measurement', 'name']) || ''\r\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\r\n        const iconButton = (\r\n            <IconButton style={{padding: '0 12px'}}>\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n        )\r\n        return (\r\n            <Row key={id}>\r\n                <Col xs={3} style={{display: 'flex', alignItems: 'center'}}>\r\n                    <div className={classes.productImg}>\r\n                        {_.isEmpty(image) ? <Landscape style={{color: '#999', paddingTop: '2px'}} />\r\n                            : <a onClick={() => showBigImg.handleOpenShowBigImg(id)}><img src={image} /> </a>}\r\n                    </div>\r\n                    <div style={{display: 'inline-block'}}>{name}</div>\r\n                </Col>\r\n                <Col xs={2}>{type}</Col>\r\n                <Col xs={2}>{brand}</Col>\r\n                <Col xs={2}>{measurement}</Col>\r\n                <Col xs={2}>{createdDate}</Col>\r\n                <Col xs={1} style={{textAlign: 'right'}}>\r\n                    <IconMenu\r\n                        iconButtonElement={iconButton}\r\n                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\r\n                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\r\n                        <MenuItem\r\n                            primaryText=\"Изменить\"\r\n                            leftIcon={<Edit />}\r\n                            onTouchTap={() => { updateDialog.handleOpenUpdateDialog(id) }}\r\n                        />\r\n                        <MenuItem\r\n                            primaryText=\"Удалить \"\r\n                            leftIcon={<DeleteIcon />}\r\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(id) }}\r\n                        />\r\n                    </IconMenu>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    })\r\n\r\n    const list = {\r\n        header: listHeader,\r\n        list: productList,\r\n        loading: _.get(listData, 'listLoading')\r\n    }\r\n\r\n    const currentDetail = _.find(_.get(listData, 'data'), {'id': _.toInteger(_.get(detailData, 'id'))})\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.PRODUCT_LIST_URL}/>\r\n            <div className={classes.addButtonWrapper}>\r\n                <Tooltip position=\"left\" text=\"Добавить продукт\">\r\n                    <FloatingActionButton\r\n                        mini={true}\r\n                        className={classes.addButton}\r\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\r\n                        <ContentAdd />\r\n                    </FloatingActionButton>\r\n                </Tooltip>\r\n            </div>\r\n\r\n            <GridList\r\n                filter={filter}\r\n                list={list}\r\n                detail={productDetail}\r\n                actionsDialog={actions}\r\n                filterDialog={productFilterDialog}\r\n            />\r\n\r\n            <ProductCreateDialog\r\n                open={createDialog.openCreateDialog}\r\n                loading={createDialog.createLoading}\r\n                onClose={createDialog.handleCloseCreateDialog}\r\n                onSubmit={createDialog.handleSubmitCreateDialog}\r\n            />\r\n\r\n            <ProductCreateDialog\r\n                isUpdate={true}\r\n                initialValues={updateDialog.initialValues}\r\n                open={updateDialog.openUpdateDialog}\r\n                loading={updateDialog.updateLoading}\r\n                onClose={updateDialog.handleCloseUpdateDialog}\r\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\r\n            />\r\n\r\n            <ProductShowPhotoDialog\r\n                initialValues={showBigImg.initialValues}\r\n                open={showBigImg.openShowBigImg}\r\n                loading={_.get(showBigImg, 'showBigImgLoading')}\r\n                onClose={showBigImg.handleCloseShowBigImg}\r\n                detailData={detailData}\r\n            />\r\n\r\n            {currentDetail && <ConfirmDialog\r\n                type=\"delete\"\r\n                message={_.get(currentDetail, 'name')}\r\n                loading={confirmDialog.confirmLoading}\r\n                onClose={confirmDialog.handleCloseConfirmDialog}\r\n                onSubmit={confirmDialog.handleSendConfirmDialog}\r\n                open={confirmDialog.openConfirmDialog}\r\n            />}\r\n        </Container>\r\n    )\r\n})\r\n\r\nProductGridList.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object,\r\n    createDialog: PropTypes.shape({\r\n        createLoading: PropTypes.bool.isRequired,\r\n        openCreateDialog: PropTypes.bool.isRequired,\r\n        handleOpenCreateDialog: PropTypes.func.isRequired,\r\n        handleCloseCreateDialog: PropTypes.func.isRequired,\r\n        handleSubmitCreateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    confirmDialog: PropTypes.shape({\r\n        confirmLoading: PropTypes.bool.isRequired,\r\n        openConfirmDialog: PropTypes.bool.isRequired,\r\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\r\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\r\n        handleSendConfirmDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    updateDialog: PropTypes.shape({\r\n        updateLoading: PropTypes.bool.isRequired,\r\n        openUpdateDialog: PropTypes.bool.isRequired,\r\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\r\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\r\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    actionsDialog: PropTypes.shape({\r\n        handleActionEdit: PropTypes.func.isRequired,\r\n        handleActionDelete: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    filterDialog: PropTypes.shape({\r\n        initialValues: PropTypes.object,\r\n        filterLoading: PropTypes.bool,\r\n        openFilterDialog: PropTypes.bool.isRequired,\r\n        handleOpenFilterDialog: PropTypes.func.isRequired,\r\n        handleCloseFilterDialog: PropTypes.func.isRequired,\r\n        handleSubmitFilterDialog: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default ProductGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Product/ProductGridList.js","import _ from 'lodash'\r\nimport moment from 'moment'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose, withState} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport Edit from 'material-ui/svg-icons/image/edit'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport Delete from 'material-ui/svg-icons/action/delete'\r\nimport Tooltip from '../ToolTip'\r\n\r\nconst colorBlue = '#12aaeb !important'\r\nconst enhance = compose(\r\n    injectSheet({\r\n        loader: {\r\n            width: '100%',\r\n            background: '#fff',\r\n            height: '150px',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        },\r\n        wrapper: {\r\n            color: '#333 !important',\r\n            width: '100%',\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            '& a': {\r\n                color: colorBlue\r\n            }\r\n        },\r\n        title: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            width: '100%',\r\n            height: '65px',\r\n            padding: '0 30px',\r\n            borderBottom: '1px #efefef solid'\r\n        },\r\n        container: {\r\n            display: 'flex',\r\n            width: '100%'\r\n        },\r\n        sides: {\r\n            flexBasis: '27%'\r\n        },\r\n        leftSide: {\r\n            extend: 'sides',\r\n            borderRight: '1px #efefef solid',\r\n            padding: '20px 30px'\r\n        },\r\n        rightSide: {\r\n            extend: 'sides',\r\n            borderLeft: '1px #efefef solid',\r\n            padding: '20px 30px'\r\n        },\r\n        body: {\r\n            flexBasis: '66%',\r\n            padding: '20px 30px',\r\n            '& .dottedList': {\r\n                padding: '10px 0',\r\n                '&:after': {\r\n                    left: '0.5rem',\r\n                    right: '0.5rem'\r\n                },\r\n                '&:first-child': {\r\n                    padding: '0 0 10px'\r\n                },\r\n                '&:last-child': {\r\n                    padding: '10px 0 0',\r\n                    '&:after': {\r\n                        display: 'none'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        titleLabel: {\r\n            fontSize: '18px',\r\n            color: '#333',\r\n            fontWeight: '600',\r\n            cursor: 'pointer'\r\n        },\r\n        titleButtons: {\r\n            display: 'flex',\r\n            justifyContent: 'flex-end'\r\n        },\r\n        bodyTitle: {\r\n            fontWeight: '600',\r\n            marginBottom: '10px'\r\n        }\r\n    }),\r\n    withState('openDetails', 'setOpenDetails', false)\r\n)\r\n\r\nconst iconStyle = {\r\n    icon: {\r\n        color: '#666',\r\n        width: 20,\r\n        height: 20\r\n    },\r\n    button: {\r\n        width: 48,\r\n        height: 48,\r\n        padding: 0\r\n    }\r\n}\r\nwithState('openDetails', 'setOpenDetails', false)\r\n\r\nconst ProviderDetails = enhance((props) => {\r\n    const {classes,\r\n        loading,\r\n        data,\r\n        confirmDialog,\r\n        handleOpenUpdateDialog,\r\n        handleCloseDetail\r\n    } = props\r\n\r\n    const providerId = _.get(data, 'id')\r\n    const contacts = _.get(data, 'contacts')\r\n    const date = moment(_.get(data, ['data', 'createdDate'])).format('DD.MM.YYYY')\r\n    const address = _.get(data, 'address') || 'N/A'\r\n    const providerName = _.get(data, 'name')\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className={classes.loader}>\r\n                <div>\r\n                    <CircularProgress size={40} thickness={4}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrapper} key={_.get(data, 'id')}>\r\n            <div className={classes.title}>\r\n                <div className={classes.titleLabel}\r\n                onClick={handleCloseDetail}>{providerName}</div>\r\n                <div className={classes.titleButtons}>\r\n                    <Tooltip position=\"bottom\" text=\"Изменить\">\r\n                        <IconButton\r\n                            iconStyle={iconStyle.icon}\r\n                            style={iconStyle.button}\r\n                            touch={true}\r\n                            onTouchTap={() => { handleOpenUpdateDialog(providerId) }}>\r\n                            <Edit />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip position=\"bottom\" text=\"Удалить\">\r\n                        <IconButton\r\n                            iconStyle={iconStyle.icon}\r\n                            style={iconStyle.button}\r\n                            touch={true}\r\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(providerId) }}>\r\n                            <Delete />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </div>\r\n            </div>\r\n            <div className={classes.container}>\r\n                <div className={classes.leftSide}>\r\n                    <div className={classes.bodyTitle}>Адрес</div>\r\n                    <div>{address}</div>\r\n                </div>\r\n                <div className={classes.body}>\r\n                    <div className={classes.bodyTitle}>Контакты</div>\r\n                    <div>\r\n                        {_.map(contacts, (item) => {\r\n                            const name = _.get(item, 'name')\r\n                            const phone = _.get(item, 'phone')\r\n                            const email = _.get(item, 'email')\r\n                            return (\r\n                                <Row key={item.id} className=\"dottedList\">\r\n                                    <Col xs={4}>{name}</Col>\r\n                                    <Col xs={4}>{email}</Col>\r\n                                    <Col xs={4}>{phone}</Col>\r\n                                </Row>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div className={classes.rightSide}>\r\n                    <div className={classes.bodyTitle}>Дата добавления</div>\r\n                    <div>{date}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nProviderDetails.propTypes = {\r\n    data: PropTypes.object.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    confirmDialog: PropTypes.shape({\r\n        openConfirmDialog: PropTypes.bool.isRequired,\r\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\r\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\r\n        handleSendConfirmDialog: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default ProviderDetails\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Provider/ProviderDetails.js","import _ from 'lodash'\r\nimport moment from 'moment'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\r\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport sprintf from 'sprintf'\r\nimport GridList from '../GridList'\r\nimport Container from '../Container'\r\nimport ProviderCreateDialog from './ProviderCreateDialog'\r\nimport ConfirmDialog from '../ConfirmDialog'\r\nimport SubMenu from '../SubMenu'\r\nimport injectSheet from 'react-jss'\r\nimport {compose} from 'recompose'\r\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\r\nimport ContentAdd from 'material-ui/svg-icons/content/add'\r\nimport Tooltip from '../ToolTip'\r\nimport {Link} from 'react-router'\r\nimport ProviderDetail from './ProviderDetails'\r\n\r\nconst listHeader = [\r\n    {\r\n        sorting: true,\r\n        name: 'id',\r\n        xs: 2,\r\n        title: 'Id'\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'name',\r\n        xs: 7,\r\n        title: 'Наименование'\r\n    },\r\n    {\r\n        sorting: true,\r\n        xs: 3,\r\n        name: 'created_date',\r\n        title: 'Дата создания'\r\n    }\r\n]\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        addButton: {\r\n            '& button': {\r\n                backgroundColor: '#275482 !important'\r\n            }\r\n        },\r\n        addButtonWrapper: {\r\n            position: 'absolute',\r\n            top: '10px',\r\n            right: '0',\r\n            marginBottom: '0px'\r\n        },\r\n        actionBtn: {\r\n            height: '48px'\r\n        }\r\n    })\r\n)\r\n\r\nconst ProviderGridList = enhance((props) => {\r\n    const {\r\n        filter,\r\n        createDialog,\r\n        updateDialog,\r\n        actionsDialog,\r\n        confirmDialog,\r\n        listData,\r\n        detailData,\r\n        classes\r\n    } = props\r\n    const actions = (\r\n        <div>\r\n            <IconButton onTouchTap={actionsDialog.handleActionEdit}>\r\n                <ModEditorIcon />\r\n            </IconButton>\r\n\r\n            <IconButton onTouchTap={actionsDialog.handleActionDelete}>\r\n                <DeleteIcon />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n\r\n    const providerDetail = (\r\n        <ProviderDetail\r\n            key={_.get(detailData, 'id')}\r\n            data={_.get(detailData, 'data') || {}}\r\n            loading={_.get(detailData, 'detailLoading')}\r\n            handleOpenUpdateDialog={updateDialog.handleOpenUpdateDialog}\r\n            confirmDialog={confirmDialog}\r\n            handleCloseDetail={_.get(detailData, 'handleCloseDetail')}/>\r\n    )\r\n\r\n    const providerList = _.map(_.get(listData, 'data'), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const name = _.get(item, 'name')\r\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\r\n        return (\r\n            <Row key={id} style={{alignItems: 'center'}}>\r\n                <Col xs={2}>{id}</Col>\r\n                <Col xs={7}>\r\n                    <Link to={{\r\n                        pathname: sprintf(ROUTES.PROVIDER_ITEM_PATH, id),\r\n                        query: filter.getParams()\r\n                    }}>{name}</Link>\r\n                </Col>\r\n                <Col xs={3}>{createdDate}</Col>\r\n            </Row>\r\n        )\r\n    })\r\n\r\n    const list = {\r\n        header: listHeader,\r\n        list: providerList,\r\n        loading: _.get(listData, 'listLoading')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.PROVIDER_LIST_URL}/>\r\n            <div className={classes.addButtonWrapper}>\r\n                <Tooltip position=\"left\" text=\"Добавить поставщика\">\r\n                    <FloatingActionButton\r\n                        mini={true}\r\n                        className={classes.addButton}\r\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\r\n                        <ContentAdd />\r\n                    </FloatingActionButton>\r\n                </Tooltip>\r\n            </div>\r\n\r\n            <GridList\r\n                filter={filter}\r\n                list={list}\r\n                detail={providerDetail}\r\n                actionsDialog={actions}\r\n            />\r\n\r\n            <ProviderCreateDialog\r\n                open={createDialog.openCreateDialog}\r\n                loading={createDialog.createLoading}\r\n                onClose={createDialog.handleCloseCreateDialog}\r\n                onSubmit={createDialog.handleSubmitCreateDialog}\r\n            />\r\n\r\n            <ProviderCreateDialog\r\n                isUpdate={true}\r\n                initialValues={updateDialog.initialValues}\r\n                open={updateDialog.openUpdateDialog}\r\n                loading={updateDialog.updateLoading}\r\n                onClose={updateDialog.handleCloseUpdateDialog}\r\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\r\n            />\r\n\r\n            {detailData.data && <ConfirmDialog\r\n                type=\"delete\"\r\n                message={_.get(detailData, ['data', 'name'])}\r\n                onClose={confirmDialog.handleCloseConfirmDialog}\r\n                onSubmit={confirmDialog.handleSendConfirmDialog}\r\n                open={confirmDialog.openConfirmDialog}\r\n            />}\r\n        </Container>\r\n    )\r\n})\r\n\r\nProviderGridList.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object,\r\n    createDialog: PropTypes.shape({\r\n        createLoading: PropTypes.bool.isRequired,\r\n        openCreateDialog: PropTypes.bool.isRequired,\r\n        handleOpenCreateDialog: PropTypes.func.isRequired,\r\n        handleCloseCreateDialog: PropTypes.func.isRequired,\r\n        handleSubmitCreateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    confirmDialog: PropTypes.shape({\r\n        openConfirmDialog: PropTypes.bool.isRequired,\r\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\r\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\r\n        handleSendConfirmDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    updateDialog: PropTypes.shape({\r\n        updateLoading: PropTypes.bool.isRequired,\r\n        openUpdateDialog: PropTypes.bool.isRequired,\r\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\r\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\r\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    actionsDialog: PropTypes.shape({\r\n        handleActionEdit: PropTypes.func.isRequired,\r\n        handleActionDelete: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default ProviderGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Provider/ProviderGridList.js","import ProviderGridList from './ProviderGridList'\nimport {PROVIDER_CREATE_DIALOG_OPEN, PROVIDER_UPDATE_DIALOG_OPEN} from './ProviderCreateDialog'\n\nconst PROVIDER_DELETE_DIALOG_OPEN = 'openDeleteDialog'\nexport {\n    PROVIDER_CREATE_DIALOG_OPEN,\n    PROVIDER_UPDATE_DIALOG_OPEN,\n    PROVIDER_DELETE_DIALOG_OPEN,\n    ProviderGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Provider/index.js","import React from 'react'\nimport _ from 'lodash'\nimport injectSheet from 'react-jss'\nimport DatePicker from 'material-ui/DatePicker'\nimport DateRange from 'material-ui/svg-icons/action/date-range'\n\nconst errorStyle = {\n    textAlign: 'left'\n}\n\nconst DateField = ({classes, input, label, meta: {error}, ...defaultProps}) => {\n    _.unset(defaultProps, 'sheet')\n    if (!_.isObject(input.value)) {\n        _.unset(input, 'value')\n    }\n    return (\n        <div className={classes.wrapper}>\n            <div style={{position: 'relative'}}>\n                <DatePicker\n                    errorText={error}\n                    errorStyle={errorStyle}\n                    floatingLabelText={label}\n                    {...input}\n                    onChange={(event, value) => input.onChange(value)}\n                    {...defaultProps}\n                    okLabel=\"Ок\"\n                    cancelLabel=\"Отмена\"\n                />\n                <div className={classes.icon}>\n                    <DateRange />\n                </div>\n            </div>\n            {error && <span>{error}</span>}\n        </div>\n    )\n}\n\nexport default injectSheet({\n    icon: {\n        position: 'absolute',\n        right: '0',\n        top: '14px',\n        '& svg': {\n            color: '#ccc !important',\n            height: '20px !important',\n            width: '20px !important'\n        }\n    }\n})(DateField)\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Basic/DateField.js","/* eslint no-invalid-this: 0 */\n/* eslint no-undefined: 0 */\n\nimport _ from 'lodash'\nimport moment from 'moment'\nimport React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\nimport DatePickerDialog from 'material-ui/DatePicker/DatePickerDialog'\nimport MUITextField from 'material-ui/TextField'\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\n\nconst DELAY = 300\n\nclass DateToDateField extends React.Component {\n    datePicker = null\n\n    constructor (props) {\n        super(props)\n        this.state = {\n            starting: false\n        }\n    }\n\n    handleOnFocus = () => {\n        _.delay(() => this.datePicker.show(), DELAY)\n    }\n\n    handleOnAccept = (value) => {\n        const {input} = this.props\n        const fromDate = _.get(input, ['value', 'fromDate'])\n\n        if (!fromDate || !this.state.starting) {\n            input.onChange({fromDate: moment(value)})\n            this.setState({starting: true})\n            _.delay(() => this.datePicker.show(), DELAY)\n        } else {\n            input.onChange({\n                fromDate: _.get(input, ['value', 'fromDate']),\n                toDate: moment(value)\n            })\n            this.setState({starting: false})\n        }\n    }\n\n    textField = () => {\n        const {input, format} = this.props\n        const fromDate = _.get(input, ['value', 'fromDate'])\n        const toDate = _.get(input, ['value', 'toDate'])\n\n        if (fromDate && !toDate) {\n            return moment(fromDate).format(format)\n        }\n\n        if (fromDate && toDate) {\n            return moment(fromDate).format(format) + ' - ' + moment(toDate).format(format)\n        }\n\n        return ''\n    }\n\n    getMinDate = () => {\n        const {input} = this.props\n        const fromDate = _.get(input, ['value', 'fromDate'])\n        const toDate = _.get(input, ['value', 'toDate'])\n\n        if (fromDate && !toDate) {\n            return fromDate.toDate()\n        }\n\n        return undefined\n    }\n\n    render () {\n        const {label, classes, meta: {error}} = this.props\n\n        return (\n            <div className={classes.wrapper}>\n                <div style={{position: 'relative'}}>\n                    <DatePickerDialog\n                        ref={(element) => {\n                            this.datePicker = element\n                        }}\n                        minDate={this.getMinDate()}\n                        onAccept={this.handleOnAccept}\n                        firstDayOfWeek={0}\n                    />\n                    <div className={classes.icon}>\n                        <KeyboardArrowDown />\n                    </div>\n                    <MUITextField\n                        errorText={error}\n                        floatingLabelText={label}\n                        onFocus={this.handleOnFocus}\n                        value={this.textField()}\n                        className={classes.inputDateCustom}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nDateToDateField.defaultProps = {\n    format: 'DD.MM.YYYY'\n}\n\nDateToDateField.propTypes = {\n    format: PropTypes.string\n}\n\nexport default injectSheet({\n    icon: {\n        position: 'absolute',\n        right: '0',\n        top: '19px',\n        '& svg': {\n            color: '#ccc !important',\n            height: '20px !important',\n            width: '20px !important'\n        }\n    },\n    inputDateCustom: {\n        fontSize: '13px !important',\n        height: '45px !important',\n        marginTop: '7px',\n        width: '100% !important',\n        '& div': {\n            fontSize: '13px !important'\n        },\n        '& label': {\n            top: '20px !important',\n            lineHeight: '5px !important'\n        },\n        '& input': {\n            marginTop: '0 !important'\n        },\n        '& div:first-child': {\n            height: '45px !important'\n        },\n        '& div:first-child div:first-child': {\n            transform: 'translate(0px, 0px) !important'\n        }\n    }\n})(DateToDateField)\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Basic/DateToDateFieldCustom.js","/* global FormData */\r\nimport React from 'react'\r\nimport _ from 'lodash'\r\nimport {compose, withState} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport * as PATH from '../../../constants/api'\r\nimport Dropzone from 'react-dropzone'\r\nimport axios from '../../../helpers/axios'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport ImageImage from 'material-ui/svg-icons/image/image'\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            position: 'relative',\r\n            width: '100%',\r\n            '& .imageDropZone': {\r\n                border: '2px #ccc dashed',\r\n                cursor: 'pointer',\r\n                width: '200px',\r\n                height: '200px',\r\n                display: 'flex',\r\n                margin: '20px 0 0 auto',\r\n                justifyContent: 'space-around',\r\n                alignItems: 'center',\r\n                overflow: 'hidden',\r\n                '& img': {\r\n                    width: '100%',\r\n                    display: 'block'\r\n                },\r\n                '& p': {\r\n                    textAlign: 'center'\r\n                }\r\n            }\r\n        },\r\n        error: {\r\n            textAlign: 'center',\r\n            fontWeight: '600',\r\n            color: '#f44336'\r\n        }\r\n    }),\r\n    withState('fileUploadLoading', 'setFileUploadLoading', false),\r\n    withState('fileUploadErrors', 'setFileUploadErrors', null)\r\n)\r\n\r\nconst ImageUploadField = ({classes, setFileUploadLoading, fileUploadLoading, setFileUploadErrors,\r\n    fileUploadErrors, input, meta: {error}}) => {\r\n    const inputFile = _.get(input, ['value', 'file'])\r\n    const onDrop = (files) => {\r\n        const formData = new FormData()\r\n        const firstElement = 0\r\n        setFileUploadLoading(true)\r\n        formData.append('file', files[firstElement])\r\n        return axios().post(PATH.FILE_UPLOAD, formData)\r\n            .then((response) => {\r\n                setFileUploadLoading(false)\r\n                setFileUploadErrors(null)\r\n                input.onChange(response.data.id)\r\n            }).catch((newError) => {\r\n                const errorData = _.get(newError, ['response', 'data'])\r\n                setFileUploadErrors(errorData.file[firstElement])\r\n                setFileUploadLoading(false)\r\n                input.onChange(null)\r\n            })\r\n    }\r\n\r\n    const dropZoneView = ({acceptedFiles, rejectedFiles}) => {\r\n        const zero = 0\r\n        if (fileUploadLoading) {\r\n            return (<CircularProgress size={40} thickness={4}/>)\r\n        }\r\n\r\n        if (fileUploadErrors !== null) {\r\n            return (<div className={classes.error}>Ошибка: {fileUploadErrors}</div>)\r\n        }\r\n\r\n        if (error) {\r\n            return (<div className={classes.error}>Ошибка: {error}</div>)\r\n        }\r\n\r\n        if (acceptedFiles.length === zero) {\r\n            if (inputFile) {\r\n                return (\r\n                    <img src={inputFile} />\r\n                )\r\n            }\r\n            return (\r\n                <p>\r\n                    <ImageImage style={{color: '#b9b9b9', width: '50px', height: '50px', display: 'block', margin: 'auto'}}/>\r\n                    Добавьте фото\r\n                </p>)\r\n        }\r\n        const url = acceptedFiles[zero].preview\r\n        return (<img src={url}/>)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <Dropzone\r\n                onDrop={onDrop}\r\n                className=\"imageDropZone\"\r\n                accept=\"image/jpeg, image/png\">\r\n                {dropZoneView}\r\n            </Dropzone>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default enhance(ImageUploadField)\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Basic/ImageUploadField.js","import React from 'react'\nimport {Marker} from 'react-google-maps'\nimport {compose, withState} from 'recompose'\nimport injectSheet from 'react-jss'\nimport GoogleMap from '../../GoogleMap/index'\nimport {DEFAULT_LOCATION} from '../../../constants/googleMaps'\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            position: 'relative',\n            width: '100%',\n            height: '100%'\n        },\n        error: {\n            position: 'absolute',\n            zIndex: '99',\n            left: 0,\n            textAlign: 'center',\n            background: '#fff',\n            border: '1px solid',\n            fontSize: '14px',\n            bottom: '2px',\n            marginLeft: '40px',\n            marginRight: '40px',\n            right: '0',\n            color: 'red'\n        }\n    }),\n    withState('location', 'setLocation', DEFAULT_LOCATION)\n)\n\nconst LocationField = ({classes, location, setLocation, input, meta: {error}}) => {\n    const handleClick = (pointer) => {\n        input.onChange({lat: pointer.latLng.lat(), lng: pointer.latLng.lng()})\n        setLocation({lat: pointer.latLng.lat(), lng: pointer.latLng.lng()})\n    }\n\n    return (\n        <div className={classes.wrapper}>\n            {error && <div className={classes.error}>{error}</div>}\n            <GoogleMap onClick={handleClick} center={location}>\n                <Marker position={location} />\n            </GoogleMap>\n        </div>\n    )\n}\n\nexport default enhance(LocationField)\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Basic/LocationField.js","import React from 'react'\nimport injectSheet from 'react-jss'\nimport TimePicker from 'material-ui/TimePicker'\n\nconst errorStyle = {\n    textAlign: 'left'\n}\n\nconst TimeField = ({classes, input, label, meta: {error}, ...defaultProps}) => {\n    return (\n        <div className={classes.wrapper}>\n            <div>\n                <TimePicker\n                    format=\"24hr\"\n                    errorText={error}\n                    errorStyle={errorStyle}\n                    floatingLabelText={label}\n                    {...input}\n                    onChange={(event, value) => input.onChange(value)}\n                    {...defaultProps}\n                />\n            </div>\n            {error && <span>{error}</span>}\n        </div>\n    )\n}\n\nexport default injectSheet({\n})(TimeField)\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Basic/TimeField.js","import sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from './Basic/SearchField'\nimport axios from '../../helpers/axios'\nimport * as PATH from '../../constants/api'\nimport toCamelCase from '../../helpers/toCamelCase'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.BRAND_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst getItem = (id) => {\n    return axios().get(sprintf(PATH.BRAND_ITEM, id))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst BrandSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default BrandSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/BrandSearchField.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose} from 'recompose'\nimport {connect} from 'react-redux'\nimport CircularProgress from 'material-ui/CircularProgress'\n\nconst enhance = compose(\n    connect((state) => {\n        const currency = _.get(state, ['form', 'PendingPaymentsCreateForm', 'values', 'cashbox', 'value', 'currency', 'name'])\n        const extraLoading = _.get(state, ['product', 'extra', 'loading'])\n        return {\n            currency,\n            extraLoading\n        }\n    })\n)\n\nconst CashboxCurrencyField = enhance((props) => {\n    const {currency, extraLoading} = props\n    return (\n        <div style={{margin: '6px 0 0 10px'}}>\n            { extraLoading && <div><CircularProgress size={20} thickness={2} /></div> }\n            {!extraLoading && <div>{currency}</div>}\n        </div>\n    )\n})\n\nexport default CashboxCurrencyField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/CashboxCurrencyField.js","import sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from './Basic/SearchField'\nimport axios from '../../helpers/axios'\nimport * as PATH from '../../constants/api'\nimport toCamelCase from '../../helpers/toCamelCase'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.CASHBOX_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst getItem = (id) => {\n    return axios().get(sprintf(PATH.CASHBOX_ITEM, id))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst StockSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default StockSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/CashboxSearchField.js","import sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from './Basic/SearchField'\nimport axios from '../../helpers/axios'\nimport * as PATH from '../../constants/api'\nimport toCamelCase from '../../helpers/toCamelCase'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.CATEGORY_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst getItem = (id) => {\n    return axios().get(sprintf(PATH.CATEGORY_ITEM, id))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst CategorySearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default CategorySearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/CategorySearchField.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport {RadioButton, RadioButtonGroup} from 'material-ui/RadioButton'\nimport {connect} from 'react-redux'\n\nconst enhance = compose(\n    injectSheet({\n        radioButton: {\n            marginTop: '10px',\n            '&>div': {\n                marginBottom: '10px'\n            },\n            '& svg': {\n                width: '20px !important',\n                height: '20px !important'\n            },\n            '& label': {\n                top: '-2px',\n                marginLeft: '-7px'\n            }\n        }\n    })\n    ,\n    connect((state) => {\n        const contacts = _.get(state, ['client', 'contacts', 'data'])\n        const contactsLoading = _.get(state, ['client', 'contacts', 'loading'])\n        return {\n            contacts,\n            contactsLoading\n        }\n    })\n)\n\nconst ClientContactsField = enhance((props) => {\n    const {classes, contacts, contactsLoading, input, meta: {error}} = props\n    return (\n        <div>\n            { contactsLoading && <div>Загрузка  ...</div> }\n            {error && <div className={classes.error}>{error}</div>}\n            {!contactsLoading && <RadioButtonGroup name=\"contact\" className={classes.radioButton}\n                                                   onChange={input.onChange} defaultSelected={input.value} >\n                {_.map(contacts, (item) => {\n                    const id = _.get(item, 'id')\n                    const value = _.get(item, 'name') + ' ' + _.get(item, 'telephone') + ' ' + _.get(item, 'email')\n                    return (\n                        <RadioButton\n                            key={id}\n                            value={id}\n                            label={value}\n                        />\n                    )\n                })}\n            </RadioButtonGroup>}\n        </div>\n    )\n})\n\nexport default ClientContactsField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Client/ClientContactsField.js","import React from 'react'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport ContentAdd from 'material-ui/svg-icons/content/add'\r\nimport ContentRemove from 'material-ui/svg-icons/content/remove'\r\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\r\nimport {Field} from 'redux-form'\r\nimport TextField from '../Basic/TextField'\r\n\r\n/**\r\n * {['contacts', 'contactName', 'email', 'phoneNumber']}\r\n */\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            marginTop: '20px',\r\n            display: 'flex',\r\n            flexDirection: 'column'\r\n        },\r\n        title: {\r\n            paddingTop: '15px',\r\n            fontWeight: 'bold',\r\n            color: 'black !important'\r\n        },\r\n        headers: {\r\n            height: '0',\r\n            position: 'relative',\r\n            top: '-30px',\r\n            '& button': {\r\n                position: 'absolute !important',\r\n                right: '0 !important'\r\n            }\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        },\r\n        flex: {\r\n            display: 'flex',\r\n            '& div:first-child': {\r\n                marginRight: '10px'\r\n            }\r\n        },\r\n        contactBlock: {\r\n            marginTop: '10px',\r\n            marginBottom: '15px',\r\n            paddingBottom: '15px',\r\n            '&:last-child': {\r\n                margin: '0'\r\n            }\r\n        }\r\n    })\r\n)\r\n\r\nconst ClientContactsListField = (props) => {\r\n    const {classes, fields} = props\r\n    const ONE = 1\r\n    const handleTouchTap = (index) => {\r\n        const LAST_INDEX = index + ONE\r\n\r\n        if (fields.length === LAST_INDEX) {\r\n            return fields.push({})\r\n        }\r\n\r\n        return fields.remove(index)\r\n    }\r\n    return (\r\n        <div>\r\n            {fields.map((contact, index) => {\r\n                return (\r\n                    <div className={classes.contactBlock}>\r\n                        <div className={classes.headers}>\r\n                            <FloatingActionButton\r\n                                backgroundColor=\"#12aaeb\"\r\n                                onTouchTap={() => handleTouchTap(index)}\r\n                                mini={true}>\r\n                                {fields.length !== index + ONE ? <ContentRemove/> : <ContentAdd />}\r\n                            </FloatingActionButton>\r\n                        </div>\r\n                        <div key={index}>\r\n                            <Field\r\n                                label=\"Контактное лицо\"\r\n                                name={`${contact}.name`}\r\n                                component={TextField}\r\n                                className={classes.inputFieldCustom}\r\n                                fullWidth={true}\r\n                            />\r\n                            <div className={classes.flex}>\r\n                                <Field\r\n                                    label=\"Email\"\r\n                                    name={`${contact}.email`}\r\n                                    component={TextField}\r\n                                    className={classes.inputFieldCustom}\r\n                                    fullWidth={true}\r\n                                />\r\n\r\n                                <Field\r\n                                    label=\"Телефон номер\"\r\n                                    name={`${contact}.telephone`}\r\n                                    component={TextField}\r\n                                    className={classes.inputFieldCustom}\r\n                                    fullWidth={true}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default enhance(ClientContactsListField)\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Client/ClientContactsListField.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\nimport axios from '../../../helpers/axios'\nimport * as PATH from '../../../constants/api'\nimport toCamelCase from '../../../helpers/toCamelCase'\nimport * as actionTypes from '../../../constants/actionTypes'\nimport {connect} from 'react-redux'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.CLIENT_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst setItemAction = (data, loading) => {\n    return {\n        type: actionTypes.CLIENT_CONTACTS,\n        data: data,\n        loading: loading\n    }\n}\n\nconst getItem = (id, dispatch) => {\n    dispatch(setItemAction(null, true))\n\n    return axios().get(sprintf(PATH.CLIENT_ITEM, id))\n        .then(({data}) => {\n            dispatch(setItemAction(_.get(data, 'contacts'), false))\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst ClientSearchField = connect()((props) => {\n    const {dispatch} = props\n    const test = (id) => {\n        return getItem(id, dispatch)\n    }\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={test}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n})\n\nexport default ClientSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Client/ClientSearchField.js","import sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from './Basic/SearchField'\nimport axios from '../../helpers/axios'\nimport * as PATH from '../../constants/api'\nimport toCamelCase from '../../helpers/toCamelCase'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.CURRENCY_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst getItem = (id) => {\n    return axios().get(sprintf(PATH.CURRENCY_ITEM, id))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst CurrencySearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default CurrencySearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/CurrencySearchField.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport SearchField from './Basic/SearchField'\r\n\r\nconst Items = [\r\n    {id: 0, name: 'Стандартная'},\r\n    {id: 1, name: 'Консигнация'}\r\n]\r\n\r\nconst getOptions = (search) => {\r\n    return Promise.resolve(Items)\r\n}\r\n\r\nconst getItem = (id) => {\r\n    return Promise.resolve(\r\n        _.find(Items, (o) => { return o.id === _.toInteger(id) }))\r\n}\r\n\r\nconst DealTypeSearchField = (props) => {\r\n    return (\r\n        <SearchField\r\n            getValue={SearchField.defaultGetValue('id')}\r\n            getText={SearchField.defaultGetText('name')}\r\n            getOptions={getOptions}\r\n            getItem={getItem}\r\n            getItemText={SearchField.defaultGetText('name')}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nexport default DealTypeSearchField\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/DealTypeSearchField.js","import _ from 'lodash'\nimport React from 'react'\nimport SearchField from './Basic/SearchField'\n\nconst Items = [\n    {id: 0, name: 'Самовывоз'},\n    {id: 1, name: 'Доставка'}\n]\n\nconst getOptions = (search) => {\n    return Promise.resolve(Items)\n}\n\nconst getItem = (id) => {\n    return Promise.resolve(\n        _.find(Items, (o) => { return o.id === _.toInteger(id) }))\n}\n\nconst DeliveryTypeSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default DeliveryTypeSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/DeliveryTypeSearchField.js","import sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from './Basic/SearchField'\nimport axios from '../../helpers/axios'\nimport * as PATH from '../../constants/api'\nimport toCamelCase from '../../helpers/toCamelCase'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.EXPENSIVE_CATEGORY_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst getItem = (id) => {\n    return axios().get(sprintf(PATH.EXPENSIVE_CATEGORY_ITEM, id))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst ExpensiveCategorySearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default ExpensiveCategorySearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/ExpensiveCategorySearchField.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose, withReducer, withState, withHandlers} from 'recompose'\nimport injectSheet from 'react-jss'\nimport {Row, Col} from 'react-flexbox-grid'\nimport IconButton from 'material-ui/IconButton'\nimport {\n    Table,\n    TableBody,\n    TableHeader,\n    TableHeaderColumn,\n    TableRow,\n    TableRowColumn\n} from 'material-ui/Table'\nimport ImageCheck from '../../Icons/check'\nimport DeleteIcon from '../../DeleteIcon/index'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport ProductSearchField from '../Product/ProductSearchField'\nimport TextField from '../Basic/TextField'\nimport {ProductMeasurementField} from '../index'\nimport {connect} from 'react-redux'\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            display: 'flex',\n            flexDirection: 'column'\n        },\n        table: {\n            margin: '20px 0 10px',\n            maxHeight: '300px',\n            overflow: 'auto'\n        },\n        tableTitle: {\n            fontWeight: '600',\n            color: '#333 !important',\n            textAlign: 'left'\n        },\n        tableRow: {\n            height: '40px !important',\n            border: 'none !important',\n            '& td:first-child': {\n                width: '250px'\n            },\n            '& tr': {\n                border: 'none !important'\n            },\n            '& td': {\n                height: '40px !important',\n                padding: '0 5px !important'\n            },\n            '& th:first-child': {\n                width: '250px',\n                textAlign: 'left !important',\n                fontWeight: '600 !important'\n            },\n            '& th': {\n                textAlign: 'left !important',\n                border: 'none !important',\n                height: '40px !important',\n                padding: '0 5px !important',\n                fontWeight: '600 !important'\n            }\n        },\n        title: {\n            fontWeight: '600',\n            border: 'none !important'\n        },\n        headers: {\n            display: 'flex',\n            alignItems: 'center',\n            height: '40px',\n            justifyContent: 'space-between',\n            '& span': {\n                textTransform: 'lowercase !important'\n            }\n        },\n        background: {\n            backgroundColor: '#f1f5f8',\n            display: 'flex',\n            padding: '10px',\n            marginTop: '20px',\n            '& > div': {\n                marginTop: '-20px !important',\n                marginRight: '20px',\n                height: '72px !important',\n                '& input': {\n                    height: '75px !important'\n                }\n            },\n            '& > button > div > span': {\n                padding: '0 !important'\n            },\n            '& > div:last-child': {\n                width: '100% !important'\n            },\n            '& button': {\n                marginTop: '10px !important'\n            }\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        titleAdd: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: '20px'\n        },\n        addRaw: {\n            alignItems: 'flex-end',\n            justifyContent: 'space-between',\n            margin: '5px -7px'\n        }\n    }),\n    withState('openAddMaterials', 'setOpenAddMaterials', false),\n    withReducer('state', 'dispatch', (state, action) => {\n        return {...state, ...action}\n    }, {open: false}),\n    connect((state) => {\n        const measurementName = _.get(state, ['product', 'measurement', 'data'])\n        return {\n            measurementName\n        }\n    }),\n    withHandlers({\n        handleAdd: props => (measurementName) => {\n            const ingredient = _.get(props, ['ingredient', 'input', 'value'])\n            const amount = _.get(props, ['amount', 'input', 'value'])\n            const measurement = measurementName\n            const onChange = _.get(props, ['ingredients', 'input', 'onChange'])\n            const ingredients = _.get(props, ['ingredients', 'input', 'value'])\n\n            if (!_.isEmpty(ingredient) && amount) {\n                onChange(_.union(ingredients, [{ingredient, amount, measurement}]))\n            }\n        },\n\n        handleRemove: props => (listIndex) => {\n            const onChange = _.get(props, ['ingredients', 'input', 'onChange'])\n            const ingredients = _(props)\n                .get(['ingredients', 'input', 'value'])\n                .filter((item, index) => index !== listIndex)\n\n            onChange(ingredients)\n        }\n    })\n)\n\nconst ManufactureListMaterialField = ({classes, state, measurementName, handleAdd, handleRemove, openAddMaterials, setOpenAddMaterials, ...defaultProps}) => {\n    const ingredients = _.get(defaultProps, ['ingredients', 'input', 'value']) || []\n\n    return (\n        <div className={classes.wrapper}>\n            <div className={classes.titleAdd}>\n                <h3>Сырье</h3>\n                <a onClick={() => {\n                    setOpenAddMaterials(!openAddMaterials)\n                }}>\n                    <ContentAdd style={{height: '13px', width: '13px', color: 'rgb(18, 170, 235)'}}\n                                viewBox=\"0 0 24 15\"/>\n                    добавить сырье\n                </a>\n            </div>\n            {openAddMaterials && <div className={classes.addMaterials}>\n                <Row className={classes.addRaw}>\n                    <Col xs={7}>\n                        <ProductSearchField\n                            label=\"Наименование товара\"\n                            className={classes.inputFieldCustom}\n                            fullWidth={true}\n                            {..._.get(defaultProps, 'ingredient')}\n                        />\n                    </Col>\n                    <Col xs={2}>\n                        <TextField\n                            label=\"Кол-во\"\n                            fullWidth={true}\n                            className={classes.inputFieldCustom}\n                            {..._.get(defaultProps, 'amount')}\n                        />\n                    </Col>\n                    <Col xs={1} style={{height: '32px'}}>\n                        <ProductMeasurementField />\n                    </Col>\n                    <IconButton\n                        onTouchTap={() => { handleAdd(measurementName) }}>\n                        <div>\n                            <ImageCheck color=\"#129fdd\"/>\n                        </div>\n                    </IconButton>\n                </Row>\n            </div>}\n            {!_.isEmpty(ingredients) ? <div className={classes.table}>\n                <Table\n                    fixedHeader={true}\n                    fixedFooter={false}\n                    multiSelectable={false}>\n                    <TableHeader\n                        displaySelectAll={false}\n                        adjustForCheckbox={false}\n                        enableSelectAll={false}\n                        className={classes.title}>\n                        <TableRow className={classes.tableRow}>\n                            <TableHeaderColumn\n                                className={classes.tableTitle}>Наименование</TableHeaderColumn>\n                            <TableHeaderColumn className={classes.tableTitle}>Кол-во</TableHeaderColumn>\n                            <TableHeaderColumn className={classes.tableTitle}>Ед</TableHeaderColumn>\n                            <TableHeaderColumn></TableHeaderColumn>\n                        </TableRow>\n                    </TableHeader>\n                    <TableBody\n                        displayRowCheckbox={false}\n                        deselectOnClickaway={false}\n                        showRowHover={false}\n                        stripedRows={false}>\n                        {_.map(ingredients, (item, index) => (\n                            <TableRow key={index} className={classes.tableRow}>\n                                <TableRowColumn>{_.get(item, ['ingredient', 'text'])}</TableRowColumn>\n                                <TableRowColumn>{_.get(item, 'amount')}</TableRowColumn>\n                                <TableRowColumn>{_.get(item, 'measurement')}</TableRowColumn>\n                                <TableRowColumn style={{textAlign: 'right'}}>\n                                    <IconButton onTouchTap={() => handleRemove(index)}>\n                                        <DeleteIcon color=\"#666666\"/>\n                                    </IconButton>\n                                </TableRowColumn>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </div>\n                : <div></div>\n            }\n        </div>\n    )\n}\n\nexport default enhance(ManufactureListMaterialField)\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Manufacture/ManufactureListMaterialField.js","import sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\nimport axios from '../../../helpers/axios'\nimport * as PATH from '../../../constants/api'\nimport toCamelCase from '../../../helpers/toCamelCase'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.MANUFACTURE_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst getItem = (id) => {\n    return axios().get(sprintf(PATH.MANUFACTURE_ITEM, id))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst ManufactureSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default ManufactureSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Manufacture/ManufactureSearchField.js","import sprintf from 'sprintf'\r\nimport React from 'react'\r\nimport SearchField from './Basic/SearchField'\r\nimport axios from '../../helpers/axios'\r\nimport * as PATH from '../../constants/api'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\n\r\nconst getOptions = (search) => {\r\n    return axios().get(`${PATH.SHOP_LIST}?search=${search || ''}`)\r\n        .then(({data}) => {\r\n            return Promise.resolve(toCamelCase(data.results))\r\n        })\r\n}\r\n\r\nconst getItem = (id) => {\r\n    return axios().get(sprintf(PATH.SHOP_ITEM, id))\r\n        .then(({data}) => {\r\n            return Promise.resolve(toCamelCase(data))\r\n        })\r\n}\r\n\r\nconst MarketSearchField = (props) => {\r\n    return (\r\n        <SearchField\r\n            getValue={SearchField.defaultGetValue('id')}\r\n            getText={SearchField.defaultGetText('name')}\r\n            getOptions={getOptions}\r\n            getItem={getItem}\r\n            getItemText={SearchField.defaultGetText('name')}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nexport default MarketSearchField\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/MarketSearchField.js","import sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from './Basic/SearchField'\nimport axios from '../../helpers/axios'\nimport * as PATH from '../../constants/api'\nimport toCamelCase from '../../helpers/toCamelCase'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.MEASUREMENT_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst getItem = (id) => {\n    return axios().get(sprintf(PATH.MEASUREMENT_ITEM, id))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst MeasurementSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default MeasurementSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/MeasurementSearchField.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport {compose, withHandlers, withReducer, withState} from 'recompose'\r\nimport {Field} from 'redux-form'\r\nimport injectSheet from 'react-jss'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport Groceries from '../../Images/groceries.svg'\r\nimport {connect} from 'react-redux'\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableHeader,\r\n    TableHeaderColumn,\r\n    TableRow,\r\n    TableRowColumn\r\n} from 'material-ui/Table'\r\nimport DeleteIcon from '../../DeleteIcon/index'\r\n\r\nimport OrderProductSearchField from './OrderProductSearchField'\r\nimport TextField from '../Basic/TextField'\r\nimport ProductCostField from '../Product/ProductCostField'\r\nimport OrderProductMeasurementField from './OrderProductMeasurementField'\r\nimport {ProductTypeSearchField} from '../../ReduxForm'\r\nimport getConfig from '../../../helpers/getConfig'\r\nimport numberFormat from '../../../helpers/numberFormat'\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            height: '100%',\r\n            position: 'relative'\r\n        },\r\n        error: {\r\n            textAlign: 'center',\r\n            fontSize: '14px',\r\n            color: 'red'\r\n        },\r\n        imagePlaceholder: {\r\n            width: '100%',\r\n            height: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            '& img': {\r\n                width: '70px',\r\n                marginBottom: '20px'\r\n            }\r\n        },\r\n        table: {\r\n            marginTop: '20px'\r\n        },\r\n        tableTitle: {\r\n            fontWeight: '600',\r\n            color: '#333 !important',\r\n            textAlign: 'left'\r\n        },\r\n        tableRow: {\r\n            height: '40px !important',\r\n            border: 'none !important',\r\n            '& td:first-child': {\r\n                width: '250px'\r\n            },\r\n            '& tr': {\r\n                border: 'none !important'\r\n            },\r\n            '& td': {\r\n                height: '40px !important',\r\n                padding: '0 5px !important'\r\n            },\r\n            '& th:first-child': {\r\n                width: '250px',\r\n                textAlign: 'left !important',\r\n                fontWeight: '600 !important'\r\n            },\r\n            '& th': {\r\n                textAlign: 'left !important',\r\n                border: 'none !important',\r\n                height: '40px !important',\r\n                padding: '0 5px !important',\r\n                fontWeight: '600 !important'\r\n            }\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            width: '100% !important',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        },\r\n        title: {\r\n            fontWeight: '600',\r\n            border: 'none !important'\r\n        },\r\n        headers: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            height: '40px',\r\n            justifyContent: 'space-between',\r\n            '& span': {\r\n                textTransform: 'lowercase !important'\r\n            }\r\n        },\r\n        background: {\r\n            display: 'flex',\r\n            padding: '10px 30px',\r\n            margin: '0 -30px',\r\n            marginTop: '5px',\r\n            backgroundColor: '#f1f5f8',\r\n            position: 'relative',\r\n            zIndex: '2'\r\n        }\r\n    }),\r\n    withState('openAddProducts', 'setOpenAddProducts', false),\r\n    connect((state) => {\r\n        const extra = _.get(state, ['product', 'extra', 'data'])\r\n        return {\r\n            extra\r\n        }\r\n    }),\r\n    withReducer('state', 'dispatch', (state, action) => {\r\n        return {...state, ...action}\r\n    }, {open: false}),\r\n\r\n    withHandlers({\r\n        handleAdd: props => () => {\r\n            const product = _.get(props, ['product', 'input', 'value'])\r\n            const amount = _.get(props, ['amount', 'input', 'value'])\r\n            const onChange = _.get(props, ['products', 'input', 'onChange'])\r\n            const products = _.get(props, ['products', 'input', 'value'])\r\n            const extra = _.get(props, ['extra'])\r\n            const measurement = _.get(extra, ['product', 'measurement', 'name'])\r\n            const ZERO = 0\r\n\r\n            if (!_.isEmpty(product) && amount) {\r\n                const cost = _.toNumber(_.get(extra, ['product', 'price']) || ZERO) * _.toNumber(amount)\r\n                const foundIndex = _.findIndex(products,\r\n                    (item) => {\r\n                        return _.get(item, ['product', 'value']) === _.get(product, ['value'])\r\n                    })\r\n                const NOT_FOUND = -1\r\n\r\n                if (foundIndex === NOT_FOUND) {\r\n                    onChange(_.union(products, [{product, amount, cost, measurement, extra}]))\r\n                }\r\n            }\r\n        },\r\n\r\n        handleRemove: props => (listIndex) => {\r\n            const onChange = _.get(props, ['products', 'input', 'onChange'])\r\n            const products = _(props)\r\n                .get(['products', 'input', 'value'])\r\n                .filter((item, index) => index !== listIndex)\r\n\r\n            onChange(products)\r\n        }\r\n    })\r\n)\r\n\r\nconst OrderListProductField = ({classes, handleAdd, handleRemove, openAddProducts, setOpenAddProducts, ...defaultProps}) => {\r\n    const products = _.get(defaultProps, ['products', 'input', 'value']) || []\r\n    const error = _.get(defaultProps, ['products', 'meta', 'error'])\r\n    const tableProducts = _.map(products, (item, index) => {\r\n        const cost = _.get(item, 'cost')\r\n        const balance = _.toNumber(_.get(item, ['extra', 'balance']))\r\n        const amount = _.toNumber(_.get(item, 'amount'))\r\n        const measurement = _.get(item, 'measurement')\r\n        return (\r\n            <TableRow key={index} className={classes.tableRow}\r\n                      style={{background: (balance < amount) ? '#ffecec' : 'transparent'}}>\r\n                <TableRowColumn>{_.get(item, ['product', 'text'])}</TableRowColumn>\r\n                <TableRowColumn>{numberFormat(balance)}</TableRowColumn>\r\n                <TableRowColumn>{numberFormat(amount)} {measurement}</TableRowColumn>\r\n                <TableRowColumn>{numberFormat(cost)} {getConfig('PRIMARY_CURRENCY')}</TableRowColumn>\r\n                <TableRowColumn style={{textAlign: 'right'}}>\r\n                    <IconButton onTouchTap={() => handleRemove(index)}>\r\n                        <DeleteIcon color=\"#666666\"/>\r\n                    </IconButton>\r\n                </TableRowColumn>\r\n            </TableRow>\r\n        )\r\n    })\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div>\r\n                <div className={classes.headers} style={{marginTop: '-10px'}}>\r\n                    <div className={classes.title}>Список товаров</div>\r\n                    <FlatButton\r\n                        label=\"+ добавить товар\"\r\n                        style={{color: '#12aaeb'}}\r\n                        className={classes.span}\r\n                        onTouchTap={() => setOpenAddProducts(!openAddProducts)}\r\n                    />\r\n                </div>\r\n                {openAddProducts && <div className={classes.background}>\r\n                    <div xs={12} style={{paddingRight: '20px'}}>\r\n                        <Field\r\n                            label=\"Отфильтровать по типу\"\r\n                            name=\"type\"\r\n                            component={ProductTypeSearchField}\r\n                            className={classes.inputFieldCustom}\r\n                            fullWidth={true}\r\n                        />\r\n                    </div>\r\n                    <div xs={4} style={{paddingRight: '20px'}}>\r\n                        <Field\r\n                            label=\"Наименование товара\"\r\n                            name=\"product\"\r\n                            component={OrderProductSearchField}\r\n                            className={classes.inputFieldCustom}\r\n                            fullWidth={true}\r\n                        />\r\n                    </div>\r\n                    <div xs={2} style={{paddingRight: '20px'}}>\r\n                        <Field\r\n                            label=\"Кол-во\"\r\n                            name=\"amount\"\r\n                            component={TextField}\r\n                            className={classes.inputFieldCustom}\r\n                            fullWidth={true}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <OrderProductMeasurementField/>\r\n                    </div>\r\n                    <div className=\"summa\" style={{width: '10%', textAlign: 'right', paddingRight: '20px'}}>\r\n                        <ProductCostField />\r\n                    </div>\r\n                    <div style={{width: '15%', textAlign: 'right', paddingTop: '9px'}}>\r\n                        <FlatButton label=\"Применить\" onTouchTap={handleAdd} style={{color: '#12aaeb'}}/>\r\n                    </div>\r\n                </div>}\r\n            </div>\r\n            {error && <div className={classes.error}>{error}</div>}\r\n            {!_.isEmpty(products) ? <div className={classes.table}>\r\n                <Table\r\n                    fixedHeader={true}\r\n                    fixedFooter={false}\r\n                    multiSelectable={false}>\r\n\r\n                        <TableHeader\r\n                            displaySelectAll={false}\r\n                            adjustForCheckbox={false}\r\n                            enableSelectAll={false}\r\n                            className={classes.title}>\r\n                            <TableRow className={classes.tableRow}>\r\n                                <TableHeaderColumn\r\n                                    className={classes.tableTitle}>Наименование</TableHeaderColumn>\r\n                                <TableHeaderColumn className={classes.tableTitle}>На складе</TableHeaderColumn>\r\n                                <TableHeaderColumn className={classes.tableTitle}>Кол-во</TableHeaderColumn>\r\n                                <TableHeaderColumn className={classes.tableTitle}>Сумма</TableHeaderColumn>\r\n                                <TableHeaderColumn></TableHeaderColumn>\r\n                            </TableRow>\r\n                        </TableHeader>\r\n                    <TableBody\r\n                        displayRowCheckbox={false}\r\n                        deselectOnClickaway={false}\r\n                        showRowHover={false}\r\n                        stripedRows={false}>\r\n                        {tableProducts}\r\n                    </TableBody>\r\n                </Table>\r\n            </div>\r\n                : <div className={classes.imagePlaceholder}>\r\n                    <div style={{textAlign: 'center', color: '#adadad'}}>\r\n                        <img src={Groceries} alt=\"\"/>\r\n                        <div>Вы еще не выбрали ни одного товара. <br/> <a onClick={() => setOpenAddProducts(!openAddProducts)}>Добавить</a> товар?</div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default enhance(OrderListProductField)\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Order/OrderListProductField.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose, withReducer, withHandlers} from 'recompose'\nimport injectSheet from 'react-jss'\nimport IconButton from 'material-ui/IconButton'\nimport FlatButton from 'material-ui/FlatButton'\nimport Groceries from '../../Images/groceries.svg'\nimport {connect} from 'react-redux'\nimport getConfig from '../../../helpers/getConfig'\nimport numberFormat from '../../../helpers/numberFormat'\nimport {\n    Table,\n    TableBody,\n    TableHeader,\n    TableHeaderColumn,\n    TableRow,\n    TableRowColumn\n} from 'material-ui/Table'\nimport DeleteIcon from '../../DeleteIcon/index'\n\nimport OrderReturnMeasurementField from './OrderReturnMeasurementField'\nimport ReturnProductsSearchField from './ReturnProductsSearchField'\nimport ProductReturnCostField from './ProductReturnCostField'\nimport TextField from '../Basic/TextField'\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            display: 'flex',\n            flexDirection: 'column',\n            minHeight: '360px',\n            position: 'relative',\n            height: '100%'\n        },\n        imagePlaceholder: {\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            '& img': {\n                width: '100px',\n                marginBottom: '20px'\n            }\n        },\n        table: {\n            marginTop: '20px',\n            overflow: 'auto'\n        },\n        tableTitle: {\n            fontWeight: '600',\n            color: '#333 !important',\n            textAlign: 'left'\n        },\n        tableRow: {\n            height: '40px !important',\n            border: 'none !important',\n            '& td:first-child': {\n                width: '250px'\n            },\n            '& tr': {\n                border: 'none !important'\n            },\n            '& td': {\n                height: '40px !important',\n                padding: '0 5px !important'\n            },\n            '& th:first-child': {\n                width: '250px',\n                textAlign: 'left !important',\n                fontWeight: '600 !important'\n            },\n            '& th': {\n                textAlign: 'left !important',\n                border: 'none !important',\n                height: '40px !important',\n                padding: '0 5px !important',\n                fontWeight: '600 !important'\n            }\n        },\n        title: {\n            fontWeight: '600',\n            border: 'none !important'\n        },\n        headers: {\n            display: 'flex',\n            alignItems: 'center',\n            height: '40px',\n            justifyContent: 'space-between',\n            '& span': {\n                textTransform: 'lowercase !important'\n            }\n        },\n        background: {\n            display: 'flex',\n            padding: '10px 30px',\n            margin: '0 -30px',\n            marginTop: '5px',\n            backgroundColor: '#f1f5f8',\n            position: 'relative',\n            zIndex: '2'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        }\n    }),\n    connect((state) => {\n        const extra = _.get(state, ['product', 'extra', 'data'])\n        return {\n            extra\n        }\n    }),\n    withReducer('state', 'dispatch', (state, action) => {\n        return {...state, ...action}\n    }, {open: false}),\n    withHandlers({\n        handleAdd: props => () => {\n            const ZERO = 0\n            const product = _.get(props, ['product', 'input', 'value'])\n            const amount = _.get(props, ['amount', 'input', 'value'])\n            const extra = _.get(props, ['extra'])\n            const onChange = _.get(props, ['returned_products', 'input', 'onChange'])\n            const products = _.get(props, ['returned_products', 'input', 'value'])\n\n            if (!_.isEmpty(product) && amount) {\n                const cost = _.toNumber(_.get(extra, ['product', 'price']) || ZERO) * _.toNumber(amount)\n                onChange(_.union(products, [{product, amount, cost}]))\n            }\n        },\n\n        handleRemove: props => (listIndex) => {\n            const onChange = _.get(props, ['returned_products', 'input', 'onChange'])\n            const products = _(props)\n                .get(['returned_products', 'input', 'value'])\n                .filter((item, index) => index !== listIndex)\n\n            onChange(products)\n        }\n    })\n)\n\nconst OrderListReturnField = ({classes, state, dispatch, handleAdd, handleRemove, orderData, ...defaultProps}) => {\n    const products = _.get(defaultProps, ['returned_products', 'input', 'value']) || []\n    return (\n        <div className={classes.wrapper}>\n            <div>\n                <div className={classes.headers}>\n                    <div className={classes.title}>Список товаров</div>\n                    <FlatButton\n                        label=\"+ добавить товар\"\n                        style={{color: '#12aaeb'}}\n                        className={classes.span}\n                        onTouchTap={() => dispatch({open: !state.open})}\n                    />\n                </div>\n                {state.open && <div className={classes.background}>\n                    <div style={{width: '35%', paddingRight: '20px'}}>\n                        <ReturnProductsSearchField\n                            label=\"Наименование товара\"\n                            className={classes.inputFieldCustom}\n                            style={{width: '100%'}}\n                            {..._.get(defaultProps, 'product')}\n                        />\n                    </div>\n                    <div style={{width: '20%', paddingRight: '20px'}}>\n                        <TextField\n                            label=\"Кол-во\"\n                            className={classes.inputFieldCustom}\n                            style={{width: '100%'}}\n                            {..._.get(defaultProps, 'amount')}\n                        />\n                    </div>\n                    <div>\n                        <OrderReturnMeasurementField/>\n                    </div>\n                    <div className=\"summa\" style={{width: '25%', textAlign: 'right', paddingRight: '20px'}}>\n                        <ProductReturnCostField />\n                    </div>\n                    <div style={{width: '20%', textAlign: 'right', paddingTop: '9px'}}>\n                        <FlatButton label=\"Применить\" onTouchTap={handleAdd} style={{color: '#12aaeb'}}/>\n                    </div>\n                </div>}\n            </div>\n            {!_.isEmpty(products) ? <div className={classes.table}>\n                <Table\n                    fixedHeader={true}\n                    fixedFooter={false}\n                    multiSelectable={false}>\n\n                        <TableHeader\n                            displaySelectAll={false}\n                            adjustForCheckbox={false}\n                            enableSelectAll={false}\n                            className={classes.title}>\n                            <TableRow className={classes.tableRow}>\n                                <TableHeaderColumn\n                                    className={classes.tableTitle}>Наименование</TableHeaderColumn>\n                                <TableHeaderColumn className={classes.tableTitle}>Кол-во</TableHeaderColumn>\n                                <TableHeaderColumn className={classes.tableTitle}>Сумма</TableHeaderColumn>\n                                <TableHeaderColumn></TableHeaderColumn>\n                            </TableRow>\n                        </TableHeader>\n                    <TableBody\n                        displayRowCheckbox={false}\n                        deselectOnClickaway={false}\n                        showRowHover={false}\n                        stripedRows={false}>\n                        {_.map(products, (item, index) => (\n                            <TableRow key={index} className={classes.tableRow}>\n                                <TableRowColumn>{_.get(item, ['product', 'text'])}</TableRowColumn>\n                                <TableRowColumn>{_.get(item, 'amount')} {_.get(item, ['product', 'value', 'product', 'measurement', 'name'])}</TableRowColumn>\n                                <TableRowColumn>{\n                                    numberFormat((_.get(item, ['product', 'value', 'price']) * (_.get(item, 'amount'))), getConfig('PRIMARY_CURRENCY'))\n                                }</TableRowColumn>\n                                <TableRowColumn style={{textAlign: 'right'}}>\n                                    <IconButton onTouchTap={() => handleRemove(index)}>\n                                        <DeleteIcon color=\"#666666\"/>\n                                    </IconButton>\n                                </TableRowColumn>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </div>\n                : <div className={classes.imagePlaceholder}>\n                    <div style={{textAlign: 'center', color: '#adadad'}}>\n                        <img src={Groceries} alt=\"\"/>\n                        <div>Вы еще не выбрали ни одного товара. <br/> <a onClick={() => dispatch({open: !state.open})}>Добавить</a> товар?</div>\n                    </div>\n                </div>\n            }\n        </div>\n    )\n}\nOrderListReturnField.propTyeps = {\n    orderData: PropTypes.object.isRequired\n}\nexport default enhance(OrderListReturnField)\n\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Order/OrderListReturnField.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose} from 'recompose'\nimport {connect} from 'react-redux'\nimport CircularProgress from 'material-ui/CircularProgress'\n\nconst enhance = compose(\n    connect((state) => {\n        const ONE = 1\n        const extra = _.get(state, ['product', 'extra', 'data'])\n        const extraLoading = _.get(state, ['product', 'extra', 'loading'])\n        const count = _.get(state, ['form', 'OrderReturnForm', 'values', 'amount']) || ONE\n        return {\n            extra,\n            count,\n            extraLoading\n        }\n    })\n)\n\nconst OrderProductMeasurementField = enhance((props) => {\n    const {extra, extraLoading} = props\n    const measurement = _.get(extra, ['product', 'measurement', 'name'])\n    return (\n        <div style={{marginTop: '20px'}}>\n            { extraLoading && <div><CircularProgress size={20} thickness={2} /></div> }\n            {!extraLoading && <div>{measurement}</div>}\n        </div>\n    )\n})\n\nexport default OrderProductMeasurementField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Order/OrderProductMeasurementField.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport {compose} from 'recompose'\r\nimport SearchField from '../Basic/SearchField'\r\nimport axios from '../../../helpers/axios'\r\nimport * as PATH from '../../../constants/api'\r\nimport toCamelCase from '../../../helpers/toCamelCase'\r\nimport * as actionTypes from '../../../constants/actionTypes'\r\nimport {connect} from 'react-redux'\r\n\r\nconst getOptions = (search, ikkinchi) => {\r\n    return axios().get(`${PATH.PRODUCT_LIST}?ikkinchi=${ikkinchi || ''}&search=${search || ''}`)\r\n        .then(({data}) => {\r\n            return Promise.resolve(toCamelCase(data.results))\r\n        })\r\n}\r\n\r\nconst setExtraAction = (data, loading) => {\r\n    return {\r\n        type: actionTypes.PRODUCT_EXTRA,\r\n        data: data,\r\n        loading: loading\r\n    }\r\n}\r\n\r\nconst FIRST_ITEM = 0\r\nconst getItem = (id, dispatch) => {\r\n    dispatch(setExtraAction(null, true))\r\n    return axios().post(PATH.PRODUCT_EXTRA, {'products': [id]})\r\n        .then(({data}) => {\r\n            dispatch(setExtraAction(_.get(data, FIRST_ITEM), false))\r\n            return Promise.resolve(toCamelCase(_.get(data, [FIRST_ITEM, 'product'])))\r\n        })\r\n}\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const dispatch = _.get(props, 'dispatch')\r\n\r\n        return {\r\n            dispatch,\r\n            state\r\n        }\r\n    })\r\n)\r\nconst OrderProductSearchField = enhance((props) => {\r\n    const {dispatch, state} = props\r\n    const test = (id) => {\r\n        return getItem(id, dispatch)\r\n    }\r\n    const type = _.get(state, ['form', 'OrderCreateForm', 'values', 'type', 'value'])\r\n    return (\r\n        <SearchField\r\n            getValue={SearchField.defaultGetValue('id')}\r\n            getText={SearchField.defaultGetText('name')}\r\n            getOptions={(search) => { return getOptions(search, type) }}\r\n            getItem={test}\r\n            getItemText={SearchField.defaultGetText('name')}\r\n            {...props}\r\n        />\r\n    )\r\n})\r\n\r\nexport default OrderProductSearchField\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Order/OrderProductSearchField.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose} from 'recompose'\nimport {connect} from 'react-redux'\nimport CircularProgress from 'material-ui/CircularProgress'\n\nconst enhance = compose(\n    connect((state) => {\n        const ONE = 1\n        const values = _.get(state, ['form', 'OrderReturnForm', 'values'])\n        const extraLoading = _.get(state, ['product', 'extra', 'loading'])\n        const count = _.get(state, ['form', 'OrderReturnForm', 'values', 'amount']) || ONE\n        return {\n            values,\n            count,\n            extraLoading\n        }\n    })\n)\n\nconst OrderReturnMeasurementField = enhance((props) => {\n    const {values, extraLoading} = props\n    const measurement = _.get(values, ['product', 'value', 'product', 'measurement', 'name'])\n    return (\n        <div style={{marginTop: '20px'}}>\n            { extraLoading && <div><CircularProgress size={20} thickness={2} /></div> }\n            {!extraLoading && <div>{measurement}</div>}\n        </div>\n    )\n})\n\nexport default OrderReturnMeasurementField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Order/OrderReturnMeasurementField.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose} from 'recompose'\nimport {connect} from 'react-redux'\nimport getConfig from '../../../helpers/getConfig'\nimport numberFormat from '../../../helpers/numberFormat'\n\nconst ZERO = 0\n\nconst enhance = compose(\n    connect((state) => {\n        const ONE = 1\n        const extra = _.get(state, ['product', 'extra', 'data'])\n        const extraLoading = _.get(state, ['product', 'extra', 'loading'])\n        const count = _.get(state, ['form', 'OrderReturnForm', 'values', 'amount']) || ONE\n        const products = _.get(state, ['form', 'OrderReturnForm', 'values', 'returned_products'])\n        return {\n            extra,\n            count,\n            products,\n            extraLoading\n        }\n    })\n)\nconst OrderReturnTotalSum = enhance((props) => {\n    const {products} = props\n    let totalCost = ZERO\n    _.map(products, (item) => {\n        const itemCost = _.toNumber(_.get(item, ['product', 'value', 'price']))\n        const itemAmount = _.toNumber(_.get(item, 'amount'))\n        totalCost += (itemAmount * itemCost)\n    })\n    return (\n        <b>{numberFormat(totalCost, getConfig('PRIMARY_CURRENCY'))}</b>\n    )\n})\n\nexport default OrderReturnTotalSum\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Order/OrderReturnTotalSum.js","import _ from 'lodash'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\n\nconst Items = [\n    {id: 0, name: 'Запрос отправлен'},\n    {id: 1, name: 'Готов'},\n    {id: 2, name: 'Доставлен'},\n    {id: 3, name: 'Отменен'}\n]\nconst getOptions = () => {\n    return Promise.resolve(Items)\n}\n\nconst getItem = (id) => {\n    return Promise.resolve(\n        _.find(Items, (o) => { return o.id === _.toInteger(id) }))\n}\n\nconst CurrencySearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default CurrencySearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Order/OrderStatusSearchField.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose} from 'recompose'\nimport {connect} from 'react-redux'\nimport getConfig from '../../../helpers/getConfig'\nimport numberFormat from '../../../helpers/numberFormat'\nimport numberWithoutSpaces from '../../../helpers/numberWithoutSpaces'\n\nconst ZERO = 0\n\nconst enhance = compose(\n    connect((state) => {\n        const ONE = 1\n        const extra = _.get(state, ['product', 'extra', 'data'])\n        const extraLoading = _.get(state, ['product', 'extra', 'loading'])\n        const count = _.get(state, ['form', 'OrderCreateForm', 'values', 'amount']) || ONE\n        const products = _.get(state, ['form', 'OrderCreateForm', 'values', 'products'])\n        const deliveryPrice = _.get(state, ['form', 'OrderCreateForm', 'values', 'deliveryPrice'])\n        const discountPercent = _.get(state, ['form', 'OrderCreateForm', 'values', 'discountPrice']) || ZERO\n        return {\n            extra,\n            count,\n            products,\n            deliveryPrice,\n            discountPercent,\n            extraLoading\n        }\n    })\n)\nconst OrderTotalSum = enhance((props) => {\n    const {products, deliveryPrice, discountPercent} = props\n    const HUNDRED = 100\n    let totalCost = ZERO\n    _.map(products, (item) => {\n        totalCost += _.toNumber(_.get(item, 'cost'))\n    })\n    const orderTotal = (totalCost + numberWithoutSpaces(deliveryPrice)) * ((HUNDRED - _.toNumber(discountPercent)) / HUNDRED)\n    return (\n        <b>{numberFormat(orderTotal, getConfig('PRIMARY_CURRENCY'))}</b>\n    )\n})\n\nexport default OrderTotalSum\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Order/OrderTotalSum.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose} from 'recompose'\nimport {connect} from 'react-redux'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport getConfig from '../../../helpers/getConfig'\nimport numberFormat from '../../../helpers/numberFormat'\n\nconst enhance = compose(\n    connect((state) => {\n        const ONE = 1\n        const values = _.get(state, ['form', 'OrderReturnForm', 'values'])\n        const extraLoading = _.get(state, ['product', 'extra', 'loading'])\n        const count = _.get(state, ['form', 'OrderReturnForm', 'values', 'amount']) || ONE\n        return {\n            values,\n            count,\n            extraLoading\n        }\n    })\n)\n\nconst ProductReturnCostField = enhance((props) => {\n    const {values, extraLoading, count} = props\n    const ZERO = 0\n    const cost = _.toNumber(_.get(values, ['product', 'value', 'price']) || ZERO) * _.toNumber(count)\n    return (\n        <div style={{marginTop: '20px'}}>\n            { extraLoading && <div><CircularProgress size={20} thickness={2} /></div> }\n            {!extraLoading && <div>{numberFormat(cost, getConfig('PRIMARY_CURRENCY'))}</div>}\n        </div>\n    )\n})\n\nexport default ProductReturnCostField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Order/ProductReturnCostField.js","import _ from 'lodash'\nimport React from 'react'\nimport {connect} from 'react-redux'\nimport SearchField from '../Basic/SearchField'\nimport {compose} from 'recompose'\nimport PropTypes from 'prop-types'\n\nconst enhance = compose(\n    connect((state) => {\n        const products = _.get(state, ['order', 'item', 'data', 'products'])\n        return {\n            products\n        }\n    })\n)\n\nconst ReturnProductsSearchField = enhance((props) => {\n    const productItems = _.get(props, 'products')\n\n    return (\n        <SearchField\n            getValue={(value) => { return value }}\n            getText={(value) => { return _.get(value, ['product', 'name']) }}\n            getOptions={() => { return Promise.resolve(productItems) }}\n            getItem={(value) => {\n                return Promise.resolve(\n                    _.find(productItems, (o) => { return _.toInteger(_.get(o, ['product', 'id'])) === _.toInteger(_.get(value, ['product', 'id'])) }))\n            }}\n                getItemText={(value) => { return _.get(value, ['product', 'name']) }}\n            {...props}\n        />\n    )\n})\nReturnProductsSearchField.propTyeps = {\n    orderData: PropTypes.object.isRequired\n}\nexport default ReturnProductsSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Order/ReturnProductsSearchField.js","import _ from 'lodash'\nimport React from 'react'\nimport SearchField from './Basic/SearchField'\n\nconst Items = [\n    {id: 1, name: 'банковский счет'},\n    {id: 2, name: 'наличный'}\n]\n\nconst getOptions = (search) => {\n    return Promise.resolve(Items)\n}\n\nconst getItem = (id) => {\n    return Promise.resolve(\n        _.find(Items, (o) => { return o.id === _.toInteger(id) }))\n}\n\nconst CurrencySearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default CurrencySearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/PaymentTypeSearchField.js","import React from 'react'\nimport {compose, withState} from 'recompose'\nimport {RadioButton, RadioButtonGroup} from 'material-ui/RadioButton'\n\nconst enhance = compose(\n    withState('course', 'setCourse', false)\n)\n\nconst PendingPaymentRadioButton = enhance((props) => {\n    const {input} = props\n\n    return (\n        <RadioButtonGroup name=\"now\" onChange={input.onChange} defaultSelected={true}>\n            <RadioButton\n                value={true}\n                label=\"Текущий курс\"\n            />\n            <RadioButton\n                value={false}\n                label=\"Курс при оформлении\"\n            />\n        </RadioButtonGroup>\n    )\n})\n\nexport default PendingPaymentRadioButton\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/PendingPaymentRadioButton.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\nimport axios from '../../../helpers/axios'\nimport * as PATH from '../../../constants/api'\nimport toCamelCase from '../../../helpers/toCamelCase'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.CASHBOX_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            const cashbox = _.get(data, 'results')\n            return Promise.resolve(toCamelCase(cashbox))\n        })\n}\n\nconst getItem = (value) => {\n    return axios().get(sprintf(PATH.CASHBOX_ITEM, _.get(value, 'id')))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst CashboxCustomField = (props) => {\n    return (\n        <SearchField\n            getValue={(value) => {\n                return value\n            }}\n            getText={(value) => { return _.get(value, ['name']) }}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={(value) => { return _.get(value, ['name']) }}\n            {...props}\n        />\n    )\n}\n\nexport default CashboxCustomField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/PendingPayments/CashboxCustomField.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport {compose, withReducer, withHandlers} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport Groceries from '../Images/groceries.svg'\r\nimport {connect} from 'react-redux'\r\nimport {Field} from 'redux-form'\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableHeader,\r\n    TableHeaderColumn,\r\n    TableRow,\r\n    TableRowColumn\r\n} from 'material-ui/Table'\r\nimport DeleteIcon from '../DeleteIcon/index'\r\nimport ProductTypeSearchField from './Product/ProductTypeSearchField'\r\nimport ProductCustomSearchField from './Supply/ProductCustomSearchField'\r\nimport TextField from './Basic/TextField'\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            height: '100%',\r\n            position: 'relative'\r\n        },\r\n        error: {\r\n            textAlign: 'center',\r\n            fontSize: '14px',\r\n            color: 'red'\r\n        },\r\n        imagePlaceholder: {\r\n            width: '100%',\r\n            height: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            '& img': {\r\n                width: '70px',\r\n                marginBottom: '20px',\r\n                marginTop: '25px'\r\n            }\r\n        },\r\n        table: {\r\n            marginTop: '20px'\r\n        },\r\n        tableTitle: {\r\n            fontWeight: '600',\r\n            color: '#333 !important',\r\n            textAlign: 'left'\r\n        },\r\n        tableRow: {\r\n            height: '40px !important',\r\n            border: 'none !important',\r\n            '& td:first-child': {\r\n                width: '250px'\r\n            },\r\n            '& tr': {\r\n                border: 'none !important'\r\n            },\r\n            '& td': {\r\n                height: '40px !important',\r\n                padding: '0 5px !important'\r\n            },\r\n            '& th:first-child': {\r\n                width: '250px',\r\n                textAlign: 'left !important',\r\n                fontWeight: '600 !important'\r\n            },\r\n            '& th': {\r\n                textAlign: 'left !important',\r\n                border: 'none !important',\r\n                height: '40px !important',\r\n                padding: '0 5px !important',\r\n                fontWeight: '600 !important'\r\n            }\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        },\r\n        title: {\r\n            fontWeight: '600',\r\n            border: 'none !important'\r\n        },\r\n        headers: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            height: '40px',\r\n            justifyContent: 'space-between',\r\n            '& span': {\r\n                textTransform: 'lowercase !important'\r\n            }\r\n        },\r\n        background: {\r\n            display: 'flex',\r\n            padding: '10px',\r\n            marginTop: '5px',\r\n            backgroundColor: '#f1f5f8',\r\n            position: 'relative',\r\n            zIndex: '2',\r\n            '& > div': {\r\n                marginTop: '-2px !important',\r\n                marginRight: '20px',\r\n                width: '30%'\r\n            },\r\n            '& > button > div > span': {\r\n                padding: '0 !important'\r\n            },\r\n            '& > div:last-child': {\r\n                width: '100% !important'\r\n            },\r\n            '& button': {\r\n                marginTop: '10px !important'\r\n            }\r\n        }\r\n    }),\r\n    connect((state) => {\r\n        const currency = _.get(state, ['form', 'PricesCreateForm', 'values', 'currency', 'text'])\r\n        return {\r\n            currency\r\n        }\r\n    }),\r\n    withReducer('state', 'dispatch', (state, action) => {\r\n        return {...state, ...action}\r\n    }, {open: false}),\r\n\r\n    withHandlers({\r\n        handleAdd: props => () => {\r\n            const product = _.get(props, ['product', 'input', 'value'])\r\n            const amount = _.get(props, ['amount', 'input', 'value'])\r\n            const currency = _.get(props, ['currency'])\r\n            const onChange = _.get(props, ['products', 'input', 'onChange'])\r\n            const products = _.get(props, ['products', 'input', 'value'])\r\n\r\n            if (!_.isEmpty(product) && amount) {\r\n                let has = false\r\n                _.map(products, (item) => {\r\n                    if (_.get(item, 'product') === product) {\r\n                        item.amount = _.toInteger(item.amount) + _.toInteger(amount)\r\n                        has = true\r\n                    }\r\n                })\r\n                if (!has) {\r\n                    onChange(_.union(products, [{product, amount, currency}]))\r\n                    has = false\r\n                }\r\n            }\r\n        },\r\n\r\n        handleRemove: props => (listIndex) => {\r\n            const onChange = _.get(props, ['products', 'input', 'onChange'])\r\n            const products = _(props)\r\n                .get(['products', 'input', 'value'])\r\n                .filter((item, index) => index !== listIndex)\r\n\r\n            onChange(products)\r\n        }\r\n    })\r\n)\r\n\r\nconst PricesListProductField = ({classes, state, dispatch, handleAdd, handleRemove, ...defaultProps}) => {\r\n    const products = _.get(defaultProps, ['products', 'input', 'value']) || []\r\n    const error = _.get(defaultProps, ['products', 'meta', 'error'])\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div>\r\n                <div className={classes.headers} style={{marginTop: '-10px'}}>\r\n                    <div className={classes.title}>Список товаров</div>\r\n                    <FlatButton\r\n                        label=\"+ добавить товар\"\r\n                        style={{color: '#12aaeb'}}\r\n                        className={classes.span}\r\n                        onTouchTap={() => dispatch({open: !state.open})}\r\n                    />\r\n                </div>\r\n                {state.open && <div className={classes.background}>\r\n                    <Field\r\n                        label=\"Отфильтровать по типу товара\"\r\n                        name=\"type\"\r\n                        component={ProductTypeSearchField}\r\n                        className={classes.inputFieldCustom}\r\n                        xs={3}/>\r\n                    <Field\r\n                        label=\"Наименование товара\"\r\n                        name=\"product\"\r\n                        component={ProductCustomSearchField}\r\n                        className={classes.inputFieldCustom}\r\n                        xs={3}\r\n                    />\r\n                    <Field\r\n                        label=\"Кол-во\"\r\n                        name=\"amount\"\r\n                        component={TextField}\r\n                        className={classes.inputFieldCustom}\r\n                        xs={3}\r\n                    />\r\n                    <FlatButton label=\"Применить\" onTouchTap={handleAdd} style={{color: '#12aaeb'}}/>\r\n                </div>}\r\n            </div>\r\n            {error && <div className={classes.error}>{error}</div>}\r\n            {!_.isEmpty(products) ? <div className={classes.table}>\r\n                <Table\r\n                    fixedHeader={true}\r\n                    fixedFooter={false}\r\n                    multiSelectable={false}>\r\n                    <TableHeader\r\n                        displaySelectAll={false}\r\n                        adjustForCheckbox={false}\r\n                        enableSelectAll={false}\r\n                        className={classes.title}>\r\n                        <TableRow className={classes.tableRow}>\r\n                            <TableHeaderColumn\r\n                                className={classes.tableTitle}>Наименование</TableHeaderColumn>\r\n                            <TableHeaderColumn className={classes.tableTitle}>Кол-во</TableHeaderColumn>\r\n                            <TableHeaderColumn></TableHeaderColumn>\r\n                        </TableRow>\r\n                    </TableHeader>\r\n                    <TableBody\r\n                        displayRowCheckbox={false}\r\n                        deselectOnClickaway={false}\r\n                        showRowHover={false}\r\n                        stripedRows={false}>\r\n                        {_.map(products, (item, index) => (\r\n                            <TableRow key={index} className={classes.tableRow}>\r\n                                <TableRowColumn>{_.get(item, ['product', 'value', 'name'])}</TableRowColumn>\r\n                                <TableRowColumn>\r\n                                    {_.get(item, 'amount')} {_.get(item, ['product', 'value', 'measurement', 'name'])}</TableRowColumn>\r\n                                <TableRowColumn style={{textAlign: 'right'}}>\r\n                                    <IconButton onTouchTap={() => handleRemove(index)}>\r\n                                        <DeleteIcon color=\"#666666\"/>\r\n                                    </IconButton>\r\n                                </TableRowColumn>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </div>\r\n                : <div className={classes.imagePlaceholder}>\r\n                    <div style={{textAlign: 'center', color: '#adadad'}}>\r\n                        <img src={Groceries} alt=\"\"/>\r\n                        <div>Вы еще не выбрали ни одного товара. <br/> <a onClick={() => dispatch({open: !state.open})}>Добавить</a>\r\n                            товар?\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default enhance(PricesListProductField)\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/PricesListProductField.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose} from 'recompose'\nimport {connect} from 'react-redux'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport getConfig from '../../../helpers/getConfig'\nimport numberFormat from '../../../helpers/numberFormat'\n\nconst enhance = compose(\n    connect((state) => {\n        const ONE = 1\n        const extra = _.get(state, ['product', 'extra', 'data'])\n        const extraLoading = _.get(state, ['product', 'extra', 'loading'])\n        const count = _.get(state, ['form', 'OrderCreateForm', 'values', 'amount']) || ONE\n        return {\n            extra,\n            count,\n            extraLoading\n        }\n    })\n)\n\nconst ProductCostField = enhance((props) => {\n    const {extra, extraLoading, count} = props\n    const ZERO = 0\n    const cost = _.toNumber(_.get(extra, ['product', 'price']) || ZERO) * _.toNumber(count)\n    return (\n        <div style={{marginTop: '20px'}}>\n            { extraLoading && <div><CircularProgress size={20} thickness={2} /></div> }\n            {!extraLoading && <div>{numberFormat(cost, getConfig('PRIMARY_CURRENCY'))}</div>}\n        </div>\n    )\n})\n\nexport default ProductCostField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Product/ProductCostField.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose} from 'recompose'\nimport {connect} from 'react-redux'\n\nconst enhance = compose(\n    connect((state) => {\n        const measurement = _.get(state, ['product', 'measurement', 'data'])\n        const measurementLoading = _.get(state, ['product', 'measurement', 'loading'])\n        return {\n            measurement,\n            measurementLoading\n        }\n    })\n)\n\nconst ProductMeasurementField = enhance((props) => {\n    const {measurement, measurementLoading} = props\n    return (\n        <div>\n            { measurementLoading && <div>...</div> }\n            {!measurementLoading && <div>{measurement}</div>}\n        </div>\n    )\n})\n\nexport default ProductMeasurementField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Product/ProductMeasurementField.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport {RadioButton, RadioButtonGroup} from 'material-ui/RadioButton'\r\nimport {connect} from 'react-redux'\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        radioButton: {\r\n            marginTop: '10px',\r\n            '&>div': {\r\n                marginBottom: '10px'\r\n            },\r\n            '& svg': {\r\n                width: '20px !important',\r\n                height: '20px !important'\r\n            },\r\n            '& label': {\r\n                top: '-2px',\r\n                marginLeft: '-7px'\r\n            }\r\n        },\r\n        error: {\r\n            textAlign: 'center',\r\n            fontSize: '14px',\r\n            color: 'red'\r\n        }\r\n    })\r\n    ,\r\n    connect((state) => {\r\n        const contacts = _.get(state, ['provider', 'contacts', 'data'])\r\n        const contactsLoading = _.get(state, ['provider', 'contacts', 'loading'])\r\n        const detail = _.get(state, ['supply', 'item', 'data'])\r\n        return {\r\n            contacts,\r\n            contactsLoading,\r\n            detail\r\n        }\r\n    })\r\n)\r\n\r\nconst ProviderContactsField = enhance((props) => {\r\n    const {classes, contacts, contactsLoading, input, meta: {error}, detail} = props\r\n    return (\r\n        <div>\r\n            { contactsLoading && <div>Загрузка ...</div> }\r\n            {error && <div className={classes.error}>{error}</div>}\r\n            {!contactsLoading && <RadioButtonGroup name=\"contact\" className={classes.radioButton}\r\n                                                   onChange={input.onChange} defaultSelected={input.value}>\r\n                {_.map(contacts, (item) => {\r\n                    const id = _.get(item, 'id')\r\n                    const forLabel = _.get(item, 'name') + ' ' + _.get(item, 'phone') + ' ' + _.get(item, 'email')\r\n                    return (\r\n                        <RadioButton key={id}\r\n                                     value={id}\r\n                                     label={forLabel}\r\n                                     checked={!_.get(detail, ['contact', 'id']) === _.get(item, 'id')}\r\n                        />\r\n                    )\r\n                })}\r\n            </RadioButtonGroup>}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default ProviderContactsField\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Provider/ProviderContactsField.js","import React from 'react'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport ContentRemove from 'material-ui/svg-icons/content/remove'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport {Field} from 'redux-form'\nimport TextField from '../Basic/TextField'\n\n/**\n * {['contacts', 'contactName', 'email', 'phoneNumber']}\n */\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            marginTop: '20px',\n            display: 'flex',\n            flexDirection: 'column'\n        },\n        title: {\n            paddingTop: '15px',\n            fontWeight: 'bold',\n            color: 'black !important'\n        },\n        headers: {\n            height: '0',\n            position: 'relative',\n            top: '-30px',\n            '& button': {\n                position: 'absolute !important',\n                right: '0 !important'\n            }\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        flex: {\n            display: 'flex',\n            '& div:first-child': {\n                marginRight: '10px'\n            }\n        },\n        contactBlock: {\n            marginBottom: '15px',\n            paddingBottom: '15px',\n            '&:last-child': {\n                margin: '0'\n            }\n        }\n    })\n)\n\nconst ProviderContactsListField = ({classes, fields}) => {\n    const ONE = 1\n    const handleTouchTap = (index) => {\n        const LAST_INDEX = index + ONE\n\n        if (fields.length === LAST_INDEX) {\n            return fields.push({})\n        }\n\n        return fields.remove(index)\n    }\n\n    return (\n        <div>\n            {fields.map((contact, index) => {\n                return (\n                    <div className={classes.contactBlock} key={index}>\n                        <div className={classes.headers}>\n                            <FloatingActionButton\n                                backgroundColor=\"#12aaeb\"\n                                onTouchTap={() => handleTouchTap(index)}\n                                mini={true}>\n                                {fields.length !== index + ONE ? <ContentRemove/> : <ContentAdd />}\n                            </FloatingActionButton>\n                        </div>\n                        <div >\n                            <Field\n                                label=\"Контактное лицо\"\n                                name={`${contact}.name`}\n                                component={TextField}\n                                className={classes.inputFieldCustom}\n                                fullWidth={true}\n                            />\n\n                            <div className={classes.flex}>\n                                <Field\n                                    label=\"Email\"\n                                    name={`${contact}.email`}\n                                    component={TextField}\n                                    className={classes.inputFieldCustom}\n                                    fullWidth={true}\n                                />\n\n                                <Field\n                                    label=\"Телефон номер\"\n                                    name={`${contact}.phone`}\n                                    component={TextField}\n                                    className={classes.inputFieldCustom}\n                                    fullWidth={true}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default enhance(ProviderContactsListField)\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Provider/ProviderContactsListField.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport injectSheet from 'react-jss'\r\nimport DatePicker from 'material-ui/DatePicker'\r\nimport DateRange from 'material-ui/svg-icons/action/date-range'\r\n\r\nconst errorStyle = {\r\n    textAlign: 'left'\r\n}\r\n\r\nconst DateField = ({classes, input, label, meta: {error}, ...defaultProps}) => {\r\n    _.unset(defaultProps, 'sheet')\r\n    if (!_.isObject(input.value)) {\r\n        _.unset(input, 'value')\r\n    }\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div style={{position: 'relative'}}>\r\n                <DatePicker\r\n                    hintText=\"Выберите дату\"\r\n                    errorText={error}\r\n                    errorStyle={errorStyle}\r\n                    floatingLabelText={label}\r\n                    {...input}\r\n                    onChange={(event, value) => input.onChange(value)}\r\n                    {...defaultProps}\r\n                    okLabel=\"Ок\"\r\n                    cancelLabel=\"Отмена\"\r\n                />\r\n                <div className={classes.icon}>\r\n                    <DateRange />\r\n                </div>\r\n            </div>\r\n            {error && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default injectSheet({\r\n    wrapper: {\r\n        '& div': {\r\n            fontSize: '13px !important'\r\n        }\r\n    },\r\n    icon: {\r\n        position: 'absolute',\r\n        right: '0',\r\n        top: '14px',\r\n        '& svg': {\r\n            color: '#ccc !important',\r\n            height: '20px !important',\r\n            width: '20px !important'\r\n        }\r\n    }\r\n})(DateField)\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/RemainderDateField.js","import sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from './Basic/SearchField'\nimport axios from '../../helpers/axios'\nimport * as PATH from '../../constants/api'\nimport toCamelCase from '../../helpers/toCamelCase'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.SHIFT_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst getItem = (id) => {\n    return axios().get(sprintf(PATH.SHIFT_ITEM, id))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst ShiftSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default ShiftSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/ShiftSearchField.js","import _ from 'lodash'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\n\nconst Items = [\n    {id: 1, name: 'Активен'},\n    {id: 2, name: 'Неактивен'}\n]\n\nconst getOptions = (search) => {\n    return Promise.resolve(Items)\n}\n\nconst getItem = (id) => {\n    return Promise.resolve(\n        _.find(Items, (o) => { return o.id === _.toInteger(id) }))\n}\n\nconst ShopStatusSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default ShopStatusSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Shop/ShopStatusSearchField.js","import _ from 'lodash'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\n\nconst Items = [\n    {id: 1, name: 'Ежедневно'},\n    {id: 2, name: 'Раз в неделю'},\n    {id: 3, name: '2 раза в неделю'},\n    {id: 4, name: 'Через день'}\n]\n\nconst getOptions = (search) => {\n    return Promise.resolve(Items)\n}\n\nconst getItem = (id) => {\n    return Promise.resolve(\n        _.find(Items, (o) => { return o.id === _.toInteger(id) }))\n}\n\nconst VisitFrequencySearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default VisitFrequencySearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Shop/VisitFrequencySearchField.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport SearchField from '../Basic/SearchField'\r\nimport {compose} from 'recompose'\r\n\r\nconst enhance = compose(\r\n    connect((state) => {\r\n        const products = _.get(state, ['stockReceive', 'item', 'data', 'products'])\r\n        return {\r\n            products\r\n        }\r\n    })\r\n)\r\n\r\nconst StockReceiveProductSearchField = enhance((props) => {\r\n    const productItems = _.get(props, 'products')\r\n\r\n    return (\r\n        <SearchField\r\n            getValue={(value) => { return value }}\r\n            getText={(value) => { return _.get(value, ['product', 'name']) }}\r\n            getOptions={() => { return Promise.resolve(productItems) }}\r\n            getItem={(value) => {\r\n                return Promise.resolve(\r\n                    _.find(productItems, (o) => { return _.toInteger(_.get(o, ['product', 'id'])) === _.toInteger(_.get(value, ['product', 'id'])) }))\r\n            }}\r\n                getItemText={(value) => { return _.get(value, ['product', 'name']) }}\r\n            {...props}\r\n        />\r\n    )\r\n})\r\n\r\nexport default StockReceiveProductSearchField\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/StockReceive/StockReceiveProductSearchField.js","import _ from 'lodash'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\n\nconst Items = [\n    {id: 0, name: 'Основной'},\n    {id: 1, name: 'Производственный'}\n]\n\nconst getOptions = (search) => {\n    return Promise.resolve(Items)\n}\n\nconst getItem = (id) => {\n    return Promise.resolve(\n        _.find(Items, (o) => { return o.id === _.toInteger(id) }))\n}\n\nconst CurrencySearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default CurrencySearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Stock/StockTypeSearchField.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport {compose, withReducer, withHandlers} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport Groceries from '../../Images/groceries.svg'\r\nimport {connect} from 'react-redux'\r\nimport numberFormat from '../../../helpers/numberFormat'\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableHeader,\r\n    TableHeaderColumn,\r\n    TableRow,\r\n    TableRowColumn\r\n} from 'material-ui/Table'\r\nimport DeleteIcon from '../../DeleteIcon/index'\r\nimport normalizeNumber from '../normalizers/normalizeNumber'\r\nimport ProductCustomSearchField from '../Supply/ProductCustomSearchField'\r\nimport TextField from '../Basic/TextField'\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            height: '100%',\r\n            position: 'relative'\r\n        },\r\n        error: {\r\n            textAlign: 'center',\r\n            fontSize: '14px',\r\n            color: 'red'\r\n        },\r\n        imagePlaceholder: {\r\n            width: '100%',\r\n            height: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            '& img': {\r\n                width: '70px',\r\n                marginBottom: '20px',\r\n                marginTop: '25px'\r\n            }\r\n        },\r\n        table: {\r\n            marginTop: '20px'\r\n        },\r\n        tableTitle: {\r\n            fontWeight: '600',\r\n            color: '#333 !important',\r\n            textAlign: 'left'\r\n        },\r\n        tableRow: {\r\n            height: '40px !important',\r\n            border: 'none !important',\r\n            '& td:first-child': {\r\n                width: '250px'\r\n            },\r\n            '& tr': {\r\n                border: 'none !important'\r\n            },\r\n            '& td': {\r\n                height: '40px !important',\r\n                padding: '0 5px !important'\r\n            },\r\n            '& th:first-child': {\r\n                width: '250px',\r\n                textAlign: 'left !important',\r\n                fontWeight: '600 !important'\r\n            },\r\n            '& th': {\r\n                textAlign: 'left !important',\r\n                border: 'none !important',\r\n                height: '40px !important',\r\n                padding: '0 5px !important',\r\n                fontWeight: '600 !important'\r\n            }\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        },\r\n        title: {\r\n            fontWeight: '600',\r\n            border: 'none !important'\r\n        },\r\n        headers: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            height: '40px',\r\n            justifyContent: 'space-between',\r\n            '& span': {\r\n                textTransform: 'lowercase !important'\r\n            }\r\n        },\r\n        background: {\r\n            display: 'flex',\r\n            padding: '10px',\r\n            marginTop: '5px',\r\n            backgroundColor: '#f1f5f8',\r\n            position: 'relative',\r\n            zIndex: '2',\r\n            '& > div': {\r\n                marginTop: '-2px !important',\r\n                marginRight: '20px'\r\n            },\r\n            '& > button > div > span': {\r\n                padding: '0 !important'\r\n            },\r\n            '& > div:last-child': {\r\n                width: '100% !important'\r\n            },\r\n            '& button': {\r\n                marginTop: '10px !important'\r\n            }\r\n        }\r\n    }),\r\n    connect((state) => {\r\n        const currency = _.get(state, ['form', 'SupplyCreateForm', 'values', 'currency', 'text'])\r\n        return {\r\n            currency\r\n        }\r\n    }),\r\n    withReducer('state', 'dispatch', (state, action) => {\r\n        return {...state, ...action}\r\n    }, {open: false}),\r\n\r\n    withHandlers({\r\n        handleAdd: props => () => {\r\n            const product = _.get(props, ['product', 'input', 'value'])\r\n            const amount = _.get(props, ['amount', 'input', 'value'])\r\n            const cost = _.get(props, ['cost', 'input', 'value'])\r\n            const currency = _.get(props, ['currency'])\r\n            const onChange = _.get(props, ['products', 'input', 'onChange'])\r\n            const products = _.get(props, ['products', 'input', 'value'])\r\n\r\n            if (!_.isEmpty(product) && amount && cost) {\r\n                let has = false\r\n                _.map(products, (item) => {\r\n                    if (_.get(item, 'product') === product) {\r\n                        item.amount = _.toInteger(item.amount) + _.toInteger(amount)\r\n                        item.cost = _.toInteger(item.cost) + _.toInteger(cost)\r\n                        has = true\r\n                    }\r\n                })\r\n                if (!has) {\r\n                    onChange(_.union(products, [{product, amount, cost, currency}]))\r\n                    has = false\r\n                }\r\n            }\r\n        },\r\n\r\n        handleRemove: props => (listIndex) => {\r\n            const onChange = _.get(props, ['products', 'input', 'onChange'])\r\n            const products = _(props)\r\n                .get(['products', 'input', 'value'])\r\n                .filter((item, index) => index !== listIndex)\r\n\r\n            onChange(products)\r\n        }\r\n    })\r\n)\r\n\r\nconst SupplyListProductField = ({classes, state, dispatch, handleAdd, handleRemove, currency, ...defaultProps}) => {\r\n    const products = _.get(defaultProps, ['products', 'input', 'value']) || []\r\n    const error = _.get(defaultProps, ['products', 'meta', 'error'])\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div>\r\n                <div className={classes.headers} style={{marginTop: '-10px'}}>\r\n                    <div className={classes.title}>Список товаров</div>\r\n                    <FlatButton\r\n                        label=\"+ добавить товар\"\r\n                        style={{color: '#12aaeb'}}\r\n                        className={classes.span}\r\n                        onTouchTap={() => dispatch({open: !state.open})}\r\n                    />\r\n                </div>\r\n                {state.open && <div className={classes.background}>\r\n                    <ProductCustomSearchField\r\n                        label=\"Наименование товара\"\r\n                        className={classes.inputFieldCustom}\r\n                        {..._.get(defaultProps, 'product')}\r\n                    />\r\n                    <TextField\r\n                        label=\"Кол-во\"\r\n                        className={classes.inputFieldCustom}\r\n                        {..._.get(defaultProps, 'amount')}\r\n                    />\r\n                    <TextField\r\n                        label=\"Сумма\"\r\n                        className={classes.inputFieldCustom}\r\n                        normalize={normalizeNumber}\r\n                        {..._.get(defaultProps, 'cost')}\r\n                    />\r\n                    <FlatButton label=\"Применить\" onTouchTap={handleAdd} style={{color: '#12aaeb'}}/>\r\n                </div>}\r\n            </div>\r\n            {error && <div className={classes.error}>{error}</div>}\r\n            {!_.isEmpty(products) ? <div className={classes.table}>\r\n                <Table\r\n                    fixedHeader={true}\r\n                    fixedFooter={false}\r\n                    multiSelectable={false}>\r\n                    <TableHeader\r\n                        displaySelectAll={false}\r\n                        adjustForCheckbox={false}\r\n                        enableSelectAll={false}\r\n                        className={classes.title}>\r\n                        <TableRow className={classes.tableRow}>\r\n                            <TableHeaderColumn\r\n                                className={classes.tableTitle}>Наименование</TableHeaderColumn>\r\n                            <TableHeaderColumn className={classes.tableTitle}>Кол-во</TableHeaderColumn>\r\n                            <TableHeaderColumn className={classes.tableTitle}>Сумма</TableHeaderColumn>\r\n                            <TableHeaderColumn></TableHeaderColumn>\r\n                        </TableRow>\r\n                    </TableHeader>\r\n                    <TableBody\r\n                        displayRowCheckbox={false}\r\n                        deselectOnClickaway={false}\r\n                        showRowHover={false}\r\n                        stripedRows={false}>\r\n                        {_.map(products, (item, index) => (\r\n                            <TableRow key={index} className={classes.tableRow}>\r\n                                <TableRowColumn>{_.get(item, ['product', 'value', 'name'])}</TableRowColumn>\r\n                                <TableRowColumn>\r\n                                    {_.get(item, 'amount')} {_.get(item, ['product', 'value', 'measurement', 'name'])}</TableRowColumn>\r\n                                <TableRowColumn>{numberFormat(_.get(item, 'cost'), currency)}</TableRowColumn>\r\n                                <TableRowColumn style={{textAlign: 'right'}}>\r\n                                    <IconButton onTouchTap={() => handleRemove(index)}>\r\n                                        <DeleteIcon color=\"#666666\"/>\r\n                                    </IconButton>\r\n                                </TableRowColumn>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </div>\r\n                : <div className={classes.imagePlaceholder}>\r\n                    <div style={{textAlign: 'center', color: '#adadad'}}>\r\n                        <img src={Groceries} alt=\"\"/>\r\n                        <div>Вы еще не выбрали ни одного товара. <br/> <a onClick={() => dispatch({open: !state.open})}>Добавить</a>\r\n                            товар?\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default enhance(SupplyListProductField)\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Supply/SupplyListProductField.js","import _ from 'lodash'\nimport React from 'react'\nimport SearchField from './Basic/SearchField'\n\nconst Items = [\n    {id: 1, name: 'расход'},\n    {id: 2, name: 'доход'}\n]\n\nconst getOptions = (search) => {\n    return Promise.resolve(Items)\n}\n\nconst getItem = (id) => {\n    return Promise.resolve(\n        _.find(Items, (o) => { return o.id === _.toInteger(id) }))\n}\n\nconst TransactionTypeSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default TransactionTypeSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/TransactionTypeSearchField.js","import sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\nimport axios from '../../../helpers/axios'\nimport * as PATH from '../../../constants/api'\nimport toCamelCase from '../../../helpers/toCamelCase'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.USERS_GROUP}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst getItem = (id) => {\n    return axios().get(sprintf(PATH.USERS_GROUP_ITEM, id))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst UsersGroupSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default UsersGroupSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Users/UsersGroupSearchField.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport {compose, withState} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport PropTypes from 'prop-types'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport Pagination from '../GridList/GridListNavPagination'\r\n\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        loader: {\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            width: '100%',\r\n            background: '#fff'\r\n        },\r\n        wrapper: {\r\n            position: 'relative',\r\n            padding: '0 30px',\r\n            marginBottom: '5px',\r\n            '& .row': {\r\n                alignItems: 'center',\r\n                '& div': {\r\n                    lineHeight: '55px'\r\n                }\r\n            }\r\n        },\r\n        title: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            width: '100%',\r\n            height: '55px',\r\n            padding: '15px 0',\r\n            fontWeight: '600',\r\n            borderBottom: '1px #efefef solid'\r\n\r\n        },\r\n        content: {\r\n            width: '100%',\r\n            overflow: 'hidden',\r\n            '& > .row': {\r\n                overflowY: 'auto',\r\n                overflowX: 'hidden',\r\n                margin: '0 -0.5rem',\r\n                padding: '0'\r\n            },\r\n            '& > .row:first-child': {\r\n                fontWeight: '600',\r\n                lineHeight: '20px'\r\n            },\r\n            '& .dottedList:last-child:after': {\r\n                content: '\"\"',\r\n                backgroundImage: 'none'\r\n            }\r\n        },\r\n        dropDown: {\r\n\r\n            position: 'absolute !important',\r\n            right: '0',\r\n            top: '5px',\r\n            '& > div': {\r\n                borderRadius: '200px',\r\n                border: 'solid #61a8e8 4px!important',\r\n                height: '36px',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center'\r\n            }\r\n        }\r\n\r\n    }),\r\n    withState('openDetails', 'setOpenDetails', false)\r\n)\r\n\r\nconst RemainderDetails = enhance((props) => {\r\n    const {classes, filter, detailData} = props\r\n    const isLoading = _.get(detailData, 'detailLoading')\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className={classes.loader}>\r\n                <CircularProgress size={60} thickness={5}/>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n            <div>\r\n                <div className={classes.title}>\r\n                    <div className={classes.titleLabel}>Парти товаров</div>\r\n                    <Pagination filter={filter}/>\r\n                </div>\r\n                <div className={classes.content}>\r\n                    <Row className='dottedList'>\r\n                        <Col xs={3}>Код</Col>\r\n                        <Col style={{textAlign: 'center'}} xs={3}>Дата приемки</Col>\r\n                        <Col xs={3}>Срок годности</Col>\r\n                        <Col xs={2}>Кол-во</Col>\r\n                        <Col xs={1}>Статус</Col>\r\n                    </Row>\r\n                    <Row className='dottedList'>\r\n                        <Col xs={3}>Z857OA458795215ZAR</Col>\r\n                        <Col style={{textAlign: 'center'}} xs={3}>25 Сен, 2015</Col>\r\n                        <Col xs={3}>25 Сен, 2015</Col>\r\n                        <Col xs={2}>100 шт</Col>\r\n                        <Col xs={1}>Ok</Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n    )\r\n})\r\n\r\nRemainderDetails.propTypes = {\r\n    filter: PropTypes.object.isRequired\r\n}\r\n\r\nexport default RemainderDetails\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Remainder/RemainderDetails.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport sprintf from 'sprintf'\r\nimport PropTypes from 'prop-types'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport Container from '../Container'\r\nimport {Link} from 'react-router'\r\nimport SubMenu from '../SubMenu'\r\nimport injectSheet from 'react-jss'\r\nimport {compose} from 'recompose'\r\nimport ArrowDown from 'material-ui/svg-icons/navigation/arrow-drop-down-circle'\r\nimport Paper from 'material-ui/Paper'\r\nimport RemainderDetails from './RemainderDetails'\r\nimport RemainderFilterForm from './RemainderFilterForm'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport ArrowUp from 'material-ui/svg-icons/navigation/arrow-drop-up'\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            position: 'relative',\r\n            padding: '0 30px',\r\n            marginBottom: '5px',\r\n            '& .row': {\r\n                alignItems: 'center',\r\n                '& div': {\r\n                    lineHeight: '55px'\r\n                }\r\n            }\r\n        },\r\n        wrapperBold: {\r\n            extend: 'wrapper',\r\n            '& .row:first-child': {\r\n                fontWeight: '600'\r\n            }\r\n        },\r\n        headers: {\r\n            padding: '0px 30px 10px 30px',\r\n            '& .row': {\r\n                alignItems: 'center'\r\n            }\r\n        },\r\n        productList: {\r\n            padding: '20px 30px',\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n        },\r\n        products: {\r\n            display: 'flex',\r\n            '& > div': {\r\n                marginRight: '60px',\r\n                '&:last-child': {\r\n                    margin: '0'\r\n                }\r\n            }\r\n        },\r\n        itemData: {\r\n            textAlign: 'left',\r\n            fontWeight: '700',\r\n            fontSize: '17px'\r\n        },\r\n        filterWrapper: {\r\n            width: '300px',\r\n            zIndex: '99',\r\n            position: 'absolute',\r\n            right: '0',\r\n            top: '0'\r\n        },\r\n        filterBtnWrapper: {\r\n            position: 'absolute',\r\n            top: '15px',\r\n            right: '0',\r\n            marginBottom: '0px',\r\n            cursor: 'pointer'\r\n        },\r\n        filterBtn: {\r\n            backgroundColor: '#61a8e8 !important',\r\n            color: '#fff',\r\n            fontWeight: '600',\r\n            padding: '10px 10px',\r\n            borderRadius: '3px',\r\n            lineHeight: '12px'\r\n        },\r\n        filterTitle: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            padding: '20px 30px',\r\n            borderBottom: '1px #efefef solid',\r\n            lineHeight: '0'\r\n        },\r\n        search: {\r\n            position: 'relative',\r\n            display: 'flex',\r\n            maxWidth: '300px'\r\n        },\r\n        searchField: {\r\n            fontSize: '13px !important'\r\n        },\r\n        searchButton: {\r\n            position: 'absolute !important',\r\n            right: '-10px'\r\n        },\r\n        dropDown: {\r\n            position: 'absolute !important',\r\n            right: '0',\r\n            top: '5px',\r\n            '& > div': {\r\n                height: '45px',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center'\r\n            }\r\n        },\r\n        loader: {\r\n            display: 'flex',\r\n            justifyContent: 'center'\r\n        }\r\n    })\r\n)\r\n\r\nconst iconStyle = {\r\n    icon: {\r\n        color: '#61a8e8',\r\n        width: 25,\r\n        height: 25\r\n    },\r\n    button: {\r\n        width: 45,\r\n        height: 45,\r\n        padding: 0\r\n    }\r\n}\r\n\r\nconst RemainderGridList = enhance((props) => {\r\n    const {\r\n        detailData,\r\n        classes,\r\n        filter,\r\n        filterDialog,\r\n        listData\r\n    } = props\r\n    const listLoading = _.get(listData, 'listLoading')\r\n    const detailId = _.get(detailData, 'id')\r\n    const isOpenFilter = filterDialog.openFilterDialog\r\n\r\n    const listHeader = (\r\n        <div className={classes.headers}>\r\n            <Row>\r\n                <Col xs={3}>Товар</Col>\r\n                <Col xs={3}>Тип товара</Col>\r\n                <Col xs={4}>Склад</Col>\r\n                <Col xs={2} style={{textAlign: 'left'}}>Всего товаров</Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n\r\n    const listLoader = (\r\n                <Paper className={classes.loader}>\r\n                    <CircularProgress size={80} thickness={5}/>\r\n                </Paper>\r\n        )\r\n\r\n    const list = (\r\n            <div>\r\n                {_.map(_.get(listData, 'data'), (item) => {\r\n                    const id = _.get(item, 'id')\r\n                    const name = _.get(item, 'name')\r\n                    if (id === detailId) {\r\n                        return (\r\n                            <Paper key={id} className={classes.wrapperBold}>\r\n                                <Row key={id} style={{position: 'relative'}}>\r\n                                    <Col xs={3}>Миф морозная свежесть</Col>\r\n                                    <Col xs={3}>{name}</Col>\r\n                                    <Col xs={4}>Наименование склада 1</Col>\r\n                                    <Col xs={1} className={classes.itemData}>200 кг</Col>\r\n                                    <Col xs={1} style={{textAlign: 'right'}}>\r\n                                        <IconButton\r\n                                            className={classes.dropDown}\r\n                                            iconStyle={iconStyle.icon}\r\n                                            style={iconStyle.button}\r\n                                            onTouchTap={_.get(detailData, 'handleCloseDetail')}>\r\n                                            <ArrowUp/>\r\n                                        </IconButton>\r\n                                    </Col>\r\n                                </Row>\r\n                                <RemainderDetails\r\n                                    filter={filter}\r\n                                    detailData={detailData}\r\n                                />\r\n                            </Paper>\r\n                        )\r\n                    }\r\n                    return (\r\n                        <Paper key={id} className={classes.wrapper}>\r\n                            <Row key={id} style={{position: 'relative'}}>\r\n\r\n                                    <Col xs={3}>Миф морозная свежесть</Col>\r\n\r\n                                <Col xs={3}>{name}</Col>\r\n                                <Col xs={4}>Наименование склада 1</Col>\r\n                                <Col xs={1} className={classes.itemData}>200 кг</Col>\r\n                                <Col xs={1} style={{textAlign: 'right'}}>\r\n                                    <Link to={{\r\n                                        pathname: sprintf(ROUTES.REMAINDER_ITEM_PATH, id),\r\n                                        query: filter.getParams()\r\n                                    }}>\r\n                                    <IconButton\r\n                                        className={classes.dropDown}\r\n                                        iconStyle={iconStyle.icon}\r\n                                        style={iconStyle.button}>\r\n                                        <ArrowDown/>\r\n                                    </IconButton>\r\n                                    </Link>\r\n                                </Col>\r\n                            </Row>\r\n                        </Paper>\r\n                    )\r\n                })}\r\n\r\n            </div>\r\n    )\r\n\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.REMAINDER_LIST_URL}/>\r\n                {isOpenFilter ? <RemainderFilterForm\r\n                    onClose={filterDialog.handleCloseFilterDialog}/>\r\n                : <div\r\n                       className={classes.filterBtnWrapper}>\r\n                        <div onClick={filterDialog.handleOpenFilterDialog} className={classes.filterBtn}>\r\n                            Открыть фильтр\r\n                        </div>\r\n                    </div>\r\n                }\r\n            {listHeader}\r\n            {listLoading ? listLoader : list }\r\n\r\n        </Container>\r\n    )\r\n})\r\n\r\nRemainderGridList.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object,\r\n    filterDialog: PropTypes.shape({\r\n        openFilterDialog: PropTypes.bool.isRequired,\r\n        handleCloseFilterDialog: PropTypes.func.isRequired,\r\n        handleOpenFilterDialog: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default RemainderGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Remainder/RemainderGridList.js","import RemainderGridList from './RemainderGridList'\r\nimport {REMAINDER_FILTER_KEY, REMAINDER_FILTER_OPEN} from './RemainderFilterForm'\r\n\r\nexport {\r\n    REMAINDER_FILTER_OPEN,\r\n    REMAINDER_FILTER_KEY,\r\n    RemainderGridList\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Remainder/index.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport GridList from '../GridList'\r\nimport Container from '../Container'\r\nimport ShiftCreateDialog from './ShiftCreateDialog'\r\nimport ConfirmDialog from '../ConfirmDialog'\r\nimport SubMenu from '../SubMenu'\r\nimport injectSheet from 'react-jss'\r\nimport {compose} from 'recompose'\r\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\r\nimport ContentAdd from 'material-ui/svg-icons/content/add'\r\nimport Tooltip from '../ToolTip'\r\nimport IconMenu from 'material-ui/IconMenu'\r\nimport MenuItem from 'material-ui/MenuItem'\r\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\r\nimport Edit from 'material-ui/svg-icons/image/edit'\r\n\r\nconst listHeader = [\r\n    {\r\n        sorting: true,\r\n        name: 'id',\r\n        xs: 1,\r\n        title: 'Id'\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'name',\r\n        xs: 4,\r\n        title: 'Наименование'\r\n    },\r\n    {\r\n        sorting: true,\r\n        xs: 3,\r\n        name: 'beginTime',\r\n        title: 'Время начала'\r\n    },\r\n    {\r\n        sorting: true,\r\n        xs: 3,\r\n        name: 'endTime',\r\n        title: 'Время окончания'\r\n    },\r\n    {\r\n        sorting: false,\r\n        xs: 1,\r\n        name: 'actions',\r\n        title: ''\r\n    }\r\n]\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        addButton: {\r\n            '& button': {\r\n                backgroundColor: '#275482 !important'\r\n            }\r\n        },\r\n        addButtonWrapper: {\r\n            position: 'absolute',\r\n            top: '10px',\r\n            right: '0',\r\n            marginBottom: '0px'\r\n        }\r\n    })\r\n)\r\n\r\nconst ShiftGridList = enhance((props) => {\r\n    const {\r\n        filter,\r\n        createDialog,\r\n        updateDialog,\r\n        confirmDialog,\r\n        listData,\r\n        detailData,\r\n        classes\r\n    } = props\r\n\r\n    const actions = (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n\r\n    const shiftDetail = (\r\n        <span>a</span>\r\n    )\r\n\r\n    const shiftList = _.map(_.get(listData, 'data'), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const name = _.get(item, 'name')\r\n        const beginTime = _.get(item, 'beginTime')\r\n        const endTime = _.get(item, 'endTime')\r\n        const iconButton = (\r\n            <IconButton style={{padding: '0 12px'}}>\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n        )\r\n        return (\r\n            <Row key={id} style={{alignItems: 'center'}}>\r\n                <Col xs={1}>{id}</Col>\r\n                <Col xs={4}>{name}</Col>\r\n                <Col xs={3}>{beginTime}</Col>\r\n                <Col xs={3}>{endTime}</Col>\r\n                <Col xs={1} style={{textAlign: 'right'}}>\r\n                    <IconMenu\r\n                        iconButtonElement={iconButton}\r\n                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\r\n                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\r\n                        <MenuItem\r\n                            primaryText=\"Изменить\"\r\n                            leftIcon={<Edit />}\r\n                            onTouchTap={() => { updateDialog.handleOpenUpdateDialog(id) }}\r\n                        />\r\n                        <MenuItem\r\n                            primaryText=\"Удалить \"\r\n                            leftIcon={<DeleteIcon />}\r\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(id) }}\r\n                        />\r\n                    </IconMenu>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    })\r\n\r\n    const list = {\r\n        header: listHeader,\r\n        list: shiftList,\r\n        loading: _.get(listData, 'listLoading')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.SHIFT_LIST_URL}/>\r\n            <div className={classes.addButtonWrapper}>\r\n                <Tooltip position=\"left\" text=\"Добавить смену\">\r\n                    <FloatingActionButton\r\n                        mini={true}\r\n                        className={classes.addButton}\r\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\r\n                        <ContentAdd />\r\n                    </FloatingActionButton>\r\n                </Tooltip>\r\n            </div>\r\n\r\n            <GridList\r\n                filter={filter}\r\n                list={list}\r\n                detail={shiftDetail}\r\n                actionsDialog={actions}\r\n            />\r\n            <ShiftCreateDialog\r\n                isUpdate={true}\r\n                initialValues={updateDialog.initialValues}\r\n                open={updateDialog.openUpdateDialog}\r\n                loading={updateDialog.updateLoading}\r\n                onClose={updateDialog.handleCloseUpdateDialog}\r\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\r\n            />\r\n\r\n            <ShiftCreateDialog\r\n                open={createDialog.openCreateDialog}\r\n                loading={createDialog.createLoading}\r\n                onClose={createDialog.handleCloseCreateDialog}\r\n                onSubmit={createDialog.handleSubmitCreateDialog}\r\n            />\r\n\r\n            {detailData.data && <ConfirmDialog\r\n                type=\"delete\"\r\n                message={_.get(detailData, ['data', 'name'])}\r\n                loading={confirmDialog.confirmLoading}\r\n                onClose={confirmDialog.handleCloseConfirmDialog}\r\n                onSubmit={confirmDialog.handleSendConfirmDialog}\r\n                open={confirmDialog.openConfirmDialog}\r\n            />}\r\n        </Container>\r\n    )\r\n})\r\n\r\nShiftGridList.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object,\r\n    createDialog: PropTypes.shape({\r\n        createLoading: PropTypes.bool.isRequired,\r\n        openCreateDialog: PropTypes.bool.isRequired,\r\n        handleOpenCreateDialog: PropTypes.func.isRequired,\r\n        handleCloseCreateDialog: PropTypes.func.isRequired,\r\n        handleSubmitCreateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    confirmDialog: PropTypes.shape({\r\n        confirmLoading: PropTypes.bool.isRequired,\r\n        openConfirmDialog: PropTypes.bool.isRequired,\r\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\r\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\r\n        handleSendConfirmDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    updateDialog: PropTypes.shape({\r\n        updateLoading: PropTypes.bool.isRequired,\r\n        openUpdateDialog: PropTypes.bool.isRequired,\r\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\r\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\r\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default ShiftGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Shift/ShiftGridList.js","import ShiftGridList from './ShiftGridList'\nimport {SHIFT_CREATE_DIALOG_OPEN} from './ShiftCreateDialog'\n\nconst SHIFT_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nconst SHIFT_DELETE_DIALOG_OPEN = 'openDeleteDialog'\n\nexport {\n    SHIFT_CREATE_DIALOG_OPEN,\n    SHIFT_UPDATE_DIALOG_OPEN,\n    SHIFT_DELETE_DIALOG_OPEN,\n    ShiftGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Shift/index.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport {ImageUploadField} from '../ReduxForm'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport MainStyles from '../Styles/MainStyles'\r\n\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        },\r\n        shopAddPhoto: {\r\n            width: '100%',\r\n            '& .imageDropZone': {\r\n                margin: '20px auto !important',\r\n                width: '330px !important',\r\n                height: '330px !important'\r\n            }\r\n        }\r\n    })),\r\n    reduxForm({\r\n        form: 'ShopAddPhotoForm',\r\n        enableReinitialize: true\r\n    })\r\n)\r\n\r\nconst AddPhotoDialog = enhance((props) => {\r\n    const {open, handleSubmit, onClose, classes} = props\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            className={classes.dialog}\r\n            contentStyle={{width: '440px'}}\r\n            bodyStyle={{minHeight: 'auto'}}\r\n            bodyClassName={classes.popUp}>\r\n            <div className={classes.titleContent}>\r\n                <span>Добавить фото</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit} className={classes.form}>\r\n                    <div className={classes.inContent} style={{minHeight: '250px'}}>\r\n                        <div className={classes.loader}>\r\n                            <CircularProgress size={40} thickness={4}/>\r\n                        </div>\r\n                        <div className={classes.shopAddPhoto}>\r\n                            <Field\r\n                                name=\"image\"\r\n                                component={ImageUploadField}\r\n                                label=\"Изображения\"\r\n                                fullWidth={true}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <FlatButton\r\n                            label=\"Сохранить\"\r\n                            className={classes.actionButton}\r\n                            primary={true}\r\n                            type=\"submit\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\n\r\nAddPhotoDialog.propTyeps = {\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default AddPhotoDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Shop/AddPhotoDialog.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport Tooltip from '../ToolTip'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport Edit from 'material-ui/svg-icons/image/edit'\r\nimport Delete from 'material-ui/svg-icons/action/delete'\r\nimport Add from 'material-ui/svg-icons/content/add'\r\nconst enhance = compose(\r\n    injectSheet({\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            justifyContent: 'center',\r\n            display: 'flex'\r\n        },\r\n        wrapper: {\r\n            width: '100%',\r\n            display: 'flex',\r\n            alignSelf: 'baseline',\r\n            color: '#333 !important',\r\n            flexWrap: 'wrap',\r\n            padding: '0 30px'\r\n        },\r\n        title: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            borderBottom: '1px #efefef solid',\r\n            alignItems: 'center',\r\n            width: '100%',\r\n            height: '65px',\r\n            margin: '0 -30px',\r\n            padding: '0 30px'\r\n        },\r\n        titleLabel: {\r\n            fontSize: '18px',\r\n            color: '#333',\r\n            fontWeight: 'bold',\r\n            cursor: 'pointer'\r\n        },\r\n        titleButtons: {\r\n            display: 'flex',\r\n            justifyContent: 'flex-end',\r\n            alignItems: 'center',\r\n            height: '100%'\r\n        },\r\n        frequency: {\r\n            textAlign: 'right',\r\n            lineHeight: '1',\r\n            '& span': {\r\n                display: 'block'\r\n            }\r\n        },\r\n        status: {\r\n            alignSelf: 'baseline',\r\n            margin: '0 30px',\r\n            color: '#fff',\r\n            fontWeight: '600',\r\n            padding: '20px 17px',\r\n            lineHeight: '1',\r\n            textAlign: 'center'\r\n        },\r\n        content: {\r\n            padding: '20px 0',\r\n            display: 'flex',\r\n            width: '100%',\r\n            '& > div': {\r\n                marginRight: '7%',\r\n                '&:last-child': {\r\n                    margin: '0'\r\n                }\r\n            }\r\n        },\r\n        info: {\r\n            display: 'flex'\r\n        },\r\n        infoTitle: {\r\n            fontWeight: 'bold'\r\n        },\r\n        details: {\r\n            display: 'inline-block',\r\n            lineHeight: '25px',\r\n            marginRight: '30px',\r\n            marginTop: '10px',\r\n            '&:last-child': {\r\n                marginRight: '0'\r\n            }\r\n        },\r\n        image: {\r\n            width: '230px',\r\n            height: '165px',\r\n            marginRight: 'calc(7% + 36px) !important',\r\n            position: 'relative',\r\n            '& span:first-child': {\r\n                width: '230px',\r\n                height: '165px',\r\n                display: 'block',\r\n                marginRight: '7px',\r\n                marginBottom: '0'\r\n            },\r\n            '& span:nth-child(4)': {\r\n                position: 'relative',\r\n                zIndex: '1'\r\n            },\r\n            '& span:nth-child(4):after': {\r\n                background: 'rgba(0,0,0,0.35)',\r\n                content: '\"\"',\r\n                position: 'absolute',\r\n                top: '0',\r\n                left: '0',\r\n                right: '0',\r\n                bottom: '0'\r\n            }\r\n        },\r\n        imageWrapper: {\r\n            height: '100%',\r\n            marginRight: '36px',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            flexWrap: 'wrap',\r\n            '& span': {\r\n                cursor: 'pointer',\r\n                width: '36px',\r\n                height: '36px',\r\n                marginBottom: '7px',\r\n                position: 'relative',\r\n                '& strong': {\r\n                    color: '#fff',\r\n                    position: 'absolute',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    top: '0',\r\n                    left: '0',\r\n                    right: '0',\r\n                    bottom: '0',\r\n                    zIndex: '99'\r\n                }\r\n            },\r\n            '& img': {\r\n                width: '100%',\r\n                height: '100%'\r\n            }\r\n        },\r\n        addImg: {\r\n            background: '#999',\r\n            cursor: 'pointer',\r\n            width: '36px',\r\n            height: '36px',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center'\r\n        },\r\n        noImage: {\r\n            background: '#efefef',\r\n            border: '1px #ccc dashed',\r\n            color: '#999',\r\n            fontSize: '11px !important',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            position: 'absolute',\r\n            top: '0',\r\n            left: '0',\r\n            right: '0',\r\n            bottom: '0',\r\n            '& span': {\r\n                fontSize: '11px !important',\r\n                display: 'block',\r\n                position: 'relative',\r\n                height: 'auto !important',\r\n                width: 'auto !important',\r\n                margin: '0 0 20px !important',\r\n                '&:after': {\r\n                    content: '\"\"',\r\n                    position: 'absolute',\r\n                    top: '40px',\r\n                    left: '50%',\r\n                    background: '#999',\r\n                    width: '64px',\r\n                    height: '1px',\r\n                    marginLeft: '-32px'\r\n                }\r\n            }\r\n        }\r\n    })\r\n)\r\nconst iconStyle = {\r\n    icon: {\r\n        color: '#666',\r\n        width: 20,\r\n        height: 20\r\n    },\r\n    button: {\r\n        width: 48,\r\n        height: 48,\r\n        padding: 0\r\n    }\r\n}\r\nconst ShopDetails = enhance((props) => {\r\n    const {classes, loading, data, confirmDialog, updateDialog, addPhotoDialog, slideShowDialog, handleCloseDetail} = props\r\n    const ZERO = 0\r\n    const MAX_IMAGE_COUNT = 4\r\n    const EVERY_DAY = '1'\r\n    const ONCE_IN_A_WEEK = '2'\r\n    const TWICE_IN_A_WEEK = '3'\r\n    const IN_A_DAY = '4'\r\n    const id = _.get(data, 'id')\r\n    const name = _.get(data, 'name')\r\n    const client = _.get(data, ['client', 'name'])\r\n    const shopType = _.get(data, ['marketType', 'name'])\r\n    const address = _.get(data, 'address')\r\n    const guide = _.get(data, 'guide')\r\n    const zone = _.get(data, 'border')\r\n    const contactName = _.get(data, 'contactName')\r\n    const phone = _.get(data, 'phone')\r\n    const images = _.get(data, 'images') || {}\r\n    const freq = _.get(data, 'visitFrequency')\r\n    const isActive = _.get(data, 'isActive')\r\n    let slicedImages = images\r\n    if (images.length > MAX_IMAGE_COUNT) {\r\n        slicedImages = _.slice(images, ZERO, MAX_IMAGE_COUNT)\r\n    }\r\n    const lastImage = _.last(slicedImages)\r\n    const moreImages = images.length - slicedImages.length\r\n    if (loading) {\r\n        return (\r\n            <div className={classes.loader}>\r\n                <div>\r\n                    <CircularProgress size={40} thickness={4} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.title}>\r\n                <div className={classes.titleLabel} onClick={handleCloseDetail}>{name}</div>\r\n                <div className={classes.titleButtons}>\r\n                    <div className={classes.frequency}>\r\n                        <span>Частота посещений:</span>\r\n                        <b>{ freq === EVERY_DAY ? 'Каждый день' : (\r\n                            freq === ONCE_IN_A_WEEK ? 'Раз в неделю' : (\r\n                                freq === TWICE_IN_A_WEEK ? '2 раза в неделю' : (\r\n                                    freq === IN_A_DAY ? 'Через день' : ''\r\n                                )\r\n                            )\r\n                        )}</b>\r\n                    </div>\r\n                    {isActive ? <div className={classes.status} style={{background: '#81c784'}}>Магазин <br/> активен</div>\r\n                        : <div className={classes.status} style={{background: '#ff717e'}}>Магазин <br/> неактивен</div>\r\n                    }\r\n                    <Tooltip position=\"bottom\" text=\"Изменить\">\r\n                        <IconButton\r\n                            iconStyle={iconStyle.icon}\r\n                            style={iconStyle.button}\r\n                            touch={true}\r\n                            onTouchTap={() => { updateDialog.handleOpenUpdateDialog(id) }}>\r\n                            <Edit />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip position=\"bottom\" text=\"Удалить\">\r\n                        <IconButton\r\n                            iconStyle={iconStyle.icon}\r\n                            style={iconStyle.button}\r\n                            touch={true}\r\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(id) }}>\r\n                            <Delete />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </div>\r\n            </div>\r\n            <div className={classes.content}>\r\n                <div className={classes.image}>\r\n                    {(images.length === ZERO) ? <div className={classes.noImage}>\r\n                        <div>\r\n                            <span>Фото <br/> отсутствует</span>\r\n                            <a onClick={addPhotoDialog.handleOpenAddPhotoDialog}>добавить фото</a>\r\n                        </div>\r\n                    </div>\r\n                        : <div className={classes.imageWrapper}> {\r\n                            _.map(slicedImages, (item, index) => {\r\n                                const src = _.get(item, 'image')\r\n                                const imgId = _.get(item, 'id')\r\n                                const isLastImage = (imgId === lastImage.id)\r\n                                return (\r\n                                    <span key={index} onClick={() => { slideShowDialog.handleOpenSlideShowDialog(index) }}>\r\n                                        {isLastImage && moreImages !== ZERO && <strong>{moreImages}+</strong>}\r\n                                        <img src={src} alt=\"\"/>\r\n                                    </span>\r\n                                )\r\n                            })\r\n                        }\r\n                            <div onClick={addPhotoDialog.handleOpenAddPhotoDialog} className={classes.addImg}>\r\n                                <Add color=\"#fff\"/>\r\n                            </div>\r\n                        </div>}\r\n                </div>\r\n                <div className={classes.infoBlock}>\r\n                    <div className={classes.infoTitle}>Детали</div>\r\n                    <ul className={classes.details}>\r\n                        <li>Клиент</li>\r\n                        <li>Тип заведения</li>\r\n                        <li>Зона</li>\r\n                        <li>Адрес</li>\r\n                        <li>Ориентир</li>\r\n                    </ul>\r\n                    <ul className={classes.details}>\r\n                        <li>{client}</li>\r\n                        <li>{shopType}</li>\r\n                        <li>{!zone ? <span className=\"redFont\">Не определена</span> : {zone}}</li>\r\n                        <li>{address}</li>\r\n                        <li>{guide}</li>\r\n                    </ul>\r\n                </div>\r\n                <div className={classes.infoBlock}>\r\n                    <div className={classes.infoTitle}>Контакты</div>\r\n                    <ul className={classes.details}>\r\n                        <li>{contactName}</li>\r\n                    </ul>\r\n                    <ul className={classes.details}>\r\n                        <li>{phone}</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\nShopDetails.propTypes = {\r\n    data: PropTypes.object.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    confirmDialog: PropTypes.shape({\r\n        openConfirmDialog: PropTypes.bool.isRequired,\r\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\r\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\r\n        handleSendConfirmDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    tabData: PropTypes.shape({\r\n        tab: PropTypes.string.isRequired,\r\n        handleTabChange: PropTypes.func.isRequired\r\n    }),\r\n    updateDialog: PropTypes.shape({\r\n        updateLoading: PropTypes.bool.isRequired,\r\n        openUpdateDialog: PropTypes.bool.isRequired,\r\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\r\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\r\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    addPhotoDialog: PropTypes.shape({\r\n        openAddPhotoDialog: PropTypes.bool.isRequired,\r\n        handleOpenAddPhotoDialog: PropTypes.func.isRequired,\r\n        handleCloseAddPhotoDialog: PropTypes.func.isRequired,\r\n        handleSubmitAddPhotoDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    slideShowDialog: PropTypes.shape({\r\n        openSlideShowDialog: PropTypes.bool.isRequired,\r\n        gallery: PropTypes.object,\r\n        galleryLoading: PropTypes.bool.isRequired,\r\n        handleOpenSlideShowDialog: PropTypes.func.isRequired,\r\n        handleCloseSlideShowDialog: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\nexport default ShopDetails\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Shop/ShopDetails.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport GridList from '../GridList'\r\nimport Container from '../Container'\r\nimport ShopFilterForm from './ShopFilterForm'\r\nimport ShopDetails from './ShopDetails'\r\nimport ShopCreateDialog from './ShopCreateDialog'\r\nimport MapDialog from './ShopMapDialog'\r\nimport AddPhotoDialog from './AddPhotoDialog'\r\nimport SlideShowDialog from './SlideShowDialog'\r\nimport DeleteDialog from '../DeleteDialog'\r\nimport ConfirmDialog from '../ConfirmDialog'\r\nimport SubMenu from '../SubMenu'\r\nimport injectSheet from 'react-jss'\r\nimport {compose} from 'recompose'\r\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\r\nimport ContentAdd from 'material-ui/svg-icons/content/add'\r\nimport Tooltip from '../ToolTip'\r\nconst listHeader = [\r\n    {\r\n        xs: 3,\r\n        sorting: true,\r\n        name: 'name',\r\n        title: 'Название'\r\n    },\r\n    {\r\n        xs: 3,\r\n        sorting: true,\r\n        name: 'client',\r\n        title: 'Клиент'\r\n    },\r\n    {\r\n        xs: 2,\r\n        sorting: true,\r\n        name: 'marketType',\r\n        title: 'Тип'\r\n    },\r\n    {\r\n        xs: 2,\r\n        sorting: true,\r\n        name: 'border',\r\n        title: 'Зона'\r\n    },\r\n    {\r\n        xs: 2,\r\n        sorting: true,\r\n        name: 'isActive',\r\n        title: 'Статус'\r\n    }\r\n]\r\nconst enhance = compose(\r\n    injectSheet({\r\n        addButton: {\r\n            '& button': {\r\n                backgroundColor: '#275482 !important'\r\n            }\r\n        },\r\n        addButtonWrapper: {\r\n            position: 'absolute',\r\n            top: '10px',\r\n            right: '0',\r\n            marginBottom: '0px'\r\n        }\r\n    })\r\n)\r\nconst ShopGridList = enhance((props) => {\r\n    const {\r\n        filter,\r\n        createDialog,\r\n        mapDialog,\r\n        updateDialog,\r\n        updateMapDialog,\r\n        addPhotoDialog,\r\n        filterDialog,\r\n        slideShowDialog,\r\n        confirmDialog,\r\n        deleteDialog,\r\n        listData,\r\n        detailData,\r\n        mapLocation,\r\n        navigationButtons,\r\n        classes\r\n    } = props\r\n\r\n    const shopFilterDialog = (\r\n        <ShopFilterForm\r\n            initialValues={filterDialog.initialValues}\r\n            filter={filter}\r\n            filterDialog={filterDialog}\r\n        />\r\n    )\r\n    const shopDetail = (\r\n        <ShopDetails\r\n            key={_.get(detailData, 'id')}\r\n            data={_.get(detailData, 'data') || {}}\r\n            deleteDialog={deleteDialog}\r\n            confirmDialog={confirmDialog}\r\n            loading={_.get(detailData, 'detailLoading')}\r\n            updateDialog={updateDialog}\r\n            addPhotoDialog={addPhotoDialog}\r\n            slideShowDialog={slideShowDialog}\r\n            handleCloseDetail={_.get(detailData, 'handleCloseDetail')}\r\n        />\r\n    )\r\n    const shopList = _.map(_.get(listData, 'data'), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const name = _.get(item, 'name')\r\n        const client = _.get(item, ['client', 'name'])\r\n        const marketType = _.get(item, ['marketType', 'name'])\r\n        const zone = _.get(item, 'border') || 'Не определена'\r\n        const isActive = _.get(item, 'isActive')\r\n        return (\r\n            <Row key={id}>\r\n                <Col xs={3}>\r\n                    <Link to={{\r\n                        pathname: sprintf(ROUTES.SHOP_ITEM_PATH, id),\r\n                        query: ''\r\n                    }}>{name}</Link>\r\n                </Col>\r\n                <Col xs={3}>{client}</Col>\r\n                <Col xs={2}>{marketType}</Col>\r\n                <Col xs={2}>{zone}</Col>\r\n                <Col xs={2}>\r\n                    {isActive ? <span className=\"greenFont\">Активен</span>\r\n                        : <span className=\"redFont\">Не активен</span>}\r\n                </Col>\r\n            </Row>\r\n        )\r\n    })\r\n    const list = {\r\n        header: listHeader,\r\n        list: shopList,\r\n        loading: _.get(listData, 'listLoading')\r\n    }\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.SHOP_LIST_URL}/>\r\n            <div className={classes.addButtonWrapper}>\r\n                <Tooltip position=\"left\" text=\"Добавить магазин\">\r\n                    <FloatingActionButton\r\n                        mini={true}\r\n                        className={classes.addButton}\r\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\r\n                        <ContentAdd />\r\n                    </FloatingActionButton>\r\n                </Tooltip>\r\n            </div>\r\n            <GridList\r\n                filter={filter}\r\n                list={list}\r\n                detail={shopDetail}\r\n                filterDialog={shopFilterDialog}\r\n            />\r\n            <ShopCreateDialog\r\n                mapDialog={mapDialog}\r\n                updateMapDialog={updateMapDialog}\r\n                mapLocation={mapLocation}\r\n                open={createDialog.openCreateDialog}\r\n                loading={createDialog.createLoading}\r\n                onClose={createDialog.handleCloseCreateDialog}\r\n                onSubmit={createDialog.handleSubmitCreateDialog}\r\n            />\r\n            <MapDialog\r\n                open={mapDialog.openMapDialog}\r\n                onClose={mapDialog.handleCloseMapDialog}\r\n                onSubmit={mapDialog.handleSubmitMapDialog}\r\n            />\r\n            <AddPhotoDialog\r\n                open={addPhotoDialog.openAddPhotoDialog}\r\n                onClose={addPhotoDialog.handleCloseAddPhotoDialog}\r\n                onSubmit={addPhotoDialog.handleSubmitAddPhotoDialog}\r\n            />\r\n            <SlideShowDialog\r\n                images={_.get(detailData, ['data', 'images'])}\r\n                loading={slideShowDialog.galleryLoading}\r\n                open={slideShowDialog.openSlideShowDialog}\r\n                image={slideShowDialog.gallery}\r\n                onClose={slideShowDialog.handleCloseSlideShowDialog}\r\n                prevBtn={navigationButtons.handlePrevImage}\r\n                nextBtn={navigationButtons.handleNextImage}\r\n            />\r\n            <MapDialog\r\n                isUpdate={true}\r\n                initialValues={updateMapDialog.initialValues}\r\n                open={updateMapDialog.openUpdateMapDialog}\r\n                onClose={updateMapDialog.handleCloseMapUpdateDialog}\r\n                onSubmit={updateMapDialog.handleSubmitMapUpdateDialog}\r\n            />\r\n            <ShopCreateDialog\r\n                isUpdate={true}\r\n                mapDialog={mapDialog}\r\n                mapLocation={mapLocation}\r\n                updateMapDialog={updateMapDialog}\r\n                initialValues={updateDialog.initialValues}\r\n                open={updateDialog.openUpdateDialog}\r\n                loading={updateDialog.updateLoading}\r\n                onClose={updateDialog.handleCloseUpdateDialog}\r\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\r\n            />\r\n            <DeleteDialog\r\n                filter={filter}\r\n                open={deleteDialog.openDeleteDialog}\r\n                onClose={deleteDialog.handleCloseDeleteDialog}\r\n            />\r\n            {detailData.data && <ConfirmDialog\r\n                type=\"delete\"\r\n                message={_.get(detailData, ['data', 'name'])}\r\n                onClose={confirmDialog.handleCloseConfirmDialog}\r\n                onSubmit={confirmDialog.handleSendConfirmDialog}\r\n                open={confirmDialog.openConfirmDialog}\r\n            />}\r\n        </Container>\r\n    )\r\n})\r\nShopGridList.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object,\r\n    mapLocation: PropTypes.object,\r\n    createDialog: PropTypes.shape({\r\n        createLoading: PropTypes.bool.isRequired,\r\n        openCreateDialog: PropTypes.bool.isRequired,\r\n        handleOpenCreateDialog: PropTypes.func.isRequired,\r\n        handleCloseCreateDialog: PropTypes.func.isRequired,\r\n        handleSubmitCreateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    mapDialog: PropTypes.shape({\r\n        openMapDialog: PropTypes.bool.isRequired,\r\n        handleOpenMapDialog: PropTypes.func.isRequired,\r\n        handleCloseMapDialog: PropTypes.func.isRequired,\r\n        handleSubmitMapDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    addPhotoDialog: PropTypes.shape({\r\n        openAddPhotoDialog: PropTypes.bool.isRequired,\r\n        handleOpenAddPhotoDialog: PropTypes.func.isRequired,\r\n        handleCloseAddPhotoDialog: PropTypes.func.isRequired,\r\n        handleSubmitAddPhotoDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    slideShowDialog: PropTypes.shape({\r\n        openSlideShowDialog: PropTypes.bool.isRequired,\r\n        gallery: PropTypes.object,\r\n        galleryLoading: PropTypes.bool.isRequired,\r\n        handleOpenSlideShowDialog: PropTypes.func.isRequired,\r\n        handleCloseSlideShowDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    updateMapDialog: PropTypes.shape({\r\n        openUpdateMapDialog: PropTypes.bool.isRequired,\r\n        handleOpenMapUpdateDialog: PropTypes.func.isRequired,\r\n        handleCloseMapUpdateDialog: PropTypes.func.isRequired,\r\n        handleSubmitMapUpdateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    confirmDialog: PropTypes.shape({\r\n        openConfirmDialog: PropTypes.bool.isRequired,\r\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\r\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\r\n        handleSendConfirmDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    deleteDialog: PropTypes.shape({\r\n        openDeleteDialog: PropTypes.bool.isRequired,\r\n        handleOpenDeleteDialog: PropTypes.func.isRequired,\r\n        handleCloseDeleteDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    updateDialog: PropTypes.shape({\r\n        updateLoading: PropTypes.bool.isRequired,\r\n        openUpdateDialog: PropTypes.bool.isRequired,\r\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\r\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\r\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    filterDialog: PropTypes.shape({\r\n        initialValues: PropTypes.object,\r\n        filterLoading: PropTypes.bool,\r\n        openFilterDialog: PropTypes.bool.isRequired,\r\n        handleOpenFilterDialog: PropTypes.func.isRequired,\r\n        handleCloseFilterDialog: PropTypes.func.isRequired,\r\n        handleSubmitFilterDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    navigationButtons: PropTypes.shape({\r\n        handlePrevImage: PropTypes.func.isRequired,\r\n        handleNextImage: PropTypes.func.isRequired\r\n    })\r\n}\r\nexport default ShopGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Shop/ShopGridList.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport {LocationField} from '../ReduxForm'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport CloseIcon2 from '../CloseIcon2'\r\n\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\r\n\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        latLng,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            justifyContent: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        },\r\n        popUp: {\r\n            overflowY: 'hidden !important',\r\n            fontSize: '13px !important',\r\n            position: 'relative',\r\n            padding: '0 !important',\r\n            overflowX: 'hidden',\r\n            height: '100%',\r\n            maxHeight: 'inherit !important'\r\n        },\r\n        titleContent: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            padding: '30px',\r\n            zIndex: '999',\r\n            '& button': {\r\n                top: '8px',\r\n                right: '8px',\r\n                padding: '0 !important',\r\n                position: 'absolute !important'\r\n            }\r\n        },\r\n        inContent: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            color: '#333',\r\n            position: 'relative',\r\n            height: '600px',\r\n            '& > div:nth-child(2)': {\r\n                position: 'absolute'\r\n            }\r\n        },\r\n        bottomButton: {\r\n            background: '#454545',\r\n            color: '#fff',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            padding: '10px 10px 10px 30px',\r\n            zIndex: '999',\r\n            textAlign: 'right',\r\n            '& span': {\r\n                fontSize: '13px !important',\r\n                fontWeight: '600 !important',\r\n                color: '#fff',\r\n                verticalAlign: 'inherit !important'\r\n            }\r\n        },\r\n        actionButton: {\r\n            fontSize: '13px !important',\r\n            margin: '0 !important'\r\n        },\r\n        podlojkaScroll: {\r\n            padding: '0 !important',\r\n            overflowY: 'auto !important',\r\n            zIndex: '2000 !important',\r\n            '& > div > div': {\r\n                width: 'auto !important',\r\n                maxWidth: '1000px !important'\r\n            }\r\n        }\r\n    }),\r\n    reduxForm({\r\n        form: 'ShopMapForm',\r\n        enableReinitialize: true\r\n    }),\r\n)\r\nconst ShopMapDialog = enhance((props) => {\r\n    const {open, loading, handleSubmit, onClose, classes} = props\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            className={classes.podlojkaScroll}\r\n            contentStyle={loading ? {width: '500px'} : {width: '100%'}}\r\n            bodyClassName={classes.popUp}>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit} className={classes.form}>\r\n                    <div className={classes.loader}>\r\n                        <CircularProgress size={40} thickness={4}/>\r\n                    </div>\r\n                    <div className={classes.inContent}>\r\n                        <div className={classes.titleContent}>\r\n                            <IconButton onTouchTap={onClose}>\r\n                                <CloseIcon2 color=\"#333\"/>\r\n                            </IconButton>\r\n                        </div>\r\n                        <Field\r\n                            name=\"latLng\"\r\n                            component={LocationField}\r\n                            className={classes.map}\r\n                            fullWidth={true}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <span>Кликните по карте, чтобы обозначить локацию</span>\r\n                        <FlatButton\r\n                            label=\"Сохранить\"\r\n                            className={classes.actionButton}\r\n                            primary={true}\r\n                            type=\"submit\"/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\n\r\nShopMapDialog.propTyeps = {\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired\r\n}\r\nShopMapDialog.defaultProps = {\r\n    isUpdate: false\r\n}\r\n\r\nexport default ShopMapDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Shop/ShopMapDialog.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport Star from 'material-ui/svg-icons/toggle/star'\r\nimport ArrowLeft from 'material-ui/svg-icons/navigation/chevron-left'\r\nimport ArrowRight from 'material-ui/svg-icons/navigation/chevron-right'\r\nconst enhance = compose(\r\n    injectSheet({\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            justifyContent: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        },\r\n        dialog: {\r\n            cursor: 'pointer'\r\n        },\r\n        popUp: {\r\n            cursor: 'default',\r\n            overflowY: 'hidden !important',\r\n            fontSize: '13px !important',\r\n            position: 'relative',\r\n            padding: '0 !important',\r\n            overflowX: 'hidden',\r\n            height: '100%'\r\n        },\r\n        titleContent: {\r\n            position: 'absolute',\r\n            left: '0',\r\n            right: '0',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            padding: '30px',\r\n            zIndex: '999',\r\n            '& button': {\r\n                right: '7px',\r\n                top: '7px',\r\n                padding: '0 !important',\r\n                position: 'absolute !important'\r\n            }\r\n        },\r\n        inContent: {\r\n            display: 'flex',\r\n            width: '500px',\r\n            height: '500px',\r\n            position: 'relative',\r\n            '& img': {\r\n                width: '100%',\r\n                height: '100%'\r\n            }\r\n        },\r\n        bodyContent: {\r\n            width: '100%'\r\n        },\r\n        arrows: {\r\n            position: 'absolute',\r\n            top: '50%',\r\n            transform: 'translate(0, -50%)'\r\n        },\r\n        navLeft: {\r\n            extend: 'arrows',\r\n            left: '0'\r\n        },\r\n        navRight: {\r\n            extend: 'arrows',\r\n            right: '0'\r\n        }\r\n    })\r\n)\r\nconst iconStyle = {\r\n    icon: {\r\n        color: '#f0f0f0',\r\n        width: 60,\r\n        height: 60\r\n    },\r\n    button: {\r\n        width: 70,\r\n        height: 70,\r\n        padding: 0\r\n    }\r\n}\r\nconst SlideShowDialog = enhance((props) => {\r\n    const {open, onClose, classes, image, images, prevBtn, nextBtn} = props\r\n    const imgURL = _.get(image, 'file')\r\n    const lastIndex = _.get(images, 'length')\r\n    const currentIndex = _.findIndex(images, (o) => {\r\n        return o.id === _.get(image, 'id')\r\n    })\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            className={classes.dialog}\r\n            contentStyle={{width: '500px'}}\r\n            bodyStyle={{minHeight: 'auto'}}\r\n            bodyClassName={classes.popUp}>\r\n            <div className={classes.titleContent}>\r\n                <IconButton>\r\n                    <Star color=\"#ffad36\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.inContent} style={{backgroundImage: 'url(' + imgURL + ')'}}>\r\n                <div className={classes.loader}>\r\n                    <CircularProgress size={40} thickness={4}/>\r\n                </div>\r\n                <div className={classes.navLeft}>\r\n                    <IconButton\r\n                        iconStyle={iconStyle.icon}\r\n                        style={iconStyle.button}\r\n                        disableTouchRipple={true}\r\n                        onTouchTap={() => { prevBtn(currentIndex, lastIndex) }}>\r\n                        <ArrowLeft/>\r\n                    </IconButton>\r\n                </div>\r\n                <div className={classes.navRight}>\r\n                    <IconButton\r\n                        iconStyle={iconStyle.icon}\r\n                        style={iconStyle.button}\r\n                        disableTouchRipple={true}\r\n                        onTouchTap={() => { nextBtn(currentIndex, lastIndex) }}>\r\n                        <ArrowRight/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\nSlideShowDialog.propTyeps = {\r\n    images: PropTypes.array.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    image: PropTypes.object.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    prevBtn: PropTypes.func.isRequired,\r\n    nextBtn: PropTypes.func.isRequired\r\n}\r\nexport default SlideShowDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Shop/SlideShowDialog.js","import ShopGridList from './ShopGridList'\nimport {SHOP_CREATE_DIALOG_OPEN} from './ShopCreateDialog'\nimport {SHOP_FILTER_KEY, SHOP_FILTER_OPEN} from './ShopFilterForm'\nconst SHOP_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nconst SHOP_MAP_DIALOG_OPEN = 'openMapDialog'\nconst SHOP_UPDATE_MAP_DIALOG_OPEN = 'openUpdateMapDialog'\nconst ADD_PHOTO_DIALOG_OPEN = 'openAddPhoto'\nconst SHOP_SLIDESHOW_DIALOG_OPEN = 'openImagesDialog'\n\nexport {\n    SHOP_CREATE_DIALOG_OPEN,\n    SHOP_UPDATE_DIALOG_OPEN,\n    SHOP_FILTER_KEY,\n    SHOP_FILTER_OPEN,\n    SHOP_MAP_DIALOG_OPEN,\n    SHOP_UPDATE_MAP_DIALOG_OPEN,\n    ADD_PHOTO_DIALOG_OPEN,\n    SHOP_SLIDESHOW_DIALOG_OPEN,\n    ShopGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Shop/index.js","import React from 'react'\nimport {Link} from 'react-router'\nimport _ from 'lodash'\nimport {connect} from 'react-redux'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport IconButton from 'material-ui/IconButton'\nimport SettingsPower from 'material-ui/svg-icons/action/settings-power'\nimport ToolTip from '../ToolTip'\nimport {MenuItems} from './MenuItems'\nimport Notification from 'material-ui/svg-icons/social/notifications'\nimport Badge from 'material-ui/Badge'\nimport Logo from '../Images/logo.png'\n\nconst style = {\n    iconStyle: {\n        width: 30,\n        height: 30\n    },\n    style: {\n        width: 66,\n        height: 66,\n        padding: 16\n    }\n}\n\nconst touch = true\n\nconst enhance = compose(\n    connect((state, props) => {\n        const count = _.get(state, ['notifications', 'timeInterval', 'data'])\n        return count\n    })\n)\n\nconst SideBarMenu = enhance((props) => {\n    const {classes, handleSignOut, handleOpenNotificationBar, count} = props\n    const items = _.map(MenuItems, (item, index) => {\n        return (\n            <Link to={item.url} key={index}>\n                <ToolTip position=\"right\" text={item.name}>\n                    <IconButton\n                        iconStyle={style.iconStyle}\n                        style={style.style}\n                        disableTouchRipple={true}\n                        touch={touch}>\n                        {item.icon}\n                    </IconButton>\n                </ToolTip>\n            </Link>\n        )\n    })\n\n    return (\n        <div className={classes.wrapper}>\n            <div className={classes.items}>\n                <div className={classes.logo}>\n                    <img src={Logo}/>\n                </div>\n                {count ? <Badge\n                    className={classes.badge}\n                    badgeContent={count}\n                    badgeStyle={{top: 8, right: 10}}>\n                    <ToolTip position=\"right\" text=\"Уведомления\">\n                        <IconButton\n                            iconStyle={style.iconStyle}\n                            style={style.style}\n                            className=\"ass23\"\n                            touch={touch}\n                            onTouchTap={() => {\n                                handleOpenNotificationBar(true)\n                            }}\n                            disableTouchRipple={true}>\n                            <Notification />\n                        </IconButton>\n                    </ToolTip>\n                </Badge>\n                    : <ToolTip position=\"right\" text=\"Уведомления\">\n                        <IconButton\n                            iconStyle={style.iconStyle}\n                            style={style.style}\n                            className=\"ass23\"\n                            touch={touch}\n                            onTouchTap={() => {\n                                handleOpenNotificationBar(true)\n                            }}\n                            disableTouchRipple={true}>\n                            <Notification />\n                        </IconButton>\n                    </ToolTip>\n                }\n                {items}\n\n                <div className={classes.logout}>\n                    <ToolTip position=\"right\" text=\"Выйти\">\n                        <IconButton\n                            iconStyle={style.iconStyle}\n                            style={style.style}\n                            touch={touch}\n                            disableTouchRipple={true}\n                            onClick={handleSignOut}>\n                            <SettingsPower />\n                        </IconButton>\n                    </ToolTip>\n                </div>\n            </div>\n        </div>\n    )\n})\n\nexport default injectSheet({\n    wrapper: {\n        height: '100%',\n        display: 'flex',\n        backgroundColor: '#2d3037',\n        boxShadow: '0 2px 2px 0 rgba(0,0,0,.14), 0 3px 1px -2px rgba(0,0,0,.2), 0 1px 5px 0 rgba(0,0,0,.12)'\n    },\n\n    logo: {\n        padding: '20px 10px 30px',\n        '& img': {\n            width: '100%'\n        }\n    },\n\n    items: {\n        position: 'relative',\n        width: '100%',\n        '& button': {\n            width: '100% !important',\n            height: '60px !important',\n            opacity: '0.5',\n            '&:hover': {\n                opacity: '1'\n            }\n        },\n        '& svg': {\n            color: '#fff !important',\n            width: '25px !important',\n            height: '25px !important'\n        }\n    },\n\n    logout: {\n        position: 'absolute',\n        bottom: '0',\n        left: '0',\n        right: '0'\n    },\n    badge: {\n        padding: '0 !important',\n        width: '100%',\n        '& span': {\n            fontSize: '11px !important',\n            backgroundColor: '#009688 !important',\n            color: '#fff !important',\n            alignItems: 'center',\n            justifyContent: 'center'\n        }\n    }\n})(SideBarMenu)\n\n\n\n// WEBPACK FOOTER //\n// src/components/SidebarMenu/SidebarMenu.js","import SidebarMenu from './SidebarMenu'\n\nexport default SidebarMenu\n\n\n\n// WEBPACK FOOTER //\n// src/components/SidebarMenu/index.js","import React from 'react'\r\nimport {compose} from 'recompose'\r\nimport RaisedButton from 'material-ui/RaisedButton'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport Paper from 'material-ui/Paper'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport injectSheet from 'react-jss'\r\nimport validate from '../../helpers/validate'\r\nimport {CheckBox, TextField} from '../ReduxForm'\r\nimport Dot from '../Images/dot.png'\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        loader: {\r\n            width: '120px',\r\n            height: '120px',\r\n            margin: '0 auto',\r\n            padding: '15px',\r\n            justifyContent: 'center',\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n        },\r\n\r\n        wrapper: {\r\n            width: '320px',\r\n            margin: '0 auto',\r\n            padding: '25px 55px 25px 45px',\r\n            textAlign: 'center',\r\n            display: 'inline-block'\r\n        },\r\n\r\n        title: {\r\n            paddingTop: '5px',\r\n            paddingBottom: '22px',\r\n            fontSize: '14px',\r\n            fontWeight: '600',\r\n            textTransform: 'uppercase',\r\n            textAlign: 'center',\r\n            color: '#647994',\r\n            position: 'relative',\r\n            '&:after': {\r\n                content: '\"\"',\r\n                backgroundImage: 'url(' + Dot + ')',\r\n                position: 'absolute',\r\n                bottom: '0',\r\n                height: '2px',\r\n                left: '0',\r\n                right: '0'\r\n            }\r\n        },\r\n\r\n        loginForm: {\r\n            fontSize: '13px !important'\r\n        },\r\n\r\n        rememberMe: {\r\n            marginBottom: '20px !important',\r\n            marginTop: '20px !important'\r\n        },\r\n\r\n        error: {\r\n            color: 'red',\r\n            fontSize: '12px',\r\n            marginTop: '12px'\r\n        }\r\n    }),\r\n\r\n    reduxForm({\r\n        form: 'SignInForm'\r\n    })\r\n)\r\n\r\nconst SignInForm = enhance((props) => {\r\n    const {classes, handleSubmit, loading, error} = props\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n\r\n    if (loading) {\r\n        return (\r\n            <Paper className={classes.loader} zDepth={2}>\r\n                <CircularProgress size={40} thickness={4}/>\r\n            </Paper>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.wrapper} zDepth={2}>\r\n            <form onSubmit={onSubmit}>\r\n                <div>\r\n                    <div className={classes.title}>\r\n                        Вход в систему\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className={classes.error}>{error}</div>\r\n\r\n                    <Field className={classes.loginForm} name=\"username\" component={TextField} label=\"Логин\" fullWidth={true} />\r\n                    <Field className={classes.loginForm} name=\"password\" component={TextField} label=\"Пароль\" type=\"password\" fullWidth={true} />\r\n                    <Field name=\"rememberMe\" component={CheckBox} label=\"Запомнить меня\" className={classes.rememberMe} />\r\n\r\n                    <RaisedButton\r\n                        type=\"submit\"\r\n                        label=\"Войти\"\r\n                        primary={true}\r\n                        fullWidth={true}\r\n                    />\r\n                </div>\r\n            </form>\r\n        </Paper>\r\n    )\r\n})\r\n\r\nexport default SignInForm\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/SignInForm/SignInForm.js","import SingInForm from './SignInForm'\n\nexport default SingInForm\n\n\n\n// WEBPACK FOOTER //\n// src/components/SignInForm/index.js","import React from 'react'\nimport Container from '../Container'\n\nconst DashboardLayout = (props) => {\n    return (\n        <Container>\n            {props.children}\n        </Container>\n    )\n}\n\nexport default DashboardLayout\n\n\n\n// WEBPACK FOOTER //\n// src/components/SingInLayout/SingInLayout.js","import SingInLayout from './SingInLayout'\n\nexport default SingInLayout\n\n\n\n// WEBPACK FOOTER //\n// src/components/SingInLayout/index.js","import _ from 'lodash'\nimport React from 'react'\nimport {connect} from 'react-redux'\nimport {compose} from 'recompose'\nimport MUISnackbar from 'material-ui/Snackbar'\nimport {closeSnackbarAction} from '../../actions/snackbar'\n\nconst enhance = compose(\n    connect((state) => {\n        const open = _.get(state, ['snackbar', 'open'])\n        const message = _.get(state, ['snackbar', 'message'])\n        const autoHideDuration = _.get(state, ['snackbar', 'autoHideDuration'])\n\n        return {\n            open,\n            message,\n            autoHideDuration\n        }\n    })\n)\n\nconst Snackbar = ({dispatch, open, message, autoHideDuration, ...defaultProps}) => {\n    return (\n        <MUISnackbar\n            open={open}\n            message={message}\n            autoHideDuration={autoHideDuration}\n            onRequestClose={() => dispatch(closeSnackbarAction())}\n            {...defaultProps}\n        />\n    )\n}\n\nexport default enhance(Snackbar)\n\n\n\n// WEBPACK FOOTER //\n// src/components/Snackbar/Snackbar.js","import Snackbar from './Snackbar'\n\nexport default Snackbar\n\n\n\n// WEBPACK FOOTER //\n// src/components/Snackbar/index.js","import _ from 'lodash'\r\nimport injectSheet from 'react-jss'\r\nimport React from 'react'\r\nimport sprintf from 'sprintf'\r\nimport {compose} from 'recompose'\r\nimport PropTypes from 'prop-types'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport ReactHighcharts from 'react-highcharts'\r\nimport Paper from 'material-ui/Paper'\r\nimport {Link} from 'react-router'\r\nimport numberFormat from '../../helpers/numberFormat'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport Container from '../Container'\r\nimport StatCashboxOrderDetails from './StatCashboxOrderDetails'\r\nimport SubMenu from '../SubMenu'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\r\nimport FiberManualRecord from 'material-ui/svg-icons/av/fiber-manual-record'\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        infoBlock: {\r\n            width: '25%',\r\n            display: 'inline-block',\r\n            color: '#999',\r\n            fontWeight: '400',\r\n            fontSize: '13px',\r\n            lineHeight: '1.3',\r\n            borderLeft: '1px solid #efefef',\r\n            padding: '12px 15px 12px 15px',\r\n            alignItems: 'center',\r\n            '& span': {\r\n                color: '#333',\r\n                fontWeight: '600',\r\n                fontSize: '24px !important'\r\n            },\r\n            '&:first-child': {\r\n                border: 'none'\r\n            }\r\n        },\r\n        typeListStock: {\r\n            width: '100px',\r\n            height: 'calc(100% + 16px)',\r\n            marginTop: '-8px',\r\n            float: 'left',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            borderRight: '1px solid #fff',\r\n            backgroundColor: '#eceff5',\r\n            '& a': {\r\n                display: 'block',\r\n                width: '100%',\r\n                fontWeight: '600'\r\n            },\r\n            '& a.active': {\r\n                color: '#333',\r\n                cursor: 'text'\r\n            },\r\n            '&:last-child': {\r\n                border: 'none'\r\n            },\r\n            '&:first-child': {\r\n\r\n                marginLeft: '-38px'\r\n            }\r\n        },\r\n        titleLabel: {\r\n            fontSize: '18px',\r\n            color: '#333',\r\n            fontWeight: '600'\r\n        },\r\n        bodyTitle: {\r\n            fontWeight: '600',\r\n            marginBottom: '10px'\r\n        },\r\n        link: {\r\n            color: '#12aaeb !important',\r\n            borderBottom: '1px dashed',\r\n            fontWeight: '400 !important'\r\n        },\r\n        loader: {\r\n            background: '#fff',\r\n            height: '400px',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        },\r\n        manufactures: {\r\n            margin: '0 -28px',\r\n            padding: '0 28px'\r\n        },\r\n        tabWrapper: {\r\n            display: 'flex',\r\n            width: '100%'\r\n        },\r\n        tab: {\r\n            cursor: 'pointer',\r\n            padding: '20px',\r\n            height: '100%',\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n        },\r\n        activeTab: {\r\n            paddingBottom: '20px',\r\n            flexBasis: '20%',\r\n            marginRight: '15px',\r\n            '&:last-child': {\r\n                margin: '0'\r\n            },\r\n            '& a': {\r\n                color: 'inherit !important'\r\n            }\r\n        },\r\n        tabTitle: {\r\n            fontWeight: '600',\r\n            marginBottom: '10px',\r\n            '& span': {\r\n                color: '#999',\r\n                display: 'block',\r\n                fontWeight: 'normal'\r\n            }\r\n        },\r\n        tabText: {\r\n            fontSize: '10px',\r\n            color: '#666',\r\n            fontWeight: '600',\r\n            '& span': {\r\n                display: 'block',\r\n                fontSize: '18px !important',\r\n                color: '#333'\r\n            }\r\n        },\r\n        stats: {\r\n            margin: '0 -28px',\r\n            padding: '0 28px',\r\n            background: '#fff',\r\n            minHeight: 'calc(100% - 148px)'\r\n        },\r\n        statTitle: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            fontWeight: 'bold',\r\n            padding: '25px 28px',\r\n            margin: '0 -28px',\r\n            '& a': {\r\n                fontWeight: '600'\r\n            }\r\n        },\r\n        diagram: {\r\n            padding: '20px 28px',\r\n            margin: '0 -28px',\r\n            borderBottom: '1px #f0f0f0 solid',\r\n            borderTop: '1px #f0f0f0 solid',\r\n            '& > div': {\r\n                margin: '-20px 0',\r\n                padding: '20px 0',\r\n                '&:first-child': {\r\n                    paddingRight: '10px'\r\n                },\r\n                '&:last-child': {\r\n                    paddingLeft: '10px'\r\n                }\r\n            }\r\n        },\r\n        balanceInfo: {\r\n            borderLeft: '1px #f0f0f0 solid'\r\n        },\r\n        balance: {\r\n            padding: '15px 0',\r\n            borderBottom: '1px #f0f0f0 solid',\r\n            '&:last-child': {\r\n                border: 'none'\r\n            },\r\n            '& div:last-child': {\r\n                fontSize: '24px',\r\n                fontWeight: '600'\r\n            }\r\n        },\r\n        categoryExpens: {\r\n            display: 'flex',\r\n            width: '100%',\r\n            margin: '20px 0',\r\n            alignItems: 'center'\r\n        },\r\n        bulletProof: {\r\n            columnCount: '3',\r\n            columnGap: '20px',\r\n            margin: '0',\r\n            padding: '0',\r\n            '& li': {\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                padding: '10px',\r\n                '& div:first-child': {\r\n                    marginRight: '5px'\r\n                }\r\n            }\r\n        }\r\n    }),\r\n)\r\n\r\nconst StatCashboxGridList = enhance((props) => {\r\n    const {\r\n        filter,\r\n        listData,\r\n        detailData,\r\n        classes,\r\n        orderData\r\n    } = props\r\n\r\n    const detailId = _.get(detailData, 'id')\r\n    const manufactureList = _.map(_.get(listData, 'data'), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const cashbox = _.get(item, 'name')\r\n        const type = _.toInteger(_.get(item, 'type'))\r\n        const balance = numberFormat((_.get(item, 'balance')))\r\n        const currency = _.get(item, ['currency', 'name'])\r\n        const BANK_ID = 1\r\n        return (\r\n        <div key={id} className={classes.activeTab} style={ detailId === id ? {backgroundColor: '#f2f5f8'} : {}}>\r\n            <Paper key={id} zDepth={1} className={classes.tab}>\r\n                <Link\r\n                    to={{\r\n                        pathname: sprintf(ROUTES.TRANSACTION_ITEM_PATH, id),\r\n                        query: filter.getParams({'cashboxId': id})\r\n                    }}>\r\n                    <div className={classes.tabContent}>\r\n                        <div className={classes.tabTitle}>\r\n                            {cashbox}\r\n                            {type === BANK_ID\r\n                                ? <span>банковский счет</span>\r\n                                : <span>наличные</span>\r\n                            }\r\n                        </div>\r\n                        <div className={classes.tabText}>\r\n                            <div>БАЛАНС</div>\r\n                            <span>{balance} {currency}</span>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n            </Paper>\r\n        </div>\r\n        )\r\n    })\r\n\r\n    const sempl = 1\r\n\r\n    const configCercle = {\r\n        chart: {\r\n            type: 'pie',\r\n            backgroundColor: 'transparent',\r\n            height: 180,\r\n            width: 200,\r\n            margin: 0\r\n        },\r\n        legend: {\r\n            enabled: false\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n\r\n        plotOptions: {\r\n            pie: {\r\n                slicedOffset: 0,\r\n                innerSize: '60%',\r\n                size: '100%',\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                states: {\r\n                    hover: {\r\n                        enabled: false\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        tooltip: {\r\n            enabled: false\r\n        },\r\n        title: {\r\n            style: {\r\n                display: 'none'\r\n            }\r\n        },\r\n\r\n        series: [{\r\n            data: [{\r\n                data: 'Производство',\r\n                y: 10,\r\n                color: '#466d7c'\r\n            }, {\r\n                data: 'Производство',\r\n                y: 15,\r\n                color: '#8dbc2e'\r\n            }, {\r\n                data: 'Производство',\r\n                y: 20,\r\n                color: '#00bfdb'\r\n            }, {\r\n                data: 'Производство',\r\n                y: 25,\r\n                color: '#a16cb4'\r\n            }, {\r\n                data: 'Производство',\r\n                y: 10,\r\n                color: '#ff8500'\r\n            }, {\r\n                data: 'Производство',\r\n                y: 20,\r\n                color: '#ff6d65'\r\n            }]\r\n        }]\r\n    }\r\n\r\n    const config = {\r\n        chart: {\r\n            type: 'areaspline',\r\n            height: 245\r\n        },\r\n        title: {\r\n            text: '',\r\n            style: {\r\n                display: 'none'\r\n            }\r\n        },\r\n        legend: {\r\n            enabled: false\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        xAxis: {\r\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n            tickmarkPlacement: 'on',\r\n            title: {\r\n                text: '',\r\n                style: {\r\n                    display: 'none'\r\n                }\r\n            }\r\n        },\r\n        yAxis: {\r\n            title: {\r\n                text: '',\r\n                style: {\r\n                    display: 'none'\r\n                }\r\n            },\r\n            gridLineColor: '#efefef',\r\n            plotLines: [{\r\n                value: 0,\r\n                width: 1,\r\n                color: '#808080'\r\n            }]\r\n        },\r\n        plotOptions: {\r\n            series: {\r\n                lineWidth: 0,\r\n                pointPlacement: 'on'\r\n            },\r\n            areaspline: {\r\n                fillOpacity: 0.7\r\n            }\r\n        },\r\n        tooltip: {\r\n            shared: true,\r\n            valueSuffix: ' %',\r\n            backgroundColor: '#363636',\r\n            style: {\r\n                color: '#fff'\r\n            },\r\n            borderRadius: 2,\r\n            borderWidth: 0,\r\n            enabled: true,\r\n            shadow: false,\r\n            useHTML: true,\r\n            crosshairs: true,\r\n            pointFormat: '{series.name}: <b>{point.y}</b><br/>в отношении к BoM<br/>'\r\n        },\r\n        series: [{\r\n            marker: {\r\n                enabled: false,\r\n                symbol: 'circle'\r\n            },\r\n            name: 'Эффективность',\r\n            data: [sempl + sempl + sempl + sempl, sempl + sempl + sempl, sempl + sempl + sempl + sempl],\r\n            color: '#7560a5'\r\n\r\n        }, {\r\n            marker: {\r\n                enabled: false,\r\n                symbol: 'circle'\r\n            },\r\n            name: 'BoM',\r\n            data: [sempl + sempl + sempl, sempl + sempl + sempl + sempl, sempl + sempl + sempl],\r\n            color: '#43d0e3'\r\n        }]\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.STAT_CASHBOX_LIST_URL}/>\r\n            <div className={classes.manufactures}>\r\n                <div className={classes.tabWrapper}>\r\n                    {manufactureList}\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.stats}>\r\n                <div className={classes.statTitle}>\r\n                    <div>Доходы / Расходы</div>\r\n                    <div><a>6 мая 2017 г. - 12 мая 2017 г. <KeyboardArrowDown color=\"#12aaeb\" style={{width: '13px', height: '13px'}}/></a></div>\r\n                </div>\r\n                <Row className={classes.diagram}>\r\n                    <Col xs={9}>\r\n                        <ReactHighcharts config ={config} />\r\n                    </Col>\r\n                    <Col xs={3} className={classes.balanceInfo}>\r\n                        <div className={classes.balance}>\r\n                            <div>Доходы</div>\r\n                            <div>1 000 000 <span>UZS</span></div>\r\n                        </div>\r\n                        <div className={classes.balance}>\r\n                            <div>Расходы</div>\r\n                            <div>- 1 000 000 <span>UZS</span></div>\r\n                        </div>\r\n                        <div className={classes.balance}>\r\n                            <div>Прибыль</div>\r\n                            <div>1 000 000 <span>UZS</span></div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <div className={classes.statTitle}>\r\n                    <div>Расходы по категории</div>\r\n                </div>\r\n                <div className={classes.categoryExpens}>\r\n                    <div style={{width: '250px'}}>\r\n                        <ReactHighcharts config ={configCercle} />\r\n                    </div>\r\n                    <ul className={classes.bulletProof}>\r\n                        <li>\r\n                            <div>\r\n                                <FiberManualRecord />\r\n                            </div>\r\n                            <div>\r\n                                10% (1 000 000 UZS)<br />Категория\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <div>\r\n                                <FiberManualRecord color=\"#ff6d65\"/>\r\n                            </div>\r\n                            <div>\r\n                                10% (1 000 000 UZS)<br />Категория\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <div>\r\n                                <FiberManualRecord />\r\n                            </div>\r\n                            <div>\r\n                                10% (1 000 000 UZS)<br />Категория\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <div>\r\n                                <FiberManualRecord color=\"#ff6d65\"/>\r\n                            </div>\r\n                            <div>\r\n                                10% (1 000 000 UZS)<br />Категория\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <div>\r\n                                <FiberManualRecord />\r\n                            </div>\r\n                            <div>\r\n                                10% (1 000 000 UZS)<br />Категория\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <div>\r\n                                <FiberManualRecord color=\"#ff6d65\"/>\r\n                            </div>\r\n                            <div>\r\n                                10% (1 000 000 UZS)<br />Категория\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <Dialog\r\n                open={_.get(orderData, 'orderDetailOpen')}\r\n                modal={true}\r\n                onRequestClose={orderData.handleOrderDetailClose}\r\n                bodyClassName={classes.popUp}\r\n                autoScrollBodyContent={true}>\r\n                <StatCashboxOrderDetails\r\n                    key={_.get(orderData, 'id')}\r\n                    data={_.get(orderData, 'orderDetail') || {}}\r\n                    loading={_.get(orderData, 'detailLoading')}\r\n                    handleOrderClick={orderData.handleOrderClick}\r\n                    close={orderData.handleOrderDetailClose}\r\n                />\r\n            </Dialog>\r\n        </Container>\r\n    )\r\n})\r\n\r\nStatCashboxGridList.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object,\r\n    orderData: PropTypes.object\r\n}\r\n\r\nexport default StatCashboxGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/StatCashbox/StatCashboxGridList.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose, withState} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport Dot from '../Images/dot.png'\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        dottedList: {\r\n            padding: '20px 0'\r\n        },\r\n        wrapper: {\r\n            color: '#333 !important',\r\n            width: '100%',\r\n            display: 'flex',\r\n            flexWrap: 'wrap'\r\n        },\r\n        dropdown: {\r\n            position: 'relative',\r\n            paddingRight: '18px',\r\n            zIndex: '10',\r\n            '&:after': {\r\n                top: '10px',\r\n                right: '0',\r\n                content: '\"\"',\r\n                position: 'absolute',\r\n                borderTop: '5px solid',\r\n                borderLeft: '5px solid transparent',\r\n                borderRight: '5px solid transparent'\r\n            }\r\n        },\r\n        link: {\r\n            extend: 'blue',\r\n            borderBottom: '1px dashed',\r\n            fontWeight: '600'\r\n        },\r\n        red: {\r\n            color: '#e57373 !important'\r\n        },\r\n        blue: {\r\n            color: '#12aaeb !important'\r\n        },\r\n        green: {\r\n            color: '#81c784 !important'\r\n        },\r\n        loader: {\r\n            width: '100%',\r\n            background: '#fff',\r\n            height: '400px',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        },\r\n        title: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            borderBottom: '1px #efefef solid',\r\n            alignItems: 'center',\r\n            width: '100%',\r\n            height: '65px',\r\n            padding: '0 30px'\r\n        },\r\n        titleLabel: {\r\n            fontSize: '18px',\r\n            color: '#333',\r\n            fontWeight: '600'\r\n        },\r\n        titleSupplier: {\r\n            fontSize: '18px',\r\n            position: 'relative',\r\n            '& .supplierDetails': {\r\n                background: '#fff',\r\n                boxShadow: '0 2px 5px 0px rgba(0, 0, 0, 0.16)',\r\n                fontSize: '13px',\r\n                position: 'absolute',\r\n                padding: '64px 28px 20px',\r\n                top: '-21px',\r\n                left: '50%',\r\n                zIndex: '9',\r\n                minWidth: '300px',\r\n                transform: 'translate(-50%, 0)',\r\n                '& .detailsWrap': {\r\n                    position: 'relative',\r\n                    paddingTop: '10px',\r\n                    '&:before': {\r\n                        content: '\"\"',\r\n                        background: 'url(' + Dot + ')',\r\n                        position: 'absolute',\r\n                        top: '0',\r\n                        left: '0',\r\n                        right: '0',\r\n                        height: '2px'\r\n                    }\r\n                },\r\n                '& .detailsList': {\r\n                    padding: '10px 0',\r\n                    '&:last-child': {\r\n                        paddingBottom: '0'\r\n                    },\r\n                    '& div:first-child': {\r\n                        color: '#666'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        titleClient: {\r\n            '& span': {\r\n                fontWeight: '600'\r\n            }\r\n        },\r\n        content: {\r\n            display: 'flex',\r\n            width: '100%'\r\n        },\r\n        padding: {\r\n            padding: '20px 30px'\r\n        },\r\n        leftSide: {\r\n            flexBasis: '30%',\r\n            borderRight: '1px #efefef solid'\r\n        },\r\n        subBlock: {\r\n            extend: 'padding',\r\n            borderBottom: '1px #efefef solid',\r\n            '&:last-child': {\r\n                border: 'none'\r\n            }\r\n        },\r\n        rightSide: {\r\n            flexBasis: '70%',\r\n            padding: '0 30px 20px'\r\n        },\r\n        subtitle: {\r\n            fontWeight: '600',\r\n            textTransform: 'uppercase',\r\n            marginBottom: '10px'\r\n        },\r\n        dataBox: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            '& ul:last-child': {\r\n                fontWeight: '600',\r\n                marginLeft: '30px',\r\n                textAlign: 'right'\r\n            },\r\n            '& li': {\r\n                lineHeight: '25px'\r\n            }\r\n        },\r\n        tabNav: {\r\n            padding: '15px 0',\r\n            borderBottom: '1px #f2f5f8 solid',\r\n            '& a': {\r\n                margin: '-15px 0',\r\n                padding: '15px 0',\r\n                marginRight: '40px',\r\n                color: '#9b9b9b',\r\n                '&.active': {\r\n                    color: '#12aaeb',\r\n                    borderBottom: '1px solid'\r\n                }\r\n            }\r\n        },\r\n        tabContent: {\r\n            '& .row:first-child': {\r\n                fontWeight: '600'\r\n            },\r\n            '& .row': {\r\n                '& > div': {\r\n                    textAlign: 'right'\r\n                },\r\n                '& > div:first-child': {\r\n                    textAlign: 'left'\r\n                }\r\n            }\r\n        },\r\n        tabWrapper: {\r\n            maxHeight: '232px',\r\n            overflowY: 'auto',\r\n            overflowX: 'hidden',\r\n            paddingRight: '30px'\r\n        },\r\n        summary: {\r\n            fontWeight: '600',\r\n            marginTop: '20px',\r\n            paddingRight: '30px',\r\n            textTransform: 'uppercase',\r\n            textAlign: 'right'\r\n        }\r\n    }),\r\n    withState('openDetails', 'setOpenDetails', false)\r\n)\r\n\r\nwithState('openDetails', 'setOpenDetails', false)\r\n\r\nconst StatCashboxOrderDetails = enhance((props) => {\r\n    const {classes,\r\n        loading,\r\n        data,\r\n        setOpenDetails,\r\n        openDetails,\r\n        close\r\n    } = props\r\n\r\n    const id = _.get(data, 'id')\r\n    const products = _.get(data, 'products')\r\n    const contact = _.get(data, 'contact')\r\n    const contactName = _.get(contact, 'name')\r\n    const contactEmail = _.get(contact, 'email') || 'N/A'\r\n    const contactPhone = _.get(contact, 'telephone') || 'N/A'\r\n\r\n    const client = _.get(data, 'client')\r\n    const clientPerson = _.get(client, 'name')\r\n    const deliveryType = _.get(data, 'deliveryType')\r\n\r\n    const percent = 100\r\n    const zero = 0\r\n    const deliveryPrice = _.get(data, 'deliveryPrice')\r\n    const discount = _.get(data, 'discountPrice')\r\n    const totalPrice = _.get(data, 'totalPrice')\r\n    const totalBalance = _.get(data, 'totalBalance')\r\n    const discountPrice = deliveryPrice * (discount / percent)\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className={classes.loader}>\r\n                <div>\r\n                    <CircularProgress size={40} thickness={4}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.title}>\r\n                <div className={classes.titleLabel}>Заказ №{id}</div>\r\n                <div className={classes.titleSupplier}>\r\n                    <a className={classes.dropdown} onMouseEnter={() => {\r\n                        setOpenDetails(true)\r\n                    }}>{clientPerson}</a>\r\n                    {openDetails &&\r\n                    <div className=\"supplierDetails\" onMouseLeave={() => {\r\n                        setOpenDetails(false)\r\n                    }}>\r\n                        <div className=\"detailsWrap\">\r\n                            <Row className=\"detailsList\">\r\n                                <Col xs={6}>Контактное лицо</Col>\r\n                                <Col xs={6}>{contactName}</Col>\r\n                            </Row>\r\n                            <Row className=\"detailsList\">\r\n                                <Col xs={6}>Телефон</Col>\r\n                                <Col xs={6}>{contactPhone}</Col>\r\n                            </Row>\r\n                            <Row className=\"detailsList\">\r\n                                <Col xs={6}>Email</Col>\r\n                                <Col xs={6}>{contactEmail}</Col>\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.content}>\r\n                <div className={classes.leftSide}>\r\n                    <div className={classes.subBlock}>\r\n                        <div className={classes.subtitle}>Баланс</div>\r\n                        <div className={classes.dataBox}>\r\n                            <ul>\r\n                                <li>Тип оплаты:</li>\r\n                                <li>Дата оплаты:</li>\r\n                                <li>Стоимость доставки:</li>\r\n                                <li>Скидка({discount}%):</li>\r\n                                <li>Оплачено:</li>\r\n                                <li>Остаток:</li>\r\n                            </ul>\r\n                            <ul>\r\n                                <li>Перечисление</li>\r\n                                <li>22.05.2017</li>\r\n                                <li>{deliveryPrice}</li>\r\n                                <li>{discountPrice}</li>\r\n                                <li>\r\n                                    <span className={classes.link}>500 000 UZS</span>\r\n                                </li>\r\n                                <li className={totalBalance > zero ? classes.red : classes.green}>{totalBalance}</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subBlock}>\r\n                        <div className={classes.subtitle}>Передача</div>\r\n                        <div className={classes.dataBox}>\r\n                            <ul>\r\n                                <li>Тип передачи:</li>\r\n                                <li>Статус передачи:</li>\r\n                            </ul>\r\n                            <ul>\r\n                                <li>{deliveryType > zero ? 'Доставка' : 'Самовывоз'}</li>\r\n                                <li className={classes.red}>не доставлен</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.rightSide}>\r\n                    <div className={classes.tab}>\r\n                        <div className={classes.tabNav}>\r\n                            <a className=\"active\">Список товаров</a>\r\n                            <a>Возврат</a>\r\n                        </div>\r\n                        <div className={classes.tabContent}>\r\n                            <div className={classes.tabWrapper}>\r\n                                <Row className=\"dottedList\">\r\n                                    <Col xs={6}>Товар</Col>\r\n                                    <Col xs={2}>Количество</Col>\r\n                                    <Col xs={2}>Цена (UZS)</Col>\r\n                                    <Col xs={2}>Сумма (UZS)</Col>\r\n                                </Row>\r\n\r\n                                {_.map(products, (item) => {\r\n                                    const product = _.get(item, 'product')\r\n                                    const productId = _.get(product, 'id')\r\n                                    const productName = _.get(product, 'name')\r\n                                    const price = _.get(item, 'price')\r\n                                    const cost = _.get(item, 'cost')\r\n                                    const amount = _.get(item, 'amount')\r\n                                    const measurement = _.get(product, ['measurement', 'name'])\r\n                                    return (\r\n                                        <Row className=\"dottedList\" key={productId}>\r\n                                            <Col xs={6}>{productName}</Col>\r\n                                            <Col xs={2}>{amount} {measurement}</Col>\r\n                                            <Col xs={2}>{price}</Col>\r\n                                            <Col xs={2}>{cost}</Col>\r\n                                        </Row>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n\r\n                            <div className={classes.summary}>Итого: {totalPrice} UZS</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button onTouchTap={close}>Close</button>\r\n        </div>\r\n    )\r\n})\r\n\r\nStatCashboxOrderDetails.propTypes = {\r\n    data: PropTypes.object.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    orderListData: PropTypes.object,\r\n    close: PropTypes.func.isRequired\r\n}\r\n\r\nexport default StatCashboxOrderDetails\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/StatCashbox/StatCashboxOrderDetails.js","import StatCashboxGridList from './StatCashboxGridList'\r\nconst ORDER_DETAIL_OPEN = 'openOrderDetail'\r\n\r\nexport {\r\n    ORDER_DETAIL_OPEN,\r\n    StatCashboxGridList\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/StatCashbox/index.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport injectSheet from 'react-jss'\r\nimport React from 'react'\r\nimport {compose} from 'recompose'\r\nimport PropTypes from 'prop-types'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport Paper from 'material-ui/Paper'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport StatDebtorsFilterForm from './StatDebtorsFilterForm'\r\nimport GridList from '../GridList'\r\nimport Container from '../Container'\r\nimport StatDebtorsOrderDetails from './StatDebtorsOrderDetails'\r\nimport SubMenu from '../SubMenu'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport MainStyles from '../Styles/MainStyles'\r\nimport {Link} from 'react-router'\r\nimport numberFormat from '../../helpers/numberFormat'\r\nimport getConfig from '../../helpers/getConfig'\r\nconst ONE = 1\r\nconst TWO = 2\r\nconst listHeaderClient = [\r\n    {\r\n        sorting: true,\r\n        name: 'name',\r\n        xs: 5,\r\n        title: 'Клиент'\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'щквукы',\r\n        xs: 2,\r\n        title: 'Заказы'\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'sum',\r\n        xs: 3,\r\n        title: 'Сумма долга'\r\n    },\r\n    {\r\n        sorting: true,\r\n        xs: 2,\r\n        name: 'time',\r\n        title: 'Прошло дней'\r\n    }\r\n]\r\n\r\nconst listHeaderOrder = [\r\n    {\r\n        sorting: true,\r\n        name: 'orderNumber',\r\n        xs: 1,\r\n        title: 'Заказ №'\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'name',\r\n        xs: 4,\r\n        title: 'Наименование'\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'sum1',\r\n        xs: 2,\r\n        title: 'Дата доставки'\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'sum1',\r\n        xs: 2,\r\n        title: 'Сумма заказа'\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'sum2',\r\n        xs: 3,\r\n        title: 'Сумма долга'\r\n    }\r\n]\r\n\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        infoBlock: {\r\n            width: '25%',\r\n            display: 'inline-block',\r\n            color: '#999',\r\n            fontWeight: '400',\r\n            fontSize: '13px',\r\n            lineHeight: '1.3',\r\n            borderLeft: '1px solid #efefef',\r\n            padding: '12px 15px 12px 15px',\r\n            alignItems: 'center',\r\n            '& span': {\r\n                color: '#333',\r\n                fontWeight: '600',\r\n                fontSize: '20px !important'\r\n            },\r\n            '&:first-child': {\r\n                border: 'none'\r\n            }\r\n        },\r\n        typeListStock: {\r\n            width: '100px',\r\n            height: 'calc(100% + 16px)',\r\n            marginTop: '-8px',\r\n            float: 'left',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            borderRight: '1px solid #fff',\r\n            backgroundColor: '#eceff5',\r\n            '& a': {\r\n                display: 'block',\r\n                width: '100%',\r\n                fontWeight: '600'\r\n            },\r\n            '& a.active': {\r\n                color: '#333',\r\n                cursor: 'text'\r\n            },\r\n            '&:last-child': {\r\n                border: 'none'\r\n            },\r\n            '&:first-child': {\r\n\r\n                marginLeft: '-38px'\r\n            }\r\n        },\r\n        titleLabel: {\r\n            fontSize: '18px',\r\n            color: '#333',\r\n            fontWeight: '700',\r\n            cursor: 'pointer'\r\n        },\r\n        bodyTitle: {\r\n            fontWeight: '600',\r\n            marginBottom: '10px'\r\n        },\r\n        loader: {\r\n            background: '#fff',\r\n            height: '400px',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        },\r\n        subTitle: {\r\n            fontWeight: '600',\r\n            '& div': {\r\n                display: 'inline-block'\r\n            },\r\n            '& div:last-child': {\r\n                marginLeft: '30px'\r\n            },\r\n            '& span': {\r\n                fontWeight: '800'\r\n            }\r\n        }\r\n    })),\r\n)\r\n\r\nconst StatDebtorsGridList = enhance((props) => {\r\n    const {\r\n        filter,\r\n        sumData,\r\n        filterDialog,\r\n        listData,\r\n        detailData,\r\n        classes,\r\n        orderData,\r\n        tabData,\r\n        getDocument\r\n    } = props\r\n\r\n    const actions = (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n\r\n    const orderListHeader = (\r\n        <Row style={{padding: '20px 30px 10px', fontWeight: '600'}}>\r\n            <Col xs={2}>Заказ №</Col>\r\n            <Col xs={2}>Кол-во товаров</Col>\r\n            <Col xs={2}>Дата доставки</Col>\r\n            <Col xs={3}>Сумма заказа</Col>\r\n            <Col xs={3}>Долг</Col>\r\n        </Row>\r\n    )\r\n\r\n    const orderList = _.map(_.get(orderData, ['orderList', 'results']), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const dateDelivery = _.get(item, 'dateDelivery') || 'N/A'\r\n        const status = _.get(item, 'status') || 'N/A'\r\n        const totalPrice = numberFormat(_.get(item, 'totalPrice'), getConfig('PRIMARY_CURRENCY'))\r\n        const totalBalance = numberFormat(_.get(item, 'totalBalance'), getConfig('PRIMARY_CURRENCY'))\r\n        return (\r\n            <div className=\"dottedListSpec\">\r\n                <Row key={id} style={{padding: '0 30px'}}>\r\n                    <Col xs={2}><a onClick={ () => {\r\n                        orderData.handleOrderClick(id)\r\n                    }}>{id}</a></Col>\r\n                    <Col xs={2}>{status}</Col>\r\n                    <Col xs={2}>{dateDelivery}</Col>\r\n                    <Col xs={3}>{totalPrice}</Col>\r\n                    <Col xs={3}>{totalBalance}</Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    const statDebtorsFilterDialog = (\r\n        <StatDebtorsFilterForm\r\n            getDocument={getDocument}\r\n            initialValues={filterDialog.initialValues}\r\n            filter={filter}\r\n            filterDialog={filterDialog}\r\n        />\r\n    )\r\n    const statDebtorsList = _.map(_.get(listData, 'data'), (item) => {\r\n        const id = _.get(item, ['client', 'id'])\r\n        const name = _.get(item, ['client', 'name'])\r\n        const order = numberFormat(_.get(item, ['orders']), 'заказа')\r\n        const debt = numberFormat(_.get(item, ['totalBalance']), getConfig('PRIMARY_CURRENCY'))\r\n        const time = numberFormat(_.get(item, ['expiredDays']), 'дней')\r\n        return (\r\n            <Row key={id}>\r\n                <Col xs={5}>\r\n                    <Link to={{\r\n                        pathname: sprintf(ROUTES.STATDEBTORS_ITEM_PATH, id),\r\n                        query: filter.getParams()\r\n                    }}>{name}</Link>\r\n                </Col>\r\n                <Col xs={2}>{order}</Col>\r\n                <Col xs={3}>{debt}</Col>\r\n                <Col xs={2}>{time}</Col>\r\n            </Row>\r\n        )\r\n    })\r\n    const statDebtorsListByOrder = _.map(_.get(orderData, ['orderList', 'results']), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const name = _.get(item, ['client', 'name'])\r\n        const date = _.get(item, 'dateDelivery')\r\n        const orderSum = _.get(item, 'totalPrice')\r\n        const debt = _.get(item, 'totalBalance')\r\n        return (\r\n            <Row key={id}>\r\n                <Col xs={1}>{id}</Col>\r\n                <Col xs={4}><a\r\n                    onClick={ () => {\r\n                        orderData.handleOrderClick(id)\r\n                    }}>{name}</a>\r\n                </Col>\r\n                <Col xs={2}>{date}</Col>\r\n                <Col xs={2}>{orderSum}</Col>\r\n                <Col xs={3}>{debt}</Col>\r\n            </Row>\r\n        )\r\n    })\r\n\r\n    const statDebtorsItem = _.find(_.get(listData, 'data'), (o) => {\r\n        return _.get(o, ['client', 'id']) === _.toInteger(_.get(detailData, 'id'))\r\n    })\r\n\r\n    const statDebtorsDetail = (\r\n        <div key={_.get(detailData, 'id')} style={{width: '100%'}}>\r\n            {_.get(detailData, 'detailLoading')\r\n                ? <div style={{textAlign: 'center'}}>\r\n                    <CircularProgress/>\r\n                </div>\r\n                : <div>\r\n                    <div className={classes.title} style={{width: 'initial'}}>\r\n                        <div className={classes.titleLabel}\r\n                            onClick={detailData.handleCloseDetail}>{_.get(statDebtorsItem, ['client', 'name'])}</div>\r\n                        <div className={classes.subTitle}>\r\n                            <div>\r\n                                Прошло: <span>{_.get(statDebtorsItem, 'expiredDays')} дней</span>\r\n                            </div>\r\n                            <div>\r\n                                Сумма долга:\r\n                                <span>{_.get(statDebtorsItem, 'totalBalance')} {getConfig('PRIMARY_CURRENCY')}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    { _.get(orderData, 'orderLoading')\r\n                        ? <CircularProgress size={40} thickness={4}\r\n                                            style={{marginLeft: 'calc(50% - 50px)', padding: '30px 0'}}/>\r\n                        : <div style={{paddingBottom: '20px'}}>\r\n                            <div>{orderListHeader}</div>\r\n                            {orderList}\r\n                        </div>\r\n                    }\r\n                </div>}\r\n        </div>\r\n    )\r\n\r\n    const list = (_.get(tabData, 'tab') === ONE) ? {\r\n        header: listHeaderClient,\r\n        list: statDebtorsList,\r\n        loading: _.get(listData, 'listLoading')\r\n    } : {\r\n        header: listHeaderOrder,\r\n        list: statDebtorsListByOrder,\r\n        loading: _.get(listData, 'listLoading')\r\n    }\r\n\r\n    const totalDebtors = numberFormat(_.get(sumData, ['data', 'debtors']))\r\n    const totalOrders = numberFormat(_.get(sumData, ['data', 'orders']))\r\n    const totalBalance = numberFormat(_.get(sumData, ['data', 'totalBalance']), getConfig('PRIMARY_CURRENCY'))\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.STATDEBTORS_LIST_URL}/>\r\n            <Paper zDepth={1} style={{\r\n                margin: '0 0 20px',\r\n                padding: '8px 30px',\r\n                display: 'flex'\r\n            }}>\r\n                <Col xs={3}>\r\n                    <div className={classes.typeListStock}\r\n                         style={_.get(tabData, 'tab') === ONE ? {background: '#eceff5'} : {background: '#fff'}}>\r\n                        <a onClick={() => {\r\n                            tabData.handleClick(ONE)\r\n                        }} className={ _.get(tabData, 'tab') === ONE && 'active'}>Вид<br/>по клиенту</a>\r\n                    </div>\r\n                    <div className={classes.typeListStock}\r\n                         style={_.get(tabData, 'tab') === TWO ? {background: '#eceff5'} : {background: '#fff'}}>\r\n                        <a onClick={() => {\r\n                            tabData.handleClick(TWO)\r\n                        }} className={ _.get(tabData, 'tab') === TWO && 'active'}>Вид<br/>по заказу</a>\r\n                    </div>\r\n                </Col>\r\n                <Col xs={9} style={{textAlign: 'right'}}>\r\n                    {_.get(sumData, 'sumLoading')\r\n                        ? <div>\r\n                            <CircularProgress size={40} thickness={4}\r\n                                              style={{marginLeft: 'calc(50% - 50px)', padding: '30px 0'}}/>\r\n                        </div>\r\n                        : <div>\r\n                            <div className={classes.infoBlock}>\r\n                                Всего должников:<br />\r\n                                <span>{totalDebtors}</span>\r\n                            </div>\r\n                            <div className={classes.infoBlock}>\r\n                                Всего заказов:<br />\r\n                                <span>{totalOrders}</span>\r\n                            </div>\r\n                            <div className={classes.infoBlock}>\r\n                                Общий долг:<br />\r\n                                <span>{totalBalance}</span>\r\n                            </div>\r\n                        </div>}\r\n                </Col>\r\n            </Paper>\r\n\r\n            <GridList\r\n                filter={filter}\r\n                filterDialog={statDebtorsFilterDialog}\r\n                list={list}\r\n                detail={statDebtorsDetail}\r\n                actionsDialog={actions}\r\n            />\r\n\r\n            <StatDebtorsOrderDetails\r\n                open={_.get(orderData, 'orderDetailOpen')}\r\n                data={_.get(orderData, 'orderDetail') || {}}\r\n                loading={_.get(orderData, 'detailLoading')}\r\n                handleOrderClick={orderData.handleOrderClick}\r\n                close={orderData.handleOrderDetailClose}\r\n            />\r\n        </Container>\r\n    )\r\n})\r\n\r\nStatDebtorsGridList.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object,\r\n    tabData: PropTypes.object,\r\n    orderData: PropTypes.object\r\n}\r\n\r\nexport default StatDebtorsGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/StatDebtors/StatDebtorsGridList.js","import StatDebtorsGridList from './StatDebtorsGridList'\r\n\r\nimport {STATDEBTORS_FILTER_KEY, STATDEBTORS_FILTER_OPEN} from './StatDebtorsFilterForm'\r\nimport {STAT_DEBTORS_ORDER_D} from './StatDebtorsOrderDetails'\r\n\r\nconst ORDER_DETAIL_OPEN = 'openOrderDetail'\r\n\r\nexport {\r\n    STAT_DEBTORS_ORDER_D,\r\n    STATDEBTORS_FILTER_KEY,\r\n    STATDEBTORS_FILTER_OPEN,\r\n    ORDER_DETAIL_OPEN,\r\n    StatDebtorsGridList\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/StatDebtors/index.js","import _ from 'lodash'\r\nimport injectSheet from 'react-jss'\r\nimport React from 'react'\r\nimport {compose} from 'recompose'\r\nimport PropTypes from 'prop-types'\r\nimport Paper from 'material-ui/Paper'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport ReactHighcharts from 'react-highcharts'\r\nimport GridList from '../GridList'\r\nimport Container from '../Container'\r\nimport SubMenu from '../SubMenu'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport StatManufactureCreateDialog from './StatManufactureCreateDialog'\r\nimport Glue from '../Images/glue.png'\r\nimport Cylindrical from '../Images/cylindrical.png'\r\nimport Press from '../Images/press.png'\r\nimport Cut from '../Images/cut.png'\r\nimport Badge from '../Images/badge.png'\r\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\r\n\r\nconst listHeader = [\r\n    {\r\n        sorting: true,\r\n        name: 'name',\r\n        xs: 8,\r\n        title: 'Наименование'\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'sum',\r\n        xs: 2,\r\n        title: 'Количество'\r\n    },\r\n    {\r\n        sorting: true,\r\n        xs: 2,\r\n        name: 'time',\r\n        title: 'Эффективность'\r\n    }\r\n]\r\nconst enhance = compose(\r\n    injectSheet({\r\n        infoBlock: {\r\n            width: '25%',\r\n            display: 'inline-block',\r\n            color: '#999',\r\n            fontWeight: '400',\r\n            fontSize: '13px',\r\n            lineHeight: '1.3',\r\n            borderLeft: '1px solid #efefef',\r\n            padding: '12px 15px 12px 15px',\r\n            alignItems: 'center',\r\n            '& span': {\r\n                color: '#333',\r\n                fontWeight: '700',\r\n                fontSize: '24px !important'\r\n            },\r\n            '&:first-child': {\r\n                border: 'none'\r\n            }\r\n        },\r\n        typeListStock: {\r\n            width: '100px',\r\n            height: 'calc(100% + 16px)',\r\n            marginTop: '-8px',\r\n            float: 'left',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            borderRight: '1px solid #fff',\r\n            backgroundColor: '#eceff5',\r\n            '& a': {\r\n                display: 'block',\r\n                width: '100%',\r\n                fontWeight: '600'\r\n            },\r\n            '& a.active': {\r\n                color: '#333',\r\n                cursor: 'text'\r\n            },\r\n            '&:last-child': {\r\n                border: 'none'\r\n            },\r\n            '&:first-child': {\r\n\r\n                marginLeft: '-38px'\r\n            }\r\n        },\r\n        titleLabel: {\r\n            fontSize: '18px',\r\n            color: '#333',\r\n            fontWeight: '700'\r\n        },\r\n        bodyTitle: {\r\n            fontWeight: '600',\r\n            marginBottom: '10px'\r\n        },\r\n        link: {\r\n            color: '#12aaeb !important',\r\n            borderBottom: '1px dashed',\r\n            fontWeight: '400 !important'\r\n        },\r\n        loader: {\r\n            background: '#fff',\r\n            height: '400px',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        },\r\n        manufactures: {\r\n            margin: '0 -28px',\r\n            padding: '20px 28px 0',\r\n            borderBottom: '1px #e0e0e0 solid'\r\n        },\r\n        tabWrapper: {\r\n            display: 'flex',\r\n            width: '100%',\r\n            justifyContent: 'space-between'\r\n        },\r\n        tab: {\r\n            cursor: 'pointer',\r\n            padding: '20px',\r\n            height: '100%',\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n        },\r\n        activeTab: {\r\n            paddingBottom: '20px',\r\n            flexBasis: '20%',\r\n            marginRight: '15px',\r\n            borderBottom: '3px transparent solid',\r\n            '&:last-child': {\r\n                margin: '0'\r\n            }\r\n        },\r\n        tabTitle: {\r\n            fontWeight: '600',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            marginBottom: '0',\r\n            '& img': {\r\n                width: '24px',\r\n                marginRight: '10px'\r\n            }\r\n        },\r\n        statTitle: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            fontWeight: 'bold',\r\n            padding: '20px 0',\r\n            borderBottom: '1px #e0e0e0 solid',\r\n            '& a': {\r\n                fontWeight: '600'\r\n            }\r\n        },\r\n        diagram: {\r\n            padding: '20px 0'\r\n        },\r\n        divEffectBlock: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            width: '100%',\r\n            margin: '20px 0',\r\n            '& div': {\r\n                width: '50%',\r\n                fontSize: '13px',\r\n                fontWeight: 600,\r\n                color: '#666'\r\n            },\r\n            '& h3': {\r\n                fontSize: '36px',\r\n                color: '#333',\r\n                textAlign: 'center'\r\n            },\r\n            '& h3 span': {\r\n                fontSize: '14px'\r\n            },\r\n            '& div div': {\r\n                width: '100%'\r\n            },\r\n            '& div div div': {\r\n                width: '100%'\r\n            }\r\n        }\r\n    }),\r\n)\r\n\r\nconst StatManufactureGridList = enhance((props) => {\r\n    const {\r\n        filter,\r\n        createDialog,\r\n        listData,\r\n        detailData,\r\n        classes\r\n    } = props\r\n\r\n    const detailId = _.get(detailData, 'id')\r\n    const glue = 3\r\n    const cylindrical = 4\r\n    const press = 6\r\n    const cut = 7\r\n    const badge = 8\r\n    const manufactureList = _.map(_.get(listData, 'data'), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const manufName = _.get(item, 'name')\r\n        return (\r\n        <div key={id} className={classes.activeTab} style={ detailId === id ? {borderBottom: '3px #12aaeb solid'} : {}}>\r\n            <Paper key={id} zDepth={1} className={classes.tab}\r\n                   style={ detailId === id ? {backgroundColor: '#f2f5f8', cursor: 'auto'} : {}}\r\n                   onClick={() => {\r\n                       listData.handleClickItem(id)\r\n                   }}>\r\n                <div className={classes.tabContent}>\r\n                    <div className={classes.tabTitle}>\r\n                        { id === glue ? <img src={Glue}/> : (\r\n                            id === cylindrical ? <img src={Cylindrical}/> : (\r\n                                id === press ? <img src={Press}/> : (\r\n                                    id === cut ? <img src={Cut}/> : (\r\n                                        id === badge ? <img src={Badge}/> : '')\r\n                                )\r\n                            )\r\n                        )}\r\n                        {manufName}\r\n                    </div>\r\n\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n        )\r\n    })\r\n\r\n    const statManufactureList = _.map(_.get(listData, 'data'), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const name = 'Наименование продукта'\r\n        const amount = '1000 шт'\r\n        const efficency = '88%'\r\n        return (\r\n            <Row key={id}>\r\n                <Col xs={8}>{name}</Col>\r\n                <Col xs={2}>{amount}</Col>\r\n                <Col xs={2}>\r\n                    <a className={classes.link} onClick={createDialog.handleOpenCreateDialog}>{efficency}</a>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    })\r\n    const manufName = _.get(detailData, ['data', 'name'])\r\n\r\n    const sempl = 1\r\n\r\n    const list = {\r\n        header: listHeader,\r\n        list: statManufactureList,\r\n        loading: _.get(listData, 'listLoading')\r\n    }\r\n    const configCercle = {\r\n        chart: {\r\n            type: 'pie',\r\n            backgroundColor: 'transparent',\r\n            height: 150,\r\n            margin: ['0', '30', '0', '0']\r\n        },\r\n        legend: {\r\n            enabled: false\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n\r\n        plotOptions: {\r\n            pie: {\r\n                slicedOffset: 0,\r\n                innerSize: '70%',\r\n                size: '100%',\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                states: {\r\n                    hover: {\r\n                        enabled: false\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        tooltip: {\r\n            enabled: false\r\n        },\r\n        title: {\r\n            style: {\r\n                display: 'none'\r\n            }\r\n        },\r\n\r\n        series: [{\r\n            data: [{\r\n                data: 'Эффективность',\r\n                y: 80,\r\n                color: '#028eff'\r\n            }, {\r\n                data: 'Отклонение',\r\n                y: 20,\r\n                color: '#ccc'\r\n            }]\r\n        }]\r\n    }\r\n\r\n    const config = {\r\n        chart: {\r\n            type: 'areaspline',\r\n            height: 350\r\n        },\r\n        title: {\r\n            text: '',\r\n            style: {\r\n                display: 'none'\r\n            }\r\n        },\r\n        legend: {\r\n            enabled: false\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        xAxis: {\r\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n            tickmarkPlacement: 'on',\r\n            title: {\r\n                text: '',\r\n                style: {\r\n                    display: 'none'\r\n                }\r\n            }\r\n        },\r\n        yAxis: {\r\n            title: {\r\n                text: '',\r\n                style: {\r\n                    display: 'none'\r\n                }\r\n            },\r\n            plotLines: [{\r\n                value: 0,\r\n                width: 1,\r\n                color: '#808080'\r\n            }]\r\n        },\r\n        plotOptions: {\r\n            areaspline: {\r\n                fillOpacity: 0.1,\r\n                pointPlacement: 'on',\r\n                marker: {\r\n                    enabled: true\r\n                }\r\n            }\r\n        },\r\n        tooltip: {\r\n            shared: true,\r\n            valueSuffix: ' %',\r\n            backgroundColor: '#363636',\r\n            style: {\r\n                color: '#fff'\r\n            },\r\n            borderRadius: 2,\r\n            borderWidth: 0,\r\n            enabled: true,\r\n            shadow: false,\r\n            useHTML: true,\r\n            crosshairs: true,\r\n            pointFormat: '{series.name}: <b>{point.y}</b><br/>в отношении к BoM<br/>'\r\n        },\r\n        series: [{\r\n            marker: {\r\n                symbol: 'circle'\r\n            },\r\n            name: 'Эффективность',\r\n            data: [sempl + sempl + sempl + sempl, sempl + sempl + sempl, sempl + sempl + sempl + sempl],\r\n            color: '#7560a5'\r\n\r\n        }, {\r\n            marker: {\r\n                symbol: 'circle'\r\n            },\r\n            name: 'BoM',\r\n            data: [sempl + sempl + sempl, sempl + sempl + sempl + sempl, sempl + sempl + sempl],\r\n            color: '#43d0e3'\r\n        }]\r\n    }\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.STAT_MANUFACTURE_LIST_URL}/>\r\n            <div className={classes.manufactures}>\r\n                <div className={classes.tabWrapper}>\r\n                    {manufactureList}\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.stats}>\r\n                <div className={classes.statTitle}>\r\n                    <div>{manufName}</div>\r\n                    <div><a>6 мая 2017 г. - 12 мая 2017 г. <KeyboardArrowDown color=\"#12aaeb\" style={{width: '13px', height: '13px'}}/></a></div>\r\n                </div>\r\n                <Row className={classes.diagram}>\r\n                    <Col xs={9}>\r\n                        <ReactHighcharts config ={config} />\r\n                    </Col>\r\n                    <Col xs={3}>\r\n                        <div style={{background: '#f1f5f8', padding: '25px', height: '82%'}}>\r\n                            <h2>Эффективность</h2>\r\n                            <div className={classes.divEffectBlock}>\r\n                                <div><ReactHighcharts config ={configCercle} /></div>\r\n                                <div>% эффективности<br/>относительно BoM</div>\r\n                            </div>\r\n                            <div className={classes.divEffectBlock}>\r\n                                <div><h3>1000 <span>кг</span></h3></div>\r\n                                <div>Произведено<br/>за период</div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            <GridList\r\n                key={_.get(detailData, 'id')}\r\n                filter={filter}\r\n                list={list}\r\n            />\r\n\r\n            <StatManufactureCreateDialog\r\n                open={createDialog.openCreateDialog}\r\n                loading={createDialog.createLoading}\r\n                onClose={createDialog.handleCloseCreateDialog}\r\n            />\r\n        </Container>\r\n    )\r\n})\r\n\r\nStatManufactureGridList.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object,\r\n    orderData: PropTypes.object,\r\n    createDialog: PropTypes.shape({\r\n        createLoading: PropTypes.bool.isRequired,\r\n        openCreateDialog: PropTypes.bool.isRequired,\r\n        handleOpenCreateDialog: PropTypes.func.isRequired,\r\n        handleCloseCreateDialog: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default StatManufactureGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/StatManufacture/StatManufactureGridList.js","import StatManufactureGridList from './StatManufactureGridList'\nimport {STAT_MANUFACTURE_CREATE_DIALOG_OPEN} from './StatManufactureCreateDialog'\n\nconst STAT_MANUFACTURE_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nconst STAT_MANUFACTURE_DELETE_DIALOG_OPEN = 'openDeleteDialog'\nconst ORDER_DETAIL_OPEN = 'openOrderDetail'\n\nexport {\n    STAT_MANUFACTURE_CREATE_DIALOG_OPEN,\n    STAT_MANUFACTURE_UPDATE_DIALOG_OPEN,\n    STAT_MANUFACTURE_DELETE_DIALOG_OPEN,\n    ORDER_DETAIL_OPEN,\n    StatManufactureGridList\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/components/StatManufacture/index.js","import _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport {Link} from 'react-router'\r\nimport moment from 'moment'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport GridList from '../GridList'\r\nimport Container from '../Container'\r\nimport SubMenu from '../SubMenu'\r\nimport injectSheet from 'react-jss'\r\nimport {compose, withState} from 'recompose'\r\nimport MainStyles from '../Styles/MainStyles'\r\nimport InComing from 'material-ui/svg-icons/navigation/arrow-upward'\r\nimport OutComing from 'material-ui/svg-icons/navigation/arrow-downward'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport Paper from 'material-ui/Paper'\r\nimport numberFormat from '../../helpers/numberFormat'\r\nimport StatStockFilterForm from './StatStockFilterForm'\r\nimport getConfig from '../../helpers/getConfig'\r\n\r\nconst remainderHeader = [\r\n    {\r\n        sorting: true,\r\n        name: 'name',\r\n        xs: 2,\r\n        title: '№'\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'title',\r\n        xs: 5,\r\n        title: 'Наименование'\r\n    },\r\n    {\r\n        sorting: true,\r\n        xs: 3,\r\n        name: 'balance',\r\n        title: 'Остаток'\r\n    },\r\n    {\r\n        sorting: true,\r\n        xs: 2,\r\n        name: 'money',\r\n        title: 'На сумму'\r\n    }\r\n]\r\nconst transactionHeader = [\r\n    {\r\n        sorting: true,\r\n        name: 'name',\r\n        xs: 2,\r\n        title: 'Баркод'\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'type',\r\n        xs: 5,\r\n        title: 'Наименование'\r\n    },\r\n    {\r\n        sorting: true,\r\n        xs: 3,\r\n        name: 'balance',\r\n        title: 'Транзакция'\r\n    },\r\n    {\r\n        sorting: true,\r\n        xs: 2,\r\n        name: 'money',\r\n        title: 'Обьем'\r\n    }\r\n]\r\n\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        stocksList: {\r\n            margin: '10px 0 0',\r\n            '& li': {\r\n                display: 'inline-block',\r\n                fontSize: '0',\r\n                padding: '10px 0px 15px',\r\n                marginRight: '30px',\r\n                borderBottom: '3px solid #f2f5f8',\r\n                '& a': {\r\n                    fontSize: '13px',\r\n                    color: '#999',\r\n                    fontWeight: '600'\r\n                }\r\n            },\r\n            '& li.active': {\r\n                color: '#333',\r\n                borderBottom: '3px solid #129fdd',\r\n                '& a': {\r\n                    color: '#333',\r\n                    cursor: 'text'\r\n                }\r\n            }\r\n        },\r\n        infoBlock: {\r\n            width: '25%',\r\n            display: 'inline-block',\r\n            color: '#999',\r\n            fontWeight: '400',\r\n            fontSize: '13px',\r\n            lineHeight: '1.3',\r\n            borderLeft: '1px solid #efefef',\r\n            padding: '12px 15px 12px 15px',\r\n            alignItems: 'center',\r\n            '& span': {\r\n                color: '#333',\r\n                fontWeight: '700',\r\n                fontSize: '24px !important'\r\n            },\r\n            '&:first-child': {\r\n                border: 'none'\r\n            }\r\n        },\r\n        typeListStock: {\r\n            width: '100px',\r\n            height: 'calc(100% + 16px)',\r\n            marginTop: '-8px',\r\n            float: 'left',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            borderRight: '1px solid #fff',\r\n            backgroundColor: '#eceff5',\r\n            '& a': {\r\n                display: 'block',\r\n                width: '100%',\r\n                fontWeight: '600'\r\n            },\r\n            '& a.active': {\r\n                color: '#333',\r\n                cursor: 'text'\r\n            },\r\n            '&:last-child': {\r\n                border: 'none'\r\n            },\r\n            '&:first-child': {\r\n\r\n                marginLeft: '-38px'\r\n            }\r\n        },\r\n        loader: {\r\n            background: '#fff',\r\n            height: '400px',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        },\r\n        statLoader: {\r\n            background: '#fff',\r\n            height: '71px',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        }\r\n    })),\r\n    withState('showTransaction', 'setShowTransaction', false)\r\n)\r\n\r\nconst StatStockGridList = enhance((props) => {\r\n    const {\r\n        filter,\r\n        filterDialog,\r\n        listData,\r\n        detailData,\r\n        classes,\r\n        statStockData,\r\n        getDocument\r\n    } = props\r\n\r\n    const handleClickTapChange = _.get(listData, 'handleClickTapChange')\r\n    const statStockFilterDialog = (\r\n        <StatStockFilterForm\r\n            getDocument={getDocument}\r\n            isBalance={_.get(listData, 'tab')}\r\n            initialValues={filterDialog.initialValues}\r\n            filter={filter}\r\n            filterDialog={filterDialog}\r\n        />\r\n    )\r\n\r\n    const statStockDetail = (\r\n        <span>a</span>\r\n    )\r\n    const remainderStockList = _.map(_.get(listData, 'remainderList'), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const title = _.get(item, 'title')\r\n        const cost = numberFormat(_.get(item, ['totalPrice']), getConfig('PRIMARY_CURRENCY'))\r\n        const balance = numberFormat(_.get(item, 'balance'), _.get(item, ['measurement', 'name']))\r\n        return (\r\n            <Row key={id}>\r\n                <Col xs={2}>{id}</Col>\r\n                <Col xs={5}>{title}</Col>\r\n                <Col xs={3}>{balance}</Col>\r\n                <Col xs={2}>{cost}</Col>\r\n            </Row>\r\n        )\r\n    })\r\n\r\n    const ZERO = 0\r\n\r\n    const transactionStockList = _.map(_.get(listData, 'transactionList'), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const barcode = _.get(item, 'barcode')\r\n        const amount = _.get(item, 'amount')\r\n        const name = _.get(item, ['product', 'name'])\r\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY - HH:mm:ss')\r\n        const balance = numberFormat(_.get(item, 'amount'), _.get(item, ['product', 'measurement', 'name']))\r\n\r\n        return (\r\n            <Row key={id}>\r\n                <Col xs={2}><strong>{barcode}</strong></Col>\r\n                <Col xs={5}>{name}</Col>\r\n                <Col xs={3}>{createdDate}\r\n                    <span className={(amount < ZERO) ? 'redFont' : 'greenFont'}\r\n                          style={{top: '2px', position: 'relative', left: '3px'}}>\r\n                        {(amount < ZERO) ? <OutComing style={{width: '14px', height: '14px'}}/>\r\n                            : <InComing style={{width: '14px', height: '14px'}}/>}\r\n                    </span>\r\n                </Col>\r\n                <Col xs={2}>{balance}</Col>\r\n            </Row>\r\n        )\r\n    })\r\n\r\n    const balanceTab = 1\r\n    const transactionTab = 2\r\n    const tab = _.get(listData, 'tab')\r\n\r\n    const list = (tab === transactionTab) ? {\r\n        header: transactionHeader,\r\n        list: transactionStockList,\r\n        loading: _.get(listData, 'transactionLoading')\r\n    } : {\r\n        header: remainderHeader,\r\n        list: remainderStockList,\r\n        loading: _.get(listData, 'remainderLoading')\r\n    }\r\n\r\n    const handleClick = _.get(listData, 'handleClickStatStock')\r\n\r\n    const stockList = _.map(_.get(listData, 'stockList'), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const name = _.get(item, 'name')\r\n        return (\r\n                <li key={id}\r\n                    className={_.get(detailData, 'id') === id ? 'active' : ''}>\r\n                    <span onClick={() => { handleClick(id) }}>{name}</span>\r\n                </li>\r\n        )\r\n    })\r\n    const amountProduct = _.get(statStockData, ['statStockData', 'productCount'])\r\n    const amountTypeProduct = _.get(statStockData, ['statStockData', 'productTypeCount'])\r\n    const totalPriceProduct = numberFormat(_.get(statStockData, ['statStockData', 'totalPrice']), getConfig('PRIMARY_CURRENCY'))\r\n\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.STATSTOCK_LIST_URL}/>\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <div className={classes.stocksList}>\r\n                        <li className={ !_.get(detailData, 'id') ? 'active' : ''}>\r\n                            <Link to={{\r\n                                pathname: sprintf(ROUTES.STATSTOCK_ITEM_PATH, ZERO),\r\n                                query: filter.getParams()\r\n                            }}>Все склады</Link>\r\n                        </li>\r\n                        {stockList}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Paper zDepth={1} style={{\r\n                margin: '0 0 20px',\r\n                padding: '8px 30px',\r\n                display: 'flex'\r\n            }}>\r\n                <Col xs={3}>\r\n                    <div className={classes.typeListStock} style={tab === balanceTab ? {background: '#eceff5'} : {background: '#fff'}}>\r\n                        <a onClick={() => { handleClickTapChange(balanceTab) }}\r\n                           className={tab === balanceTab ? 'active' : ''}>Остаток<br/>товара</a>\r\n                    </div>\r\n                    <div className={classes.typeListStock} style={tab === transactionTab ? {background: '#eceff5'} : {background: '#fff'}}>\r\n                        <a onClick={() => { handleClickTapChange(transactionTab) }}\r\n                           className={tab === transactionTab ? 'active' : ''}>Движение<br/>товаров</a>\r\n                    </div>\r\n                </Col>\r\n                <Col xs={9} style={{textAlign: 'right'}}>\r\n                    {_.get(statStockData, 'statStockDataLoading')\r\n                        ? <div className={classes.statLoader}>\r\n                            <CircularProgress size={40} thickness={4}/>\r\n                        </div>\r\n                        : <div>\r\n                            <div className={classes.infoBlock}>\r\n                                Товара на складе<br />\r\n                                <span>{amountProduct}</span>\r\n                            </div>\r\n                            <div className={classes.infoBlock}>\r\n                                Видов продукции:<br />\r\n                                <span>{amountTypeProduct}</span>\r\n                            </div>\r\n                            <div className={classes.infoBlock}>\r\n                                Товаров на сумму:<br />\r\n                                <span>{totalPriceProduct}</span>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </Col>\r\n            </Paper>\r\n\r\n            <GridList\r\n                filter={filter}\r\n                filterDialog={statStockFilterDialog}\r\n                list={list}\r\n                detail={statStockDetail}\r\n            />\r\n        </Container>\r\n    )\r\n})\r\n\r\nStatStockGridList.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object,\r\n    statStockData: PropTypes.object.isRequired,\r\n    handleClickStock: PropTypes.object.isRequired\r\n}\r\n\r\nexport default StatStockGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/StatStock/StatStockGridList.js","import StatStockGridList from './StatStockGridList'\r\n\r\nimport {STATSTOCK_FILTER_KEY, STATSTOCK_FILTER_OPEN} from './StatStockFilterForm'\r\n\r\nexport {\r\n    STATSTOCK_FILTER_KEY,\r\n    STATSTOCK_FILTER_OPEN,\r\n    StatStockGridList\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/StatStock/index.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Dialog from 'material-ui/Dialog'\r\n\r\nimport {reduxForm} from 'redux-form'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport MainStyles from '../Styles/MainStyles'\r\nimport {Row} from 'react-flexbox-grid'\r\n\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        },\r\n        content: {\r\n            width: '100%',\r\n            display: 'block'\r\n        },\r\n        topBlock: {\r\n            padding: '20px 30px 0px 30px',\r\n            '&:last-child': {\r\n                border: 'none'\r\n            },\r\n            '& .row': {\r\n                lineHeight: '35px',\r\n                padding: '0 10px',\r\n                '& > div:first-child': {\r\n                    flexBasis: '25%',\r\n                    maxWidth: '25%'\r\n                },\r\n                '& > div:last-child': {\r\n                    fontWeight: '600',\r\n                    flexBasis: '75%',\r\n                    maxWidth: '75%'\r\n                }\r\n            }\r\n        },\r\n        downBlock: {\r\n            padding: '20px 30px',\r\n            '& .row': {\r\n                lineHeight: '35px',\r\n                padding: '0 10px',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                '& > div:last-child': {\r\n                    textAlign: 'right',\r\n                    fontWeight: '600'\r\n                }\r\n            },\r\n            '& .row:last-child': {\r\n                fontWeight: '600',\r\n                borderTop: '1px #efefef solid'\r\n            }\r\n        },\r\n        dottedList: {\r\n            padding: '10px 0'\r\n        },\r\n        subTitle: {\r\n            paddingBottom: '8px',\r\n            fontStyle: 'italic',\r\n            fontWeight: '400'\r\n        }\r\n    })),\r\n    reduxForm({\r\n        form: 'PriceCreateForm',\r\n        enableReinitialize: true\r\n    })\r\n)\r\n\r\nconst StatAgentDialog = enhance((props) => {\r\n    const {open, loading, onClose, classes} = props\r\n\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            className={classes.dialog}\r\n            contentStyle={loading ? {width: '400px'} : {width: '500px'}}\r\n            bodyStyle={{minHeight: 'auto'}}\r\n            bodyClassName={classes.popUp}>\r\n            <div className={classes.titleContent}>\r\n                <div>\r\n                Поставка <span style={{fontSize: '14px'}}> &#8470;</span>\r\n                </div>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.content}>\r\n                <div className={classes.topBlock}>\r\n                    <Row>\r\n                        <div>Товар</div>\r\n                        <div>Миф морозная свежесть (жесткая упаковка)</div>\r\n                    </Row>\r\n                    <Row>\r\n                        <div>Поставщик:</div>\r\n                        <div>ООО \"Эмомали Рахмон\"</div>\r\n                    </Row>\r\n                    <Row className=\"dottedList\" style={{paddingBottom: '10px'}}>\r\n                        <div>Дата поставки:</div>\r\n                        <div>22 апр, 2017</div>\r\n                    </Row>\r\n                </div>\r\n                <div className={classes.downBlock}>\r\n                    <div className={classes.subTitle}>Расчет себестоимости за еденицу товара:</div>\r\n                        <Row>\r\n                            <div>Стоимость товара</div>\r\n                            <div>20 000</div>\r\n                        </Row>\r\n                        <Row>\r\n                            <div>Стоимость товара</div>\r\n                            <div>20 000</div>\r\n                        </Row>\r\n                        <Row>\r\n                            <div>Стоимость товара</div>\r\n                            <div>20 000</div>\r\n                        </Row>\r\n\r\n                    <Row>\r\n                        <div>Себестоимость товара</div>\r\n                        <div>29 000</div>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\n\r\nStatAgentDialog.propTyeps = {\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool\r\n}\r\n\r\nexport default StatAgentDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Statistics/StatAgentDialog.js","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport Container from '../Container'\r\nimport Paper from 'material-ui/Paper'\r\nimport injectSheet from 'react-jss'\r\nimport {compose} from 'recompose'\r\nimport {reduxForm, Field} from 'redux-form'\r\nimport ReactHighcharts from 'react-highcharts'\r\nimport UsersSearchField from '../ReduxForm/Users/UsersSearchField'\r\nimport DateToDateField from '../ReduxForm/Basic/DateToDateField'\r\nimport StatAgentDialog from './StatAgentDialog'\r\nimport StatSideMenu from './StatSideMenu'\r\nimport SubMenu from '../SubMenu'\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            padding: '20px 30px',\r\n            '& .row': {\r\n                margin: '0rem !important',\r\n                '& div': {\r\n                    lineHeight: '55px'\r\n                }\r\n            }\r\n        },\r\n        tableWrapper: {\r\n            padding: '0 30px',\r\n            '& .row': {\r\n                '& div': {\r\n                    lineHeight: '55px'\r\n                }\r\n            },\r\n            '& .dottedList': {\r\n                padding: '0',\r\n                '&:after': {\r\n                    margin: '0 -25px'\r\n                },\r\n                '&:last-child:after': {\r\n                    content: '\"\"',\r\n                    backgroundImage: 'none'\r\n                }\r\n            }\r\n        },\r\n        balanceInfo: {\r\n            padding: '15px 0'\r\n        },\r\n        balance: {\r\n            paddingRight: '10px',\r\n            fontSize: '24px!important',\r\n            fontWeight: '600'\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        },\r\n        excel: {\r\n            backgroundColor: '#6ec790 !important',\r\n            color: '#fff',\r\n            fontWeight: '600',\r\n            padding: '10px 10px',\r\n            borderRadius: '3px',\r\n            lineHeight: '12px',\r\n            cursor: 'pointer'\r\n        },\r\n        balanceButtonWrap: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between'\r\n        },\r\n        filter: {\r\n            display: 'flex',\r\n            alignItems: 'baseline',\r\n            '& > div': {\r\n                width: '20%!important',\r\n                position: 'relative',\r\n                marginRight: '40px',\r\n                '&:after': {\r\n                    content: '\"\"',\r\n                    position: 'absolute',\r\n                    right: '-20px',\r\n                    height: '30px',\r\n                    width: '1px',\r\n                    top: '50%',\r\n                    marginTop: '-15px',\r\n                    background: '#efefef'\r\n                },\r\n                '&:last-child': {\r\n                    '&:after': {\r\n                        content: '\"\"',\r\n                        background: 'none'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        leftPanel: {\r\n            backgroundColor: '#f2f5f8',\r\n            flexBasis: '25%',\r\n            maxWidth: '25%'\r\n\r\n        },\r\n        rightPanel: {\r\n            flexBasis: '75%',\r\n            maxWidth: '75%'\r\n        }\r\n    }),\r\n    reduxForm({\r\n        form: 'StatisticsFilterForm',\r\n        enableReinitialize: true\r\n    }),\r\n)\r\n\r\nconst StatAgentGridList = enhance((props) => {\r\n    const {\r\n        classes,\r\n        statAgentDialog\r\n    } = props\r\n\r\n    const headerStyle = {\r\n        backgroundColor: '#5d6474',\r\n        color: '#fff',\r\n        fontWeight: '600'\r\n    }\r\n\r\n    const sample = 100\r\n    const config = {\r\n        chart: {\r\n            type: 'areaspline',\r\n            height: 245\r\n        },\r\n        title: {\r\n            text: '',\r\n            style: {\r\n                display: 'none'\r\n            }\r\n        },\r\n        legend: {\r\n            enabled: false\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        xAxis: {\r\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n            tickmarkPlacement: 'on',\r\n            title: {\r\n                text: '',\r\n                style: {\r\n                    display: 'none'\r\n                }\r\n            }\r\n        },\r\n        yAxis: {\r\n            title: {\r\n                text: '',\r\n                style: {\r\n                    display: 'none'\r\n                }\r\n            },\r\n            gridLineColor: '#efefef',\r\n            plotLines: [{\r\n                value: 0,\r\n                width: 1,\r\n                color: '#808080'\r\n            }]\r\n        },\r\n        plotOptions: {\r\n            series: {\r\n                lineWidth: 0,\r\n                pointPlacement: 'on'\r\n            },\r\n            areaspline: {\r\n                fillOpacity: 0.7\r\n            }\r\n        },\r\n        tooltip: {\r\n            shared: true,\r\n            valueSuffix: ' %',\r\n            backgroundColor: '#363636',\r\n            style: {\r\n                color: '#fff'\r\n            },\r\n            borderRadius: 2,\r\n            borderWidth: 0,\r\n            enabled: true,\r\n            shadow: false,\r\n            useHTML: true,\r\n            crosshairs: true,\r\n            pointFormat: '{series.name}: <b>{point.y}</b><br/>в отношении к BoM<br/>'\r\n        },\r\n        series: [{\r\n            marker: {\r\n                enabled: false,\r\n                symbol: 'circle'\r\n            },\r\n            name: 'Эффективность',\r\n            data: [sample + sample + sample + sample],\r\n            color: '#7560a5'\r\n\r\n        }, {\r\n            marker: {\r\n                enabled: false,\r\n                symbol: 'circle'\r\n            },\r\n            name: 'BoM',\r\n            data: [sample + sample + sample + sample],\r\n            color: '#43d0e3'\r\n        }]\r\n    }\r\n    const headers = (\r\n        <Paper\r\n            zDepth={2}\r\n            style={headerStyle}>\r\n            <div className={classes.tableWrapper}>\r\n                <Row>\r\n                    <Col xs={4}>Агенты</Col>\r\n                    <Col xs={5}>Зона</Col>\r\n                    <Col xs={3}>Сумма</Col>\r\n                </Row>\r\n            </div>\r\n        </Paper>\r\n\r\n    )\r\n    const list = (\r\n        <Paper zDepth={1} >\r\n            <div className={classes.tableWrapper}>\r\n                <Row className=\"dottedList\">\r\n                    <Col xs={4}>Исаков Тулкин</Col>\r\n                    <Col xs={5}>Ташкент сел маш</Col>\r\n                    <Col xs={2}>100000 UZS</Col>\r\n                    <Col xs={1}>\r\n                        <a onClick={statAgentDialog.handleOpenStatAgentDialog} className={classes.link}>\r\n                            ДЕТАЛИ\r\n                        </a>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"dottedList\">\r\n                    <Col xs={4}>Исаков Тулкин</Col>\r\n                    <Col xs={5}>Ташкент сел маш</Col>\r\n                    <Col xs={2}>100000 UZS</Col>\r\n                    <Col xs={1}>ДЕТАЛИ</Col>\r\n                </Row>\r\n            </div>\r\n        </Paper>\r\n    )\r\n    const page = (\r\n            <Paper zDepth={1}\r\n                   style={{margin: '0 -28px'}}>\r\n                <Row style={{margin: '0'}}>\r\n                    <div className={classes.leftPanel}>\r\n                        <StatSideMenu/>\r\n                    </div>\r\n                    <div className={classes.rightPanel}>\r\n                        <div className={classes.wrapper}>\r\n                            <form className={classes.filter}>\r\n                                <Field\r\n                                    className={classes.inputFieldCustom}\r\n                                    name=\"zone\"\r\n                                    component={UsersSearchField}\r\n                                    label=\"Зоны\"\r\n                                    fullWidth={true}/>\r\n                                <Field\r\n                                    className={classes.inputFieldCustom}\r\n                                    name=\"user\"\r\n                                    component={UsersSearchField}\r\n                                    label=\"Агенты\"\r\n                                    fullWidth={true}/>\r\n                                <Field\r\n                                    className={classes.inputFieldCustom}\r\n                                    name=\"date\"\r\n                                    component={DateToDateField}\r\n                                    label=\"Диапазон дат.\"\r\n                                    fullWidth={true}/>\r\n                            </form>\r\n                            <div className={classes.balanceButtonWrap}>\r\n                                <div className={classes.balanceInfo}>\r\n                                    <span className={classes.balance}>2500 000 UZS</span>\r\n                                    Обшая Сумма от продажи товаров\r\n                                </div>\r\n                                <div className={classes.excel}>\r\n                                    скачать excel\r\n                                </div>\r\n                            </div>\r\n                            <ReactHighcharts config={config}/>\r\n                            {headers}\r\n                            {list}\r\n                        </div>\r\n                    </div>\r\n                </Row>\r\n            </Paper>\r\n    )\r\n\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.STATISTICS_LIST_URL}/>\r\n            {page}\r\n        <StatAgentDialog\r\n            open={statAgentDialog.openStatAgentDialog}\r\n            onClose={statAgentDialog.handleCloseStatAgentDialog}\r\n        />\r\n        </Container>\r\n    )\r\n})\r\n\r\nStatAgentGridList.propTypes = {\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object,\r\n    statAgentDialog: PropTypes.shape({\r\n        openStatAgentDialog: PropTypes.bool.isRequired,\r\n        handleOpenStatAgentDialog: PropTypes.func.isRequired,\r\n        handleCloseStatAgentDialog: PropTypes.func.isRequired\r\n    })\r\n}\r\n\r\nexport default StatAgentGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Statistics/StatAgentGridList.js","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport Container from '../Container'\r\nimport Paper from 'material-ui/Paper'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport {reduxForm, Field} from 'redux-form'\r\nimport ReactHighcharts from 'react-highcharts'\r\nimport ProductTypeSearchField from '../ReduxForm/Product/ProductTypeSearchField'\r\nimport ProductSearchField from '../ReduxForm/Product/ProductSearchField'\r\nimport DateToDateField from '../ReduxForm/Basic/DateToDateField'\r\nimport StatSideMenu from './StatSideMenu'\r\nimport SubMenu from '../SubMenu'\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            padding: '20px 30px',\r\n            '& .row': {\r\n                margin: '0rem !important',\r\n                '& div': {\r\n                    lineHeight: '55px'\r\n                }\r\n            }\r\n        },\r\n        tableWrapper: {\r\n            padding: '0 30px',\r\n            '& .row': {\r\n                '& div': {\r\n                    lineHeight: '55px'\r\n                }\r\n            },\r\n            '& .dottedList': {\r\n                padding: '0',\r\n                '&:after': {\r\n                    margin: '0 -25px'\r\n                },\r\n                '&:last-child:after': {\r\n                    content: '\"\"',\r\n                    backgroundImage: 'none'\r\n                }\r\n            }\r\n        },\r\n        balanceInfo: {\r\n            padding: '15px 0'\r\n        },\r\n        balance: {\r\n            paddingRight: '10px',\r\n            fontSize: '24px!important',\r\n            fontWeight: '600'\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        },\r\n        excel: {\r\n            backgroundColor: '#6ec790 !important',\r\n            color: '#fff',\r\n            fontWeight: '600',\r\n            padding: '10px 10px',\r\n            borderRadius: '3px',\r\n            lineHeight: '12px',\r\n            cursor: 'pointer'\r\n        },\r\n        balanceButtonWrap: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between'\r\n        },\r\n        filter: {\r\n            display: 'flex',\r\n            alignItems: 'baseline',\r\n            '& > div': {\r\n                width: '20%!important',\r\n                position: 'relative',\r\n                marginRight: '40px',\r\n                '&:after': {\r\n                    content: '\"\"',\r\n                    position: 'absolute',\r\n                    right: '-20px',\r\n                    height: '30px',\r\n                    width: '1px',\r\n                    top: '50%',\r\n                    marginTop: '-15px',\r\n                    background: '#efefef'\r\n                },\r\n                '&:last-child': {\r\n                    '&:after': {\r\n                        content: '\"\"',\r\n                        background: 'none'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        leftPanel: {\r\n            backgroundColor: '#f2f5f8',\r\n            flexBasis: '25%',\r\n            maxWidth: '25%'\r\n\r\n        },\r\n        rightPanel: {\r\n            flexBasis: '75%',\r\n            maxWidth: '75%'\r\n        }\r\n    }),\r\n    reduxForm({\r\n        form: 'StatisticsFilterForm',\r\n        enableReinitialize: true\r\n    }),\r\n)\r\n\r\nconst StatProductGridList = enhance((props) => {\r\n    const {\r\n        classes\r\n    } = props\r\n\r\n    const headerStyle = {\r\n        backgroundColor: '#5d6474',\r\n        color: '#fff',\r\n        fontWeight: '600'\r\n    }\r\n\r\n    const sample = 100\r\n    const config = {\r\n        chart: {\r\n            type: 'areaspline',\r\n            height: 245\r\n        },\r\n        title: {\r\n            text: '',\r\n            style: {\r\n                display: 'none'\r\n            }\r\n        },\r\n        legend: {\r\n            enabled: false\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        xAxis: {\r\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n            tickmarkPlacement: 'on',\r\n            title: {\r\n                text: '',\r\n                style: {\r\n                    display: 'none'\r\n                }\r\n            }\r\n        },\r\n        yAxis: {\r\n            title: {\r\n                text: '',\r\n                style: {\r\n                    display: 'none'\r\n                }\r\n            },\r\n            gridLineColor: '#efefef',\r\n            plotLines: [{\r\n                value: 0,\r\n                width: 1,\r\n                color: '#808080'\r\n            }]\r\n        },\r\n        plotOptions: {\r\n            series: {\r\n                lineWidth: 0,\r\n                pointPlacement: 'on'\r\n            },\r\n            areaspline: {\r\n                fillOpacity: 0.7\r\n            }\r\n        },\r\n        tooltip: {\r\n            shared: true,\r\n            valueSuffix: ' %',\r\n            backgroundColor: '#363636',\r\n            style: {\r\n                color: '#fff'\r\n            },\r\n            borderRadius: 2,\r\n            borderWidth: 0,\r\n            enabled: true,\r\n            shadow: false,\r\n            useHTML: true,\r\n            crosshairs: true,\r\n            pointFormat: '{series.name}: <b>{point.y}</b><br/>в отношении к BoM<br/>'\r\n        },\r\n        series: [{\r\n            marker: {\r\n                enabled: false,\r\n                symbol: 'circle'\r\n            },\r\n            name: 'Эффективность',\r\n            data: [sample + sample + sample + sample],\r\n            color: '#7560a5'\r\n\r\n        }, {\r\n            marker: {\r\n                enabled: false,\r\n                symbol: 'circle'\r\n            },\r\n            name: 'BoM',\r\n            data: [sample + sample + sample + sample],\r\n            color: '#43d0e3'\r\n        }]\r\n    }\r\n    const headers = (\r\n        <Paper\r\n            zDepth={2}\r\n            style={headerStyle}>\r\n            <div className={classes.tableWrapper}>\r\n                <Row>\r\n                    <Col xs={8}>Название</Col>\r\n                    <Col xs={2}>Себестоимость</Col>\r\n                    <Col xs={2}>Цена</Col>\r\n                </Row>\r\n            </div>\r\n        </Paper>\r\n\r\n    )\r\n    const list = (\r\n        <Paper zDepth={1} >\r\n            <div className={classes.tableWrapper}>\r\n                <Row className=\"dottedList\">\r\n                    <Col xs={8}>Миф морозная свежесть</Col>\r\n                    <Col xs={2}>Стиралны</Col>\r\n                    <Col xs={2}>5000 - 100000 UZS</Col>\r\n                </Row>\r\n                <Row className=\"dottedList\">\r\n                    <Col xs={8}>Миф морозная свежесть</Col>\r\n                    <Col xs={2}>Стиралны</Col>\r\n                    <Col xs={2}>5000 - 100000 UZS</Col>\r\n                </Row>\r\n            </div>\r\n        </Paper>\r\n    )\r\n\r\n    const page = (\r\n    <Paper zDepth={1}\r\n           style={{margin: '0 -28px'}}>\r\n        <Row style={{margin: '0'}}>\r\n            <div className={classes.leftPanel}>\r\n                <StatSideMenu/>\r\n            </div>\r\n            <div className={classes.rightPanel}>\r\n                <div className={classes.wrapper}>\r\n                    <form className={classes.filter}>\r\n                        <Field\r\n                            className={classes.inputFieldCustom}\r\n                            name=\"ProductType\"\r\n                            component={ProductTypeSearchField}\r\n                            label=\"Тип товара\"\r\n                            fullWidth={true}/>\r\n                        <Field\r\n                            className={classes.inputFieldCustom}\r\n                            name=\"Product\"\r\n                            component={ProductSearchField}\r\n                            label=\"Товар\"\r\n                            fullWidth={true}/>\r\n                        <Field\r\n                            className={classes.inputFieldCustom}\r\n                            name=\"date\"\r\n                            component={DateToDateField}\r\n                            label=\"Диапазон дат.\"\r\n                            fullWidth={true}/>\r\n                    </form>\r\n                    <div className={classes.balanceButtonWrap}>\r\n                        <div className={classes.balanceInfo}>\r\n                            <span className={classes.balance}>2500 000 UZS</span>\r\n                            Обшая Сумма от продажи товаров\r\n                        </div>\r\n                        <div className={classes.excel}>\r\n                            скачать excel\r\n                        </div>\r\n                    </div>\r\n                    <ReactHighcharts config={config}/>\r\n                    {headers}\r\n                    {list}\r\n                </div>\r\n            </div>\r\n        </Row>\r\n    </Paper>\r\n    )\r\n\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.STATISTICS_LIST_URL}/>\r\n            {page}\r\n        </Container>\r\n    )\r\n})\r\n\r\nStatProductGridList.propTypes = {\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object\r\n}\r\n\r\nexport default StatProductGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Statistics/StatProductGridList.js","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport {Row} from 'react-flexbox-grid'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport Container from '../Container'\r\nimport SubMenu from '../SubMenu'\r\nimport Paper from 'material-ui/Paper'\r\nimport injectSheet from 'react-jss'\r\nimport {compose} from 'recompose'\r\nimport {reduxForm} from 'redux-form'\r\nimport StatSideMenu from './StatSideMenu'\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            padding: '20px 30px',\r\n            '& .row': {\r\n                margin: '0rem !important',\r\n                '& div': {\r\n                    lineHeight: '55px'\r\n                }\r\n            }\r\n        },\r\n        tableWrapper: {\r\n            padding: '0 30px',\r\n            '& .row': {\r\n                '& div': {\r\n                    lineHeight: '55px'\r\n                }\r\n            }\r\n        },\r\n        rightPanel: {\r\n            flexBasis: '75%',\r\n            maxWidth: '75%',\r\n            '& .dottedList': {\r\n                padding: '0'\r\n            },\r\n            '& .dottedList:after': {\r\n                margin: '0 -20px'\r\n            },\r\n            '& .dottedList:last-child:after': {\r\n                content: '\"\"',\r\n                backgroundImage: 'none'\r\n            }\r\n        },\r\n        leftPanel: {\r\n            backgroundColor: '#f2f5f8',\r\n            flexBasis: '25%',\r\n            maxWidth: '25%'\r\n\r\n        }\r\n    }),\r\n    reduxForm({\r\n        form: 'StatisticsFilterForm',\r\n        enableReinitialize: true\r\n    }),\r\n)\r\n\r\nconst StatisticsGridList = enhance((props) => {\r\n    const {\r\n        classes\r\n    } = props\r\n    const page = (\r\n        <Paper zDepth={1}\r\n        style={{margin: '0 -28px'}}>\r\n            <Row style={{margin: '0'}}>\r\n                <div className={classes.leftPanel}>\r\n                    <StatSideMenu/>\r\n                </div>\r\n                <div className={classes.rightPanel}>\r\n                </div>\r\n            </Row>\r\n        </Paper>\r\n    )\r\n\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.STATISTICS_LIST_URL}/>\r\n            {page}\r\n         </Container>\r\n    )\r\n})\r\n\r\nStatisticsGridList.propTypes = {\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object\r\n}\r\n\r\nexport default StatisticsGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Statistics/StatisticsGridList.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport {compose, withHandlers} from 'recompose'\r\nimport {reduxForm, Field} from 'redux-form'\r\nimport PropTypes from 'prop-types'\r\nimport injectSheet from 'react-jss'\r\nimport {Link} from 'react-router'\r\nimport Paper from 'material-ui/Paper'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport RaisedButton from 'material-ui/RaisedButton'\r\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\r\nimport {ManufactureSearchField, UsersGroupSearchField} from '../ReduxForm'\r\nimport CloseIcon from '../CloseIcon'\r\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\r\n\r\nexport const USERS_FILTER_KEY = {\r\n    MANUFACTURE: 'manufacture',\r\n    GROUP: 'group'\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            position: 'absolute',\r\n            minWidth: '300px',\r\n            background: '#fff',\r\n            zIndex: 99,\r\n            top: 0,\r\n            left: 0,\r\n            borderRadius: 0,\r\n            padding: '10px 20px 10px 20px'\r\n        },\r\n        afterFilter: {\r\n            width: '268px',\r\n            alignItems: 'center',\r\n            display: 'flex',\r\n            backgroundColor: '#efefef',\r\n            position: 'relative',\r\n            padding: '16px 30px',\r\n            marginLeft: '-30px',\r\n            '& > div:nth-child(2)': {\r\n                position: 'absolute',\r\n                right: '0'\r\n            },\r\n            '& > div:nth-child(1)': {\r\n                color: '#666666'\r\n            },\r\n            '& button': {\r\n                borderLeft: '1px solid white !important'\r\n            }\r\n        },\r\n        icon: {\r\n            color: '#8f8f8f !important'\r\n        },\r\n        arrow: {\r\n            color: '#12aaeb',\r\n            paddingRight: '14px',\r\n            position: 'relative',\r\n            '& svg': {\r\n                position: 'absolute',\r\n                width: '13px !important',\r\n                height: '20px !important'\r\n            }\r\n        },\r\n        header: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n            '& button': {\r\n                marginRight: '-12px !important'\r\n            }\r\n        },\r\n        title: {\r\n            fontSize: '15px',\r\n            color: '#5d6474'\r\n        },\r\n        submit: {\r\n            color: '#fff !important'\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        }\r\n    }),\r\n    reduxForm({\r\n        form: 'UsersFilterForm',\r\n        enableReinitialize: true\r\n    }),\r\n    withHandlers({\r\n        getCount: props => () => {\r\n            const {filter} = props\r\n            return _(USERS_FILTER_KEY)\r\n                .values()\r\n                .filter(item => item !== USERS_FILTER_KEY.FROM_DATE)\r\n                .filter(item => filter.getParam(item))\r\n                .value()\r\n                .length\r\n        }\r\n    })\r\n)\r\n\r\nconst UsersFilterForm = enhance((props) => {\r\n    const {classes, filterDialog, getCount} = props\r\n    const filterCounts = getCount()\r\n\r\n    if (!filterDialog.openFilterDialog) {\r\n        if (filterCounts) {\r\n            return (\r\n                <div className={classes.afterFilter}>\r\n                    <div>Фильтр: {filterCounts} элемента</div>\r\n                    <div>\r\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                            <BorderColorIcon color=\"#8f8f8f\" />\r\n                        </IconButton>\r\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\r\n                            <CloseIcon className={classes.icon}/>\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Link\r\n                    className={classes.arrow}\r\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\r\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.wrapper} zDepth={2}>\r\n                <div className={classes.header}>\r\n                    <span className={classes.title}>Фильтр</span>\r\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\r\n                        <CloseIcon className={classes.icon} />\r\n                    </IconButton>\r\n                </div>\r\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\r\n                    <div>\r\n                        <Field className={classes.inputFieldCustom} name=\"manufacture\" component={ManufactureSearchField} label=\"Производство\" fullWidth={true}/>\r\n                    </div>\r\n                    <div>\r\n                        <Field className={classes.inputFieldCustom} name=\"group\" component={UsersGroupSearchField} label=\"Принадлежность к группе\" fullWidth={true}/>\r\n                    </div>\r\n\r\n                    <RaisedButton\r\n                        type=\"submit\"\r\n                        primary={true}\r\n                        buttonStyle={{color: '#fff'}}\r\n                        label=\"Применить\"\r\n                        style={{marginTop: '15px'}}>\r\n                    </RaisedButton>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n})\r\n\r\nUsersFilterForm.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    filterDialog: PropTypes.shape({\r\n        filterLoading: PropTypes.bool.isRequired,\r\n        openFilterDialog: PropTypes.bool.isRequired,\r\n        handleOpenFilterDialog: PropTypes.func.isRequired,\r\n        handleCloseFilterDialog: PropTypes.func.isRequired,\r\n        handleSubmitFilterDialog: PropTypes.func.isRequired\r\n    })\r\n}\r\n\r\nexport default UsersFilterForm\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/StockReceive/StockHistoryFilterForm.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose, withState} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport LinearProgress from '../LinearProgress'\r\nimport numberFormat from '../../helpers/numberFormat'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport NotFound from '../Images/not-found.png'\r\n\r\nconst colorBlue = '#12aaeb !important'\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            color: '#333 !important',\r\n            borderTop: '1px #efefef solid',\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            padding: '0 30px 5px',\r\n            height: 'auto',\r\n            transition: 'max-height 500ms ease !important',\r\n            overflowY: 'auto',\r\n            '& a': {\r\n                color: colorBlue\r\n            }\r\n        },\r\n        content: {\r\n            width: '100%',\r\n            overflow: 'hidden',\r\n            '& > .row': {\r\n                padding: '15px 0',\r\n                '&:first-child': {\r\n                    fontWeight: '600'\r\n                },\r\n                '&:last-child:after': {\r\n                    display: 'none'\r\n                }\r\n            }\r\n        },\r\n        emptyQuery: {\r\n            background: 'url(' + NotFound + ') no-repeat center 25px',\r\n            backgroundSize: '200px',\r\n            padding: '170px 0 30px',\r\n            textAlign: 'center',\r\n            fontSize: '13px',\r\n            color: '#999',\r\n            width: '100%',\r\n            '& svg': {\r\n                width: '50px !important',\r\n                height: '50px !important',\r\n                color: '#999 !important'\r\n            }\r\n        }\r\n\r\n    }),\r\n    withState('openDetails', 'setOpenDetails', false)\r\n)\r\n\r\nconst StockReceiveDetails = enhance((props) => {\r\n    const {classes, detailData} = props\r\n    const detailLoading = _.get(detailData, 'detailLoading')\r\n    const products = _.get(detailData, ['data', 'products'])\r\n\r\n    if (_.isEmpty(products)) {\r\n        return (\r\n            <div className={classes.wrapper} style={detailLoading ? {padding: '0 30px', border: 'none', maxHeight: '2px'} : {maxHeight: '250px', overflowY: 'hidden'}}>\r\n                {detailLoading && <LinearProgress/>}\r\n                <div className={classes.emptyQuery}>\r\n                    <div>Товаров не найдено</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrapper} style={detailLoading ? {padding: '0 30px', border: 'none', maxHeight: '2px'} : {maxHeight: '250px'}}>\r\n            {detailLoading ? <LinearProgress/>\r\n            : <div className={classes.content}>\r\n                <Row className='dottedList'>\r\n                    <Col xs={4}>Товар</Col>\r\n                    <Col xs={2}>Тип товара</Col>\r\n                    <Col xs={2}>Кол-во</Col>\r\n                    <Col xs={2}>Принято</Col>\r\n                    <Col xs={2}>Брак</Col>\r\n                </Row>\r\n                {_.map(products, (item) => {\r\n                    const id = _.get(item, 'id')\r\n                    const name = _.get(item, ['product', 'name'])\r\n                    const measurement = _.get(item, ['product', 'measurement', 'name'])\r\n                    const amount = numberFormat(_.get(item, 'amount'), measurement)\r\n                    const posted = numberFormat(_.get(item, 'postedAmount'), measurement)\r\n                    const defect = numberFormat(_.get(item, 'defectAmount'), measurement)\r\n                    return (\r\n                        <Row key={id} className='dottedList'>\r\n                            <Col xs={4}>{name}</Col>\r\n                            <Col xs={2}>Стиральный порошек</Col>\r\n                            <Col xs={2}>{amount}</Col>\r\n                            <Col xs={2}>{posted}</Col>\r\n                            <Col xs={2}>{defect}</Col>\r\n                        </Row>\r\n                    )\r\n                })}\r\n            </div>}\r\n        </div>\r\n    )\r\n})\r\n\r\nStockReceiveDetails.propTypes = {\r\n    detailData: PropTypes.object.isRequired\r\n}\r\n\r\nexport default StockReceiveDetails\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/StockReceive/StockReceiveDetails.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport Container from '../Container'\r\nimport SubMenu from '../SubMenu'\r\nimport injectSheet from 'react-jss'\r\nimport {compose} from 'recompose'\r\nimport {Tabs, Tab} from 'material-ui/Tabs'\r\nimport * as TAB from '../../constants/stockReceiveTab'\r\nimport TabReceive from './StockTabReceive'\r\nimport TabTransfer from './StockTabTransfer'\r\nimport TabHistory from './StockTabHistory'\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        loader: {\r\n            position: 'absolute',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            width: '100%',\r\n            minHeight: '400px',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            justifyContent: 'center',\r\n            display: 'flex'\r\n        },\r\n        list: {\r\n            marginBottom: '5px',\r\n            '& > a': {\r\n                color: 'inherit'\r\n            }\r\n        },\r\n        semibold: {\r\n            fontWeight: '600',\r\n            cursor: 'pointer'\r\n        },\r\n        wrapper: {\r\n            padding: '15px 30px',\r\n            '& .row': {\r\n                alignItems: 'center'\r\n            }\r\n        },\r\n        tabWrapper: {\r\n            position: 'relative'\r\n        },\r\n        tabs: {\r\n            marginBottom: '0',\r\n            width: '100%',\r\n            '& > div': {\r\n                width: '300px !important',\r\n                paddingRight: 'calc(100% - 300px)',\r\n                '&:first-child': {\r\n                    boxShadow: 'rgba(0, 0, 0, 0.12) 0px 1px 6px, rgba(0, 0, 0, 0.12) 0px 1px 4px',\r\n                    borderRadius: '2px',\r\n                    height: '52px',\r\n                    alignItems: 'center',\r\n                    '& button': {\r\n                        color: '#333 !important'\r\n                    }\r\n                },\r\n                '&:nth-child(2)': {\r\n                    marginTop: '-3px'\r\n                },\r\n                '&:last-child': {\r\n                    width: '100% !important',\r\n                    padding: '0'\r\n                }\r\n            },\r\n            '& button div div': {\r\n                textTransform: 'initial',\r\n                height: '52px !important'\r\n            }\r\n        },\r\n        headers: {\r\n            color: '#666',\r\n            padding: '15px 30px',\r\n            '& .row': {\r\n                alignItems: 'center'\r\n            }\r\n        },\r\n        actionButton: {\r\n            background: '#12aaeb',\r\n            borderRadius: '2px',\r\n            color: '#fff',\r\n            padding: '5px 20px'\r\n        },\r\n        success: {\r\n            color: '#81c784'\r\n        },\r\n        begin: {\r\n            color: '#f0ad4e'\r\n        },\r\n        error: {\r\n            color: '#e57373'\r\n        },\r\n        waiting: {\r\n            color: '#64b5f6'\r\n        }\r\n    })\r\n)\r\n\r\nconst StockReceiveGridList = enhance((props) => {\r\n    const {\r\n        listData,\r\n        historyData,\r\n        transferData,\r\n        transferDetail,\r\n        filterDialog,\r\n        detailData,\r\n        filter,\r\n        tabData,\r\n        classes,\r\n        createDialog,\r\n        handleCloseDetail\r\n    } = props\r\n    const tab = _.get(tabData, 'tab')\r\n\r\n    const tabList = (\r\n        <div className={classes.tabWrapper}>\r\n            <Tabs\r\n                inkBarStyle={{backgroundColor: '#12aaeb', height: '3px'}}\r\n                tabItemContainerStyle={{backgroundColor: '#fff', color: '#333'}}\r\n                value={tab}\r\n                className={classes.tabs}\r\n                onChange={(value) => tabData.handleTabChange(value)}>\r\n                <Tab label=\"Приемка\" value={TAB.STOCK_RECEIVE_TAB_RECEIVE}/>\r\n                <Tab label=\"Передача\" value={TAB.STOCK_RECEIVE_TAB_TRANSFER}/>\r\n                <Tab label=\"История\" value={TAB.STOCK_RECEIVE_TAB_HISTORY}/>\r\n            </Tabs>\r\n            {TAB.STOCK_RECEIVE_TAB_RECEIVE === tab && <TabReceive\r\n                filter={filter}\r\n                listData={listData}\r\n                detailData={detailData}\r\n                createDialog={createDialog}\r\n                handleCloseDetail={handleCloseDetail}\r\n            />}\r\n            {TAB.STOCK_RECEIVE_TAB_TRANSFER === tab && <TabTransfer\r\n                filter={filter}\r\n                listData={transferData}\r\n                detailData={transferDetail}\r\n                createDialog={createDialog}\r\n                handleCloseDetail={handleCloseDetail}\r\n            />}\r\n            {TAB.STOCK_RECEIVE_TAB_HISTORY === tab && <TabHistory\r\n                filter={filter}\r\n                listData={historyData}\r\n                filterDialog={filterDialog}\r\n            />}\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.STOCK_RECEIVE_LIST_URL}/>\r\n            {tabList}\r\n        </Container>\r\n    )\r\n})\r\n\r\nStockReceiveGridList.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    listData: PropTypes.object,\r\n    historyData: PropTypes.object,\r\n    transferData: PropTypes.object,\r\n    detailData: PropTypes.object,\r\n    transferDetail: PropTypes.object,\r\n    tabData: PropTypes.shape({\r\n        tab: PropTypes.string.isRequired,\r\n        handleTabChange: PropTypes.func.isRequired\r\n    }),\r\n    handleCloseDetail: PropTypes.func.isRequired,\r\n    createDialog: PropTypes.shape({\r\n        createLoading: PropTypes.bool.isRequired,\r\n        openCreateDialog: PropTypes.bool.isRequired,\r\n        isDefect: PropTypes.bool,\r\n        detailProducts: PropTypes.object,\r\n        detailLoading: PropTypes.bool,\r\n        handleOpenCreateDialog: PropTypes.func.isRequired,\r\n        handleCloseCreateDialog: PropTypes.func.isRequired,\r\n        handleSubmitCreateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    filterDialog: PropTypes.shape({\r\n        initialValues: PropTypes.object,\r\n        filterLoading: PropTypes.bool,\r\n        openFilterDialog: PropTypes.bool.isRequired,\r\n        handleOpenFilterDialog: PropTypes.func.isRequired,\r\n        handleCloseFilterDialog: PropTypes.func.isRequired,\r\n        handleSubmitFilterDialog: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default StockReceiveGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/StockReceive/StockReceiveGridList.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport GridList from '../GridList'\r\nimport HistoryFilterForm from './StockHistoryFilterForm'\r\nimport injectSheet from 'react-jss'\r\nimport {compose} from 'recompose'\r\nimport moment from 'moment'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport numberFormat from '../../helpers/numberFormat'\r\nimport ArrowUp from 'material-ui/svg-icons/navigation/arrow-upward'\r\nimport ArrowDown from 'material-ui/svg-icons/navigation/arrow-downward'\r\n\r\nconst listHeader = [\r\n    {\r\n        sorting: true,\r\n        name: 'product',\r\n        title: 'Товар',\r\n        xs: 4\r\n    },\r\n    {\r\n        name: 'amount',\r\n        title: 'Кол-во',\r\n        xs: 1\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'date',\r\n        title: 'Дата',\r\n        xs: 1\r\n    },\r\n    {\r\n        name: 'fromTo',\r\n        title: 'От кого / Кому',\r\n        xs: 4\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'type',\r\n        title: 'Тип',\r\n        xs: 2\r\n    }\r\n]\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        loader: {\r\n            position: 'absolute',\r\n            background: '#fff',\r\n            top: '72px',\r\n            left: '0',\r\n            width: '100%',\r\n            minHeight: '400px',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            justifyContent: 'center',\r\n            display: 'flex'\r\n        },\r\n        wrapper: {\r\n            marginTop: '20px',\r\n            '& .row > div > svg': {\r\n                position: 'relative',\r\n                width: '16px !important',\r\n                height: '16px !important',\r\n                top: '3px',\r\n                marginRight: '5px'\r\n            }\r\n        }\r\n    })\r\n)\r\n\r\nconst StockTabHistory = enhance((props) => {\r\n    const {\r\n        filter,\r\n        filterDialog,\r\n        listData,\r\n        classes\r\n    } = props\r\n\r\n    const usersFilterDialog = (\r\n        <HistoryFilterForm\r\n            initialValues={filterDialog.initialValues}\r\n            filter={filter}\r\n            filterDialog={filterDialog}\r\n        />\r\n    )\r\n\r\n    const historyDetail = (\r\n        <span>a</span>\r\n    )\r\n    const listLoading = _.get(listData, 'listLoading')\r\n    const historyList = _.map(_.get(listData, 'data'), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const product = _.get(item, ['product', 'name'])\r\n        const amount = numberFormat(_.get(item, 'amount'))\r\n        const measurement = _.get(item, ['product', 'measurement', 'name'])\r\n        const date = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\r\n        const genericType = _.get(item, ['generic', 'type'])\r\n        const type = _.get(item, 'type')\r\n\r\n        return (\r\n            <Row key={id}>\r\n                <Col xs={4}>\r\n                    {(type === 'Out') ? <ArrowUp color=\"#e57373\"/> : <ArrowDown color=\"#81c784\"/>} {product}\r\n                </Col>\r\n                <Col xs={1}>{amount} {measurement}</Col>\r\n                <Col xs={1}>{date}</Col>\r\n                <Col xs={4}>asdasd / asdasd</Col>\r\n                <Col xs={2}>{genericType}</Col>\r\n            </Row>\r\n        )\r\n    })\r\n\r\n    const list = {\r\n        header: listHeader,\r\n        list: historyList,\r\n        loading: _.get(listData, 'historyListLoading')\r\n    }\r\n\r\n    if (listLoading) {\r\n        return (\r\n            <div className={classes.loader}>\r\n                <CircularProgress size={40} thickness={4}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <GridList\r\n                filter={filter}\r\n                list={list}\r\n                detail={historyDetail}\r\n                filterDialog={usersFilterDialog}\r\n            />\r\n        </div>\r\n    )\r\n})\r\n\r\nStockTabHistory.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    listData: PropTypes.object,\r\n    filterDialog: PropTypes.shape({\r\n        initialValues: PropTypes.object,\r\n        filterLoading: PropTypes.bool,\r\n        openFilterDialog: PropTypes.bool.isRequired,\r\n        handleOpenFilterDialog: PropTypes.func.isRequired,\r\n        handleCloseFilterDialog: PropTypes.func.isRequired,\r\n        handleSubmitFilterDialog: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default StockTabHistory\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/StockReceive/StockTabHistory.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport {Link} from 'react-router'\r\nimport injectSheet from 'react-jss'\r\nimport sprintf from 'sprintf'\r\nimport moment from 'moment'\r\nimport {compose} from 'recompose'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport Paper from 'material-ui/Paper'\r\nimport StockReceiveDetails from './StockReceiveDetails'\r\nimport CreateDialog from './StockReceiveCreateDialog'\r\nimport Pagination from '../GridList/GridListNavPagination'\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        loader: {\r\n            position: 'absolute',\r\n            background: '#fff',\r\n            top: '100px',\r\n            left: '0',\r\n            width: '100%',\r\n            minHeight: '400px',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            justifyContent: 'center',\r\n            display: 'flex'\r\n        },\r\n        listWrapper: {\r\n            position: 'relative',\r\n            '& > div:nth-child(2)': {\r\n                marginTop: '0 !important'\r\n            }\r\n        },\r\n        list: {\r\n            marginBottom: '5px',\r\n            '& > a': {\r\n                color: 'inherit'\r\n            }\r\n        },\r\n        expandedList: {\r\n            margin: '20px -15px',\r\n            transition: 'all 400ms ease-out !important',\r\n            position: 'relative',\r\n            '& > a': {\r\n                color: 'inherit'\r\n            }\r\n        },\r\n        semibold: {\r\n            fontWeight: '600',\r\n            cursor: 'pointer'\r\n        },\r\n        wrapper: {\r\n            padding: '15px 30px',\r\n            '& .row': {\r\n                alignItems: 'center'\r\n            }\r\n        },\r\n        headers: {\r\n            color: '#666',\r\n            fontWeight: '600',\r\n            padding: '15px 30px',\r\n            '& .row': {\r\n                alignItems: 'center'\r\n            }\r\n        },\r\n        actionButton: {\r\n            background: '#12aaeb',\r\n            borderRadius: '2px',\r\n            color: '#fff',\r\n            padding: '5px 20px'\r\n        },\r\n        success: {\r\n            color: '#81c784'\r\n        },\r\n        begin: {\r\n            color: '#f0ad4e'\r\n        },\r\n        error: {\r\n            color: '#e57373'\r\n        },\r\n        waiting: {\r\n            color: '#64b5f6'\r\n        }\r\n    })\r\n)\r\n\r\nconst StockTabReceive = enhance((props) => {\r\n    const {\r\n        listData,\r\n        detailData,\r\n        filter,\r\n        classes,\r\n        createDialog,\r\n        handleCloseDetail\r\n    } = props\r\n    const detailId = _.get(detailData, 'id')\r\n    const listLoading = _.get(listData, 'listLoading')\r\n\r\n    if (listLoading) {\r\n        return (\r\n            <div className={classes.loader}>\r\n                <CircularProgress size={40} thickness={4}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.listWrapper}>\r\n            <div className={classes.headers}>\r\n                <Row>\r\n                    <Col xs={2}>№ заказа</Col>\r\n                    <Col xs={4}>От кого</Col>\r\n                    <Col xs={2}>Дата приемки</Col>\r\n                    <Col xs={2}>Статус</Col>\r\n                </Row>\r\n            </div>\r\n            {_.map(_.get(listData, 'data'), (item) => {\r\n                const id = _.get(item, 'id')\r\n                const provider = _.get(item, ['provider', 'name'])\r\n                const acceptedDate = moment(_.get(item, 'acceptedTime')).format('DD.MM.YYYY')\r\n                const status = _.toInteger(_.get(item, 'status'))\r\n                const PENDING = 0\r\n                const IN_PROGRESS = 1\r\n                const COMPLETED = 2\r\n\r\n                if (id === detailId) {\r\n                    return (\r\n                        <Paper key={id} zDepth={1} className={classes.expandedList}>\r\n                            <div className={classes.wrapper}>\r\n                                <Row className={classes.semibold}>\r\n                                    <Col xs={2}>{id}</Col>\r\n                                    <Col xs={4} onClick={handleCloseDetail}>{provider}</Col>\r\n                                    <Col xs={2}>{acceptedDate}</Col>\r\n                                    <Col xs={2}>{status === PENDING ? (<span className={classes.waiting}>Ожидает</span>)\r\n                                        : ((status === IN_PROGRESS) ? (\r\n                                            <span className={classes.begin}>В процессе</span>)\r\n                                            : (status === COMPLETED) ? (<span className={classes.success}>Принят</span>)\r\n                                                : (<span className={classes.error}>Отменен</span>))}</Col>\r\n                                    <Col xs={2} style={{textAlign: 'right'}}>\r\n                                        <a onClick={createDialog.handleOpenCreateDialog}\r\n                                           className={classes.actionButton}>Выполнить</a>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <StockReceiveDetails\r\n                                key={detailId}\r\n                                detailData={detailData}\r\n                                createDialog={createDialog}\r\n                            />\r\n                        </Paper>\r\n                    )\r\n                }\r\n                return (\r\n                    <Paper key={id} zDepth={1} className={classes.list}>\r\n                        <Link to={{\r\n                            pathname: sprintf(ROUTES.STOCK_RECEIVE_ITEM_PATH, id),\r\n                            query: filter.getParams()\r\n                        }}>\r\n                            <div className={classes.wrapper}>\r\n                                <Row>\r\n                                    <Col xs={2}>{id}</Col>\r\n                                    <Col xs={4}>{provider}</Col>\r\n                                    <Col xs={2}>{acceptedDate}</Col>\r\n                                    <Col xs={2}>{status === PENDING ? (<span className={classes.waiting}>Ожидает</span>)\r\n                                        : ((status === IN_PROGRESS) ? (\r\n                                            <span className={classes.begin}>В процессе</span>)\r\n                                            : (status === COMPLETED) ? (<span className={classes.success}>Принят</span>)\r\n                                                : (<span className={classes.error}>Отменен</span>))}</Col>\r\n                                </Row>\r\n                            </div>\r\n                        </Link>\r\n                    </Paper>\r\n                )\r\n            })}\r\n            <CreateDialog\r\n                loading={createDialog.createLoading}\r\n                open={createDialog.openCreateDialog}\r\n                isDefect={createDialog.isDefect}\r\n                detailProducts={createDialog.detailProducts}\r\n                listLoading={createDialog.detailLoading}\r\n                onClose={createDialog.handleCloseCreateDialog}\r\n                onSubmit={createDialog.handleSubmitCreateDialog}\r\n            />\r\n            <Pagination\r\n                filter={filter}\r\n                customPagination={true}/>\r\n        </div>\r\n    )\r\n})\r\n\r\nStockTabReceive.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object,\r\n    handleCloseDetail: PropTypes.func.isRequired,\r\n    createDialog: PropTypes.shape({\r\n        createLoading: PropTypes.bool.isRequired,\r\n        openCreateDialog: PropTypes.bool.isRequired,\r\n        isDefect: PropTypes.bool,\r\n        detailProducts: PropTypes.object,\r\n        detailLoading: PropTypes.bool,\r\n        handleOpenCreateDialog: PropTypes.func.isRequired,\r\n        handleCloseCreateDialog: PropTypes.func.isRequired,\r\n        handleSubmitCreateDialog: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default StockTabReceive\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/StockReceive/StockTabReceive.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport {Link} from 'react-router'\r\nimport injectSheet from 'react-jss'\r\nimport sprintf from 'sprintf'\r\nimport moment from 'moment'\r\nimport {compose} from 'recompose'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport Paper from 'material-ui/Paper'\r\nimport StockTransferDetails from './StockTransferDetails'\r\nimport CreateDialog from './StockReceiveCreateDialog'\r\nimport Pagination from '../GridList/GridListNavPagination'\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        loader: {\r\n            position: 'absolute',\r\n            background: '#fff',\r\n            top: '100px',\r\n            left: '0',\r\n            width: '100%',\r\n            minHeight: '400px',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            justifyContent: 'center',\r\n            display: 'flex'\r\n        },\r\n        listWrapper: {\r\n            position: 'relative',\r\n            '& > div:nth-child(2)': {\r\n                marginTop: '0 !important'\r\n            }\r\n        },\r\n        list: {\r\n            marginBottom: '5px',\r\n            '& > a': {\r\n                color: 'inherit'\r\n            }\r\n        },\r\n        expandedList: {\r\n            margin: '20px -15px',\r\n            transition: 'all 400ms ease-out !important',\r\n            '& > a': {\r\n                color: 'inherit'\r\n            }\r\n        },\r\n        semibold: {\r\n            fontWeight: '600',\r\n            cursor: 'pointer'\r\n        },\r\n        wrapper: {\r\n            padding: '15px 30px',\r\n            '& .row': {\r\n                alignItems: 'center'\r\n            }\r\n        },\r\n        headers: {\r\n            color: '#666',\r\n            fontWeight: '600',\r\n            padding: '15px 30px',\r\n            '& .row': {\r\n                alignItems: 'center'\r\n            }\r\n        },\r\n        actionButton: {\r\n            background: '#12aaeb',\r\n            borderRadius: '2px',\r\n            color: '#fff',\r\n            padding: '5px 20px'\r\n        },\r\n        success: {\r\n            color: '#81c784'\r\n        },\r\n        begin: {\r\n            color: '#f0ad4e'\r\n        },\r\n        error: {\r\n            color: '#e57373'\r\n        },\r\n        waiting: {\r\n            color: '#64b5f6'\r\n        }\r\n    })\r\n)\r\n\r\nconst StockTabTransfer = enhance((props) => {\r\n    const {\r\n        listData,\r\n        detailData,\r\n        filter,\r\n        classes,\r\n        createDialog\r\n    } = props\r\n\r\n    const detailId = _.get(detailData, 'id')\r\n    const listLoading = _.get(listData, 'transferListLoading')\r\n\r\n    if (listLoading) {\r\n        return (\r\n            <div className={classes.loader}>\r\n                <CircularProgress size={40} thickness={4}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.listWrapper}>\r\n            <div className={classes.headers}>\r\n                <Row>\r\n                    <Col xs={1}>№ запроса</Col>\r\n                    <Col xs={2}>Дата запроса</Col>\r\n                    <Col xs={2}>Вид передачи</Col>\r\n                    <Col xs={2}>Кому</Col>\r\n                    <Col xs={2}>Дата передачи</Col>\r\n                    <Col xs={1}>Статус</Col>\r\n                </Row>\r\n            </div>\r\n            {_.map(_.get(listData, 'data'), (item) => {\r\n                const id = _.get(item, 'id')\r\n                const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\r\n                const modifiedDate = moment(_.get(item, 'modifiedDate')).format('DD.MM.YYYY')\r\n                const toStock = _.get(item, ['toStock', 'name'])\r\n                const status = _.toInteger(_.get(item, 'status'))\r\n                const PENDING = 0\r\n                const IN_PROGRESS = 1\r\n                const COMPLETED = 2\r\n\r\n                if (id === detailId) {\r\n                    return (\r\n                        <Paper key={id} zDepth={1} className={classes.expandedList}>\r\n                            <div className={classes.wrapper}>\r\n                                <Row className={classes.semibold}>\r\n                                    <Col xs={1}>{id}</Col>\r\n                                    <Col xs={2}>{createdDate}</Col>\r\n                                    <Col xs={2}>Na sklad</Col>\r\n                                    <Col xs={2}>{toStock}</Col>\r\n                                    <Col xs={2}>{modifiedDate}</Col>\r\n                                    <Col xs={1}>{status === PENDING ? (<span className={classes.waiting}>Ожидает</span>)\r\n                                        : ((status === IN_PROGRESS) ? (\r\n                                            <span className={classes.begin}>В процессе</span>)\r\n                                            : (status === COMPLETED) ? (<span className={classes.success}>Принят</span>)\r\n                                                : (<span className={classes.error}>Отменен</span>))}</Col>\r\n                                    <Col xs={2} style={{textAlign: 'right'}}>\r\n                                        <a onClick={createDialog.handleOpenCreateDialog}\r\n                                           className={classes.actionButton}>Выполнить</a>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <StockTransferDetails\r\n                                key={detailId}\r\n                                detailData={detailData}\r\n                            />\r\n                        </Paper>\r\n                    )\r\n                }\r\n                return (\r\n                    <Paper key={id} zDepth={1} className={classes.list}>\r\n                        <Link to={{\r\n                            pathname: sprintf(ROUTES.STOCK_RECEIVE_ITEM_PATH, id),\r\n                            query: filter.getParams()\r\n                        }}>\r\n                            <div className={classes.wrapper}>\r\n                                <Row>\r\n                                    <Col xs={1}>{id}</Col>\r\n                                    <Col xs={2}>{createdDate}</Col>\r\n                                    <Col xs={2}>Na sklad</Col>\r\n                                    <Col xs={2}>{toStock}</Col>\r\n                                    <Col xs={2}>{modifiedDate}</Col>\r\n                                    <Col xs={1}>{status === PENDING ? (<span className={classes.waiting}>Ожидает</span>)\r\n                                        : ((status === IN_PROGRESS) ? (\r\n                                            <span className={classes.begin}>В процессе</span>)\r\n                                            : (status === COMPLETED) ? (<span className={classes.success}>Принят</span>)\r\n                                                : (<span className={classes.error}>Отменен</span>))}</Col>\r\n                                </Row>\r\n                            </div>\r\n                        </Link>\r\n                    </Paper>\r\n                )\r\n            })}\r\n            <CreateDialog\r\n                loading={createDialog.createLoading}\r\n                open={createDialog.openCreateDialog}\r\n                isDefect={createDialog.isDefect}\r\n                onClose={createDialog.handleCloseCreateDialog}\r\n                onSubmit={createDialog.handleSubmitCreateDialog}\r\n            />\r\n            <Pagination\r\n                filter={filter}\r\n                customPagination={true}/>\r\n        </div>\r\n    )\r\n})\r\n\r\nStockTabTransfer.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object,\r\n    handleCloseDetail: PropTypes.func.isRequired,\r\n    createDialog: PropTypes.shape({\r\n        createLoading: PropTypes.bool.isRequired,\r\n        openCreateDialog: PropTypes.bool.isRequired,\r\n        isDefect: PropTypes.bool,\r\n        handleOpenCreateDialog: PropTypes.func.isRequired,\r\n        handleCloseCreateDialog: PropTypes.func.isRequired,\r\n        handleSubmitCreateDialog: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default StockTabTransfer\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/StockReceive/StockTabTransfer.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose, withState} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport LinearProgress from '../LinearProgress'\r\nimport numberformat from '../../helpers/numberFormat'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport NotFound from '../Images/not-found.png'\r\n\r\nconst colorBlue = '#12aaeb !important'\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            color: '#333 !important',\r\n            position: 'relative',\r\n            borderTop: '1px #efefef solid',\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            '& a': {\r\n                color: colorBlue\r\n            }\r\n        },\r\n        loader: {\r\n            width: '100%',\r\n            height: '100px',\r\n            background: '#fff',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            justifyContent: 'center',\r\n            display: 'flex'\r\n        },\r\n        content: {\r\n            width: '100%',\r\n            overflow: 'hidden',\r\n            display: 'flex'\r\n        },\r\n        leftSide: {\r\n            flexBasis: '70%',\r\n            maxWidth: '70%',\r\n            padding: '0 30px 5px',\r\n            '& > .row': {\r\n                padding: '15px 0',\r\n                '&:first-child': {\r\n                    fontWeight: '600'\r\n                },\r\n                '&:last-child:after': {\r\n                    display: 'none'\r\n                }\r\n            }\r\n        },\r\n        rightSide: {\r\n            flexBasis: '30%',\r\n            maxWidth: '30%',\r\n            padding: '20px 30px',\r\n            borderLeft: '1px #efefef solid',\r\n            '& > div:last-child': {\r\n                marginTop: '5px'\r\n            }\r\n        },\r\n        subtitle: {\r\n            fontWeight: '600'\r\n        },\r\n        emptyQuery: {\r\n            background: 'url(' + NotFound + ') no-repeat center 25px',\r\n            backgroundSize: '200px',\r\n            padding: '170px 0 30px',\r\n            textAlign: 'center',\r\n            fontSize: '13px',\r\n            color: '#999',\r\n            width: '100%',\r\n            '& svg': {\r\n                width: '50px !important',\r\n                height: '50px !important',\r\n                color: '#999 !important'\r\n            }\r\n        }\r\n\r\n    }),\r\n    withState('openDetails', 'setOpenDetails', false)\r\n)\r\n\r\nconst StockTransferDetails = enhance((props) => {\r\n    const {classes, detailData} = props\r\n    const detailLoading = _.get(detailData, 'transferDetailLoading')\r\n    const products = _.get(detailData, ['data', 'products'])\r\n    const comment = _.get(detailData, ['data', 'comment']) || 'Комментарий отсутствует'\r\n\r\n    if (_.isEmpty(products)) {\r\n        return (\r\n            <div className={classes.wrapper} style={detailLoading ? {padding: '0 30px', border: 'none', maxHeight: '2px'} : {maxHeight: '250px', overflowY: 'hidden'}}>\r\n                {detailLoading && <LinearProgress/>}\r\n                <div className={classes.emptyQuery}>\r\n                    <div>Товаров не найдено</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrapper} style={detailLoading ? {padding: '0 30px', border: 'none', maxHeight: '2px'} : {maxHeight: '250px'}}>\r\n            {detailLoading ? <LinearProgress/>\r\n                : <div className={classes.content}>\r\n                    <div className={classes.leftSide}>\r\n                        <Row className='dottedList'>\r\n                            <Col xs={6}>Товар</Col>\r\n                            <Col xs={4}>Тип товара</Col>\r\n                            <Col xs={2}>Кол-во</Col>\r\n                        </Row>\r\n                        {_.map(products, (item) => {\r\n                            const id = _.get(item, 'id')\r\n                            const name = _.get(item, ['product', 'name'])\r\n                            const measurement = _.get(item, ['product', 'measurement', 'name'])\r\n                            const amount = numberformat(_.get(item, 'amount'), measurement)\r\n                            return (\r\n                                <Row key={id} className='dottedList'>\r\n                                    <Col xs={6}>{name}</Col>\r\n                                    <Col xs={4}>Стиральный порошек</Col>\r\n                                    <Col xs={2}>{amount}</Col>\r\n                                </Row>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <div className={classes.rightSide}>\r\n                        <div className={classes.subtitle}>Комментарий:</div>\r\n                        <div>{comment}</div>\r\n                    </div>\r\n                </div>\r\n\r\n            }\r\n        </div>\r\n    )\r\n})\r\n\r\nStockTransferDetails.propTypes = {\r\n    detailData: PropTypes.object.isRequired\r\n}\r\n\r\nexport default StockTransferDetails\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/StockReceive/StockTransferDetails.js","import StockReceiveGridList from './StockReceiveGridList'\r\nconst STOCK_RECEIVE_CREATE_DIALOG_OPEN = 'openCreateDialog'\r\nconst TAB = 'tab'\r\nconst HISTORY_FILTER_OPEN = 'openFilterDialog'\r\n\r\nexport {\r\n    StockReceiveGridList,\r\n    STOCK_RECEIVE_CREATE_DIALOG_OPEN,\r\n    HISTORY_FILTER_OPEN,\r\n    TAB\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/StockReceive/index.js","import _ from 'lodash'\r\nimport moment from 'moment'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\r\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport GridList from '../GridList'\r\nimport Container from '../Container'\r\nimport StockCreateDialog from './StockCreateDialog'\r\nimport ConfirmDialog from '../ConfirmDialog'\r\nimport SubMenu from '../SubMenu'\r\nimport injectSheet from 'react-jss'\r\nimport {compose} from 'recompose'\r\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\r\nimport ContentAdd from 'material-ui/svg-icons/content/add'\r\nimport Tooltip from '../ToolTip'\r\nimport IconMenu from 'material-ui/IconMenu'\r\nimport MenuItem from 'material-ui/MenuItem'\r\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\r\nimport Edit from 'material-ui/svg-icons/image/edit'\r\n\r\nconst listHeader = [\r\n    {\r\n        sorting: true,\r\n        name: 'id',\r\n        xs: 1,\r\n        title: 'Id'\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'name',\r\n        xs: 3,\r\n        title: 'Наименование'\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'manager',\r\n        xs: 3,\r\n        title: 'Завсклад'\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'stockType',\r\n        xs: 2,\r\n        title: 'Тип склада'\r\n    },\r\n    {\r\n        sorting: true,\r\n        xs: 2,\r\n        name: 'created_date',\r\n        title: 'Дата создания'\r\n    },\r\n    {\r\n        sorting: false,\r\n        xs: 1,\r\n        name: 'actions',\r\n        title: ''\r\n    }\r\n]\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        addButton: {\r\n            '& button': {\r\n                backgroundColor: '#275482 !important'\r\n            }\r\n        },\r\n        addButtonWrapper: {\r\n            position: 'absolute',\r\n            top: '10px',\r\n            right: '0',\r\n            marginBottom: '0px'\r\n        }\r\n    })\r\n)\r\n\r\nconst StockGridList = enhance((props) => {\r\n    const {\r\n        filter,\r\n        createDialog,\r\n        updateDialog,\r\n        actionsDialog,\r\n        confirmDialog,\r\n        listData,\r\n        detailData,\r\n        classes\r\n    } = props\r\n\r\n    const actions = (\r\n        <div>\r\n            <IconButton onTouchTap={actionsDialog.handleActionEdit}>\r\n                <ModEditorIcon />\r\n            </IconButton>\r\n\r\n            <IconButton onTouchTap={actionsDialog.handleActionDelete}>\r\n                <DeleteIcon />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n\r\n    const stockDetail = (\r\n        <span>a</span>\r\n    )\r\n\r\n    const main = 1\r\n\r\n    const stockList = _.map(_.get(listData, 'data'), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const name = _.get(item, 'name')\r\n        const manager = _.get(item, ['manager', 'firstName']) + ' ' + _.get(item, ['manager', 'secondName'])\r\n        const stockType = _.toInteger(_.get(item, 'stockType')) === main ? 'Производственный' : 'Основной'\r\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\r\n        const iconButton = (\r\n            <IconButton style={{padding: '0 12px'}}>\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n        )\r\n        return (\r\n            <Row key={id}>\r\n                <Col xs={1}>{id}</Col>\r\n                <Col xs={3}>{name}</Col>\r\n                <Col xs={3}>{manager}</Col>\r\n                <Col xs={2}>{stockType}</Col>\r\n                <Col xs={2}>{createdDate}</Col>\r\n                <Col xs={1} style={{textAlign: 'right'}}>\r\n                    <IconMenu\r\n                        iconButtonElement={iconButton}\r\n                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\r\n                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\r\n                        <MenuItem\r\n                            primaryText=\"Изменить\"\r\n                            leftIcon={<Edit />}\r\n                            onTouchTap={() => {\r\n                                updateDialog.handleOpenUpdateDialog(id)\r\n                            }}\r\n                        />\r\n                        <MenuItem\r\n                            primaryText=\"Удалить \"\r\n                            leftIcon={<DeleteIcon />}\r\n                            onTouchTap={() => {\r\n                                confirmDialog.handleOpenConfirmDialog(id)\r\n                            }}\r\n                        />\r\n                    </IconMenu>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    })\r\n\r\n    const list = {\r\n        header: listHeader,\r\n        list: stockList,\r\n        loading: _.get(listData, 'listLoading')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.STOCK_LIST_URL}/>\r\n            <div className={classes.addButtonWrapper}>\r\n                <Tooltip position=\"left\" text=\"Добавить склад\">\r\n                    <FloatingActionButton\r\n                        mini={true}\r\n                        className={classes.addButton}\r\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\r\n                        <ContentAdd />\r\n                    </FloatingActionButton>\r\n                </Tooltip>\r\n            </div>\r\n\r\n            <GridList\r\n                filter={filter}\r\n                list={list}\r\n                detail={stockDetail}\r\n                actionsDialog={actions}\r\n            />\r\n\r\n            <StockCreateDialog\r\n                open={createDialog.openCreateDialog}\r\n                loading={createDialog.createLoading}\r\n                onClose={createDialog.handleCloseCreateDialog}\r\n                onSubmit={createDialog.handleSubmitCreateDialog}\r\n            />\r\n\r\n            <StockCreateDialog\r\n                isUpdate={true}\r\n                initialValues={updateDialog.initialValues}\r\n                open={updateDialog.openUpdateDialog}\r\n                loading={updateDialog.updateLoading}\r\n                onClose={updateDialog.handleCloseUpdateDialog}\r\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\r\n            />\r\n\r\n            {detailData.data && <ConfirmDialog\r\n                type=\"delete\"\r\n                message={_.get(detailData, ['data', 'name'])}\r\n                loading={confirmDialog.confirmLoading}\r\n                onClose={confirmDialog.handleCloseConfirmDialog}\r\n                onSubmit={confirmDialog.handleSendConfirmDialog}\r\n                open={confirmDialog.openConfirmDialog}\r\n            />}\r\n        </Container>\r\n    )\r\n})\r\n\r\nStockGridList.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object,\r\n    createDialog: PropTypes.shape({\r\n        createLoading: PropTypes.bool.isRequired,\r\n        openCreateDialog: PropTypes.bool.isRequired,\r\n        handleOpenCreateDialog: PropTypes.func.isRequired,\r\n        handleCloseCreateDialog: PropTypes.func.isRequired,\r\n        handleSubmitCreateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    confirmDialog: PropTypes.shape({\r\n        confirmLoading: PropTypes.bool.isRequired,\r\n        openConfirmDialog: PropTypes.bool.isRequired,\r\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\r\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\r\n        handleSendConfirmDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    updateDialog: PropTypes.shape({\r\n        updateLoading: PropTypes.bool.isRequired,\r\n        openUpdateDialog: PropTypes.bool.isRequired,\r\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\r\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\r\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    actionsDialog: PropTypes.shape({\r\n        handleActionEdit: PropTypes.func.isRequired,\r\n        handleActionDelete: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default StockGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Stock/StockGridList.js","import StockGridList from './StockGridList'\nimport {STOCK_CREATE_DIALOG_OPEN} from './StockCreateDialog'\nconst STOCK_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nconst STOCK_DELETE_DIALOG_OPEN = 'openDeleteDialog'\n\nexport {\n    STOCK_CREATE_DIALOG_OPEN,\n    STOCK_UPDATE_DIALOG_OPEN,\n    STOCK_DELETE_DIALOG_OPEN,\n    StockGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Stock/index.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport {Link} from 'react-router'\r\nimport PropTypes from 'prop-types'\r\nimport injectSheet from 'react-jss'\r\nimport {compose} from 'recompose'\r\nimport HardwareKeyboardArrowRight from 'material-ui/svg-icons/hardware/keyboard-arrow-right'\r\nimport {MenuItems} from '../SidebarMenu/MenuItems'\r\nimport ToolTip from '../ToolTip'\r\n\r\nconst NOT_FOUND = -1\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrapper: {\r\n            position: 'relative',\r\n            width: '100%',\r\n            height: '60px',\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n        },\r\n        item: {\r\n            color: '#44637e',\r\n            marginRight: '15px',\r\n            '&:hover': {\r\n                cursor: 'pointer'\r\n            }\r\n        },\r\n        active: {\r\n            extend: 'item',\r\n            borderBottom: '1px dashed #44637e',\r\n            fontWeight: '600'\r\n        },\r\n        subParentIco: {\r\n            paddingTop: '3px',\r\n            paddingRight: '10px',\r\n            paddingLeft: '2px',\r\n            '& svg path': {\r\n                fill: 'rgb(93, 100, 116) !important'\r\n            }\r\n        }\r\n    })\r\n)\r\n\r\nconst SubMenu = enhance((props) => {\r\n    const {classes, url} = props\r\n\r\n    const parent = _\r\n        .chain(MenuItems)\r\n        .find((item) => {\r\n            return (_.findIndex(item.childs, (ch) => ch.url === url) > NOT_FOUND)\r\n        })\r\n        .value()\r\n\r\n    const items = _.map(parent.childs, (item, index) => {\r\n        return (\r\n            <Link to={item.url} key={index}>\r\n                <span className={item.url === url ? classes.active : classes.item}> {item.name}</span>\r\n            </Link>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n                <ToolTip position=\"right\" text={parent.name}>\r\n                    <div className={classes.subParentIco}>\r\n                        {parent.icon}\r\n                    </div>\r\n                </ToolTip>\r\n            <HardwareKeyboardArrowRight style={{color: '#66696f', height: '12px', marginRight: '15px', width: 'auto'}} />\r\n            {items}\r\n        </div>\r\n    )\r\n})\r\n\r\nSubMenu.propTypes = {\r\n    url: PropTypes.string.isRequired\r\n}\r\n\r\nexport default SubMenu\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/SubMenu/SubMenu.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose, withReducer} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport numberFormat from '../../helpers/numberFormat'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport MainStyles from '../Styles/MainStyles'\r\n\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        defect: {\r\n            padding: '10px 0',\r\n            width: '100%',\r\n            '& .row:first-child': {\r\n                fontWeight: '600',\r\n                padding: '20px 0',\r\n                position: 'relative'\r\n            },\r\n            '& .row': {\r\n                padding: '10px 0',\r\n                position: 'static',\r\n                '& > div:last-child': {\r\n                    textAlign: 'right'\r\n                }\r\n            },\r\n            '& img': {\r\n                display: 'block',\r\n                marginLeft: 'auto',\r\n                width: '50px'\r\n            }\r\n        },\r\n        bigImage: {\r\n            background: '#eee',\r\n            position: 'absolute',\r\n            top: '-59px',\r\n            left: '0',\r\n            width: '100%',\r\n            height: '100%'\r\n        }\r\n    })),\r\n    withReducer('state', 'dispatch', (state, action) => {\r\n        return {...state, ...action}\r\n    }, {open: false}),\r\n)\r\n\r\nconst customContentStyle = {\r\n    width: '600px',\r\n    maxWidth: 'none'\r\n}\r\nconst SupplyDefectDialog = enhance((props) => {\r\n    const {open, onClose, classes, defectData} = props\r\n    const defectItems = _.map(defectData, (item) => {\r\n        const amount = numberFormat(_.get(item, 'amount'))\r\n        const barcode = _.get(item, 'barcode')\r\n        const comment = _.get(item, 'comment')\r\n        const imgURL = _.get(item, ['image', 'file'])\r\n        const measurement = _.get(item, ['measurement', 'name'])\r\n\r\n        return (\r\n            <Row key={barcode} className=\"dottedList\">\r\n                <Col xs={2}>{barcode}</Col>\r\n                <Col xs={2}>{amount} {measurement}</Col>\r\n                <Col xs={6}>{comment}</Col>\r\n                <Col xs={2}><img src={imgURL} alt=\"\"/></Col>\r\n            </Row>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            contentStyle={customContentStyle}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            bodyClassName={classes.popUp}\r\n            autoScrollBodyContent={true}>\r\n            <div className={classes.titleContent}>\r\n                <span>Бракованные товараы</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <div className={classes.loader}>\r\n                    <CircularProgress size={40} thickness={4}/>\r\n                </div>\r\n                <div className={classes.innerWrap}>\r\n                    <div className={classes.inContent} style={{minHeight: '350px', position: 'relative'}}>\r\n                        <div className={classes.defect}>\r\n                            <Row className=\"dottedList\">\r\n                                <Col xs={2}>Баркод</Col>\r\n                                <Col xs={2}>Кол-во</Col>\r\n                                <Col xs={6}>Комментарий</Col>\r\n                                <Col xs={2}></Col>\r\n                            </Row>\r\n                            {defectItems}\r\n                        </div>\r\n                        <div className={classes.bigImage}>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\nSupplyDefectDialog.propTyeps = {\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    defectData: PropTypes.object\r\n}\r\nexport default SupplyDefectDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Supply/SupplyDefectDialog.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose, withState} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport Edit from 'material-ui/svg-icons/image/edit'\r\nimport Delete from 'material-ui/svg-icons/action/delete'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport Person from '../Images/person.png'\r\nimport Dot from '../Images/dot.png'\r\nimport CloseIcon from '../CloseIcon'\r\nimport numberFormat from '../../helpers/numberFormat'\r\nimport Tooltip from '../ToolTip'\r\nimport moment from 'moment'\r\n\r\nconst colorBlue = '#12aaeb'\r\nconst enhance = compose(\r\n    injectSheet({\r\n        dottedList: {\r\n            padding: '20px 0'\r\n        },\r\n        wrapper: {\r\n            color: '#333 !important',\r\n            width: '100%',\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            padding: '20px 30px',\r\n            '& a': {\r\n                color: colorBlue\r\n            }\r\n        },\r\n        link: {\r\n            borderBottom: '1px dashed',\r\n            fontWeight: '600'\r\n        },\r\n        defect: {\r\n            extend: 'link',\r\n            color: '#e57373 !important'\r\n        },\r\n        loader: {\r\n            width: '100%',\r\n            background: '#fff',\r\n            height: '400px',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        },\r\n        expenseLoader: {\r\n            extend: 'loader',\r\n            height: 'auto',\r\n            padding: '20px 0'\r\n        },\r\n        title: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            width: '100%',\r\n            height: '65px',\r\n            margin: '-20px 0 0'\r\n        },\r\n        titleLabel: {\r\n            fontSize: '18px',\r\n            color: '#333',\r\n            fontWeight: '600',\r\n            cursor: 'pointer'\r\n        },\r\n        titleButtons: {\r\n            display: 'flex',\r\n            justifyContent: 'flex-end'\r\n        },\r\n        titleSupplier: {\r\n            fontSize: '18px',\r\n            position: 'relative',\r\n            '& .supplierDetails': {\r\n                background: '#fff',\r\n                boxShadow: '0 2px 5px 0px rgba(0, 0, 0, 0.16)',\r\n                fontSize: '13px',\r\n                position: 'absolute',\r\n                padding: '64px 28px 20px',\r\n                top: '-21px',\r\n                left: '50%',\r\n                zIndex: '9',\r\n                minWidth: '300px',\r\n                transform: 'translate(-50%, 0)',\r\n                '& .detailsWrap': {\r\n                    position: 'relative',\r\n                    paddingTop: '10px',\r\n                    '&:before': {\r\n                        content: '\"\"',\r\n                        background: 'url(' + Dot + ')',\r\n                        position: 'absolute',\r\n                        top: '0',\r\n                        left: '0',\r\n                        right: '0',\r\n                        height: '2px'\r\n                    }\r\n                },\r\n                '& .detailsList': {\r\n                    padding: '10px 0',\r\n                    '&:last-child': {\r\n                        paddingBottom: '0'\r\n                    },\r\n                    '& div:first-child': {\r\n                        color: '#666'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        dropdown: {\r\n            position: 'relative',\r\n            paddingRight: '18px',\r\n            zIndex: '10',\r\n            '&:after': {\r\n                top: '10px',\r\n                right: '0',\r\n                content: '\"\"',\r\n                position: 'absolute',\r\n                borderTop: '5px solid',\r\n                borderLeft: '5px solid transparent',\r\n                borderRight: '5px solid transparent'\r\n            }\r\n        },\r\n        details: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            width: '100%',\r\n            background: '#f2f5f8',\r\n            padding: '0 30px',\r\n            margin: '0 -30px',\r\n            minHeight: '60px'\r\n        },\r\n        payInfo: {\r\n            display: 'flex'\r\n        },\r\n        storeInfo: {\r\n            display: 'flex'\r\n        },\r\n        dateInfo: {\r\n            textAlign: 'right'\r\n        },\r\n        data: {\r\n            width: '100%',\r\n            '& .dataHeader': {\r\n                fontWeight: 'bold',\r\n                padding: '20px 0',\r\n                width: '100%',\r\n                borderBottom: '1px solid #efefef',\r\n                '& .row': {\r\n                    alignItems: 'center',\r\n                    '& div': {\r\n                        whiteSpace: 'nowrap',\r\n                        overflow: 'hidden',\r\n                        textOverflow: 'ellipsis'\r\n                    }\r\n                }\r\n            },\r\n            '& .summary': {\r\n                fontWeight: 'bold',\r\n                textTransform: 'uppercase',\r\n                textAlign: 'right',\r\n                padding: '20px 30px',\r\n                margin: '0 -30px',\r\n                borderBottom: '1px #efefef solid'\r\n            },\r\n            '& .dottedList': {\r\n                '&:after': {\r\n                    left: '0.5rem',\r\n                    right: '0.5rem'\r\n                }\r\n            },\r\n            '& .addExpenses': {\r\n                padding: '20px 30px 0',\r\n                margin: '0 -30px',\r\n                borderBottom: '1px #efefef solid',\r\n                '& .addExpense': {\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    paddingBottom: '20px',\r\n                    width: '100%',\r\n                    justifyContent: 'space-between',\r\n                    fontWeight: 'bold',\r\n                    '& .expenseButton > div > span ': {\r\n                        color: '#12aaeb !important',\r\n                        textTransform: 'inherit !important'\r\n                    }\r\n                }\r\n            },\r\n            '& .expenseInfo': {\r\n                padding: '0 !important',\r\n                display: 'block',\r\n                '&:last-child': {\r\n                    position: 'static'\r\n                },\r\n                '& .row': {\r\n                    alignItems: 'center'\r\n                }\r\n            },\r\n            '& .comment': {\r\n                display: 'flex',\r\n                padding: '20px 0 0',\r\n                alignItems: 'center',\r\n                '& .personImage': {\r\n                    borderRadius: '50%',\r\n                    overflow: 'hidden',\r\n                    flexBasis: '35px',\r\n                    flexGrow: '1',\r\n                    height: '35px',\r\n                    width: '35px',\r\n                    '& img': {\r\n                        display: 'block',\r\n                        height: '100%',\r\n                        width: '100%'\r\n                    }\r\n                },\r\n                '& .personText': {\r\n                    background: '#f2f5f8',\r\n                    borderRadius: '2px',\r\n                    marginLeft: '15px',\r\n                    padding: '15px',\r\n                    position: 'relative',\r\n                    width: 'calc(100% - 50px)',\r\n                    '&:after': {\r\n                        content: '\"\"',\r\n                        position: 'absolute',\r\n                        borderRightColor: '#f2f5f8',\r\n                        borderRightStyle: 'solid',\r\n                        borderRightWidth: '7px',\r\n                        borderTop: '7px solid transparent',\r\n                        borderBottom: '7px solid transparent',\r\n                        left: '-7px',\r\n                        top: '50%',\r\n                        marginTop: '-7px'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        expenseSum: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end'\r\n        }\r\n    }),\r\n    withState('openDetails', 'setOpenDetails', false)\r\n)\r\n\r\nconst iconStyle = {\r\n    icon: {\r\n        color: '#666',\r\n        width: 20,\r\n        height: 20\r\n    },\r\n    button: {\r\n        width: 48,\r\n        height: 48,\r\n        padding: 0\r\n    }\r\n}\r\n\r\nconst SupplyDetails = enhance((props) => {\r\n    const {\r\n        classes,\r\n        loading,\r\n        data,\r\n        setOpenDetails,\r\n        openDetails,\r\n        handleSupplyExpenseOpenCreateDialog,\r\n        supplyListData,\r\n        defectDialog,\r\n        updateDialog,\r\n        confirmDialog,\r\n        confirmExpenseDialog,\r\n        handleCloseDetail\r\n    } = props\r\n    const id = _.get(data, 'id')\r\n    const provider = _.get(data, ['provider', 'name'])\r\n    const products = _.get(data, 'products')\r\n    const stock = _.get(data, ['stock', 'name'])\r\n    const currency = _.get(data, ['currency', 'name']) || 'N/A'\r\n    const contact = _.get(data, 'contact')\r\n    const contactPerson = _.get(contact, 'name')\r\n    const contactEmail = _.get(contact, 'email')\r\n    const contactPhone = _.get(contact, 'phone')\r\n    const dateDelivery = _.get(data, 'dateDelivery') || 'Не указано'\r\n    const acceptedTime = (_.get(data, 'acceptedTime')) ? moment(_.get(data, 'acceptedTime')).format('DD.MM.YYYY HH:mm:ss') : 'Не начался'\r\n    const finishedTime = (_.get(data, 'finishedTime')) ? moment(_.get(data, 'finishedTime')).format('DD.MM.YYYY HH:mm:ss') : 'Не закончилась'\r\n\r\n    const totalCost = _.get(data, 'totalCost')\r\n    const comment = _.get(data, 'comment')\r\n\r\n    const supplyExpenseList = _.get(supplyListData, 'data')\r\n    const supplyExpenseListLoading = _.get(supplyListData, 'supplyExpenseListLoading')\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className={classes.loader}>\r\n                <div>\r\n                    <CircularProgress size={40} thickness={4}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.title}>\r\n                <div className={classes.titleLabel}\r\n                    onClick={handleCloseDetail}>Поставка №{id}</div>\r\n                <div className={classes.titleSupplier}>\r\n                    <a className={classes.dropdown} onMouseEnter={() => {\r\n                        setOpenDetails(true)\r\n                    }}>{provider}</a>\r\n                    {openDetails &&\r\n                    <div className=\"supplierDetails\" onMouseLeave={() => {\r\n                        setOpenDetails(false)\r\n                    }}>\r\n                        <div className=\"detailsWrap\">\r\n                            <Row className=\"detailsList\">\r\n                                <Col xs={6}>Контактное лицо</Col>\r\n                                <Col xs={6}>{contactPerson}</Col>\r\n                            </Row>\r\n                            <Row className=\"detailsList\">\r\n                                <Col xs={6}>Телефон</Col>\r\n                                <Col xs={6}>{contactPhone}</Col>\r\n                            </Row>\r\n                            <Row className=\"detailsList\">\r\n                                <Col xs={6}>Email</Col>\r\n                                <Col xs={6}>{contactEmail}</Col>\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                </div>\r\n                <div className={classes.titleButtons}>\r\n                    <Tooltip position=\"bottom\" text=\"Изменить\">\r\n                        <IconButton\r\n                            iconStyle={iconStyle.icon}\r\n                            style={iconStyle.button}\r\n                            touch={true}\r\n                            onTouchTap={updateDialog.handleOpenUpdateDialog}>\r\n                            <Edit />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip position=\"bottom\" text=\"Отменить\">\r\n                        <IconButton\r\n                            iconStyle={iconStyle.icon}\r\n                            style={iconStyle.button}\r\n                            touch={true}\r\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(id) }}>\r\n                            <Delete />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.details}>\r\n                <div className={classes.storeInfo}>\r\n                    <div className={classes.store}>Склад: <span\r\n                        style={{color: '#999', fontWeight: 'bold'}}>{stock}</span></div>\r\n                    <div className={classes.supplyDate} style={{marginLeft: '45px'}}>Дата поставки: <span\r\n                        style={{color: '#e57373', fontWeight: 'bold'}}>{dateDelivery}</span></div>\r\n                </div>\r\n                <div className={classes.dateInfo}>\r\n                    <div>Начало приемки: <span style={{fontWeight: '600'}}>{acceptedTime}</span></div>\r\n                    <div>Конец приемки: <span style={{fontWeight: '600'}}>{finishedTime}</span></div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.data}>\r\n                <div className=\"dataHeader\">\r\n                    <Row>\r\n                        <Col xs={4}>Товар</Col>\r\n                        <Col xs={1}>Кол-во</Col>\r\n                        <Col xs={1}>Принято</Col>\r\n                        <Col xs={1}>Брак</Col>\r\n                        <Col xs={1}>Недостача</Col>\r\n                        <Col xs={2}>\r\n                            <div style={{textAlign: 'right'}}>Стоимость</div>\r\n                        </Col>\r\n                        <Col xs={2}>\r\n                            <div style={{textAlign: 'right'}}>Итог</div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                <div>\r\n                    {_.map(products, (item) => {\r\n                        const ZERO = 0\r\n                        const product = _.get(item, 'product')\r\n                        const defId = _.get(item, 'id')\r\n                        const productId = _.get(product, 'id')\r\n                        const productName = _.get(product, 'name')\r\n                        const cost = _.toInteger(_.get(item, 'cost'))\r\n                        const amount = _.toInteger(_.get(item, 'amount'))\r\n                        const itemPrice = cost / amount\r\n                        const postedAmount = _.get(item, 'postedAmount')\r\n                        const defectAmount = _.get(item, 'defectAmount')\r\n                        const measurement = _.get(product, ['measurement', 'name'])\r\n                        const notAccepted = amount - (postedAmount + defectAmount)\r\n                        return (\r\n                            <Row className=\"dataInfo dottedList\" key={productId}>\r\n                                <Col xs={4}>{productName}</Col>\r\n                                <Col xs={1}>{numberFormat(amount, measurement)}</Col>\r\n                                <Col xs={1}>{numberFormat(postedAmount, measurement)}</Col>\r\n                                <Col xs={1}>\r\n                                    {(defectAmount > ZERO) ? <a onClick={ () => { defectDialog.handleOpenDefectDialog(defId) } }\r\n                                                                className={classes.defect}>{numberFormat(defectAmount, measurement)}</a>\r\n                                    : <span>{numberFormat(defectAmount, measurement)}</span>}\r\n                                    </Col>\r\n                                <Col xs={1}>{notAccepted}</Col>\r\n                                <Col xs={2}>\r\n                                    <div style={{textAlign: 'right'}}>{numberFormat(itemPrice, currency)}</div>\r\n                                </Col>\r\n                                <Col xs={2}>\r\n                                    <div style={{textAlign: 'right'}}>{numberFormat(cost, currency)}</div>\r\n                                </Col>\r\n                            </Row>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"summary\">\r\n                    <div>Сумма заказа <span style={{marginLeft: '40px'}}>{numberFormat(totalCost, currency)}</span></div>\r\n                </div>\r\n                <div className=\"addExpenses\">\r\n                    <div className=\"addExpense\">\r\n                        <div>Дополнительные расходы по заказу</div>\r\n                        <div>\r\n                            <FlatButton\r\n                                onTouchTap={() => { handleSupplyExpenseOpenCreateDialog(id) }}\r\n                                className=\"expenseButton\"\r\n                                label=\"+ добавить доп. расход\"/>\r\n                        </div>\r\n                    </div>\r\n                    {supplyExpenseListLoading && <div className={classes.expenseLoader}>\r\n                        <div>\r\n                            <CircularProgress size={40} thickness={4}/>\r\n                        </div>\r\n                    </div>}\r\n                    {!supplyExpenseListLoading && _.map(supplyExpenseList, (item) => {\r\n                        const expId = _.get(item, 'id')\r\n                        const expComment = _.get(item, 'comment')\r\n                        const expAmount = numberFormat(_.get(item, 'amount'))\r\n                        const expCurrency = _.get(item, ['currency', 'name'])\r\n                        return (\r\n                            <div className=\"expenseInfo dottedList\" key={expId}>\r\n                                <Row key={expId}>\r\n                                    <Col xs={9}>{expComment}</Col>\r\n                                    <Col xs={3} className={classes.expenseSum}>\r\n                                        <div style={{textAlign: 'right'}}>{expAmount} {expCurrency}</div>\r\n                                        <IconButton\r\n                                            iconStyle={{color: '#666'}}\r\n                                            onTouchTap={() => { confirmExpenseDialog.handleOpenConfirmExpenseDialog(expId) }}>\r\n                                            <CloseIcon/>\r\n                                        </IconButton>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                {comment && <div className=\"comment\">\r\n                    <div className=\"personImage\">\r\n                        <img src={Person} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"personText\">\r\n                        {comment}\r\n                    </div>\r\n                </div>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nSupplyDetails.propTypes = {\r\n    defectDialog: PropTypes.shape({\r\n        openDefectDialog: PropTypes.bool.isRequired,\r\n        handleOpenDefectDialog: PropTypes.func.isRequired,\r\n        handleCloseDefectDialog: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default SupplyDetails\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Supply/SupplyDetails.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router'\nimport {Row, Col} from 'react-flexbox-grid'\nimport IconButton from 'material-ui/IconButton'\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\nimport * as ROUTES from '../../constants/routes'\nimport GridList from '../GridList'\nimport Container from '../Container'\nimport SupplyFilterForm from './SupplyFilterForm'\nimport SupplyDetails from './SupplyDetails'\nimport SupplyCreateDialog from './SupplyCreateDialog'\nimport SupplyDefectDialog from './SupplyDefectDialog'\nimport ConfirmDialog from '../ConfirmDialog'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport SupplyExpenseCreateDialog from './SupplyExpenseCreateDialog'\nimport Tooltip from '../ToolTip'\nimport numberFormat from '../../helpers/numberFormat'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'id',\n        title: '№',\n        xs: 1\n    },\n    {\n        sorting: true,\n        name: 'name',\n        title: 'Поставщик',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'stock',\n        title: 'Склад',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'dateDelivery',\n        title: 'Дата поставки',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'totalCost',\n        title: 'Цена заказа',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'status',\n        title: 'Статус',\n        xs: 1\n    },\n    {\n        sorting: true,\n        name: 'acceptedCost',\n        title: 'Принято',\n        xs: 1\n    },\n    {\n        sorting: true,\n        name: 'defectedCost',\n        title: 'Браковано',\n        xs: 1\n    }\n]\n\nconst enhance = compose(\n    injectSheet({\n        addButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        addButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px'\n        },\n        dot: {\n            display: 'inline-block',\n            height: '7px',\n            width: '7px',\n            borderRadius: '50%',\n            marginRight: '6px'\n        },\n        success: {\n            extend: 'dot',\n            backgroundColor: '#81c784'\n        },\n        begin: {\n            extend: 'dot',\n            backgroundColor: '#f0ad4e'\n        },\n        error: {\n            extend: 'dot',\n            backgroundColor: '#e57373'\n        },\n        waiting: {\n            extend: 'dot',\n            backgroundColor: '#64b5f6'\n        }\n    })\n)\n\nconst SupplyGridList = enhance((props) => {\n    const {\n        filter,\n        createDialog,\n        defectDialog,\n        updateDialog,\n        filterDialog,\n        actionsDialog,\n        confirmDialog,\n        confirmExpenseDialog,\n        deleteDialog,\n        listData,\n        detailData,\n        classes,\n\n        supplyExpenseCreateDialog,\n        supplyListData\n    } = props\n\n    const actions = (\n        <div>\n            <IconButton onTouchTap={actionsDialog.handleActionEdit}>\n                <ModEditorIcon />\n            </IconButton>\n\n            <IconButton onTouchTap={actionsDialog.handleActionDelete}>\n                <DeleteIcon />\n            </IconButton>\n        </div>\n    )\n\n    const supplyFilterDialog = (\n        <SupplyFilterForm\n            initialValues={filterDialog.initialValues}\n            filter={filter}\n            filterDialog={filterDialog}\n        />\n    )\n\n    const supplyDetail = (\n        <SupplyDetails\n            key={_.get(detailData, 'id')}\n            data={_.get(detailData, 'data') || {}}\n            defectDialog={defectDialog}\n            deleteDialog={deleteDialog}\n            confirmDialog={confirmDialog}\n            confirmExpenseDialog={confirmExpenseDialog}\n            updateDialog={updateDialog}\n            loading={_.get(detailData, 'detailLoading')}\n            handleSupplyExpenseOpenCreateDialog={supplyExpenseCreateDialog.handleSupplyExpenseOpenCreateDialog}\n            supplyListData={supplyListData}\n            handleCloseDetail={_.get(detailData, 'handleCloseDetail')}\n        />\n    )\n\n    const PENDING = 0\n    const IN_PROGRESS = 1\n    const COMPLETED = 2\n    const supplyList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(_.get(item, 'provider'), 'name')\n        const stock = _.get(_.get(item, 'stock'), 'name') || 'N/A'\n        const dateDelivery = _.get(item, 'dateDelivery') || 'Не указано'\n        const totalCost = numberFormat(_.get(item, 'totalCost'), _.get(item, ['currency', 'name']))\n        const acceptedCost = numberFormat(_.get(item, 'acceptedCost'), _.get(item, ['currency', 'name']))\n        const defectedCost = numberFormat(_.get(item, 'defectedCost'), _.get(item, ['currency', 'name']))\n        const status = _.toNumber(_.get(item, 'status'))\n\n        return (\n            <Row key={id}>\n                <Col xs={1}>{id}</Col>\n                <Col xs={2}>\n                    <Link to={{\n                        pathname: sprintf(ROUTES.SUPPLY_ITEM_PATH, id),\n                        query: filter.getParams()\n                    }}>{name}</Link>\n                </Col>\n                <Col xs={2}>{stock}</Col>\n                <Col xs={2}>{dateDelivery}</Col>\n                <Col xs={2}>{totalCost}</Col>\n                <Col xs={1}>{status === PENDING ? (<span><i className={classes.waiting} /> ожидает</span>)\n                    : ((status === IN_PROGRESS) ? (<span><i className={classes.begin} /> начался</span>)\n                        : (status === COMPLETED) ? (<span><i className={classes.success} /> принято</span>)\n                            : (<span><i className={classes.error} /> отменен</span>))}</Col>\n                <Col xs={1}>{acceptedCost}</Col>\n                <Col xs={1}>{defectedCost}</Col>\n            </Row>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: supplyList,\n        loading: _.get(listData, 'listLoading')\n    }\n\n    const expense = _.find(_.get(supplyListData, 'data'), {'id': confirmExpenseDialog.removeId})\n    const expComment = _.get(expense, 'comment')\n    return (\n        <Container>\n            <SubMenu url={ROUTES.SUPPLY_LIST_URL}/>\n\n            <div className={classes.addButtonWrapper}>\n                <Tooltip position=\"left\" text=\"Добавить поставку\">\n                    <FloatingActionButton\n                        mini={true}\n                        className={classes.addButton}\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\n                        <ContentAdd />\n                    </FloatingActionButton>\n                </Tooltip>\n            </div>\n\n            <GridList\n                filter={filter}\n                list={list}\n                detail={supplyDetail}\n                actionsDialog={actions}\n                filterDialog={supplyFilterDialog}\n            />\n\n            <SupplyCreateDialog\n                open={createDialog.openCreateDialog}\n                loading={createDialog.createLoading}\n                onClose={createDialog.handleCloseCreateDialog}\n                onSubmit={createDialog.handleSubmitCreateDialog}\n            />\n\n            <SupplyDefectDialog\n                open={defectDialog.openDefectDialog}\n                onClose={defectDialog.handleCloseDefectDialog}\n                defectData={_.get(detailData, 'defect')}\n            />\n\n            <SupplyCreateDialog\n                isUpdate={true}\n                initialValues={updateDialog.initialValues}\n                open={updateDialog.openUpdateDialog}\n                loading={updateDialog.updateLoading}\n                onClose={updateDialog.handleCloseUpdateDialog}\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\n            />\n\n            <SupplyExpenseCreateDialog\n                open={supplyExpenseCreateDialog.openSupplyExpenseCreateDialog}\n                loading={supplyExpenseCreateDialog.supplyExpenseLoading}\n                onClose={supplyExpenseCreateDialog.handleSupplyExpenseCloseCreateDialog}\n                onSubmit={supplyExpenseCreateDialog.handleSupplyExpenseSubmitCreateDialog}\n            />\n\n            {detailData.data && <ConfirmDialog\n                type=\"cancel\"\n                message={'Постака № ' + _.get(detailData, ['data', 'id'])}\n                onClose={confirmDialog.handleCloseConfirmDialog}\n                onSubmit={confirmDialog.handleSendConfirmDialog}\n                open={confirmDialog.openConfirmDialog}\n            />}\n\n            {confirmExpenseDialog.removeId && <ConfirmDialog\n                type=\"delete\"\n                message={'Дополнительный расход: ' + expComment}\n                onClose={confirmExpenseDialog.handleCloseConfirmExpenseDialog}\n                onSubmit={confirmExpenseDialog.handleSendConfirmExpenseDialog}\n                open={confirmExpenseDialog.openConfirmExpenseDialog}\n            />}\n        </Container>\n    )\n})\n\nSupplyGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    createDialog: PropTypes.shape({\n        createLoading: PropTypes.bool.isRequired,\n        openCreateDialog: PropTypes.bool.isRequired,\n        handleOpenCreateDialog: PropTypes.func.isRequired,\n        handleCloseCreateDialog: PropTypes.func.isRequired,\n        handleSubmitCreateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    defectDialog: PropTypes.shape({\n        openDefectDialog: PropTypes.bool.isRequired,\n        handleOpenDefectDialog: PropTypes.func.isRequired,\n        handleCloseDefectDialog: PropTypes.func.isRequired\n    }).isRequired,\n    confirmDialog: PropTypes.shape({\n        openConfirmDialog: PropTypes.bool.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleSendConfirmDialog: PropTypes.func.isRequired\n    }).isRequired,\n    confirmExpenseDialog: PropTypes.shape({\n        openConfirmExpenseDialog: PropTypes.bool.isRequired,\n        handleOpenConfirmExpenseDialog: PropTypes.func.isRequired,\n        handleCloseConfirmExpenseDialog: PropTypes.func.isRequired,\n        handleSendConfirmExpenseDialog: PropTypes.func.isRequired\n    }).isRequired,\n    deleteDialog: PropTypes.shape({\n        openDeleteDialog: PropTypes.bool.isRequired,\n        handleOpenDeleteDialog: PropTypes.func.isRequired,\n        handleCloseDeleteDialog: PropTypes.func.isRequired\n    }).isRequired,\n    updateDialog: PropTypes.shape({\n        updateLoading: PropTypes.bool.isRequired,\n        openUpdateDialog: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    actionsDialog: PropTypes.shape({\n        handleActionEdit: PropTypes.func.isRequired,\n        handleActionDelete: PropTypes.func.isRequired\n    }).isRequired,\n    filterDialog: PropTypes.shape({\n        initialValues: PropTypes.object,\n        filterLoading: PropTypes.bool,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    }).isRequired,\n\n    supplyExpenseCreateDialog: PropTypes.shape({\n        supplyExpenseLoading: PropTypes.bool.isRequired,\n        openSupplyExpenseCreateDialog: PropTypes.bool.isRequired,\n        handleSupplyExpenseOpenCreateDialog: PropTypes.func.isRequired,\n        handleSupplyExpenseCloseCreateDialog: PropTypes.func.isRequired,\n        handleSupplyExpenseSubmitCreateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    supplyListData: PropTypes.shape({\n        data: PropTypes.array,\n        supplyExpenseListLoading: PropTypes.bool.isRequired,\n        openSupplyExpenseConfirmDialog: PropTypes.bool.isRequired\n    })\n}\n\nexport default SupplyGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Supply/SupplyGridList.js","import SupplyGridList from './SupplyGridList'\nimport {SUPPLY_CREATE_DIALOG_OPEN} from './SupplyCreateDialog'\nimport {SUPPLY_EXPENSE_CREATE_DIALOG_OPEN} from './SupplyExpenseCreateDialog'\nimport {SUPPLY_FILTER_KEY, SUPPLY_FILTER_OPEN} from './SupplyFilterForm'\nconst SUPPLY_EXPENSE_DELETE_DIALOG_OPEN = 'delexpsup'\nconst SUPPLY_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nconst SUPPLY_DEFECT_DIALOG_OPEN = 'openDefectDialog'\nexport {\n    SUPPLY_EXPENSE_CREATE_DIALOG_OPEN,\n    SUPPLY_CREATE_DIALOG_OPEN,\n    SUPPLY_UPDATE_DIALOG_OPEN,\n    SUPPLY_FILTER_KEY,\n    SUPPLY_FILTER_OPEN,\n    SUPPLY_EXPENSE_DELETE_DIALOG_OPEN,\n    SUPPLY_DEFECT_DIALOG_OPEN,\n    SupplyGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Supply/index.js","import React from 'react'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport ReactTooltip from 'react-tooltip'\nimport {compose, withState} from 'recompose'\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            position: 'relative'\n        },\n        tooltip: {\n            zIndex: '999999 !important',\n            '&.place-left': {\n                '&:after': {\n                    right: '-5px !important'\n                }\n            }\n        }\n    }),\n    withState('visible', 'setVisible', false)\n)\n\nconst ToolTip = enhance(({classes, text, children, position}) => {\n    const uniqId = _.uniqueId('tooltip_')\n    return (\n        <div>\n            <div data-tip data-for={uniqId}>\n                {children}\n            </div>\n            <ReactTooltip\n                place={position}\n                id={uniqId}\n                type=\"dark\"\n                effect=\"solid\"\n                className={classes.tooltip}>\n                {text}\n            </ReactTooltip>\n        </div>\n    )\n})\n\nToolTip.propTypes = {\n    position: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired\n}\n\nexport default ToolTip\n\n\n\n// WEBPACK FOOTER //\n// src/components/ToolTip/ToolTip.js","import React from 'react'\r\nimport {compose} from 'recompose'\r\nimport {withGoogleMap, GoogleMap as DefaultGoogleMap} from 'react-google-maps'\r\nimport withScriptjs from 'react-google-maps/lib/async/withScriptjs'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport * as GOOGLE_MAP from '../../constants/googleMaps'\r\nimport DrawingManager from 'react-google-maps/lib/drawing/DrawingManager'\r\n\r\nconst enhance = compose(\r\n    withScriptjs,\r\n    withGoogleMap\r\n)\r\n\r\nconst GoogleMapWrapper = enhance(({onMapLoad, ...props}) => {\r\n    return (\r\n        <DefaultGoogleMap ref={onMapLoad} {...props}>\r\n            <DrawingManager\r\n                defaultDrawingMode={google.maps.drawing.OverlayType.CIRCLE}\r\n                defaultOptions={{\r\n                    drawingControl: true,\r\n                    drawingControlOptions: {\r\n                        position: google.maps.ControlPosition.TOP_CENTER,\r\n                        drawingModes: [\r\n                            google.maps.drawing.OverlayType.CIRCLE,\r\n                            google.maps.drawing.OverlayType.POLYGON,\r\n                            google.maps.drawing.OverlayType.POLYLINE,\r\n                            google.maps.drawing.OverlayType.RECTANGLE\r\n                        ]\r\n                    },\r\n                    circleOptions: {\r\n                        fillColor: '#ffff00',\r\n                        fillOpacity: 1,\r\n                        strokeWeight: 5,\r\n                        clickable: false,\r\n                        editable: true,\r\n                        zIndex: 1\r\n                    }\r\n                }}\r\n            />\r\n            {props.children}\r\n        </DefaultGoogleMap>\r\n    )\r\n})\r\n\r\nconst Loader = () =>\r\n    <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%'}}>\r\n        <CircularProgress size={40} thickness={4} />\r\n    </div>\r\n\r\nconst GoogleMap = (props) => {\r\n    const {...defaultProps} = props\r\n\r\n    return (\r\n        <GoogleMapWrapper\r\n            defaultCenter={GOOGLE_MAP.DEFAULT_LOCATION}\r\n            googleMapURL={GOOGLE_MAP.GOOGLE_API_URL}\r\n            loadingElement={<Loader />}\r\n            containerElement={<div style={{height: '100%'}} />}\r\n            mapElement={<div style={{height: '100%'}} />}\r\n            defaultZoom={15}\r\n            radius=\"500\"\r\n            {...defaultProps}>\r\n            {props.children}\r\n        </GoogleMapWrapper>\r\n    )\r\n}\r\n\r\nexport default GoogleMap\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Tracking/TrackingMap.js","import React from 'react'\nimport * as ROUTES from '../../constants/routes'\nimport {reduxForm, Field} from 'redux-form'\nimport Container from '../Container'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport {compose, withState} from 'recompose'\nimport DateToDateField from '../ReduxForm/Basic/DateToDateFieldCustom'\nimport MarketTypeSearch from '../ReduxForm/Shop/MarketTypeSearchField'\nimport AgentSearch from '../ReduxForm/Users/UsersSearchField'\nimport Checkbox from '../ReduxForm/Basic/CheckBox'\nimport Arrow from 'material-ui/svg-icons/navigation/arrow-drop-down'\nimport TrackingMap from './TrackingMap'\nimport More from 'material-ui/svg-icons/navigation/expand-more'\nimport Less from 'material-ui/svg-icons/navigation/expand-less'\nimport Dot from 'material-ui/svg-icons/av/fiber-manual-record'\n\nconst enhance = compose(\n    injectSheet({\n        red: {\n            color: '#e57373 !important'\n        },\n        green: {\n            color: '#81c784 !important'\n        },\n        trackingWrapper: {\n            background: '#f2f5f8',\n            position: 'relative',\n            overflowX: 'hidden',\n            margin: '0 -28px',\n            minHeight: 'calc(100% - 4px)',\n            boxShadow: 'rgba(0, 0, 0, 0.09) 0px -2px 5px, rgba(0, 0, 0, 0.05) 0px -2px 6px',\n            '& > div:first-child': {\n                position: 'absolute',\n                top: '0',\n                left: '0',\n                right: '0',\n                bottom: '0'\n            }\n        },\n        trackingInfo: {\n            background: '#fff',\n            position: 'absolute',\n            width: '450px',\n            top: '0',\n            bottom: '0',\n            transition: 'all 0.3s ease',\n            zIndex: '2'\n        },\n        toggleButton: {\n            position: 'absolute',\n            left: '-24px',\n            top: '18px',\n            padding: '8px 0',\n            background: '#fff',\n            cursor: 'pointer'\n        },\n        expanded: {\n            display: 'flex',\n            alignItems: 'center',\n            '& svg': {\n                transform: 'rotate(-90deg)',\n                position: 'relative',\n                left: '1px'\n            }\n        },\n        collapsed: {\n            extend: 'expanded',\n            '& svg': {\n                transform: 'rotate(90deg)',\n                position: 'relative',\n                left: '1px'\n            }\n        },\n        trackingInfoTitle: {\n            display: 'flex',\n            alignItems: 'center',\n            padding: '20px 30px',\n            borderBottom: '1px #efefef solid',\n            fontWeight: '600',\n            '& span': {\n                textAlign: 'right',\n                lineHeight: '1'\n            }\n        },\n        online: {\n            color: '#666',\n            cursor: 'pointer',\n            display: 'flex',\n            alignItems: 'center',\n            fontSize: '30px',\n            marginLeft: '10px',\n            '& span': {\n                fontSize: 'inherit !important'\n            }\n        },\n        content: {\n            padding: '20px 30px'\n        },\n        inputFieldCustom: {\n            flexBasis: '200px',\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        checkbox: {\n            margin: '15px 0 !important',\n            '& span': {\n                top: '-10px !important',\n                left: '-10px !important'\n            }\n        },\n        title: {\n            fontWeight: '600',\n            marginBottom: '15px'\n        },\n        activeAgents: {\n            margin: '-10px 0 10px'\n        },\n        agent: {\n            display: 'flex',\n            alignItems: 'center',\n            padding: '10px 0',\n            '& span i': {\n                fontSize: '10px',\n                color: '#999'\n            },\n            '& svg': {\n                width: '12px !important',\n                height: '12px !important',\n                marginRight: '10px',\n                color: '#666'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'TrackingCreateForm',\n        enableReinitialize: true\n    }),\n    withState('expandInfo', 'setExpandInfo', true),\n    withState('onlineAgents', 'setOnlineAgents', false)\n)\n\nconst TrackingWrapper = enhance((props) => {\n    const ZERO = 0\n    const {\n        classes,\n        expandInfo,\n        setExpandInfo,\n        onlineAgents,\n        setOnlineAgents\n    } = props\n    const online = 30\n    const zoneInfoToggle = (\n        <div className={classes.trackingInfo} style={expandInfo ? {right: '0'} : {right: '-450px'}}>\n            <div className={classes.toggleButton}>\n                {expandInfo ? <div className={classes.expanded} onClick={() => { setExpandInfo(false) }}><Arrow/></div>\n                    : <div className={classes.collapsed} onClick={() => { setExpandInfo(true) }}><Arrow/></div>}\n            </div>\n                <div className={classes.trackingInfoTitle}>\n                    <span>Агентов <br/> online</span>\n                    <div className={classes.online} onClick={() => { setOnlineAgents(!onlineAgents) }}>\n                        <div>\n                            <span className={online > ZERO && classes.green}>{online}</span>/<span>45</span>\n                        </div>\n                        {onlineAgents ? <Less color=\"#666\"/> : <More color=\"#666\"/>}\n                    </div>\n                </div>\n                <div className={classes.content}>\n                    {onlineAgents &&\n                        <div className={classes.activeAgents}>\n                            <div className={classes.agent}>\n                                <Dot color=\"#81c784\"/>\n                                <span>Трололоев Хабибулла</span>\n                            </div>\n                            <div className={classes.agent}>\n                                <Dot color=\"#81c784\"/>\n                                <span>Трололоев Хабибулла</span>\n                            </div>\n                            <div className={classes.agent}>\n                                <Dot/>\n                                <span>Трололоев Хабибулла</span>\n                            </div>\n                            <div className={classes.agent}>\n                                <Dot/>\n                                <span>Трололоев Хабибулла</span>\n                            </div>\n                            <div className={classes.agent}>\n                                <Dot/>\n                                <span>Трололоев Хабибулла <i>(2 часа назад)</i></span>\n                            </div>\n                        </div>\n                    }\n                    <div className={classes.filter}>\n                        <div className={classes.title}>Фильтры</div>\n                        <Field\n                            className={classes.inputFieldCustom}\n                            name=\"border\"\n                            component={MarketTypeSearch}\n                            label=\"Выберите зону\"\n                            fullWidth={true}/>\n                        <Field\n                            className={classes.inputFieldCustom}\n                            name=\"agent\"\n                            component={AgentSearch}\n                            label=\"Агент\"\n                            fullWidth={true}/>\n                        <Field\n                            className={classes.inputFieldCustom}\n                            name=\"period\"\n                            component={DateToDateField}\n                            label=\"Посмотреть по периоду\"\n                            fullWidth={true}/>\n                        <Field\n                            name=\"showMarkets\"\n                            className={classes.checkbox}\n                            component={Checkbox}\n                            label=\"Отображать магазины\"/>\n                        <Field\n                            name=\"showZones\"\n                            className={classes.checkbox}\n                            component={Checkbox}\n                            label=\"Отображать зоны\"/>\n                        <Field\n                            name=\"agentTrack\"\n                            className={classes.checkbox}\n                            component={Checkbox}\n                            label=\"Пройденный маршрут агента\"/>\n                    </div>\n                </div>\n        </div>\n    )\n\n    return (\n        <Container>\n            <SubMenu url={ROUTES.ZONES_LIST_URL}/>\n            <div className={classes.trackingWrapper}>\n                <TrackingMap />\n                {zoneInfoToggle}\n            </div>\n        </Container>\n    )\n})\n\nexport default TrackingWrapper\n\n\n\n// WEBPACK FOOTER //\n// src/components/Tracking/TrackingWrapper.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport {TextField, ExpensiveCategorySearchField} from '../ReduxForm'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport MainStyles from '../Styles/MainStyles'\r\n\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\r\n\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        latLng,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        },\r\n        inputFieldCustom: {\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        },\r\n        nav: {\r\n            fontSize: '18px',\r\n            fontWeight: 'bold',\r\n            padding: '20px',\r\n            color: 'black',\r\n            borderBottom: '1px solid #efefef',\r\n            '& button': {\r\n                float: 'right',\r\n                marginTop: '-5px !important'\r\n            }\r\n        },\r\n        flex: {\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n        },\r\n        label: {\r\n            fontSize: '75%',\r\n            color: '#999'\r\n        },\r\n        itemList: {\r\n            marginTop: '20px'\r\n        }\r\n    })),\r\n    reduxForm({\r\n        form: 'TransactionCreateForm',\r\n        enableReinitialize: true\r\n    })\r\n)\r\n\r\nconst TransactionCreateDialog = enhance((props) => {\r\n    const {open, loading, handleSubmit, onClose, classes, cashboxData, isExpense} = props\r\n\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n    const cashbox = _.find(_.get(cashboxData, 'data'), {'id': _.get(cashboxData, 'cashboxId')})\r\n\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            className={classes.dialog}\r\n            contentStyle={loading ? {width: '300px'} : {width: '400px'}}\r\n            bodyClassName={classes.popUp}>\r\n            <div className={classes.titleContent}>\r\n                <span>{isExpense ? 'Расход' : 'Приход'}</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit} className={classes.form}>\r\n                    <div className={classes.inContent} style={{minHeight: '230px'}}>\r\n                        <div className={classes.loader}>\r\n                            <CircularProgress size={40} thickness={4}/>\r\n                        </div>\r\n                        <div className={classes.field}>\r\n                            <div className={classes.itemList}>\r\n                                <div className={classes.label}>Касса:</div>\r\n                                <div style={{fontWeight: '600', marginBottom: '5px'}}>{_.get(cashbox, 'name')}</div>\r\n                            </div>\r\n                            {isExpense && <Field\r\n                                name=\"expanseCategory\"\r\n                                component={ExpensiveCategorySearchField}\r\n                                label=\"Категория расхода\"\r\n                                className={classes.inputFieldCustom}\r\n                                fullWidth={true}/>\r\n                            }\r\n                            <div className={classes.flex} style={{alignItems: 'baseline'}}>\r\n                                <Field\r\n                                    name=\"amount\"\r\n                                    component={TextField}\r\n                                    label=\"Сумма\"\r\n                                    className={classes.inputFieldCustom}\r\n                                    style={{width: '50%'}}\r\n                                    fullWidth={false}/>\r\n                                <div style={{marginLeft: '20px'}}>\r\n                                   {_.get(cashbox, ['currency', 'name'])}\r\n                                </div>\r\n                            </div>\r\n                            <Field\r\n                                name=\"comment\"\r\n                                style={{top: '-20px', lineHeight: '20px', fontSize: '13px'}}\r\n                                component={TextField}\r\n                                label=\"Комментарий...\"\r\n                                multiLine={true}\r\n                                rows={1}\r\n                                rowsMax={3}\r\n                                fullWidth={true}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <FlatButton\r\n                            label=\"Сохранить\"\r\n                            className={classes.actionButton}\r\n                            primary={true}\r\n                            type=\"submit\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\n\r\nTransactionCreateDialog.propTyeps = {\r\n    isExpense: PropTypes.bool,\r\n    open: PropTypes.bool.isRequired,\r\n    cashboxData: PropTypes.object.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\nTransactionCreateDialog.defaultProps = {\r\n    isExpense: false\r\n}\r\n\r\nexport default TransactionCreateDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Transaction/TransactionCreateDialog.js","import _ from 'lodash'\r\nimport moment from 'moment'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\r\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport GridList from '../GridList'\r\nimport Container from '../Container'\r\nimport TransactionFilterForm from './TransactionFilterForm'\r\nimport TransactionCreateDialog from './TransactionCreateDialog'\r\nimport TransactionSendDialog from './TransactionSendDialog'\r\nimport ConfirmDialog from '../ConfirmDialog'\r\nimport SubMenu from '../SubMenu'\r\nimport injectSheet from 'react-jss'\r\nimport {compose} from 'recompose'\r\nimport Paper from 'material-ui/Paper'\r\nimport CashPayment from '../CashPayment'\r\nimport BankPayment from '../BankPayment'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport IconMenu from 'material-ui/IconMenu'\r\nimport MenuItem from 'material-ui/MenuItem'\r\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\r\nimport Edit from 'material-ui/svg-icons/image/edit'\r\nimport numberFormat from '../../helpers/numberFormat'\r\n\r\nconst listHeader = [\r\n    {\r\n        sorting: true,\r\n        name: 'id',\r\n        title: 'Id',\r\n        xs: 1\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'comment',\r\n        title: 'Описание',\r\n        xs: 5\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'date',\r\n        title: 'Дата',\r\n        xs: 2\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'amount',\r\n        title: 'Сумма',\r\n        xs: 2\r\n    }\r\n]\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        wrap: {\r\n            display: 'flex',\r\n            margin: '0 -28px',\r\n            padding: '0 28px 0 0',\r\n            minHeight: 'calc(100% - 41px)'\r\n        },\r\n        listWrapper: {\r\n            border: '1px solid #d9dde1',\r\n            borderBottom: 'none',\r\n            height: '100%'\r\n        },\r\n        leftSide: {\r\n            flexBasis: '25%'\r\n        },\r\n        rightSide: {\r\n            flexBasis: '75%',\r\n            marginLeft: '28px'\r\n        },\r\n        list: {\r\n            borderBottom: '1px solid #efefef',\r\n            display: 'flex',\r\n            padding: '20px 30px',\r\n            margin: '0',\r\n            boxSizing: 'border-box',\r\n            cursor: 'pointer',\r\n            justifyContent: 'space-between',\r\n            position: 'relative'\r\n        },\r\n        flex: {\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n        },\r\n        outerTitle: {\r\n            extend: 'flex',\r\n            justifyContent: 'space-between',\r\n            fontWeight: '600',\r\n            paddingBottom: '10px',\r\n            paddingTop: '5px',\r\n            '& a': {\r\n                padding: '2px 10px',\r\n                border: '1px solid',\r\n                borderRadius: '2px',\r\n                marginLeft: '12px'\r\n            }\r\n        },\r\n        balance: {\r\n            textAlign: 'right',\r\n            position: 'absolute',\r\n            right: '30px'\r\n        },\r\n        btnSend: {\r\n            color: '#12aaeb !important'\r\n        },\r\n        btnAdd: {\r\n            color: '#8acb8d !important'\r\n        },\r\n        btnRemove: {\r\n            color: '#e57373 !important'\r\n        },\r\n        title: {\r\n            fontWeight: '600',\r\n            '& span': {\r\n                fontSize: '11px !important',\r\n                display: 'block',\r\n                color: '#999'\r\n            }\r\n        },\r\n        rightTitle: {\r\n            extend: 'flex',\r\n            justifyContent: 'space-between'\r\n        },\r\n        green: {\r\n            color: '#92ce95 !important'\r\n        },\r\n        red: {\r\n            color: '#e57373 !important'\r\n        }\r\n    }),\r\n)\r\n\r\nconst TransactionGridList = enhance((props) => {\r\n    const {\r\n        filter,\r\n        createExpenseDialog,\r\n        createIncomeDialog,\r\n        updateExpenseDialog,\r\n        updateIncomeDialog,\r\n        createSendDialog,\r\n        filterDialog,\r\n        cashboxData,\r\n        actionsDialog,\r\n        cashboxListLoading,\r\n        confirmDialog,\r\n        listData,\r\n        detailData,\r\n        classes\r\n    } = props\r\n\r\n    const actions = (\r\n        <div>\r\n            <IconButton onTouchTap={actionsDialog.handleActionEdit}>\r\n                <ModEditorIcon />\r\n            </IconButton>\r\n\r\n            <IconButton onTouchTap={actionsDialog.handleActionDelete}>\r\n                <DeleteIcon />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n\r\n    const transactionFilterDialog = (\r\n        <TransactionFilterForm\r\n            initialValues={filterDialog.initialValues}\r\n            filter={filter}\r\n            filterDialog={filterDialog}\r\n        />\r\n    )\r\n\r\n    const transactionDetail = (\r\n        <span>a</span>\r\n    )\r\n\r\n    const transactionList = _.map(_.get(listData, 'data'), (item) => {\r\n        const zero = 0\r\n        const id = _.get(item, 'id')\r\n        const comment = _.get(item, 'comment')\r\n        const type = _.get(item, 'amount') || 'N/A'\r\n        const cashbox = _.get(item, 'cashbox') || 'N/A'\r\n        const amount = numberFormat(_.get(item, 'amount')) || 'N/A'\r\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\r\n        const currentCurrency = _.get(_.find(_.get(cashboxData, 'data'), {'id': cashbox}), ['currency', 'name'])\r\n\r\n        const iconButton = (\r\n            <IconButton style={{padding: '0 12px'}}>\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n        )\r\n        return (\r\n            <Row key={id}>\r\n                <Col xs={1}>{id}</Col>\r\n                <Col xs={5}>{comment}</Col>\r\n                <Col xs={2}>{createdDate}</Col>\r\n                <Col className={type >= zero ? classes.green : classes.red} xs={2}>{amount} {currentCurrency}</Col>\r\n                <Col xs={2} style={{textAlign: 'right'}}>\r\n                    <IconMenu\r\n                        iconButtonElement={iconButton}\r\n                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\r\n                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\r\n                        <MenuItem\r\n                            primaryText=\"Изменить\"\r\n                            leftIcon={<Edit />}\r\n                            onTouchTap={() => {\r\n                                updateExpenseDialog.handleOpenUpdateDialog(id, _.get(item, 'amount'))\r\n                            }}\r\n                        />\r\n                        <MenuItem\r\n                            primaryText=\"Удалить \"\r\n                            leftIcon={<DeleteIcon />}\r\n                            onTouchTap={() => {\r\n                                confirmDialog.handleOpenConfirmDialog(id)\r\n                            }}\r\n                        />\r\n                    </IconMenu>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    })\r\n    const cashboxList = _.map(_.get(cashboxData, 'data'), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const name = _.get(item, 'name')\r\n        const currency = _.get(item, ['currency', 'name'])\r\n        const type = _.toInteger(_.get(item, 'type'))\r\n        const balance = _.toInteger(_.get(item, 'balance'))\r\n        const isActive = item.id === _.get(cashboxData, 'cashboxId')\r\n        const BANK_ID = 1\r\n        const ZERO_NUM = 0\r\n        return (\r\n            <div key={id} className={classes.list} onClick={() => {\r\n                cashboxData.handleClickCashbox(id)\r\n            } }\r\n                 style={isActive ? {backgroundColor: '#ffffff'} : {backgroundColor: '#f2f5f8'}}>\r\n                <div>\r\n                    <div className={classes.title}>{name}</div>\r\n                    <div className={item.id === cashboxData.cashboxId}>\r\n                        {type === BANK_ID\r\n                            ? <div className={classes.flex}>\r\n                                <BankPayment style={{height: '14px', width: '14px', color: '#6261b0'}}/>\r\n                                <span style={{marginLeft: '5px', color: '#6261b0'}}>банковский счет</span>\r\n                            </div>\r\n                            : <div className={classes.flex}>\r\n                                <CashPayment style={{height: '14px', width: '14px', color: '#12aaeb'}}/>\r\n                                <span style={{marginLeft: '5px', color: '#12aaeb'}}>наличные</span>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className={classes.balance}>\r\n                    <div className={balance >= ZERO_NUM ? classes.green : classes.red}>{numberFormat(balance)}</div>\r\n                    <div>{currency}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    const list = {\r\n        header: listHeader,\r\n        list: transactionList,\r\n        loading: _.get(listData, 'listLoading')\r\n    }\r\n    const AllCashboxId = 0\r\n    const selectedCashbox = _.find(_.get(cashboxData, 'data'),\r\n        (o) => {\r\n            return _.toInteger(o.id) === _.toInteger(_.get(cashboxData, 'cashboxId'))\r\n        })\r\n    const cashboxName = _.get(cashboxData, 'cashboxId') === AllCashboxId ? 'Общий объем' : _.get(selectedCashbox, 'name')\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.TRANSACTION_LIST_URL}/>\r\n\r\n            <div className={classes.wrap}>\r\n                <div className={classes.leftSide}>\r\n                    <div className={classes.outerTitle} style={{paddingLeft: '30px'}}>\r\n                        <div>Кассы</div>\r\n                    </div>\r\n                    <Paper zDepth={2} style={{height: '100%'}}>\r\n                        <div className={classes.listWrapper}>\r\n                            <div className={classes.list}\r\n                                 onClick={() => {\r\n                                     cashboxData.handleClickCashbox(AllCashboxId)\r\n                                 } }\r\n                                 style={_.get(cashboxData, 'cashboxId') === AllCashboxId ? {backgroundColor: '#ffffff'} : {backgroundColor: '#f2f5f8'}}>\r\n                                <div className={classes.title}>\r\n                                    Общий объем\r\n                                    <span>во всех классах</span>\r\n                                </div>\r\n                            </div>\r\n                            {cashboxListLoading\r\n                                ? <div style={{textAlign: 'center'}}>\r\n                                    <CircularProgress size={40} thickness={4}/>\r\n                                </div>\r\n                                : cashboxList\r\n                            }\r\n                        </div>\r\n                    </Paper>\r\n                </div>\r\n                <div className={classes.rightSide}>\r\n                    <div className={classes.rightTitle}>\r\n                        <div className={classes.outerTitle}>{cashboxName}</div>\r\n                        { _.get(cashboxData, 'cashboxId') !== AllCashboxId && <div className={classes.outerTitle}>\r\n                            <div className={classes.buttons}>\r\n                                <a onClick={createSendDialog.handleOpenDialog} className={classes.btnSend}>Перевод</a>\r\n                                <a onClick={createIncomeDialog.handleOpenDialog} className={classes.btnAdd}>+ Доход</a>\r\n                                <a onClick={createExpenseDialog.handleOpenDialog} className={classes.btnRemove}>- Расход</a>\r\n                            </div>\r\n                        </div>}\r\n                    </div>\r\n\r\n                    <GridList\r\n                        filter={filter}\r\n                        list={list}\r\n                        detail={transactionDetail}\r\n                        actionsDialog={actions}\r\n                        filterDialog={transactionFilterDialog}\r\n                    />\r\n\r\n                    <TransactionCreateDialog\r\n                        isExpense={true}\r\n                        cashboxData={cashboxData}\r\n                        open={createExpenseDialog.open}\r\n                        loading={createExpenseDialog.loading}\r\n                        onClose={createExpenseDialog.handleCloseDialog}\r\n                        onSubmit={createExpenseDialog.handleSubmitDialog}\r\n                    />\r\n\r\n                    <TransactionCreateDialog\r\n                        cashboxData={cashboxData}\r\n                        open={createIncomeDialog.open}\r\n                        loading={createIncomeDialog.loading}\r\n                        onClose={createIncomeDialog.handleCloseDialog}\r\n                        onSubmit={createIncomeDialog.handleSubmitDialog}\r\n                    />\r\n\r\n                    <TransactionCreateDialog\r\n                        initialValues={updateExpenseDialog.initialValues}\r\n                        isUpdate={true}\r\n                        isExpense={true}\r\n                        open={updateExpenseDialog.open}\r\n                        loading={updateExpenseDialog.loading}\r\n                        onClose={updateExpenseDialog.handleCloseUpdateDialog}\r\n                        onSubmit={updateExpenseDialog.handleSubmitUpdateDialog}\r\n                    />\r\n\r\n                    <TransactionCreateDialog\r\n                        initialValues={updateIncomeDialog.initialValues}\r\n                        isUpdate={true}\r\n                        open={updateIncomeDialog.open}\r\n                        loading={updateIncomeDialog.loading}\r\n                        onClose={updateIncomeDialog.handleCloseUpdateDialog}\r\n                        onSubmit={updateIncomeDialog.handleSubmitUpdateDialog}\r\n                    />\r\n\r\n                    <TransactionSendDialog\r\n                        cashboxData={cashboxData}\r\n                        open={createSendDialog.open}\r\n                        loading={createSendDialog.loading}\r\n                        onClose={createSendDialog.handleCloseDialog}\r\n                        onSubmit={createSendDialog.handleSubmitDialog}\r\n                    />\r\n\r\n                    {detailData.data && <ConfirmDialog\r\n                        type=\"delete\"\r\n                        message={_.get(detailData, ['data', 'comment'])}\r\n                        onClose={confirmDialog.handleCloseConfirmDialog}\r\n                        onSubmit={confirmDialog.handleExpenseConfirmDialog}\r\n                        open={confirmDialog.open}\r\n                    />}\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    )\r\n})\r\n\r\nTransactionGridList.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    listData: PropTypes.object,\r\n    cashboxData: PropTypes.object,\r\n    cashboxListLoading: PropTypes.bool,\r\n    detailData: PropTypes.object,\r\n    createExpenseDialog: PropTypes.shape({\r\n        loading: PropTypes.bool.isRequired,\r\n        open: PropTypes.bool.isRequired,\r\n        handleOpenDialog: PropTypes.func.isRequired,\r\n        handleCloseDialog: PropTypes.func.isRequired,\r\n        handleSubmitDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    createIncomeDialog: PropTypes.shape({\r\n        loading: PropTypes.bool.isRequired,\r\n        open: PropTypes.bool.isRequired,\r\n        handleOpenDialog: PropTypes.func.isRequired,\r\n        handleCloseDialog: PropTypes.func.isRequired,\r\n        handleSubmitDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    updateExpenseDialog: PropTypes.shape({\r\n        loading: PropTypes.bool.isRequired,\r\n        open: PropTypes.bool.isRequired,\r\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\r\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\r\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    updateIncomeDialog: PropTypes.shape({\r\n        loading: PropTypes.bool.isRequired,\r\n        open: PropTypes.bool.isRequired,\r\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\r\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\r\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    createSendDialog: PropTypes.shape({\r\n        loading: PropTypes.bool.isRequired,\r\n        open: PropTypes.bool.isRequired,\r\n        handleOpenDialog: PropTypes.func.isRequired,\r\n        handleCloseDialog: PropTypes.func.isRequired,\r\n        handleSubmitDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    confirmDialog: PropTypes.shape({\r\n        open: PropTypes.bool.isRequired,\r\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\r\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\r\n        handleExpenseConfirmDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    actionsDialog: PropTypes.shape({\r\n        handleActionEdit: PropTypes.func.isRequired,\r\n        handleActionDelete: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    filterDialog: PropTypes.shape({\r\n        initialValues: PropTypes.object,\r\n        filterLoading: PropTypes.bool,\r\n        openFilterDialog: PropTypes.bool.isRequired,\r\n        handleOpenFilterDialog: PropTypes.func.isRequired,\r\n        handleCloseFilterDialog: PropTypes.func.isRequired,\r\n        handleSubmitFilterDialog: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default TransactionGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Transaction/TransactionGridList.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'recompose'\r\nimport injectSheet from 'react-jss'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport FlatButton from 'material-ui/FlatButton'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\r\nimport toCamelCase from '../../helpers/toCamelCase'\r\nimport {TextField, CashboxSearchField} from '../ReduxForm'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport MainStyles from '../Styles/MainStyles'\r\nimport normalizeNumber from '../ReduxForm/normalizers/normalizeNumber'\r\n\r\nconst validate = (data) => {\r\n    const errors = toCamelCase(data)\r\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\r\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\r\n\r\n    throw new SubmissionError({\r\n        ...errors,\r\n        latLng,\r\n        _error: nonFieldErrors\r\n    })\r\n}\r\n\r\nconst enhance = compose(\r\n    injectSheet(_.merge(MainStyles, {\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            textAlign: 'center',\r\n            display: ({loading}) => loading ? 'flex' : 'none'\r\n        },\r\n        nav: {\r\n            fontSize: '18px',\r\n            fontWeight: 'bold',\r\n            padding: '20px',\r\n            color: 'black',\r\n            borderBottom: '1px solid #efefef',\r\n            '& button': {\r\n                float: 'right',\r\n                marginTop: '-5px !important'\r\n            }\r\n        },\r\n        flex: {\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n        },\r\n        label: {\r\n            fontSize: '75%',\r\n            color: '#999'\r\n        },\r\n        itemList: {\r\n            marginTop: '20px'\r\n        }\r\n    })),\r\n    reduxForm({\r\n        form: 'TransactionCreateForm',\r\n        enableReinitialize: true\r\n    })\r\n)\r\n\r\nconst TransactionSendDialog = enhance((props) => {\r\n    const {open, loading, handleSubmit, onClose, classes, cashboxData} = props\r\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\r\n    const cashbox = _.find(_.get(cashboxData, 'data'), {'id': _.get(cashboxData, 'cashboxId')})\r\n\r\n    return (\r\n        <Dialog\r\n            modal={true}\r\n            open={open}\r\n            onRequestClose={onClose}\r\n            className={classes.dialog}\r\n            contentStyle={loading ? {width: '300px'} : {width: '400px'}}\r\n            bodyClassName={classes.popUp}>\r\n            <div className={classes.titleContent}>\r\n                <span>Перевод</span>\r\n                <IconButton onTouchTap={onClose}>\r\n                    <CloseIcon2 color=\"#666666\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.bodyContent}>\r\n                <form onSubmit={onSubmit} className={classes.form}>\r\n                    <div className={classes.inContent} style={{minHeight: '325px'}}>\r\n                        <div className={classes.loader}>\r\n                            <CircularProgress size={40} thickness={4}/>\r\n                        </div>\r\n                        <div className={classes.field}>\r\n                            <div className={classes.itemList}>\r\n                                <div className={classes.label}>Текущая касса:</div>\r\n                                <div style={{fontWeight: '600'}}>{_.get(cashbox, 'name')}</div>\r\n                            </div>\r\n                            <Field\r\n                                name=\"categoryId\"\r\n                                component={CashboxSearchField}\r\n                                label=\"Касса получатель\"\r\n                                fullWidth={true}/>\r\n                            <div className={classes.flex} style={{alignItems: 'baseline'}}>\r\n                                <Field\r\n                                    name=\"amount\"\r\n                                    component={TextField}\r\n                                    label=\"Сумма\"\r\n                                    normalize={normalizeNumber}\r\n                                    style={{width: '50%'}}\r\n                                    fullWidth={false}/>\r\n                                <div style={{marginLeft: '20px'}}>\r\n                                   {_.get(cashbox, ['currency', 'name'])}\r\n                                </div>\r\n                            </div>\r\n                            <Field\r\n                                name=\"comment\"\r\n                                style={{lineHeight: '20px', fontSize: '13px'}}\r\n                                component={TextField}\r\n                                label=\"Комментарий...\"\r\n                                multiLine={true}\r\n                                rows={1}\r\n                                rowsMax={3}\r\n                                fullWidth={true}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.bottomButton}>\r\n                        <FlatButton\r\n                            label=\"Отправить\"\r\n                            className={classes.actionButton}\r\n                            primary={true}\r\n                            type=\"submit\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n})\r\n\r\nTransactionSendDialog.propTyeps = {\r\n    open: PropTypes.bool.isRequired,\r\n    cashboxData: PropTypes.object.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default TransactionSendDialog\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Transaction/TransactionSendDialog.js","import TransactionGridList from './TransactionGridList'\nimport {TRANSACTION_FILTER_KEY, TRANSACTION_FILTER_OPEN} from './TransactionFilterForm'\n\nconst TRANSACTION_CREATE_EXPENSE_DIALOG_OPEN = 'openCreateExpenseDialog'\nconst TRANSACTION_CREATE_INCOME_DIALOG_OPEN = 'openCreateIncomeDialog'\nconst TRANSACTION_UPDATE_EXPENSE_DIALOG_OPEN = 'openUpdateExpenseDialog'\nconst TRANSACTION_UPDATE_INCOME_DIALOG_OPEN = 'openUpdateIncomeDialog'\nconst TRANSACTION_CREATE_SEND_DIALOG_OPEN = 'openSendDialog'\nconst TRANSACTION_DELETE_DIALOG_OPEN = 'openDeleteDialog'\n\nexport {\n\n    TRANSACTION_CREATE_EXPENSE_DIALOG_OPEN,\n    TRANSACTION_CREATE_INCOME_DIALOG_OPEN,\n    TRANSACTION_UPDATE_EXPENSE_DIALOG_OPEN,\n    TRANSACTION_UPDATE_INCOME_DIALOG_OPEN,\n    TRANSACTION_CREATE_SEND_DIALOG_OPEN,\n    TRANSACTION_DELETE_DIALOG_OPEN,\n    TRANSACTION_FILTER_KEY,\n    TRANSACTION_FILTER_OPEN,\n    TransactionGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Transaction/index.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Row, Col} from 'react-flexbox-grid'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\r\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport GridList from '../GridList'\r\nimport Container from '../Container'\r\nimport UsersFilterForm from './UsersFilterForm'\r\nimport UsersCreateDialog from './UsersCreateDialog'\r\nimport ConfirmDialog from '../ConfirmDialog'\r\nimport SubMenu from '../SubMenu'\r\nimport injectSheet from 'react-jss'\r\nimport {compose} from 'recompose'\r\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\r\nimport ContentAdd from 'material-ui/svg-icons/content/add'\r\nimport IconMenu from 'material-ui/IconMenu'\r\nimport MenuItem from 'material-ui/MenuItem'\r\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\r\nimport Edit from 'material-ui/svg-icons/image/edit'\r\nimport Tooltip from '../ToolTip'\r\nconst ZERO = 0\r\nconst listHeader = [\r\n    {\r\n        sorting: true,\r\n        name: 'id',\r\n        title: '№',\r\n        xs: 1\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'username',\r\n        title: 'Пользователь',\r\n        xs: 2\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'login',\r\n        title: 'Логин',\r\n        xs: 2\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'typeUser',\r\n        title: 'Должность',\r\n        xs: 2\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'phoneNumber',\r\n        title: 'Телефон',\r\n        xs: 2\r\n    },\r\n    {\r\n        sorting: true,\r\n        name: 'createdDate',\r\n        title: 'Дата создания',\r\n        xs: 1\r\n    }\r\n]\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        addButton: {\r\n            '& button': {\r\n                backgroundColor: '#275482 !important'\r\n            }\r\n        },\r\n        addButtonWrapper: {\r\n            position: 'absolute',\r\n            top: '10px',\r\n            right: '0',\r\n            marginBottom: '0px'\r\n        }\r\n    })\r\n)\r\n\r\nconst UsersGridList = enhance((props) => {\r\n    const {\r\n        filter,\r\n        createDialog,\r\n        updateDialog,\r\n        filterDialog,\r\n        actionsDialog,\r\n        confirmDialog,\r\n        listData,\r\n        detailData,\r\n        classes\r\n    } = props\r\n\r\n    const actions = (\r\n        <div>\r\n            <IconButton onTouchTap={actionsDialog.handleActionEdit}>\r\n                <ModEditorIcon />\r\n            </IconButton>\r\n\r\n            <IconButton onTouchTap={actionsDialog.handleActionDelete}>\r\n                <DeleteIcon />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n\r\n    const usersFilterDialog = (\r\n        <UsersFilterForm\r\n            initialValues={filterDialog.initialValues}\r\n            filter={filter}\r\n            filterDialog={filterDialog}\r\n        />\r\n    )\r\n\r\n    const usersDetail = (\r\n        <span>a</span>\r\n    )\r\n    const usersList = _.map(_.get(listData, 'data'), (item) => {\r\n        const id = _.get(item, 'id')\r\n        const username = _.get(item, 'username')\r\n        const firstName = _.get(item, 'firstName')\r\n        const secondName = _.get(item, 'secondName')\r\n        const phoneNumber = _.get(item, 'phoneNumber') || 'N/A'\r\n        const groups = _.get(item, ['groups', ZERO, 'name']) || 'N/A'\r\n\r\n        const iconButton = (\r\n            <IconButton style={{padding: '0 12px'}}>\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n        )\r\n\r\n        return (\r\n            <Row key={id}>\r\n                <Col xs={1}>{id}</Col>\r\n                <Col xs={2}>{firstName} {secondName}</Col>\r\n                <Col xs={2}>{username}</Col>\r\n                <Col xs={2}>{groups}</Col>\r\n                <Col xs={2}>{phoneNumber}</Col>\r\n                <Col xs={2}>12.05.2016</Col>\r\n                <Col xs={1} style={{textAlign: 'right'}}>\r\n                    <IconMenu\r\n                        iconButtonElement={iconButton}\r\n                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\r\n                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\r\n                        <MenuItem\r\n                            primaryText=\"Изменить\"\r\n                            leftIcon={<Edit />}\r\n                            onTouchTap={() => { updateDialog.handleOpenUpdateDialog(id) }}\r\n                        />\r\n                        <MenuItem\r\n                            primaryText=\"Удалить \"\r\n                            leftIcon={<DeleteIcon />}\r\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(id) }}\r\n                        />\r\n                    </IconMenu>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    })\r\n\r\n    const list = {\r\n        header: listHeader,\r\n        list: usersList,\r\n        loading: _.get(listData, 'listLoading')\r\n    }\r\n\r\n    const currentDetail = _.find(_.get(listData, 'data'), {'id': _.toInteger(_.get(detailData, 'id'))})\r\n    const currentName = _.get(currentDetail, 'firstName') + ' ' + _.get(currentDetail, 'secondName')\r\n    return (\r\n        <Container>\r\n            <SubMenu url={ROUTES.USERS_LIST_URL}/>\r\n\r\n            <div className={classes.addButtonWrapper}>\r\n                <Tooltip position=\"left\" text=\"Добавить пользователя\">\r\n                    <FloatingActionButton\r\n                        mini={true}\r\n                        className={classes.addButton}\r\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\r\n                        <ContentAdd />\r\n                    </FloatingActionButton>\r\n                </Tooltip>\r\n            </div>\r\n\r\n            <GridList\r\n                filter={filter}\r\n                list={list}\r\n                detail={usersDetail}\r\n                actionsDialog={actions}\r\n                filterDialog={usersFilterDialog}\r\n            />\r\n\r\n            <UsersCreateDialog\r\n                open={createDialog.openCreateDialog}\r\n                loading={createDialog.createLoading}\r\n                onClose={createDialog.handleCloseCreateDialog}\r\n                onSubmit={createDialog.handleSubmitCreateDialog}\r\n                errorData={createDialog.errorData}\r\n            />\r\n\r\n            <UsersCreateDialog\r\n                initialValues={updateDialog.initialValues}\r\n                isUpdate={true}\r\n                open={updateDialog.openUpdateDialog}\r\n                loading={updateDialog.updateLoading}\r\n                onClose={updateDialog.handleCloseUpdateDialog}\r\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\r\n                errorData={updateDialog.errorData}\r\n            />\r\n\r\n            {detailData.data && <ConfirmDialog\r\n                type=\"delete\"\r\n                message={currentName}\r\n                loading={confirmDialog.confirmLoading}\r\n                onClose={confirmDialog.handleCloseConfirmDialog}\r\n                onSubmit={confirmDialog.handleSendConfirmDialog}\r\n                open={confirmDialog.openConfirmDialog}\r\n            />}\r\n        </Container>\r\n    )\r\n})\r\n\r\nUsersGridList.propTypes = {\r\n    filter: PropTypes.object.isRequired,\r\n    listData: PropTypes.object,\r\n    detailData: PropTypes.object,\r\n    createDialog: PropTypes.shape({\r\n        createLoading: PropTypes.bool.isRequired,\r\n        openCreateDialog: PropTypes.bool.isRequired,\r\n        handleOpenCreateDialog: PropTypes.func.isRequired,\r\n        handleCloseCreateDialog: PropTypes.func.isRequired,\r\n        handleSubmitCreateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    confirmDialog: PropTypes.shape({\r\n        confirmLoading: PropTypes.bool.isRequired,\r\n        openConfirmDialog: PropTypes.bool.isRequired,\r\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\r\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\r\n        handleSendConfirmDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    updateDialog: PropTypes.shape({\r\n        updateLoading: PropTypes.bool.isRequired,\r\n        openUpdateDialog: PropTypes.bool.isRequired,\r\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\r\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\r\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    actionsDialog: PropTypes.shape({\r\n        handleActionEdit: PropTypes.func.isRequired,\r\n        handleActionDelete: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    filterDialog: PropTypes.shape({\r\n        initialValues: PropTypes.object,\r\n        filterLoading: PropTypes.bool,\r\n        openFilterDialog: PropTypes.bool.isRequired,\r\n        handleOpenFilterDialog: PropTypes.func.isRequired,\r\n        handleCloseFilterDialog: PropTypes.func.isRequired,\r\n        handleSubmitFilterDialog: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default UsersGridList\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Users/UsersGridList.js","import UsersGridList from './UsersGridList'\nimport {USERS_CREATE_DIALOG_OPEN} from './UsersCreateDialog'\nimport {USERS_FILTER_KEY, USERS_FILTER_OPEN} from './UsersFilterForm'\n\nconst USERS_DELETE_DIALOG_OPEN = 'openDeleteDialog'\nconst USERS_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nexport {\n    USERS_CREATE_DIALOG_OPEN,\n    USERS_UPDATE_DIALOG_OPEN,\n    USERS_DELETE_DIALOG_OPEN,\n    USERS_FILTER_KEY,\n    USERS_FILTER_OPEN,\n    UsersGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Users/index.js","import _ from 'lodash'\nimport React from 'react'\nimport IconButton from 'material-ui/IconButton'\nimport Paper from 'material-ui/Paper'\nimport PropTypes from 'prop-types'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport FlatButton from 'material-ui/FlatButton'\nimport {TextField} from '../ReduxForm'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport Tooltip from '../ToolTip'\nimport CloseIcon2 from '../CloseIcon2'\nimport Timeline from 'material-ui/svg-icons/action/timeline'\nimport Touch from 'material-ui/svg-icons/action/touch-app'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n\n    throw new SubmissionError({\n        ...errors,\n        _error: nonFieldErrors\n    })\n}\n\nconst enhance = compose(\n    injectSheet({\n        addZoneWrapper: {\n            position: 'absolute',\n            top: '10px',\n            left: '50%',\n            marginLeft: '-275px',\n            padding: '7px 20px',\n            width: '550px',\n            height: '60px',\n            '& form': {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                width: '100%',\n                height: '100%'\n            }\n        },\n        inputFieldCustom: {\n            flexBasis: '200px',\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        actionButton: {\n            '& span': {\n                color: '#129fdd !important',\n                fontWeight: '600 !important'\n            }\n        },\n        addZoneClose: {\n            position: 'absolute',\n            top: '18px',\n            right: '30px',\n            '& button': {\n                background: '#fff !important'\n            },\n            '& svg': {\n                fill: '#666 !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'ZoneCreateForm',\n        enableReinitialize: true\n    })\n)\n\nconst AddZonePopup = enhance((props) => {\n    const {\n        classes,\n        onClose,\n        handleSubmit\n    } = props\n    const submitZone = handleSubmit(() => props.onSubmit().catch(validate))\n    return (\n        <div>\n            <Paper zDepth={1} className={classes.addZoneWrapper}>\n                <form onSubmit={submitZone}>\n                    <Field\n                        name=\"zoneName\"\n                        component={TextField}\n                        className={classes.inputFieldCustom}\n                        label=\"Наименование зоны\"\n                        fullWidth={true}/>\n                    <div className={classes.buttons}>\n                        <IconButton>\n                            <Timeline color=\"#666\"/>\n                        </IconButton>\n\n                        <IconButton>\n                            <Touch color=\"#666\"/>\n                        </IconButton>\n\n                        <IconButton>\n                            <DeleteIcon color=\"#666\"/>\n                        </IconButton>\n                    </div>\n                    <FlatButton\n                        label=\"Сохранить\"\n                        className={classes.actionButton}\n                        primary={true}\n                        type=\"submit\"\n                    />\n                </form>\n            </Paper>\n\n            <div className={classes.addZoneClose}>\n                <Tooltip position=\"left\" text=\"Закрыть\">\n                    <FloatingActionButton\n                        mini={true}\n                        onTouchTap={onClose}>\n                        <CloseIcon2/>\n                    </FloatingActionButton>\n                </Tooltip>\n            </div>\n        </div>\n    )\n})\n\nAddZonePopup.PropTypes = {\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired\n}\n\nexport default AddZonePopup\n\n\n\n// WEBPACK FOOTER //\n// src/components/Zones/AddZonePopup.js","import _ from 'lodash'\r\nimport React from 'react'\r\nimport IconButton from 'material-ui/IconButton'\r\nimport * as ROUTES from '../../constants/routes'\r\nimport {Link} from 'react-router'\r\nimport PropTypes from 'prop-types'\r\nimport sprintf from 'sprintf'\r\nimport injectSheet from 'react-jss'\r\nimport {compose} from 'recompose'\r\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport ContentAdd from 'material-ui/svg-icons/content/add'\r\nimport Tooltip from '../ToolTip'\r\nimport CloseIcon2 from '../CloseIcon2'\r\nimport Person from '../Images/person.png'\r\n\r\nconst enhance = compose(\r\n    injectSheet({\r\n        detailWrap: {\r\n            height: '100%',\r\n            position: 'relative'\r\n        },\r\n        loader: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#fff',\r\n            top: '0',\r\n            left: '0',\r\n            alignItems: 'center',\r\n            zIndex: '999',\r\n            justifyContent: 'center',\r\n            display: 'flex'\r\n        },\r\n        addButton: {\r\n            '& button': {\r\n                backgroundColor: '#275482 !important'\r\n            }\r\n        },\r\n        addPerson: {\r\n            boxShadow: 'none !important',\r\n            '& button': {\r\n                background: '#199ee0 !important',\r\n                width: '30px !important',\r\n                height: '30px !important',\r\n                '& svg': {\r\n                    width: '20px !important',\r\n                    height: '30px !important'\r\n                }\r\n            }\r\n        },\r\n        zonesInfo: {\r\n            background: '#fff',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'space-between',\r\n            position: 'absolute',\r\n            width: '450px',\r\n            top: '0',\r\n            bottom: '0',\r\n            transition: 'all 0.3s ease',\r\n            zIndex: '2'\r\n        },\r\n        zonesInfoTitle: {\r\n            display: 'flex',\r\n            padding: '20px 30px',\r\n            borderBottom: '1px #efefef solid',\r\n            position: 'relative',\r\n            '& > div': {\r\n                display: 'flex',\r\n                marginRight: '50px',\r\n                '& big': {\r\n                    fontSize: '28px',\r\n                    lineHeight: '28px',\r\n                    marginRight: '10px'\r\n                },\r\n                '& span': {\r\n                    fontSize: '12px !important',\r\n                    lineHeight: '14px'\r\n                }\r\n            },\r\n            '& > div:last-child': {\r\n                margin: '0'\r\n            }\r\n        },\r\n        zoneInfoName: {\r\n            extend: 'zonesInfo',\r\n            justifyContent: 'flex-start',\r\n            right: '0',\r\n            width: '450px',\r\n            zIndex: '4'\r\n        },\r\n        zoneInfoTitle: {\r\n            extend: 'zonesInfoTitle',\r\n            padding: '20px 0',\r\n            justifyContent: 'space-between',\r\n            '& > div': {\r\n                marginRight: '0'\r\n            }\r\n        },\r\n        zoneInfoNameTitle: {\r\n            background: '#fff',\r\n            color: '#333',\r\n            fontWeight: '600',\r\n            textTransform: 'uppercase',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            borderBottom: '1px solid #efefef',\r\n            padding: '20px 30px',\r\n            zIndex: '999',\r\n            '& button': {\r\n                right: '13px',\r\n                top: '5px',\r\n                padding: '0 !important',\r\n                position: 'absolute !important'\r\n            }\r\n        },\r\n        zoneInfoContent: {\r\n            padding: '0 30px',\r\n            overflowY: 'auto'\r\n        },\r\n        personal: {\r\n            padding: '20px 0 15px',\r\n            borderBottom: '1px  #efefef solid',\r\n            '& > span': {\r\n                fontWeight: '600',\r\n                display: 'block',\r\n                marginBottom: '12px'\r\n            }\r\n        },\r\n        personalWrap: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap'\r\n        },\r\n        person: {\r\n            width: '30px',\r\n            height: '30px',\r\n            display: 'inline-block',\r\n            marginRight: '10px',\r\n            marginBottom: '5px',\r\n            position: 'relative',\r\n            '& img': {\r\n                height: '100%',\r\n                width: '100%',\r\n                borderRadius: '50%'\r\n            },\r\n            '&:hover > div': {\r\n                display: 'flex'\r\n            },\r\n            '&:nth-child(10n)': {\r\n                margin: '0 !important'\r\n            }\r\n        },\r\n        deletePers: {\r\n            cursor: 'pointer',\r\n            width: '15px',\r\n            height: '15px',\r\n            display: 'none',\r\n            position: 'absolute',\r\n            top: '-5px',\r\n            right: '-5px',\r\n            borderRadius: '50%',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            background: '#999',\r\n            '& svg': {\r\n                width: '13px !important',\r\n                height: '15px !important'\r\n            }\r\n        },\r\n        stores: {\r\n            '& span': {\r\n                fontWeight: '600'\r\n            },\r\n            '& .dottedList': {\r\n                padding: '15px 0',\r\n                justifyContent: 'space-between',\r\n                '&:last-child:after': {\r\n                    display: 'none'\r\n                }\r\n            }\r\n        },\r\n        addZoneWrapper: {\r\n            position: 'absolute',\r\n            top: '10px',\r\n            left: '50%',\r\n            marginLeft: '-275px',\r\n            padding: '7px 20px',\r\n            width: '550px',\r\n            height: '60px',\r\n            '& form': {\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'space-between',\r\n                width: '100%',\r\n                height: '100%'\r\n            }\r\n        },\r\n        inputFieldCustom: {\r\n            flexBasis: '200px',\r\n            fontSize: '13px !important',\r\n            height: '45px !important',\r\n            marginTop: '7px',\r\n            '& div': {\r\n                fontSize: '13px !important'\r\n            },\r\n            '& label': {\r\n                top: '20px !important',\r\n                lineHeight: '5px !important'\r\n            },\r\n            '& input': {\r\n                marginTop: '0 !important'\r\n            }\r\n        },\r\n        actionButton: {\r\n            '& span': {\r\n                color: '#129fdd !important',\r\n                fontWeight: '600 !important'\r\n            }\r\n        },\r\n        addZoneClose: {\r\n            position: 'absolute',\r\n            right: '30px',\r\n            '& button': {\r\n                background: '#fff !important'\r\n            },\r\n            '& svg': {\r\n                fill: '#666 !important'\r\n            }\r\n        }\r\n    })\r\n)\r\n\r\nconst ZoneDetails = enhance((props) => {\r\n    const {\r\n        classes,\r\n        filter,\r\n        detailData\r\n    } = props\r\n    const loading = _.get(detailData, 'detailLoading')\r\n    const id = _.get(detailData, ['data', 'id'])\r\n    const name = _.get(detailData, ['data', 'properties', 'title'])\r\n    return (\r\n        <div className={classes.detailWrap}>\r\n            {loading && <div className={classes.loader}>\r\n                <CircularProgress size={40} thickness={4}/>\r\n            </div>}\r\n            <div className={classes.zoneInfoNameTitle}>\r\n                <span>{name} (Z-{id})</span>\r\n                <Link to={{\r\n                    pathname: sprintf(ROUTES.ZONES_LIST_URL),\r\n                    query: filter.getParams()\r\n                }}>\r\n                    <IconButton>\r\n                        <CloseIcon2 color=\"#666666\"/>\r\n                    </IconButton>\r\n                </Link>\r\n            </div>\r\n            <div className={classes.zoneInfoContent}>\r\n                <div className={classes.zoneInfoTitle}>\r\n                    <div>\r\n                        <big>24</big>\r\n                        <span>всего магазинов <br/> в зоне</span>\r\n                    </div>\r\n                    <div>\r\n                        <big>4</big>\r\n                        <span>закреплено <br/> агентов</span>\r\n                    </div>\r\n                    <div>\r\n                        <big>2</big>\r\n                        <span>закреплено <br/> инкассаторов</span>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.personal}>\r\n                    <span>Ответственный персонал:</span>\r\n                    <div className={classes.personalWrap}>\r\n                        <div className={classes.person}>\r\n                            <img src={Person} alt=\"\"/>\r\n                            <div className={classes.deletePers}>\r\n                                <CloseIcon2 color=\"#fff\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.person}>\r\n                            <img src={Person} alt=\"\"/>\r\n                            <div className={classes.deletePers}>\r\n                                <CloseIcon2 color=\"#fff\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.person}>\r\n                            <img src={Person} alt=\"\"/>\r\n                            <div className={classes.deletePers}>\r\n                                <CloseIcon2 color=\"#fff\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.person}>\r\n                            <img src={Person} alt=\"\"/>\r\n                            <div className={classes.deletePers}>\r\n                                <CloseIcon2 color=\"#fff\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.person}>\r\n                            <img src={Person} alt=\"\"/>\r\n                            <div className={classes.deletePers}>\r\n                                <CloseIcon2 color=\"#fff\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.person} style={{overflow: 'hidden'}}>\r\n                            <Tooltip position=\"bottom\" text=\"Добавить\">\r\n                                <FloatingActionButton\r\n                                    mini={true}\r\n                                    className={classes.addPerson}>\r\n                                    <ContentAdd />\r\n                                </FloatingActionButton>\r\n                            </Tooltip>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.stores}>\r\n                    <div className=\"dottedList\">\r\n                        <span>Магазины в зоне</span>\r\n                        <a>+ добавить</a>\r\n                    </div>\r\n                    <div className=\"dottedList\">OOO Angels Food</div>\r\n                    <div className=\"dottedList\">OOO Angels Food</div>\r\n                    <div className=\"dottedList\">OOO Angels Food</div>\r\n                    <div className=\"dottedList\">OOO Angels Food</div>\r\n                    <div className=\"dottedList\">OOO Angels Food</div>\r\n                    <div className=\"dottedList\">OOO Angels Food</div>\r\n                    <div className=\"dottedList\">OOO Angels Food</div>\r\n                    <div className=\"dottedList\">OOO Angels Food</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nZoneDetails.PropTypes = {\r\n    filter: PropTypes.object,\r\n    detailData: PropTypes.object\r\n}\r\n\r\nexport default ZoneDetails\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Zones/ZoneDetails.js","import React from 'react'\r\nimport {compose} from 'recompose'\r\nimport {withGoogleMap, GoogleMap as DefaultGoogleMap} from 'react-google-maps'\r\nimport withScriptjs from 'react-google-maps/lib/async/withScriptjs'\r\nimport CircularProgress from 'material-ui/CircularProgress'\r\nimport * as GOOGLE_MAP from '../../constants/googleMaps'\r\nimport DrawingManager from 'react-google-maps/lib/drawing/DrawingManager'\r\n\r\nconst enhance = compose(\r\n    withScriptjs,\r\n    withGoogleMap\r\n)\r\n\r\nconst GoogleMapWrapper = enhance(({onMapLoad, ...props}) => {\r\n    return (\r\n        <DefaultGoogleMap ref={onMapLoad} {...props}>\r\n            <DrawingManager\r\n                defaultDrawingMode={google.maps.drawing.OverlayType.CIRCLE}\r\n                defaultOptions={{\r\n                    drawingControl: true,\r\n                    drawingControlOptions: {\r\n                        position: google.maps.ControlPosition.TOP_CENTER,\r\n                        drawingModes: [\r\n                            google.maps.drawing.OverlayType.CIRCLE,\r\n                            google.maps.drawing.OverlayType.POLYGON,\r\n                            google.maps.drawing.OverlayType.POLYLINE,\r\n                            google.maps.drawing.OverlayType.RECTANGLE\r\n                        ]\r\n                    },\r\n                    circleOptions: {\r\n                        fillColor: '#ffff00',\r\n                        fillOpacity: 1,\r\n                        strokeWeight: 5,\r\n                        clickable: false,\r\n                        editable: true,\r\n                        zIndex: 1\r\n                    }\r\n                }}\r\n            />\r\n            {props.children}\r\n        </DefaultGoogleMap>\r\n    )\r\n})\r\n\r\nconst Loader = () =>\r\n    <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%'}}>\r\n        <CircularProgress size={40} thickness={4} />\r\n    </div>\r\n\r\nconst GoogleMap = (props) => {\r\n    const {...defaultProps} = props\r\n\r\n    return (\r\n        <GoogleMapWrapper\r\n            defaultCenter={GOOGLE_MAP.DEFAULT_LOCATION}\r\n            googleMapURL={GOOGLE_MAP.GOOGLE_API_URL}\r\n            loadingElement={<Loader />}\r\n            containerElement={<div style={{height: '100%'}} />}\r\n            mapElement={<div style={{height: '100%'}} />}\r\n            defaultZoom={15}\r\n            radius=\"500\"\r\n            {...defaultProps}>\r\n            {props.children}\r\n        </GoogleMapWrapper>\r\n    )\r\n}\r\n\r\nexport default GoogleMap\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Zones/ZoneMap.js","import ZonesWrapper from './ZonesWrapper'\r\nconst ADD_ZONE = 'openAddZone'\r\nconst TOGGLE_INFO = 'openInfo'\r\n\r\nexport {\r\n    ADD_ZONE,\r\n    TOGGLE_INFO,\r\n    ZonesWrapper\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Zones/index.js","import React from 'react'\nimport {connect} from 'react-redux'\nimport {setTokenAction, signOutAction} from '../../actions/signIn'\nimport DocumentTitle from 'react-document-title'\nimport {hashHistory} from 'react-router'\nimport {compose, withHandlers} from 'recompose'\nimport {\n    notificationGetNotViewed\n} from '../../actions/notifications'\nimport * as ROUTES from '../../constants/routes'\n\nconst time = 10000\n@compose(\n    connect(),\n    withHandlers({\n        handleSignOut: prop => (event) => {\n            const {dispatch} = prop\n            event.preventDefault()\n\n            dispatch(signOutAction()).then(() => {\n                hashHistory.push(ROUTES.SIGN_IN)\n            })\n        }\n    })\n)\nclass App extends React.Component {\n    constructor (props) {\n        super(props)\n\n        const {dispatch} = props\n        dispatch(setTokenAction())\n        setInterval(() => {\n            dispatch(notificationGetNotViewed())\n        }, time)\n    }\n\n    render () {\n        const {handleSignOut} = this.props\n        const layout = {\n            handleSignOut\n        }\n        const title = this.props.title || ''\n\n        return (\n            <DocumentTitle title={title}>\n                {React.cloneElement(this.props.children, {layout})}\n            </DocumentTitle>\n        )\n    }\n}\n\nexport default App\n\n\n\n// WEBPACK FOOTER //\n// src/containers/App/App.js","import App from './App'\n\nexport default App\n\n\n\n// WEBPACK FOOTER //\n// src/containers/App/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport {\r\n    BRAND_CREATE_DIALOG_OPEN,\r\n    BRAND_UPDATE_DIALOG_OPEN,\r\n    BRAND_DELETE_DIALOG_OPEN,\r\n    BrandGridList\r\n} from '../../components/Brand'\r\nimport {\r\n    brandCreateAction,\r\n    brandUpdateAction,\r\n    brandListFetchAction,\r\n    brandDeleteAction,\r\n    brandItemFetchAction\r\n} from '../../actions/brand'\r\nimport {openSnackbarAction} from '../../actions/snackbar'\r\n\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['brand', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['brand', 'item', 'loading'])\r\n        const createLoading = _.get(state, ['brand', 'create', 'loading'])\r\n        const updateLoading = _.get(state, ['brand', 'update', 'loading'])\r\n        const list = _.get(state, ['brand', 'list', 'data'])\r\n        const listLoading = _.get(state, ['brand', 'list', 'loading'])\r\n        const createForm = _.get(state, ['form', 'BrandCreateForm'])\r\n        const filter = filterHelper(list, pathname, query)\r\n\r\n        return {\r\n            list,\r\n            listLoading,\r\n            detail,\r\n            detailLoading,\r\n            createLoading,\r\n            updateLoading,\r\n            filter,\r\n            createForm\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(brandListFetchAction(filter))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const brandId = _.get(nextProps, ['params', 'brandId'])\r\n\r\n        return brandId && _.get(props, ['params', 'brandId']) !== brandId\r\n    }, ({dispatch, params}) => {\r\n        const brandId = _.toInteger(_.get(params, 'brandId'))\r\n        brandId && dispatch(brandItemFetchAction(brandId))\r\n    }),\r\n\r\n    withHandlers({\r\n        handleActionEdit: props => () => {\r\n            return null\r\n        },\r\n\r\n        handleOpenDeleteDialog: props => () => {\r\n            return null\r\n        },\r\n\r\n        handleOpenConfirmDialog: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.BRAND_ITEM_PATH, id),\r\n                query: filter.getParams({[BRAND_DELETE_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseConfirmDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[BRAND_DELETE_DIALOG_OPEN]: false})})\r\n        },\r\n        handleSendConfirmDialog: props => () => {\r\n            const {dispatch, detail, filter, location: {pathname}} = props\r\n            dispatch(brandDeleteAction(detail.id))\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[BRAND_DELETE_DIALOG_OPEN]: false})})\r\n                    dispatch(brandListFetchAction(filter))\r\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\r\n                })\r\n                .catch(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\r\n                })\r\n        },\r\n\r\n        handleOpenCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[BRAND_CREATE_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[BRAND_CREATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitCreateDialog: props => () => {\r\n            const {dispatch, createForm, filter, location: {pathname}} = props\r\n\r\n            return dispatch(brandCreateAction(_.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[BRAND_CREATE_DIALOG_OPEN]: false})})\r\n                    dispatch(brandListFetchAction(filter))\r\n                })\r\n        },\r\n\r\n        handleOpenUpdateDialog: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.BRAND_ITEM_PATH, id),\r\n                query: filter.getParams({[BRAND_UPDATE_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseUpdateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[BRAND_UPDATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitUpdateDialog: props => () => {\r\n            const {dispatch, createForm, filter} = props\r\n            const brandId = _.toInteger(_.get(props, ['params', 'brandId']))\r\n\r\n            return dispatch(brandUpdateAction(brandId, _.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(brandItemFetchAction(brandId))\r\n                })\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push(filter.createURL({[BRAND_UPDATE_DIALOG_OPEN]: false}))\r\n                    dispatch(brandListFetchAction(filter))\r\n                })\r\n        }\r\n    })\r\n)\r\n\r\nconst BrandList = enhance((props) => {\r\n    const {\r\n        location,\r\n        list,\r\n        listLoading,\r\n        detail,\r\n        detailLoading,\r\n        createLoading,\r\n        updateLoading,\r\n        filter,\r\n        layout,\r\n        params\r\n    } = props\r\n\r\n    const openCreateDialog = toBoolean(_.get(location, ['query', BRAND_CREATE_DIALOG_OPEN]))\r\n    const openUpdateDialog = toBoolean(_.get(location, ['query', BRAND_UPDATE_DIALOG_OPEN]))\r\n    const openConfirmDialog = toBoolean(_.get(location, ['query', BRAND_DELETE_DIALOG_OPEN]))\r\n\r\n    const detailId = _.toInteger(_.get(params, 'brandId'))\r\n\r\n    const actionsDialog = {\r\n        handleActionEdit: props.handleActionEdit,\r\n        handleActionDelete: props.handleOpenDeleteDialog\r\n    }\r\n\r\n    const createDialog = {\r\n        createLoading,\r\n        openCreateDialog,\r\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\r\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\r\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\r\n    }\r\n\r\n    const confirmDialog = {\r\n        confirmLoading: detailLoading,\r\n        openConfirmDialog: openConfirmDialog,\r\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\r\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\r\n        handleSendConfirmDialog: props.handleSendConfirmDialog\r\n    }\r\n\r\n    const updateDialog = {\r\n        initialValues: (() => {\r\n            if (!detail) {\r\n                return {}\r\n            }\r\n\r\n            return {\r\n                name: _.get(detail, 'name')\r\n            }\r\n        })(),\r\n        updateLoading: detailLoading || updateLoading,\r\n        openUpdateDialog,\r\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\r\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\r\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\r\n    }\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading\r\n    }\r\n\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        detailLoading\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <BrandGridList\r\n                filter={filter}\r\n                listData={listData}\r\n                detailData={detailData}\r\n                createDialog={createDialog}\r\n                confirmDialog={confirmDialog}\r\n                updateDialog={updateDialog}\r\n                actionsDialog={actionsDialog}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default BrandList\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Brand/BrandList.js","import BrandList from './BrandList'\n\nexport {BrandList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Brand/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport {\r\n    CASHBOX_CREATE_DIALOG_OPEN,\r\n    CASHBOX_UPDATE_DIALOG_OPEN,\r\n    CASHBOX_DELETE_DIALOG_OPEN,\r\n    CashboxGridList\r\n} from '../../components/Cashbox'\r\nimport {\r\n    cashboxCreateAction,\r\n    cashboxUpdateAction,\r\n    cashboxListFetchAction,\r\n    cashboxDeleteAction,\r\n    cashboxItemFetchAction\r\n} from '../../actions/cashbox'\r\nimport {openSnackbarAction} from '../../actions/snackbar'\r\n\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['cashbox', 'item', 'data'])\r\n        const itemLoading = _.get(state, ['cashbox', 'item', 'loading'])\r\n        const createLoading = _.get(state, ['cashbox', 'create', 'loading'])\r\n        const updateLoading = _.get(state, ['cashbox', 'update', 'loading'])\r\n        const list = _.get(state, ['cashbox', 'list', 'data'])\r\n        const listLoading = _.get(state, ['cashbox', 'list', 'loading'])\r\n        const createForm = _.get(state, ['form', 'CashboxCreateForm'])\r\n        const filter = filterHelper(list, pathname, query)\r\n\r\n        return {\r\n            list,\r\n            listLoading,\r\n            detail,\r\n            itemLoading,\r\n            createLoading,\r\n            updateLoading,\r\n            filter,\r\n            createForm\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(cashboxListFetchAction(filter))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const cashboxId = _.get(nextProps, ['params', 'cashboxId'])\r\n        return cashboxId && _.get(props, ['params', 'cashboxId']) !== cashboxId\r\n    }, ({dispatch, params}) => {\r\n        const cashboxId = _.toInteger(_.get(params, 'cashboxId'))\r\n        cashboxId && dispatch(cashboxItemFetchAction(cashboxId))\r\n    }),\r\n\r\n    withHandlers({\r\n        handleActionEdit: props => () => {\r\n            return null\r\n        },\r\n\r\n        handleOpenConfirmDialog: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.CASHBOX_ITEM_PATH, id),\r\n                query: filter.getParams({[CASHBOX_DELETE_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseConfirmDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[CASHBOX_DELETE_DIALOG_OPEN]: false})})\r\n        },\r\n        handleSendConfirmDialog: props => () => {\r\n            const {dispatch, detail, filter, location: {pathname}} = props\r\n            dispatch(cashboxDeleteAction(detail.id))\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[CASHBOX_DELETE_DIALOG_OPEN]: false})})\r\n                    dispatch(cashboxListFetchAction(filter))\r\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\r\n                })\r\n                .catch(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\r\n                })\r\n        },\r\n\r\n        handleOpenDeleteDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({\r\n                pathname,\r\n                query: filter.getParams({openDeleteDialog: 'yes'})\r\n            })\r\n        },\r\n\r\n        handleCloseDeleteDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({openDeleteDialog: false})})\r\n        },\r\n\r\n        handleOpenCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[CASHBOX_CREATE_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[CASHBOX_CREATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitCreateDialog: props => () => {\r\n            const {dispatch, createForm, filter, location: {pathname}} = props\r\n\r\n            return dispatch(cashboxCreateAction(_.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[CASHBOX_CREATE_DIALOG_OPEN]: false})})\r\n                    dispatch(cashboxListFetchAction(filter))\r\n                })\r\n        },\r\n\r\n        handleOpenUpdateDialog: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.CASHBOX_ITEM_PATH, id),\r\n                query: filter.getParams({[CASHBOX_UPDATE_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseUpdateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[CASHBOX_UPDATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitUpdateDialog: props => () => {\r\n            const {dispatch, createForm, filter} = props\r\n            const cashboxId = _.toInteger(_.get(props, ['params', 'cashboxId']))\r\n\r\n            return dispatch(cashboxUpdateAction(cashboxId, _.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(cashboxItemFetchAction(cashboxId))\r\n                })\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push(filter.createURL({[CASHBOX_UPDATE_DIALOG_OPEN]: false}))\r\n                    dispatch(cashboxListFetchAction(filter))\r\n                })\r\n        }\r\n    })\r\n)\r\n\r\nconst CashboxList = enhance((props) => {\r\n    const {\r\n        location,\r\n        list,\r\n        listLoading,\r\n        detail,\r\n        itemLoading,\r\n        createLoading,\r\n        updateLoading,\r\n        filter,\r\n        layout,\r\n        params\r\n    } = props\r\n\r\n    const openCreateDialog = toBoolean(_.get(location, ['query', CASHBOX_CREATE_DIALOG_OPEN]))\r\n    const openUpdateDialog = toBoolean(_.get(location, ['query', CASHBOX_UPDATE_DIALOG_OPEN]))\r\n    const openConfirmDialog = toBoolean(_.get(location, ['query', CASHBOX_DELETE_DIALOG_OPEN]))\r\n    const detailId = _.toInteger(_.get(params, 'cashboxId'))\r\n\r\n    const actionsDialog = {\r\n        handleActionEdit: props.handleActionEdit,\r\n        handleActionDelete: props.handleOpenDeleteDialog\r\n    }\r\n\r\n    const createDialog = {\r\n        createLoading,\r\n        openCreateDialog,\r\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\r\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\r\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\r\n    }\r\n\r\n    const confirmDialog = {\r\n        confirmLoading: itemLoading,\r\n        openConfirmDialog: openConfirmDialog,\r\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\r\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\r\n        handleSendConfirmDialog: props.handleSendConfirmDialog\r\n    }\r\n\r\n    const updateDialog = {\r\n        initialValues: (() => {\r\n            if (!detail || openCreateDialog) {\r\n                return {}\r\n            }\r\n\r\n            return {\r\n                name: _.get(detail, 'name'),\r\n                currency: {\r\n                    value: _.get(detail, 'currency')\r\n                },\r\n                cashier: {\r\n                    value: _.get(detail, 'cashier')\r\n                },\r\n                type: {\r\n                    value: _.get(detail, 'type')\r\n                }\r\n            }\r\n        })(),\r\n        updateLoading: itemLoading || updateLoading,\r\n        openUpdateDialog,\r\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\r\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\r\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\r\n    }\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading\r\n    }\r\n\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        itemLoading\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <CashboxGridList\r\n                filter={filter}\r\n                listData={listData}\r\n                detailData={detailData}\r\n                createDialog={createDialog}\r\n                confirmDialog={confirmDialog}\r\n                updateDialog={updateDialog}\r\n                actionsDialog={actionsDialog}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default CashboxList\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Cashbox/CashboxList.js","import CashboxList from './CashboxList'\n\nexport {CashboxList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Cashbox/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport moment from 'moment'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport {\r\n    CLIENT_TRANSACTION_CREATE_EXPENSE_DIALOG_OPEN,\r\n    CLIENT_TRANSACTION_CREATE_INCOME_DIALOG_OPEN,\r\n    CLIENT_TRANSACTION_UPDATE_EXPENSE_DIALOG_OPEN,\r\n    CLIENT_TRANSACTION_UPDATE_INCOME_DIALOG_OPEN,\r\n    CLIENT_TRANSACTION_CREATE_SEND_DIALOG_OPEN,\r\n    CLIENT_TRANSACTION_DELETE_DIALOG_OPEN,\r\n    CLIENT_TRANSACTION_FILTER_KEY,\r\n    CLIENT_TRANSACTION_FILTER_OPEN,\r\n    ClientTransactionGridList\r\n} from '../../components/ClientTransaction'\r\nimport {\r\n    clientTransactionCreateExpenseAction,\r\n    clientTransactionCreateIncomeAction,\r\n    clientTransactionCreateSendAction,\r\n    clientTransactionListFetchAction,\r\n    clientTransactionDeleteAction\r\n} from '../../actions/clientTransaction'\r\nimport {\r\n    clientListFetchAction\r\n} from '../../actions/client'\r\nimport {openSnackbarAction} from '../../actions/snackbar'\r\n\r\nconst ZERO = 0\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['clientTransaction', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['clientTransaction', 'item', 'loading'])\r\n        const createLoading = _.get(state, ['clientTransaction', 'create', 'loading'])\r\n        const updateLoading = _.get(state, ['clientTransaction', 'update', 'loading'])\r\n        const list = _.get(state, ['clientTransaction', 'list', 'data'])\r\n        const clientList = _.get(state, ['client', 'list', 'data'])\r\n        const clientListLoading = _.get(state, ['client', 'list', 'loading'])\r\n        const listLoading = _.get(state, ['clientTransaction', 'list', 'loading'])\r\n        const filterForm = _.get(state, ['form', 'ClientTransactionFilterForm'])\r\n        const createForm = _.get(state, ['form', 'ClientTransactionCreateForm'])\r\n        const filter = filterHelper(list, pathname, query)\r\n        const filterClient = filterHelper(clientList, pathname, query)\r\n        return {\r\n            list,\r\n            clientList,\r\n            clientListLoading,\r\n            listLoading,\r\n            detail,\r\n            detailLoading,\r\n            createLoading,\r\n            updateLoading,\r\n            filter,\r\n            filterClient,\r\n            filterForm,\r\n            createForm\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return (!nextProps.clientListLoading && _.isNil(nextProps.clientList)) ||\r\n            (props.filterClient.filterRequest() !== nextProps.filterClient.filterRequest())\r\n    }, ({dispatch, filterClient}) => {\r\n        dispatch(clientListFetchAction(filterClient))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        return (props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()) ||\r\n            (_.get(props, ['params', 'clientTransactionId']) !== _.get(nextProps, ['params', 'clientTransactionId']))\r\n    }, ({dispatch, filter, params}) => {\r\n        const clientId = _.toInteger(_.get(params, 'clientTransactionId'))\r\n        dispatch(clientTransactionListFetchAction(filter, clientId === ZERO ? null : clientId))\r\n    }),\r\n\r\n    withHandlers({\r\n        handleActionEdit: props => () => {\r\n            return null\r\n        },\r\n\r\n        handleOpenDeleteDialog: props => () => {\r\n            return null\r\n        },\r\n\r\n        handleOpenConfirmDialog: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.CLIENT_TRANSACTION_ITEM_PATH, id),\r\n                query: filter.getParams({[CLIENT_TRANSACTION_DELETE_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseConfirmDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[CLIENT_TRANSACTION_DELETE_DIALOG_OPEN]: false})})\r\n        },\r\n        handleExpenseConfirmDialog: props => () => {\r\n            const {dispatch, detail, filter, location: {pathname}, clientId} = props\r\n            dispatch(clientTransactionDeleteAction(detail.id))\r\n                .catch(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({\r\n                        pathname,\r\n                        query: filter.getParams({[CLIENT_TRANSACTION_DELETE_DIALOG_OPEN]: false})\r\n                    })\r\n                    dispatch(clientTransactionListFetchAction(filter, clientId))\r\n                })\r\n        },\r\n\r\n        handleOpenFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[CLIENT_TRANSACTION_FILTER_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[CLIENT_TRANSACTION_FILTER_OPEN]: false})})\r\n        },\r\n\r\n        handleClearFilterDialog: props => () => {\r\n            const {location: {pathname}} = props\r\n            hashHistory.push({pathname, query: {}})\r\n        },\r\n\r\n        handleSubmitFilterDialog: props => () => {\r\n            const {filter, filterForm} = props\r\n            const fromDate = _.get(filterForm, ['values', 'date', 'fromDate']) || null\r\n            const toDate = _.get(filterForm, ['values', 'date', 'toDate']) || null\r\n            const type = _.get(filterForm, ['values', 'type', 'value']) || null\r\n            const categoryExpense = _.get(filterForm, ['values', 'categoryExpense', 'value']) || null\r\n\r\n            filter.filterBy({\r\n                [CLIENT_TRANSACTION_FILTER_OPEN]: false,\r\n                [CLIENT_TRANSACTION_FILTER_KEY.TYPE]: type,\r\n                [CLIENT_TRANSACTION_FILTER_KEY.CATEGORY_EXPENSE]: categoryExpense,\r\n                [CLIENT_TRANSACTION_FILTER_KEY.FROM_DATE]: fromDate && fromDate.format('YYYY-MM-DD'),\r\n                [CLIENT_TRANSACTION_FILTER_KEY.TO_DATE]: toDate && toDate.format('YYYY-MM-DD')\r\n            })\r\n        },\r\n\r\n        handleOpenCreateExpenseDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({\r\n                pathname,\r\n                query: filter.getParams({[CLIENT_TRANSACTION_CREATE_EXPENSE_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseCreateExpenseDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({\r\n                pathname,\r\n                query: filter.getParams({[CLIENT_TRANSACTION_CREATE_EXPENSE_DIALOG_OPEN]: false})\r\n            })\r\n        },\r\n\r\n        handleSubmitCreateExpenseDialog: props => () => {\r\n            const {dispatch, createForm, filter, location: {pathname}, params} = props\r\n            const clientId = _.get(params, 'clientTransactionId')\r\n            return dispatch(clientTransactionCreateExpenseAction(_.get(createForm, ['values']), clientId))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({\r\n                        pathname,\r\n                        query: filter.getParams({[CLIENT_TRANSACTION_CREATE_EXPENSE_DIALOG_OPEN]: false})\r\n                    })\r\n                    dispatch(clientTransactionListFetchAction(filter, clientId))\r\n                })\r\n        },\r\n\r\n        handleOpenCreateIncomeDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({\r\n                pathname,\r\n                query: filter.getParams({[CLIENT_TRANSACTION_CREATE_INCOME_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseCreateIncomeDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({\r\n                pathname,\r\n                query: filter.getParams({[CLIENT_TRANSACTION_CREATE_INCOME_DIALOG_OPEN]: false})\r\n            })\r\n        },\r\n\r\n        handleSubmitCreateIncomeDialog: props => () => {\r\n            const {dispatch, createForm, filter, location: {pathname}, params} = props\r\n            const clientId = _.get(params, 'clientTransactionId')\r\n            return dispatch(clientTransactionCreateIncomeAction(_.get(createForm, ['values']), clientId))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({\r\n                        pathname,\r\n                        query: filter.getParams({[CLIENT_TRANSACTION_CREATE_INCOME_DIALOG_OPEN]: false})\r\n                    })\r\n                    dispatch(clientTransactionListFetchAction(filter, clientId))\r\n                })\r\n        },\r\n\r\n        handleOpenCreateSendDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[CLIENT_TRANSACTION_CREATE_SEND_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseCreateSendDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[CLIENT_TRANSACTION_CREATE_SEND_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitCreateSendDialog: props => () => {\r\n            const {dispatch, createForm, filter, location: {pathname}, clientId} = props\r\n            return dispatch(clientTransactionCreateSendAction(_.get(createForm, ['values']), clientId))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({\r\n                        pathname,\r\n                        query: filter.getParams({[CLIENT_TRANSACTION_CREATE_SEND_DIALOG_OPEN]: false})\r\n                    })\r\n                    dispatch(clientTransactionListFetchAction(filter))\r\n                    dispatch(clientListFetchAction(filter))\r\n                })\r\n        },\r\n\r\n        handleClickClient: props => (id) => {\r\n            hashHistory.push({pathname: sprintf(ROUTER.CLIENT_TRANSACTION_ITEM_PATH, _.toInteger(id)), query: {}})\r\n        }\r\n    })\r\n)\r\n\r\nconst ClientTransactionList = enhance((props) => {\r\n    const {\r\n        location,\r\n        list,\r\n        clientList,\r\n        clientListLoading,\r\n        listLoading,\r\n        detail,\r\n        detailLoading,\r\n        createLoading,\r\n        updateLoading,\r\n        filter,\r\n        filterClient,\r\n        layout,\r\n        params\r\n    } = props\r\n\r\n    const openFilterDialog = toBoolean(_.get(location, ['query', CLIENT_TRANSACTION_FILTER_OPEN]))\r\n    const openCreateExpenseDialog = toBoolean(_.get(location, ['query', CLIENT_TRANSACTION_CREATE_EXPENSE_DIALOG_OPEN]))\r\n    const openCreateIncomeDialog = toBoolean(_.get(location, ['query', CLIENT_TRANSACTION_CREATE_INCOME_DIALOG_OPEN]))\r\n    const openUpdateExpenseDialog = toBoolean(_.get(location, ['query', CLIENT_TRANSACTION_UPDATE_EXPENSE_DIALOG_OPEN]))\r\n    const openUpdateIncomeDialog = toBoolean(_.get(location, ['query', CLIENT_TRANSACTION_UPDATE_INCOME_DIALOG_OPEN]))\r\n    const openCreateSendDialog = toBoolean(_.get(location, ['query', CLIENT_TRANSACTION_CREATE_SEND_DIALOG_OPEN]))\r\n    const openConfirmDialog = toBoolean(_.get(location, ['query', CLIENT_TRANSACTION_DELETE_DIALOG_OPEN]))\r\n\r\n    const categoryExpense = _.toInteger(filter.getParam(CLIENT_TRANSACTION_FILTER_KEY.CATEGORY_EXPENSE))\r\n    const type = _.toInteger(filter.getParam(CLIENT_TRANSACTION_FILTER_KEY.TYPE))\r\n    const fromDate = filter.getParam(CLIENT_TRANSACTION_FILTER_KEY.FROM_DATE)\r\n    const toDate = filter.getParam(CLIENT_TRANSACTION_FILTER_KEY.TO_DATE)\r\n    const detailId = _.toInteger(_.get(params, 'clientTransactionId'))\r\n\r\n    const actionsDialog = {\r\n        handleActionEdit: props.handleActionEdit,\r\n        handleActionDelete: props.handleOpenDeleteDialog\r\n    }\r\n\r\n    const createExpenseDialog = {\r\n        loading: createLoading,\r\n        open: openCreateExpenseDialog,\r\n        handleOpenDialog: props.handleOpenCreateExpenseDialog,\r\n        handleCloseDialog: props.handleCloseCreateExpenseDialog,\r\n        handleSubmitDialog: props.handleSubmitCreateExpenseDialog\r\n    }\r\n\r\n    const createIncomeDialog = {\r\n        loading: createLoading,\r\n        open: openCreateIncomeDialog,\r\n        handleOpenDialog: props.handleOpenCreateIncomeDialog,\r\n        handleCloseDialog: props.handleCloseCreateIncomeDialog,\r\n        handleSubmitDialog: props.handleSubmitCreateIncomeDialog\r\n    }\r\n\r\n    const createSendDialog = {\r\n        loading: createLoading,\r\n        open: openCreateSendDialog,\r\n        handleOpenDialog: props.handleOpenCreateSendDialog,\r\n        handleCloseDialog: props.handleCloseCreateSendDialog,\r\n        handleSubmitDialog: props.handleSubmitCreateSendDialog\r\n    }\r\n\r\n    const updateExpenseDialog = {\r\n        initialValues: (() => {\r\n            if (!detailId || openUpdateExpenseDialog) {\r\n                return {}\r\n            }\r\n            return {\r\n                comment: _.get(detail, 'comment'),\r\n                category: {\r\n                    value: _.get(detail, ['expanseCategory', 'id'])\r\n                },\r\n                amount: _.get(detail, 'amount')\r\n            }\r\n        })(),\r\n        loading: updateLoading,\r\n        open: openUpdateExpenseDialog,\r\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\r\n        handleCloseUpdateDialog: props.handleCloseUpdateExpenseDialog,\r\n        handleSubmitUpdateDialog: props.handleSubmitUpdateExpenseDialog\r\n    }\r\n\r\n    const updateIncomeDialog = {\r\n        initialValues: (() => {\r\n            if (!detailId || openCreateIncomeDialog) {\r\n                return {}\r\n            }\r\n\r\n            return {\r\n                comment: _.get(detail, 'comment'),\r\n                amount: _.get(detail, 'amount')\r\n            }\r\n        })(),\r\n        loading: updateLoading,\r\n        open: openUpdateIncomeDialog,\r\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\r\n        handleCloseUpdateDialog: props.handleCloseUpdateIncomeDialog,\r\n        handleSubmitUpdateDialog: props.handleSubmitUpdateIncomeDialog\r\n    }\r\n\r\n    const confirmDialog = {\r\n        open: openConfirmDialog,\r\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\r\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\r\n        handleExpenseConfirmDialog: props.handleExpenseConfirmDialog\r\n    }\r\n\r\n    const filterDialog = {\r\n        initialValues: {\r\n            category: {\r\n                value: categoryExpense\r\n            },\r\n            type: {\r\n                value: type\r\n            },\r\n            date: {\r\n                fromDate: fromDate && moment(fromDate, 'YYYY-MM-DD'),\r\n                toDate: toDate && moment(toDate, 'YYYY-MM-DD')\r\n            }\r\n        },\r\n        filterLoading: false,\r\n        openFilterDialog,\r\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\r\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\r\n        handleClearFilterDialog: props.handleClearFilterDialog,\r\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\r\n    }\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading\r\n    }\r\n\r\n    const clientData = {\r\n        data: _.get(clientList, 'results'),\r\n        handleClickClient: props.handleClickClient,\r\n        clientId: _.toInteger(detailId),\r\n        listLoading\r\n\r\n    }\r\n\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        detailLoading\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <ClientTransactionGridList\r\n                filterClient={filterClient}\r\n                filter={filter}\r\n                listData={listData}\r\n                clientListLoading={clientListLoading}\r\n                clientData={clientData}\r\n                detailData={detailData}\r\n                createExpenseDialog={createExpenseDialog}\r\n                createIncomeDialog={createIncomeDialog}\r\n                updateIncomeDialog={updateIncomeDialog}\r\n                updateExpenseDialog={updateExpenseDialog}\r\n                createSendDialog={createSendDialog}\r\n                confirmDialog={confirmDialog}\r\n                actionsDialog={actionsDialog}\r\n                filterDialog={filterDialog}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default ClientTransactionList\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/ClientTransaction/ClientTransactionList.js","import ClientTransactionList from './ClientTransactionList'\n\nexport {ClientTransactionList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/ClientTransaction/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withState, withHandlers} from 'recompose'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport {DELETE_DIALOG_OPEN} from '../../components/DeleteDialog'\r\nimport {\r\n    CLIENT_CREATE_DIALOG_OPEN,\r\n    CLIENT_UPDATE_DIALOG_OPEN,\r\n    ClientGridList\r\n} from '../../components/Client'\r\nimport {\r\n    clientCreateAction,\r\n    clientUpdateAction,\r\n    clientListFetchAction,\r\n    clientDeleteAction,\r\n    clientItemFetchAction\r\n} from '../../actions/client'\r\nimport {openSnackbarAction} from '../../actions/snackbar'\r\n\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['client', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['client', 'item', 'loading'])\r\n        const createLoading = _.get(state, ['client', 'create', 'loading'])\r\n        const updateLoading = _.get(state, ['client', 'update', 'loading'])\r\n        const list = _.get(state, ['client', 'list', 'data'])\r\n        const listLoading = _.get(state, ['client', 'list', 'loading'])\r\n        const createForm = _.get(state, ['form', 'ClientCreateForm'])\r\n        const filter = filterHelper(list, pathname, query)\r\n\r\n        return {\r\n            list,\r\n            listLoading,\r\n            detail,\r\n            detailLoading,\r\n            createLoading,\r\n            updateLoading,\r\n            filter,\r\n            createForm\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(clientListFetchAction(filter))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const clientId = _.get(nextProps, ['params', 'clientId'])\r\n        return clientId && _.get(props, ['params', 'clientId']) !== clientId\r\n    }, ({dispatch, params}) => {\r\n        const clientId = _.toInteger(_.get(params, 'clientId'))\r\n        clientId && dispatch(clientItemFetchAction(clientId))\r\n    }),\r\n\r\n    withState('openConfirmDialog', 'setOpenConfirmDialog', false),\r\n\r\n    withHandlers({\r\n        handleActionEdit: props => () => {\r\n            return null\r\n        },\r\n\r\n        handleOpenConfirmDialog: props => () => {\r\n            const {setOpenConfirmDialog} = props\r\n            setOpenConfirmDialog(true)\r\n        },\r\n\r\n        handleCloseConfirmDialog: props => () => {\r\n            const {setOpenConfirmDialog} = props\r\n            setOpenConfirmDialog(false)\r\n        },\r\n        handleSendConfirmDialog: props => () => {\r\n            const {dispatch, detail, setOpenConfirmDialog, filter} = props\r\n            dispatch(clientDeleteAction(detail.id))\r\n                .then(() => {\r\n                    setOpenConfirmDialog(false)\r\n                    dispatch(clientListFetchAction(filter))\r\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\r\n                })\r\n                .catch(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\r\n                })\r\n        },\r\n\r\n        handleOpenDeleteDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({\r\n                pathname,\r\n                query: filter.getParams({openDeleteDialog: 'yes'})\r\n            })\r\n        },\r\n\r\n        handleCloseDeleteDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({openDeleteDialog: false})})\r\n        },\r\n\r\n        handleOpenCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[CLIENT_CREATE_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[CLIENT_CREATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitCreateDialog: props => () => {\r\n            const {dispatch, createForm, filter} = props\r\n\r\n            return dispatch(clientCreateAction(_.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    dispatch(clientListFetchAction(filter))\r\n                    hashHistory.push(filter.createURL({[CLIENT_CREATE_DIALOG_OPEN]: false}))\r\n                })\r\n        },\r\n\r\n        handleOpenUpdateDialog: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.CLIENT_ITEM_PATH, id),\r\n                query: filter.getParams({[CLIENT_UPDATE_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseUpdateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[CLIENT_UPDATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitUpdateDialog: props => () => {\r\n            const {dispatch, createForm, filter} = props\r\n            const clientId = _.toInteger(_.get(props, ['params', 'clientId']))\r\n\r\n            return dispatch(clientUpdateAction(clientId, _.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(clientItemFetchAction(clientId))\r\n                })\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push(filter.createURL({[CLIENT_UPDATE_DIALOG_OPEN]: false}))\r\n                    dispatch(clientListFetchAction(filter))\r\n                })\r\n        },\r\n\r\n        handleCloseDetail: props => () => {\r\n            const {filter} = props\r\n            hashHistory.push({pathname: ROUTER.CLIENT_LIST_URL, query: filter.getParam()})\r\n        }\r\n    })\r\n)\r\n\r\nconst ClientList = enhance((props) => {\r\n    const {\r\n        location,\r\n        list,\r\n        listLoading,\r\n        detail,\r\n        detailLoading,\r\n        createLoading,\r\n        updateLoading,\r\n        filter,\r\n        layout,\r\n        params\r\n    } = props\r\n\r\n    const openCreateDialog = toBoolean(_.get(location, ['query', CLIENT_CREATE_DIALOG_OPEN]))\r\n    const openUpdateDialog = toBoolean(_.get(location, ['query', CLIENT_UPDATE_DIALOG_OPEN]))\r\n    const openDeleteDialog = toBoolean(_.get(location, ['query', DELETE_DIALOG_OPEN]))\r\n    const detailId = _.toInteger(_.get(params, 'clientId'))\r\n    const tab = _.get(params, 'tab')\r\n\r\n    const actionsDialog = {\r\n        handleActionEdit: props.handleActionEdit,\r\n        handleActionDelete: props.handleOpenDeleteDialog\r\n    }\r\n\r\n    const createDialog = {\r\n        createLoading,\r\n        openCreateDialog,\r\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\r\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\r\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\r\n    }\r\n\r\n    const deleteDialog = {\r\n        openDeleteDialog,\r\n        handleOpenDeleteDialog: props.handleOpenDeleteDialog,\r\n        handleCloseDeleteDialog: props.handleCloseDeleteDialog\r\n    }\r\n\r\n    const confirmDialog = {\r\n        openConfirmDialog: props.openConfirmDialog,\r\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\r\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\r\n        handleSendConfirmDialog: props.handleSendConfirmDialog\r\n    }\r\n\r\n    const updateDialog = {\r\n        initialValues: (() => {\r\n            if (!detail || openCreateDialog) {\r\n                return {\r\n                    contacts: [{}]\r\n                }\r\n            }\r\n\r\n            const contacts = _(detail).get('contacts').map((contact) => {\r\n                return {\r\n                    name: _.get(contact, 'name'),\r\n                    email: _.get(contact, 'email'),\r\n                    telephone: _.get(contact, 'telephone')\r\n                }\r\n            })\r\n\r\n            return {\r\n                name: _.get(detail, 'name'),\r\n                address: _.get(detail, 'address'),\r\n                contacts: _.union(contacts, [{}])\r\n            }\r\n        })(),\r\n        updateLoading: detailLoading || updateLoading,\r\n        openUpdateDialog,\r\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\r\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\r\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\r\n    }\r\n\r\n    const tabData = {\r\n        tab,\r\n        handleTabChange: props.handleTabChange\r\n    }\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading\r\n    }\r\n\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        detailLoading,\r\n        handleCloseDetail: props.handleCloseDetail\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <ClientGridList\r\n                filter={filter}\r\n                listData={listData}\r\n                detailData={detailData}\r\n                tabData={tabData}\r\n                createDialog={createDialog}\r\n                deleteDialog={deleteDialog}\r\n                confirmDialog={confirmDialog}\r\n                updateDialog={updateDialog}\r\n                actionsDialog={actionsDialog}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default ClientList\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Client/ClientList.js","import ClientList from './ClientList'\n\nexport {ClientList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Client/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withState, withHandlers} from 'recompose'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport {\r\n    CURRENCY_CREATE_DIALOG_OPEN,\r\n    CURRENCY_UPDATE_DIALOG_OPEN,\r\n    CURRENCY_DELETE_DIALOG_OPEN,\r\n    SET_CURRENCY_DIALOG_OPEN,\r\n    CurrencyGridList\r\n} from '../../components/Currency'\r\nimport {\r\n    currencyCreateAction,\r\n    setCurrencyCreateAction,\r\n    currencyUpdateAction,\r\n    currencyListFetchAction,\r\n    currencyCSVFetchAction,\r\n    currencyDeleteAction,\r\n    currencyItemFetchAction,\r\n    currencyPrimaryFetchAction\r\n} from '../../actions/currency'\r\nimport {openSnackbarAction} from '../../actions/snackbar'\r\n\r\nconst MINUS_ONE = -1\r\nconst ZERO = 0\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['currency', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['currency', 'item', 'loading'])\r\n        const createLoading = _.get(state, ['currency', 'create', 'loading'])\r\n        const updateLoading = _.get(state, ['currency', 'update', 'loading'])\r\n        const list = _.get(state, ['currency', 'list', 'data'])\r\n        const listLoading = _.get(state, ['currency', 'list', 'loading'])\r\n        const csvData = _.get(state, ['currency', 'csv', 'data'])\r\n        const csvLoading = _.get(state, ['currency', 'csv', 'loading'])\r\n        const createForm = _.get(state, ['form', 'CurrencyCreateForm'])\r\n        const baseCreateForm = _.get(state, ['form', 'BaseCurrencyCreateForm'])\r\n        const detailId = _.toInteger(_.get(props, ['location', 'query', 'detailId']) || '-1')\r\n        const detailFilter = filterHelper(detail, pathname, query)\r\n        const filter = filterHelper(list, pathname, query)\r\n        return {\r\n            list,\r\n            listLoading,\r\n            detail,\r\n            detailLoading,\r\n            createLoading,\r\n            updateLoading,\r\n            csvData,\r\n            csvLoading,\r\n            filter,\r\n            baseCreateForm,\r\n            createForm,\r\n            detailId,\r\n            detailFilter\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(currencyListFetchAction(filter))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const currencyId = _.get(nextProps, ['params', 'currencyId'])\r\n        return (currencyId && _.get(props, ['params', 'currencyId']) !== currencyId) ||\r\n            props.detailFilter.filterRequest() !== nextProps.detailFilter.filterRequest()\r\n    }, ({dispatch, params, detailFilter}) => {\r\n        const currencyId = _.toInteger(_.get(params, 'currencyId'))\r\n        currencyId && dispatch(currencyItemFetchAction(detailFilter, currencyId))\r\n    }),\r\n\r\n    withState('openCSVDialog', 'setOpenCSVDialog', false),\r\n    withState('openConfirmDialog', 'setOpenConfirmDialog', false),\r\n\r\n    withHandlers({\r\n        handleActionEdit: props => () => {\r\n            return null\r\n        },\r\n\r\n        handleOpenCSVDialog: props => () => {\r\n            const {dispatch, setOpenCSVDialog} = props\r\n            setOpenCSVDialog(true)\r\n\r\n            dispatch(currencyCSVFetchAction(props.filter))\r\n        },\r\n\r\n        handleCloseCSVDialog: props => () => {\r\n            const {setOpenCSVDialog} = props\r\n            setOpenCSVDialog(false)\r\n        },\r\n\r\n        handleOpenConfirmDialog: props => (id) => {\r\n            const {filter, location: {pathname}} = props\r\n            hashHistory.push({\r\n                pathname,\r\n                query: filter.getParams({[CURRENCY_DELETE_DIALOG_OPEN]: true, 'detailId': id})\r\n            })\r\n        },\r\n\r\n        handleCloseConfirmDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({\r\n                pathname,\r\n                query: filter.getParams({[CURRENCY_DELETE_DIALOG_OPEN]: false, 'detailId': MINUS_ONE})\r\n            })\r\n        },\r\n        handleSendConfirmDialog: props => () => {\r\n            const {dispatch, detailId, filter, location: {pathname}} = props\r\n            dispatch(currencyDeleteAction(_.toNumber(detailId)))\r\n                .catch(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({\r\n                        pathname,\r\n                        query: filter.getParams({[CURRENCY_DELETE_DIALOG_OPEN]: false, 'detailId': MINUS_ONE})\r\n                    })\r\n                    dispatch(currencyListFetchAction(filter))\r\n                })\r\n        },\r\n\r\n        handleOpenDeleteDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({\r\n                pathname,\r\n                query: filter.getParams({openDeleteDialog: 'yes'})\r\n            })\r\n        },\r\n\r\n        handleCloseDeleteDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({openDeleteDialog: false})})\r\n        },\r\n\r\n        handleOpenCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[CURRENCY_CREATE_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[CURRENCY_CREATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitCreateDialog: props => () => {\r\n            const {location: {pathname}, dispatch, createForm, filter} = props\r\n\r\n            return dispatch(currencyCreateAction(_.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[CURRENCY_CREATE_DIALOG_OPEN]: false})})\r\n                    dispatch(currencyListFetchAction(filter))\r\n                })\r\n        },\r\n\r\n        handleOpenUpdateDialog: props => (id) => {\r\n            const {dispatch, filter, location: {pathname}} = props\r\n            hashHistory.push({\r\n                pathname,\r\n                query: filter.getParams({[CURRENCY_UPDATE_DIALOG_OPEN]: true, 'detailId': id})\r\n            })\r\n            dispatch(currencyItemFetchAction(id))\r\n        },\r\n\r\n        handleCloseUpdateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({\r\n                pathname,\r\n                query: filter.getParams({[CURRENCY_UPDATE_DIALOG_OPEN]: false, 'detailId': MINUS_ONE})\r\n            })\r\n        },\r\n\r\n        handleSubmitUpdateDialog: props => () => {\r\n            const {dispatch, createForm, filter, detailId} = props\r\n\r\n            return dispatch(currencyUpdateAction(detailId, _.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(currencyItemFetchAction(detailId))\r\n                })\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push(filter.createURL({[CURRENCY_UPDATE_DIALOG_OPEN]: false}))\r\n                })\r\n        },\r\n\r\n        handleCurrencyClick: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({pathname: sprintf(ROUTER.CURRENCY_ITEM_PATH, _.toNumber(id)), query: filter.getParams()})\r\n        }\r\n    })\r\n)\r\n\r\nconst CurrencyList = enhance((props) => {\r\n    const {\r\n        location,\r\n        list,\r\n        listLoading,\r\n        detail,\r\n        detailLoading,\r\n        createLoading,\r\n        updateLoading,\r\n        filter,\r\n        layout,\r\n        params,\r\n        detailId,\r\n        detailFilter\r\n    } = props\r\n\r\n    const openCreateDialog = toBoolean(_.get(location, ['query', CURRENCY_CREATE_DIALOG_OPEN]))\r\n    const openUpdateDialog = toBoolean(_.get(location, ['query', CURRENCY_UPDATE_DIALOG_OPEN]))\r\n    const openConfirmDialog = toBoolean(_.get(location, ['query', CURRENCY_DELETE_DIALOG_OPEN]))\r\n\r\n    const currencyMiniId = _.get(_.nth(_.get(list, ['results']), ZERO), 'id')\r\n    const currencyDetailId = _.get(params, 'currencyId') ? _.toInteger(_.get(params, 'currencyId'))\r\n        : props.handleCurrencyClick(currencyMiniId)\r\n\r\n    const actionsDialog = {\r\n        handleActionEdit: props.handleActionEdit,\r\n        handleActionDelete: props.handleOpenDeleteDialog\r\n    }\r\n\r\n    const createDialog = {\r\n        initialValues: (() => {\r\n            return {}\r\n        })(),\r\n        createLoading,\r\n        openCreateDialog,\r\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\r\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\r\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\r\n    }\r\n\r\n    const confirmDialog = {\r\n        openConfirmDialog: openConfirmDialog,\r\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\r\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\r\n        handleSendConfirmDialog: props.handleSendConfirmDialog\r\n    }\r\n\r\n    const updateDialog = {\r\n        initialValues: (() => {\r\n            const currencyName = _.get(_.find((_.get(list, 'results')), {'id': detailId}), 'name')\r\n            const currencyRate = _.get(_.find((_.get(list, 'results')), {'id': detailId}), 'rate')\r\n            if (!currencyName || openCreateDialog) {\r\n                return {}\r\n            }\r\n            return {\r\n                name: currencyName,\r\n                rate: currencyRate\r\n            }\r\n        })(),\r\n        updateLoading: detailLoading || updateLoading,\r\n        openUpdateDialog,\r\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\r\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\r\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\r\n    }\r\n\r\n    const csvDialog = {\r\n        csvData: props.csvData,\r\n        csvLoading: props.csvLoading,\r\n        openCSVDialog: props.openCSVDialog,\r\n        handleOpenCSVDialog: props.handleOpenCSVDialog,\r\n        handleCloseCSVDialog: props.handleCloseCSVDialog\r\n    }\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading,\r\n        handleCurrencyClick: props.handleCurrencyClick\r\n    }\r\n\r\n    const detailData = {\r\n        id: currencyDetailId,\r\n        data: detail,\r\n        detailLoading\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <CurrencyGridList\r\n                filter={filter}\r\n                listData={listData}\r\n                detailData={detailData}\r\n                createDialog={createDialog}\r\n                confirmDialog={confirmDialog}\r\n                updateDialog={updateDialog}\r\n                actionsDialog={actionsDialog}\r\n                csvDialog={csvDialog}\r\n                detailId={detailId}\r\n                detailFilter={detailFilter}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default CurrencyList\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Currency/CurrencyList.js","import CurrencyList from './CurrencyList'\n\nexport {CurrencyList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Currency/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport {\r\n    EQUIPMENT_CREATE_DIALOG_OPEN,\r\n    EQUIPMENT_UPDATE_DIALOG_OPEN,\r\n    EQUIPMENT_DELETE_DIALOG_OPEN,\r\n    EquipmentGridList\r\n} from '../../components/Equipment'\r\nimport {\r\n    equipmentCreateAction,\r\n    equipmentUpdateAction,\r\n    equipmentListFetchAction,\r\n    equipmentDeleteAction,\r\n    equipmentItemFetchAction\r\n} from '../../actions/equipment'\r\nimport {openSnackbarAction} from '../../actions/snackbar'\r\n\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['equipment', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['equipment', 'item', 'loading'])\r\n        const createLoading = _.get(state, ['equipment', 'create', 'loading'])\r\n        const updateLoading = _.get(state, ['equipment', 'update', 'loading'])\r\n        const list = _.get(state, ['equipment', 'list', 'data'])\r\n        const listLoading = _.get(state, ['equipment', 'list', 'loading'])\r\n        const createForm = _.get(state, ['form', 'EquipmentCreateForm'])\r\n        const filter = filterHelper(list, pathname, query)\r\n\r\n        return {\r\n            list,\r\n            listLoading,\r\n            detail,\r\n            detailLoading,\r\n            createLoading,\r\n            updateLoading,\r\n            filter,\r\n            createForm\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(equipmentListFetchAction(filter))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const equipmentId = _.get(nextProps, ['params', 'equipmentId'])\r\n        return equipmentId && _.get(props, ['params', 'equipmentId']) !== equipmentId\r\n    }, ({dispatch, params}) => {\r\n        const equipmentId = _.toInteger(_.get(params, 'equipmentId'))\r\n        equipmentId && dispatch(equipmentItemFetchAction(equipmentId))\r\n    }),\r\n\r\n    withHandlers({\r\n        handleActionEdit: props => () => {\r\n            return null\r\n        },\r\n        handleOpenDeleteDialog: props => () => {\r\n            return null\r\n        },\r\n\r\n        handleOpenConfirmDialog: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.EQUIPMENT_ITEM_PATH, id),\r\n                query: filter.getParams({[EQUIPMENT_DELETE_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseConfirmDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[EQUIPMENT_DELETE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSendConfirmDialog: props => () => {\r\n            const {dispatch, detail, filter, location: {pathname}} = props\r\n            dispatch(equipmentDeleteAction(detail.id))\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[EQUIPMENT_DELETE_DIALOG_OPEN]: false})})\r\n                    dispatch(equipmentListFetchAction(filter))\r\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\r\n                })\r\n                .catch(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\r\n                })\r\n        },\r\n\r\n        handleOpenCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[EQUIPMENT_CREATE_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[EQUIPMENT_CREATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitCreateDialog: props => () => {\r\n            const {dispatch, createForm, filter, location: {pathname}} = props\r\n\r\n            return dispatch(equipmentCreateAction(_.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[EQUIPMENT_CREATE_DIALOG_OPEN]: false})})\r\n                    dispatch(equipmentListFetchAction(filter))\r\n                })\r\n        },\r\n\r\n        handleOpenUpdateDialog: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.EQUIPMENT_ITEM_PATH, id),\r\n                query: filter.getParams({[EQUIPMENT_UPDATE_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseUpdateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[EQUIPMENT_UPDATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitUpdateDialog: props => () => {\r\n            const {dispatch, createForm, filter} = props\r\n            const equipmentId = _.toInteger(_.get(props, ['params', 'equipmentId']))\r\n\r\n            return dispatch(equipmentUpdateAction(equipmentId, _.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(equipmentItemFetchAction(equipmentId))\r\n                })\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push(filter.createURL({[EQUIPMENT_UPDATE_DIALOG_OPEN]: false}))\r\n                    dispatch(equipmentListFetchAction(filter))\r\n                })\r\n        }\r\n    })\r\n)\r\n\r\nconst EquipmentList = enhance((props) => {\r\n    const {\r\n        location,\r\n        list,\r\n        listLoading,\r\n        detail,\r\n        detailLoading,\r\n        createLoading,\r\n        updateLoading,\r\n        filter,\r\n        layout,\r\n        params\r\n    } = props\r\n\r\n    const openCreateDialog = toBoolean(_.get(location, ['query', EQUIPMENT_CREATE_DIALOG_OPEN]))\r\n    const openUpdateDialog = toBoolean(_.get(location, ['query', EQUIPMENT_UPDATE_DIALOG_OPEN]))\r\n    const openConfirmDialog = toBoolean(_.get(location, ['query', EQUIPMENT_DELETE_DIALOG_OPEN]))\r\n\r\n    const detailId = _.toInteger(_.get(params, 'equipmentId'))\r\n\r\n    const actionsDialog = {\r\n        handleActionEdit: props.handleActionEdit,\r\n        handleActionDelete: props.handleOpenDeleteDialog\r\n    }\r\n\r\n    const createDialog = {\r\n        createLoading,\r\n        openCreateDialog,\r\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\r\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\r\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\r\n    }\r\n\r\n    const confirmDialog = {\r\n        confirmLoading: detailLoading,\r\n        openConfirmDialog: openConfirmDialog,\r\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\r\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\r\n        handleSendConfirmDialog: props.handleSendConfirmDialog\r\n    }\r\n\r\n    const updateDialog = {\r\n        initialValues: (() => {\r\n            if (!detail || openCreateDialog) {\r\n                return {}\r\n            }\r\n            return {\r\n                name: _.get(detail, 'name'),\r\n                manufacture: {\r\n                    value: _.get(detail, 'manufacture')\r\n                },\r\n                image: _.get(detail, 'image')\r\n            }\r\n        })(),\r\n        updateLoading: detailLoading || updateLoading,\r\n        openUpdateDialog,\r\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\r\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\r\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\r\n    }\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading\r\n    }\r\n\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        detailLoading\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <EquipmentGridList\r\n                filter={filter}\r\n                listData={listData}\r\n                detailData={detailData}\r\n                createDialog={createDialog}\r\n                confirmDialog={confirmDialog}\r\n                updateDialog={updateDialog}\r\n                actionsDialog={actionsDialog}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default EquipmentList\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Equipment/EquipmentList.js","import EquipmentList from './EquipmentList'\n\nexport {EquipmentList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Equipment/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport {\r\n    EXPENSIVE_CATEGORY_CREATE_DIALOG_OPEN,\r\n    EXPENSIVE_CATEGORY_UPDATE_DIALOG_OPEN,\r\n    EXPENSIVE_CATEGORY_DELETE_DIALOG_OPEN,\r\n    ExpensiveCategoryGridList\r\n} from '../../components/ExpensiveCategory'\r\nimport {\r\n    expensiveCategoryCreateAction,\r\n    expensiveCategoryUpdateAction,\r\n    expensiveCategoryListFetchAction,\r\n    expensiveCategoryDeleteAction,\r\n    expensiveCategoryItemFetchAction\r\n} from '../../actions/expensiveCategory'\r\nimport {openSnackbarAction} from '../../actions/snackbar'\r\n\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['expensiveCategory', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['expensiveCategory', 'item', 'loading'])\r\n        const createLoading = _.get(state, ['expensiveCategory', 'create', 'loading'])\r\n        const updateLoading = _.get(state, ['expensiveCategory', 'update', 'loading'])\r\n        const list = _.get(state, ['expensiveCategory', 'list', 'data'])\r\n        const listLoading = _.get(state, ['expensiveCategory', 'list', 'loading'])\r\n        const createForm = _.get(state, ['form', 'ExpensiveCategoryCreateForm'])\r\n        const filter = filterHelper(list, pathname, query)\r\n\r\n        return {\r\n            list,\r\n            listLoading,\r\n            detail,\r\n            detailLoading,\r\n            createLoading,\r\n            updateLoading,\r\n            filter,\r\n            createForm\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(expensiveCategoryListFetchAction(filter))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const expensiveCategoryId = _.get(nextProps, ['params', 'expensiveCategoryId'])\r\n        return expensiveCategoryId && _.get(props, ['params', 'expensiveCategoryId']) !== expensiveCategoryId\r\n    }, ({dispatch, params}) => {\r\n        const expensiveCategoryId = _.toInteger(_.get(params, 'expensiveCategoryId'))\r\n        expensiveCategoryId && dispatch(expensiveCategoryItemFetchAction(expensiveCategoryId))\r\n    }),\r\n\r\n    withHandlers({\r\n        handleActionEdit: props => () => {\r\n            return null\r\n        },\r\n\r\n        handleOpenConfirmDialog: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.EXPENSIVE_CATEGORY_ITEM_PATH, id),\r\n                query: filter.getParams({[EXPENSIVE_CATEGORY_DELETE_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseConfirmDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[EXPENSIVE_CATEGORY_DELETE_DIALOG_OPEN]: false})})\r\n        },\r\n        handleSendConfirmDialog: props => () => {\r\n            const {dispatch, detail, filter, location: {pathname}} = props\r\n            dispatch(expensiveCategoryDeleteAction(detail.id))\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[EXPENSIVE_CATEGORY_DELETE_DIALOG_OPEN]: false})})\r\n                    dispatch(expensiveCategoryListFetchAction(filter))\r\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\r\n                })\r\n                .catch(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\r\n                })\r\n        },\r\n\r\n        handleOpenDeleteDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({\r\n                pathname,\r\n                query: filter.getParams({openDeleteDialog: 'yes'})\r\n            })\r\n        },\r\n\r\n        handleCloseDeleteDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({openDeleteDialog: false})})\r\n        },\r\n\r\n        handleOpenCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[EXPENSIVE_CATEGORY_CREATE_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[EXPENSIVE_CATEGORY_CREATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitCreateDialog: props => () => {\r\n            const {dispatch, createForm, filter, location: {pathname}} = props\r\n\r\n            return dispatch(expensiveCategoryCreateAction(_.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[EXPENSIVE_CATEGORY_CREATE_DIALOG_OPEN]: false})})\r\n                    dispatch(expensiveCategoryListFetchAction(filter))\r\n                })\r\n        },\r\n\r\n        handleOpenUpdateDialog: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.EXPENSIVE_CATEGORY_ITEM_PATH, id),\r\n                query: filter.getParams({[EXPENSIVE_CATEGORY_UPDATE_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseUpdateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[EXPENSIVE_CATEGORY_UPDATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitUpdateDialog: props => () => {\r\n            const {dispatch, createForm, filter} = props\r\n            const expensiveCategoryId = _.toInteger(_.get(props, ['params', 'expensiveCategoryId']))\r\n\r\n            return dispatch(expensiveCategoryUpdateAction(expensiveCategoryId, _.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(expensiveCategoryItemFetchAction(expensiveCategoryId))\r\n                })\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push(filter.createURL({[EXPENSIVE_CATEGORY_UPDATE_DIALOG_OPEN]: false}))\r\n                })\r\n        }\r\n    })\r\n)\r\n\r\nconst ExpensiveCategoryList = enhance((props) => {\r\n    const {\r\n        location,\r\n        list,\r\n        listLoading,\r\n        detail,\r\n        detailLoading,\r\n        createLoading,\r\n        updateLoading,\r\n        filter,\r\n        layout,\r\n        params\r\n    } = props\r\n\r\n    const openCreateDialog = toBoolean(_.get(location, ['query', EXPENSIVE_CATEGORY_CREATE_DIALOG_OPEN]))\r\n    const openUpdateDialog = toBoolean(_.get(location, ['query', EXPENSIVE_CATEGORY_UPDATE_DIALOG_OPEN]))\r\n    const openConfirmDialog = toBoolean(_.get(location, ['query', EXPENSIVE_CATEGORY_DELETE_DIALOG_OPEN]))\r\n\r\n    const detailId = _.toInteger(_.get(params, 'expensiveCategoryId'))\r\n\r\n    const actionsDialog = {\r\n        handleActionEdit: props.handleActionEdit,\r\n        handleActionDelete: props.handleOpenDeleteDialog\r\n    }\r\n\r\n    const createDialog = {\r\n        createLoading,\r\n        openCreateDialog,\r\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\r\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\r\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\r\n    }\r\n\r\n    const confirmDialog = {\r\n        confirmLoading: detailLoading,\r\n        openConfirmDialog: openConfirmDialog,\r\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\r\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\r\n        handleSendConfirmDialog: props.handleSendConfirmDialog\r\n    }\r\n\r\n    const updateDialog = {\r\n        initialValues: (() => {\r\n            if (!detail || openCreateDialog) {\r\n                return {}\r\n            }\r\n            return {\r\n                name: _.get(detail, 'name')\r\n            }\r\n        })(),\r\n        updateLoading: detailLoading || updateLoading,\r\n        openUpdateDialog,\r\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\r\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\r\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\r\n    }\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading\r\n    }\r\n\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        detailLoading\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <ExpensiveCategoryGridList\r\n                filter={filter}\r\n                listData={listData}\r\n                detailData={detailData}\r\n                createDialog={createDialog}\r\n                confirmDialog={confirmDialog}\r\n                updateDialog={updateDialog}\r\n                actionsDialog={actionsDialog}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default ExpensiveCategoryList\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/ExpensiveCategory/ExpensiveCategoryList.js","import ExpensiveCategoryList from './ExpensiveCategoryList'\n\nexport {ExpensiveCategoryList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/ExpensiveCategory/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\r\nimport * as MANUFACTURE_TAB from '../../constants/manufactureTab'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport {\r\n    OPEN_USER_CREATE_DIALOG,\r\n    OPEN_USER_UPDATE_DIALOG,\r\n    MANUFACTURE_SHOW_BOM_DIALOG_OPEN,\r\n    MANUFACTURE_CREATE_PRODUCT_DIALOG_OPEN,\r\n    MANUFACTURE_ADD_PRODUCT_DIALOG_OPEN,\r\n    MANUFACTURE_EDIT_PRODUCT_DIALOG_OPEN,\r\n    OPEN_USER_CONFIRM_DIALOG,\r\n    OPEN_DELETE_PRODUCT_DIALOG,\r\n    OPEN_DELETE_MATERIALS_DIALOG,\r\n    MANUFACTURE_CHANGE,\r\n    TAB,\r\n    ManufactureGridList\r\n} from '../../components/Manufacture'\r\nimport {PRODUCT_FILTER_KEY, PRODUCT_FILTER_OPEN} from '../../components/Product'\r\nimport {PERSON_FILTER_KEY, PERSON_FILTER_OPEN} from '../../components/Manufacture/PersonFilterForm'\r\nimport {\r\n    manufactureListFetchAction\r\n} from '../../actions/manufacture'\r\nimport {\r\n    userShiftCreateAction,\r\n    userShiftListFetchAction,\r\n    userShiftUpdateAction,\r\n    userShiftDeleteAction\r\n} from '../../actions/userShift'\r\n\r\nimport {\r\n    productListFetchAction,\r\n    productItemFetchAction\r\n} from '../../actions/product'\r\nimport {\r\n    shipmentListFetchAction,\r\n    shipmentItemFetchAction\r\n} from '../../actions/shipment'\r\nimport {\r\n    manufactureProductCreateAction,\r\n    manufactureProductDeleteAction,\r\n    productChangeManufacture\r\n} from '../../actions/manufactureProduct'\r\nimport {\r\n    ingredientCreateAction,\r\n    ingredientUpdateAction,\r\n    ingredientListFetchAction,\r\n    ingredientDeleteAction\r\n} from '../../actions/ingredient'\r\nimport {equipmentListFetchAction} from '../../actions/equipment'\r\nimport {openSnackbarAction} from '../../actions/snackbar'\r\n\r\nconst MINUS_ONE = -1\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const selectProduct = _.get(state, ['product', 'item', 'data'])\r\n        const detail = _.get(state, ['manufacture', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['manufacture', 'item', 'loading'])\r\n        const createLoading = _.get(state, ['manufacture', 'create', 'loading'])\r\n        const updateLoading = _.get(state, ['manufacture', 'update', 'loading'])\r\n        const list = _.get(state, ['manufacture', 'list', 'data'])\r\n        const listLoading = _.get(state, ['manufacture', 'list', 'loading'])\r\n        const createForm = _.get(state, ['form', 'ManufactureCreateForm'])\r\n        const ingredientCreateForm = _.get(state, ['form', 'IngredientCreateForm'])\r\n        const filter = filterHelper(list, pathname, query)\r\n\r\n        const productList = _.get(state, ['product', 'list', 'data'])\r\n        const productDetail = _.get(state, ['ingredient', 'list', 'data'])\r\n        const productDetailLoading = _.get(state, ['ingredient', 'list', 'loading'])\r\n        const productListLoading = _.get(state, ['product', 'list', 'loading'])\r\n        const productAddForm = _.get(state, ['form', 'ProviderCreateForm'])\r\n        const changeForm = _.get(state, ['form', 'ChangeManufactureForm'])\r\n        const filterProduct = filterHelper(productList, pathname, query)\r\n        const filterProductForm = _.get(state, ['form', 'ProductFilterForm'])\r\n\r\n        const userShiftList = _.get(state, ['userShift', 'list', 'data'])\r\n        const userShiftLoading = _.get(state, ['userShift', 'list', 'loading'])\r\n        const filterUser = filterHelper(userShiftList, pathname, query)\r\n        const staffCreateForm = _.get(state, ['form', 'ManufactureCreateUserForm'])\r\n        const filterPersonForm = _.get(state, ['form', 'PersonFilterForm'])\r\n\r\n        const equipmentList = _.get(state, ['equipment', 'list', 'data'])\r\n        const equipmentListLoading = _.get(state, ['equipment', 'list', 'loading'])\r\n        const filterEquipment = filterHelper(equipmentList, pathname, query)\r\n\r\n        const shipmentList = _.get(state, ['shipment', 'list', 'data'])\r\n        const shipmentListLoading = _.get(state, ['shipment', 'list', 'loading'])\r\n        const shipmentDetail = _.get(state, ['shipment', 'item', 'data'])\r\n        const shipmentDetailLoading = _.get(state, ['shipment', 'item', 'loading'])\r\n        const filterShipment = filterHelper(shipmentList, pathname, query)\r\n\r\n        return {\r\n            list,\r\n            listLoading,\r\n            detail,\r\n            detailLoading,\r\n            createLoading,\r\n            updateLoading,\r\n            filter,\r\n            createForm,\r\n            selectProduct,\r\n\r\n            productList,\r\n            productDetail,\r\n            productListLoading,\r\n            productDetailLoading,\r\n            productAddForm,\r\n            ingredientCreateForm,\r\n            changeForm,\r\n            filterProduct,\r\n            filterProductForm,\r\n\r\n            staffCreateForm,\r\n            userShiftList,\r\n            userShiftLoading,\r\n            filterUser,\r\n            filterPersonForm,\r\n\r\n            equipmentList,\r\n            equipmentListLoading,\r\n            filterEquipment,\r\n\r\n            shipmentList,\r\n            shipmentListLoading,\r\n            shipmentDetail,\r\n            shipmentDetailLoading,\r\n            filterShipment\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return !nextProps.listLoading && _.isNil(nextProps.list)\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(manufactureListFetchAction(filter))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const manufactureId = _.get(nextProps, ['params', 'manufactureId'])\r\n        const tab = _.get(props, ['location', 'query', 'tab'])\r\n        const nextTab = _.get(nextProps, ['location', 'query', 'tab'])\r\n        const productId = _.get(props, ['location', 'query', 'productId'])\r\n        const nextProductId = _.get(nextProps, ['location', 'query', 'productId'])\r\n        return (manufactureId && _.get(props, ['params', 'manufactureId']) !== manufactureId) ||\r\n            ((tab !== nextTab) ||\r\n            (productId !== nextProductId) ||\r\n            (props.filterProduct.filterRequest() !== nextProps.filterProduct.filterRequest()) ||\r\n            (props.filterUser.filterRequest() !== nextProps.filterUser.filterRequest()))\r\n    }, ({dispatch, location, params, filterProduct, filterUser, filterEquipment, filterShipment}) => {\r\n        const nextTab = _.get(location, ['query', 'tab']) || 'product'\r\n        const manufactureId = _.get(params, 'manufactureId')\r\n        if (nextTab === 'product') {\r\n            dispatch(productListFetchAction(filterProduct, manufactureId))\r\n            if (_.get(location, ['query', 'productId'])) {\r\n                const productId = _.toInteger(_.get(location, ['query', 'productId']))\r\n                dispatch(productItemFetchAction(productId))\r\n                dispatch(ingredientListFetchAction(productId))\r\n            }\r\n        } else if (nextTab === 'person') {\r\n            dispatch(userShiftListFetchAction(filterUser, manufactureId))\r\n        } else if (nextTab === 'equipment') {\r\n            dispatch(equipmentListFetchAction(filterEquipment, manufactureId))\r\n        } else if (nextTab === 'shipment') {\r\n            if (_.get(location, ['query', 'shipmentId'])) {\r\n                const shipmentId = _.toInteger(_.get(location, ['query', 'shipmentId']))\r\n                dispatch(shipmentItemFetchAction(shipmentId))\r\n            }\r\n            dispatch(shipmentListFetchAction(filterShipment, manufactureId))\r\n        }\r\n    }),\r\n\r\n    // Product withHandlers\r\n    withHandlers({\r\n        handleOpenProductFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_FILTER_OPEN]: true})})\r\n        },\r\n        handleCloseProductFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_FILTER_OPEN]: false})})\r\n        },\r\n        handleClearProductFilterDialog: props => () => {\r\n            const {location: {pathname}} = props\r\n            hashHistory.push({pathname, query: {}})\r\n        },\r\n        handleSubmitProductFilterDialog: props => () => {\r\n            const {filterProduct, filterProductForm} = props\r\n            const type = _.get(filterProductForm, ['values', 'type', 'value']) || null\r\n            const measurement = _.get(filterProductForm, ['values', 'measurement', 'value']) || null\r\n            const brand = _.get(filterProductForm, ['values', 'brand', 'value']) || null\r\n\r\n            filterProduct.filterBy({\r\n                [PRODUCT_FILTER_OPEN]: false,\r\n                [PRODUCT_FILTER_KEY.TYPE]: type,\r\n                [PRODUCT_FILTER_KEY.MEASUREMENT]: measurement,\r\n                [PRODUCT_FILTER_KEY.BRAND]: brand\r\n            })\r\n        },\r\n\r\n        handleOpenAddProductDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[MANUFACTURE_ADD_PRODUCT_DIALOG_OPEN]: true})})\r\n        },\r\n        handleCloseAddProductDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[MANUFACTURE_ADD_PRODUCT_DIALOG_OPEN]: false})})\r\n        },\r\n        handleSubmitAddProductDialog: props => () => {\r\n            const {dispatch, productAddForm, filterProduct, location: {pathname}, params} = props\r\n            const manufactureId = _.toInteger(_.get(params, 'manufactureId'))\r\n\r\n            return dispatch(manufactureProductCreateAction(_.get(productAddForm, ['values']), manufactureId))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({\r\n                        pathname,\r\n                        query: filterProduct.getParams({[MANUFACTURE_ADD_PRODUCT_DIALOG_OPEN]: false})\r\n                    })\r\n                    return dispatch(productListFetchAction(filterProduct, manufactureId))\r\n                })\r\n        },\r\n\r\n        handleOpenProductConfirmDialog: props => (id) => {\r\n            const {filter, location: {pathname}} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[OPEN_DELETE_PRODUCT_DIALOG]: true, 'productId': id})})\r\n        },\r\n        handleCloseProductConfirmDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({\r\n                pathname,\r\n                query: filter.getParams({[OPEN_DELETE_PRODUCT_DIALOG]: false})\r\n            })\r\n            console.log('exrdctfvgybhnjmk,fhkjsdh')\r\n        },\r\n        handleSendProductConfirmDialog: props => () => {\r\n            const {dispatch, filterProduct, location: {pathname}, params} = props\r\n            const productId = _.get(props, ['location', 'query', 'productId'])\r\n            const manufactureId = _.toInteger(_.get(params, 'manufactureId'))\r\n            dispatch(manufactureProductDeleteAction(_.toInteger(productId)))\r\n                .catch(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({\r\n                        pathname,\r\n                        query: filterProduct.getParams({[OPEN_DELETE_PRODUCT_DIALOG]: false, 'productId': MINUS_ONE})\r\n                    })\r\n                    dispatch(openSnackbarAction({message: 'Успешно удалено'}))\r\n                    return dispatch(productListFetchAction(filterProduct, manufactureId))\r\n                })\r\n        },\r\n\r\n        handleOpenChangeManufacture: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[MANUFACTURE_CHANGE]: true})})\r\n        },\r\n        handleCloseChangeManufacture: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[MANUFACTURE_CHANGE]: false})})\r\n        },\r\n        handleSubmitChangeManufacture: props => () => {\r\n            const {dispatch, filterProduct, location: {pathname}, params, changeForm} = props\r\n            const manufactureId = _.toNumber(_.get(params, 'manufactureId'))\r\n            const productId = _.toNumber(_.get(props, ['location', 'query', 'productId']))\r\n\r\n            dispatch(productChangeManufacture(productId, _.get(changeForm, ['values'])))\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filterProduct.getParams({[MANUFACTURE_CHANGE]: false})})\r\n                    dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                    return dispatch(productListFetchAction(filterProduct, manufactureId))\r\n                })\r\n        },\r\n\r\n        handleCloseDetail: props => () => {\r\n            const {filter, location: {pathname}} = props\r\n            hashHistory.push({pathname, query: filter.getParam({'productId': MINUS_ONE})})\r\n        }\r\n    }),\r\n    // Ingredient withHandlers\r\n    withHandlers({\r\n        handleOpenCreateMaterials: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[MANUFACTURE_CREATE_PRODUCT_DIALOG_OPEN]: true})})\r\n        },\r\n        handleCloseCreateMaterials: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[MANUFACTURE_CREATE_PRODUCT_DIALOG_OPEN]: false})})\r\n        },\r\n        handleSubmitCreateMaterials: props => () => {\r\n            const {dispatch, ingredientCreateForm, filter, location: {pathname}} = props\r\n            const productId = _.toNumber(_.get(props, ['location', 'query', 'productId']))\r\n            return dispatch(ingredientCreateAction(_.get(ingredientCreateForm, ['values']), productId))\r\n                .then(() => {\r\n                    hashHistory.push({\r\n                        pathname,\r\n                        query: filter.getParams({[MANUFACTURE_CREATE_PRODUCT_DIALOG_OPEN]: false})\r\n                    })\r\n                    dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                    return dispatch(ingredientListFetchAction(productId))\r\n                })\r\n        },\r\n\r\n        handleOpenEditMaterials: props => (id) => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({\r\n                pathname,\r\n                query: filter.getParams({[MANUFACTURE_EDIT_PRODUCT_DIALOG_OPEN]: true, 'ingId': id})\r\n            })\r\n        },\r\n        handleCloseEditMaterials: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({\r\n                pathname,\r\n                query: filter.getParams({[MANUFACTURE_EDIT_PRODUCT_DIALOG_OPEN]: false, 'ingId': MINUS_ONE})\r\n            })\r\n        },\r\n        handleSubmitEditMaterials: props => () => {\r\n            const {dispatch, ingredientCreateForm, filter, location: {pathname}} = props\r\n            const productId = _.toNumber(_.get(props, ['location', 'query', 'productId']))\r\n            const ingredientId = _.toNumber(_.get(props, ['location', 'query', 'ingId']))\r\n            return dispatch(ingredientUpdateAction(_.get(ingredientCreateForm, ['values']), _.toNumber(ingredientId), productId))\r\n                .then(() => {\r\n                    hashHistory.push({\r\n                        pathname,\r\n                        query: filter.getParams({[MANUFACTURE_EDIT_PRODUCT_DIALOG_OPEN]: false, 'ingId': MINUS_ONE})\r\n                    })\r\n                    dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                    return dispatch(ingredientListFetchAction(productId))\r\n                })\r\n        },\r\n\r\n        handleOpenMaterialsConfirmDialog: props => (id) => {\r\n            const {filter, location: {pathname}} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[OPEN_DELETE_MATERIALS_DIALOG]: true, 'ingId': id})})\r\n        },\r\n        handleCloseMaterialsConfirmDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({\r\n                pathname,\r\n                query: filter.getParams({[OPEN_DELETE_MATERIALS_DIALOG]: false, 'ingId': MINUS_ONE})\r\n            })\r\n        },\r\n        handleSendMaterialsConfirmDialog: props => () => {\r\n            const {dispatch, filter, location: {pathname}} = props\r\n            const ingId = _.toNumber(_.get(props, ['location', 'query', 'ingId']))\r\n            const productId = _.toNumber(_.get(props, ['location', 'query', 'productId']))\r\n            dispatch(ingredientDeleteAction(_.toNumber(ingId)))\r\n                .catch(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({\r\n                        pathname,\r\n                        query: filter.getParams({[OPEN_DELETE_MATERIALS_DIALOG]: false, 'ingId': MINUS_ONE})\r\n                    })\r\n                    dispatch(openSnackbarAction({message: 'Успешно удалено'}))\r\n                    return dispatch(ingredientListFetchAction(productId))\r\n                })\r\n        }\r\n    }),\r\n    // Person withHandlers\r\n    withHandlers({\r\n        handleOpenPersonFilterDialog: props => () => {\r\n            const {location: {pathname}, filterUser} = props\r\n            hashHistory.push({pathname, query: filterUser.getParams({[PERSON_FILTER_OPEN]: true})})\r\n        },\r\n        handleClosePersonFilterDialog: props => () => {\r\n            const {location: {pathname}, filterUser} = props\r\n            hashHistory.push({pathname, query: filterUser.getParams({[PERSON_FILTER_OPEN]: false})})\r\n        },\r\n        handleClearPersonFilterDialog: props => () => {\r\n            const {location: {pathname}} = props\r\n            hashHistory.push({pathname, query: {}})\r\n        },\r\n        handleSubmitPersonFilterDialog: props => () => {\r\n            const {filterUser, filterPersonForm} = props\r\n            const shift = _.get(filterPersonForm, ['values', 'shift', 'value']) || null\r\n            filterUser.filterBy({\r\n                [PRODUCT_FILTER_OPEN]: false,\r\n                [PRODUCT_FILTER_KEY.SHIFT]: shift\r\n            })\r\n        },\r\n\r\n        handleOpenUserCreateDialog: props => () => {\r\n            const {location: {pathname}, filterUser} = props\r\n            hashHistory.push({pathname, query: filterUser.getParams({[OPEN_USER_CREATE_DIALOG]: true})})\r\n        },\r\n        handleCloseUserCreateDialog: props => () => {\r\n            const {location: {pathname}, filterUser} = props\r\n            hashHistory.push({pathname, query: filterUser.getParams({[OPEN_USER_CREATE_DIALOG]: false})})\r\n        },\r\n        handleSubmitUserCreateDialog: props => () => {\r\n            const {dispatch, staffCreateForm, filterUser, location: {pathname}, params} = props\r\n            const manufactureId = _.get(params, 'manufactureId')\r\n            return dispatch(userShiftCreateAction(_.get(staffCreateForm, ['values']), manufactureId))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filterUser.getParams({[OPEN_USER_CREATE_DIALOG]: false})})\r\n                    dispatch(userShiftListFetchAction(filterUser, manufactureId))\r\n                })\r\n        },\r\n\r\n        handleOpenUserUpdateDialog: props => (id) => {\r\n            const {filterUser, location: {pathname}} = props\r\n            hashHistory.push({pathname, query: filterUser.getParams({[OPEN_USER_UPDATE_DIALOG]: true, 'personId': id})})\r\n        },\r\n        handleCloseUserUpdateDialog: props => () => {\r\n            const {location: {pathname}, filterUser} = props\r\n            hashHistory.push({pathname, query: filterUser.getParams({[OPEN_USER_UPDATE_DIALOG]: false, 'personId': -1})})\r\n        },\r\n        handleSubmitUserUpdateDialog: props => () => {\r\n            const {dispatch, staffCreateForm, filterUser, params} = props\r\n            const manufactureId = _.get(params, 'manufactureId')\r\n            const personId = _.toNumber(_.get(props, ['location', 'query', 'personId']))\r\n            return dispatch(userShiftUpdateAction(personId, _.get(staffCreateForm, ['values']), manufactureId))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push(filterUser.createURL({[OPEN_USER_UPDATE_DIALOG]: false, 'personId': -1}))\r\n                    dispatch(userShiftListFetchAction(filterUser, manufactureId))\r\n                })\r\n        },\r\n\r\n        handleOpenUserConfirmDialog: props => (id) => {\r\n            const {filterUser, location: {pathname}} = props\r\n            hashHistory.push({pathname, query: filterUser.getParams({[OPEN_USER_CONFIRM_DIALOG]: true, 'personId': id})})\r\n        },\r\n        handleCloseUserConfirmDialog: props => () => {\r\n            const {location: {pathname}, filterUser} = props\r\n            hashHistory.push({pathname, query: filterUser.getParams({[OPEN_USER_CONFIRM_DIALOG]: false, 'personId': -1})})\r\n        },\r\n        handleSendUserConfirmDialog: props => () => {\r\n            const {dispatch, filterUser, location: {pathname}, params} = props\r\n            const personId = _.toNumber(_.get(props, ['location', 'query', 'personId']) || '-1')\r\n            const manufactureId = _.toNumber(_.get(params, 'manufactureId'))\r\n            dispatch(userShiftDeleteAction(_.toInteger(personId)))\r\n                .catch(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({\r\n                        pathname,\r\n                        query: filterUser.getParams({[OPEN_USER_CONFIRM_DIALOG]: false, 'personId': -1})\r\n                    })\r\n                    dispatch(openSnackbarAction({message: 'Успешно удалено'}))\r\n                    return dispatch(userShiftListFetchAction(filterUser, manufactureId))\r\n                })\r\n        }\r\n    }),\r\n    // Shipment withHeader\r\n    withHandlers({\r\n        handleShipmentClick: props => (id) => {\r\n            const {filterShipment, location: {pathname}, dispatch} = props\r\n            hashHistory.push({\r\n                pathname,\r\n                query: filterShipment.getParams({'shipmentId': id})\r\n            })\r\n            dispatch(shipmentItemFetchAction(id))\r\n        }\r\n    }),\r\n    // List withHandlers\r\n    withHandlers({\r\n        handleActionEdit: props => () => {\r\n            return null\r\n        },\r\n\r\n        handleOpenShowBom: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[MANUFACTURE_SHOW_BOM_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseShowBom: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[MANUFACTURE_SHOW_BOM_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleClickItem: props => (id) => {\r\n            const tab = _.get(props, ['location', 'query', 'tab'])\r\n            hashHistory.push({pathname: sprintf(ROUTER.MANUFACTURE_ITEM_PATH, id), query: {'tab': tab}})\r\n        },\r\n        handleTabChange: props => (tab) => {\r\n            const {location: {pathname}} = props\r\n            hashHistory.push({\r\n                pathname: pathname,\r\n                query: {[TAB]: tab}\r\n            })\r\n        },\r\n        handleItemClick: props => (id) => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({'productId': id})})\r\n        }\r\n    })\r\n)\r\n\r\nconst ManufactureList = enhance((props) => {\r\n    const {\r\n        list,\r\n        equipmentList,\r\n        equipmentListLoading,\r\n        listLoading,\r\n        location,\r\n        detail,\r\n        detailLoading,\r\n        layout,\r\n        filterEquipment,\r\n        params,\r\n\r\n        productList,\r\n        productListLoading,\r\n        productDetail,\r\n        productDetailLoading,\r\n        filterProduct,\r\n\r\n        userShiftList,\r\n        userShiftLoading,\r\n        filterUser,\r\n\r\n        shipmentList,\r\n        shipmentListLoading,\r\n        shipmentDetail,\r\n        shipmentDetailLoading,\r\n        filterShipment\r\n    } = props\r\n\r\n    const openShowBom = toBoolean(_.get(location, ['query', MANUFACTURE_SHOW_BOM_DIALOG_OPEN]))\r\n    const openEditMaterials = toBoolean(_.get(location, ['query', MANUFACTURE_EDIT_PRODUCT_DIALOG_OPEN]))\r\n    const openCreateMaterials = toBoolean(_.get(location, ['query', MANUFACTURE_CREATE_PRODUCT_DIALOG_OPEN]))\r\n    const type = _.toInteger(filterProduct.getParam(PRODUCT_FILTER_KEY.TYPE))\r\n    const shift = _.toInteger(filterProduct.getParam(PERSON_FILTER_KEY.SHIFT))\r\n    const brand = _.toInteger(filterProduct.getParam(PRODUCT_FILTER_KEY.BRAND))\r\n    const openDeleteMaterialsDialog = toBoolean(_.get(location, ['query', OPEN_DELETE_MATERIALS_DIALOG]))\r\n    const tab = _.get(location, ['query', TAB]) || MANUFACTURE_TAB.MANUFACTURE_DEFAULT_TAB\r\n\r\n    const openAddProductDialog = toBoolean(_.get(location, ['query', MANUFACTURE_ADD_PRODUCT_DIALOG_OPEN]))\r\n    const openProductConfirmDialog = toBoolean(_.get(location, ['query', OPEN_DELETE_PRODUCT_DIALOG]))\r\n    const openProductFilterDialog = toBoolean(_.get(location, ['query', PRODUCT_FILTER_OPEN]))\r\n    const openPersonFilterDialog = toBoolean(_.get(location, ['query', PERSON_FILTER_OPEN]))\r\n    const openManufactureChangeDialog = toBoolean(_.get(location, ['query', MANUFACTURE_CHANGE]))\r\n    const productId = _.get(props, ['location', 'query', 'productId']) || MINUS_ONE\r\n\r\n    const openCreateUser = toBoolean(_.get(location, ['query', OPEN_USER_CREATE_DIALOG]))\r\n    const openUpdateUserDialog = toBoolean(_.get(location, ['query', OPEN_USER_UPDATE_DIALOG]))\r\n    const openUserConfirmDialog = toBoolean(_.get(location, ['query', OPEN_USER_CONFIRM_DIALOG]))\r\n\r\n    const personId = _.get(props, ['location', 'query', 'personId']) || MINUS_ONE\r\n    const ingredientId = _.get(props, ['location', 'query', 'ingId']) || MINUS_ONE\r\n    const shipmentId = _.toNumber(_.get(props, ['location', 'query', 'shipmentId']) || MINUS_ONE)\r\n\r\n    const detailId = _.toInteger(_.get(params, 'manufactureId'))\r\n\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        detailLoading,\r\n        handleCloseDetail: props.handleCloseDetail\r\n    }\r\n\r\n    const showBom = {\r\n        open: openShowBom,\r\n        handleOpen: props.handleOpenShowBom,\r\n        handleClose: props.handleCloseShowBom,\r\n        handleLoading: props.handleCloseShowBom\r\n    }\r\n    const addProductDialog = {\r\n        open: openAddProductDialog,\r\n        productList: _.get(productList, 'results'),\r\n        productListLoading,\r\n        handleOpenCreateDialog: props.handleOpenAddProductDialog,\r\n        handleCloseCreateDialog: props.handleCloseAddProductDialog,\r\n        handleSubmitCreateDialog: props.handleSubmitAddProductDialog\r\n    }\r\n    const createMaterials = {\r\n        open: openCreateMaterials,\r\n        handleOpen: props.handleOpenCreateMaterials,\r\n        handleClose: props.handleCloseCreateMaterials,\r\n        handleSubmit: props.handleSubmitCreateMaterials\r\n    }\r\n\r\n    const selectProduct = _.find(_.get(productDetail, 'ingredient'), {'id': _.toInteger(ingredientId)})\r\n    const editMaterials = {\r\n        initialValues: {\r\n            ingredient: {\r\n                value: _.get(selectProduct, ['ingredient', 'id'])\r\n            },\r\n            amount: _.get(selectProduct, 'amount')\r\n        },\r\n        measurement: _.get(selectProduct, ['ingredient', 'measurement', 'name']),\r\n        open: openEditMaterials,\r\n        handleOpen: props.handleOpenEditMaterials,\r\n        handleClose: props.handleCloseEditMaterials,\r\n        handleSubmit: props.handleSubmitEditMaterials\r\n    }\r\n\r\n    const deleteMaterials = {\r\n        name: _.get(selectProduct, ['ingredient', 'name']),\r\n        open: openDeleteMaterialsDialog,\r\n        handleOpenConfirmDialog: props.handleOpenMaterialsConfirmDialog,\r\n        handleCloseConfirmDialog: props.handleCloseMaterialsConfirmDialog,\r\n        handleSendConfirmDialog: props.handleSendMaterialsConfirmDialog\r\n    }\r\n\r\n    const equipmentData = {\r\n        filter: filterEquipment,\r\n        listLoading: equipmentListLoading,\r\n        equipmentList: _.get(equipmentList, 'results')\r\n    }\r\n\r\n    const shipmentDetailData = {\r\n        id: shipmentId,\r\n        data: shipmentDetail,\r\n        loading: shipmentDetailLoading\r\n    }\r\n    const shipmentData = {\r\n        filter: filterShipment,\r\n        listLoading: shipmentListLoading,\r\n        shipmentList: _.get(shipmentList, 'results'),\r\n        detailData: shipmentDetailData,\r\n        handleShipmentClick: props.handleShipmentClick\r\n    }\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading,\r\n        handleClickItem: props.handleClickItem\r\n    }\r\n\r\n    const tabData = {\r\n        filter: filterProduct,\r\n        tab,\r\n        handleTabChange: props.handleTabChange\r\n    }\r\n\r\n    const productFilterDialog = {\r\n        initialValues: {\r\n            type: {\r\n                value: type\r\n            },\r\n            brand: {\r\n                value: brand\r\n            }\r\n        },\r\n        filterLoading: false,\r\n        openFilterDialog: openProductFilterDialog,\r\n        handleOpenFilterDialog: props.handleOpenProductFilterDialog,\r\n        handleCloseFilterDialog: props.handleCloseProductFilterDialog,\r\n        handleClearFilterDialog: props.handleClearProductFilterDialog,\r\n        handleSubmitFilterDialog: props.handleSubmitProductFilterDialog\r\n    }\r\n    const deleteProductDialog = {\r\n        openConfirmDialog: openProductConfirmDialog,\r\n        handleOpenConfirmDialog: props.handleOpenProductConfirmDialog,\r\n        handleCloseConfirmDialog: props.handleCloseProductConfirmDialog,\r\n        handleSendConfirmDialog: props.handleSendProductConfirmDialog\r\n    }\r\n\r\n    const productDetailData = {\r\n        id: productId,\r\n        data: productDetail,\r\n        detailLoading: productDetailLoading\r\n    }\r\n\r\n    const changeManufacture = {\r\n        open: openManufactureChangeDialog,\r\n        handleOpenChangeManufacture: props.handleOpenChangeManufacture,\r\n        handleCloseChangeManufacture: props.handleCloseChangeManufacture,\r\n        handleSubmitChangeManufacture: props.handleSubmitChangeManufacture\r\n    }\r\n\r\n    const productData = {\r\n        productList: _.get(productList, 'results'),\r\n        listLoading: productListLoading,\r\n        detailData: productDetailData,\r\n        createDialog: addProductDialog,\r\n        filterDialog: productFilterDialog,\r\n        confirmDialog: deleteProductDialog,\r\n        handleItemClick: props.handleItemClick,\r\n        changeManufacture: changeManufacture\r\n    }\r\n\r\n    const personFilterDialog = {\r\n        initialValues: {\r\n            shift: {\r\n                value: shift\r\n            }\r\n        },\r\n        filterLoading: false,\r\n        openFilterDialog: openPersonFilterDialog,\r\n        handleOpenFilterDialog: props.handleOpenPersonFilterDialog,\r\n        handleCloseFilterDialog: props.handleClosePersonFilterDialog,\r\n        handleClearFilterDialog: props.handleClearPersonFilterDialog,\r\n        handleSubmitFilterDialog: props.handleSubmitPersonFilterDialog\r\n    }\r\n\r\n    const addUser = {\r\n        open: openCreateUser,\r\n        handleOpenDialog: props.handleOpenUserCreateDialog,\r\n        handleCloseDialog: props.handleCloseUserCreateDialog,\r\n        handleSubmitDialog: props.handleSubmitUserCreateDialog\r\n    }\r\n    const userShiftItem = _.find(_.get(userShiftList, 'results'), (o) => {\r\n        return o.id === _.toInteger(personId)\r\n    })\r\n\r\n    const updateUser = {\r\n        initialValues: (() => {\r\n            if (!userShiftItem || openCreateUser) {\r\n                return {}\r\n            }\r\n            return {\r\n                user: {\r\n                    value: _.get(userShiftItem, ['user', 'id'])\r\n                },\r\n                shift: {\r\n                    value: _.get(userShiftItem, 'shift')\r\n                }\r\n            }\r\n        })(),\r\n        open: openUpdateUserDialog,\r\n        handleOpenUpdateDialog: props.handleOpenUserUpdateDialog,\r\n        handleCloseUpdateDialog: props.handleCloseUserUpdateDialog,\r\n        handleSubmitUpdateDialog: props.handleSubmitUserUpdateDialog\r\n    }\r\n    const confirmUser = {\r\n        open: openUserConfirmDialog,\r\n        handleOpenConfirmDialog: props.handleOpenUserConfirmDialog,\r\n        handleCloseConfirmDialog: props.handleCloseUserConfirmDialog,\r\n        handleSendConfirmDialog: props.handleSendUserConfirmDialog\r\n    }\r\n\r\n    const personData = {\r\n        userShiftItem,\r\n        list: userShiftList,\r\n        listLoading: userShiftLoading,\r\n        filter: filterUser,\r\n        filterDialog: personFilterDialog,\r\n        createDialog: addUser,\r\n        updateDialog: updateUser,\r\n        confirmDialog: confirmUser\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <ManufactureGridList\r\n                createMaterials={createMaterials}\r\n                editMaterials={editMaterials}\r\n                deleteMaterials={deleteMaterials}\r\n                detailData={detailData}\r\n                listData={listData}\r\n                equipmentData={equipmentData}\r\n                showBom={showBom}\r\n                productData={productData}\r\n                tabData={tabData}\r\n                productFilterDialog={productFilterDialog}\r\n                personData={personData}\r\n                shipmentData={shipmentData}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default ManufactureList\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Manufacture/ManufactureList.js","import ManufactureList from './ManufactureList'\n\nexport {ManufactureList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Manufacture/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport {\r\n    MARKET_TYPE_CREATE_DIALOG_OPEN,\r\n    MARKET_TYPE_UPDATE_DIALOG_OPEN,\r\n    MARKET_TYPE_DELETE_DIALOG_OPEN,\r\n    MarketTypeGridList\r\n} from '../../components/MarketType'\r\nimport {\r\n    marketTypeCreateAction,\r\n    marketTypeUpdateAction,\r\n    marketTypeListFetchAction,\r\n    marketTypeDeleteAction,\r\n    marketTypeItemFetchAction\r\n} from '../../actions/marketType'\r\nimport {openSnackbarAction} from '../../actions/snackbar'\r\n\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['marketType', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['marketType', 'item', 'loading'])\r\n        const createLoading = _.get(state, ['marketType', 'create', 'loading'])\r\n        const updateLoading = _.get(state, ['marketType', 'update', 'loading'])\r\n        const list = _.get(state, ['marketType', 'list', 'data'])\r\n        const listLoading = _.get(state, ['marketType', 'list', 'loading'])\r\n        const createForm = _.get(state, ['form', 'MarketTypeCreateForm'])\r\n        const filter = filterHelper(list, pathname, query)\r\n\r\n        return {\r\n            list,\r\n            listLoading,\r\n            detail,\r\n            detailLoading,\r\n            createLoading,\r\n            updateLoading,\r\n            filter,\r\n            createForm\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(marketTypeListFetchAction(filter))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const marketTypeId = _.get(nextProps, ['params', 'marketTypeId'])\r\n\r\n        return marketTypeId && _.get(props, ['params', 'marketTypeId']) !== marketTypeId\r\n    }, ({dispatch, params}) => {\r\n        const marketTypeId = _.toInteger(_.get(params, 'marketTypeId'))\r\n        marketTypeId && dispatch(marketTypeItemFetchAction(marketTypeId))\r\n    }),\r\n\r\n    withHandlers({\r\n        handleActionEdit: props => () => {\r\n            return null\r\n        },\r\n\r\n        handleOpenDeleteDialog: props => () => {\r\n            return null\r\n        },\r\n\r\n        handleOpenConfirmDialog: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.MARKET_TYPE_ITEM_PATH, id),\r\n                query: filter.getParams({[MARKET_TYPE_DELETE_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseConfirmDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[MARKET_TYPE_DELETE_DIALOG_OPEN]: false})})\r\n        },\r\n        handleSendConfirmDialog: props => () => {\r\n            const {dispatch, detail, filter, location: {pathname}} = props\r\n            dispatch(marketTypeDeleteAction(detail.id))\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[MARKET_TYPE_DELETE_DIALOG_OPEN]: false})})\r\n                    dispatch(marketTypeListFetchAction(filter))\r\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\r\n                })\r\n                .catch(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\r\n                })\r\n        },\r\n\r\n        handleOpenCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[MARKET_TYPE_CREATE_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[MARKET_TYPE_CREATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitCreateDialog: props => () => {\r\n            const {dispatch, createForm, filter, location: {pathname}} = props\r\n\r\n            return dispatch(marketTypeCreateAction(_.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[MARKET_TYPE_CREATE_DIALOG_OPEN]: false})})\r\n                    dispatch(marketTypeListFetchAction(filter))\r\n                })\r\n        },\r\n\r\n        handleOpenUpdateDialog: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.MARKET_TYPE_ITEM_PATH, id),\r\n                query: filter.getParams({[MARKET_TYPE_UPDATE_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseUpdateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[MARKET_TYPE_UPDATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitUpdateDialog: props => () => {\r\n            const {dispatch, createForm, filter} = props\r\n            const marketTypeId = _.toInteger(_.get(props, ['params', 'marketTypeId']))\r\n\r\n            return dispatch(marketTypeUpdateAction(marketTypeId, _.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(marketTypeItemFetchAction(marketTypeId))\r\n                })\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push(filter.createURL({[MARKET_TYPE_UPDATE_DIALOG_OPEN]: false}))\r\n                    dispatch(marketTypeListFetchAction(filter))\r\n                })\r\n        }\r\n    })\r\n)\r\n\r\nconst MarketTypeList = enhance((props) => {\r\n    const {\r\n        location,\r\n        list,\r\n        listLoading,\r\n        detail,\r\n        detailLoading,\r\n        createLoading,\r\n        updateLoading,\r\n        filter,\r\n        layout,\r\n        params\r\n    } = props\r\n\r\n    const openCreateDialog = toBoolean(_.get(location, ['query', MARKET_TYPE_CREATE_DIALOG_OPEN]))\r\n    const openUpdateDialog = toBoolean(_.get(location, ['query', MARKET_TYPE_UPDATE_DIALOG_OPEN]))\r\n    const openConfirmDialog = toBoolean(_.get(location, ['query', MARKET_TYPE_DELETE_DIALOG_OPEN]))\r\n\r\n    const detailId = _.toInteger(_.get(params, 'marketTypeId'))\r\n\r\n    const actionsDialog = {\r\n        handleActionEdit: props.handleActionEdit,\r\n        handleActionDelete: props.handleOpenDeleteDialog\r\n    }\r\n\r\n    const createDialog = {\r\n        createLoading,\r\n        openCreateDialog,\r\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\r\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\r\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\r\n    }\r\n\r\n    const confirmDialog = {\r\n        confirmLoading: detailLoading,\r\n        openConfirmDialog: openConfirmDialog,\r\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\r\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\r\n        handleSendConfirmDialog: props.handleSendConfirmDialog\r\n    }\r\n\r\n    const updateDialog = {\r\n        initialValues: (() => {\r\n            if (!detail || openCreateDialog) {\r\n                return {}\r\n            }\r\n\r\n            return {\r\n                name: _.get(detail, 'name')\r\n            }\r\n        })(),\r\n        updateLoading: detailLoading || updateLoading,\r\n        openUpdateDialog,\r\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\r\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\r\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\r\n    }\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading\r\n    }\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        detailLoading\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <MarketTypeGridList\r\n                filter={filter}\r\n                listData={listData}\r\n                detailData={detailData}\r\n                createDialog={createDialog}\r\n                confirmDialog={confirmDialog}\r\n                updateDialog={updateDialog}\r\n                actionsDialog={actionsDialog}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default MarketTypeList\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/MarketType/MarketTypeList.js","import MarketTypeList from './MarketTypeList'\n\nexport {MarketTypeList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/MarketType/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport {\r\n    MEASUREMENT_CREATE_DIALOG_OPEN,\r\n    MEASUREMENT_UPDATE_DIALOG_OPEN,\r\n    MEASUREMENT_DELETE_DIALOG_OPEN,\r\n    MeasurementGridList\r\n} from '../../components/Measurement'\r\nimport {\r\n    measurementCreateAction,\r\n    measurementUpdateAction,\r\n    measurementListFetchAction,\r\n    measurementDeleteAction,\r\n    measurementItemFetchAction\r\n} from '../../actions/measurement'\r\nimport {openSnackbarAction} from '../../actions/snackbar'\r\n\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['measurement', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['measurement', 'item', 'loading'])\r\n        const createLoading = _.get(state, ['measurement', 'create', 'loading'])\r\n        const updateLoading = _.get(state, ['measurement', 'update', 'loading'])\r\n        const list = _.get(state, ['measurement', 'list', 'data'])\r\n        const listLoading = _.get(state, ['measurement', 'list', 'loading'])\r\n        const createForm = _.get(state, ['form', 'MeasurementCreateForm'])\r\n        const filter = filterHelper(list, pathname, query)\r\n\r\n        return {\r\n            list,\r\n            listLoading,\r\n            detail,\r\n            detailLoading,\r\n            createLoading,\r\n            updateLoading,\r\n            filter,\r\n            createForm\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(measurementListFetchAction(filter))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const measurementId = _.get(nextProps, ['params', 'measurementId'])\r\n        return measurementId && _.get(props, ['params', 'measurementId']) !== measurementId\r\n    }, ({dispatch, params}) => {\r\n        const measurementId = _.toInteger(_.get(params, 'measurementId'))\r\n        measurementId && dispatch(measurementItemFetchAction(measurementId))\r\n    }),\r\n\r\n    withHandlers({\r\n        handleActionEdit: props => () => {\r\n            return null\r\n        },\r\n\r\n        handleOpenDeleteDialog: props => () => {\r\n            return null\r\n        },\r\n\r\n        handleOpenConfirmDialog: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.MEASUREMENT_ITEM_PATH, id),\r\n                query: filter.getParams({[MEASUREMENT_DELETE_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseConfirmDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[MEASUREMENT_DELETE_DIALOG_OPEN]: false})})\r\n        },\r\n        handleSendConfirmDialog: props => () => {\r\n            const {dispatch, detail, filter, location: {pathname}} = props\r\n            dispatch(measurementDeleteAction(detail.id))\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[MEASUREMENT_DELETE_DIALOG_OPEN]: false})})\r\n                    dispatch(measurementListFetchAction(filter))\r\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\r\n                })\r\n                .catch(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\r\n                })\r\n        },\r\n\r\n        handleOpenCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[MEASUREMENT_CREATE_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[MEASUREMENT_CREATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitCreateDialog: props => () => {\r\n            const {dispatch, createForm, filter, location: {pathname}} = props\r\n\r\n            return dispatch(measurementCreateAction(_.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[MEASUREMENT_CREATE_DIALOG_OPEN]: false})})\r\n                    dispatch(measurementListFetchAction(filter))\r\n                })\r\n        },\r\n\r\n        handleOpenUpdateDialog: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.MEASUREMENT_ITEM_PATH, id),\r\n                query: filter.getParams({[MEASUREMENT_UPDATE_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseUpdateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[MEASUREMENT_UPDATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitUpdateDialog: props => () => {\r\n            const {dispatch, createForm, filter} = props\r\n            const measurementId = _.toInteger(_.get(props, ['params', 'measurementId']))\r\n\r\n            return dispatch(measurementUpdateAction(measurementId, _.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(measurementItemFetchAction(measurementId))\r\n                })\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push(filter.createURL({[MEASUREMENT_UPDATE_DIALOG_OPEN]: false}))\r\n                    dispatch(measurementListFetchAction(filter))\r\n                })\r\n        }\r\n    })\r\n)\r\n\r\nconst MeasurementList = enhance((props) => {\r\n    const {\r\n        location,\r\n        list,\r\n        listLoading,\r\n        detail,\r\n        detailLoading,\r\n        createLoading,\r\n        updateLoading,\r\n        filter,\r\n        layout,\r\n        params\r\n    } = props\r\n\r\n    const openCreateDialog = toBoolean(_.get(location, ['query', MEASUREMENT_CREATE_DIALOG_OPEN]))\r\n    const openUpdateDialog = toBoolean(_.get(location, ['query', MEASUREMENT_UPDATE_DIALOG_OPEN]))\r\n    const openConfirmDialog = toBoolean(_.get(location, ['query', MEASUREMENT_DELETE_DIALOG_OPEN]))\r\n    const detailId = _.toInteger(_.get(params, 'measurementId'))\r\n\r\n    const actionsDialog = {\r\n        handleActionEdit: props.handleActionEdit,\r\n        handleActionDelete: props.handleOpenDeleteDialog\r\n    }\r\n\r\n    const createDialog = {\r\n        createLoading,\r\n        openCreateDialog,\r\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\r\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\r\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\r\n    }\r\n\r\n    const confirmDialog = {\r\n        confirmLoading: detailLoading,\r\n        openConfirmDialog: openConfirmDialog,\r\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\r\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\r\n        handleSendConfirmDialog: props.handleSendConfirmDialog\r\n    }\r\n\r\n    const updateDialog = {\r\n        initialValues: (() => {\r\n            if (!detail || openCreateDialog) {\r\n                return {}\r\n            }\r\n            return {\r\n                name: _.get(detail, 'name')\r\n            }\r\n        })(),\r\n        updateLoading: detailLoading || updateLoading,\r\n        openUpdateDialog,\r\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\r\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\r\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\r\n    }\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading\r\n    }\r\n\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        detailLoading\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <MeasurementGridList\r\n                filter={filter}\r\n                listData={listData}\r\n                detailData={detailData}\r\n                createDialog={createDialog}\r\n                confirmDialog={confirmDialog}\r\n                updateDialog={updateDialog}\r\n                actionsDialog={actionsDialog}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default MeasurementList\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Measurement/MeasurementList.js","import MeasurementList from './MeasurementList'\n\nexport {MeasurementList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Measurement/index.js","import React from 'react'\nimport injectJSS from 'react-jss'\nimport SingInLayout from '../../components/SingInLayout'\nimport Container from '../../components/Container'\n\nconst NotFound = ({classes}) => {\n    return (\n        <SingInLayout>\n            <Container className={classes.wrapper}>\n                <h1 className={classes.content}>\n                    404 <br/>\n                    Page not found\n                </h1>\n            </Container>\n        </SingInLayout>\n    )\n}\n\nexport default injectJSS({\n    wrapper: {\n        height: '100%',\n        display: 'flex !important',\n        justifyContent: 'center',\n        flexDirection: 'column'\n    },\n\n    content: {\n        textAlign: 'center'\n    }\n})(NotFound)\n\n\n\n// WEBPACK FOOTER //\n// src/containers/NotFound/NotFound.js","import NotFound from './NotFound'\n\nexport default NotFound\n\n\n\n// WEBPACK FOOTER //\n// src/containers/NotFound/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport moment from 'moment'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withState, withHandlers} from 'recompose'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport * as ORDER_TAB from '../../constants/orderTab'\r\nimport {DELETE_DIALOG_OPEN} from '../../components/DeleteDialog'\r\nimport {\r\n    ORDER_CREATE_DIALOG_OPEN,\r\n    ORDER_UPDATE_DIALOG_OPEN,\r\n    ORDER_FILTER_KEY,\r\n    ORDER_FILTER_OPEN,\r\n    ORDER_TRANSACTIONS_DIALOG_OPEN,\r\n    ORDER_ITEM_RETURN_DIALOG_OPEN,\r\n    ORDER_RETURN_DIALOG_OPEN,\r\n    ORDER_SHORTAGE_DIALOG_OPEN,\r\n    TAB,\r\n    OrderGridList\r\n} from '../../components/Order'\r\nconst CLIENT_CREATE_DIALOG_OPEN = 'openClientCreate'\r\nimport {\r\n    orderCreateAction,\r\n    orderUpdateAction,\r\n    orderListFetchAction,\r\n    orderDeleteAction,\r\n    orderItemFetchAction,\r\n    orderReturnAction,\r\n    orderReturnListAction,\r\n    orderTransactionFetchAction,\r\n    orderItemReturnFetchAction,\r\n    getDocumentAction\r\n} from '../../actions/order'\r\nimport {\r\n    clientCreateAction\r\n} from '../../actions/client'\r\nimport {openSnackbarAction} from '../../actions/snackbar'\r\n\r\nconst MINUS_ONE = -1\r\nconst ZERO = 0\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['order', 'item', 'data'])\r\n        const payment = _.get(state, ['order', 'payment', 'data'])\r\n        const orderReturnList = _.get(state, ['order', 'returnList', 'data'])\r\n        const detailLoading = _.get(state, ['order', 'item', 'loading'])\r\n        const createLoading = _.get(state, ['order', 'create', 'loading'])\r\n        const createClientLoading = _.get(state, ['client', 'create', 'loading'])\r\n        const transactionsLoading = _.get(state, ['order', 'create', 'loading'])\r\n        const returnLoading = _.get(state, ['order', 'return', 'loading'])\r\n        const returnDataLoading = _.get(state, ['order', 'return', 'loading'])\r\n        const returnDialogLoading = _.get(state, ['order', 'returnList', 'loading'])\r\n        const shortageLoading = _.get(state, ['order', 'create', 'loading'])\r\n        const updateLoading = _.get(state, ['order', 'update', 'loading'])\r\n        const list = _.get(state, ['order', 'list', 'data'])\r\n        const listLoading = _.get(state, ['order', 'list', 'loading'])\r\n        const filterForm = _.get(state, ['form', 'OrderFilterForm'])\r\n        const createForm = _.get(state, ['form', 'OrderCreateForm'])\r\n        const clientCreateForm = _.get(state, ['form', 'ClientCreateForm'])\r\n        const returnForm = _.get(state, ['form', 'OrderReturnForm'])\r\n        const returnData = _.get(state, ['order', 'return', 'data', 'results'])\r\n        const products = _.get(state, ['form', 'OrderCreateForm', 'values', 'products'])\r\n        const filter = filterHelper(list, pathname, query)\r\n\r\n        return {\r\n            list,\r\n            listLoading,\r\n            detail,\r\n            payment,\r\n            detailLoading,\r\n            createLoading,\r\n            createClientLoading,\r\n            transactionsLoading,\r\n            returnLoading,\r\n            shortageLoading,\r\n            updateLoading,\r\n            filter,\r\n            filterForm,\r\n            createForm,\r\n            clientCreateForm,\r\n            returnForm,\r\n            returnData,\r\n            orderReturnList,\r\n            returnDataLoading,\r\n            returnDialogLoading,\r\n            products\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(orderListFetchAction(filter))\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        const prevTransaction = _.get(props, ['location', 'query', 'openTransactionsDialog'])\r\n        const nextTransaction = _.get(nextProps, ['location', 'query', 'openTransactionsDialog'])\r\n        return prevTransaction !== nextTransaction && nextTransaction === 'true'\r\n    }, ({dispatch, params}) => {\r\n        const orderId = _.toInteger(_.get(params, 'orderId'))\r\n        if (orderId > ZERO) {\r\n            dispatch(orderTransactionFetchAction(orderId))\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        const prevTab = _.get(props, ['location', 'query', 'tab'])\r\n        const nextTab = _.get(nextProps, ['location', 'query', 'tab'])\r\n        return prevTab !== nextTab && nextTab === 'return'\r\n    }, ({dispatch, params}) => {\r\n        const orderId = _.toInteger(_.get(params, 'orderId'))\r\n        if (orderId > ZERO) {\r\n            dispatch(orderItemReturnFetchAction(orderId))\r\n        }\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const orderId = _.get(nextProps, ['params', 'orderId'])\r\n\r\n        return orderId && _.get(props, ['params', 'orderId']) !== orderId\r\n    }, ({dispatch, params}) => {\r\n        const orderId = _.toInteger(_.get(params, 'orderId'))\r\n        orderId && dispatch(orderItemFetchAction(orderId))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const prevReturn = _.toInteger(_.get(props, ['location', 'query', 'openOrderItemReturnDialog']))\r\n        const nextReturn = _.toInteger(_.get(nextProps, ['location', 'query', 'openOrderItemReturnDialog']))\r\n        return prevReturn !== nextReturn && nextReturn > ZERO\r\n    }, ({dispatch, location}) => {\r\n        const returnItemId = _.toInteger(_.get(location, ['query', 'openOrderItemReturnDialog']))\r\n        if (returnItemId > ZERO) {\r\n            dispatch(orderReturnListAction(returnItemId))\r\n        }\r\n    }),\r\n\r\n    withState('openConfirmDialog', 'setOpenConfirmDialog', false),\r\n\r\n    withHandlers({\r\n        handleTabChange: props => (tab) => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({\r\n                pathname: pathname,\r\n                query: filter.getParams({[TAB]: tab})\r\n            })\r\n        },\r\n        handleActionEdit: props => () => {\r\n            return null\r\n        },\r\n\r\n        handleOpenConfirmDialog: props => () => {\r\n            const {setOpenConfirmDialog} = props\r\n            setOpenConfirmDialog(true)\r\n        },\r\n\r\n        handleCloseConfirmDialog: props => () => {\r\n            const {setOpenConfirmDialog} = props\r\n            setOpenConfirmDialog(false)\r\n        },\r\n        handleSendConfirmDialog: props => () => {\r\n            const {dispatch, detail, setOpenConfirmDialog, filter} = props\r\n            dispatch(orderDeleteAction(detail.id))\r\n                .then(() => {\r\n                    setOpenConfirmDialog(false)\r\n                    dispatch(orderListFetchAction(filter))\r\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\r\n                })\r\n                .catch(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\r\n                })\r\n        },\r\n\r\n        handleOpenFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[ORDER_FILTER_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[ORDER_FILTER_OPEN]: false})})\r\n        },\r\n\r\n        handleClearFilterDialog: props => () => {\r\n            const {location: {pathname}} = props\r\n            hashHistory.push({pathname, query: {}})\r\n        },\r\n\r\n        handleSubmitFilterDialog: props => () => {\r\n            const {filter, filterForm} = props\r\n            const fromDate = _.get(filterForm, ['values', 'data', 'fromDate']) || null\r\n            const deliveryFromDate = _.get(filterForm, ['values', 'deliveryDate', 'fromDate']) || null\r\n            const toDate = _.get(filterForm, ['values', 'data', 'toDate']) || null\r\n            const deliveryToDate = _.get(filterForm, ['values', 'deliveryDate', 'toDate']) || null\r\n            const client = _.get(filterForm, ['values', 'client', 'value']) || null\r\n            const orderStatus = _.get(filterForm, ['values', 'orderStatus', 'value']) || null\r\n\r\n            filter.filterBy({\r\n                [ORDER_FILTER_OPEN]: false,\r\n                [ORDER_FILTER_KEY.CLIENT]: client,\r\n                [ORDER_FILTER_KEY.ORDERSTATUS]: orderStatus,\r\n                [ORDER_FILTER_KEY.FROM_DATE]: fromDate && fromDate.format('YYYY-MM-DD'),\r\n                [ORDER_FILTER_KEY.DELIVERY_FROM_DATE]: deliveryFromDate && deliveryFromDate.format('YYYY-MM-DD'),\r\n                [ORDER_FILTER_KEY.TO_DATE]: toDate && toDate.format('YYYY-MM-DD'),\r\n                [ORDER_FILTER_KEY.DELIVERY_TO_DATE]: deliveryToDate && deliveryToDate.format('YYYY-MM-DD')\r\n            })\r\n        },\r\n        handleOpenDeleteDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({\r\n                pathname,\r\n                query: filter.getParams({openDeleteDialog: 'yes'})\r\n            })\r\n        },\r\n\r\n        handleCloseDeleteDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({openDeleteDialog: false})})\r\n        },\r\n\r\n        handleOpenCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[ORDER_CREATE_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[ORDER_CREATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitCreateDialog: props => () => {\r\n            const {dispatch, createForm, filter, location: {pathname}} = props\r\n\r\n            return dispatch(orderCreateAction(_.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[ORDER_CREATE_DIALOG_OPEN]: false})})\r\n                    dispatch(orderListFetchAction(filter))\r\n                })\r\n        },\r\n\r\n        handleOpenTransactionsDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[ORDER_TRANSACTIONS_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseTransactionsDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[ORDER_TRANSACTIONS_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleOpenItemReturnDialog: props => (id) => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[ORDER_ITEM_RETURN_DIALOG_OPEN]: id})})\r\n        },\r\n\r\n        handleCloseItemReturnDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[ORDER_ITEM_RETURN_DIALOG_OPEN]: MINUS_ONE})})\r\n        },\r\n\r\n        handleOpenReturnDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[ORDER_RETURN_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseReturnDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[ORDER_RETURN_DIALOG_OPEN]: false})})\r\n        },\r\n        handleSubmitReturnDialog: props => () => {\r\n            const {dispatch, returnForm, detail, filter, location: {pathname}, params} = props\r\n            const orderId = _.toInteger(_.get(params, 'orderId'))\r\n            return dispatch(orderReturnAction(_.get(returnForm, ['values']), detail))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[ORDER_RETURN_DIALOG_OPEN]: false})})\r\n                    dispatch(orderItemReturnFetchAction(orderId))\r\n                    dispatch(orderItemFetchAction(orderId))\r\n                })\r\n        },\r\n\r\n        handleOpenShortageDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[ORDER_SHORTAGE_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseShortageDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[ORDER_SHORTAGE_DIALOG_OPEN]: false})})\r\n        },\r\n        handleSubmitShortageDialog: props => () => {\r\n            const {dispatch, createForm, filter, location: {pathname}} = props\r\n            return dispatch(orderCreateAction(_.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно отправлено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[ORDER_SHORTAGE_DIALOG_OPEN]: false, [ORDER_CREATE_DIALOG_OPEN]: false})})\r\n                    dispatch(orderListFetchAction(filter))\r\n                })\r\n        },\r\n\r\n        handleOpenUpdateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[ORDER_UPDATE_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseUpdateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[ORDER_UPDATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitUpdateDialog: props => () => {\r\n            const {dispatch, createForm, filter, location: {pathname}} = props\r\n            const orderId = _.toInteger(_.get(props, ['params', 'orderId']))\r\n\r\n            return dispatch(orderUpdateAction(orderId, _.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(orderItemFetchAction(orderId))\r\n                })\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[ORDER_UPDATE_DIALOG_OPEN]: false})})\r\n                    dispatch(orderListFetchAction(filter))\r\n                })\r\n        },\r\n\r\n        handleOpenCreateClientDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[CLIENT_CREATE_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseCreateClientDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[CLIENT_CREATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitCreateClientDialog: props => () => {\r\n            const {dispatch, clientCreateForm, filter} = props\r\n\r\n            return dispatch(clientCreateAction(_.get(clientCreateForm, ['values'])))\r\n                .then((data) => {\r\n                    const value = _.get(data, ['value', 'id'])\r\n                    dispatch({\r\n                        type: '@@redux-form/CHANGE',\r\n                        payload: {text: '', value: value},\r\n                        meta: {\r\n                            field: 'client',\r\n                            touch: false,\r\n                            form: 'OrderCreateForm',\r\n                            persistentSubmitErrors: false\r\n                        }\r\n                    })\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push(filter.createURL({[CLIENT_CREATE_DIALOG_OPEN]: false}))\r\n                })\r\n        },\r\n\r\n        handleGetDocument: props => (id) => {\r\n            const {dispatch} = props\r\n            return dispatch(getDocumentAction(id))\r\n        },\r\n\r\n        handleCloseDetail: props => () => {\r\n            const {filter} = props\r\n            hashHistory.push({pathname: ROUTER.ORDER_LIST_URL, query: filter.getParam()})\r\n        }\r\n    }),\r\n)\r\n\r\nconst OrderList = enhance((props) => {\r\n    const {\r\n        location,\r\n        list,\r\n        listLoading,\r\n        detail,\r\n        returnData,\r\n        orderReturnList,\r\n        payment,\r\n        detailLoading,\r\n        createLoading,\r\n        createClientLoading,\r\n        transactionsLoading,\r\n        returnLoading,\r\n        shortageLoading,\r\n        updateLoading,\r\n        returnDataLoading,\r\n        returnDialogLoading,\r\n        filter,\r\n        layout,\r\n        products,\r\n        params\r\n    } = props\r\n\r\n    const openFilterDialog = toBoolean(_.get(location, ['query', ORDER_FILTER_OPEN]))\r\n    const openCreateDialog = toBoolean(_.get(location, ['query', ORDER_CREATE_DIALOG_OPEN]))\r\n    const openTransactionsDialog = toBoolean(_.get(location, ['query', ORDER_TRANSACTIONS_DIALOG_OPEN]))\r\n    const openOrderItemReturnDialog = _.toInteger(_.get(location, ['query', 'openOrderItemReturnDialog']) || MINUS_ONE) > MINUS_ONE\r\n    const openReturnDialog = toBoolean(_.get(location, ['query', ORDER_RETURN_DIALOG_OPEN]))\r\n    const openShortageDialog = toBoolean(_.get(location, ['query', ORDER_SHORTAGE_DIALOG_OPEN]))\r\n    const openUpdateDialog = toBoolean(_.get(location, ['query', ORDER_UPDATE_DIALOG_OPEN]))\r\n    const openDeleteDialog = toBoolean(_.get(location, ['query', DELETE_DIALOG_OPEN]))\r\n\r\n    const client = _.toInteger(filter.getParam(ORDER_FILTER_KEY.CLIENT))\r\n    const orderStatus = _.toInteger(filter.getParam(ORDER_FILTER_KEY.ORDERSTATUS))\r\n    const fromDate = filter.getParam(ORDER_FILTER_KEY.FROM_DATE)\r\n    const deliveryFromDate = filter.getParam(ORDER_FILTER_KEY.DELIVERY_FROM_DATE)\r\n    const toDate = filter.getParam(ORDER_FILTER_KEY.TO_DATE)\r\n    const deliveryToDate = filter.getParam(ORDER_FILTER_KEY.DELIVERY_TO_DATE)\r\n    const detailId = _.toInteger(_.get(params, 'orderId'))\r\n    const tab = _.get(location, ['query', TAB]) || ORDER_TAB.ORDER_DEFAULT_TAB\r\n\r\n    const openCreateClientDialog = toBoolean(_.get(location, ['query', CLIENT_CREATE_DIALOG_OPEN]))\r\n\r\n    const actionsDialog = {\r\n        handleActionEdit: props.handleActionEdit,\r\n        handleActionDelete: props.handleOpenDeleteDialog\r\n    }\r\n\r\n    const createDialog = {\r\n        createLoading,\r\n        openCreateDialog,\r\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\r\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\r\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\r\n    }\r\n\r\n    const transactionsDialog = {\r\n        transactionsLoading,\r\n        openTransactionsDialog,\r\n        handleOpenTransactionsDialog: props.handleOpenTransactionsDialog,\r\n        handleCloseTransactionsDialog: props.handleCloseTransactionsDialog\r\n    }\r\n\r\n    const itemReturnDialog = {\r\n        returnDialogLoading,\r\n        openOrderItemReturnDialog,\r\n        handleOpenItemReturnDialog: props.handleOpenItemReturnDialog,\r\n        handleCloseItemReturnDialog: props.handleCloseItemReturnDialog\r\n    }\r\n\r\n    const returnDialog = {\r\n        returnLoading,\r\n        openReturnDialog,\r\n        handleOpenReturnDialog: props.handleOpenReturnDialog,\r\n        handleCloseReturnDialog: props.handleCloseReturnDialog,\r\n        handleSubmitReturnDialog: props.handleSubmitReturnDialog\r\n    }\r\n    const shortageDialog = {\r\n        shortageLoading,\r\n        openShortageDialog,\r\n        handleOpenShortageDialog: props.handleOpenShortageDialog,\r\n        handleCloseShortageDialog: props.handleCloseShortageDialog,\r\n        handleSubmitShortageDialog: props.handleSubmitShortageDialog\r\n    }\r\n\r\n    const deleteDialog = {\r\n        openDeleteDialog,\r\n        handleOpenDeleteDialog: props.handleOpenDeleteDialog,\r\n        handleCloseDeleteDialog: props.handleCloseDeleteDialog\r\n    }\r\n\r\n    const getDocument = {\r\n        handleGetDocument: props.handleGetDocument\r\n    }\r\n\r\n    const confirmDialog = {\r\n        openConfirmDialog: props.openConfirmDialog,\r\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\r\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\r\n        handleSendConfirmDialog: props.handleSendConfirmDialog\r\n    }\r\n\r\n    const createClientDialog = {\r\n        initialValues: (() => {\r\n            return {\r\n                contacts: [{}]\r\n            }\r\n        })(),\r\n        createClientLoading,\r\n        openCreateClientDialog,\r\n        handleOpenCreateClientDialog: props.handleOpenCreateClientDialog,\r\n        handleCloseCreateClientDialog: props.handleCloseCreateClientDialog,\r\n        handleSubmitCreateClientDialog: props.handleSubmitCreateClientDialog\r\n    }\r\n    const forUpdateProducts = _.map(_.get(detail, 'products'), (item) => {\r\n        return {\r\n            amount: _.get(item, 'amount'),\r\n            cost: _.get(item, 'price'),\r\n            measurement: _.get(item, ['product', 'measurement', 'name']),\r\n            product: {\r\n                value: _.get(item, ['product', 'id']),\r\n                text: _.get(item, ['product', 'name'])\r\n            }\r\n\r\n        }\r\n    })\r\n\r\n    const updateDialog = {\r\n        initialValues: (() => {\r\n            if (!detail || openCreateDialog) {\r\n                return {}\r\n            }\r\n            const HUND = 100\r\n            const discountPrice = _.toNumber(_.get(detail, 'discountPrice'))\r\n            const totalPrice = _.toNumber(_.get(detail, 'totalPrice'))\r\n            const discount = (discountPrice / (discountPrice + totalPrice)) * HUND\r\n            return {\r\n                client: {\r\n                    value: _.get(detail, ['client', 'id'])\r\n                },\r\n                contact: {\r\n                    value: _.get(detail, ['contact', 'id'])\r\n                },\r\n                deliveryType: _.get(detail, ['deliveryType', 'id']),\r\n                deliveryDate: moment(_.get(detail, ['dateDelivery'])).toDate(),\r\n                deliveryPrice: _.get(detail, 'deliveryPrice'),\r\n                discountPrice: discount,\r\n                paymentDate: moment(_.get(detail, ['paymentDate'])).toDate(),\r\n                products: forUpdateProducts\r\n            }\r\n        })(),\r\n        updateLoading: detailLoading || updateLoading,\r\n        openUpdateDialog,\r\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\r\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\r\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\r\n    }\r\n\r\n    const filterDialog = {\r\n        initialValues: {\r\n            client: {\r\n                value: client\r\n            },\r\n            orderStatus: {\r\n                value: orderStatus\r\n            },\r\n            deliveryDate: {\r\n                deliveryFromDate: deliveryFromDate && moment(deliveryFromDate, 'YYYY-MM-DD'),\r\n                deliveryToDate: deliveryToDate && moment(deliveryToDate, 'YYYY-MM-DD')\r\n            },\r\n            date: {\r\n                fromDate: fromDate && moment(fromDate, 'YYYY-MM-DD'),\r\n                toDate: toDate && moment(toDate, 'YYYY-MM-DD')\r\n            }\r\n        },\r\n        filterLoading: false,\r\n        openFilterDialog,\r\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\r\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\r\n        handleClearFilterDialog: props.handleClearFilterDialog,\r\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\r\n    }\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading\r\n    }\r\n\r\n    const tabData = {\r\n        tab,\r\n        handleTabChange: props.handleTabChange\r\n    }\r\n\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        return: returnData,\r\n        detailLoading,\r\n        handleCloseDetail: props.handleCloseDetail\r\n    }\r\n\r\n    const paymentData = {\r\n        id: detailId,\r\n        data: payment,\r\n        transactionsLoading\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <OrderGridList\r\n                filter={filter}\r\n                listData={listData}\r\n                tabData={tabData}\r\n                detailData={detailData}\r\n                returnListData={orderReturnList}\r\n                paymentData={paymentData}\r\n                createDialog={createDialog}\r\n                getDocument={getDocument}\r\n                createClientDialog={createClientDialog}\r\n                transactionsDialog={transactionsDialog}\r\n                itemReturnDialog={itemReturnDialog}\r\n                returnDialog={returnDialog}\r\n                shortageDialog={shortageDialog}\r\n                deleteDialog={deleteDialog}\r\n                confirmDialog={confirmDialog}\r\n                returnDataLoading={returnDataLoading}\r\n                updateDialog={updateDialog}\r\n                actionsDialog={actionsDialog}\r\n                filterDialog={filterDialog}\r\n                products={products}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default OrderList\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Order/OrderList.js","import OrderList from './OrderList'\n\nexport {OrderList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Order/index.js","import React from 'react'\r\nimport moment from 'moment'\r\nimport _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withState, withHandlers} from 'recompose'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport {\r\n    PENDING_EXPENSES_UPDATE_DIALOG_OPEN,\r\n    PENDING_EXPENSES_FILTER_KEY,\r\n    PENDING_EXPENSES_FILTER_OPEN,\r\n    PendingExpensesGridList\r\n} from '../../components/PendingExpenses'\r\nimport {\r\n    pendingExpensesUpdateAction,\r\n    pendingExpensesListFetchAction,\r\n    pendingExpensesItemFetchAction\r\n} from '../../actions/pendingExpenses'\r\n\r\nimport {openSnackbarAction} from '../../actions/snackbar'\r\n\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['pendingExpenses', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['pendingExpenses', 'item', 'loading'])\r\n        const createLoading = _.get(state, ['pendingExpenses', 'create', 'loading'])\r\n        const updateLoading = _.get(state, ['pendingExpenses', 'update', 'loading'])\r\n        const list = _.get(state, ['pendingExpenses', 'list', 'data'])\r\n        const listLoading = _.get(state, ['pendingExpenses', 'list', 'loading'])\r\n        const filterForm = _.get(state, ['form', 'PendingExpensesFilterForm'])\r\n        const createForm = _.get(state, ['form', 'PendingExpensesCreateForm'])\r\n        const filter = filterHelper(list, pathname, query)\r\n\r\n        return {\r\n            list,\r\n            listLoading,\r\n            detail,\r\n            detailLoading,\r\n            createLoading,\r\n            updateLoading,\r\n            filter,\r\n            filterForm,\r\n            createForm\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(pendingExpensesListFetchAction(filter))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const pendingExpensesId = _.get(nextProps, ['params', 'pendingExpensesId'])\r\n\r\n        return pendingExpensesId && _.get(props, ['params', 'pendingExpensesId']) !== pendingExpensesId\r\n    }, ({dispatch, params}) => {\r\n        const pendingExpensesId = _.toInteger(_.get(params, 'pendingExpensesId'))\r\n        pendingExpensesId && dispatch(pendingExpensesItemFetchAction(pendingExpensesId))\r\n    }),\r\n\r\n    withState('openConfirmDialog', 'setOpenConfirmDialog', false),\r\n\r\n    withHandlers({\r\n        handleOpenFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PENDING_EXPENSES_FILTER_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PENDING_EXPENSES_FILTER_OPEN]: false})})\r\n        },\r\n\r\n        handleClearFilterDialog: props => () => {\r\n            const {location: {pathname}} = props\r\n            hashHistory.push({pathname, query: {}})\r\n        },\r\n\r\n        handleSubmitFilterDialog: props => () => {\r\n            const {filter, filterForm} = props\r\n            const fromDate = _.get(filterForm, ['values', 'date', 'fromDate']) || null\r\n            const toDate = _.get(filterForm, ['values', 'date', 'toDate']) || null\r\n\r\n            filter.filterBy({\r\n                [PENDING_EXPENSES_FILTER_OPEN]: false,\r\n                [PENDING_EXPENSES_FILTER_KEY.FROM_DATE]: fromDate && fromDate.format('YYYY-MM-DD'),\r\n                [PENDING_EXPENSES_FILTER_KEY.TO_DATE]: toDate && toDate.format('YYYY-MM-DD')\r\n            })\r\n        },\r\n\r\n        handleOpenUpdateDialog: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.PENDING_EXPENSES_ITEM_PATH, id),\r\n                query: filter.getParams({[PENDING_EXPENSES_UPDATE_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseUpdateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PENDING_EXPENSES_UPDATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitUpdateDialog: props => () => {\r\n            const {dispatch, createForm, filter, detail} = props\r\n\r\n            return dispatch(pendingExpensesUpdateAction(detail.id, _.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push(filter.createURL({[PENDING_EXPENSES_UPDATE_DIALOG_OPEN]: false}))\r\n                    dispatch(pendingExpensesListFetchAction(filter))\r\n                })\r\n        }\r\n    })\r\n)\r\n\r\nconst PendingExpensesList = enhance((props) => {\r\n    const {\r\n        location,\r\n        list,\r\n        listLoading,\r\n        detail,\r\n        detailLoading,\r\n        updateLoading,\r\n        filter,\r\n        layout,\r\n        params\r\n    } = props\r\n\r\n    const openFilterDialog = toBoolean(_.get(location, ['query', PENDING_EXPENSES_FILTER_OPEN]))\r\n    const openUpdateDialog = toBoolean(_.get(location, ['query', PENDING_EXPENSES_UPDATE_DIALOG_OPEN]))\r\n    const fromDate = filter.getParam(PENDING_EXPENSES_FILTER_KEY.FROM_DATE)\r\n    const toDate = filter.getParam(PENDING_EXPENSES_FILTER_KEY.TO_DATE)\r\n    const detailId = _.toInteger(_.get(params, 'pendingExpensesId'))\r\n\r\n    const confirmDialog = {\r\n        openConfirmDialog: props.openConfirmDialog,\r\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\r\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\r\n        handleSendConfirmDialog: props.handleSendConfirmDialog\r\n    }\r\n\r\n    const updateDialog = {\r\n        initialValues: (() => {\r\n            if (!detail || openUpdateDialog) {\r\n                return {}\r\n            }\r\n\r\n            return {\r\n                name: _.get(detail, 'name'),\r\n                category: {\r\n                    value: _.get(detail, 'category')\r\n                },\r\n                address: _.get(detail, 'address'),\r\n                guide: _.get(detail, 'guide'),\r\n                phone: _.get(detail, 'phone'),\r\n                contactName: _.get(detail, 'contactName'),\r\n                official: _.get(detail, 'official'),\r\n                latLng: {\r\n                    lat: _.get(detail, 'lat'),\r\n                    lng: _.get(detail, 'lon')\r\n                }\r\n            }\r\n        })(),\r\n        updateLoading: detailLoading || updateLoading,\r\n        openUpdateDialog,\r\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\r\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\r\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\r\n    }\r\n\r\n    const filterDialog = {\r\n        initialValues: {\r\n            date: {\r\n                fromDate: fromDate && moment(fromDate, 'YYYY-MM-DD'),\r\n                toDate: toDate && moment(toDate, 'YYYY-MM-DD')\r\n            }\r\n        },\r\n        filterLoading: false,\r\n        openFilterDialog,\r\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\r\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\r\n        handleClearFilterDialog: props.handleClearFilterDialog,\r\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\r\n    }\r\n\r\n    const csvDialog = {\r\n        csvData: props.csvData,\r\n        csvLoading: props.csvLoading,\r\n        openCSVDialog: props.openCSVDialog,\r\n        handleOpenCSVDialog: props.handleOpenCSVDialog,\r\n        handleCloseCSVDialog: props.handleCloseCSVDialog\r\n    }\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading\r\n    }\r\n\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        detailLoading\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <PendingExpensesGridList\r\n                filter={filter}\r\n                listData={listData}\r\n                detailData={detailData}\r\n                confirmDialog={confirmDialog}\r\n                updateDialog={updateDialog}\r\n                filterDialog={filterDialog}\r\n                csvDialog={csvDialog}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default PendingExpensesList\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/PendingExpenses/PendingExpensesList.js","import PendingExpensesList from './PendingExpensesList'\n\nexport {PendingExpensesList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/PendingExpenses/index.js","import React from 'react'\r\nimport moment from 'moment'\r\nimport _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withState, withHandlers} from 'recompose'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport {\r\n    PENDING_PAYMENTS_UPDATE_DIALOG_OPEN,\r\n    PENDING_PAYMENTS_FILTER_KEY,\r\n    PENDING_PAYMENTS_FILTER_OPEN,\r\n    PendingPaymentsGridList\r\n} from '../../components/PendingPayments'\r\nimport {\r\n    pendingPaymentsUpdateAction,\r\n    pendingPaymentsListFetchAction,\r\n    pendingPaymentsItemFetchAction\r\n} from '../../actions/pendingPayments'\r\n\r\nimport {openSnackbarAction} from '../../actions/snackbar'\r\n\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['pendingPayments', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['pendingPayments', 'item', 'loading'])\r\n        const updateLoading = _.get(state, ['pendingPayments', 'update', 'loading'])\r\n        const list = _.get(state, ['pendingPayments', 'list', 'data'])\r\n        const listLoading = _.get(state, ['pendingPayments', 'list', 'loading'])\r\n        const filterForm = _.get(state, ['form', 'PendingPaymentsFilterForm'])\r\n        const createForm = _.get(state, ['form', 'PendingPaymentsCreateForm'])\r\n        const filter = filterHelper(list, pathname, query)\r\n\r\n        return {\r\n            list,\r\n            listLoading,\r\n            detail,\r\n            detailLoading,\r\n            updateLoading,\r\n            filter,\r\n            filterForm,\r\n            createForm\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(pendingPaymentsListFetchAction(filter))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const pendingPaymentsId = _.get(nextProps, ['params', 'pendingPaymentsId'])\r\n\r\n        return pendingPaymentsId && _.get(props, ['params', 'pendingPaymentsId']) !== pendingPaymentsId\r\n    }, ({dispatch, params}) => {\r\n        const pendingPaymentsId = _.toInteger(_.get(params, 'pendingPaymentsId'))\r\n        pendingPaymentsId && dispatch(pendingPaymentsItemFetchAction(pendingPaymentsId))\r\n    }),\r\n\r\n    withState('openConfirmDialog', 'setOpenConfirmDialog', false),\r\n\r\n    withHandlers({\r\n        handleOpenFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PENDING_PAYMENTS_FILTER_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PENDING_PAYMENTS_FILTER_OPEN]: false})})\r\n        },\r\n\r\n        handleClearFilterDialog: props => () => {\r\n            const {location: {pathname}} = props\r\n            hashHistory.push({pathname, query: {}})\r\n        },\r\n\r\n        handleSubmitFilterDialog: props => () => {\r\n            const {filter, filterForm} = props\r\n            const fromDate = _.get(filterForm, ['values', 'date', 'fromDate']) || null\r\n            const toDate = _.get(filterForm, ['values', 'date', 'toDate']) || null\r\n\r\n            filter.filterBy({\r\n                [PENDING_PAYMENTS_FILTER_OPEN]: false,\r\n                [PENDING_PAYMENTS_FILTER_KEY.FROM_DATE]: fromDate && fromDate.format('YYYY-MM-DD'),\r\n                [PENDING_PAYMENTS_FILTER_KEY.TO_DATE]: toDate && toDate.format('YYYY-MM-DD')\r\n            })\r\n        },\r\n\r\n        handleOpenUpdateDialog: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.PENDING_PAYMENTS_ITEM_PATH, id),\r\n                query: filter.getParams({[PENDING_PAYMENTS_UPDATE_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseUpdateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PENDING_PAYMENTS_UPDATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitUpdateDialog: props => () => {\r\n            const {dispatch, createForm, filter} = props\r\n            const pendingPaymentsId = _.toInteger(_.get(props, ['params', 'pendingPaymentsId']))\r\n\r\n            return dispatch(pendingPaymentsUpdateAction(_.get(createForm, ['values']), pendingPaymentsId))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push(filter.createURL({[PENDING_PAYMENTS_UPDATE_DIALOG_OPEN]: false}))\r\n                    dispatch(pendingPaymentsListFetchAction(filter))\r\n                })\r\n        }\r\n    })\r\n)\r\n\r\nconst PendingPaymentsList = enhance((props) => {\r\n    const {\r\n        location,\r\n        list,\r\n        listLoading,\r\n        detail,\r\n        detailLoading,\r\n        updateLoading,\r\n        filter,\r\n        layout,\r\n        params\r\n    } = props\r\n\r\n    const openFilterDialog = toBoolean(_.get(location, ['query', PENDING_PAYMENTS_FILTER_OPEN]))\r\n    const openUpdateDialog = toBoolean(_.get(location, ['query', PENDING_PAYMENTS_UPDATE_DIALOG_OPEN]))\r\n    const fromDate = filter.getParam(PENDING_PAYMENTS_FILTER_KEY.FROM_DATE)\r\n    const toDate = filter.getParam(PENDING_PAYMENTS_FILTER_KEY.TO_DATE)\r\n    const detailId = _.toInteger(_.get(params, 'pendingPaymentsId'))\r\n\r\n    const actionsDialog = {\r\n        handleActionEdit: props.handleActionEdit,\r\n        handleActionDelete: props.handleOpenDeleteDialog\r\n    }\r\n\r\n    const confirmDialog = {\r\n        openConfirmDialog: props.openConfirmDialog,\r\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\r\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\r\n        handleSendConfirmDialog: props.handleSendConfirmDialog\r\n    }\r\n\r\n    const updateDialog = {\r\n        initialValues: {},\r\n        updateLoading: detailLoading || updateLoading,\r\n        openUpdateDialog,\r\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\r\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\r\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\r\n    }\r\n\r\n    const filterDialog = {\r\n        initialValues: {\r\n            date: {\r\n                fromDate: fromDate && moment(fromDate, 'YYYY-MM-DD'),\r\n                toDate: toDate && moment(toDate, 'YYYY-MM-DD')\r\n            }\r\n        },\r\n        filterLoading: false,\r\n        openFilterDialog,\r\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\r\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\r\n        handleClearFilterDialog: props.handleClearFilterDialog,\r\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\r\n    }\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading\r\n    }\r\n\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        detailLoading\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <PendingPaymentsGridList\r\n                filter={filter}\r\n                listData={listData}\r\n                detailData={detailData}\r\n                confirmDialog={confirmDialog}\r\n                updateDialog={updateDialog}\r\n                actionsDialog={actionsDialog}\r\n                filterDialog={filterDialog}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default PendingPaymentsList\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/PendingPayments/PendingPaymentsList.js","import PendingPaymentsList from './PendingPaymentsList'\n\nexport {PendingPaymentsList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/PendingPayments/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport numberFormat from '../../helpers/numberFormat'\r\nimport {\r\n    PRICE_FILTER_KEY,\r\n    PRICE_FILTER_OPEN,\r\n    PRICE_SUPPLY_DIALOG_OPEN,\r\n    PRICE_SET_FORM_OPEN,\r\n    PriceGridList\r\n} from '../../components/Price'\r\nimport {\r\n    priceCreateAction,\r\n    priceListFetchAction,\r\n    priceItemFetchAction,\r\n    getPriceItemsAction\r\n} from '../../actions/price'\r\nimport {marketTypeGetAllAction} from '../../actions/marketType'\r\nimport {openSnackbarAction} from '../../actions/snackbar'\r\nconst ZERO = 0\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['price', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['price', 'item', 'loading'])\r\n        const list = _.get(state, ['price', 'list', 'data'])\r\n        const listLoading = _.get(state, ['price', 'list', 'loading'])\r\n        const filterForm = _.get(state, ['form', 'PriceFilterForm'])\r\n        const createForm = _.get(state, ['form', 'PriceCreateForm'])\r\n        const filter = filterHelper(list, pathname, query)\r\n        const marketTypeList = _.get(state, ['marketType', 'list', 'data'])\r\n        const marketTypeLoading = _.get(state, ['marketType', 'list', 'loading'])\r\n        const priceListItemsList = _.get(state, ['price', 'price', 'data'])\r\n        const priceListItemsLoading = _.get(state, ['price', 'price', 'loading'])\r\n        return {\r\n            list,\r\n            listLoading,\r\n            detail,\r\n            detailLoading,\r\n            filter,\r\n            marketTypeList,\r\n            marketTypeLoading,\r\n            filterForm,\r\n            createForm,\r\n            priceListItemsList,\r\n            priceListItemsLoading\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(priceListFetchAction(filter))\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        const priceId = _.get(nextProps, ['params', 'priceId']) || ZERO\r\n        return priceId > ZERO && _.get(props, ['params', 'priceId']) !== priceId\r\n    }, ({dispatch, params}) => {\r\n        const priceId = _.toInteger(_.get(params, 'priceId'))\r\n        if (priceId > ZERO) {\r\n            dispatch(priceItemFetchAction(priceId))\r\n            dispatch(getPriceItemsAction(priceId))\r\n            dispatch(marketTypeGetAllAction())\r\n        }\r\n    }),\r\n    withHandlers({\r\n        handleOpenFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PRICE_FILTER_OPEN]: true})})\r\n        },\r\n        handleCloseFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PRICE_FILTER_OPEN]: false})})\r\n        },\r\n        handleClearFilterDialog: props => () => {\r\n            const {location: {pathname}} = props\r\n            hashHistory.push({pathname, query: {}})\r\n        },\r\n        handleSubmitFilterDialog: props => () => {\r\n            const {filter, filterForm} = props\r\n            const type = _.get(filterForm, ['values', 'type', 'value']) || null\r\n            const measurement = _.get(filterForm, ['values', 'measurement', 'value']) || null\r\n            const brand = _.get(filterForm, ['values', 'brand', 'value']) || null\r\n            filter.filterBy({\r\n                [PRICE_FILTER_OPEN]: false,\r\n                [PRICE_FILTER_KEY.TYPE]: type,\r\n                [PRICE_FILTER_KEY.MEASUREMENT]: measurement,\r\n                [PRICE_FILTER_KEY.BRAND]: brand\r\n            })\r\n        },\r\n        handleOpenSupplyDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PRICE_SUPPLY_DIALOG_OPEN]: true})})\r\n        },\r\n        handleCloseSupplyDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PRICE_SUPPLY_DIALOG_OPEN]: false})})\r\n        },\r\n        handleOpenPriceSetForm: props => () => {\r\n            const {dispatch, location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PRICE_SET_FORM_OPEN]: true})})\r\n            return dispatch(marketTypeGetAllAction())\r\n        },\r\n        handleClosePriceSetForm: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PRICE_SET_FORM_OPEN]: false})})\r\n        },\r\n        handleSubmitPriceSetForm: props => () => {\r\n            const {dispatch, createForm, filter, detail, params: {priceId}, location: {pathname}} = props\r\n            const detailId = _.get(detail, 'id')\r\n            return dispatch(priceCreateAction(_.get(createForm, ['values']), priceId))\r\n                .then(() => {\r\n                    dispatch(priceItemFetchAction(detailId))\r\n                    hashHistory.push({pathname, query: filter.getParams({[PRICE_SET_FORM_OPEN]: false})})\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n        },\r\n        handleCloseDetail: props => () => {\r\n            const {filter} = props\r\n            hashHistory.push({pathname: ROUTER.PRICE_LIST_URL, query: filter.getParam()})\r\n        }\r\n    })\r\n)\r\nconst PriceList = enhance((props) => {\r\n    const {\r\n        location,\r\n        list,\r\n        listLoading,\r\n        detail,\r\n        detailLoading,\r\n        marketTypeLoading,\r\n        marketTypeList,\r\n        priceListItemsList,\r\n        priceListItemsLoading,\r\n        filter,\r\n        layout,\r\n        params\r\n    } = props\r\n    const openFilterDialog = toBoolean(_.get(location, ['query', PRICE_FILTER_OPEN]))\r\n    const openPriceSupplyDialog = toBoolean(_.get(location, ['query', PRICE_SUPPLY_DIALOG_OPEN]))\r\n    const openPriceSetForm = toBoolean(_.get(location, ['query', PRICE_SET_FORM_OPEN]))\r\n    const detailId = _.toInteger(_.get(params, 'priceId'))\r\n    const priceSupplyDialog = {\r\n        openPriceSupplyDialog,\r\n        handleOpenSupplyDialog: props.handleOpenSupplyDialog,\r\n        handleCloseSupplyDialog: props.handleCloseSupplyDialog\r\n    }\r\n    const filterDialog = {\r\n        initialValues: {\r\n        },\r\n        filterLoading: false,\r\n        openFilterDialog,\r\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\r\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\r\n        handleClearFilterDialog: props.handleClearFilterDialog,\r\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\r\n    }\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading\r\n    }\r\n    const getPriceByParams = (marketTypeId, fieldName) => {\r\n        const price = _.find(_.get(priceListItemsList, ['results']), (item) => {\r\n            return item.marketType.id === marketTypeId\r\n        })\r\n        if (fieldName === 'cash') {\r\n            const val = _.get(price, 'cashPrice') || ZERO\r\n            return numberFormat(val)\r\n        }\r\n        const val = _.get(price, 'transferPrice') || ZERO\r\n        return numberFormat(val)\r\n    }\r\n    const detailData = {\r\n        id: detailId,\r\n        marketTypeLoading: marketTypeLoading,\r\n        marketTypeList: _.get(marketTypeList, 'results'),\r\n        mergedList: () => {\r\n            return _.map(_.get(marketTypeList, 'results'), (item) => {\r\n                const marketTypeId = _.get(item, 'id')\r\n                const marketTypeName = _.get(item, 'name')\r\n                return {\r\n                    'cash_price': getPriceByParams(marketTypeId, 'cash'),\r\n                    'transfer_price': getPriceByParams(marketTypeId, 'transfer'),\r\n                    'marketTypeId': marketTypeId,\r\n                    marketTypeName\r\n                }\r\n            })\r\n        },\r\n        priceListItemsList: _.get(priceListItemsList, 'results'),\r\n        priceListItemsLoading,\r\n        data: detail,\r\n        detailLoading,\r\n        handleCloseDetail: props.handleCloseDetail\r\n    }\r\n    const priceSetForm = {\r\n        initialValues: (() => {\r\n            const priceList = _.map(detailData.mergedList(), (item) => {\r\n                return {\r\n                    'cash_price': _.get(item, 'cash_price'),\r\n                    'transfer_price': _.get(item, 'transfer_price'),\r\n                    'market_type': _.get(item, 'marketTypeId')\r\n                }\r\n            })\r\n            return {'prices': priceList}\r\n        })(),\r\n        openPriceSetForm,\r\n        handleOpenPriceSetForm: props.handleOpenPriceSetForm,\r\n        handleClosePriceSetForm: props.handleClosePriceSetForm,\r\n        handleSubmitPriceSetForm: props.handleSubmitPriceSetForm\r\n    }\r\n    return (\r\n        <Layout {...layout}>\r\n            <PriceGridList\r\n                filter={filter}\r\n                listData={listData}\r\n                detailData={detailData}\r\n                priceSupplyDialog={priceSupplyDialog}\r\n                priceSetForm={priceSetForm}\r\n                filterDialog={filterDialog}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\nexport default PriceList\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Price/PriceList.js","import PriceList from './PriceList'\n\nexport {PriceList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Price/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport moment from 'moment'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\r\nimport Layout from '../../components/Layout'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport {setItemAction} from '../../components/ReduxForm/Provider/ProviderSearchField'\r\nimport {\r\n    PRICES_CREATE_DIALOG_OPEN,\r\n    PRICES_UPDATE_DIALOG_OPEN,\r\n    PRICES_FILTER_KEY,\r\n    PRICES_FILTER_OPEN,\r\n    PRICES_DELETE_DIALOG_OPEN,\r\n    PricesGridList\r\n} from '../../components/Prices'\r\nimport {\r\n    pricesCreateAction,\r\n    pricesUpdateAction,\r\n    pricesListFetchAction,\r\n    pricesCSVFetchAction,\r\n    pricesDeleteAction,\r\n    pricesItemFetchAction\r\n} from '../../actions/prices'\r\n\r\nimport {openSnackbarAction} from '../../actions/snackbar'\r\n\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['prices', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['prices', 'item', 'loading'])\r\n        const createLoading = _.get(state, ['prices', 'create', 'loading'])\r\n        const updateLoading = _.get(state, ['prices', 'update', 'loading'])\r\n        const list = _.get(state, ['prices', 'list', 'data'])\r\n        const listLoading = _.get(state, ['prices', 'list', 'loading'])\r\n        const csvData = _.get(state, ['prices', 'csv', 'data'])\r\n        const csvLoading = _.get(state, ['prices', 'csv', 'loading'])\r\n        const filterForm = _.get(state, ['form', 'PricesFilterForm'])\r\n        const createForm = _.get(state, ['form', 'PricesCreateForm'])\r\n        const filter = filterHelper(list, pathname, query)\r\n\r\n        return {\r\n            list,\r\n            listLoading,\r\n            detail,\r\n            detailLoading,\r\n            createLoading,\r\n            updateLoading,\r\n            csvData,\r\n            csvLoading,\r\n            filter,\r\n            filterForm,\r\n            createForm\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(pricesListFetchAction(filter))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const pricesId = _.get(nextProps, ['params', 'pricesId'])\r\n        return pricesId && _.get(props, ['params', 'pricesId']) !== pricesId\r\n    }, ({dispatch, params}) => {\r\n        const pricesId = _.toInteger(_.get(params, 'pricesId'))\r\n        pricesId && dispatch(pricesItemFetchAction(pricesId))\r\n    }),\r\n\r\n    withHandlers({\r\n        handleActionEdit: props => () => {\r\n            return null\r\n        },\r\n\r\n        handleOpenCSVDialog: props => () => {\r\n            const {dispatch, setOpenCSVDialog} = props\r\n            setOpenCSVDialog(true)\r\n\r\n            dispatch(pricesCSVFetchAction(props.filter))\r\n        },\r\n\r\n        handleCloseCSVDialog: props => () => {\r\n            const {setOpenCSVDialog} = props\r\n            setOpenCSVDialog(false)\r\n        },\r\n\r\n        handleOpenConfirmDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PRICES_DELETE_DIALOG_OPEN]: true})})\r\n        },\r\n        handleCloseConfirmDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PRICES_DELETE_DIALOG_OPEN]: false})})\r\n        },\r\n        handleSendConfirmDialog: props => () => {\r\n            const {dispatch, location: {pathname}, filter, params} = props\r\n            const detailId = _.toNumber(_.get(params, 'pricesId'))\r\n            dispatch(pricesDeleteAction(detailId))\r\n                .catch(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно отменено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[PRICES_DELETE_DIALOG_OPEN]: false})})\r\n                    dispatch(pricesListFetchAction(filter))\r\n                })\r\n        },\r\n\r\n        handleOpenFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PRICES_FILTER_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PRICES_FILTER_OPEN]: false})})\r\n        },\r\n\r\n        handleClearFilterDialog: props => () => {\r\n            const {location: {pathname}} = props\r\n            hashHistory.push({pathname, query: {}})\r\n        },\r\n\r\n        handleSubmitFilterDialog: props => () => {\r\n            const {filter, filterForm} = props\r\n            const beginFromDate = _.get(filterForm, ['values', 'beginDate', 'fromDate']) || null\r\n            const beginToDate = _.get(filterForm, ['values', 'beginDate', 'toDate']) || null\r\n            const tillFromDate = _.get(filterForm, ['values', 'tillFromDate', 'fromDate']) || null\r\n            const tillToDate = _.get(filterForm, ['values', 'tillToDate', 'toDate']) || null\r\n\r\n            filter.filterBy({\r\n                [PRICES_FILTER_OPEN]: false,\r\n                [PRICES_FILTER_KEY.BEGIN_FROM_DATE]: beginFromDate && beginFromDate.format('YYYY-MM-DD'),\r\n                [PRICES_FILTER_KEY.BEGIN_TO_DATE]: beginToDate && beginToDate.format('YYYY-MM-DD'),\r\n                [PRICES_FILTER_KEY.TILL_FROM_DATE]: tillFromDate && tillFromDate.format('YYYY-MM-DD'),\r\n                [PRICES_FILTER_KEY.TILL_TO_DATE]: tillToDate && tillToDate.format('YYYY-MM-DD')\r\n            })\r\n        },\r\n        handleOpenDeleteDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({\r\n                pathname,\r\n                query: filter.getParams({openDeleteDialog: 'yes'})\r\n            })\r\n        },\r\n\r\n        handleCloseDeleteDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({openDeleteDialog: false})})\r\n        },\r\n\r\n        handleOpenCreateDialog: props => () => {\r\n            const {location: {pathname}, filter, dispatch} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PRICES_CREATE_DIALOG_OPEN]: true})})\r\n            dispatch(setItemAction(null, false))\r\n        },\r\n\r\n        handleCloseCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PRICES_CREATE_DIALOG_OPEN]: false})})\r\n        },\r\n        handleSubmitCreateDialog: props => () => {\r\n            const {location: {pathname}, dispatch, createForm, filter} = props\r\n            return dispatch(pricesCreateAction(_.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[PRICES_CREATE_DIALOG_OPEN]: false})})\r\n                    dispatch(pricesListFetchAction(filter))\r\n                })\r\n        },\r\n\r\n        handleOpenUpdateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PRICES_UPDATE_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseUpdateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PRICES_UPDATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitUpdateDialog: props => () => {\r\n            const {dispatch, createForm, filter} = props\r\n            const pricesId = _.toInteger(_.get(props, ['params', 'pricesId']))\r\n\r\n            return dispatch(pricesUpdateAction(pricesId, _.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(pricesItemFetchAction(pricesId))\r\n                })\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push(filter.createURL({[PRICES_UPDATE_DIALOG_OPEN]: false}))\r\n                    dispatch(pricesListFetchAction(filter))\r\n                })\r\n        },\r\n        handleCloseDetail: props => () => {\r\n            const {filter} = props\r\n            hashHistory.push({pathname: ROUTER.PRICES_LIST_URL, query: filter.getParam()})\r\n        },\r\n\r\n        handleClickDetail: props => (id) => {\r\n            hashHistory.push({pathname: sprintf(ROUTER.PRICES_ITEM_PATH, id), query: {}})\r\n        }\r\n    })\r\n)\r\n\r\nconst PricesList = enhance((props) => {\r\n    const {\r\n        location,\r\n        list,\r\n        listLoading,\r\n        detail,\r\n        detailLoading,\r\n        createLoading,\r\n        updateLoading,\r\n        filter,\r\n        layout,\r\n        params\r\n    } = props\r\n\r\n    const openFilterDialog = toBoolean(_.get(location, ['query', PRICES_FILTER_OPEN]))\r\n    const openCreateDialog = toBoolean(_.get(location, ['query', PRICES_CREATE_DIALOG_OPEN]))\r\n    const openUpdateDialog = toBoolean(_.get(location, ['query', PRICES_UPDATE_DIALOG_OPEN]))\r\n    const openConfirmDialog = toBoolean(_.get(location, ['query', PRICES_DELETE_DIALOG_OPEN]))\r\n    const beginFromDate = filter.getParam(PRICES_FILTER_KEY.BEGIN_FROM_DATE)\r\n    const beginToDate = filter.getParam(PRICES_FILTER_KEY.BEGIN_TO_DATE)\r\n    const tillFromDate = filter.getParam(PRICES_FILTER_KEY.TILL_FROM_DATE)\r\n    const tillToDate = filter.getParam(PRICES_FILTER_KEY.TILL_TO_DATE)\r\n    const detailId = _.get(params, 'pricesId')\r\n\r\n    const actionsDialog = {\r\n        handleActionEdit: props.handleActionEdit,\r\n        handleActionDelete: props.handleOpenDeleteDialog\r\n    }\r\n\r\n    const createDialog = {\r\n        createLoading,\r\n        openCreateDialog,\r\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\r\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\r\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\r\n    }\r\n\r\n    const confirmDialog = {\r\n        openConfirmDialog: openConfirmDialog,\r\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\r\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\r\n        handleSendConfirmDialog: props.handleSendConfirmDialog\r\n    }\r\n    const forUpdateProducts = _.map(_.get(detail, 'products'), (item) => {\r\n        return {\r\n            product: {\r\n                value: {\r\n                    id: _.get(item, ['product', 'id']),\r\n                    name: _.get(item, ['product', 'name']),\r\n                    measurement: _.get(item, ['product', 'measurement'])\r\n                }\r\n            },\r\n            amount: _.get(item, 'amount')\r\n        }\r\n    })\r\n    const updateDialog = {\r\n        initialValues: (() => {\r\n            if (!detail || openCreateDialog) {\r\n                return {}\r\n            }\r\n            return {\r\n                name: _.get(detail, 'name'),\r\n                discount: _.get(detail, 'discount'),\r\n                beginDate: moment(_.get(detail, ['beginDate'])).toDate(),\r\n                tillDate: moment(_.get(detail, ['tillDate'])).toDate(),\r\n                products: forUpdateProducts\r\n            }\r\n        })(),\r\n        updateLoading: updateLoading,\r\n        openUpdateDialog,\r\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\r\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\r\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\r\n    }\r\n\r\n    const filterDialog = {\r\n        initialValues: {\r\n            beginDate: {\r\n                fromDate: beginFromDate && moment(beginFromDate, 'YYYY-MM-DD'),\r\n                toDate: beginToDate && moment(beginToDate, 'YYYY-MM-DD')\r\n            },\r\n            tillDate: {\r\n                fromDate: tillFromDate && moment(tillFromDate, 'YYYY-MM-DD'),\r\n                toDate: tillToDate && moment(tillToDate, 'YYYY-MM-DD')\r\n            }\r\n        },\r\n        filterLoading: false,\r\n        openFilterDialog,\r\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\r\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\r\n        handleClearFilterDialog: props.handleClearFilterDialog,\r\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\r\n    }\r\n\r\n    const csvDialog = {\r\n        csvData: props.csvData,\r\n        csvLoading: props.csvLoading,\r\n        openCSVDialog: props.openCSVDialog,\r\n        handleOpenCSVDialog: props.handleOpenCSVDialog,\r\n        handleCloseCSVDialog: props.handleCloseCSVDialog\r\n    }\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading,\r\n        handleClickDetail: props.handleClickDetail\r\n    }\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        detailLoading,\r\n        handleCloseDetail: props.handleCloseDetail\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <PricesGridList\r\n                filter={filter}\r\n                listData={listData}\r\n                detailData={detailData}\r\n                createDialog={createDialog}\r\n                confirmDialog={confirmDialog}\r\n                updateDialog={updateDialog}\r\n                actionsDialog={actionsDialog}\r\n                filterDialog={filterDialog}\r\n                csvDialog={csvDialog}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default PricesList\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Prices/PricesList.js","import PricesList from './PricesList'\r\n\r\nexport {PricesList}\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Prices/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport {\r\n    PRODUCT_PRICE_UPDATE_DIALOG_OPEN,\r\n    PRODUCT_PRICE_FILTER_KEY,\r\n    PRODUCT_PRICE_FILTER_OPEN,\r\n    ProductPriceGridList\r\n} from '../../components/ProductPrice'\r\nimport {\r\n    productPriceUpdateAction,\r\n    productPriceListFetchAction,\r\n    productPriceItemFetchAction\r\n} from '../../actions/productPrice'\r\n\r\nimport {openSnackbarAction} from '../../actions/snackbar'\r\n\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['productPrice', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['productPrice', 'item', 'loading'])\r\n        const createLoading = _.get(state, ['productPrice', 'create', 'loading'])\r\n        const updateLoading = _.get(state, ['productPrice', 'update', 'loading'])\r\n        const list = _.get(state, ['productPrice', 'list', 'data'])\r\n        const listLoading = _.get(state, ['productPrice', 'list', 'loading'])\r\n        const filterForm = _.get(state, ['form', 'ProductPriceFilterForm'])\r\n        const createForm = _.get(state, ['form', 'ProductPriceCreateForm'])\r\n        const filter = filterHelper(list, pathname, query)\r\n\r\n        return {\r\n            list,\r\n            listLoading,\r\n            detail,\r\n            detailLoading,\r\n            createLoading,\r\n            updateLoading,\r\n            filter,\r\n            filterForm,\r\n            createForm\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(productPriceListFetchAction(filter))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const productPriceId = _.get(nextProps, ['params', 'productPriceId'])\r\n\r\n        return productPriceId && _.get(props, ['params', 'productPriceId']) !== productPriceId\r\n    }, ({dispatch, params}) => {\r\n        const productPriceId = _.toInteger(_.get(params, 'productPriceId'))\r\n        productPriceId && dispatch(productPriceItemFetchAction(productPriceId))\r\n    }),\r\n\r\n    withHandlers({\r\n        handleOpenFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_PRICE_FILTER_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_PRICE_FILTER_OPEN]: false})})\r\n        },\r\n\r\n        handleClearFilterDialog: props => () => {\r\n            const {location: {pathname}} = props\r\n            hashHistory.push({pathname, query: {}})\r\n        },\r\n\r\n        handleSubmitFilterDialog: props => () => {\r\n            const {filter, filterForm} = props\r\n            const type = _.get(filterForm, ['values', 'type', 'value']) || null\r\n            const measurement = _.get(filterForm, ['values', 'measurement', 'value']) || null\r\n            const brand = _.get(filterForm, ['values', 'brand', 'value']) || null\r\n\r\n            filter.filterBy({\r\n                [PRODUCT_PRICE_FILTER_OPEN]: false,\r\n                [PRODUCT_PRICE_FILTER_KEY.TYPE]: type,\r\n                [PRODUCT_PRICE_FILTER_KEY.MEASUREMENT]: measurement,\r\n                [PRODUCT_PRICE_FILTER_KEY.BRAND]: brand\r\n            })\r\n        },\r\n\r\n        handleOpenUpdateDialog: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.PRODUCT_PRICE_ITEM_PATH, id),\r\n                query: filter.getParams({[PRODUCT_PRICE_UPDATE_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseUpdateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_PRICE_UPDATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitUpdateDialog: props => () => {\r\n            const {dispatch, createForm, filter} = props\r\n            const productPriceId = _.toInteger(_.get(props, ['params', 'productPriceId']))\r\n\r\n            return dispatch(productPriceUpdateAction(productPriceId, _.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(productPriceItemFetchAction(productPriceId))\r\n                })\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push(filter.createURL({[PRODUCT_PRICE_UPDATE_DIALOG_OPEN]: false}))\r\n                    dispatch(productPriceListFetchAction(filter))\r\n                })\r\n        },\r\n        handleCloseDetail: props => () => {\r\n            const {filter} = props\r\n            hashHistory.push({pathname: ROUTER.PRODUCT_PRICE_LIST_URL, query: filter.getParam()})\r\n        }\r\n    })\r\n)\r\n\r\nconst ProductPriceList = enhance((props) => {\r\n    const {\r\n        location,\r\n        list,\r\n        listLoading,\r\n        detail,\r\n        detailLoading,\r\n        updateLoading,\r\n        filter,\r\n        layout,\r\n        params\r\n    } = props\r\n\r\n    const openFilterDialog = toBoolean(_.get(location, ['query', PRODUCT_PRICE_FILTER_OPEN]))\r\n    const openUpdateDialog = toBoolean(_.get(location, ['query', PRODUCT_PRICE_UPDATE_DIALOG_OPEN]))\r\n\r\n    const brand = _.toInteger(filter.getParam(PRODUCT_PRICE_FILTER_KEY.BRAND))\r\n    const type = _.toInteger(filter.getParam(PRODUCT_PRICE_FILTER_KEY.TYPE))\r\n    const measurement = _.toInteger(filter.getParam(PRODUCT_PRICE_FILTER_KEY.MEASUREMENT))\r\n    const detailId = _.toInteger(_.get(params, 'productPriceId'))\r\n\r\n    const actionsDialog = {\r\n        handleActionEdit: props.handleActionEdit,\r\n        handleActionDelete: props.handleOpenDeleteDialog\r\n    }\r\n\r\n    const updateDialog = {\r\n        initialValues: (() => {\r\n            if (!detail) {\r\n                return {}\r\n            }\r\n\r\n            return {\r\n                price: _.get(detail, 'price')\r\n            }\r\n        })(),\r\n        updateLoading: detailLoading || updateLoading,\r\n        openUpdateDialog,\r\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\r\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\r\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\r\n    }\r\n\r\n    const filterDialog = {\r\n        initialValues: {\r\n            brand: {value: brand},\r\n            type: {value: type},\r\n            measurement: {value: measurement}\r\n        },\r\n        filterLoading: false,\r\n        openFilterDialog,\r\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\r\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\r\n        handleClearFilterDialog: props.handleClearFilterDialog,\r\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\r\n    }\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading\r\n    }\r\n\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        detailLoading,\r\n        handleCloseDetail: props.handleCloseDetail\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <ProductPriceGridList\r\n                filter={filter}\r\n                listData={listData}\r\n                detailData={detailData}\r\n                updateDialog={updateDialog}\r\n                actionsDialog={actionsDialog}\r\n                filterDialog={filterDialog}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default ProductPriceList\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/ProductPrice/ProductPriceList.js","import ProductPriceList from './ProductPriceList'\n\nexport {ProductPriceList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/ProductPrice/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport {\r\n    PRODUCT_TYPE_CREATE_DIALOG_OPEN,\r\n    PRODUCT_TYPE_UPDATE_DIALOG_OPEN,\r\n    PRODUCT_TYPE_DELETE_DIALOG_OPEN,\r\n    ProductTypeGridList\r\n} from '../../components/ProductType'\r\nimport {\r\n    productTypeCreateAction,\r\n    productTypeUpdateAction,\r\n    productTypeListFetchAction,\r\n    productTypeDeleteAction,\r\n    productTypeItemFetchAction\r\n} from '../../actions/productType'\r\nimport {openSnackbarAction} from '../../actions/snackbar'\r\n\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['productType', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['productType', 'item', 'loading'])\r\n        const createLoading = _.get(state, ['productType', 'create', 'loading'])\r\n        const updateLoading = _.get(state, ['productType', 'update', 'loading'])\r\n        const list = _.get(state, ['productType', 'list', 'data'])\r\n        const listLoading = _.get(state, ['productType', 'list', 'loading'])\r\n        const createForm = _.get(state, ['form', 'ProductTypeCreateForm'])\r\n        const filter = filterHelper(list, pathname, query)\r\n\r\n        return {\r\n            list,\r\n            listLoading,\r\n            detail,\r\n            detailLoading,\r\n            createLoading,\r\n            updateLoading,\r\n            filter,\r\n            createForm\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(productTypeListFetchAction(filter))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const productTypeId = _.get(nextProps, ['params', 'productTypeId'])\r\n\r\n        return productTypeId && _.get(props, ['params', 'productTypeId']) !== productTypeId\r\n    }, ({dispatch, params}) => {\r\n        const productTypeId = _.toInteger(_.get(params, 'productTypeId'))\r\n        productTypeId && dispatch(productTypeItemFetchAction(productTypeId))\r\n    }),\r\n\r\n    withHandlers({\r\n        handleActionEdit: props => () => {\r\n            return null\r\n        },\r\n\r\n        handleOpenDeleteDialog: props => () => {\r\n            return null\r\n        },\r\n\r\n        handleOpenConfirmDialog: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.PRODUCT_TYPE_ITEM_PATH, id),\r\n                query: filter.getParams({[PRODUCT_TYPE_DELETE_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseConfirmDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_TYPE_DELETE_DIALOG_OPEN]: false})})\r\n        },\r\n        handleSendConfirmDialog: props => () => {\r\n            const {dispatch, detail, filter, location: {pathname}} = props\r\n            dispatch(productTypeDeleteAction(detail.id))\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[PRODUCT_TYPE_DELETE_DIALOG_OPEN]: false})})\r\n                    dispatch(productTypeListFetchAction(filter))\r\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\r\n                })\r\n                .catch(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\r\n                })\r\n        },\r\n\r\n        handleOpenCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_TYPE_CREATE_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_TYPE_CREATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitCreateDialog: props => () => {\r\n            const {dispatch, createForm, filter, location: {pathname}} = props\r\n\r\n            return dispatch(productTypeCreateAction(_.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[PRODUCT_TYPE_CREATE_DIALOG_OPEN]: false})})\r\n                    dispatch(productTypeListFetchAction(filter))\r\n                })\r\n        },\r\n\r\n        handleOpenUpdateDialog: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.PRODUCT_TYPE_ITEM_PATH, id),\r\n                query: filter.getParams({[PRODUCT_TYPE_UPDATE_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseUpdateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_TYPE_UPDATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitUpdateDialog: props => () => {\r\n            const {dispatch, createForm, filter} = props\r\n            const productTypeId = _.toInteger(_.get(props, ['params', 'productTypeId']))\r\n\r\n            return dispatch(productTypeUpdateAction(productTypeId, _.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(productTypeItemFetchAction(productTypeId))\r\n                })\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push(filter.createURL({[PRODUCT_TYPE_UPDATE_DIALOG_OPEN]: false}))\r\n                    dispatch(productTypeListFetchAction(filter))\r\n                })\r\n        }\r\n    })\r\n)\r\n\r\nconst ProductTypeList = enhance((props) => {\r\n    const {\r\n        location,\r\n        list,\r\n        listLoading,\r\n        detail,\r\n        detailLoading,\r\n        createLoading,\r\n        updateLoading,\r\n        filter,\r\n        layout,\r\n        params\r\n    } = props\r\n\r\n    const openCreateDialog = toBoolean(_.get(location, ['query', PRODUCT_TYPE_CREATE_DIALOG_OPEN]))\r\n    const openUpdateDialog = toBoolean(_.get(location, ['query', PRODUCT_TYPE_UPDATE_DIALOG_OPEN]))\r\n    const openConfirmDialog = toBoolean(_.get(location, ['query', PRODUCT_TYPE_DELETE_DIALOG_OPEN]))\r\n\r\n    const detailId = _.toInteger(_.get(params, 'productTypeId'))\r\n\r\n    const actionsDialog = {\r\n        handleActionEdit: props.handleActionEdit,\r\n        handleActionDelete: props.handleOpenDeleteDialog\r\n    }\r\n\r\n    const createDialog = {\r\n        createLoading,\r\n        openCreateDialog,\r\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\r\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\r\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\r\n    }\r\n\r\n    const confirmDialog = {\r\n        confirmLoading: detailLoading,\r\n        openConfirmDialog: openConfirmDialog,\r\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\r\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\r\n        handleSendConfirmDialog: props.handleSendConfirmDialog\r\n    }\r\n\r\n    const updateDialog = {\r\n        initialValues: (() => {\r\n            if (!detail || openCreateDialog) {\r\n                return {}\r\n            }\r\n\r\n            return {\r\n                name: _.get(detail, 'name')\r\n            }\r\n        })(),\r\n        updateLoading: detailLoading || updateLoading,\r\n        openUpdateDialog,\r\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\r\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\r\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\r\n    }\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading\r\n    }\r\n\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        detailLoading\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <ProductTypeGridList\r\n                filter={filter}\r\n                listData={listData}\r\n                detailData={detailData}\r\n                createDialog={createDialog}\r\n                confirmDialog={confirmDialog}\r\n                updateDialog={updateDialog}\r\n                actionsDialog={actionsDialog}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default ProductTypeList\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/ProductType/ProductTypeList.js","import ProductTypeList from './ProductTypeList'\n\nexport {ProductTypeList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/ProductType/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport {\r\n    PRODUCT_CREATE_DIALOG_OPEN,\r\n    PRODUCT_SHOW_PHOTO_OPEN,\r\n    PRODUCT_UPDATE_DIALOG_OPEN,\r\n    PRODUCT_DELETE_DIALOG_OPEN,\r\n    PRODUCT_FILTER_KEY,\r\n    PRODUCT_FILTER_OPEN,\r\n    ProductGridList\r\n} from '../../components/Product'\r\nimport {\r\n    productCreateAction,\r\n    productUpdateAction,\r\n    productListFetchAction,\r\n    productDeleteAction,\r\n    productItemFetchAction\r\n} from '../../actions/product'\r\n\r\nimport {openSnackbarAction} from '../../actions/snackbar'\r\n\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['product', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['product', 'item', 'loading'])\r\n        const createLoading = _.get(state, ['product', 'create', 'loading'])\r\n        const showBigImgLoading = _.get(state, ['product', 'item', 'loading'])\r\n        const updateLoading = _.get(state, ['product', 'update', 'loading'])\r\n        const list = _.get(state, ['product', 'list', 'data'])\r\n        const listLoading = _.get(state, ['product', 'list', 'loading'])\r\n        const filterForm = _.get(state, ['form', 'ProductFilterForm'])\r\n        const createForm = _.get(state, ['form', 'ProductCreateForm'])\r\n        const filter = filterHelper(list, pathname, query)\r\n\r\n        return {\r\n            list,\r\n            listLoading,\r\n            detail,\r\n            detailLoading,\r\n            createLoading,\r\n            showBigImgLoading,\r\n            updateLoading,\r\n            filter,\r\n            filterForm,\r\n            createForm\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(productListFetchAction(filter))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const productId = _.get(nextProps, ['params', 'productId'])\r\n\r\n        return productId && _.get(props, ['params', 'productId']) !== productId\r\n    }, ({dispatch, params, nextProps}) => {\r\n        const productId = _.toInteger(_.get(params, 'productId'))\r\n        productId && !_.get(nextProps, PRODUCT_DELETE_DIALOG_OPEN) && dispatch(productItemFetchAction(productId))\r\n    }),\r\n\r\n    withHandlers({\r\n        handleActionEdit: props => () => {\r\n            return null\r\n        },\r\n\r\n        handleOpenConfirmDialog: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.PRODUCT_ITEM_PATH, id),\r\n                query: filter.getParams({[PRODUCT_DELETE_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseConfirmDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_DELETE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSendConfirmDialog: props => () => {\r\n            const {dispatch, detail, filter, location: {pathname}} = props\r\n            dispatch(productDeleteAction(detail.id))\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[PRODUCT_DELETE_DIALOG_OPEN]: false})})\r\n                    dispatch(productListFetchAction(filter))\r\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\r\n                })\r\n                .catch(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\r\n                })\r\n        },\r\n\r\n        handleOpenFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_FILTER_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_FILTER_OPEN]: false})})\r\n        },\r\n\r\n        handleClearFilterDialog: props => () => {\r\n            const {location: {pathname}} = props\r\n            hashHistory.push({pathname, query: {}})\r\n        },\r\n\r\n        handleSubmitFilterDialog: props => () => {\r\n            const {filter, filterForm} = props\r\n            const type = _.get(filterForm, ['values', 'type', 'value']) || null\r\n            const measurement = _.get(filterForm, ['values', 'measurement', 'value']) || null\r\n            const brand = _.get(filterForm, ['values', 'brand', 'value']) || null\r\n\r\n            filter.filterBy({\r\n                [PRODUCT_FILTER_OPEN]: false,\r\n                [PRODUCT_FILTER_KEY.TYPE]: type,\r\n                [PRODUCT_FILTER_KEY.MEASUREMENT]: measurement,\r\n                [PRODUCT_FILTER_KEY.BRAND]: brand\r\n            })\r\n        },\r\n        handleOpenDeleteDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({\r\n                pathname,\r\n                query: filter.getParams({openDeleteDialog: 'yes'})\r\n            })\r\n        },\r\n\r\n        handleCloseDeleteDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({openDeleteDialog: false})})\r\n        },\r\n\r\n        handleOpenCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_CREATE_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_CREATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleOpenShowBigImg: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.PRODUCT_ITEM_PATH, id),\r\n                query: filter.getParams({[PRODUCT_SHOW_PHOTO_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseShowBigImg: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_SHOW_PHOTO_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitCreateDialog: props => () => {\r\n            const {dispatch, createForm, filter, location: {pathname}} = props\r\n\r\n            return dispatch(productCreateAction(_.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[PRODUCT_CREATE_DIALOG_OPEN]: false})})\r\n                    dispatch(productListFetchAction(filter))\r\n                })\r\n        },\r\n\r\n        handleOpenUpdateDialog: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.PRODUCT_ITEM_PATH, id),\r\n                query: filter.getParams({[PRODUCT_UPDATE_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseUpdateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_UPDATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitUpdateDialog: props => () => {\r\n            const {dispatch, createForm, filter} = props\r\n            const productId = _.toInteger(_.get(props, ['params', 'productId']))\r\n\r\n            return dispatch(productUpdateAction(productId, _.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(productItemFetchAction(productId))\r\n                })\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push(filter.createURL({[PRODUCT_UPDATE_DIALOG_OPEN]: false}))\r\n                    dispatch(productListFetchAction(filter))\r\n                })\r\n        }\r\n    })\r\n)\r\n\r\nconst ProductList = enhance((props) => {\r\n    const {\r\n        location,\r\n        list,\r\n        listLoading,\r\n        detail,\r\n        detailLoading,\r\n        createLoading,\r\n        showBigImgLoading,\r\n        updateLoading,\r\n        filter,\r\n        layout,\r\n        params\r\n    } = props\r\n\r\n    const openFilterDialog = toBoolean(_.get(location, ['query', PRODUCT_FILTER_OPEN]))\r\n    const openCreateDialog = toBoolean(_.get(location, ['query', PRODUCT_CREATE_DIALOG_OPEN]))\r\n    const openShowBigImg = toBoolean(_.get(location, ['query', PRODUCT_SHOW_PHOTO_OPEN]))\r\n    const openUpdateDialog = toBoolean(_.get(location, ['query', PRODUCT_UPDATE_DIALOG_OPEN]))\r\n    const openConfirmDialog = toBoolean(_.get(location, ['query', PRODUCT_DELETE_DIALOG_OPEN]))\r\n    const brand = _.toInteger(filter.getParam(PRODUCT_FILTER_KEY.BRAND))\r\n    const type = _.toInteger(filter.getParam(PRODUCT_FILTER_KEY.TYPE))\r\n    const measurement = _.toInteger(filter.getParam(PRODUCT_FILTER_KEY.MEASUREMENT))\r\n    const detailId = _.toInteger(_.get(params, 'productId'))\r\n\r\n    const actionsDialog = {\r\n        handleActionEdit: props.handleActionEdit,\r\n        handleActionDelete: props.handleOpenDeleteDialog\r\n    }\r\n\r\n    const createDialog = {\r\n        createLoading,\r\n        openCreateDialog,\r\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\r\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\r\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\r\n    }\r\n    const showBigImg = {\r\n        initialValues: (() => {\r\n            if (!detail) {\r\n                return {}\r\n            }\r\n\r\n            return {\r\n                image: _.get(detail, 'image')\r\n            }\r\n        })(),\r\n        showBigImgLoading,\r\n        openShowBigImg,\r\n        handleOpenShowBigImg: props.handleOpenShowBigImg,\r\n        handleCloseShowBigImg: props.handleCloseShowBigImg\r\n    }\r\n    const confirmDialog = {\r\n        confirmLoading: detailLoading,\r\n        openConfirmDialog: openConfirmDialog,\r\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\r\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\r\n        handleSendConfirmDialog: props.handleSendConfirmDialog\r\n    }\r\n\r\n    const updateDialog = {\r\n        initialValues: (() => {\r\n            if (!detail || openCreateDialog) {\r\n                return {}\r\n            }\r\n\r\n            return {\r\n                name: _.get(detail, 'name'),\r\n                type: {\r\n                    value: _.get(detail, ['type', 'id'])\r\n                },\r\n                brand: {\r\n                    value: _.get(detail, ['brand', 'id'])\r\n                },\r\n                measurement: {\r\n                    value: _.get(detail, ['measurement', 'id'])\r\n                },\r\n                image: _.get(detail, 'image')\r\n            }\r\n        })(),\r\n        updateLoading: detailLoading || updateLoading,\r\n        openUpdateDialog,\r\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\r\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\r\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\r\n    }\r\n\r\n    const filterDialog = {\r\n        initialValues: {\r\n            brand: {value: brand},\r\n            type: {value: type},\r\n            measurement: {value: measurement}\r\n        },\r\n        filterLoading: false,\r\n        openFilterDialog,\r\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\r\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\r\n        handleClearFilterDialog: props.handleClearFilterDialog,\r\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\r\n    }\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading\r\n    }\r\n\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        detailLoading\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <ProductGridList\r\n                filter={filter}\r\n                listData={listData}\r\n                detailData={detailData}\r\n                createDialog={createDialog}\r\n                showBigImg={showBigImg}\r\n                confirmDialog={confirmDialog}\r\n                updateDialog={updateDialog}\r\n                actionsDialog={actionsDialog}\r\n                filterDialog={filterDialog}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default ProductList\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Product/ProductList.js","import ProductList from './ProductList'\n\nexport {ProductList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Product/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withState, withHandlers} from 'recompose'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport {\r\n    PROVIDER_CREATE_DIALOG_OPEN,\r\n    PROVIDER_UPDATE_DIALOG_OPEN,\r\n    ProviderGridList\r\n} from '../../components/Provider'\r\nimport {\r\n    providerCreateAction,\r\n    providerUpdateAction,\r\n    providerListFetchAction,\r\n    providerDeleteAction,\r\n    providerItemFetchAction\r\n} from '../../actions/provider'\r\nimport {openSnackbarAction} from '../../actions/snackbar'\r\n\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['provider', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['provider', 'item', 'loading'])\r\n        const createLoading = _.get(state, ['provider', 'create', 'loading'])\r\n        const updateLoading = _.get(state, ['provider', 'update', 'loading'])\r\n        const list = _.get(state, ['provider', 'list', 'data'])\r\n        const listLoading = _.get(state, ['provider', 'list', 'loading'])\r\n        const createForm = _.get(state, ['form', 'ProviderCreateForm'])\r\n        const filter = filterHelper(list, pathname, query)\r\n\r\n        return {\r\n            list,\r\n            listLoading,\r\n            detail,\r\n            detailLoading,\r\n            createLoading,\r\n            updateLoading,\r\n            filter,\r\n            createForm\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(providerListFetchAction(filter))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const providerId = _.get(nextProps, ['params', 'providerId'])\r\n        return providerId && _.get(props, ['params', 'providerId']) !== providerId\r\n    }, ({dispatch, params}) => {\r\n        const providerId = _.toInteger(_.get(params, 'providerId'))\r\n        providerId && dispatch(providerItemFetchAction(providerId))\r\n    }),\r\n\r\n    withState('openConfirmDialog', 'setOpenConfirmDialog', false),\r\n\r\n    withHandlers({\r\n        handleActionEdit: props => () => {\r\n            return null\r\n        },\r\n\r\n        handleOpenConfirmDialog: props => () => {\r\n            const {setOpenConfirmDialog} = props\r\n            setOpenConfirmDialog(true)\r\n        },\r\n\r\n        handleCloseConfirmDialog: props => () => {\r\n            const {setOpenConfirmDialog} = props\r\n            setOpenConfirmDialog(false)\r\n        },\r\n        handleSendConfirmDialog: props => () => {\r\n            const {dispatch, detail, setOpenConfirmDialog, filter} = props\r\n            dispatch(providerDeleteAction(detail.id))\r\n                .then(() => {\r\n                    setOpenConfirmDialog(false)\r\n                    dispatch(providerListFetchAction(filter))\r\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\r\n                })\r\n                .catch(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\r\n                })\r\n        },\r\n\r\n        handleOpenDeleteDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({\r\n                pathname,\r\n                query: filter.getParams({openDeleteDialog: 'yes'})\r\n            })\r\n        },\r\n\r\n        handleCloseDeleteDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({openDeleteDialog: false})})\r\n        },\r\n\r\n        handleOpenCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PROVIDER_CREATE_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PROVIDER_CREATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitCreateDialog: props => () => {\r\n            const {dispatch, createForm, filter, location: {pathname}} = props\r\n\r\n            return dispatch(providerCreateAction(_.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[PROVIDER_CREATE_DIALOG_OPEN]: false})})\r\n                    dispatch(providerListFetchAction(filter))\r\n                })\r\n        },\r\n\r\n        handleOpenUpdateDialog: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.PROVIDER_ITEM_PATH, id),\r\n                query: filter.getParams({[PROVIDER_UPDATE_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseUpdateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[PROVIDER_UPDATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitUpdateDialog: props => () => {\r\n            const {dispatch, createForm, filter} = props\r\n            const providerId = _.toInteger(_.get(props, ['params', 'providerId']))\r\n\r\n            return dispatch(providerUpdateAction(providerId, _.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(providerItemFetchAction(providerId))\r\n                })\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push(filter.createURL({[PROVIDER_UPDATE_DIALOG_OPEN]: false}))\r\n                    dispatch(providerListFetchAction(filter))\r\n                })\r\n        },\r\n\r\n        handleCloseDetail: props => () => {\r\n            const {filter} = props\r\n            hashHistory.push({pathname: ROUTER.PROVIDER_LIST_URL, query: filter.getParam()})\r\n        }\r\n    })\r\n)\r\n\r\nconst ProviderList = enhance((props) => {\r\n    const {\r\n        location,\r\n        list,\r\n        listLoading,\r\n        detail,\r\n        detailLoading,\r\n        createLoading,\r\n        updateLoading,\r\n        filter,\r\n        layout,\r\n        params\r\n    } = props\r\n\r\n    const openCreateDialog = toBoolean(_.get(location, ['query', PROVIDER_CREATE_DIALOG_OPEN]))\r\n    const openUpdateDialog = toBoolean(_.get(location, ['query', PROVIDER_UPDATE_DIALOG_OPEN]))\r\n    const detailId = _.toInteger(_.get(params, 'providerId'))\r\n\r\n    const actionsDialog = {\r\n        handleActionEdit: props.handleActionEdit,\r\n        handleActionDelete: props.handleOpenDeleteDialog\r\n    }\r\n\r\n    const createDialog = {\r\n        createLoading,\r\n        openCreateDialog,\r\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\r\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\r\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\r\n    }\r\n\r\n    const confirmDialog = {\r\n        openConfirmDialog: props.openConfirmDialog,\r\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\r\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\r\n        handleSendConfirmDialog: props.handleSendConfirmDialog\r\n    }\r\n\r\n    const updateDialog = {\r\n        initialValues: (() => {\r\n            if (!detail || openCreateDialog) {\r\n                return {\r\n                    contacts: [{}]\r\n                }\r\n            }\r\n\r\n            const contacts = _(detail).get('contacts').map((contact) => {\r\n                return {\r\n                    name: _.get(contact, 'name'),\r\n                    email: _.get(contact, 'email'),\r\n                    phone: _.get(contact, 'phone')\r\n                }\r\n            })\r\n\r\n            return {\r\n                name: _.get(detail, 'name'),\r\n                address: _.get(detail, 'address'),\r\n                contacts: _.union(contacts, [{}])\r\n            }\r\n        })(),\r\n        updateLoading: detailLoading || updateLoading,\r\n        openUpdateDialog,\r\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\r\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\r\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\r\n    }\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading\r\n    }\r\n\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        detailLoading,\r\n        handleCloseDetail: props.handleCloseDetail\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <ProviderGridList\r\n                filter={filter}\r\n                listData={listData}\r\n                detailData={detailData}\r\n                createDialog={createDialog}\r\n                confirmDialog={confirmDialog}\r\n                updateDialog={updateDialog}\r\n                actionsDialog={actionsDialog}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default ProviderList\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Provider/ProviderList.js","import ProviderList from './ProviderList'\n\nexport {ProviderList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Provider/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport {\r\n    RemainderGridList,\r\n    REMAINDER_FILTER_OPEN,\r\n    REMAINDER_FILTER_KEY\r\n} from '../../components/Remainder'\r\nimport {\r\n    remainderListFetchAction,\r\n    remainderItemFetchAction\r\n} from '../../actions/remainder'\r\n\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['remainder', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['remainder', 'item', 'loading'])\r\n        const list = _.get(state, ['remainder', 'list', 'data'])\r\n        const listLoading = _.get(state, ['remainder', 'list', 'loading'])\r\n        const filterForm = _.get(state, ['form', 'RemainderFilterForm'])\r\n        const filter = filterHelper(list, pathname, query)\r\n\r\n        return {\r\n            list,\r\n            listLoading,\r\n            detail,\r\n            detailLoading,\r\n            filter,\r\n            filterForm\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(remainderListFetchAction(filter))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const remainderId = _.get(nextProps, ['params', 'remainderId'])\r\n        return remainderId && _.get(props, ['params', 'remainderId']) !== remainderId\r\n    }, ({dispatch, params, filter}) => {\r\n        const remainderId = _.toInteger(_.get(params, 'remainderId'))\r\n        remainderId && dispatch(remainderItemFetchAction(remainderId, filter))\r\n    }),\r\n    withHandlers({\r\n        handleOpenFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[REMAINDER_FILTER_OPEN]: true})})\r\n        },\r\n        handleCloseFilterDialog: props => () => {\r\n            const {location: {pathname}} = props\r\n            hashHistory.push({pathname})\r\n        },\r\n        handleSubmitFilterDialog: props => () => {\r\n            const {filter, filterForm} = props\r\n            const biggerThan = _.get(filterForm, ['values', 'biggerThan']) || null\r\n            const lessThan = _.get(filterForm, ['values', 'lessThan']) || null\r\n            const productType = _.get(filterForm, ['values', 'productType', 'value']) || null\r\n            const stock = _.get(filterForm, ['values', 'stock', 'value']) || null\r\n            const defective = _.get(filterForm, ['values', 'defective']) || null\r\n            const outDated = _.get(filterForm, ['values', 'outDated']) || null\r\n            const current = _.get(filterForm, ['values', 'current']) || null\r\n\r\n            filter.filterBy({\r\n                [REMAINDER_FILTER_OPEN]: false,\r\n                [REMAINDER_FILTER_KEY.PRODUCT_TYPE]: productType,\r\n                [REMAINDER_FILTER_KEY.STOCK]: stock,\r\n                [REMAINDER_FILTER_KEY.BIGGER_THAN]: biggerThan,\r\n                [REMAINDER_FILTER_KEY.LESS_THAN]: lessThan,\r\n                [REMAINDER_FILTER_KEY.DEFECTIVE]: defective,\r\n                [REMAINDER_FILTER_KEY.OUT_DATED]: outDated,\r\n                [REMAINDER_FILTER_KEY.CURRENT]: current\r\n            })\r\n        },\r\n        handleCloseDetail: props => () => {\r\n            const {filter} = props\r\n            hashHistory.push({pathname: ROUTER.REMAINDER_LIST_URL, query: filter.getParam()})\r\n        }\r\n    })\r\n)\r\n\r\nconst RemainderList = enhance((props) => {\r\n    const {\r\n        location,\r\n        list,\r\n        listLoading,\r\n        detail,\r\n        detailLoading,\r\n        filter,\r\n        layout,\r\n        params\r\n    } = props\r\n\r\n    const openFilterDialog = toBoolean(_.get(location, ['query', REMAINDER_FILTER_OPEN]))\r\n\r\n    const detailId = _.toInteger(_.get(params, 'remainderId'))\r\n    const filterDialog = {\r\n        openFilterDialog: openFilterDialog,\r\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\r\n        handleCloseFilterDialog: props.handleCloseFilterDialog\r\n    }\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading\r\n    }\r\n\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        detailLoading,\r\n        handleCloseDetail: props.handleCloseDetail\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <RemainderGridList\r\n                filter={filter}\r\n                listData={listData}\r\n                detailData={detailData}\r\n                filterDialog={filterDialog}\r\n                handleCloseDetail={detailData.handleCloseDetail}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default RemainderList\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Remainder/RemainderList.js","import RemainderList from './RemainderList'\r\n\r\nexport {RemainderList}\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Remainder/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport {\r\n    SHIFT_CREATE_DIALOG_OPEN,\r\n    SHIFT_UPDATE_DIALOG_OPEN,\r\n    SHIFT_DELETE_DIALOG_OPEN,\r\n    ShiftGridList\r\n} from '../../components/Shift'\r\nimport {\r\n    shiftCreateAction,\r\n    shiftUpdateAction,\r\n    shiftListFetchAction,\r\n    shiftDeleteAction,\r\n    shiftItemFetchAction\r\n} from '../../actions/shift'\r\nimport {openSnackbarAction} from '../../actions/snackbar'\r\n\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['shift', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['shift', 'item', 'loading'])\r\n        const createLoading = _.get(state, ['shift', 'create', 'loading'])\r\n        const updateLoading = _.get(state, ['shift', 'update', 'loading'])\r\n        const list = _.get(state, ['shift', 'list', 'data'])\r\n        const listLoading = _.get(state, ['shift', 'list', 'loading'])\r\n        const createForm = _.get(state, ['form', 'ShiftCreateForm'])\r\n        const filter = filterHelper(list, pathname, query)\r\n\r\n        return {\r\n            list,\r\n            listLoading,\r\n            detail,\r\n            detailLoading,\r\n            createLoading,\r\n            updateLoading,\r\n            filter,\r\n            createForm\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(shiftListFetchAction(filter))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const shiftId = _.get(nextProps, ['params', 'shiftId'])\r\n        return shiftId && _.get(props, ['params', 'shiftId']) !== shiftId\r\n    }, ({dispatch, params}) => {\r\n        const shiftId = _.toInteger(_.get(params, 'shiftId'))\r\n        shiftId && dispatch(shiftItemFetchAction(shiftId))\r\n    }),\r\n\r\n    withHandlers({\r\n        handleActionEdit: props => () => {\r\n            return null\r\n        },\r\n        handleOpenDeleteDialog: props => () => {\r\n            return null\r\n        },\r\n\r\n        handleOpenConfirmDialog: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.SHIFT_ITEM_PATH, id),\r\n                query: filter.getParams({[SHIFT_DELETE_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseConfirmDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[SHIFT_DELETE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSendConfirmDialog: props => () => {\r\n            const {dispatch, detail, filter, location: {pathname}} = props\r\n            dispatch(shiftDeleteAction(detail.id))\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[SHIFT_DELETE_DIALOG_OPEN]: false})})\r\n                    dispatch(shiftListFetchAction(filter))\r\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\r\n                })\r\n                .catch(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\r\n                })\r\n        },\r\n\r\n        handleOpenCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[SHIFT_CREATE_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[SHIFT_CREATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitCreateDialog: props => () => {\r\n            const {dispatch, createForm, filter, location: {pathname}} = props\r\n\r\n            return dispatch(shiftCreateAction(_.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[SHIFT_CREATE_DIALOG_OPEN]: false})})\r\n                    dispatch(shiftListFetchAction(filter))\r\n                })\r\n        },\r\n\r\n        handleOpenUpdateDialog: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.SHIFT_ITEM_PATH, id),\r\n                query: filter.getParams({[SHIFT_UPDATE_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseUpdateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[SHIFT_UPDATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitUpdateDialog: props => () => {\r\n            const {dispatch, createForm, filter} = props\r\n            const shiftId = _.toInteger(_.get(props, ['params', 'shiftId']))\r\n\r\n            return dispatch(shiftUpdateAction(shiftId, _.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(shiftItemFetchAction(shiftId))\r\n                })\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push(filter.createURL({[SHIFT_UPDATE_DIALOG_OPEN]: false}))\r\n                    dispatch(shiftListFetchAction(filter))\r\n                })\r\n        }\r\n    })\r\n)\r\n\r\nconst ShiftList = enhance((props) => {\r\n    const {\r\n        location,\r\n        list,\r\n        listLoading,\r\n        detail,\r\n        detailLoading,\r\n        createLoading,\r\n        updateLoading,\r\n        filter,\r\n        layout,\r\n        params\r\n    } = props\r\n\r\n    const openCreateDialog = toBoolean(_.get(location, ['query', SHIFT_CREATE_DIALOG_OPEN]))\r\n    const openUpdateDialog = toBoolean(_.get(location, ['query', SHIFT_UPDATE_DIALOG_OPEN]))\r\n    const openConfirmDialog = toBoolean(_.get(location, ['query', SHIFT_DELETE_DIALOG_OPEN]))\r\n\r\n    const detailId = _.toInteger(_.get(params, 'shiftId'))\r\n\r\n    const actionsDialog = {\r\n        handleActionEdit: props.handleActionEdit,\r\n        handleActionDelete: props.handleOpenDeleteDialog\r\n    }\r\n\r\n    const createDialog = {\r\n        createLoading,\r\n        openCreateDialog,\r\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\r\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\r\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\r\n    }\r\n\r\n    const confirmDialog = {\r\n        confirmLoading: detailLoading,\r\n        openConfirmDialog: openConfirmDialog,\r\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\r\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\r\n        handleSendConfirmDialog: props.handleSendConfirmDialog\r\n    }\r\n    const updateDialog = {\r\n        initialValues: (() => {\r\n            if (!detail || openCreateDialog) {\r\n                return {}\r\n            }\r\n            return {\r\n                name: _.get(detail, 'name'),\r\n                beginTime: {\r\n                    value: _.get(detail, 'beginTime')\r\n                },\r\n                endTime: {\r\n                    value: _.get(detail, 'endTime')\r\n                }\r\n            }\r\n        })(),\r\n        updateLoading: detailLoading || updateLoading,\r\n        openUpdateDialog,\r\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\r\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\r\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\r\n    }\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading\r\n    }\r\n\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        detailLoading\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <ShiftGridList\r\n                filter={filter}\r\n                listData={listData}\r\n                detailData={detailData}\r\n                createDialog={createDialog}\r\n                confirmDialog={confirmDialog}\r\n                updateDialog={updateDialog}\r\n                actionsDialog={actionsDialog}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default ShiftList\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Shift/ShiftList.js","import ShiftList from './ShiftList'\n\nexport {ShiftList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Shift/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withState, withHandlers} from 'recompose'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport {DELETE_DIALOG_OPEN} from '../../components/DeleteDialog'\r\nimport {\r\n    SHOP_CREATE_DIALOG_OPEN,\r\n    SHOP_UPDATE_DIALOG_OPEN,\r\n    SHOP_FILTER_KEY,\r\n    SHOP_FILTER_OPEN,\r\n    SHOP_MAP_DIALOG_OPEN,\r\n    SHOP_UPDATE_MAP_DIALOG_OPEN,\r\n    ADD_PHOTO_DIALOG_OPEN,\r\n    SHOP_SLIDESHOW_DIALOG_OPEN,\r\n    ShopGridList\r\n} from '../../components/Shop'\r\nimport {\r\n    shopCreateAction,\r\n    imageCreateAction,\r\n    shopUpdateAction,\r\n    shopDeleteAction,\r\n    shopItemFetchAction,\r\n    shopListFetchAction,\r\n    slideShowFetchAction\r\n} from '../../actions/shop'\r\nimport {openSnackbarAction} from '../../actions/snackbar'\r\n\r\nconst ZERO = 0\r\nconst ONE = 1\r\nconst MINUS_ONE = -1\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['shop', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['shop', 'item', 'loading'])\r\n        const createLoading = _.get(state, ['shop', 'create', 'loading'])\r\n        const updateLoading = _.get(state, ['shop', 'update', 'loading'])\r\n        const list = _.get(state, ['shop', 'list', 'data'])\r\n        const listLoading = _.get(state, ['shop', 'list', 'loading'])\r\n        const filterForm = _.get(state, ['form', 'ShopFilterForm'])\r\n        const createForm = _.get(state, ['form', 'ShopCreateForm'])\r\n        const mapForm = _.get(state, ['form', 'ShopMapForm'])\r\n        const addPhotoForm = _.get(state, ['form', 'ShopAddPhotoForm', 'values'])\r\n        const mapLocation = _.get(state, ['form', 'ShopMapForm', 'values', 'latLng'])\r\n        const image = _.get(state, ['form', 'ShopAddPhotoForm', 'values', 'image'])\r\n        const gallery = _.get(state, ['shop', 'gallery', 'data'])\r\n        const galleryLoading = _.get(state, ['shop', 'gallery', 'loading'])\r\n        const filter = filterHelper(list, pathname, query)\r\n\r\n        return {\r\n            list,\r\n            listLoading,\r\n            detail,\r\n            detailLoading,\r\n            createLoading,\r\n            updateLoading,\r\n            filter,\r\n            filterForm,\r\n            createForm,\r\n            mapForm,\r\n            mapLocation,\r\n            addPhotoForm,\r\n            image,\r\n            gallery,\r\n            galleryLoading\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(shopListFetchAction(filter))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const prevId = _.get(props, ['params', 'shopId'])\r\n        const nextId = _.get(nextProps, ['params', 'shopId'])\r\n        return prevId !== nextId\r\n    }, ({dispatch, params}) => {\r\n        const shopId = _.toInteger(_.get(params, 'shopId'))\r\n        if (shopId > ZERO) {\r\n            dispatch(shopItemFetchAction(shopId))\r\n        }\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const prevId = _.toNumber(_.get(props, ['location', 'query', 'openImagesDialog']))\r\n        const nextId = _.toNumber(_.get(nextProps, ['location', 'query', 'openImagesDialog']))\r\n        return prevId !== nextId && nextId > MINUS_ONE\r\n    }, ({dispatch, location, detail}) => {\r\n        const images = _.get(detail, 'images')\r\n        const index = _.toNumber(_.get(location, ['query', 'openImagesDialog']))\r\n        const imgId = _.toInteger(_.get(_.nth(images, index), 'id'))\r\n        if (imgId > ZERO) {\r\n            dispatch(slideShowFetchAction(imgId))\r\n        }\r\n    }),\r\n\r\n    withState('openConfirmDialog', 'setOpenConfirmDialog', false),\r\n\r\n    withHandlers({\r\n        handleOpenConfirmDialog: props => () => {\r\n            const {setOpenConfirmDialog} = props\r\n            setOpenConfirmDialog(true)\r\n        },\r\n\r\n        handleCloseConfirmDialog: props => () => {\r\n            const {setOpenConfirmDialog} = props\r\n            setOpenConfirmDialog(false)\r\n        },\r\n        handleSendConfirmDialog: props => () => {\r\n            const {dispatch, detail, filter, setOpenConfirmDialog} = props\r\n            dispatch(shopDeleteAction(detail.id))\r\n                .then(() => {\r\n                    setOpenConfirmDialog(false)\r\n                    dispatch(shopListFetchAction(filter))\r\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\r\n                })\r\n                .catch(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\r\n                })\r\n        },\r\n\r\n        handleOpenFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_FILTER_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_FILTER_OPEN]: false})})\r\n        },\r\n\r\n        handleClearFilterDialog: props => () => {\r\n            const {location: {pathname}} = props\r\n            hashHistory.push({pathname, query: {}})\r\n        },\r\n        handleSubmitFilterDialog: props => () => {\r\n            const {filter, filterForm} = props\r\n            const client = _.get(filterForm, ['values', 'client', 'value']) || null\r\n            const marketType = _.get(filterForm, ['values', 'marketType', 'value']) || null\r\n\r\n            filter.filterBy({\r\n                [SHOP_FILTER_OPEN]: false,\r\n                [SHOP_FILTER_KEY.CLIENT]: client,\r\n                [SHOP_FILTER_KEY.MARKET_TYPE]: marketType\r\n            })\r\n        },\r\n        handleOpenCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_CREATE_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_CREATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitCreateDialog: props => () => {\r\n            const {location: {pathname}, dispatch, createForm, mapLocation, filter} = props\r\n\r\n            return dispatch(shopCreateAction(_.get(createForm, ['values']), mapLocation))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[SHOP_CREATE_DIALOG_OPEN]: false})})\r\n                    dispatch(shopListFetchAction(filter))\r\n                })\r\n        },\r\n\r\n        handleOpenSlideShowDialog: props => (index) => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_SLIDESHOW_DIALOG_OPEN]: index})})\r\n        },\r\n\r\n        handleCloseSlideShowDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_SLIDESHOW_DIALOG_OPEN]: MINUS_ONE})})\r\n        },\r\n\r\n        handlePrevImage: props => (index, last) => {\r\n            const {location: {pathname}, filter} = props\r\n            let currentIndex = index\r\n            let prevIndex = currentIndex - ONE\r\n            if (prevIndex === MINUS_ONE) {\r\n                currentIndex = last - ONE\r\n                prevIndex = currentIndex\r\n            }\r\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_SLIDESHOW_DIALOG_OPEN]: prevIndex})})\r\n        },\r\n        handleNextImage: props => (index, last) => {\r\n            const {location: {pathname}, filter} = props\r\n            let currentIndex = index\r\n            let nextIndex = currentIndex + ONE\r\n            if (nextIndex === last) {\r\n                currentIndex = ZERO\r\n                nextIndex = currentIndex\r\n            }\r\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_SLIDESHOW_DIALOG_OPEN]: nextIndex})})\r\n        },\r\n\r\n        handleOpenAddPhotoDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[ADD_PHOTO_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseAddPhotoDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[ADD_PHOTO_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitAddPhotoDialog: props => () => {\r\n            const {location: {pathname}, dispatch, addPhotoForm, detail, filter} = props\r\n            const shopId = _.get(detail, 'id')\r\n            const imageId = _.get(addPhotoForm, 'image')\r\n\r\n            return dispatch(imageCreateAction(imageId, shopId))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Фотография добавлена'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[ADD_PHOTO_DIALOG_OPEN]: false})})\r\n                    dispatch(shopItemFetchAction(shopId))\r\n                })\r\n        },\r\n\r\n        handleOpenMapDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_MAP_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseMapDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_MAP_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitMapDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_MAP_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleOpenMapUpdateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_UPDATE_MAP_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseMapUpdateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_UPDATE_MAP_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitMapUpdateDialog: props => () => {\r\n            const {dispatch, mapForm, filter} = props\r\n            const shopId = _.toInteger(_.get(props, ['params', 'shopId']))\r\n\r\n            return dispatch(shopUpdateAction(shopId, _.get(mapForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(shopItemFetchAction(shopId))\r\n                })\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push(filter.createURL({[SHOP_UPDATE_MAP_DIALOG_OPEN]: false}))\r\n                })\r\n        },\r\n\r\n        handleOpenUpdateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_UPDATE_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseUpdateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_UPDATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitUpdateDialog: props => () => {\r\n            const {dispatch, createForm, filter} = props\r\n            const shopId = _.toInteger(_.get(props, ['params', 'shopId']))\r\n\r\n            return dispatch(shopUpdateAction(shopId, _.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(shopItemFetchAction(shopId))\r\n                })\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push(filter.createURL({[SHOP_UPDATE_DIALOG_OPEN]: false}))\r\n                })\r\n        },\r\n\r\n        handleCloseDetail: props => () => {\r\n            const {filter} = props\r\n            hashHistory.push({pathname: ROUTER.SHOP_LIST_URL, query: filter.getParam()})\r\n        }\r\n    })\r\n)\r\n\r\nconst ShopList = enhance((props) => {\r\n    const {\r\n        location,\r\n        list,\r\n        listLoading,\r\n        detail,\r\n        detailLoading,\r\n        createLoading,\r\n        updateLoading,\r\n        filter,\r\n        layout,\r\n        params,\r\n        mapLocation,\r\n        gallery,\r\n        galleryLoading\r\n    } = props\r\n\r\n    const openFilterDialog = toBoolean(_.get(location, ['query', SHOP_FILTER_OPEN]))\r\n    const openCreateDialog = toBoolean(_.get(location, ['query', SHOP_CREATE_DIALOG_OPEN]))\r\n    const openMapDialog = toBoolean(_.get(location, ['query', SHOP_MAP_DIALOG_OPEN]))\r\n    const openUpdateMapDialog = toBoolean(_.get(location, ['query', SHOP_UPDATE_MAP_DIALOG_OPEN]))\r\n    const openUpdateDialog = toBoolean(_.get(location, ['query', SHOP_UPDATE_DIALOG_OPEN]))\r\n    const openDeleteDialog = toBoolean(_.get(location, ['query', DELETE_DIALOG_OPEN]))\r\n    const openAddPhotoDialog = toBoolean(_.get(location, ['query', ADD_PHOTO_DIALOG_OPEN]))\r\n    const openSlideShowDialog = _.toInteger(_.get(location, ['query', SHOP_SLIDESHOW_DIALOG_OPEN]) || MINUS_ONE) > MINUS_ONE\r\n    const client = _.toInteger(filter.getParam(SHOP_FILTER_KEY.CLIENT))\r\n    const marketType = filter.getParam(SHOP_FILTER_KEY.MARKET_TYPE)\r\n    const detailId = _.toInteger(_.get(params, 'shopId'))\r\n\r\n    const createDialog = {\r\n        createLoading,\r\n        openCreateDialog,\r\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\r\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\r\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\r\n    }\r\n\r\n    const addPhotoDialog = {\r\n        openAddPhotoDialog,\r\n        handleOpenAddPhotoDialog: props.handleOpenAddPhotoDialog,\r\n        handleCloseAddPhotoDialog: props.handleCloseAddPhotoDialog,\r\n        handleSubmitAddPhotoDialog: props.handleSubmitAddPhotoDialog\r\n    }\r\n\r\n    const slideShowDialog = {\r\n        gallery,\r\n        galleryLoading,\r\n        openSlideShowDialog,\r\n        handleOpenSlideShowDialog: props.handleOpenSlideShowDialog,\r\n        handleCloseSlideShowDialog: props.handleCloseSlideShowDialog\r\n    }\r\n\r\n    const mapDialog = {\r\n        openMapDialog,\r\n        handleOpenMapDialog: props.handleOpenMapDialog,\r\n        handleCloseMapDialog: props.handleCloseMapDialog,\r\n        handleSubmitMapDialog: props.handleSubmitMapDialog\r\n    }\r\n\r\n    const deleteDialog = {\r\n        openDeleteDialog,\r\n        handleOpenDeleteDialog: props.handleOpenDeleteDialog,\r\n        handleCloseDeleteDialog: props.handleCloseDeleteDialog\r\n    }\r\n\r\n    const confirmDialog = {\r\n        openConfirmDialog: props.openConfirmDialog,\r\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\r\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\r\n        handleSendConfirmDialog: props.handleSendConfirmDialog\r\n    }\r\n\r\n    const navigationButtons = {\r\n        handlePrevImage: props.handlePrevImage,\r\n        handleNextImage: props.handleNextImage\r\n\r\n    }\r\n    const updateDialog = {\r\n        initialValues: (() => {\r\n            const NOT_ACTIVE = 2\r\n            if (!detail || openCreateDialog) {\r\n                return {}\r\n            }\r\n            const status = _.get(detail, 'status')\r\n            let isActive = 1\r\n            if (status === false) {\r\n                isActive = NOT_ACTIVE\r\n            }\r\n            return {\r\n                name: _.get(detail, 'name'),\r\n                address: _.get(detail, 'address'),\r\n                client: {\r\n                    value: _.get(detail, ['client', 'id']),\r\n                    text: _.get(detail, ['client', 'name'])\r\n                },\r\n                contactName: _.get(detail, 'contactName'),\r\n                frequency: {\r\n                    value: _.toNumber(_.get(detail, 'visitFrequency'))\r\n                },\r\n                guide: _.get(detail, 'guide'),\r\n                phone: _.get(detail, 'phone'),\r\n                latLng: {\r\n                    lat: _.get(detail, ['location', 'coordinates', '0']),\r\n                    lng: _.get(detail, ['location', 'coordinates', '1'])\r\n                },\r\n                marketType: {\r\n                    value: _.get(detail, ['marketType', 'id']),\r\n                    text: _.get(detail, ['marketType', 'name'])\r\n                },\r\n                status: {\r\n                    value: isActive\r\n                }\r\n            }\r\n        })(),\r\n        updateLoading: detailLoading || updateLoading,\r\n        openUpdateDialog,\r\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\r\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\r\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\r\n    }\r\n\r\n    const updateMapDialog = {\r\n        initialValues: (() => {\r\n            if (!mapLocation) {\r\n                return {}\r\n            }\r\n            return {\r\n                latLng: {\r\n                    lat: _.get(mapLocation, 'lat'),\r\n                    lng: _.get(mapLocation, 'lng')\r\n                }\r\n            }\r\n        })(),\r\n        openUpdateMapDialog,\r\n        handleOpenMapUpdateDialog: props.handleOpenMapUpdateDialog,\r\n        handleCloseMapUpdateDialog: props.handleCloseMapUpdateDialog,\r\n        handleSubmitMapUpdateDialog: props.handleSubmitMapUpdateDialog\r\n    }\r\n\r\n    const filterDialog = {\r\n        initialValues: {\r\n            category: {\r\n                value: client\r\n            },\r\n            marketType: {\r\n                value: marketType\r\n            }\r\n        },\r\n        filterLoading: false,\r\n        openFilterDialog,\r\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\r\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\r\n        handleClearFilterDialog: props.handleClearFilterDialog,\r\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\r\n    }\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading\r\n    }\r\n\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        detailLoading,\r\n        handleCloseDetail: props.handleCloseDetail\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <ShopGridList\r\n                filter={filter}\r\n                listData={listData}\r\n                detailData={detailData}\r\n                createDialog={createDialog}\r\n                mapDialog={mapDialog}\r\n                addPhotoDialog={addPhotoDialog}\r\n                slideShowDialog={slideShowDialog}\r\n                updateMapDialog={updateMapDialog}\r\n                deleteDialog={deleteDialog}\r\n                confirmDialog={confirmDialog}\r\n                updateDialog={updateDialog}\r\n                filterDialog={filterDialog}\r\n                mapLocation={mapLocation}\r\n                navigationButtons={navigationButtons}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default ShopList\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Shop/ShopList.js","import ShopList from './ShopList'\n\nexport {ShopList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Shop/index.js","import React from 'react'\nimport _ from 'lodash'\nimport {compose} from 'recompose'\nimport {hashHistory} from 'react-router'\nimport {connect} from 'react-redux'\nimport injectSheet from 'react-jss'\nimport {signInAction} from '../../actions/signIn'\nimport SignInForm from '../../components/SignInForm'\nimport {getConfig} from '../../actions/primeryCurrency'\nimport * as ROUTES from '../../constants/routes'\n\nconst enhance = compose(\n    injectSheet({\n        container: {\n            height: '100%',\n            display: 'flex !important',\n            justifyContent: 'center',\n            flexDirection: 'column'\n        }\n    }),\n    connect(state => {\n        return {\n            formValues: _.get(state, ['form', 'SignInForm', 'values']),\n            loading: _.get(state, ['signIn', 'loading']),\n            config: _.get(state, ['config', 'primaryCurrency', 'data'])\n        }\n    })\n)\n\nconst SignIn = enhance((props) => {\n    const {classes, dispatch, location, loading, formValues} = props\n\n    const onSubmit = () => {\n        return dispatch(signInAction(formValues))\n            .then(() => {\n                const redirectUrl = _.get(location, ['query', 'redirect']) || ROUTES.DASHBOARD_URL\n                dispatch(getConfig())\n                hashHistory.push(redirectUrl)\n            })\n    }\n\n    return (\n        <div className={classes.container}>\n            <SignInForm loading={loading} onSubmit={onSubmit} />\n        </div>\n    )\n})\n\nexport default SignIn\n\n\n\n// WEBPACK FOOTER //\n// src/containers/SignIn/SignIn.js","import SignIn from './SignIn'\n\nexport default SignIn\n\n\n\n// WEBPACK FOOTER //\n// src/containers/SignIn/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withState, withHandlers} from 'recompose'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport {\r\n    ORDER_DETAIL_OPEN,\r\n    StatCashboxGridList\r\n} from '../../components/StatCashbox'\r\nimport {\r\n    statCashboxListFetchAction,\r\n    statCashboxItemFetchAction\r\n} from '../../actions/statCashbox'\r\nimport {orderListFetchAction, orderItemFetchAction} from '../../actions/order'\r\n\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['statCashbox', 'item', 'data'])\r\n        const orderDetail = _.get(state, ['order', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['statCashbox', 'item', 'loading'])\r\n        const createLoading = _.get(state, ['statCashbox', 'create', 'loading'])\r\n        const updateLoading = _.get(state, ['statCashbox', 'update', 'loading'])\r\n        const list = _.get(state, ['statCashbox', 'list', 'data'])\r\n        const orderList = _.get(state, ['order', 'list', 'data'])\r\n        const orderLoading = _.get(state, ['order', 'list', 'loading'])\r\n        const listLoading = _.get(state, ['statCashbox', 'list', 'loading'])\r\n        const createForm = _.get(state, ['form', 'StatCashboxCreateForm'])\r\n        const orderId = _.toInteger(_.get(['location', 'query', 'orderId']))\r\n\r\n        const filter = filterHelper(list, pathname, query)\r\n\r\n        return {\r\n            list,\r\n            listLoading,\r\n            orderList,\r\n            orderLoading,\r\n            detail,\r\n            orderDetail,\r\n            orderId,\r\n            detailLoading,\r\n            createLoading,\r\n            updateLoading,\r\n            filter,\r\n            createForm\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(statCashboxListFetchAction(filter))\r\n        dispatch(orderListFetchAction(filter))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const statCashboxId = _.get(nextProps, ['params', 'statCashboxId'])\r\n        return statCashboxId && _.get(props, ['params', 'statCashboxId']) !== statCashboxId\r\n    }, ({dispatch, params, filter}) => {\r\n        const statCashboxId = _.toInteger(_.get(params, 'statCashboxId'))\r\n        statCashboxId && dispatch(statCashboxItemFetchAction(statCashboxId))\r\n        dispatch(orderListFetchAction(filter))\r\n    }),\r\n\r\n    withState('openCSVDialog', 'setOpenCSVDialog', false),\r\n\r\n    withHandlers({\r\n        handleOrderClick: props => (id) => {\r\n            const {filter, location: {pathname}, dispatch} = props\r\n            hashHistory.push({\r\n                pathname: pathname,\r\n                query: filter.getParams({[ORDER_DETAIL_OPEN]: true, 'orderId': id})\r\n            })\r\n            dispatch(orderItemFetchAction(id))\r\n        },\r\n\r\n        handleOrderDetailClose: props => () => {\r\n            const {filter, location: {pathname}} = props\r\n            hashHistory.push({\r\n                pathname: pathname,\r\n                query: filter.getParams({[ORDER_DETAIL_OPEN]: false, 'orderId': -1})\r\n            })\r\n        }\r\n    })\r\n)\r\n\r\nconst StatCashbox = enhance((props) => {\r\n    const {\r\n        location,\r\n        list,\r\n        orderList,\r\n        orderLoading,\r\n        orderDetail,\r\n        listLoading,\r\n        detail,\r\n        detailLoading,\r\n        filter,\r\n        layout,\r\n        params\r\n    } = props\r\n\r\n    const orderDetailOpen = toBoolean(_.get(location, ['query', ORDER_DETAIL_OPEN]))\r\n\r\n    const detailId = _.toInteger(_.get(params, 'statCashboxId'))\r\n\r\n    const actionsDialog = {\r\n        handleActionEdit: props.handleActionEdit,\r\n        handleActionDelete: props.handleOpenDeleteDialog\r\n    }\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading\r\n    }\r\n\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        detailLoading\r\n    }\r\n\r\n    const orderData = {\r\n        orderList,\r\n        orderDetail,\r\n        orderLoading,\r\n        orderDetailOpen: orderDetailOpen,\r\n        handleOrderDetailClose: props.handleOrderDetailClose,\r\n        handleOrderClick: props.handleOrderClick\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <StatCashboxGridList\r\n                filter={filter}\r\n                listData={listData}\r\n                detailData={detailData}\r\n                actionsDialog={actionsDialog}\r\n                orderData={orderData}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default StatCashbox\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/StatCashbox/StatCashbox.js","import StatCashbox from './StatCashbox'\n\nexport {StatCashbox}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/StatCashbox/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\r\nimport filterHelper from '../../helpers/filter'\r\nimport moment from 'moment'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport {\r\n    STATDEBTORS_FILTER_OPEN,\r\n    STATDEBTORS_FILTER_KEY,\r\n    ORDER_DETAIL_OPEN,\r\n    StatDebtorsGridList\r\n} from '../../components/StatDebtors'\r\nimport {\r\n    statDebtorsListFetchAction,\r\n    statDebtorsOrderListFetchAction,\r\n    statDebtorsSumFetchAction,\r\n    getDocumentAction\r\n} from '../../actions/statDebtors'\r\nimport {orderItemFetchAction} from '../../actions/order'\r\nimport * as ROUTER from '../../constants/routes'\r\n\r\nconst ONE = 1\r\n\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const list = _.get(state, ['statDebtors', 'list', 'data'])\r\n        const listLoading = _.get(state, ['statDebtors', 'list', 'loading'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['statDebtors', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['statDebtors', 'orderList', 'loading'])\r\n        const orderList = _.get(state, ['statDebtors', 'orderList', 'data'])\r\n        const orderDetail = _.get(state, ['order', 'item', 'data'])\r\n        const orderDetailLoading = _.get(state, ['order', 'item', 'loading'])\r\n        const orderLoading = _.get(state, ['statDebtors', 'orderList', 'loading'])\r\n        const createLoading = _.get(state, ['statDebtors', 'create', 'loading'])\r\n        const updateLoading = _.get(state, ['statDebtors', 'update', 'loading'])\r\n        const createForm = _.get(state, ['form', 'StatDebtorsCreateForm'])\r\n        const orderId = _.toInteger(_.get(['location', 'query', 'orderId']))\r\n        const sumList = _.get(state, ['statDebtors', 'sum', 'data'])\r\n        const sumLoading = _.get(state, ['statDebtors', 'sum', 'loading'])\r\n        const tab = _.toInteger(_.get(props, ['location', 'query', 'tab']) || ONE)\r\n\r\n        const filter = filterHelper(list, pathname, query)\r\n        const filterForm = _.get(state, ['form', 'StatDebtorsFilterForm'])\r\n\r\n        return {\r\n            list,\r\n            listLoading,\r\n            orderList,\r\n            orderLoading,\r\n            detail,\r\n            orderDetail,\r\n            orderDetailLoading,\r\n            orderId,\r\n            detailLoading,\r\n            createLoading,\r\n            updateLoading,\r\n            filter,\r\n            filterForm,\r\n            createForm,\r\n            sumList,\r\n            tab,\r\n            sumLoading\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return (props.filter.filterRequest() !== nextProps.filter.filterRequest() || props.tab !== nextProps.tab)\r\n    }, ({dispatch, filter, tab}) => {\r\n        if (tab === ONE) dispatch(statDebtorsListFetchAction(filter))\r\n        else dispatch(statDebtorsOrderListFetchAction(true))\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return !nextProps.sumList && _.isNil(nextProps.sumLoading)\r\n    }, ({dispatch}) => {\r\n        dispatch(statDebtorsSumFetchAction())\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const statDebtorsId = _.get(nextProps, ['params', 'statDebtorsId'])\r\n        return statDebtorsId && _.get(props, ['params', 'statDebtorsId']) !== statDebtorsId\r\n    }, ({dispatch, params}) => {\r\n        const statDebtorsId = _.toInteger(_.get(params, 'statDebtorsId'))\r\n        statDebtorsId && dispatch(statDebtorsOrderListFetchAction(statDebtorsId))\r\n    }),\r\n\r\n    withHandlers({\r\n        handleOpenFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[STATDEBTORS_FILTER_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[STATDEBTORS_FILTER_OPEN]: false})})\r\n        },\r\n\r\n        handleClearFilterDialog: props => () => {\r\n            const {location: {pathname}} = props\r\n            hashHistory.push({pathname, query: {}})\r\n        },\r\n\r\n        handleSubmitFilterDialog: props => () => {\r\n            const {filter, filterForm} = props\r\n            const fromDate = _.get(filterForm, ['values', 'date', 'fromDate']) || null\r\n            const toDate = _.get(filterForm, ['values', 'date', 'toDate']) || null\r\n\r\n            filter.filterBy({\r\n                [STATDEBTORS_FILTER_OPEN]: false,\r\n                [STATDEBTORS_FILTER_KEY.FROM_DATE]: fromDate && fromDate.format('YYYY-MM-DD'),\r\n                [STATDEBTORS_FILTER_KEY.TO_DATE]: toDate && toDate.format('YYYY-MM-DD')\r\n            })\r\n        },\r\n\r\n        handleOrderClick: props => (id) => {\r\n            const {filter, location: {pathname}, dispatch} = props\r\n            hashHistory.push({\r\n                pathname: pathname,\r\n                query: filter.getParams({[ORDER_DETAIL_OPEN]: true, 'orderId': id})\r\n            })\r\n            dispatch(orderItemFetchAction(id))\r\n        },\r\n\r\n        handleOrderDetailClose: props => () => {\r\n            const {filter, location: {pathname}} = props\r\n            hashHistory.push({\r\n                pathname: pathname,\r\n                query: filter.getParams({[ORDER_DETAIL_OPEN]: false, 'orderId': -1})\r\n            })\r\n        },\r\n        handleClickTab: props => (tab) => {\r\n            const {filter, location: {pathname}} = props\r\n            hashHistory.push({\r\n                pathname: pathname,\r\n                query: filter.getParams({'tab': tab})\r\n            })\r\n        },\r\n        handleGetDocument: props => () => {\r\n            const {dispatch, filter} = props\r\n            return dispatch(getDocumentAction(filter))\r\n        },\r\n        handleCloseDetail: props => () => {\r\n            const {filter} = props\r\n            hashHistory.push({pathname: ROUTER.STATDEBTORS_LIST_URL, query: filter.getParam()})\r\n        }\r\n    })\r\n)\r\n\r\nconst StatDebtors = enhance((props) => {\r\n    const {\r\n        location,\r\n        list,\r\n        orderList,\r\n        orderDetail,\r\n        orderDetailLoading,\r\n        listLoading,\r\n        detail,\r\n        detailLoading,\r\n        sumLoading,\r\n        sumList,\r\n        filter,\r\n        layout,\r\n        params\r\n    } = props\r\n\r\n    const openFilterDialog = toBoolean(_.get(location, ['query', STATDEBTORS_FILTER_OPEN]))\r\n    const orderDetailOpen = toBoolean(_.get(location, ['query', ORDER_DETAIL_OPEN]))\r\n    const tab = _.toInteger(_.get(location, ['query', 'tab'])) || ONE\r\n\r\n    const detailId = _.toInteger(_.get(params, 'statDebtorsId'))\r\n\r\n    const fromDate = filter.getParam(STATDEBTORS_FILTER_KEY.FROM_DATE)\r\n    const toDate = filter.getParam(STATDEBTORS_FILTER_KEY.TO_DATE)\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading\r\n    }\r\n\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        detailLoading,\r\n        handleCloseDetail: props.handleCloseDetail\r\n    }\r\n\r\n    const filterDialog = {\r\n        initialValues: {\r\n            date: {\r\n                fromDate: fromDate && moment(fromDate, 'YYYY-MM-DD'),\r\n                toDate: toDate && moment(toDate, 'YYYY-MM-DD')\r\n            }\r\n        },\r\n        filterLoading: false,\r\n        openFilterDialog,\r\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\r\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\r\n        handleClearFilterDialog: props.handleClearFilterDialog,\r\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\r\n    }\r\n\r\n    const orderData = {\r\n        orderList,\r\n        orderDetail,\r\n        detailLoading: orderDetailLoading,\r\n        orderDetailOpen: orderDetailOpen,\r\n        handleOrderDetailClose: props.handleOrderDetailClose,\r\n        handleOrderClick: props.handleOrderClick\r\n    }\r\n\r\n    const sumData = {\r\n        data: sumList,\r\n        loading: sumLoading\r\n    }\r\n\r\n    const tabData = {\r\n        tab: _.toInteger(tab),\r\n        handleClick: props.handleClickTab\r\n    }\r\n\r\n    const getDocument = {\r\n        handleGetDocument: props.handleGetDocument\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <StatDebtorsGridList\r\n                filter={filter}\r\n                filterDialog={filterDialog}\r\n                listData={listData}\r\n                sumData={sumData}\r\n                detailData={detailData}\r\n                orderData={orderData}\r\n                tabData={tabData}\r\n                getDocument={getDocument}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default StatDebtors\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/StatDebtors/StatDebtors.js","import StatDebtors from './StatDebtors'\n\nexport {StatDebtors}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/StatDebtors/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport {\r\n    StatManufactureGridList,\r\n    STAT_MANUFACTURE_CREATE_DIALOG_OPEN\r\n} from '../../components/StatManufacture'\r\nimport {\r\n    statManufactureListFetchAction,\r\n    statManufactureItemFetchAction\r\n} from '../../actions/statManufacture'\r\nimport {orderListFetchAction} from '../../actions/order'\r\n\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['statManufacture', 'item', 'data'])\r\n        const orderDetail = _.get(state, ['order', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['statManufacture', 'item', 'loading'])\r\n        const createLoading = _.get(state, ['statManufacture', 'create', 'loading'])\r\n        const updateLoading = _.get(state, ['statManufacture', 'update', 'loading'])\r\n        const list = _.get(state, ['statManufacture', 'list', 'data'])\r\n        const orderList = _.get(state, ['order', 'list', 'data'])\r\n        const orderLoading = _.get(state, ['order', 'list', 'loading'])\r\n        const listLoading = _.get(state, ['statManufacture', 'list', 'loading'])\r\n        const createForm = _.get(state, ['form', 'StatManufactureCreateForm'])\r\n        const orderId = _.toInteger(_.get(['location', 'query', 'orderId']))\r\n\r\n        const filter = filterHelper(list, pathname, query)\r\n\r\n        return {\r\n            list,\r\n            listLoading,\r\n            orderList,\r\n            orderLoading,\r\n            detail,\r\n            orderDetail,\r\n            orderId,\r\n            detailLoading,\r\n            createLoading,\r\n            updateLoading,\r\n            filter,\r\n            createForm\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(statManufactureListFetchAction(filter))\r\n        dispatch(orderListFetchAction(filter))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const statManufactureId = _.get(nextProps, ['params', 'statManufactureId'])\r\n        return statManufactureId && _.get(props, ['params', 'statManufactureId']) !== statManufactureId\r\n    }, ({dispatch, params, filter}) => {\r\n        const statManufactureId = _.toInteger(_.get(params, 'statManufactureId'))\r\n        statManufactureId && dispatch(statManufactureItemFetchAction(statManufactureId))\r\n        dispatch(orderListFetchAction(filter))\r\n    }),\r\n\r\n    withHandlers({\r\n        handleOpenCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[STAT_MANUFACTURE_CREATE_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[STAT_MANUFACTURE_CREATE_DIALOG_OPEN]: false})})\r\n        },\r\n        handleClickItem: props => (id) => {\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.STAT_MANUFACTURE_ITEM_PATH, id)\r\n            })\r\n        }\r\n    })\r\n)\r\n\r\nconst StatManufacture = enhance((props) => {\r\n    const {\r\n        location,\r\n        list,\r\n        listLoading,\r\n        detail,\r\n        detailLoading,\r\n        createLoading,\r\n        filter,\r\n        layout,\r\n        params\r\n    } = props\r\n\r\n    const openCreateDialog = toBoolean(_.get(location, ['query', STAT_MANUFACTURE_CREATE_DIALOG_OPEN]))\r\n\r\n    const detailId = _.toInteger(_.get(params, 'statManufactureId'))\r\n\r\n    const actionsDialog = {\r\n        handleActionEdit: props.handleActionEdit,\r\n        handleActionDelete: props.handleOpenDeleteDialog\r\n    }\r\n\r\n    const createDialog = {\r\n        createLoading,\r\n        openCreateDialog,\r\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\r\n        handleCloseCreateDialog: props.handleCloseCreateDialog\r\n    }\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading,\r\n        handleClickItem: props.handleClickItem\r\n    }\r\n\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        detailLoading\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <StatManufactureGridList\r\n                filter={filter}\r\n                createDialog={createDialog}\r\n                listData={listData}\r\n                detailData={detailData}\r\n                actionsDialog={actionsDialog}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default StatManufacture\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/StatManufacture/StatManufacture.js","import StatManufacture from './StatManufacture'\n\nexport {StatManufacture}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/StatManufacture/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\nimport moment from 'moment'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport {\r\n    STATSTOCK_FILTER_OPEN,\r\n    STATSTOCK_FILTER_KEY,\r\n    StatStockGridList\r\n} from '../../components/StatStock'\r\nimport {\r\n    statStockListFetchAction,\r\n    statStockDataFetchAction,\r\n    getDocumentAction\r\n} from '../../actions/statStock'\r\nimport {\r\n    remainderStockListFetchAction\r\n} from '../../actions/remainderStock'\r\nimport {\r\n    transactionStockListFetchAction\r\n} from '../../actions/transactionStock'\r\nconst ONE = 1\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['statStock', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['statStock', 'item', 'loading'])\r\n        const createLoading = _.get(state, ['statStock', 'create', 'loading'])\r\n        const updateLoading = _.get(state, ['statStock', 'update', 'loading'])\r\n        const list = _.get(state, ['statStock', 'list', 'data'])\r\n        const remainderList = _.get(state, ['remainderStock', 'list', 'data'])\r\n        const remainderLoading = _.get(state, ['remainderStock', 'list', 'loading'])\r\n        const transactionList = _.get(state, ['transactionStock', 'list', 'data'])\r\n        const transactionLoading = _.get(state, ['transactionStock', 'list', 'loading'])\r\n        const listLoading = _.get(state, ['statStock', 'list', 'loading'])\r\n        const createForm = _.get(state, ['form', 'StatStockCreateForm'])\r\n        const tab = _.toInteger(_.get(props, ['location', 'query', 'tab']) || ONE)\r\n        const statStockData = _.get(state, ['statStock', 'statStockData', 'data'])\r\n        const statStockDataLoading = _.get(state, ['statStock', 'statStockData', 'loading'])\r\n        const filter = filterHelper(tab === ONE ? remainderList : transactionList, pathname, query)\r\n        const filterForm = _.get(state, ['form', 'StatStockFilterForm'])\r\n        return {\r\n            list,\r\n            remainderList,\r\n            remainderLoading,\r\n            transactionList,\r\n            transactionLoading,\r\n            listLoading,\r\n            detail,\r\n            detailLoading,\r\n            createLoading,\r\n            updateLoading,\r\n            filter,\r\n            filterForm,\r\n            tab,\r\n            createForm,\r\n            statStockData,\r\n            statStockDataLoading\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        const currentStat = _.toInteger(_.get(props, ['params', 'statStockId']))\r\n        const statStockId = _.toInteger(_.get(nextProps, ['params', 'statStockId']))\r\n\r\n        return (\r\n            (props.filter.filterRequest() !== nextProps.filter.filterRequest()) || currentStat !== statStockId ||\r\n            (_.get(props, 'tab') !== _.get(nextProps, 'tab'))\r\n        )\r\n    }, ({dispatch, filter, params, tab}) => {\r\n        const statStockId = _.toInteger(_.get(params, 'statStockId'))\r\n        if (_.toInteger(tab) === ONE) dispatch(remainderStockListFetchAction(filter, statStockId))\r\n        else dispatch(transactionStockListFetchAction(filter, statStockId))\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return !nextProps.listLoading && _.isNil(nextProps.list)\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(statStockListFetchAction(filter))\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        const statStockId = _.get(nextProps, ['params', 'statStockId'])\r\n        return statStockId && _.get(props, ['params', 'statStockId']) !== statStockId\r\n    }, ({dispatch, params}) => {\r\n        const statStockId = _.toInteger(_.get(params, 'statStockId'))\r\n        dispatch(statStockDataFetchAction(statStockId))\r\n    }),\r\n\r\n    withHandlers({\r\n        handleOpenFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[STATSTOCK_FILTER_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[STATSTOCK_FILTER_OPEN]: false})})\r\n        },\r\n\r\n        handleClearFilterDialog: props => () => {\r\n            const {location: {pathname}} = props\r\n            const tab = _.get(props, ['location', 'query', 'tab'])\r\n            hashHistory.push({pathname, query: {'tab': tab}})\r\n        },\r\n\r\n        handleSubmitFilterDialog: props => () => {\r\n            const {filter, filterForm} = props\r\n            const tab = _.toInteger(_.get(props, ['location', 'query', 'tab']))\r\n            const fromDate = _.get(filterForm, ['values', 'date', 'fromDate']) || null\r\n            const toDate = _.get(filterForm, ['values', 'date', 'toDate']) || null\r\n            const brand = _.get(filterForm, ['values', 'brand', 'value']) || null\r\n            const type = _.get(filterForm, ['values', 'type', 'value']) || null\r\n            if (tab === ONE) {\r\n                filter.filterBy({\r\n                    [STATSTOCK_FILTER_OPEN]: false,\r\n                    [STATSTOCK_FILTER_KEY.TYPE]: type,\r\n                    [STATSTOCK_FILTER_KEY.BRAND]: brand\r\n                })\r\n            } else {\r\n                filter.filterBy({\r\n                    [STATSTOCK_FILTER_OPEN]: false,\r\n                    [STATSTOCK_FILTER_KEY.FROM_DATE]: fromDate && fromDate.format('YYYY-MM-DD'),\r\n                    [STATSTOCK_FILTER_KEY.TO_DATE]: toDate && toDate.format('YYYY-MM-DD'),\r\n                    [STATSTOCK_FILTER_KEY.BRAND]: brand,\r\n                    [STATSTOCK_FILTER_KEY.TYPE]: type\r\n                })\r\n            }\r\n        },\r\n\r\n        handleClickTapChange: props => (id) => {\r\n            const {filter, location: {pathname}} = props\r\n            hashHistory.push({pathname, query: filter.getParams({'tab': id})})\r\n        },\r\n        handleClickStock: props => (id) => {\r\n            const {filter, dispatch} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.STATSTOCK_ITEM_PATH, id),\r\n                query: filter.getParams()\r\n            })\r\n            dispatch(statStockDataFetchAction())\r\n        },\r\n        handleClickStatStock: props => (id) => {\r\n            hashHistory.push({pathname: sprintf(ROUTER.STATSTOCK_ITEM_PATH, id), query: {}})\r\n        },\r\n\r\n        handleGetDocument: props => () => {\r\n            const {dispatch, filter} = props\r\n            return dispatch(getDocumentAction(filter))\r\n        }\r\n    })\r\n)\r\n\r\nconst StatStock = enhance((props) => {\r\n    const {\r\n        location,\r\n        list,\r\n        remainderList,\r\n        remainderLoading,\r\n        transactionList,\r\n        transactionLoading,\r\n        listLoading,\r\n        detail,\r\n        detailLoading,\r\n        filter,\r\n        layout,\r\n        params,\r\n        statStockData,\r\n        statStockDataLoading,\r\n        tab\r\n    } = props\r\n\r\n    const openFilterDialog = toBoolean(_.get(location, ['query', STATSTOCK_FILTER_OPEN]))\r\n    const brand = _.toInteger(filter.getParam(STATSTOCK_FILTER_KEY.BRAND))\r\n    const type = _.toInteger(filter.getParam(STATSTOCK_FILTER_KEY.TYPE))\r\n    const detailId = _.toInteger(_.get(params, 'statStockId'))\r\n\r\n    const fromDate = filter.getParam(STATSTOCK_FILTER_KEY.FROM_DATE)\r\n    const toDate = filter.getParam(STATSTOCK_FILTER_KEY.TO_DATE)\r\n\r\n    const listData = {\r\n        stockList: _.get(list, 'results'),\r\n        transactionList: _.get(transactionList, 'results'),\r\n        remainderList: _.get(remainderList, 'results'),\r\n        remainderLoading,\r\n        transactionLoading,\r\n        listLoading,\r\n        handleClickTapChange: props.handleClickTapChange,\r\n        handleClickStatStock: props.handleClickStatStock,\r\n        tab: _.toInteger(tab)\r\n\r\n    }\r\n\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        detailLoading\r\n    }\r\n\r\n    const filterDialog = {\r\n        initialValues: (() => {\r\n            return {\r\n                date: {\r\n                    fromDate: fromDate && moment(fromDate, 'YYYY-MM-DD'),\r\n                    toDate: toDate && moment(toDate, 'YYYY-MM-DD')\r\n                },\r\n                brand: {\r\n                    value: brand\r\n                },\r\n                type: {\r\n                    value: type\r\n                }\r\n            }\r\n        })(),\r\n        filterLoading: false,\r\n        openFilterDialog,\r\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\r\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\r\n        handleClearFilterDialog: props.handleClearFilterDialog,\r\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\r\n    }\r\n\r\n    const handleClickStock = {\r\n        clickItem: props.handleClickStock\r\n    }\r\n    const statStockDataExp = {\r\n        statStockData,\r\n        statStockDataLoading\r\n    }\r\n\r\n    const getDocument = {\r\n        handleGetDocument: props.handleGetDocument\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <StatStockGridList\r\n                filter={filter}\r\n                filterDialog={filterDialog}\r\n                listData={listData}\r\n                detailData={detailData}\r\n                statStockData={statStockDataExp}\r\n                handleClickStock={handleClickStock}\r\n                getDocument={getDocument}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default StatStock\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/StatStock/StatStock.js","import StatStock from './StatStock'\n\nexport {StatStock}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/StatStock/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\n\r\nimport {\r\n    StatAgentGridList,\r\n    STAT_AGENT_DIALOG_OPEN\r\n} from '../../components/Statistics'\r\nimport {\r\n    statAgentListFetchAction,\r\n    statAgentItemFetchAction\r\n} from '../../actions/statAgent'\r\n\r\nconst ZERO = 0\r\n\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['statAgent', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['statAgent', 'item', 'loading'])\r\n        const list = _.get(state, ['statAgent', 'list', 'data'])\r\n        const listLoading = _.get(state, ['statAgent', 'list', 'loading'])\r\n        const filter = filterHelper(list, pathname, query)\r\n        return {\r\n            list,\r\n            listLoading,\r\n            detail,\r\n            detailLoading,\r\n            filter,\r\n            query\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(statAgentListFetchAction(filter))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const statAgentId = _.get(nextProps, ['params', 'statAgentId']) || ZERO\r\n        return statAgentId > ZERO && _.get(props, ['params', 'statAgentId']) !== statAgentId\r\n    }, ({dispatch, params}) => {\r\n        const statAgentId = _.toInteger(_.get(params, 'statAgentId'))\r\n        if (statAgentId > ZERO) {\r\n            dispatch(statAgentItemFetchAction(statAgentId))\r\n        }\r\n    }),\r\n\r\n    withHandlers({\r\n        handleOpenStatAgentDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[STAT_AGENT_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseStatAgentDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[STAT_AGENT_DIALOG_OPEN]: false})})\r\n        },\r\n        handleCloseDetail: props => () => {\r\n            const {filter} = props\r\n            hashHistory.push({pathname: ROUTER.STATISTICS_LIST_URL, query: filter.getParam()})\r\n        }\r\n    })\r\n)\r\n\r\nconst StatAgentList = enhance((props) => {\r\n    const {\r\n        location,\r\n        list,\r\n        listLoading,\r\n        detail,\r\n        detailLoading,\r\n        filter,\r\n        layout,\r\n        params\r\n    } = props\r\n\r\n    const openStatAgentDialog = toBoolean(_.get(location, ['query', STAT_AGENT_DIALOG_OPEN]))\r\n    const detailId = _.toInteger(_.get(params, 'statAgentId'))\r\n\r\n    const statAgentDialog = {\r\n        openStatAgentDialog,\r\n        handleCloseStatAgentDialog: props.handleCloseStatAgentDialog,\r\n        handleOpenStatAgentDialog: props.handleOpenStatAgentDialog\r\n    }\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading\r\n    }\r\n\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        detailLoading,\r\n        handleCloseDetail: props.handleCloseDetail\r\n    }\r\n    return (\r\n        <Layout {...layout}>\r\n            <StatAgentGridList\r\n                filter={filter}\r\n                listData={listData}\r\n                detailData={detailData}\r\n                statAgentDialog={statAgentDialog}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default StatAgentList\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Statistics/StatAgent.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\n\r\nimport {StatProductGridList} from '../../components/Statistics'\r\nimport {\r\n    statProductListFetchAction,\r\n    statProductItemFetchAction\r\n} from '../../actions/statProduct'\r\n\r\nconst ZERO = 0\r\n\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['statProduct', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['statProduct', 'item', 'loading'])\r\n        const list = _.get(state, ['statProduct', 'list', 'data'])\r\n        const listLoading = _.get(state, ['statProduct', 'list', 'loading'])\r\n        const filter = filterHelper(list, pathname, query)\r\n        return {\r\n            list,\r\n            listLoading,\r\n            detail,\r\n            detailLoading,\r\n            filter\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(statProductListFetchAction(filter))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const statProductId = _.get(nextProps, ['params', 'statProductId']) || ZERO\r\n        return statProductId > ZERO && _.get(props, ['params', 'statProductId']) !== statProductId\r\n    }, ({dispatch, params}) => {\r\n        const statProductId = _.toInteger(_.get(params, 'statProductId'))\r\n        if (statProductId > ZERO) {\r\n            dispatch(statProductItemFetchAction(statProductId))\r\n        }\r\n    }),\r\n\r\n    withHandlers({\r\n\r\n        handleCloseDetail: props => () => {\r\n            const {filter} = props\r\n            hashHistory.push({pathname: ROUTER.STATISTICS_LIST_URL, query: filter.getParam()})\r\n        }\r\n    })\r\n)\r\n\r\nconst StatProductList = enhance((props) => {\r\n    const {\r\n        list,\r\n        listLoading,\r\n        detail,\r\n        detailLoading,\r\n        filter,\r\n        layout,\r\n        params\r\n    } = props\r\n    const detailId = _.toInteger(_.get(params, 'statProductId'))\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading\r\n    }\r\n\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        detailLoading,\r\n        handleCloseDetail: props.handleCloseDetail\r\n    }\r\n    return (\r\n        <Layout {...layout}>\r\n            <StatProductGridList\r\n                filter={filter}\r\n                listData={listData}\r\n                detailData={detailData}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default StatProductList\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Statistics/StatProduct.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\n\r\nimport {StatisticsGridList} from '../../components/Statistics'\r\nimport {\r\n    statisticsListFetchAction,\r\n    statisticsItemFetchAction\r\n} from '../../actions/statistics'\r\n\r\nconst ZERO = 0\r\n\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['statistics', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['statistics', 'item', 'loading'])\r\n        const list = _.get(state, ['statistics', 'list', 'data'])\r\n        const listLoading = _.get(state, ['statistics', 'list', 'loading'])\r\n        const filter = filterHelper(list, pathname, query)\r\n        return {\r\n            list,\r\n            listLoading,\r\n            detail,\r\n            detailLoading,\r\n            filter\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(statisticsListFetchAction(filter))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const statisticsId = _.get(nextProps, ['params', 'statisticsId']) || ZERO\r\n        return statisticsId > ZERO && _.get(props, ['params', 'statisticsId']) !== statisticsId\r\n    }, ({dispatch, params}) => {\r\n        const statisticsId = _.toInteger(_.get(params, 'statisticsId'))\r\n        if (statisticsId > ZERO) {\r\n            dispatch(statisticsItemFetchAction(statisticsId))\r\n        }\r\n    }),\r\n\r\n    withHandlers({\r\n\r\n        handleCloseDetail: props => () => {\r\n            const {filter} = props\r\n            hashHistory.push({pathname: ROUTER.STATISTICS_LIST_URL, query: filter.getParam()})\r\n        }\r\n    })\r\n)\r\n\r\nconst StatisticsList = enhance((props) => {\r\n    const {\r\n        list,\r\n        listLoading,\r\n        detail,\r\n        detailLoading,\r\n        filter,\r\n        layout,\r\n        params\r\n    } = props\r\n    const detailId = _.toInteger(_.get(params, 'statisticsId'))\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading\r\n    }\r\n\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        detailLoading,\r\n        handleCloseDetail: props.handleCloseDetail\r\n    }\r\n    return (\r\n        <Layout {...layout}>\r\n            <StatisticsGridList\r\n                filter={filter}\r\n                listData={listData}\r\n                detailData={detailData}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default StatisticsList\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Statistics/Statistics.js","import StatisticsList from './Statistics'\r\nimport StatAgentList from './StatAgent'\r\nimport StatProductList from './StatProduct'\r\n\r\nexport {\r\n    StatisticsList,\r\n    StatAgentList,\r\n    StatProductList\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Statistics/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport * as STOCK_TAB from '../../constants/stockReceiveTab'\r\nimport {\r\n    StockReceiveGridList,\r\n    STOCK_RECEIVE_CREATE_DIALOG_OPEN,\r\n    HISTORY_FILTER_OPEN,\r\n    TAB\r\n} from '../../components/StockReceive'\r\nimport {\r\n    stockReceiveListFetchAction,\r\n    stockReceiveItemFetchAction,\r\n    stockReceiveCreateAction,\r\n    stockHistoryListFetchAction,\r\n    stockTransferListFetchAction,\r\n    stockTransferItemFetchAction\r\n} from '../../actions/stockReceive'\r\nimport {openSnackbarAction} from '../../actions/snackbar'\r\n\r\nconst ZERO = 0\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['stockReceive', 'item', 'data'])\r\n        const detailProducts = _.get(state, ['stockReceive', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['stockReceive', 'item', 'loading'])\r\n        const list = _.get(state, ['stockReceive', 'list', 'data'])\r\n        const listLoading = _.get(state, ['stockReceive', 'list', 'loading'])\r\n        const historyList = _.get(state, ['stockReceive', 'history', 'data'])\r\n        const historyListLoading = _.get(state, ['stockReceive', 'history', 'loading'])\r\n        const transferList = _.get(state, ['stockReceive', 'transfer', 'data'])\r\n        const transferListLoading = _.get(state, ['stockReceive', 'transfer', 'loading'])\r\n        const transferDetail = _.get(state, ['stockReceive', 'transferItem', 'data'])\r\n        const transferDetailLoading = _.get(state, ['stockReceive', 'transferItem', 'loading'])\r\n        const barcodeList = _.get(state, ['stockReceive', 'barcodeList', 'data'])\r\n        const barcodeListLoading = _.get(state, ['stockReceive', 'barcodeList', 'loading'])\r\n        const createLoading = _.get(state, ['stockReceive', 'create', 'loading'])\r\n        const createForm = _.get(state, ['form', 'StockReceiveCreateForm'])\r\n        const isDefect = _.get(state, ['form', 'StockReceiveCreateForm', 'values', 'isDefect'])\r\n        const productId = _.toNumber(_.get(state, ['form', 'StockReceiveCreateForm', 'values', 'product', 'value', 'id']))\r\n        const filter = filterHelper(list, pathname, query)\r\n\r\n        return {\r\n            list,\r\n            listLoading,\r\n            historyList,\r\n            historyListLoading,\r\n            transferList,\r\n            transferListLoading,\r\n            transferDetail,\r\n            transferDetailLoading,\r\n            barcodeList,\r\n            barcodeListLoading,\r\n            detail,\r\n            detailProducts,\r\n            detailLoading,\r\n            createLoading,\r\n            filter,\r\n            createForm,\r\n            isDefect,\r\n            productId\r\n        }\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const prevTab = _.get(props, ['location', 'query', 'tab']) || 'receive'\r\n        const nextTab = _.get(nextProps, ['location', 'query', 'tab']) || 'receive'\r\n        return (props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()) || (prevTab !== nextTab)\r\n    }, ({dispatch, filter, location}) => {\r\n        const currentTab = _.get(location, ['query', 'tab']) || 'receive'\r\n        if (currentTab === 'receive') {\r\n            dispatch(stockReceiveListFetchAction(filter))\r\n        } else if (currentTab === 'transfer') {\r\n            dispatch(stockTransferListFetchAction(filter))\r\n        } else if (currentTab === 'history') {\r\n            dispatch(stockHistoryListFetchAction(filter))\r\n        }\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const prevId = _.toInteger(_.get(props, ['params', 'stockReceiveId']))\r\n        const nextId = _.toInteger(_.get(nextProps, ['params', 'stockReceiveId']))\r\n        return prevId !== nextId\r\n    }, ({dispatch, params, location}) => {\r\n        const currentTab = _.get(location, ['query', 'tab']) || 'receive'\r\n        const stockReceiveId = _.toInteger(_.get(params, 'stockReceiveId'))\r\n        if (stockReceiveId > ZERO && currentTab === 'receive') {\r\n            dispatch(stockReceiveItemFetchAction(stockReceiveId))\r\n        } else if (stockReceiveId > ZERO && currentTab === 'transfer') {\r\n            dispatch(stockTransferItemFetchAction(stockReceiveId))\r\n        }\r\n    }),\r\n\r\n    withHandlers({\r\n        handleTabChange: props => (tab) => {\r\n            hashHistory.push({\r\n                pathname: 'stockReceive',\r\n                query: {[TAB]: tab}\r\n            })\r\n        },\r\n\r\n        handleOpenFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[HISTORY_FILTER_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[HISTORY_FILTER_OPEN]: false})})\r\n        },\r\n\r\n        handleClearFilterDialog: props => () => {\r\n            const {location: {pathname}} = props\r\n            hashHistory.push({pathname, query: {}})\r\n        },\r\n\r\n        handleSubmitFilterDialog: props => () => {\r\n            const {filter, filterForm} = props\r\n            const manufacture = _.get(filterForm, ['values', 'manufacture', 'value']) || null\r\n            const group = _.get(filterForm, ['values', 'group', 'value']) || null\r\n\r\n            filter.filterBy({\r\n                [HISTORY_FILTER_OPEN]: false,\r\n                [HISTORY_FILTER_OPEN.MANUFACTURE]: manufacture,\r\n                [HISTORY_FILTER_OPEN.GROUP]: group\r\n            })\r\n        },\r\n\r\n        handleOpenCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[STOCK_RECEIVE_CREATE_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[STOCK_RECEIVE_CREATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitCreateDialog: props => () => {\r\n            const {dispatch, createForm, filter, location: {pathname}, params} = props\r\n            const formValues = _.get(createForm, ['values'])\r\n            const supplyId = _.toInteger(_.get(params, 'stockReceiveId'))\r\n\r\n            return dispatch(stockReceiveCreateAction(formValues, supplyId))\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[STOCK_RECEIVE_CREATE_DIALOG_OPEN]: false})})\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    dispatch(stockReceiveItemFetchAction(supplyId))\r\n                })\r\n        },\r\n        handleCloseDetail: props => () => {\r\n            const {location} = props\r\n            const tab = _.get(location, ['query', 'tab'])\r\n            hashHistory.push({pathname: ROUTER.STOCK_RECEIVE_LIST_URL, query: {[TAB]: tab}})\r\n        }\r\n    })\r\n)\r\n\r\nconst StockReceiveList = enhance((props) => {\r\n    const {\r\n        list,\r\n        listLoading,\r\n        historyList,\r\n        historyListLoading,\r\n        transferList,\r\n        transferListLoading,\r\n        transferDetail,\r\n        transferDetailLoading,\r\n        location,\r\n        detail,\r\n        detailProducts,\r\n        detailLoading,\r\n        createLoading,\r\n        isDefect,\r\n        filter,\r\n        layout,\r\n        params\r\n    } = props\r\n\r\n    const detailId = _.toInteger(_.get(params, 'stockReceiveId'))\r\n    const openCreateDialog = toBoolean(_.get(location, ['query', STOCK_RECEIVE_CREATE_DIALOG_OPEN]))\r\n    const openFilterDialog = toBoolean(_.get(location, ['query', HISTORY_FILTER_OPEN]))\r\n    const manufacture = _.toInteger(filter.getParam(HISTORY_FILTER_OPEN.MANUFACTURE))\r\n    const group = _.toInteger(filter.getParam(HISTORY_FILTER_OPEN.GROUP))\r\n    const tab = _.get(location, ['query', TAB]) || STOCK_TAB.STOCK_RECEIVE_DEFAULT_TAB\r\n    const handleCloseDetail = _.get(props, 'handleCloseDetail')\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading\r\n    }\r\n\r\n    const historyData = {\r\n        data: _.get(historyList, 'results'),\r\n        historyListLoading\r\n    }\r\n\r\n    const transferData = {\r\n        data: _.get(transferList, 'results'),\r\n        transferListLoading\r\n    }\r\n\r\n    const transferDetailData = {\r\n        id: detailId,\r\n        data: transferDetail,\r\n        transferDetailLoading\r\n    }\r\n\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        detailLoading\r\n    }\r\n\r\n    const createDialog = {\r\n        createLoading,\r\n        openCreateDialog,\r\n        isDefect,\r\n        detailProducts,\r\n        detailLoading,\r\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\r\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\r\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\r\n    }\r\n\r\n    const tabData = {\r\n        tab,\r\n        handleTabChange: props.handleTabChange\r\n    }\r\n\r\n    const filterDialog = {\r\n        initialValues: {\r\n            manufacture: {\r\n                value: manufacture\r\n            },\r\n            group: {\r\n                value: group\r\n            }\r\n        },\r\n        filterLoading: false,\r\n        openFilterDialog,\r\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\r\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\r\n        handleClearFilterDialog: props.handleClearFilterDialog,\r\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <StockReceiveGridList\r\n                filter={filter}\r\n                tabData={tabData}\r\n                listData={listData}\r\n                filterDialog={filterDialog}\r\n                historyData={historyData}\r\n                transferData={transferData}\r\n                transferDetail={transferDetailData}\r\n                detailData={detailData}\r\n                createDialog={createDialog}\r\n                handleCloseDetail={handleCloseDetail}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default StockReceiveList\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/StockReceive/StockReceiveList.js","import StockReceiveList from './StockReceiveList'\r\n\r\nexport {StockReceiveList}\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/StockReceive/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport {\r\n    STOCK_CREATE_DIALOG_OPEN,\r\n    STOCK_UPDATE_DIALOG_OPEN,\r\n    STOCK_DELETE_DIALOG_OPEN,\r\n    StockGridList\r\n} from '../../components/Stock'\r\nimport {\r\n    stockCreateAction,\r\n    stockUpdateAction,\r\n    stockListFetchAction,\r\n    stockDeleteAction,\r\n    stockItemFetchAction\r\n} from '../../actions/stock'\r\nimport {openSnackbarAction} from '../../actions/snackbar'\r\n\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['stock', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['stock', 'item', 'loading'])\r\n        const createLoading = _.get(state, ['stock', 'create', 'loading'])\r\n        const updateLoading = _.get(state, ['stock', 'update', 'loading'])\r\n        const list = _.get(state, ['stock', 'list', 'data'])\r\n        const listLoading = _.get(state, ['stock', 'list', 'loading'])\r\n        const createForm = _.get(state, ['form', 'StockCreateForm'])\r\n        const filter = filterHelper(list, pathname, query)\r\n\r\n        return {\r\n            list,\r\n            listLoading,\r\n            detail,\r\n            detailLoading,\r\n            createLoading,\r\n            updateLoading,\r\n            filter,\r\n            createForm\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(stockListFetchAction(filter))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const stockId = _.get(nextProps, ['params', 'stockId'])\r\n        return stockId && _.get(props, ['params', 'stockId']) !== stockId\r\n    }, ({dispatch, params}) => {\r\n        const stockId = _.toInteger(_.get(params, 'stockId'))\r\n        stockId && dispatch(stockItemFetchAction(stockId))\r\n    }),\r\n\r\n    withHandlers({\r\n        handleActionEdit: props => () => {\r\n            return null\r\n        },\r\n\r\n        handleOpenConfirmDialog: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.STOCK_ITEM_PATH, id),\r\n                query: filter.getParams({[STOCK_DELETE_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseConfirmDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[STOCK_DELETE_DIALOG_OPEN]: false})})\r\n        },\r\n        handleSendConfirmDialog: props => () => {\r\n            const {dispatch, detail, filter, location: {pathname}} = props\r\n            dispatch(stockDeleteAction(detail.id))\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[STOCK_DELETE_DIALOG_OPEN]: false})})\r\n                    dispatch(stockListFetchAction(filter))\r\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\r\n                })\r\n                .catch(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\r\n                })\r\n        },\r\n\r\n        handleOpenDeleteDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({\r\n                pathname,\r\n                query: filter.getParams({openDeleteDialog: 'yes'})\r\n            })\r\n        },\r\n\r\n        handleCloseDeleteDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({openDeleteDialog: false})})\r\n        },\r\n\r\n        handleOpenCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[STOCK_CREATE_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[STOCK_CREATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitCreateDialog: props => () => {\r\n            const {dispatch, createForm, filter, location: {pathname}} = props\r\n\r\n            return dispatch(stockCreateAction(_.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[STOCK_CREATE_DIALOG_OPEN]: false})})\r\n                    dispatch(stockListFetchAction(filter))\r\n                })\r\n        },\r\n\r\n        handleOpenUpdateDialog: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.STOCK_ITEM_PATH, id),\r\n                query: filter.getParams({[STOCK_UPDATE_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseUpdateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[STOCK_UPDATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitUpdateDialog: props => () => {\r\n            const {dispatch, createForm, filter} = props\r\n            const stockId = _.toInteger(_.get(props, ['params', 'stockId']))\r\n            return dispatch(stockUpdateAction(stockId, _.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(stockItemFetchAction(stockId))\r\n                })\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push(filter.createURL({[STOCK_UPDATE_DIALOG_OPEN]: false}))\r\n                    dispatch(stockListFetchAction(filter))\r\n                })\r\n        }\r\n    })\r\n)\r\n\r\nconst StockList = enhance((props) => {\r\n    const {\r\n        location,\r\n        list,\r\n        listLoading,\r\n        detail,\r\n        detailLoading,\r\n        createLoading,\r\n        updateLoading,\r\n        filter,\r\n        layout,\r\n        params\r\n    } = props\r\n\r\n    const openCreateDialog = toBoolean(_.get(location, ['query', STOCK_CREATE_DIALOG_OPEN]))\r\n    const openUpdateDialog = toBoolean(_.get(location, ['query', STOCK_UPDATE_DIALOG_OPEN]))\r\n    const openConfirmDialog = toBoolean(_.get(location, ['query', STOCK_DELETE_DIALOG_OPEN]))\r\n\r\n    const detailId = _.toInteger(_.get(params, 'stockId'))\r\n\r\n    const actionsDialog = {\r\n        handleActionEdit: props.handleActionEdit,\r\n        handleActionDelete: props.handleOpenDeleteDialog\r\n    }\r\n\r\n    const createDialog = {\r\n        createLoading,\r\n        openCreateDialog,\r\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\r\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\r\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\r\n    }\r\n\r\n    const confirmDialog = {\r\n        confirmLoading: detailLoading,\r\n        openConfirmDialog: openConfirmDialog,\r\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\r\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\r\n        handleSendConfirmDialog: props.handleSendConfirmDialog\r\n    }\r\n    const updateDialog = {\r\n        initialValues: (() => {\r\n            if (!detail || openCreateDialog) {\r\n                return {}\r\n            }\r\n            return {\r\n                name: _.get(detail, 'name'),\r\n                manager: {\r\n                    value: _.get(detail, ['manager', 'id'])\r\n                },\r\n                stockType: {\r\n                    value: _.toInteger(_.get(detail, 'stockType'))\r\n                }\r\n            }\r\n        })(),\r\n        updateLoading: detailLoading || updateLoading,\r\n        openUpdateDialog,\r\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\r\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\r\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\r\n    }\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading\r\n    }\r\n\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        detailLoading\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <StockGridList\r\n                filter={filter}\r\n                listData={listData}\r\n                detailData={detailData}\r\n                createDialog={createDialog}\r\n                confirmDialog={confirmDialog}\r\n                updateDialog={updateDialog}\r\n                actionsDialog={actionsDialog}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default StockList\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Stock/StockList.js","import StockList from './StockList'\n\nexport {StockList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Stock/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport moment from 'moment'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport {compose, withPropsOnChange, withState, withHandlers} from 'recompose'\r\nimport Layout from '../../components/Layout'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport {DELETE_DIALOG_OPEN} from '../../components/DeleteDialog'\r\nimport {setItemAction} from '../../components/ReduxForm/Provider/ProviderSearchField'\r\nimport {\r\n    SUPPLY_CREATE_DIALOG_OPEN,\r\n    SUPPLY_UPDATE_DIALOG_OPEN,\r\n    SUPPLY_FILTER_KEY,\r\n    SUPPLY_FILTER_OPEN,\r\n    SUPPLY_EXPENSE_CREATE_DIALOG_OPEN,\r\n    SUPPLY_DEFECT_DIALOG_OPEN,\r\n    SupplyGridList\r\n} from '../../components/Supply'\r\nimport {\r\n    supplyCreateAction,\r\n    supplyUpdateAction,\r\n    supplyListFetchAction,\r\n    supplyDeleteAction,\r\n    supplyItemFetchAction,\r\n    supplyDefectAction\r\n} from '../../actions/supply'\r\nimport {\r\n    supplyExpenseCreateAction,\r\n    supplyExpenseDeleteAction,\r\n    supplyExpenseListFetchAction\r\n} from '../../actions/supplyExpense'\r\nimport {openSnackbarAction} from '../../actions/snackbar'\r\n\r\nconst MINUS_ONE = -1\r\nconst ZERO = 0\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['supply', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['supply', 'item', 'loading'])\r\n        const createLoading = _.get(state, ['supply', 'create', 'loading'])\r\n        const updateLoading = _.get(state, ['supply', 'update', 'loading'])\r\n        const list = _.get(state, ['supply', 'list', 'data'])\r\n        const defectData = _.get(state, ['supply', 'defect', 'data'])\r\n        const listLoading = _.get(state, ['supply', 'list', 'loading'])\r\n        const filterForm = _.get(state, ['form', 'SupplyFilterForm'])\r\n        const createForm = _.get(state, ['form', 'SupplyCreateForm'])\r\n        const filter = filterHelper(list, pathname, query)\r\n\r\n        const supplyExpenseLoading = _.get(state, ['supplyExpense', 'create', 'loading'])\r\n        const createSupplyExpenseForm = _.get(state, ['form', 'SupplyExpenseCreateForm'])\r\n        const supplyExpenseList = _.get(state, ['supplyExpense', 'list', 'data'])\r\n        const supplyExpenseListLoading = _.get(state, ['supplyExpense', 'list', 'loading'])\r\n\r\n        return {\r\n            list,\r\n            listLoading,\r\n            detail,\r\n            defectData,\r\n            detailLoading,\r\n            createLoading,\r\n            updateLoading,\r\n            filter,\r\n            filterForm,\r\n            createForm,\r\n            supplyExpenseLoading,\r\n            createSupplyExpenseForm,\r\n            supplyExpenseList,\r\n            supplyExpenseListLoading\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(supplyListFetchAction(filter))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const prevDefect = _.toInteger(_.get(props, ['location', 'query', 'openDefectDialog']))\r\n        const nextDefect = _.toInteger(_.get(nextProps, ['location', 'query', 'openDefectDialog']))\r\n        return prevDefect !== nextDefect && nextDefect > ZERO\r\n    }, ({dispatch, params, location}) => {\r\n        const supplyId = _.toInteger(_.get(params, 'supplyId'))\r\n        const productId = _.toInteger(_.get(location, ['query', 'openDefectDialog']))\r\n        if (productId > ZERO) {\r\n            dispatch(supplyDefectAction(supplyId, productId))\r\n        }\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const supplyId = _.get(nextProps, ['params', 'supplyId'])\r\n        return supplyId && _.get(props, ['params', 'supplyId']) !== supplyId\r\n    }, ({dispatch, params}) => {\r\n        const supplyId = _.toInteger(_.get(params, 'supplyId'))\r\n        supplyId && dispatch(supplyItemFetchAction(supplyId))\r\n        supplyId && dispatch(supplyExpenseListFetchAction(supplyId))\r\n    }),\r\n\r\n    withState('openConfirmDialog', 'setOpenConfirmDialog', false),\r\n    withState('openConfirmExpenseDialog', 'setOpenConfirmExpenseDialog', false),\r\n    withState('openSupplyExpenseConfirmDialog', 'setOpenSupplyExpenseConfirmDialog', false),\r\n    withState('expenseRemoveId', 'setExpenseRemoveId', false),\r\n\r\n    withHandlers({\r\n        handleActionEdit: props => () => {\r\n            return null\r\n        },\r\n\r\n        handleOpenConfirmDialog: props => () => {\r\n            const {setOpenConfirmDialog} = props\r\n            setOpenConfirmDialog(true)\r\n        },\r\n        handleCloseConfirmDialog: props => () => {\r\n            const {setOpenConfirmDialog} = props\r\n            setOpenConfirmDialog(false)\r\n        },\r\n        handleSendConfirmDialog: props => () => {\r\n            const {dispatch, detail, setOpenConfirmDialog, filter} = props\r\n            dispatch(supplyDeleteAction(detail.id))\r\n                .catch(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно отменено'}))\r\n                })\r\n                .then(() => {\r\n                    setOpenConfirmDialog(false)\r\n                    dispatch(supplyListFetchAction(filter))\r\n                })\r\n        },\r\n\r\n        handleOpenConfirmExpenseDialog: props => (expId) => {\r\n            const {setExpenseRemoveId} = props\r\n            setExpenseRemoveId(expId)\r\n        },\r\n\r\n        handleCloseConfirmExpenseDialog: props => () => {\r\n            const {setExpenseRemoveId} = props\r\n            setExpenseRemoveId(false)\r\n        },\r\n        handleSendConfirmExpenseDialog: props => () => {\r\n            const {dispatch, setExpenseRemoveId, expenseRemoveId, detail} = props\r\n            const id = _.get(detail, 'id')\r\n            dispatch(supplyExpenseDeleteAction(expenseRemoveId))\r\n                .then(() => {\r\n                    setExpenseRemoveId(false)\r\n                    dispatch(supplyExpenseListFetchAction(id))\r\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\r\n                })\r\n                .catch(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\r\n                })\r\n        },\r\n\r\n        handleOpenFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[SUPPLY_FILTER_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[SUPPLY_FILTER_OPEN]: false})})\r\n        },\r\n\r\n        handleClearFilterDialog: props => () => {\r\n            const {location: {pathname}} = props\r\n            hashHistory.push({pathname, query: {}})\r\n        },\r\n\r\n        handleSubmitFilterDialog: props => () => {\r\n            const {filter, filterForm} = props\r\n            const deliveryFromDate = _.get(filterForm, ['values', 'dateDelivery', 'fromDate']) || null\r\n            const deliveryToDate = _.get(filterForm, ['values', 'dateDelivery', 'toDate']) || null\r\n            const createdFromDate = _.get(filterForm, ['values', 'dateCreated', 'fromDate']) || null\r\n            const createdToDate = _.get(filterForm, ['values', 'dateCreated', 'toDate']) || null\r\n            const provider = _.get(filterForm, ['values', 'provider', 'value']) || null\r\n            const stock = _.get(filterForm, ['values', 'stock', 'value']) || null\r\n\r\n            filter.filterBy({\r\n                [SUPPLY_FILTER_OPEN]: false,\r\n                [SUPPLY_FILTER_KEY.PROVIDER]: provider,\r\n                [SUPPLY_FILTER_KEY.STOCK]: stock,\r\n                [SUPPLY_FILTER_KEY.DELIVERY_FROM_DATE]: deliveryFromDate && deliveryFromDate.format('YYYY-MM-DD'),\r\n                [SUPPLY_FILTER_KEY.DELIVERY_TO_DATE]: deliveryToDate && deliveryToDate.format('YYYY-MM-DD'),\r\n                [SUPPLY_FILTER_KEY.CREATED_FROM_DATE]: createdFromDate && createdFromDate.format('YYYY-MM-DD'),\r\n                [SUPPLY_FILTER_KEY.CREATED_TO_DATE]: createdToDate && createdToDate.format('YYYY-MM-DD')\r\n            })\r\n        },\r\n        handleOpenDeleteDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({\r\n                pathname,\r\n                query: filter.getParams({openDeleteDialog: 'yes'})\r\n            })\r\n        },\r\n\r\n        handleCloseDeleteDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({openDeleteDialog: false})})\r\n        },\r\n\r\n        handleOpenCreateDialog: props => () => {\r\n            const {location: {pathname}, filter, dispatch} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[SUPPLY_CREATE_DIALOG_OPEN]: true})})\r\n            dispatch(setItemAction(null, false))\r\n        },\r\n\r\n        handleCloseCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[SUPPLY_CREATE_DIALOG_OPEN]: false})})\r\n        },\r\n        handleSubmitCreateDialog: props => () => {\r\n            const {location: {pathname}, dispatch, createForm, filter} = props\r\n            return dispatch(supplyCreateAction(_.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[SUPPLY_CREATE_DIALOG_OPEN]: false})})\r\n                    dispatch(supplyListFetchAction(filter))\r\n                })\r\n        },\r\n\r\n        handleOpenDefectDialog: props => (id) => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[SUPPLY_DEFECT_DIALOG_OPEN]: id})})\r\n        },\r\n\r\n        handleCloseDefectDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[SUPPLY_DEFECT_DIALOG_OPEN]: MINUS_ONE})})\r\n        },\r\n\r\n        handleOpenUpdateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[SUPPLY_UPDATE_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseUpdateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[SUPPLY_UPDATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitUpdateDialog: props => () => {\r\n            const {dispatch, createForm, filter} = props\r\n            const supplyId = _.toInteger(_.get(props, ['params', 'supplyId']))\r\n\r\n            return dispatch(supplyUpdateAction(supplyId, _.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(supplyItemFetchAction(supplyId))\r\n                })\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push(filter.createURL({[SUPPLY_UPDATE_DIALOG_OPEN]: false}))\r\n                    dispatch(supplyListFetchAction(filter))\r\n                })\r\n        },\r\n        handleCloseDetail: props => () => {\r\n            const {filter} = props\r\n            hashHistory.push({pathname: ROUTER.SUPPLY_LIST_URL, query: filter.getParam()})\r\n        }\r\n    }),\r\n\r\n    withHandlers({\r\n        handleSupplyExpenseOpenCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[SUPPLY_EXPENSE_CREATE_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleSupplyExpenseCloseCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[SUPPLY_EXPENSE_CREATE_DIALOG_OPEN]: false})})\r\n        },\r\n        handleSupplyExpenseSubmitCreateDialog: props => () => {\r\n            const {dispatch, createSupplyExpenseForm, filter, detail, location: {pathname}} = props\r\n            const id = _.get(detail, 'id')\r\n\r\n            return dispatch(supplyExpenseCreateAction(_.get(createSupplyExpenseForm, ['values']), id))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Successful saved'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[SUPPLY_EXPENSE_CREATE_DIALOG_OPEN]: false})})\r\n                    dispatch(supplyExpenseListFetchAction(id))\r\n                })\r\n        }\r\n    })\r\n)\r\n\r\nconst SupplyList = enhance((props) => {\r\n    const {\r\n        location,\r\n        list,\r\n        listLoading,\r\n        detail,\r\n        defectData,\r\n        detailLoading,\r\n        createLoading,\r\n        updateLoading,\r\n        filter,\r\n        layout,\r\n        params,\r\n        expenseRemoveId,\r\n\r\n        supplyExpenseLoading,\r\n        supplyExpenseList,\r\n        supplyExpenseListLoading\r\n    } = props\r\n\r\n    const openFilterDialog = toBoolean(_.get(location, ['query', SUPPLY_FILTER_OPEN]))\r\n    const openCreateDialog = toBoolean(_.get(location, ['query', SUPPLY_CREATE_DIALOG_OPEN]))\r\n    const openDefectDialog = _.toInteger(_.get(location, ['query', 'openDefectDialog']) || MINUS_ONE) > MINUS_ONE\r\n    const openUpdateDialog = toBoolean(_.get(location, ['query', SUPPLY_UPDATE_DIALOG_OPEN]))\r\n    const openDeleteDialog = toBoolean(_.get(location, ['query', DELETE_DIALOG_OPEN]))\r\n    const provider = _.toInteger(filter.getParam(SUPPLY_FILTER_KEY.PROVIDER))\r\n    const stock = _.toInteger(filter.getParam(SUPPLY_FILTER_KEY.STOCK))\r\n    const deliveryFromDate = filter.getParam(SUPPLY_FILTER_KEY.DELIVERY_FROM_DATE)\r\n    const deliveryToDate = filter.getParam(SUPPLY_FILTER_KEY.DELIVERY_TO_DATE)\r\n    const createdFromDate = filter.getParam(SUPPLY_FILTER_KEY.CREATED_FROM_DATE)\r\n    const createdToDate = filter.getParam(SUPPLY_FILTER_KEY.CREATED_TO_DATE)\r\n    const detailId = _.toInteger(_.get(params, 'supplyId'))\r\n\r\n    const actionsDialog = {\r\n        handleActionEdit: props.handleActionEdit,\r\n        handleActionDelete: props.handleOpenDeleteDialog\r\n    }\r\n\r\n    const createDialog = {\r\n        createLoading,\r\n        openCreateDialog,\r\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\r\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\r\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\r\n    }\r\n\r\n    const defectDialog = {\r\n        openDefectDialog,\r\n        handleOpenDefectDialog: props.handleOpenDefectDialog,\r\n        handleCloseDefectDialog: props.handleCloseDefectDialog\r\n    }\r\n\r\n    const deleteDialog = {\r\n        openDeleteDialog,\r\n        handleOpenDeleteDialog: props.handleOpenDeleteDialog,\r\n        handleCloseDeleteDialog: props.handleCloseDeleteDialog\r\n    }\r\n\r\n    const confirmDialog = {\r\n        openConfirmDialog: props.openConfirmDialog,\r\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\r\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\r\n        handleSendConfirmDialog: props.handleSendConfirmDialog\r\n    }\r\n\r\n    const confirmExpenseDialog = {\r\n        removeId: expenseRemoveId,\r\n        openConfirmExpenseDialog: (expenseRemoveId > ZERO),\r\n        handleOpenConfirmExpenseDialog: props.handleOpenConfirmExpenseDialog,\r\n        handleCloseConfirmExpenseDialog: props.handleCloseConfirmExpenseDialog,\r\n        handleSendConfirmExpenseDialog: props.handleSendConfirmExpenseDialog\r\n    }\r\n    const forUpdateProducts = _.map(_.get(detail, 'products'), (item) => {\r\n        return {\r\n            amount: _.get(item, 'amount'),\r\n            cost: _.get(item, 'cost'),\r\n            product: {\r\n                value: {\r\n                    id: _.get(item, ['product', 'id']),\r\n                    name: _.get(item, ['product', 'name']),\r\n                    measurement: _.get(item, ['product', 'measurement'])\r\n                }\r\n            }\r\n\r\n        }\r\n    })\r\n    const updateDialog = {\r\n        initialValues: (() => {\r\n            if (!detail || openCreateDialog) {\r\n                return {}\r\n            }\r\n            return {\r\n                provider: {\r\n                    value: _.get(detail, ['provider', 'id'])\r\n                },\r\n                stock: {\r\n                    value: _.get(detail, ['stock', 'id'])\r\n                },\r\n                currency: {\r\n                    value: _.get(detail, ['currency', 'id'])\r\n                },\r\n                contact: {\r\n                    value: _.get(detail, 'contact', 'name') + ' ' + _.get(detail, 'contact', 'phone') + ' ' + _.get(detail, 'contact', 'email')\r\n                },\r\n                date_delivery: moment(_.get(detail, ['dateDelivery'])).toDate(),\r\n                products: forUpdateProducts,\r\n                comment: _.get(detail, 'comment')\r\n            }\r\n        })(),\r\n        updateLoading: detailLoading || updateLoading,\r\n        openUpdateDialog,\r\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\r\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\r\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\r\n    }\r\n\r\n    const filterDialog = {\r\n        initialValues: {\r\n            provider: {\r\n                value: provider\r\n            },\r\n            stock: {\r\n                value: stock\r\n            },\r\n            dateDelivery: {\r\n                fromDate: deliveryFromDate && moment(deliveryFromDate, 'YYYY-MM-DD'),\r\n                toDate: deliveryToDate && moment(deliveryToDate, 'YYYY-MM-DD')\r\n            },\r\n            dateCreated: {\r\n                fromDate: createdFromDate && moment(createdFromDate, 'YYYY-MM-DD'),\r\n                toDate: createdToDate && moment(createdToDate, 'YYYY-MM-DD')\r\n            }\r\n        },\r\n        filterLoading: false,\r\n        openFilterDialog,\r\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\r\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\r\n        handleClearFilterDialog: props.handleClearFilterDialog,\r\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\r\n    }\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading\r\n    }\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        defect: defectData,\r\n        detailLoading,\r\n        handleCloseDetail: props.handleCloseDetail\r\n    }\r\n\r\n    // Supply Expense\r\n\r\n    const supplyListData = {\r\n        data: _.get(supplyExpenseList, 'results'),\r\n        supplyExpenseListLoading,\r\n        openSupplyExpenseConfirmDialog: props.openSupplyExpenseConfirmDialog,\r\n        handleSupplyExpenseOpenConfirmDialog: props.handleSupplyExpenseOpenConfirmDialog,\r\n        handleSupplyExpenseCloseConfirmDialog: props.handleSupplyExpenseCloseConfirmDialog\r\n    }\r\n    const openSupplyExpenseCreateDialog = toBoolean(_.get(location, ['query', SUPPLY_EXPENSE_CREATE_DIALOG_OPEN]))\r\n\r\n    const supplyExpenseCreateDialog = {\r\n        supplyExpenseLoading,\r\n        openSupplyExpenseCreateDialog,\r\n        handleSupplyExpenseOpenCreateDialog: props.handleSupplyExpenseOpenCreateDialog,\r\n        handleSupplyExpenseCloseCreateDialog: props.handleSupplyExpenseCloseCreateDialog,\r\n        handleSupplyExpenseSubmitCreateDialog: props.handleSupplyExpenseSubmitCreateDialog\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <SupplyGridList\r\n                filter={filter}\r\n                listData={listData}\r\n                detailData={detailData}\r\n                createDialog={createDialog}\r\n                defectDialog={defectDialog}\r\n                deleteDialog={deleteDialog}\r\n                confirmDialog={confirmDialog}\r\n                confirmExpenseDialog={confirmExpenseDialog}\r\n                updateDialog={updateDialog}\r\n                actionsDialog={actionsDialog}\r\n                filterDialog={filterDialog}\r\n\r\n                supplyListData={supplyListData}\r\n                supplyExpenseCreateDialog={supplyExpenseCreateDialog}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default SupplyList\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Supply/SupplyList.js","import SupplyList from './SupplyList'\n\nexport {SupplyList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Supply/index.js","import React from 'react'\nimport _ from 'lodash'\nimport {compose} from 'recompose'\nimport {connect} from 'react-redux'\nimport Layout from '../../components/Layout'\nimport TrackingWrapper from '../../components/Tracking/TrackingWrapper'\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        return {\n            query,\n            pathname\n        }\n    })\n)\n\nconst Tracking = enhance((props) => {\n    const {\n        list,\n        listLoading,\n        layout\n    } = props\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n\n    return (\n        <Layout {...layout}>\n            <TrackingWrapper\n                listData={listData}\n            />\n        </Layout>\n    )\n})\n\nexport default Tracking\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Tracking/Tracking.js","import Tracking from './Tracking'\n\nexport {Tracking}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Tracking/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport moment from 'moment'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport {compose, withPropsOnChange, withState, withHandlers} from 'recompose'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport {\r\n    TRANSACTION_CREATE_EXPENSE_DIALOG_OPEN,\r\n    TRANSACTION_CREATE_INCOME_DIALOG_OPEN,\r\n    TRANSACTION_UPDATE_EXPENSE_DIALOG_OPEN,\r\n    TRANSACTION_UPDATE_INCOME_DIALOG_OPEN,\r\n    TRANSACTION_CREATE_SEND_DIALOG_OPEN,\r\n    TRANSACTION_DELETE_DIALOG_OPEN,\r\n    TRANSACTION_FILTER_KEY,\r\n    TRANSACTION_FILTER_OPEN,\r\n    TransactionGridList\r\n} from '../../components/Transaction'\r\nimport {\r\n    transactionCreateExpenseAction,\r\n    transactionCreateIncomeAction,\r\n    transactionUpdateExpenseAction,\r\n    transactionUpdateIncomeAction,\r\n    transactionCreateSendAction,\r\n    transactionListFetchAction,\r\n    transactionDeleteAction,\r\n    transactionItemFetchAction\r\n} from '../../actions/transaction'\r\nimport {\r\n    cashboxListFetchAction\r\n} from '../../actions/cashbox'\r\nimport {openSnackbarAction} from '../../actions/snackbar'\r\n\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['transaction', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['transaction', 'item', 'loading'])\r\n        const createLoading = _.get(state, ['transaction', 'create', 'loading'])\r\n        const updateLoading = _.get(state, ['transaction', 'update', 'loading'])\r\n        const list = _.get(state, ['transaction', 'list', 'data'])\r\n        const cashboxList = _.get(state, ['cashbox', 'list', 'data'])\r\n        const cashboxListLoading = _.get(state, ['cashbox', 'list', 'loading'])\r\n        const listLoading = _.get(state, ['transaction', 'list', 'loading'])\r\n        const filterForm = _.get(state, ['form', 'TransactionFilterForm'])\r\n        const createForm = _.get(state, ['form', 'TransactionCreateForm'])\r\n        const filter = filterHelper(list, pathname, query)\r\n        const filterCashbox = filterHelper(cashboxList, pathname, query)\r\n        const cashboxId = _.get(props, ['location', 'query', 'cashboxId'])\r\n        return {\r\n            list,\r\n            cashboxList,\r\n            cashboxListLoading,\r\n            listLoading,\r\n            detail,\r\n            detailLoading,\r\n            createLoading,\r\n            updateLoading,\r\n            filter,\r\n            filterForm,\r\n            filterCashbox,\r\n            cashboxId,\r\n            createForm\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return !nextProps.cashboxListLoading && _.isNil(nextProps.cashboxList)\r\n    }, ({dispatch, filterCashbox}) => {\r\n        dispatch(cashboxListFetchAction(filterCashbox))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        return (props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()) ||\r\n            (_.get(props, ['location', 'query', 'cashboxId']) !== _.get(nextProps, ['location', 'query', 'cashboxId']))\r\n    }, ({dispatch, filter, location}) => {\r\n        const cashboxId = _.get(location, ['query', 'cashboxId'])\r\n        dispatch(transactionListFetchAction(filter, cashboxId))\r\n    }),\r\n\r\n    withState('openCSVDialog', 'setOpenCSVDialog', false),\r\n\r\n    withHandlers({\r\n        handleActionEdit: props => () => {\r\n            return null\r\n        },\r\n\r\n        handleOpenDeleteDialog: props => () => {\r\n            return null\r\n        },\r\n\r\n        handleOpenConfirmDialog: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.TRANSACTION_ITEM_PATH, id),\r\n                query: filter.getParams({[TRANSACTION_DELETE_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseConfirmDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_DELETE_DIALOG_OPEN]: false})})\r\n        },\r\n        handleExpenseConfirmDialog: props => () => {\r\n            const {dispatch, detail, filter, location: {pathname}, cashboxId} = props\r\n            dispatch(transactionDeleteAction(detail.id))\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_DELETE_DIALOG_OPEN]: false})})\r\n                    dispatch(transactionListFetchAction(filter, cashboxId))\r\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\r\n                })\r\n                .catch(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\r\n                })\r\n        },\r\n\r\n        handleOpenFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_FILTER_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_FILTER_OPEN]: false})})\r\n        },\r\n\r\n        handleClearFilterDialog: props => () => {\r\n            const {location: {pathname}} = props\r\n            hashHistory.push({pathname, query: {}})\r\n        },\r\n\r\n        handleSubmitFilterDialog: props => () => {\r\n            const {filter, filterForm} = props\r\n            const fromDate = _.get(filterForm, ['values', 'date', 'fromDate']) || null\r\n            const toDate = _.get(filterForm, ['values', 'date', 'toDate']) || null\r\n            const type = _.get(filterForm, ['values', 'type', 'value']) || null\r\n            const categoryExpense = _.get(filterForm, ['values', 'categoryExpense', 'value']) || null\r\n\r\n            filter.filterBy({\r\n                [TRANSACTION_FILTER_OPEN]: false,\r\n                [TRANSACTION_FILTER_KEY.TYPE]: type,\r\n                [TRANSACTION_FILTER_KEY.CATEGORY_EXPENSE]: categoryExpense,\r\n                [TRANSACTION_FILTER_KEY.FROM_DATE]: fromDate && fromDate.format('YYYY-MM-DD'),\r\n                [TRANSACTION_FILTER_KEY.TO_DATE]: toDate && toDate.format('YYYY-MM-DD')\r\n            })\r\n        },\r\n\r\n        handleOpenCreateExpenseDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_CREATE_EXPENSE_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseCreateExpenseDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_CREATE_EXPENSE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitCreateExpenseDialog: props => () => {\r\n            const {dispatch, createForm, filter, location: {pathname}, cashboxId} = props\r\n            return dispatch(transactionCreateExpenseAction(_.get(createForm, ['values']), cashboxId))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_CREATE_EXPENSE_DIALOG_OPEN]: false})})\r\n                    dispatch(transactionListFetchAction(filter, cashboxId))\r\n                })\r\n        },\r\n\r\n        handleOpenCreateIncomeDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_CREATE_INCOME_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseCreateIncomeDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_CREATE_INCOME_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitCreateIncomeDialog: props => () => {\r\n            const {dispatch, createForm, filter, location: {pathname}, cashboxId} = props\r\n            return dispatch(transactionCreateIncomeAction(_.get(createForm, ['values']), cashboxId))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_CREATE_INCOME_DIALOG_OPEN]: false})})\r\n                    dispatch(transactionListFetchAction(filter, cashboxId))\r\n                })\r\n        },\r\n\r\n        handleOpenCreateSendDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_CREATE_SEND_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseCreateSendDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_CREATE_SEND_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitCreateSendDialog: props => () => {\r\n            const {dispatch, createForm, filter, location: {pathname}} = props\r\n            const cashboxId = _.get(props, ['location', 'query', 'cashboxId'])\r\n            return dispatch(transactionCreateSendAction(_.get(createForm, ['values']), cashboxId))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_CREATE_SEND_DIALOG_OPEN]: false})})\r\n                    dispatch(transactionListFetchAction(filter, cashboxId))\r\n                    dispatch(cashboxListFetchAction(filter))\r\n                })\r\n        },\r\n\r\n        handleClickCashbox: props => (id) => {\r\n            const {location: {pathname}} = props\r\n            hashHistory.push({pathname, query: {'cashboxId': id}})\r\n        },\r\n\r\n        handleOpenUpdateDialog: props => (id, amount) => {\r\n            const {filter, dispatch} = props\r\n            const zero = 0\r\n            if (_.toNumber(amount) < zero) {\r\n                hashHistory.push({\r\n                    pathname: sprintf(ROUTER.TRANSACTION_ITEM_PATH, id),\r\n                    query: filter.getParams({[TRANSACTION_UPDATE_EXPENSE_DIALOG_OPEN]: true})\r\n                })\r\n            } else {\r\n                hashHistory.push({\r\n                    pathname: sprintf(ROUTER.TRANSACTION_ITEM_PATH, id),\r\n                    query: filter.getParams({[TRANSACTION_UPDATE_INCOME_DIALOG_OPEN]: true})\r\n                })\r\n            }\r\n            dispatch(transactionItemFetchAction(id))\r\n        },\r\n\r\n        handleCloseUpdateExpenseDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_UPDATE_EXPENSE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitUpdateExpenseDialog: props => () => {\r\n            const {dispatch, createForm, filter, cashboxId} = props\r\n            const transactionId = _.toInteger(_.get(props, ['params', 'transactionId']))\r\n            return dispatch(transactionUpdateExpenseAction(transactionId, _.get(createForm, ['values']), cashboxId))\r\n                .then(() => {\r\n                    return dispatch(transactionItemFetchAction(transactionId))\r\n                })\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push(filter.createURL({[TRANSACTION_UPDATE_EXPENSE_DIALOG_OPEN]: false}))\r\n                    dispatch(transactionListFetchAction(filter, cashboxId))\r\n                })\r\n        },\r\n\r\n        handleCloseUpdateIncomeDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_UPDATE_INCOME_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitUpdateIncomeDialog: props => () => {\r\n            const {dispatch, createForm, filter, cashboxId} = props\r\n            const transactionId = _.toInteger(_.get(props, ['params', 'transactionId']))\r\n            return dispatch(transactionUpdateIncomeAction(transactionId, _.get(createForm, ['values']), cashboxId))\r\n                .then(() => {\r\n                    return dispatch(transactionItemFetchAction(transactionId))\r\n                })\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push(filter.createURL({[TRANSACTION_UPDATE_INCOME_DIALOG_OPEN]: false}))\r\n                    dispatch(transactionListFetchAction(filter, cashboxId))\r\n                })\r\n        }\r\n    })\r\n)\r\n\r\nconst TransactionList = enhance((props) => {\r\n    const {\r\n        location,\r\n        list,\r\n        cashboxList,\r\n        cashboxId,\r\n        cashboxListLoading,\r\n        listLoading,\r\n        detail,\r\n        detailLoading,\r\n        createLoading,\r\n        updateLoading,\r\n        filter,\r\n        layout,\r\n        params\r\n    } = props\r\n\r\n    const openFilterDialog = toBoolean(_.get(location, ['query', TRANSACTION_FILTER_OPEN]))\r\n    const openCreateExpenseDialog = toBoolean(_.get(location, ['query', TRANSACTION_CREATE_EXPENSE_DIALOG_OPEN]))\r\n    const openCreateIncomeDialog = toBoolean(_.get(location, ['query', TRANSACTION_CREATE_INCOME_DIALOG_OPEN]))\r\n    const openUpdateExpenseDialog = toBoolean(_.get(location, ['query', TRANSACTION_UPDATE_EXPENSE_DIALOG_OPEN]))\r\n    const openUpdateIncomeDialog = toBoolean(_.get(location, ['query', TRANSACTION_UPDATE_INCOME_DIALOG_OPEN]))\r\n    const openCreateSendDialog = toBoolean(_.get(location, ['query', TRANSACTION_CREATE_SEND_DIALOG_OPEN]))\r\n    const openConfirmDialog = toBoolean(_.get(location, ['query', TRANSACTION_DELETE_DIALOG_OPEN]))\r\n\r\n    const categoryExpense = _.toInteger(filter.getParam(TRANSACTION_FILTER_KEY.CATEGORY_EXPENSE))\r\n    const type = _.toInteger(filter.getParam(TRANSACTION_FILTER_KEY.TYPE))\r\n    const fromDate = filter.getParam(TRANSACTION_FILTER_KEY.FROM_DATE)\r\n    const toDate = filter.getParam(TRANSACTION_FILTER_KEY.TO_DATE)\r\n    const detailId = _.toInteger(_.get(params, 'transactionId'))\r\n\r\n    const actionsDialog = {\r\n        handleActionEdit: props.handleActionEdit,\r\n        handleActionDelete: props.handleOpenDeleteDialog\r\n    }\r\n\r\n    const createExpenseDialog = {\r\n        loading: createLoading,\r\n        open: openCreateExpenseDialog,\r\n        handleOpenDialog: props.handleOpenCreateExpenseDialog,\r\n        handleCloseDialog: props.handleCloseCreateExpenseDialog,\r\n        handleSubmitDialog: props.handleSubmitCreateExpenseDialog\r\n    }\r\n\r\n    const createIncomeDialog = {\r\n        loading: createLoading,\r\n        open: openCreateIncomeDialog,\r\n        handleOpenDialog: props.handleOpenCreateIncomeDialog,\r\n        handleCloseDialog: props.handleCloseCreateIncomeDialog,\r\n        handleSubmitDialog: props.handleSubmitCreateIncomeDialog\r\n    }\r\n\r\n    const createSendDialog = {\r\n        loading: createLoading,\r\n        open: openCreateSendDialog,\r\n        handleOpenDialog: props.handleOpenCreateSendDialog,\r\n        handleCloseDialog: props.handleCloseCreateSendDialog,\r\n        handleSubmitDialog: props.handleSubmitCreateSendDialog\r\n    }\r\n\r\n    const updateExpenseDialog = {\r\n        initialValues: (() => {\r\n            if (!detailId || openCreateExpenseDialog) {\r\n                return {}\r\n            }\r\n            return {\r\n                comment: _.get(detail, 'comment'),\r\n                expanseCategory: {\r\n                    value: _.get(detail, ['expanseCategory', 'id'])\r\n                },\r\n                amount: _.get(detail, 'amount')\r\n            }\r\n        })(),\r\n        loading: updateLoading,\r\n        open: openUpdateExpenseDialog,\r\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\r\n        handleCloseUpdateDialog: props.handleCloseUpdateExpenseDialog,\r\n        handleSubmitUpdateDialog: props.handleSubmitUpdateExpenseDialog\r\n    }\r\n\r\n    const updateIncomeDialog = {\r\n        initialValues: (() => {\r\n            if (!detailId || openCreateIncomeDialog) {\r\n                return {}\r\n            }\r\n\r\n            return {\r\n                comment: _.get(detail, 'comment'),\r\n                amount: _.get(detail, 'amount')\r\n            }\r\n        })(),\r\n        loading: updateLoading,\r\n        open: openUpdateIncomeDialog,\r\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\r\n        handleCloseUpdateDialog: props.handleCloseUpdateIncomeDialog,\r\n        handleSubmitUpdateDialog: props.handleSubmitUpdateIncomeDialog\r\n    }\r\n\r\n    const confirmDialog = {\r\n        open: openConfirmDialog,\r\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\r\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\r\n        handleExpenseConfirmDialog: props.handleExpenseConfirmDialog\r\n    }\r\n\r\n    const filterDialog = {\r\n        initialValues: {\r\n            category: {\r\n                value: categoryExpense\r\n            },\r\n            type: {\r\n                value: type\r\n            },\r\n            date: {\r\n                fromDate: fromDate && moment(fromDate, 'YYYY-MM-DD'),\r\n                toDate: toDate && moment(toDate, 'YYYY-MM-DD')\r\n            }\r\n        },\r\n        filterLoading: false,\r\n        openFilterDialog,\r\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\r\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\r\n        handleClearFilterDialog: props.handleClearFilterDialog,\r\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\r\n    }\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading\r\n    }\r\n\r\n    const cashboxData = {\r\n        data: _.get(cashboxList, 'results'),\r\n        handleClickCashbox: props.handleClickCashbox,\r\n        cashboxId: _.toInteger(cashboxId),\r\n        listLoading\r\n\r\n    }\r\n\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        detailLoading\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <TransactionGridList\r\n                filter={filter}\r\n                listData={listData}\r\n                cashboxListLoading={cashboxListLoading}\r\n                cashboxData={cashboxData}\r\n                detailData={detailData}\r\n                createExpenseDialog={createExpenseDialog}\r\n                createIncomeDialog={createIncomeDialog}\r\n                updateIncomeDialog={updateIncomeDialog}\r\n                updateExpenseDialog={updateExpenseDialog}\r\n                createSendDialog={createSendDialog}\r\n                confirmDialog={confirmDialog}\r\n                actionsDialog={actionsDialog}\r\n                filterDialog={filterDialog}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default TransactionList\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Transaction/TransactionList.js","import TransactionList from './TransactionList'\n\nexport {TransactionList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Transaction/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport sprintf from 'sprintf'\r\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\r\nimport {connect} from 'react-redux'\r\nimport {hashHistory} from 'react-router'\r\nimport Layout from '../../components/Layout'\r\nimport * as ROUTER from '../../constants/routes'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport {\r\n    USERS_CREATE_DIALOG_OPEN,\r\n    USERS_UPDATE_DIALOG_OPEN,\r\n    USERS_DELETE_DIALOG_OPEN,\r\n    USERS_FILTER_KEY,\r\n    USERS_FILTER_OPEN,\r\n    UsersGridList\r\n} from '../../components/Users'\r\nimport {\r\n    usersCreateAction,\r\n    usersUpdateAction,\r\n    usersListFetchAction,\r\n    usersDeleteAction,\r\n    usersItemFetchAction\r\n} from '../../actions/users'\r\nimport {openSnackbarAction} from '../../actions/snackbar'\r\nconst ZERO = 0\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const detail = _.get(state, ['users', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['users', 'item', 'loading'])\r\n        const createLoading = _.get(state, ['users', 'create', 'loading'])\r\n        const updateLoading = _.get(state, ['users', 'update', 'loading'])\r\n        const list = _.get(state, ['users', 'list', 'data'])\r\n        const listLoading = _.get(state, ['users', 'list', 'loading'])\r\n        const filterForm = _.get(state, ['form', 'UsersFilterForm'])\r\n        const createForm = _.get(state, ['form', 'UsersCreateForm'])\r\n        const filter = filterHelper(list, pathname, query)\r\n\r\n        return {\r\n            list,\r\n            listLoading,\r\n            detail,\r\n            detailLoading,\r\n            createLoading,\r\n            updateLoading,\r\n            filter,\r\n            filterForm,\r\n            createForm\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(usersListFetchAction(filter))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const usersId = _.get(nextProps, ['params', 'usersId'])\r\n        return usersId && _.get(props, ['params', 'usersId']) !== usersId\r\n    }, ({dispatch, params}) => {\r\n        const usersId = _.toInteger(_.get(params, 'usersId'))\r\n        usersId && dispatch(usersItemFetchAction(usersId))\r\n    }),\r\n\r\n    withHandlers({\r\n        handleActionEdit: props => () => {\r\n            return null\r\n        },\r\n\r\n        handleOpenConfirmDialog: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.USERS_ITEM_PATH, id),\r\n                query: filter.getParams({[USERS_DELETE_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseConfirmDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[USERS_DELETE_DIALOG_OPEN]: false})})\r\n        },\r\n        handleSendConfirmDialog: props => () => {\r\n            const {dispatch, detail, filter, location: {pathname}} = props\r\n            dispatch(usersDeleteAction(detail.id))\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[USERS_DELETE_DIALOG_OPEN]: false})})\r\n                    dispatch(usersListFetchAction(filter))\r\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\r\n                })\r\n                .catch(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\r\n                })\r\n        },\r\n\r\n        handleOpenFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[USERS_FILTER_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseFilterDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[USERS_FILTER_OPEN]: false})})\r\n        },\r\n\r\n        handleClearFilterDialog: props => () => {\r\n            const {location: {pathname}} = props\r\n            hashHistory.push({pathname, query: {}})\r\n        },\r\n\r\n        handleSubmitFilterDialog: props => () => {\r\n            const {filter, filterForm} = props\r\n            const manufacture = _.get(filterForm, ['values', 'manufacture', 'value']) || null\r\n            const group = _.get(filterForm, ['values', 'group', 'value']) || null\r\n\r\n            filter.filterBy({\r\n                [USERS_FILTER_OPEN]: false,\r\n                [USERS_FILTER_KEY.MANUFACTURE]: manufacture,\r\n                [USERS_FILTER_KEY.GROUP]: group\r\n            })\r\n        },\r\n        handleOpenDeleteDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({\r\n                pathname,\r\n                query: filter.getParams({openDeleteDialog: 'yes'})\r\n            })\r\n        },\r\n\r\n        handleCloseDeleteDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({openDeleteDialog: false})})\r\n        },\r\n\r\n        handleOpenCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[USERS_CREATE_DIALOG_OPEN]: true})})\r\n        },\r\n\r\n        handleCloseCreateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[USERS_CREATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitCreateDialog: props => () => {\r\n            const {dispatch, createForm, filter, location: {pathname}} = props\r\n\r\n            return dispatch(usersCreateAction(_.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[USERS_CREATE_DIALOG_OPEN]: false})})\r\n                    dispatch(usersListFetchAction(filter))\r\n                })\r\n        },\r\n\r\n        handleOpenUpdateDialog: props => (id) => {\r\n            const {filter} = props\r\n            hashHistory.push({\r\n                pathname: sprintf(ROUTER.USERS_ITEM_PATH, id),\r\n                query: filter.getParams({[USERS_UPDATE_DIALOG_OPEN]: true})\r\n            })\r\n        },\r\n\r\n        handleCloseUpdateDialog: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[USERS_UPDATE_DIALOG_OPEN]: false})})\r\n        },\r\n\r\n        handleSubmitUpdateDialog: props => () => {\r\n            const {dispatch, createForm, filter, location: {pathname}} = props\r\n            const usersId = _.toInteger(_.get(props, ['params', 'usersId']))\r\n            return dispatch(usersUpdateAction(usersId, _.get(createForm, ['values'])))\r\n                .then(() => {\r\n                    return dispatch(usersItemFetchAction(usersId))\r\n                })\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({\r\n                        pathname,\r\n                        query: filter.getParams({[USERS_UPDATE_DIALOG_OPEN]: false, 'passErr': false})\r\n                    })\r\n                    dispatch(usersListFetchAction(filter))\r\n                })\r\n        }\r\n    })\r\n)\r\n\r\nconst UsersList = enhance((props) => {\r\n    const {\r\n        location,\r\n        list,\r\n        listLoading,\r\n        detail,\r\n        detailLoading,\r\n        createLoading,\r\n        updateLoading,\r\n        filter,\r\n        layout,\r\n        params\r\n    } = props\r\n\r\n    const openFilterDialog = toBoolean(_.get(location, ['query', USERS_FILTER_OPEN]))\r\n    const openCreateDialog = toBoolean(_.get(location, ['query', USERS_CREATE_DIALOG_OPEN]))\r\n    const openUpdateDialog = toBoolean(_.get(location, ['query', USERS_UPDATE_DIALOG_OPEN]))\r\n    const openConfirmDialog = toBoolean(_.get(location, ['query', USERS_DELETE_DIALOG_OPEN]))\r\n\r\n    const manufacture = _.toInteger(filter.getParam(USERS_FILTER_KEY.MANUFACTURE))\r\n    const group = _.toInteger(filter.getParam(USERS_FILTER_KEY.GROUP))\r\n    const detailId = _.toInteger(_.get(params, 'usersId'))\r\n    const showError = toBoolean(_.get(location, ['query', 'passErr']))\r\n\r\n    const actionsDialog = {\r\n        handleActionEdit: props.handleActionEdit,\r\n        handleActionDelete: props.handleOpenDeleteDialog\r\n    }\r\n\r\n    const errorData = {\r\n        errorText: 'Введены неправильные значения',\r\n        show: showError\r\n    }\r\n\r\n    const createDialog = {\r\n        createLoading,\r\n        openCreateDialog,\r\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\r\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\r\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog,\r\n        errorData\r\n    }\r\n\r\n    const confirmDialog = {\r\n        confirmLoading: detailLoading,\r\n        openConfirmDialog: openConfirmDialog,\r\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\r\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\r\n        handleSendConfirmDialog: props.handleSendConfirmDialog\r\n    }\r\n\r\n    const updateDialog = {\r\n        initialValues: (() => {\r\n            if (!detail || openCreateDialog) {\r\n                return {}\r\n            }\r\n\r\n            return {\r\n                username: _.get(detail, 'username'),\r\n                firstName: _.get(detail, 'firstName'),\r\n                secondName: _.get(detail, 'secondName'),\r\n                phoneNumber: _.get(detail, 'phoneNumber'),\r\n                group: {\r\n                    value: _.get(detail, ['groups', ZERO, 'id'])\r\n                },\r\n                region: _.get(detail, 'region'),\r\n                password: _.get(detail, 'password'),\r\n                typeUser: _.get(detail, 'typeUser'),\r\n                image: _.get(detail, 'image')\r\n            }\r\n        })(),\r\n        updateLoading: detailLoading || updateLoading,\r\n        openUpdateDialog,\r\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\r\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\r\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog,\r\n        errorData\r\n    }\r\n    const filterDialog = {\r\n        initialValues: {\r\n            manufacture: {\r\n                value: manufacture\r\n            },\r\n            group: {\r\n                value: group\r\n            }\r\n        },\r\n        filterLoading: false,\r\n        openFilterDialog,\r\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\r\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\r\n        handleClearFilterDialog: props.handleClearFilterDialog,\r\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\r\n    }\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading\r\n    }\r\n\r\n    const detailData = {\r\n        id: detailId,\r\n        data: detail,\r\n        detailLoading\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <UsersGridList\r\n                filter={filter}\r\n                listData={listData}\r\n                detailData={detailData}\r\n                createDialog={createDialog}\r\n                confirmDialog={confirmDialog}\r\n                updateDialog={updateDialog}\r\n                actionsDialog={actionsDialog}\r\n                filterDialog={filterDialog}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default UsersList\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Users/UsersList.js","import UsersList from './UsersList'\n\nexport {UsersList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Users/index.js","import React from 'react'\r\nimport _ from 'lodash'\r\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\r\nimport {connect} from 'react-redux'\r\nimport Layout from '../../components/Layout'\r\nimport {hashHistory} from 'react-router'\r\nimport filterHelper from '../../helpers/filter'\r\nimport toBoolean from '../../helpers/toBoolean'\r\nimport ZonesWrapper from '../../components/Zones/ZonesWrapper'\r\nimport {ADD_ZONE, TOGGLE_INFO} from '../../components/Zones'\r\nimport {\r\n    zoneCreateAction,\r\n    zoneListFetchAction,\r\n    zoneListSearchFetchAction,\r\n    zoneStatisticsFetchAction,\r\n    zoneItemFetchAction\r\n} from '../../actions/zones'\r\nimport {openSnackbarAction} from '../../actions/snackbar'\r\nconst ZERO = 0\r\nconst enhance = compose(\r\n    connect((state, props) => {\r\n        const query = _.get(props, ['location', 'query'])\r\n        const pathname = _.get(props, ['location', 'pathname'])\r\n        const list = _.get(state, ['zone', 'list', 'data'])\r\n        const listLoading = _.get(state, ['zone', 'list', 'loading'])\r\n        const detail = _.get(state, ['zone', 'item', 'data'])\r\n        const detailLoading = _.get(state, ['zone', 'item', 'loading'])\r\n        const stat = _.get(state, ['zone', 'statistics', 'data'])\r\n        const statLoading = _.get(state, ['zone', 'statistics', 'loading'])\r\n        const createForm = _.get(state, ['form', 'ZoneCreateForm', 'values'])\r\n        const filter = filterHelper(list, pathname, query)\r\n        return {\r\n            query,\r\n            pathname,\r\n            list,\r\n            listLoading,\r\n            stat,\r\n            statLoading,\r\n            detail,\r\n            detailLoading,\r\n            createForm,\r\n            filter\r\n        }\r\n    }),\r\n    withPropsOnChange((props, nextProps) => {\r\n        const prevToggle = toBoolean(_.get(props, ['query', 'openInfo']))\r\n        const nextToggle = toBoolean(_.get(nextProps, ['query', 'openInfo']))\r\n        return prevToggle !== nextToggle && nextToggle === true\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(zoneListFetchAction(filter))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const prevId = _.get(props, ['params', 'zoneId'])\r\n        const nextId = _.get(nextProps, ['params', 'zoneId'])\r\n        return prevId !== nextId\r\n    }, ({dispatch, params}) => {\r\n        const zoneId = _.toInteger(_.get(params, 'zoneId'))\r\n        if (zoneId > ZERO) {\r\n            dispatch(zoneItemFetchAction(zoneId))\r\n        }\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const prevSearch = _.get(props, ['query', 'search'])\r\n        const nextSearch = _.get(nextProps, ['query', 'search'])\r\n        return prevSearch !== nextSearch\r\n    }, ({dispatch, query}) => {\r\n        const search = _.get(query, 'search')\r\n        dispatch(zoneListSearchFetchAction(search))\r\n    }),\r\n\r\n    withPropsOnChange((props, nextProps) => {\r\n        const prevToggle = toBoolean(_.get(props, ['query', 'openInfo']))\r\n        const nextToggle = toBoolean(_.get(nextProps, ['query', 'openInfo']))\r\n        return prevToggle !== nextToggle && nextToggle === true\r\n    }, ({dispatch, filter}) => {\r\n        dispatch(zoneStatisticsFetchAction(filter))\r\n    }),\r\n\r\n    withHandlers({\r\n        handleExpandInfo: props => () => {\r\n            const {location: {pathname}, dispatch, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[TOGGLE_INFO]: true})})\r\n\r\n            return dispatch(zoneStatisticsFetchAction(filter))\r\n        },\r\n\r\n        handleCollapseInfo: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[TOGGLE_INFO]: false})})\r\n        },\r\n\r\n        handleOpenAddZone: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[ADD_ZONE]: true})})\r\n        },\r\n\r\n        handleCloseAddZone: props => () => {\r\n            const {location: {pathname}, filter} = props\r\n            hashHistory.push({pathname, query: filter.getParams({[ADD_ZONE]: false})})\r\n        },\r\n\r\n        handleSubmitAddZone: props => () => {\r\n            const {location: {pathname}, dispatch, createForm, filter} = props\r\n\r\n            return dispatch(zoneCreateAction(createForm))\r\n                .then(() => {\r\n                    return dispatch(openSnackbarAction({message: 'Зона успешно добавлена'}))\r\n                })\r\n                .then(() => {\r\n                    hashHistory.push({pathname, query: filter.getParams({[ADD_ZONE]: false})})\r\n                    dispatch(zoneListFetchAction(filter))\r\n                })\r\n        }\r\n    })\r\n)\r\n\r\nconst Zones = enhance((props) => {\r\n    const {\r\n        filter,\r\n        list,\r\n        listLoading,\r\n        location,\r\n        layout,\r\n        params,\r\n        stat,\r\n        statLoading,\r\n        detail,\r\n        detailLoading\r\n    } = props\r\n\r\n    const openAddZone = toBoolean(_.get(location, ['query', ADD_ZONE]))\r\n    const openToggle = toBoolean(_.get(location, ['query', TOGGLE_INFO]))\r\n    const openDetail = !_.isEmpty(_.get(params, 'zoneId'))\r\n    const detailId = _.toInteger(_.get(params, 'zoneId'))\r\n\r\n    const addZone = {\r\n        openAddZone,\r\n        handleOpenAddZone: props.handleOpenAddZone,\r\n        handleCloseAddZone: props.handleCloseAddZone,\r\n        handleSubmitAddZone: props.handleSubmitAddZone\r\n    }\r\n\r\n    const listData = {\r\n        data: _.get(list, 'results'),\r\n        listLoading\r\n    }\r\n\r\n    const statData = {\r\n        data: stat,\r\n        statLoading\r\n    }\r\n\r\n    const detailData = {\r\n        openDetail,\r\n        id: detailId,\r\n        data: detail,\r\n        detailLoading\r\n    }\r\n\r\n    const toggle = {\r\n        openToggle,\r\n        handleExpandInfo: props.handleExpandInfo,\r\n        handleCollapseInfo: props.handleCollapseInfo\r\n    }\r\n\r\n    return (\r\n        <Layout {...layout}>\r\n            <ZonesWrapper\r\n                filter={filter}\r\n                listData={listData}\r\n                statData={statData}\r\n                addZone={addZone}\r\n                toggle={toggle}\r\n                detailData={detailData}\r\n            />\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default Zones\r\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Zones/Zones.js","import Zones from './Zones'\n\nexport {Zones}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Zones/index.js","import createReducer from './createReducer'\n\nconst createStandardReducer = (actionName) => {\n    return createReducer({\n        data: null,\n        loading: false\n    }, {\n        [actionName] (state, action) {\n            return {...state, data: action.data, loading: action.loading}\n        }\n    })\n}\n\nexport default createStandardReducer\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/createStandardReducer.js","import createReducer from './createReducer'\nimport toCamelCase from './toCamelCase'\n\nconst defaultState = {\n    data: null,\n    error: null,\n    loading: false,\n    failed: false\n}\n\nconst createThunkReducer = (actionName) => {\n    return createReducer(defaultState, {\n        [`${actionName}_PENDING`] (state, action) {\n            return {\n                ...state,\n                loading: true\n            }\n        },\n        [`${actionName}_FULFILLED`] (state, action) {\n            return {\n                ...state,\n                data: toCamelCase(action.payload),\n                error: null,\n                loading: false,\n                failed: false\n            }\n        },\n        [`${actionName}_REJECTED`] (state, action) {\n            return {\n                ...state,\n                data: null,\n                error: toCamelCase(action.payload),\n                loading: false,\n                failed: true\n            }\n        },\n        [`${actionName}_CLEAR`] () {\n            return defaultState\n        }\n    })\n}\n\nexport default createThunkReducer\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/createThunkReducer.js","import _ from 'lodash'\n\nconst NOT_FOUND = -1\n\nconst excludeObjKey = (obj, keys) => {\n    return _.pickBy(obj, (value, key) => {\n        const find = _\n            .chain(keys)\n            .indexOf(key)\n            .value()\n        return find === NOT_FOUND\n    })\n}\n\nexport default excludeObjKey\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/excludeObjKey.js","import _ from 'lodash'\nimport {routerActions} from 'react-router-redux'\nimport {UserAuthWrapper as userAuthWrapper} from 'redux-auth-wrapper'\n\nexport const userIsAuth = userAuthWrapper({\n    authSelector: state => _.get(state, 'signIn'),\n    failureRedirectPath: '/sign-in',\n    redirectAction: routerActions.replace,\n    predicate: signIn => {\n        const token = _.get(signIn, 'data')\n        return !_.isEmpty(token)\n    },\n    wrapperDisplayName: 'UserIsAuthenticated'\n})\n\nexport const visibleOnlyAdmin = userAuthWrapper({\n    authSelector: state => state.user,\n    wrapperDisplayName: 'VisibleOnlyAdmin',\n    predicate: user => user.isAdmin,\n    FailureComponent: null\n})\n\n\n\n// WEBPACK FOOTER //\n// src/permissions/index.js","import {reducer as formReducer} from 'redux-form'\r\nimport {reducer as toastrReducer} from 'react-redux-toastr'\r\nimport {routerReducer} from 'react-router-redux'\r\nimport {combineReducers} from 'redux'\r\nimport createThunkReducer from '../helpers/createThunkReducer'\r\nimport createStandardReducer from '../helpers/createStandardReducer'\r\nimport * as actionTypes from '../constants/actionTypes'\r\nimport snackbarReducer from './snackbarReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    signIn: createThunkReducer(actionTypes.SIGN_IN),\r\n    config: combineReducers({\r\n        primaryCurrency: createThunkReducer(actionTypes.CONFIG)\r\n    }),\r\n    shop: combineReducers({\r\n        create: createThunkReducer(actionTypes.SHOP_CREATE),\r\n        list: createThunkReducer(actionTypes.SHOP_LIST),\r\n        item: createThunkReducer(actionTypes.SHOP_ITEM),\r\n        update: createThunkReducer(actionTypes.SHOP_UPDATE),\r\n        image: createThunkReducer(actionTypes.SHOP_ITEM_ADD_IMAGE),\r\n        gallery: createThunkReducer(actionTypes.SHOP_ITEM_SHOW_IMAGE)\r\n    }),\r\n    cashbox: combineReducers({\r\n        create: createThunkReducer(actionTypes.CASHBOX_CREATE),\r\n        list: createThunkReducer(actionTypes.CASHBOX_LIST),\r\n        item: createThunkReducer(actionTypes.CASHBOX_ITEM),\r\n        update: createThunkReducer(actionTypes.CASHBOX_UPDATE)\r\n    }),\r\n    shipment: combineReducers({\r\n        list: createThunkReducer(actionTypes.SHIPMENT_LIST),\r\n        item: createThunkReducer(actionTypes.SHIPMENT_ITEM)\r\n    }),\r\n    transaction: combineReducers({\r\n        create: createThunkReducer(actionTypes.TRANSACTION_CREATE),\r\n        list: createThunkReducer(actionTypes.TRANSACTION_LIST),\r\n        item: createThunkReducer(actionTypes.TRANSACTION_ITEM),\r\n        update: createThunkReducer(actionTypes.TRANSACTION_UPDATE)\r\n    }),\r\n    clientTransaction: combineReducers({\r\n        create: createThunkReducer(actionTypes.CLIENT_TRANSACTION_CREATE),\r\n        item: createThunkReducer(actionTypes.CLIENT_TRANSACTION_ITEM),\r\n        update: createThunkReducer(actionTypes.CLIENT_TRANSACTION_UPDATE),\r\n        list: createThunkReducer(actionTypes.CLIENT_TRANSACTION_LIST)\r\n    }),\r\n    supply: combineReducers({\r\n        create: createThunkReducer(actionTypes.SUPPLY_CREATE),\r\n        list: createThunkReducer(actionTypes.SUPPLY_LIST),\r\n        item: createThunkReducer(actionTypes.SUPPLY_ITEM),\r\n        update: createThunkReducer(actionTypes.SUPPLY_UPDATE),\r\n        defect: createThunkReducer(actionTypes.SUPPLY_DEFECT)\r\n    }),\r\n    prices: combineReducers({\r\n        create: createThunkReducer(actionTypes.PRICES_CREATE),\r\n        list: createThunkReducer(actionTypes.PRICES_LIST),\r\n        item: createThunkReducer(actionTypes.PRICES_ITEM),\r\n        update: createThunkReducer(actionTypes.PRICES_UPDATE)\r\n    }),\r\n    supplyExpense: combineReducers({\r\n        create: createThunkReducer(actionTypes.SUPPLY_EXPENSE_CREATE),\r\n        list: createThunkReducer(actionTypes.SUPPLY_EXPENSE_LIST),\r\n        item: createThunkReducer(actionTypes.SUPPLY_EXPENSE_ITEM),\r\n        update: createThunkReducer(actionTypes.SUPPLY_EXPENSE_UPDATE)\r\n    }),\r\n    order: combineReducers({\r\n        create: createThunkReducer(actionTypes.ORDER_CREATE),\r\n        list: createThunkReducer(actionTypes.ORDER_LIST),\r\n        payment: createThunkReducer(actionTypes.ORDER_TRANSACTION),\r\n        item: createThunkReducer(actionTypes.ORDER_ITEM),\r\n        document: createThunkReducer(actionTypes.GET_DOCUMENT),\r\n        return: createThunkReducer(actionTypes.ORDER_RETURN),\r\n        returnList: createThunkReducer(actionTypes.ORDER_RETURN_LIST),\r\n        update: createThunkReducer(actionTypes.ORDER_UPDATE)\r\n    }),\r\n    product: combineReducers({\r\n        create: createThunkReducer(actionTypes.PRODUCT_CREATE),\r\n        list: createThunkReducer(actionTypes.PRODUCT_LIST),\r\n        update: createThunkReducer(actionTypes.PRODUCT_UPDATE),\r\n        item: createThunkReducer(actionTypes.PRODUCT_ITEM),\r\n        measurement: createStandardReducer(actionTypes.PRODUCT_MEASUREMENT),\r\n        extra: createStandardReducer(actionTypes.PRODUCT_EXTRA)\r\n    }),\r\n    ingredient: combineReducers({\r\n        create: createThunkReducer(actionTypes.INGREDIENT_CREATE),\r\n        list: createThunkReducer(actionTypes.INGREDIENT_LIST),\r\n        update: createThunkReducer(actionTypes.INGREDIENT_UPDATE),\r\n        item: createThunkReducer(actionTypes.INGREDIENT_ITEM)\r\n    }),\r\n    productType: combineReducers({\r\n        create: createThunkReducer(actionTypes.PRODUCT_TYPE_CREATE),\r\n        list: createThunkReducer(actionTypes.PRODUCT_TYPE_LIST),\r\n        update: createThunkReducer(actionTypes.PRODUCT_TYPE_UPDATE),\r\n        item: createThunkReducer(actionTypes.PRODUCT_TYPE_ITEM)\r\n    }),\r\n    productPrice: combineReducers({\r\n        create: createThunkReducer(actionTypes.PRODUCT_PRICE_CREATE),\r\n        list: createThunkReducer(actionTypes.PRODUCT_PRICE_LIST),\r\n        update: createThunkReducer(actionTypes.PRODUCT_PRICE_UPDATE),\r\n        item: createThunkReducer(actionTypes.PRODUCT_PRICE_ITEM)\r\n    }),\r\n    category: combineReducers({\r\n        create: createThunkReducer(actionTypes.CATEGORY_CREATE),\r\n        list: createThunkReducer(actionTypes.CATEGORY_LIST),\r\n        update: createThunkReducer(actionTypes.CATEGORY_UPDATE),\r\n        item: createThunkReducer(actionTypes.CATEGORY_ITEM)\r\n    }),\r\n    equipment: combineReducers({\r\n        create: createThunkReducer(actionTypes.EQUIPMENT_CREATE),\r\n        list: createThunkReducer(actionTypes.EQUIPMENT_LIST),\r\n        update: createThunkReducer(actionTypes.EQUIPMENT_UPDATE),\r\n        item: createThunkReducer(actionTypes.EQUIPMENT_ITEM)\r\n    }),\r\n    stock: combineReducers({\r\n        create: createThunkReducer(actionTypes.STOCK_CREATE),\r\n        list: createThunkReducer(actionTypes.STOCK_LIST),\r\n        update: createThunkReducer(actionTypes.STOCK_UPDATE),\r\n        item: createThunkReducer(actionTypes.STOCK_ITEM)\r\n    }),\r\n    currency: combineReducers({\r\n        create: createThunkReducer(actionTypes.CURRENCY_CREATE),\r\n        list: createThunkReducer(actionTypes.CURRENCY_LIST),\r\n        update: createThunkReducer(actionTypes.CURRENCY_UPDATE),\r\n        item: createThunkReducer(actionTypes.CURRENCY_ITEM),\r\n        primary: createThunkReducer(actionTypes.CURRENCY_PRIMARY),\r\n        primaryUpdate: createThunkReducer(actionTypes.CURRENCY_PRIMARY_UPDATE)\r\n    }),\r\n    measurement: combineReducers({\r\n        create: createThunkReducer(actionTypes.MEASUREMENT_CREATE),\r\n        list: createThunkReducer(actionTypes.MEASUREMENT_LIST),\r\n        update: createThunkReducer(actionTypes.MEASUREMENT_UPDATE),\r\n        item: createThunkReducer(actionTypes.MEASUREMENT_ITEM)\r\n    }),\r\n    expensiveCategory: combineReducers({\r\n        create: createThunkReducer(actionTypes.EXPENSIVE_CATEGORY_CREATE),\r\n        list: createThunkReducer(actionTypes.EXPENSIVE_CATEGORY_LIST),\r\n        update: createThunkReducer(actionTypes.EXPENSIVE_CATEGORY_UPDATE),\r\n        item: createThunkReducer(actionTypes.EXPENSIVE_CATEGORY_ITEM)\r\n    }),\r\n    users: combineReducers({\r\n        create: createThunkReducer(actionTypes.USERS_CREATE),\r\n        list: createThunkReducer(actionTypes.USERS_LIST),\r\n        update: createThunkReducer(actionTypes.USERS_UPDATE),\r\n        item: createThunkReducer(actionTypes.USERS_ITEM)\r\n    }),\r\n    provider: combineReducers({\r\n        create: createThunkReducer(actionTypes.PROVIDER_CREATE),\r\n        list: createThunkReducer(actionTypes.PROVIDER_LIST),\r\n        update: createThunkReducer(actionTypes.PROVIDER_UPDATE),\r\n        item: createThunkReducer(actionTypes.PROVIDER_ITEM),\r\n        contacts: createStandardReducer(actionTypes.PROVIDER_CONTACTS)\r\n    }),\r\n    client: combineReducers({\r\n        create: createThunkReducer(actionTypes.CLIENT_CREATE),\r\n        list: createThunkReducer(actionTypes.CLIENT_LIST),\r\n        update: createThunkReducer(actionTypes.CLIENT_UPDATE),\r\n        item: createThunkReducer(actionTypes.CLIENT_ITEM),\r\n        contacts: createStandardReducer(actionTypes.CLIENT_CONTACTS)\r\n    }),\r\n    brand: combineReducers({\r\n        create: createThunkReducer(actionTypes.BRAND_CREATE),\r\n        list: createThunkReducer(actionTypes.BRAND_LIST),\r\n        update: createThunkReducer(actionTypes.BRAND_UPDATE),\r\n        item: createThunkReducer(actionTypes.BRAND_ITEM)\r\n    }),\r\n    manufacture: combineReducers({\r\n        create: createThunkReducer(actionTypes.MANUFACTURE_CREATE),\r\n        list: createThunkReducer(actionTypes.MANUFACTURE_LIST),\r\n        update: createThunkReducer(actionTypes.MANUFACTURE_UPDATE),\r\n        item: createThunkReducer(actionTypes.MANUFACTURE_ITEM)\r\n    }),\r\n    shift: combineReducers({\r\n        create: createThunkReducer(actionTypes.SHIFT_CREATE),\r\n        list: createThunkReducer(actionTypes.SHIFT_LIST),\r\n        update: createThunkReducer(actionTypes.SHIFT_UPDATE),\r\n        item: createThunkReducer(actionTypes.SHIFT_ITEM)\r\n    }),\r\n    userShift: combineReducers({\r\n        create: createThunkReducer(actionTypes.USER_SHIFT_CREATE),\r\n        list: createThunkReducer(actionTypes.USER_SHIFT_LIST),\r\n        update: createThunkReducer(actionTypes.USER_SHIFT_UPDATE),\r\n        item: createThunkReducer(actionTypes.USER_SHIFT_ITEM)\r\n    }),\r\n    notifications: combineReducers({\r\n        list: createThunkReducer(actionTypes.NOTIFICATIONS_LIST),\r\n        item: createThunkReducer(actionTypes.NOTIFICATIONS_ITEM),\r\n        timeInterval: createThunkReducer((actionTypes.NOTIFICATIONS_TIME_INTERVAL))\r\n    }),\r\n    pendingExpenses: combineReducers({\r\n        create: createThunkReducer(actionTypes.PENDING_EXPENSES_CREATE),\r\n        list: createThunkReducer(actionTypes.PENDING_EXPENSES_LIST),\r\n        update: createThunkReducer(actionTypes.PENDING_EXPENSES_UPDATE),\r\n        item: createThunkReducer(actionTypes.PENDING_EXPENSES_ITEM)\r\n    }),\r\n    statStock: combineReducers({\r\n        create: createThunkReducer(actionTypes.STATSTOCK_CREATE),\r\n        list: createThunkReducer(actionTypes.STATSTOCK_LIST),\r\n        update: createThunkReducer(actionTypes.STATSTOCK_UPDATE),\r\n        item: createThunkReducer(actionTypes.STATSTOCK_ITEM),\r\n        statStockData: createThunkReducer(actionTypes.STATSTOCK_DATA),\r\n        document: createThunkReducer(actionTypes.STATSTOCK_GET_DOCUMENT)\r\n    }),\r\n    remainderStock: combineReducers({\r\n        create: createThunkReducer(actionTypes.REMAINDER_STOCK_CREATE),\r\n        list: createThunkReducer(actionTypes.REMAINDER_STOCK_LIST),\r\n        update: createThunkReducer(actionTypes.REMAINDER_STOCK_UPDATE),\r\n        item: createThunkReducer(actionTypes.REMAINDER_STOCK_ITEM)\r\n    }),\r\n    transactionStock: combineReducers({\r\n        create: createThunkReducer(actionTypes.TRANSACTION_STOCK_CREATE),\r\n        list: createThunkReducer(actionTypes.TRANSACTION_STOCK_LIST),\r\n        update: createThunkReducer(actionTypes.TRANSACTION_STOCK_UPDATE)\r\n    }),\r\n    statDebtors: combineReducers({\r\n        create: createThunkReducer(actionTypes.STATDEBTORS_CREATE),\r\n        list: createThunkReducer(actionTypes.STATDEBTORS_LIST),\r\n        update: createThunkReducer(actionTypes.STATDEBTORS_UPDATE),\r\n        item: createThunkReducer(actionTypes.STATDEBTORS_ITEM),\r\n        sum: createThunkReducer(actionTypes.STATDEBTORS_SUM),\r\n        orderList: createThunkReducer(actionTypes.STATDEBTORS_ORDER_LIST),\r\n        document: createThunkReducer(actionTypes.STATDEBTORS_GET_DOCUMENT)\r\n    }),\r\n    statManufacture: combineReducers({\r\n        create: createThunkReducer(actionTypes.STAT_MANUFACTURE_CREATE),\r\n        list: createThunkReducer(actionTypes.STAT_MANUFACTURE_LIST),\r\n        update: createThunkReducer(actionTypes.STAT_MANUFACTURE_UPDATE),\r\n        item: createThunkReducer(actionTypes.STAT_MANUFACTURE_ITEM)\r\n    }),\r\n    statCashbox: combineReducers({\r\n        create: createThunkReducer(actionTypes.STAT_CASHBOX_CREATE),\r\n        list: createThunkReducer(actionTypes.STAT_CASHBOX_LIST),\r\n        update: createThunkReducer(actionTypes.STAT_CASHBOX_UPDATE),\r\n        item: createThunkReducer(actionTypes.STAT_CASHBOX_ITEM)\r\n    }),\r\n    pendingPayments: combineReducers({\r\n        create: createThunkReducer(actionTypes.PENDING_PAYMENTS_CREATE),\r\n        list: createThunkReducer(actionTypes.PENDING_PAYMENTS_LIST),\r\n        update: createThunkReducer(actionTypes.PENDING_PAYMENTS_UPDATE),\r\n        item: createThunkReducer(actionTypes.PENDING_PAYMENTS_ITEM)\r\n    }),\r\n    marketType: combineReducers({\r\n        create: createThunkReducer(actionTypes.MARKET_TYPE_CREATE),\r\n        list: createThunkReducer(actionTypes.MARKET_TYPE_LIST),\r\n        update: createThunkReducer(actionTypes.MARKET_TYPE_UPDATE),\r\n        item: createThunkReducer(actionTypes.MARKET_TYPE_ITEM)\r\n    }),\r\n    price: combineReducers({\r\n        list: createThunkReducer(actionTypes.PRICE_LIST),\r\n        item: createThunkReducer(actionTypes.PRICE_ITEM),\r\n        price: createThunkReducer(actionTypes.PRICE_LIST_ITEM_LIST)\r\n    }),\r\n    zone: combineReducers({\r\n        create: createThunkReducer(actionTypes.ZONE_CREATE),\r\n        list: createThunkReducer(actionTypes.ZONE_LIST),\r\n        update: createThunkReducer(actionTypes.ZONE_UPDATE),\r\n        item: createThunkReducer(actionTypes.ZONE_ITEM),\r\n        statistics: createThunkReducer(actionTypes.ZONE_STAT)\r\n    }),\r\n    remainder: combineReducers({\r\n        create: createThunkReducer(actionTypes.REMAINDER_CREATE),\r\n        list: createThunkReducer(actionTypes.REMAINDER_LIST),\r\n        update: createThunkReducer(actionTypes.REMAINDER_UPDATE),\r\n        item: createThunkReducer(actionTypes.REMAINDER_ITEM)\r\n    }),\r\n    stockReceive: combineReducers({\r\n        list: createThunkReducer(actionTypes.STOCK_RECEIVE_LIST),\r\n        history: createThunkReducer(actionTypes.STOCK_HISTORY_LIST),\r\n        transfer: createThunkReducer(actionTypes.STOCK_TRANSFER_LIST),\r\n        transferItem: createThunkReducer(actionTypes.STOCK_TRANSFER_ITEM),\r\n        item: createThunkReducer(actionTypes.STOCK_RECEIVE_ITEM),\r\n        create: createThunkReducer(actionTypes.STOCK_RECEIVE_CREATE),\r\n        barcodeList: createThunkReducer(actionTypes.STOCK_BARCODE_LIST)\r\n    }),\r\n    statistics: combineReducers({\r\n        list: createThunkReducer(actionTypes.REMAINDER_LIST),\r\n        item: createThunkReducer(actionTypes.REMAINDER_ITEM)\r\n    }),\r\n\r\n    snackbar: snackbarReducer(),\r\n    form: formReducer,\r\n    toastr: toastrReducer,\r\n    routing: routerReducer\r\n})\r\n\r\nexport default rootReducer\r\n\n\n\n// WEBPACK FOOTER //\n// src/reducers/index.js","import * as actionTypes from '../constants/actionTypes'\nimport createReducer from '../helpers/createReducer'\n\nexport const defaultState = {\n    open: false,\n    message: 'Message',\n    autoHideDuration: 3000\n}\n\nconst snackbarReducer = () => {\n    return createReducer(defaultState, {\n        [`${actionTypes.SNACKBAR_OPEN}`] (state, {payload}) {\n            return {\n                ...state,\n                ...payload,\n                open: true\n            }\n        },\n\n        [`${actionTypes.SNACKBAR_CLOSE}`] (state) {\n            return {\n                ...state,\n                open: false\n            }\n        }\n    })\n}\n\nexport default snackbarReducer\n\n\n\n// WEBPACK FOOTER //\n// src/reducers/snackbarReducer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../../helpers/serializer'\n\nexport const createSerializer = (data, productId) => {\n    const price = _.get(data, ['price'])\n    return {\n        price,\n        'product': productId\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'brand': _.get(defaultData, 'brand'),\n        'type': _.get(defaultData, 'type'),\n        'measurement': _.get(defaultData, 'measurement'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Product/productPriceSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n    const brand = _.get(data, ['brand', 'value'])\n    const type = _.get(data, ['type', 'value'])\n    const measurement = _.get(data, ['measurement', 'value'])\n    const image = _.get(data, 'image')\n    const imageId = (_.get(image, ['id'])) ? _.get(image, ['id']) : image\n\n    return {\n        name,\n        brand,\n        type,\n        measurement,\n        image: imageId\n    }\n}\n\nexport const listFilterSerializer = (data, manufacture) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n    return {\n        'manufacture': manufacture,\n        'brand': _.get(defaultData, 'brand'),\n        'type': _.get(defaultData, 'type'),\n        'measurement': _.get(defaultData, 'measurement'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Product/productSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n\n    return {\n        name\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'name': _.get(defaultData, 'name'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Product/productTypeSerializer.js","import _ from 'lodash'\r\nimport {orderingSnakeCase} from '../../helpers/serializer'\r\n\r\nexport const createSerializer = (data) => {\r\n    const name = _.get(data, ['name'])\r\n\r\n    return {\r\n        name\r\n    }\r\n}\r\n\r\nexport const listFilterSerializer = (data) => {\r\n    const {...defaultData} = data\r\n    const ordering = _.get(data, 'ordering')\r\n\r\n    return {\r\n        'search': _.get(defaultData, 'search'),\r\n        'page': _.get(defaultData, 'page'),\r\n        'page_size': _.get(defaultData, 'pageSize'),\r\n        'ordering': ordering && orderingSnakeCase(ordering)\r\n    }\r\n}\r\n\r\nexport const csvFilterSerializer = (data) => {\r\n    const {...defaultData} = listFilterSerializer(data)\r\n\r\n    return {\r\n        ...defaultData\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Statistics/statAgentSerializer.js","import _ from 'lodash'\r\nimport {orderingSnakeCase} from '../../helpers/serializer'\r\n\r\nexport const createSerializer = (data) => {\r\n    const name = _.get(data, ['name'])\r\n\r\n    return {\r\n        name\r\n    }\r\n}\r\n\r\nexport const listFilterSerializer = (data) => {\r\n    const {...defaultData} = data\r\n    const ordering = _.get(data, 'ordering')\r\n\r\n    return {\r\n        'search': _.get(defaultData, 'search'),\r\n        'page': _.get(defaultData, 'page'),\r\n        'page_size': _.get(defaultData, 'pageSize'),\r\n        'ordering': ordering && orderingSnakeCase(ordering)\r\n    }\r\n}\r\n\r\nexport const csvFilterSerializer = (data) => {\r\n    const {...defaultData} = listFilterSerializer(data)\r\n\r\n    return {\r\n        ...defaultData\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Statistics/statProductSerializer.js","import _ from 'lodash'\r\nimport {orderingSnakeCase} from '../../helpers/serializer'\r\n\r\nexport const createSerializer = (data) => {\r\n    const name = _.get(data, ['name'])\r\n\r\n    return {\r\n        name\r\n    }\r\n}\r\n\r\nexport const listFilterSerializer = (data) => {\r\n    const {...defaultData} = data\r\n    const ordering = _.get(data, 'ordering')\r\n\r\n    return {\r\n        'search': _.get(defaultData, 'search'),\r\n        'page': _.get(defaultData, 'page'),\r\n        'page_size': _.get(defaultData, 'pageSize'),\r\n        'ordering': ordering && orderingSnakeCase(ordering)\r\n    }\r\n}\r\n\r\nexport const csvFilterSerializer = (data) => {\r\n    const {...defaultData} = listFilterSerializer(data)\r\n\r\n    return {\r\n        ...defaultData\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Statistics/statisticsSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../../helpers/serializer'\n\nexport const createSerializer = (data, id) => {\n    const supply = id\n    const amount = _.get(data, ['amount'])\n    const currency = _.get(data, ['currency', 'value'])\n    const comment = _.get(data, ['comment'])\n\n    return {\n        supply,\n        amount,\n        currency,\n        comment\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'provider': _.get(defaultData, 'provider'),\n        'stock': _.get(defaultData, 'stock'),\n        'created_date_0': _.get(defaultData, 'fromDate'),\n        'created_date_1': _.get(defaultData, 'toDate'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const expenseSupplySerializer = (supplyId) => {\n    return {\n        'supply': supplyId\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Supply/supplyExpenseSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../../helpers/serializer'\nimport moment from 'moment'\n\nexport const createSerializer = (data) => {\n    const provider = _.get(data, ['provider', 'value'])\n    const stock = _.get(data, ['stock', 'value'])\n    const currency = _.get(data, ['currency', 'value'])\n    const comment = _.get(data, ['comment'])\n    const contact = _.get(data, ['contact'])\n    const products = _.map(_.get(data, ['products']), (item) => {\n        return {\n            amount: item.amount,\n            cost: item.cost,\n            product: item.product.value.id\n        }\n    })\n\n    return {\n        provider,\n        stock,\n        contact,\n        comment,\n        'date_delivery': moment(_.get(data, ['date_delivery'])).format('YYYY-MM-DD'),\n        currency,\n        products\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n    return {\n        'provider': _.get(defaultData, 'provider'),\n        'stock': _.get(defaultData, 'stock'),\n        'date_delivery_0': _.get(defaultData, 'deliveryFromDate'),\n        'date_delivery_1': _.get(defaultData, 'deliveryToDate'),\n        'created_date_0': _.get(defaultData, 'createdFromDate'),\n        'created_date_1': _.get(defaultData, 'createdToDate'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Supply/supplySerializer.js","import _ from 'lodash'\r\nimport {orderingSnakeCase} from '../../helpers/serializer'\r\nimport numberWithoutSpaces from '../../helpers/numberWithoutSpaces'\r\n\r\nconst ZERO = 0\r\nconst ONE = 1\r\nconst MINUS_ONE = -1\r\n\r\nexport const createIncomeSerializer = (data, cashboxId) => {\r\n    const amount = _.get(data, 'amount') < ZERO ? _.get(data, 'amount') * MINUS_ONE : _.get(data, 'amount')\r\n    const comment = _.get(data, 'comment')\r\n\r\n    return {\r\n        amount,\r\n        comment,\r\n        'cashbox': cashboxId\r\n    }\r\n}\r\n\r\nexport const createExpenseSerializer = (data, cashboxId) => {\r\n    const amount = _.get(data, 'amount') > ZERO ? _.get(data, 'amount') * MINUS_ONE : _.get(data, 'amount')\r\n    const comment = _.get(data, 'comment')\r\n    const objectId = _.get(data, ['expanseCategory', 'value'])\r\n    return {\r\n        amount,\r\n        comment,\r\n        'cashbox': cashboxId,\r\n        'expanse_category': objectId\r\n    }\r\n}\r\n\r\nexport const createSendSerializer = (data, cashboxId) => {\r\n    const amount = _.get(data, 'amount') < ZERO ? _.get(data, 'amount') * MINUS_ONE : _.get(data, 'amount')\r\n    const toCashbox = _.get(data, ['categoryId', 'value'])\r\n    const comment = _.get(data, 'comment')\r\n    return {\r\n        amount: numberWithoutSpaces(amount),\r\n        'from_cashbox': cashboxId,\r\n        'to_cashbox': toCashbox,\r\n        comment\r\n    }\r\n}\r\n\r\nexport const listFilterSerializer = (data, cashbox) => {\r\n    const {...defaultData} = data\r\n    const ordering = _.get(data, 'ordering')\r\n    const newCashbox = (cashbox && cashbox > ZERO) ? cashbox : null\r\n    const payType = _.get(defaultData, 'type')\r\n    const type = (payType) ? (_.toNumber(payType) === ONE) ? 'out' : 'in' : null\r\n    return {\r\n        'created_date_0': _.get(defaultData, 'fromDate'),\r\n        'created_date_1': _.get(defaultData, 'toDate'),\r\n        'type': type,\r\n        'cashbox': newCashbox,\r\n        'search': _.get(defaultData, 'search'),\r\n        'page': _.get(defaultData, 'page'),\r\n        'page_size': _.get(defaultData, 'pageSize'),\r\n        'ordering': ordering && orderingSnakeCase(ordering),\r\n        'expanse_category': _.get(data, 'categoryExpense')\r\n    }\r\n}\r\n\r\nexport const csvFilterSerializer = (data) => {\r\n    const {...defaultData} = listFilterSerializer(data)\r\n\r\n    return {\r\n        ...defaultData,\r\n        format: 'csv'\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Transaction/transactionSerializer.js","import _ from 'lodash'\r\nimport {orderingSnakeCase} from '../../helpers/serializer'\r\n\r\nexport const createSerializer = (data) => {\r\n    const name = _.get(data, ['name'])\r\n\r\n    return {\r\n        name\r\n    }\r\n}\r\n\r\nconst ZERO = 0\r\nexport const listFilterSerializer = (data, stock) => {\r\n    const {...defaultData} = data\r\n    const ordering = _.get(data, 'ordering')\r\n    return (stock !== ZERO) ? {\r\n        'brand': _.get(defaultData, 'brand'),\r\n        'type': _.get(defaultData, 'type'),\r\n        'stock': stock,\r\n        'page': _.get(defaultData, 'page'),\r\n        'page_size': _.get(defaultData, 'pageSize'),\r\n        'search': _.get(defaultData, 'search'),\r\n        'ordering': ordering && orderingSnakeCase(ordering)\r\n    } : {\r\n        'brand': _.get(defaultData, 'brand'),\r\n        'type': _.get(defaultData, 'type'),\r\n        'search': _.get(defaultData, 'search'),\r\n        'page': _.get(defaultData, 'page'),\r\n        'page_size': _.get(defaultData, 'pageSize'),\r\n        'ordering': ordering && orderingSnakeCase(ordering)\r\n    }\r\n}\r\n\r\nexport const csvFilterSerializer = (data) => {\r\n    const {...defaultData} = listFilterSerializer(data)\r\n\r\n    return {\r\n        ...defaultData,\r\n        format: 'csv'\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Transaction/transactionStockSerializer.js","import _ from 'lodash'\r\nimport {orderingSnakeCase} from '../../helpers/serializer'\r\n\r\nexport const createSerializer = (data, manufacture) => {\r\n    const user = _.get(data, ['user', 'value'])\r\n    const shift = _.get(data, ['shift', 'value'])\r\n    return {\r\n        user,\r\n        shift,\r\n        manufacture\r\n    }\r\n}\r\n\r\nexport const listFilterSerializer = (data, manufacture) => {\r\n    const {...defaultData} = data\r\n    const ordering = _.get(data, 'ordering')\r\n\r\n    return {\r\n        manufacture,\r\n        'name': _.get(defaultData, 'name'),\r\n        'search': _.get(defaultData, 'search'),\r\n        'page': _.get(defaultData, 'page'),\r\n        'page_size': _.get(defaultData, 'pageSize'),\r\n        'shift': _.get(defaultData, 'shift'),\r\n        'ordering': ordering && orderingSnakeCase(ordering)\r\n    }\r\n}\r\nexport const shiftManufactureSerializer = (manufactureId) => {\r\n    return {\r\n        'manufacture': manufactureId\r\n    }\r\n}\r\n\r\nexport const csvFilterSerializer = (data) => {\r\n    const {...defaultData} = listFilterSerializer(data)\r\n\r\n    return {\r\n        ...defaultData,\r\n        format: 'csv'\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Users/userShiftSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const username = _.get(data, 'username')\n    const firstName = _.get(data, 'firstName')\n    const secondName = _.get(data, 'secondName')\n    const phoneNumber = _.get(data, 'phoneNumber')\n    const image = _.get(data, 'image')\n    const password = _.get(data, 'password')\n    const group = _.get(data, ['group', 'value'])\n\n    return {\n        username,\n        'first_name': firstName,\n        'second_name': secondName,\n        'phone_number': phoneNumber,\n        image,\n        password,\n        'group_id': group\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering') || '-id'\n    return {\n        'manufacture': _.get(defaultData, 'manufacture'),\n        'user_group': _.get(defaultData, 'group'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Users/usersSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n\n    return {\n        name\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'name': _.get(defaultData, 'name'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/brandSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n    const currency = _.get(data, ['currency', 'value'])\n    const cashier = _.get(data, ['cashier', 'value'])\n    const type = _.get(data, ['type', 'value'])\n\n    return {\n        name,\n        currency,\n        cashier,\n        type\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'currency': _.get(defaultData, 'currency'),\n        'name': _.get(defaultData, 'name'),\n        'cashier': _.get(defaultData, 'cashier'),\n        'type': _.get(defaultData, 'type'),\n        'created_date_0': _.get(defaultData, 'fromDate'),\n        'created_date_1': _.get(defaultData, 'toDate'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/cashboxSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, 'name')\n    const address = _.get(data, 'address')\n    const contacts = _(data)\n        .get('contacts')\n        .filter((item) => {\n            return !_.isEmpty(item)\n        })\n\n    return {\n        name,\n        address,\n        contacts\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/clientSerializer.js","import _ from 'lodash'\r\nimport {orderingSnakeCase} from '../helpers/serializer'\r\n\r\nconst MINUS_ONE = -1\r\nconst ZERO = 0\r\nexport const createIncomeSerializer = (data, client) => {\r\n    const amount = _.get(data, 'amount') < ZERO ? _.get(data, 'amount') * MINUS_ONE : _.get(data, 'amount')\r\n    const comment = _.get(data, 'comment')\r\n    const currency = _.get(data, ['currency', 'value'])\r\n\r\n    return {\r\n        'amount': amount,\r\n        'comment': comment,\r\n        'client': client,\r\n        'currency': currency\r\n    }\r\n}\r\n\r\nexport const createExpenseSerializer = (data, client) => {\r\n    const amount = _.get(data, 'amount') > ZERO ? _.get(data, 'amount') * MINUS_ONE : _.get(data, 'amount')\r\n    const comment = _.get(data, 'comment')\r\n    const currency = _.get(data, ['currency', 'value'])\r\n    const category = _.get(data, ['category', 'value'])\r\n\r\n    return {\r\n        'amount': amount,\r\n        'comment': comment,\r\n        'client': client,\r\n        'currency': currency,\r\n        'category': category\r\n    }\r\n}\r\n\r\nexport const listFilterSerializer = (data, client) => {\r\n    const {...defaultData} = data\r\n    const ordering = _.get(data, 'ordering')\r\n    return {\r\n        'client': client,\r\n        'created_date_0': _.get(defaultData, 'fromDate'),\r\n        'created_date_1': _.get(defaultData, 'toDate'),\r\n        'search': _.get(defaultData, 'search'),\r\n        'page': _.get(defaultData, 'page'),\r\n        'page_size': _.get(defaultData, 'pageSize'),\r\n        'ordering': ordering && orderingSnakeCase(ordering),\r\n        'expanse_category': _.get(data, 'categoryExpense')\r\n    }\r\n}\r\n\r\nexport const csvFilterSerializer = (data) => {\r\n    const {...defaultData} = listFilterSerializer(data)\r\n\r\n    return {\r\n        ...defaultData,\r\n        format: 'csv'\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/clientTransactionSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, 'name')\n    const rate = _.get(data, 'rate')\n\n    return {\n        name,\n        rate\n    }\n}\n\nexport const createPrimarySerializer = (data) => {\n    const currency = _.get(data, ['currency', 'value'])\n\n    return {\n        currency\n    }\n}\n\nexport const itemSerializer = (data, id) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n    return {\n        'currency': id,\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\nexport const setCurrencySerializer = (data, currency) => {\n    const rate = _.get(data, 'rate')\n\n    return {\n        rate,\n        currency\n    }\n}\n\nexport const historyListSerializer = (id) => {\n    const currency = id\n\n    return {\n        'currency': currency\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'name': _.get(defaultData, 'name'),\n        'page': 1,\n        'page_size': 300,\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/currencySerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, 'name')\n    const manufacture = _.get(data, ['manufacture', 'value'])\n    const image = _.get(data, 'image')\n\n    return {\n        name,\n        manufacture,\n        image\n    }\n}\n\nexport const listFilterSerializer = (data, manufacture) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'manufacture': manufacture,\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/equipmentSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n\n    return {\n        name\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'name': _.get(defaultData, 'name'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/expensiveCategorySerializer.js","import _ from 'lodash'\r\nimport {orderingSnakeCase} from '../helpers/serializer'\r\n\r\nexport const createSerializer = (data, id) => {\r\n    const ingredients = _.map(_.get(data, ['ingredients']), (item) => {\r\n        return {\r\n            amount: item.amount,\r\n            ingredient: item.ingredient.value\r\n        }\r\n    })\r\n    const amount = _.get(data, 'amount')\r\n    return {\r\n        'product': id,\r\n        'ingredients': ingredients,\r\n        'amount': amount\r\n    }\r\n}\r\n\r\nexport const listFilterSerializer = (data) => {\r\n    const {...defaultData} = data\r\n    const ordering = _.get(data, 'ordering')\r\n\r\n    return {\r\n        'name': _.get(defaultData, 'name'),\r\n        'search': _.get(defaultData, 'search'),\r\n        'page': _.get(defaultData, 'page'),\r\n        'page_size': _.get(defaultData, 'pageSize'),\r\n        'ordering': ordering && orderingSnakeCase(ordering)\r\n    }\r\n}\r\n\r\nexport const csvFilterSerializer = (data) => {\r\n    const {...defaultData} = listFilterSerializer(data)\r\n\r\n    return {\r\n        ...defaultData,\r\n        format: 'csv'\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/ingredientSerializer.js","import _ from 'lodash'\r\nimport {orderingSnakeCase} from '../helpers/serializer'\r\n\r\nexport const createSerializer = (data, manufactureId) => {\r\n    const product = _.get(data, ['product', 'value'])\r\n    const manufacture = manufactureId\r\n    const ingredients = _.map(_.get(data, ['ingredients']), (item) => {\r\n        return {\r\n            amount: item.amount,\r\n            ingredient: item.ingredient.value\r\n        }\r\n    })\r\n\r\n    return {\r\n        manufacture,\r\n        product,\r\n        ingredients\r\n    }\r\n}\r\n\r\nexport const listFilterSerializer = (data) => {\r\n    const {...defaultData} = data\r\n    const ordering = _.get(data, 'ordering')\r\n\r\n    return {\r\n        'provider': _.get(defaultData, 'provider'),\r\n        'stock': _.get(defaultData, 'stock'),\r\n        'date_delivery_0': _.get(defaultData, 'fromDate'),\r\n        'date_delivery_1': _.get(defaultData, 'toDate'),\r\n        'search': _.get(defaultData, 'search'),\r\n        'page': _.get(defaultData, 'page'),\r\n        'page_size': _.get(defaultData, 'pageSize'),\r\n        'ordering': ordering && orderingSnakeCase(ordering)\r\n    }\r\n}\r\n\r\nexport const csvFilterSerializer = (data) => {\r\n    const {...defaultData} = listFilterSerializer(data)\r\n\r\n    return {\r\n        ...defaultData,\r\n        format: 'csv'\r\n    }\r\n}\r\nexport const changeManufacture = (data) => {\r\n    const manufacture = _.get(data, ['manufacture', 'value'])\r\n\r\n    return {\r\n        'manufacture': manufacture\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/manufactureProductSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n\n    return {\n        name\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'name': _.get(defaultData, 'name'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/marketTypeSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n\n    return {\n        name\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'name': _.get(defaultData, 'name'),\n        'type': _.get(defaultData, 'type'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/measurementSerializer.js","import _ from 'lodash'\r\n\r\nexport const createSerializer = (data, detail) => {\r\n    const order = _.get(detail, 'id')\r\n    const comment = _.get(data, 'comment')\r\n    const dealType = _.get(data, 'dealType')\r\n    const returnedProducts = _.map(_.get(data, ['returned_products']), (item) => {\r\n        return {\r\n            order_product: item.product.value.id,\r\n            amount: item.amount,\r\n            cost: item.cost,\r\n            comment: item.comment,\r\n            product: item.product.value,\r\n            name: item.product.value.product.name\r\n        }\r\n    })\r\n    return {\r\n        order,\r\n        comment,\r\n        'dealType': dealType,\r\n        'returned_products': returnedProducts\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/orderReturnSerializer.js","import _ from 'lodash'\r\nimport moment from 'moment'\r\nimport {orderingSnakeCase} from '../helpers/serializer'\r\nimport numberWithoutSpaces from '../helpers/numberWithoutSpaces'\r\n\r\nexport const createSerializer = (data) => {\r\n    const client = _.get(data, ['client', 'value'])\r\n    const contact = _.get(data, ['contact'])\r\n    const paymentType = 1\r\n    const paymentTerm = 1\r\n    const paymentDate = moment(_.get(data, ['paymentDate'])).format('YYYY-MM-DD')\r\n    const deliveryDate = moment(_.get(data, ['deliveryDate'])).format('YYYY-MM-DD')\r\n    const deliveryType = _.get(data, ['deliveryType', 'value'])\r\n    const deliveryPrice = numberWithoutSpaces(_.get(data, 'deliveryPrice'))\r\n    const discountPrice = _.get(data, 'discountPrice')\r\n    const requersDeadline = moment(_.get(data, ['request_dedline'])).format('YYYY-MM-DD')\r\n    const market = 1\r\n    const totalPrice = 12345\r\n    const products = _.map(_.get(data, ['products']), (item) => {\r\n        return {\r\n            amount: item.amount,\r\n            cost: item.cost,\r\n            product: item.product.value\r\n        }\r\n    })\r\n    return {\r\n        client,\r\n        contact,\r\n        'date_delivery': deliveryDate,\r\n        'request_dedline': requersDeadline,\r\n        'delivery_type': deliveryType,\r\n        'delivery_price': deliveryPrice,\r\n        'discount_price': discountPrice,\r\n        'payment_date': paymentDate,\r\n        'payment_type': paymentType,\r\n        'payment_term': paymentTerm,\r\n        'total_price': totalPrice,\r\n        market,\r\n        products\r\n    }\r\n}\r\n\r\nexport const listFilterSerializer = (data) => {\r\n    const {...defaultData} = data\r\n    const ordering = _.get(data, 'ordering')\r\n    return {\r\n        'id': _.get(defaultData, 'id'),\r\n        'client': _.get(defaultData, 'client'),\r\n        'user': _.get(defaultData, 'user'),\r\n        'dateDelivery': _.get(defaultData, 'dateDelivery'),\r\n        'totalCost': _.get(defaultData, 'totalCost'),\r\n        'totalBalance': _.get(defaultData, 'totalBalance'),\r\n        'orderStatus': _.get(defaultData, 'orderStatus'),\r\n        'created_date_0': _.get(defaultData, 'fromDate'),\r\n        'created_date_1': _.get(defaultData, 'toDate'),\r\n        'delivery_date_0': _.get(defaultData, 'deliveryFromDate'),\r\n        'delivery_date_1': _.get(defaultData, 'deliveryToDate'),\r\n        'search': _.get(defaultData, 'search'),\r\n\r\n        'page': _.get(defaultData, 'page'),\r\n        'page_size': _.get(defaultData, 'pageSize'),\r\n        'ordering': ordering && orderingSnakeCase(ordering)\r\n    }\r\n}\r\n\r\nexport const csvFilterSerializer = (data) => {\r\n    const {...defaultData} = listFilterSerializer(data)\r\n\r\n    return {\r\n        ...defaultData,\r\n        format: 'csv'\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/orderSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data, expenseId) => {\n    const cashboxId = _.get(data, ['cashbox', 'value'])\n    const categoryId = _.get(data, ['categoryId', 'value'])\n    return {\n        'cashbox': cashboxId,\n        'expanse': expenseId,\n        'expanse_category': categoryId\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'transaction': 'null',\n        'created_date_0': _.get(defaultData, 'fromDate'),\n        'created_date_1': _.get(defaultData, 'toDate'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/pendingExpensesSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data, order) => {\n    const amount = _.get(data, 'amount')\n    const cashbox = _.get(data, ['cashbox', 'value', 'id'])\n    const now = _.get(data, 'now') || true\n    return {\n        order,\n        amount,\n        cashbox,\n        now\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'created_date_0': _.get(defaultData, 'fromDate'),\n        'created_date_1': _.get(defaultData, 'toDate'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/pendingPaymentsSerializer.js","import _ from 'lodash'\r\nimport {orderingSnakeCase} from '../helpers/serializer'\r\n\r\nexport const createSerializer = (data, productId) => {\r\n    const prices = _.get(data, 'prices')\r\n\r\n    return {\r\n        'product': productId,\r\n        'prices': prices\r\n    }\r\n}\r\n\r\nexport const listFilterSerializer = (data, manufacture) => {\r\n    const {...defaultData} = data\r\n    const ordering = _.get(data, 'ordering')\r\n    return {\r\n        'manufacture': manufacture,\r\n        'brand': _.get(defaultData, 'brand'),\r\n        'type': _.get(defaultData, 'type'),\r\n        'measurement': _.get(defaultData, 'measurement'),\r\n        'search': _.get(defaultData, 'search'),\r\n        'page': _.get(defaultData, 'page'),\r\n        'page_size': _.get(defaultData, 'pageSize'),\r\n        'ordering': ordering && orderingSnakeCase(ordering)\r\n    }\r\n}\r\n\r\nexport const csvFilterSerializer = (data) => {\r\n    const {...defaultData} = listFilterSerializer(data)\r\n\r\n    return {\r\n        ...defaultData,\r\n        format: 'csv'\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/priceSerializer.js","import _ from 'lodash'\r\nimport moment from 'moment'\r\nimport {orderingSnakeCase} from '../helpers/serializer'\r\n\r\nexport const createSerializer = (data) => {\r\n    const beginDate = moment(_.get(data, 'beginDate')).format('YYYY-MM-DD')\r\n    const tillDate = moment(_.get(data, 'tillDate')).format('YYYY-MM-DD')\r\n    const name = _.get(data, 'name')\r\n    const discount = _.get(data, ['discount'])\r\n    const products = _.map(_.get(data, ['products']), (item) => {\r\n        return {\r\n            product: item.product.value.id,\r\n            amount: item.amount\r\n        }\r\n    })\r\n\r\n    return {\r\n        'begin_date': beginDate,\r\n        'till_date': tillDate,\r\n        name,\r\n        discount,\r\n        products\r\n    }\r\n}\r\n\r\nexport const listFilterSerializer = (data) => {\r\n    const {...defaultData} = data\r\n    const ordering = _.get(data, 'ordering')\r\n    return {\r\n        'search': _.get(defaultData, 'search'),\r\n        'page': _.get(defaultData, 'page'),\r\n        'page_size': _.get(defaultData, 'pageSize'),\r\n        'begin_date_0': _.get(defaultData, 'beginFromDate'),\r\n        'begin_date_1': _.get(defaultData, 'beginToDate'),\r\n        'till_date_0': _.get(defaultData, 'tillFromDate'),\r\n        'till_date_1': _.get(defaultData, 'tillToDate'),\r\n        'ordering': ordering && orderingSnakeCase(ordering)\r\n    }\r\n}\r\n\r\nexport const csvFilterSerializer = (data) => {\r\n    const {...defaultData} = listFilterSerializer(data)\r\n\r\n    return {\r\n        ...defaultData,\r\n        format: 'csv'\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/pricesSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, 'name')\n    const address = _.get(data, 'address')\n    const contacts = _(data)\n        .get('contacts')\n        .filter((item) => {\n            return !_.isEmpty(item)\n        })\n\n    return {\n        name,\n        address,\n        contacts\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/providerSerializer.js","import _ from 'lodash'\r\nimport {orderingSnakeCase} from '../helpers/serializer'\r\n\r\nexport const listFilterSerializer = (data, stock) => {\r\n    const {...defaultData} = data\r\n    const ordering = _.get(data, 'ordering')\r\n    return {\r\n        'page': _.get(defaultData, 'page'),\r\n        'page_size': _.get(defaultData, 'pageSize'),\r\n        'ordering': ordering && orderingSnakeCase(ordering)\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/remainderSerializer.js","import _ from 'lodash'\r\nimport {orderingSnakeCase} from '../helpers/serializer'\r\n\r\nexport const createSerializer = (data) => {\r\n    const name = _.get(data, ['name'])\r\n\r\n    return {\r\n        name\r\n    }\r\n}\r\n\r\nconst ZERO = 0\r\nexport const listFilterSerializer = (data, stock) => {\r\n    const {...defaultData} = data\r\n    const ordering = _.get(data, 'ordering')\r\n    const newStock = (stock !== ZERO) ? stock : null\r\n    return {\r\n        'brand': _.get(defaultData, 'brand'),\r\n        'type': _.get(defaultData, 'type'),\r\n        'date_delivery_0': _.get(defaultData, 'deliveryFromDate'),\r\n        'date_delivery_1': _.get(defaultData, 'deliveryToDate'),\r\n        'stock': newStock,\r\n        'page': _.get(defaultData, 'page'),\r\n        'page_size': _.get(defaultData, 'pageSize'),\r\n        'search': _.get(defaultData, 'search'),\r\n        'ordering': ordering && orderingSnakeCase(ordering)\r\n    }\r\n}\r\n\r\nexport const csvFilterSerializer = (data) => {\r\n    const {...defaultData} = listFilterSerializer(data)\r\n\r\n    return {\r\n        ...defaultData,\r\n        format: 'csv'\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/remainderStockSerializer.js","import _ from 'lodash'\nimport moment from 'moment'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n    const beginTime = _.get(data, ['beginTime'])\n    const endTime = _.get(data, ['endTime'])\n\n    return {\n        name,\n        'begin_time': moment(beginTime).format('HH:mm:ss'),\n        'end_time': moment(endTime).format('HH:mm:ss')\n    }\n}\n\nexport const listFilterSerializer = (data, manufacture) => {\n    const {...defaultData} = data\n\n    return {\n        'manufacture': manufacture,\n        'name': _.get(defaultData, 'name'),\n        'begin_time': _.get(defaultData, 'begin_time'),\n        'end_time': _.get(defaultData, 'end_time')\n    }\n}\nexport const shiftManufactureSerializer = (manufactureId) => {\n    return {\n        'manufacture': manufactureId\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/shiftSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n\n    return {\n        name\n    }\n}\n\nexport const listFilterSerializer = (data, manufacture) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'manufacture': manufacture,\n        'name': _.get(defaultData, 'name'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/shipmentSerializer.js","import _ from 'lodash'\r\nimport {orderingSnakeCase} from '../helpers/serializer'\r\n\r\nconst ONE = 1\r\nexport const createSerializer = (data, location, image) => {\r\n    const name = _.get(data, 'name')\r\n    const client = _.get(data, ['client', 'value'])\r\n    const marketType = _.get(data, ['marketType', 'value'])\r\n    const address = _.get(data, 'address')\r\n    const guide = _.get(data, 'guide')\r\n    const frequency = _.get(data, ['frequency', 'value'])\r\n    const phone = _.get(data, 'phone')\r\n    const status = _.get(data, ['status', 'value'])\r\n    const lat = _.get(location, 'lat')\r\n    const lon = _.get(location, 'lng')\r\n    const contactName = _.get(data, ['contactName'])\r\n    let isActive = false\r\n    if (status === ONE) {\r\n        isActive = true\r\n    }\r\n\r\n    return {\r\n        name,\r\n        client,\r\n        'market_type': marketType,\r\n        address,\r\n        guide,\r\n        'visit_frequency': frequency,\r\n        phone,\r\n        'contact_name': contactName,\r\n        'location': {\r\n            'type': 'point',\r\n            'coordinates': [lat, lon]\r\n        },\r\n        'is_active': isActive,\r\n        'images': [image]\r\n    }\r\n}\r\n\r\nexport const imageSerializer = (image) => {\r\n    return {\r\n        'image': image,\r\n        'is_primary': false\r\n    }\r\n}\r\n\r\nexport const listFilterSerializer = (data) => {\r\n    const {...defaultData} = data\r\n    const ordering = _.get(data, 'ordering')\r\n\r\n    return {\r\n        'client': _.get(defaultData, 'client'),\r\n        'market_type': _.get(defaultData, 'marketType'),\r\n        'created_date_0': _.get(defaultData, 'fromDate'),\r\n        'created_date_1': _.get(defaultData, 'toDate'),\r\n        'search': _.get(defaultData, 'search'),\r\n        'page': _.get(defaultData, 'page'),\r\n        'page_size': _.get(defaultData, 'pageSize'),\r\n        'ordering': ordering && orderingSnakeCase(ordering)\r\n    }\r\n}\r\n\r\nexport const csvFilterSerializer = (data) => {\r\n    const {...defaultData} = listFilterSerializer(data)\r\n\r\n    return {\r\n        ...defaultData,\r\n        format: 'csv'\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/shopSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n\n    return {\n        name\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'name': _.get(defaultData, 'name'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/statCashboxSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n\n    return {\n        name\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'name': _.get(defaultData, 'name'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'created_date_0': _.get(defaultData, 'fromDate'),\n        'created_date_1': _.get(defaultData, 'toDate'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\nexport const orderListFilterSerializer = (id) => {\n    if (id === true) return {'dept': true}\n    return {'client': id}\n}\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/statDebtorsSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n\n    return {\n        name\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'name': _.get(defaultData, 'name'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/statManufactureSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n\n    return {\n        name\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/statStockSerializer.js","import _ from 'lodash'\r\n\r\nexport const createSerializer = (data) => {\r\n    const amount = _.toNumber(_.get(data, 'amount'))\r\n    const expDate = _.get(data, 'expDate')\r\n    const barcode = _.get(data, 'barcode')\r\n    const isDefect = _.get(data, 'isDefect') || false\r\n    const comment = _.get(data, 'comment')\r\n    const image = _.get(data, 'image')\r\n\r\n    return {\r\n        amount,\r\n        expDate,\r\n        barcode,\r\n        'is_defect': isDefect,\r\n        comment,\r\n        image\r\n    }\r\n}\r\n\r\nexport const listFilterSerializer = (data) => {\r\n    const {...defaultData} = data\r\n    return {\r\n        'page': _.get(defaultData, 'page'),\r\n        'page_size': _.get(defaultData, 'pageSize'),\r\n        'search': _.get(defaultData, 'search')\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/stockReceiveSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n    const manager = _.get(data, ['manager', 'value'])\n    const stockType = _.get(data, ['stockType', 'value'])\n    return {\n        name,\n        manager,\n        'stock_type': stockType\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'id': _.get(defaultData, 'id'),\n        'name': _.get(defaultData, 'name'),\n        'stockType': _.get(defaultData, 'stock_type'),\n        'manager': _.get(defaultData, 'manager'),\n        'data_created': _.get(defaultData, 'dataCreated'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/stockSerializer.js","import _ from 'lodash'\r\n\r\nexport const createSerializer = (data) => {\r\n    const title = _.get(data, ['zoneName'])\r\n\r\n    return {\r\n        title,\r\n        'coordinates': {\r\n            'type': 'Polygon',\r\n            'coordinates': [[\r\n            ]]\r\n        }\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/zoneSerializer.js","var canUseDOM = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nmodule.exports = canUseDOM;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/can-use-dom/index.js\n// module id = 1260\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800&subset=cyrillic);\", \"\"]);\n\n// module\nexports.push([module.id, \".react-datepicker__input-container {\\r\\n    width: 100%;\\r\\n}\\r\\ninput:-webkit-autofill {\\r\\n    -webkit-box-shadow: 0 0 0 1000px white inset;\\r\\n}\\r\\n#wrapper {\\r\\n    background: rgb(93, 100, 116);\\r\\n}\\r\\n\\r\\n::-webkit-scrollbar-button {\\r\\n    height: 0;\\r\\n}\\r\\n::-webkit-scrollbar-track {\\r\\n    background: #bebebe\\r\\n}\\r\\n::-webkit-scrollbar-track-piece {\\r\\n    background: #bebebe\\r\\n}\\r\\n::-webkit-scrollbar-thumb {\\r\\n    background: #6c6c6c;\\r\\n}\\r\\n::-webkit-scrollbar {\\r\\n    width: 4px;\\r\\n    height: 4px;\\r\\n}\\r\\n\\r\\nhtml {\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\nbody {\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n    font-family: 'Open Sans',sans-serif !important;\\r\\n    font-size: 13px;\\r\\n    color: #333 !important;\\r\\n    min-width: 1024px;\\r\\n}\\r\\n\\r\\np, h1, h2, h3, h4, h5, h6 {\\r\\n    padding: 0;\\r\\n    margin: 0\\r\\n}\\r\\n\\r\\na {\\r\\n    font-weight: 400;\\r\\n    text-decoration: none;\\r\\n    color: #129fdd;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\nlabel, button, input, span {\\r\\n    font-size: 13px !important;\\r\\n}\\r\\n\\r\\nul {\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    list-style: none;\\r\\n}\\r\\n\\r\\nstrong {\\r\\n    font-weight: 600;\\r\\n}\\r\\n\\r\\n.dottedList {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    position: relative;\\r\\n    padding: 20px 0;\\r\\n}\\r\\n.dottedList:after {\\r\\n    content: \\\"\\\";\\r\\n    background-image: url(\" + require(\"../components/Images/dot.png\") + \");\\r\\n    position: absolute;\\r\\n    bottom: 0;\\r\\n    height: 2px;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n}\\r\\n\\r\\n.dottedListSpec {\\r\\n    width: 100%;\\r\\n    padding: 10px 0;\\r\\n    position: relative;\\r\\n}\\r\\n.dottedListSpec:last-child:after {\\r\\n    background-image: none;\\r\\n}\\r\\n.dottedListSpec:after {\\r\\n    content: \\\"\\\";\\r\\n    background-image: url(\" + require(\"../components/Images/dot.png\") + \");\\r\\n    position: absolute;\\r\\n    bottom: 0;\\r\\n    height: 2px;\\r\\n    left: 30px;\\r\\n    right: 30px;\\r\\n}\\r\\n\\r\\nhr.lineDote {\\r\\n    height: 2px;\\r\\n    border: none;\\r\\n    margin: 0;\\r\\n    background-image: url(\" + require(\"../components/Images/dot.png\") + \");\\r\\n}\\r\\n.notificationText {\\r\\n    display: block;\\r\\n    display: -webkit-box;\\r\\n    -webkit-line-clamp: 2;\\r\\n    -webkit-box-orient: vertical;\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;\\r\\n}\\r\\n.greenFont {color:#81c784 !important;}\\r\\n.greenFont svg {color:#81c784 !important;}\\r\\n.redFont {color:#e57373 !important;}\\r\\n.redFont svg {color:#e57373 !important;}\\r\\n\\r\\n/*Linear progress*/\\r\\n.progress {\\r\\n    position: absolute;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    height: 2px;\\r\\n    display: block;\\r\\n    background-color: #fff;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n.progress .indeterminate {\\r\\n    background-color: #12aaeb;\\r\\n}\\r\\n\\r\\n.progress .indeterminate:before {\\r\\n    content: '';\\r\\n    position: absolute;\\r\\n    background-color: inherit;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    will-change: left, right;\\r\\n    -webkit-animation: indeterminate 1.5s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;\\r\\n    animation: indeterminate 1.5s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;\\r\\n}\\r\\n\\r\\n.progress .indeterminate:after {\\r\\n    content: '';\\r\\n    position: absolute;\\r\\n    background-color: inherit;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    will-change: left, right;\\r\\n    -webkit-animation: indeterminate-short 1.5s cubic-bezier(0.165, 0.84, 0.44, 1) infinite;\\r\\n    animation: indeterminate-short 1.5s cubic-bezier(0.165, 0.84, 0.44, 1) infinite;\\r\\n    -webkit-animation-delay: 1.15s;\\r\\n    animation-delay: 1.15s;\\r\\n}\\r\\n\\r\\n@-webkit-keyframes indeterminate {\\r\\n    0% {\\r\\n        left: -35%;\\r\\n        right: 100%;\\r\\n    }\\r\\n    60% {\\r\\n        left: 100%;\\r\\n        right: -90%;\\r\\n    }\\r\\n    100% {\\r\\n        left: 100%;\\r\\n        right: -90%;\\r\\n    }\\r\\n}\\r\\n\\r\\n@keyframes indeterminate {\\r\\n    0% {\\r\\n        left: -35%;\\r\\n        right: 100%;\\r\\n    }\\r\\n    60% {\\r\\n        left: 100%;\\r\\n        right: -90%;\\r\\n    }\\r\\n    100% {\\r\\n        left: 100%;\\r\\n        right: -90%;\\r\\n    }\\r\\n}\\r\\n\\r\\n@-webkit-keyframes indeterminate-short {\\r\\n    0% {\\r\\n        left: -200%;\\r\\n        right: 100%;\\r\\n    }\\r\\n    60% {\\r\\n        left: 107%;\\r\\n        right: -8%;\\r\\n    }\\r\\n    100% {\\r\\n        left: 107%;\\r\\n        right: -8%;\\r\\n    }\\r\\n}\\r\\n\\r\\n@keyframes indeterminate-short {\\r\\n    0% {\\r\\n        left: -200%;\\r\\n        right: 100%;\\r\\n    }\\r\\n    60% {\\r\\n        left: 107%;\\r\\n        right: -8%;\\r\\n    }\\r\\n    100% {\\r\\n        left: 107%;\\r\\n        right: -8%;\\r\\n    }\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./src/styles/custom.css\n// module id = 1315\n// module chunks = 0","module.exports = __webpack_public_path__ + \"4643477527788dbcc923c451b2d94c2f.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Images/logo.png\n// module id = 1338\n// module chunks = 0","module.exports = __webpack_public_path__ + \"8e3b13f890f179a4985d24f731c7549f.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Images/noPayment.png\n// module id = 1339\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionCached = function ActionCached(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M19 8l-4 4h3c0 3.31-2.69 6-6 6-1.01 0-1.97-.25-2.8-.7l-1.46 1.46C8.97 19.54 10.43 20 12 20c4.42 0 8-3.58 8-8h3l-4-4zM6 12c0-3.31 2.69-6 6-6 1.01 0 1.97.25 2.8.7l1.46-1.46C15.03 4.46 13.57 4 12 4c-4.42 0-8 3.58-8 8H1l4 4 4-4H6z' })\n  );\n};\nActionCached = (0, _pure2.default)(ActionCached);\nActionCached.displayName = 'ActionCached';\nActionCached.muiName = 'SvgIcon';\n\nexports.default = ActionCached;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/cached.js\n// module id = 1713\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionSettingsPower = function ActionSettingsPower(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M7 24h2v-2H7v2zm4 0h2v-2h-2v2zm2-22h-2v10h2V2zm3.56 2.44l-1.45 1.45C16.84 6.94 18 8.83 18 11c0 3.31-2.69 6-6 6s-6-2.69-6-6c0-2.17 1.16-4.06 2.88-5.12L7.44 4.44C5.36 5.88 4 8.28 4 11c0 4.42 3.58 8 8 8s8-3.58 8-8c0-2.72-1.36-5.12-3.44-6.56zM15 24h2v-2h-2v2z' })\n  );\n};\nActionSettingsPower = (0, _pure2.default)(ActionSettingsPower);\nActionSettingsPower.displayName = 'ActionSettingsPower';\nActionSettingsPower.muiName = 'SvgIcon';\n\nexports.default = ActionSettingsPower;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/settings-power.js\n// module id = 1715\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionSettings = function ActionSettings(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M19.43 12.98c.04-.32.07-.64.07-.98s-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.12-.22-.39-.3-.61-.22l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.23-.09-.49 0-.61.22l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98s.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.12.22.39.3.61.22l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.23.09.49 0 .61-.22l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zM12 15.5c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5 3.5 1.57 3.5 3.5-1.57 3.5-3.5 3.5z' })\n  );\n};\nActionSettings = (0, _pure2.default)(ActionSettings);\nActionSettings.displayName = 'ActionSettings';\nActionSettings.muiName = 'SvgIcon';\n\nexports.default = ActionSettings;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/settings.js\n// module id = 1716\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionTimeline = function ActionTimeline(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M23 8c0 1.1-.9 2-2 2-.18 0-.35-.02-.51-.07l-3.56 3.55c.05.16.07.34.07.52 0 1.1-.9 2-2 2s-2-.9-2-2c0-.18.02-.36.07-.52l-2.55-2.55c-.16.05-.34.07-.52.07s-.36-.02-.52-.07l-4.55 4.56c.05.16.07.33.07.51 0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2c.18 0 .35.02.51.07l4.56-4.55C8.02 9.36 8 9.18 8 9c0-1.1.9-2 2-2s2 .9 2 2c0 .18-.02.36-.07.52l2.55 2.55c.16-.05.34-.07.52-.07s.36.02.52.07l3.55-3.56C19.02 8.35 19 8.18 19 8c0-1.1.9-2 2-2s2 .9 2 2z' })\n  );\n};\nActionTimeline = (0, _pure2.default)(ActionTimeline);\nActionTimeline.displayName = 'ActionTimeline';\nActionTimeline.muiName = 'SvgIcon';\n\nexports.default = ActionTimeline;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/timeline.js\n// module id = 1717\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionTouchApp = function ActionTouchApp(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M9 11.24V7.5C9 6.12 10.12 5 11.5 5S14 6.12 14 7.5v3.74c1.21-.81 2-2.18 2-3.74C16 5.01 13.99 3 11.5 3S7 5.01 7 7.5c0 1.56.79 2.93 2 3.74zm9.84 4.63l-4.54-2.26c-.17-.07-.35-.11-.54-.11H13v-6c0-.83-.67-1.5-1.5-1.5S10 6.67 10 7.5v10.74l-3.43-.72c-.08-.01-.15-.03-.24-.03-.31 0-.59.13-.79.33l-.79.8 4.94 4.94c.27.27.65.44 1.06.44h6.79c.75 0 1.33-.55 1.44-1.28l.75-5.27c.01-.07.02-.14.02-.2 0-.62-.38-1.16-.91-1.38z' })\n  );\n};\nActionTouchApp = (0, _pure2.default)(ActionTouchApp);\nActionTouchApp.displayName = 'ActionTouchApp';\nActionTouchApp.muiName = 'SvgIcon';\n\nexports.default = ActionTouchApp;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/touch-app.js\n// module id = 1718\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionTrendingUp = function ActionTrendingUp(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M16 6l2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6z' })\n  );\n};\nActionTrendingUp = (0, _pure2.default)(ActionTrendingUp);\nActionTrendingUp.displayName = 'ActionTrendingUp';\nActionTrendingUp.muiName = 'SvgIcon';\n\nexports.default = ActionTrendingUp;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/trending-up.js\n// module id = 1719\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionVisibilityOff = function ActionVisibilityOff(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z' })\n  );\n};\nActionVisibilityOff = (0, _pure2.default)(ActionVisibilityOff);\nActionVisibilityOff.displayName = 'ActionVisibilityOff';\nActionVisibilityOff.muiName = 'SvgIcon';\n\nexports.default = ActionVisibilityOff;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/visibility-off.js\n// module id = 1720\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ContentReply = function ContentReply(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z' })\n  );\n};\nContentReply = (0, _pure2.default)(ContentReply);\nContentReply.displayName = 'ContentReply';\nContentReply.muiName = 'SvgIcon';\n\nexports.default = ContentReply;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/content/reply.js\n// module id = 1721\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar EditorInsertDriveFile = function EditorInsertDriveFile(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M6 2c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6H6zm7 7V3.5L18.5 9H13z' })\n  );\n};\nEditorInsertDriveFile = (0, _pure2.default)(EditorInsertDriveFile);\nEditorInsertDriveFile.displayName = 'EditorInsertDriveFile';\nEditorInsertDriveFile.muiName = 'SvgIcon';\n\nexports.default = EditorInsertDriveFile;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/editor/insert-drive-file.js\n// module id = 1722\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar HardwareKeyboardArrowRight = function HardwareKeyboardArrowRight(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z' })\n  );\n};\nHardwareKeyboardArrowRight = (0, _pure2.default)(HardwareKeyboardArrowRight);\nHardwareKeyboardArrowRight.displayName = 'HardwareKeyboardArrowRight';\nHardwareKeyboardArrowRight.muiName = 'SvgIcon';\n\nexports.default = HardwareKeyboardArrowRight;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/hardware/keyboard-arrow-right.js\n// module id = 1723\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ImageImage = function ImageImage(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z' })\n  );\n};\nImageImage = (0, _pure2.default)(ImageImage);\nImageImage.displayName = 'ImageImage';\nImageImage.muiName = 'SvgIcon';\n\nexports.default = ImageImage;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/image/image.js\n// module id = 1725\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ImageLandscape = function ImageLandscape(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M14 6l-3.75 5 2.85 3.8-1.6 1.2C9.81 13.75 7 10 7 10l-6 8h22L14 6z' })\n  );\n};\nImageLandscape = (0, _pure2.default)(ImageLandscape);\nImageLandscape.displayName = 'ImageLandscape';\nImageLandscape.muiName = 'SvgIcon';\n\nexports.default = ImageLandscape;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/image/landscape.js\n// module id = 1726\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MapsLocalShipping = function MapsLocalShipping(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M20 8h-3V4H3c-1.1 0-2 .9-2 2v11h2c0 1.66 1.34 3 3 3s3-1.34 3-3h6c0 1.66 1.34 3 3 3s3-1.34 3-3h2v-5l-3-4zM6 18.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm13.5-9l1.96 2.5H17V9.5h2.5zm-1.5 9c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z' })\n  );\n};\nMapsLocalShipping = (0, _pure2.default)(MapsLocalShipping);\nMapsLocalShipping.displayName = 'MapsLocalShipping';\nMapsLocalShipping.muiName = 'SvgIcon';\n\nexports.default = MapsLocalShipping;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/maps/local-shipping.js\n// module id = 1727\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MapsPlace = function MapsPlace(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z' })\n  );\n};\nMapsPlace = (0, _pure2.default)(MapsPlace);\nMapsPlace.displayName = 'MapsPlace';\nMapsPlace.muiName = 'SvgIcon';\n\nexports.default = MapsPlace;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/maps/place.js\n// module id = 1728\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar NavigationArrowDropDownCircle = function NavigationArrowDropDownCircle(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 12l-4-4h8l-4 4z' })\n  );\n};\nNavigationArrowDropDownCircle = (0, _pure2.default)(NavigationArrowDropDownCircle);\nNavigationArrowDropDownCircle.displayName = 'NavigationArrowDropDownCircle';\nNavigationArrowDropDownCircle.muiName = 'SvgIcon';\n\nexports.default = NavigationArrowDropDownCircle;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/navigation/arrow-drop-down-circle.js\n// module id = 1729\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar NavigationArrowDropUp = function NavigationArrowDropUp(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M7 14l5-5 5 5z' })\n  );\n};\nNavigationArrowDropUp = (0, _pure2.default)(NavigationArrowDropUp);\nNavigationArrowDropUp.displayName = 'NavigationArrowDropUp';\nNavigationArrowDropUp.muiName = 'SvgIcon';\n\nexports.default = NavigationArrowDropUp;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/navigation/arrow-drop-up.js\n// module id = 1730\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SocialNotifications = function SocialNotifications(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M12 22c1.1 0 2-.9 2-2h-4c0 1.1.89 2 2 2zm6-6v-5c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2z' })\n  );\n};\nSocialNotifications = (0, _pure2.default)(SocialNotifications);\nSocialNotifications.displayName = 'SocialNotifications';\nSocialNotifications.muiName = 'SvgIcon';\n\nexports.default = SocialNotifications;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/social/notifications.js\n// module id = 1734\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ToggleStar = function ToggleStar(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z' })\n  );\n};\nToggleStar = (0, _pure2.default)(ToggleStar);\nToggleStar.displayName = 'ToggleStar';\nToggleStar.muiName = 'SvgIcon';\n\nexports.default = ToggleStar;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/toggle/star.js\n// module id = 1739\n// module chunks = 0","/*!\n  * $script.js JS loader & dependency manager\n  * https://github.com/ded/script.js\n  * (c) Dustin Diaz 2014 | License MIT\n  */\n\n(function (name, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\n  else if (typeof define == 'function' && define.amd) define(definition)\n  else this[name] = definition()\n})('$script', function () {\n  var doc = document\n    , head = doc.getElementsByTagName('head')[0]\n    , s = 'string'\n    , f = false\n    , push = 'push'\n    , readyState = 'readyState'\n    , onreadystatechange = 'onreadystatechange'\n    , list = {}\n    , ids = {}\n    , delay = {}\n    , scripts = {}\n    , scriptpath\n    , urlArgs\n\n  function every(ar, fn) {\n    for (var i = 0, j = ar.length; i < j; ++i) if (!fn(ar[i])) return f\n    return 1\n  }\n  function each(ar, fn) {\n    every(ar, function (el) {\n      return !fn(el)\n    })\n  }\n\n  function $script(paths, idOrDone, optDone) {\n    paths = paths[push] ? paths : [paths]\n    var idOrDoneIsDone = idOrDone && idOrDone.call\n      , done = idOrDoneIsDone ? idOrDone : optDone\n      , id = idOrDoneIsDone ? paths.join('') : idOrDone\n      , queue = paths.length\n    function loopFn(item) {\n      return item.call ? item() : list[item]\n    }\n    function callback() {\n      if (!--queue) {\n        list[id] = 1\n        done && done()\n        for (var dset in delay) {\n          every(dset.split('|'), loopFn) && !each(delay[dset], loopFn) && (delay[dset] = [])\n        }\n      }\n    }\n    setTimeout(function () {\n      each(paths, function loading(path, force) {\n        if (path === null) return callback()\n        \n        if (!force && !/^https?:\\/\\//.test(path) && scriptpath) {\n          path = (path.indexOf('.js') === -1) ? scriptpath + path + '.js' : scriptpath + path;\n        }\n        \n        if (scripts[path]) {\n          if (id) ids[id] = 1\n          return (scripts[path] == 2) ? callback() : setTimeout(function () { loading(path, true) }, 0)\n        }\n\n        scripts[path] = 1\n        if (id) ids[id] = 1\n        create(path, callback)\n      })\n    }, 0)\n    return $script\n  }\n\n  function create(path, fn) {\n    var el = doc.createElement('script'), loaded\n    el.onload = el.onerror = el[onreadystatechange] = function () {\n      if ((el[readyState] && !(/^c|loade/.test(el[readyState]))) || loaded) return;\n      el.onload = el[onreadystatechange] = null\n      loaded = 1\n      scripts[path] = 2\n      fn()\n    }\n    el.async = 1\n    el.src = urlArgs ? path + (path.indexOf('?') === -1 ? '?' : '&') + urlArgs : path;\n    head.insertBefore(el, head.lastChild)\n  }\n\n  $script.get = create\n\n  $script.order = function (scripts, id, done) {\n    (function callback(s) {\n      s = scripts.shift()\n      !scripts.length ? $script(s, id, done) : $script(s, callback)\n    }())\n  }\n\n  $script.path = function (p) {\n    scriptpath = p\n  }\n  $script.urlArgs = function (str) {\n    urlArgs = str;\n  }\n  $script.ready = function (deps, ready, req) {\n    deps = deps[push] ? deps : [deps]\n    var missing = [];\n    !each(deps, function (dep) {\n      list[dep] || missing[push](dep);\n    }) && every(deps, function (dep) {return list[dep]}) ?\n      ready() : !function (key) {\n      delay[key] = delay[key] || []\n      delay[key][push](ready)\n      req && req(missing)\n    }(deps.join('|'))\n    return $script\n  }\n\n  $script.done = function (idOrDone) {\n    $script([null], idOrDone)\n  }\n\n  return $script\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/scriptjs/dist/script.js\n// module id = 2309\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!./custom.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./custom.css\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./custom.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles/custom.css\n// module id = 2314\n// module chunks = 0","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport Rx from 'rxjs'\nimport rxjsconfig from 'recompose/rxjsObservableConfig'\nimport {setObservableConfig} from 'recompose'\nimport getMuiTheme from 'material-ui/styles/getMuiTheme'\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\n\nimport {Router, hashHistory} from 'react-router'\nimport {syncHistoryWithStore} from 'react-router-redux'\nimport injectTapEventPlugin from 'react-tap-event-plugin'\n\nimport createStore from './store/createStore'\nimport routes from './routes'\n\nimport './styles'\n\nconst store = createStore()\nconst history = syncHistoryWithStore(hashHistory, store)\n\ninjectTapEventPlugin()\n\nsetObservableConfig({\n    // Converts a plain ES observable to an RxJS 5 observable\n    fromESObservable: Rx.Observable.from\n})\nsetObservableConfig(rxjsconfig)\n\nconst muiTheme = getMuiTheme({\n    fontFamily: 'Open Sans, sans-serif',\n    palette: {\n        primary1Color: '#5d6474',\n        primary2Color: '#5d6474',\n        primary3Color: '#5d6474',\n        accent1Color: '#5d6474',\n        accent2Color: '#fff',\n        accent3Color: '#fff'\n    },\n    appBar: {\n        height: 50,\n        textColor: 'white'\n    }\n})\n\nReactDOM.render(\n    <Provider store={store}>\n        <MuiThemeProvider muiTheme={getMuiTheme(muiTheme)}>\n            <div style={{width: '100%', height: '100%'}}>\n                <Router history={history} routes={routes} />\n            </div>\n        </MuiThemeProvider>\n    </Provider>,\n    document.getElementById('wrapper')\n)\n\n\n\n// WEBPACK FOOTER //\n// src/index.js"],"mappingsvjpiBA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAdA;AAkBA;AACA;AACA;AAFA;AAIA;AACA;AAtIA;AACA;AAwIA;;;;;;;;;;;;;ACzIA;AACA;;;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAKA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;AA0BA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAiBA;AACA;;;;;;;;AC7LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/BA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACJA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AALA;AAaA;AACA;AAGA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAVA;AAcA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAlBA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;;;;;;;;;ACvIA;AACA;AADA;AACA;;;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AADA;AAGA;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/BA;AACA;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC/BA;AACA;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC/BA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;AAXA;AACA;AACA;AAUA;AACA;AACA;;;AAGA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAQA;AAAA;AAAA;AACA;AACA;AAVA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AA3BA;AA4BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3CA;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArDA;AACA;AADA;AAFA;AAKA;AACA;;;AAkDA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAZA;AADA;AAuBA;;;;AAtFA;AACA;AAwFA;AACA;AADA;AACA;AAGA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAlBA;AAXA;;;;;;;;;AC/GA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;;;AAAA;AACA;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAQA;AACA;;;;;;;;;ACnBA;;;;;;;;;;;;;;;;;;;;ACAA;AACA;;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;AC7KA;AACA;;;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;AClDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;AChCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAFA;AASA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAbA;AACA;AAoBA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AARA;AADA;AAeA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;ACnDA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;;;;;;;;;;;;ACPA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;;;ACxFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AAJA;AAbA;AAqBA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AAFA;AAdA;AADA;AAwBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AA5BA;AADA;AAdA;AAuDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;ACpIA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAfA;AAmBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AA1DA;AA2EA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAVA;AAPA;AADA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;;ACvLA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAfA;AAmBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AA1DA;AA2EA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAfA;AAPA;AADA;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;;;AC9LA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AATA;AADA;AACA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AACA;AAYA;;;;;;;;;;;;;;;;AC3CA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;ACpDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;ACtCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACRA;AACA;AAHA;AACA;;;;;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACTA;AACA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClBA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbhJA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACxFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACxFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;AC3GA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACpDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACzFA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;;;ACvDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AADA;AAeA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AADA;AAWA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAfA;AADA;AAdA;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;AC/GA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AADA;AACA;AAcA;AAGA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAtBA;AADA;AAgCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AApCA;AADA;AAdA;AA+DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AADA;AAGA;;;;;;;;;;;;;;ACrIA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAfA;AAmBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAtEA;AA2EA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAPA;AADA;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;;;;ACjMA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AADA;AAeA;AACA;AAFA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AARA;AADA;AAkBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAtBA;AADA;AAdA;AAiDA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;;;;;;;;;;;;;;;;AC7GA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AADA;AAbA;AA0BA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AARA;AAgBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAjBA;AA2BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AA/BA;AADA;AAdA;AA0DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;AC1IA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AADA;AAeA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AADA;AAWA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAfA;AADA;AAdA;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;AC/GA;AACA;;;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAMA;AACA;;;;;;;;;;;;;;ACZA;AACA;;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AATA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AATA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAlBA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AATA;AAaA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AArBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAbA;AAiBA;AACA;AACA;AAFA;AAlMA;AAyMA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAPA;AADA;AAcA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAfA;AARA;AAPA;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;ACzRA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;AAFA;AAzFA;AA+FA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AADA;AAiBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAlBA;AAPA;AAPA;AA4CA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;ACnMA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AATA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AATA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAlBA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AATA;AAaA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AArBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAjLA;AA4LA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAUA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAUA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AArBA;AADA;AADA;AADA;AA+BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAhCA;AAPA;AAPA;AA0DA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;AC9SA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAVA;AAgBA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AATA;AAaA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AArBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AATA;AA7FA;AA8GA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAFA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AADA;AAzBA;AAiCA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAVA;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AARA;AADA;AAVA;AA0BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AADA;AAvBA;AA+BA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AARA;AADA;AAVA;AAxEA;AA7CA;AADA;AADA;AAbA;AAoKA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;ACtUA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AADA;AAeA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AADA;AAWA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAfA;AADA;AAdA;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;AC/GA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AADA;AAeA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AADA;AAWA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAfA;AADA;AAdA;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;AC/GA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AASA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAiBA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAPA;AAWA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAdA;AAkBA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AAJA;AArhBA;AAmBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;AA6BA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAxDA;AA0EA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AADA;AA3EA;AADA;AAoFA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAdA;AAxFA;AADA;AAdA;AA4HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAZA;AAoBA;AACA;AADA;AAGA;;;;;;;;;;;;;;ACtYA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAUA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAfA;AAmBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAjBA;AA5EA;AAmGA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AAbA;AAPA;AADA;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;;;;AC3NA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAHA;AAUA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAjBA;AAFA;AAxBA;AAkDA;AACA;AAFA;AAKA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AARA;AAaA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAMA;AAPA;AAdA;AADA;AAJA;AAbA;AA8CA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;;;;;;;;;;;;;;ACpJA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAiBA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AA1IA;AAgJA;AACA;AAFA;AAKA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AADA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;AAVA;AAuBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AA3BA;AADA;AAdA;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;;;;;;;;;;;;;;;;ACrPA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAiBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAZA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAzBA;AA6BA;AACA;AACA;AACA;AAFA;AADA;AAxHA;AAgiBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAPA;AAlBA;AAJA;AAbA;AAwDA;AACA;AACA;AACA;AADA;AAGA;;;;;;;;;;;;;;;;ACpPA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAXA;AAaA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAjBA;AAFA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAtCA;AAwDA;AACA;AAFA;AAKA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AArBA;AAuBA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAxBA;AADA;AAJA;AAbA;AAkDA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;;;;;;;;;;;;AChJA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAfA;AAmBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AA1DA;AA2EA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AATA;AAPA;AADA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;;;;ACxLA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AApBA;AA0BA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AALA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AATA;AAWA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AApBA;AAVA;AAJA;AA2CA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AA5CA;AADA;AAdA;AAuEA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;;;;;;;;;;;;;;ACzJA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAfA;AAmBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AA1DA;AA2EA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AATA;AAPA;AADA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;;ACxLA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAfA;AAmBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AA1DA;AA2EA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAZA;AAPA;AADA;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;;;;AC3LA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAXA;AAaA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAHA;AAFA;AANA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAiBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAPA;AAWA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAdA;AAkBA;AACA;AACA;AACA;AACA;AADA;AAHA;AA/KA;AAwLA;AACA;AAFA;AACA;AAKA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAPA;AAYA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAhBA;AAAA;AAdA;AAsCA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AADA;AAvCA;AADA;AAgDA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AApDA;AADA;AAdA;AA+EA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;;;;;;;;;;;;;;AC7TA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAfA;AAmBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AA1DA;AA2EA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AADA;AAPA;AAPA;AADA;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;;AC7LA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAfA;AAmBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AA1DA;AA2EA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAfA;AAPA;AADA;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;;;;AC9LA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AADA;AAeA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AADA;AAWA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAfA;AADA;AAdA;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;AC/GA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AADA;AAeA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAtBA;AA8BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAlCA;AA4CA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AA7CA;AADA;AAdA;AAwEA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;;;;;;;;;;;;;;ACvIA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAZA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AAGA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAVA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AA5EA;AACA;AAmFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAJA;AATA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;;;;;;;;;;;;;;ACzIA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACjBA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AAJA;AA5BA;AAoCA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AAFA;AAdA;AAJA;AA2BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AA5BA;AADA;AAdA;AAuDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;ACnJA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAXA;AAeA;AACA;;;;;;;;;;;;;;;ACpEA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAJA;AADA;AAYA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AAFA;AA3FA;AAiGA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAPA;AAaA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AALA;AAlCA;AA0CA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AADA;AAxDA;AAZA;AADA;AAkFA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;AC1OA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAPA;AAWA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AANA;AA1BA;AAsCA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAPA;AADA;AAwBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AA5BA;AADA;AAdA;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;AClJA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAMA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAiBA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAJA;AAcA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAPA;AAbA;AAnJA;AA+KA;AACA;AAFA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAaA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAdA;AAkBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AA5CA;AAwDA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAJA;AAFA;AAbA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnCA;AAzDA;AA+FA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAzGA;AADA;AAPA;AA4HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAZA;AAmBA;AACA;AADA;AAGA;;;;;;;;;;;;;;AChYA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAfA;AAmBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AA1DA;AA2EA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAPA;AADA;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;;AClMA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAaA;AACA;AACA;AACA;AAJA;AAcA;AACA;AACA;AAOA;AAVA;AAaA;AACA;AACA;AACA;AAJA;AAYA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AAJA;AAUA;AACA;AACA;AACA;AAJA;;;;;;;;;;;;;;AC5EA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAfA;AAmBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AA1DA;AA2EA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AANA;AAaA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAVA;AAPA;AADA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AATA;AACA;AAaA;;;;;;;;;;;;;;ACjMA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAJA;AAcA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAHA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AARA;AAxBA;AAPA;AA6CA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AAHA;AAcA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAJA;AAaA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAtLA;AACA;AAgywBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AALA;AAFA;AAzBA;AAuCA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AAxBA;AA2BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA5BA;AALA;AADA;AAxCA;AADA;AAvCA;AA2HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;;;;;;;AC7XA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAfA;AAFA;AAhBA;AACA;AAwCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AArBA;AAFA;AADA;AADA;AAdA;AAkDA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;ACzHA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAfA;AAmBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AA1DA;AA+DA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AANA;AAaA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAfA;AAPA;AADA;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AAUA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;AC7LA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AAAA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAXA;AAaA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAVA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AAHA;AADA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAbA;AAFA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAZA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;AAFA;AApIA;AA0IA;AACA;AAFA;AACA;AAKA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAPA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAPA;AAbA;AAwBA;AAvCA;AALA;AADA;AAiDA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AArDA;AADA;AAdA;AA+EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;;;;;;;;;;;;;;;;ACjRA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AACA;AAYA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AApBA;AAqCA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAfA;AADA;AAyBA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AADA;AA7BA;AADA;AAdA;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;ACjJA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAQA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAXA;AAaA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAHA;AAFA;AANA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAiBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAPA;AAWA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAdA;AAkBA;AACA;AACA;AACA;AACA;AADA;AAHA;AA/KA;AAwLA;AACA;AAFA;AAKA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAPA;AAYA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AAsBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AADA;AApCA;AAoDA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AADA;AArDA;AADA;AA8DA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAlEA;AADA;AAdA;AA6FA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;;;;;;;;;;;;;;;;AChVA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AAFA;AAbA;AAmBA;AACA;AAFA;AAKA;AACA;AACA;AADA;AAGA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AATA;AAkBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AA/BA;AADA;AAyCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AA7CA;AADA;AAbA;AAuEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;;;;;;;;;;;;AC3IA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAfA;AAmBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AA1DA;AA2EA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAPA;AADA;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;;ACnMA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAfA;AAmBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAtEA;AA2EA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAPA;AADA;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;;;;ACjMA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AALA;AAbA;AA6BA;AACA;AACA;AAHA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAoBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AArBA;AA8BA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAfA;AAhCA;AAkEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAtEA;AADA;AAbA;AAgGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;;;;;;;AC3LA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAfA;AAmBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AA1DA;AA2EA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAbA;AAPA;AADA;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;AC3LA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAPA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAHA;AASA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AARA;AAaA;AACA;AADA;AAlBA;AAsBA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAXA;AALA;AAqBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AARA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAZA;AAgBA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AAjOA;AAgeA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AARA;AADA;AADA;AAFA;AAsBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAGA;AAHA;AADA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AARA;AADA;AATA;AA0BA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AArCA;AA5BA;AAuEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AATA;AAvFA;AAuGA;AACA;AAFA;AA3GA;AACA;AAiHA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAWA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAdA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAXA;AACA;AAiBA;;;;;;;;;;;;AC3eA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;;;ACHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClHA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAIA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAMA;AACA;AAFA;AATA;AAejZA;;;;;;;;;;;;;AC9CA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACvFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACxFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;AC1IA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACxFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACtEA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACnBA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACvDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACxFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACvDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACvDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AAAA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAGA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;AChFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;AC1GA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACnBA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACxFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACvFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACxFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACvCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACzGA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACxFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACtCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AAAA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;AC5GA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACtCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACtCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;AC1EA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACtCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACtCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;AC1DA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACtCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACvFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACzHA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACxGA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACvDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;AC3IA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACrBA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACxEA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACxFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;;AClFA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAMA;AACA;;;;;;;;;;;;;;ACZA;AACA;;;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;;;;;;;;;;;;;;ACbA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAQA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAfA;AACA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAUA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AATA;AADA;AAJA;AAuBA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAUA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAnCA;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAzBA;AACA;AA8BA;;;;;;;;;;;;;;AC7NA;AACA;;;AAAA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;ACTA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;;;;;;;;;;;;;;ACbA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AANA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAUA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AATA;AADA;AANA;AAyBA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAUA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AApCA;AA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAxBA;AACA;AA6BA;;;;;;;;;;;;;;ACtOA;AACA;;;AAAA;AACA;;;AAAA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;ACRA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AANA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AA/CA;AAoDA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AARA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtCA;AAJA;AA6CA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AA9CA;AADA;AAbA;AAwEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;AClLA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AANA;AAaA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AA3EA;AACA;AAgFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAiBA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AACA;AAUA;AAEA;AACA;AACA;AAHA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;AALA;AAUA;AACA;AAAA;AACA;AADA;AAfA;AADA;AAJA;AA4BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AAFA;AAWA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAhEA;AA7BA;AAHA;AA2GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAnDA;AACA;AA4DA;;;;;;;;;;;;;;;ACtYA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AANA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAhCA;AAqCA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BA;AAJA;AAqCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAtCA;AADA;AAbA;AAgEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;;;;;;;ACvJA;AACA;;;AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACnBA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;AACA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AATA;AAHA;AAoBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AA3EA;AACA;AAkFA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AADA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAVA;AAHA;AAwBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AAZA;AAFA;AAiBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAtBA;AAzBA;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAXA;AACA;AAkBA;;;;;;;;;;;;;ACnNA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AACA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AATA;AAHA;AAoBA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AA/EA;AAqmDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AA9BA;AACA;AAmCA;;;;;;;;;;;;;;AC/RA;AACA;;;AAAA;AACA;;;AAEA;AACA;;;;;;;;;;;;;;;;ACLA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAMA;AACA;;;;;;;;;;;;;;ACZA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;;;;;;;;;;;;;;ACVA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAiBA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAXA;AAvFA;AACA;AAsGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AARA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAbA;AAbA;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;;;;;;;;;;;;;AClLA;AACA;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;;;;;;;;;;;;;;ACPA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAPA;AAcA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAnDA;AAyDA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAWA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AALA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAUA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAFA;AADA;AAJA;AAeA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AA1BA;AAhBA;AAlBA;AAuEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AA/BA;AACA;AAoCA;;;;;;;;;;;;;;;;AC3RA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AACA;AAYA;AACA;AAAA;AAAA;AAAA;AADA;AAdA;AAmBA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AADA;AAWA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AADA;AAfA;AADA;AAbA;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;AC/GA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACVA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AADA;AACA;AAUA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AACA;AADA;AACA;AAGA;AACA;AACA;AAFA;AAhCA;AAsCA;AADA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AANA;AASA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAPA;AADA;AAVA;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;;;;;;;;;;;;;;;ACjGA;AACA;;;AAAA;AACA;;;;;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAMA;;;;;;;;;;;;;;ACVA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AANA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AASA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AATA;AADA;AAJA;AAuBA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAWA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAnCA;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAlBA;AACA;AA0BA;;;;;;;;;;;;;;ACxMA;AACA;;;AAAA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACTA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AANA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAUA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AATA;AADA;AAJA;AAuBA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAWA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AApCA;AA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAzBA;AACA;AA8BA;;;;;;;;;;;;;;ACxNA;AACA;;;AAAA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;ACTA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;;;;;;;AACA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AADA;AACA;AAIA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AATA;AAYA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;;;;;;;;;;;;;ACjDA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AACA;AA9BA;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AA9CA;AA6DA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAKA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAlBA;AADA;AACA;AAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAKA;AANA;AASA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAHA;AAQA;AACA;;;;;;;;;;;;;;ACxIA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;;;AACA;AAAA;AACA;AAAA;AACA;AADA;AADA;AACA;AAKA;;;;;;;;;;;;;ACTA;AACA;;;AAAA;AACA;;;;;AACA;AAAA;AACA;AAAA;AACA;AADA;AADA;AACA;AAKA;;;;;;;;;;;;;ACTA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AANA;AAXA;AAsBA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAPA;AA5DA;AA0EA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAKA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAjBA;AADA;AACA;AAqgBA;AACA;;;;;;;;;;;;;;ACnLA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;;;AACA;AAAA;AACA;AAAA;AACA;AADA;AADA;AACA;AAKA;;;;;;;;;;;;;ACTA;AACA;;;AAAA;AACA;;;;;AACA;AAAA;AACA;AAAA;AACA;AADA;AADA;AACA;AAKA;;;;;;;;;;;;;ACTA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AACA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAPA;AA5BA;AAyCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AATA;AAFA;AAZA;AAkCA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;AChHA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAUA;AACA;AADA;AAGA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAFA;AAnBA;AAwBA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AACA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AARA;AADA;AAkBA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;;;;;;;;;;;;;ACxEA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAFA;AAHA;AAUA;AAAA;AAAA;AACA;AADA;AAXA;AAgBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAPA;AAYA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AA7BA;AADA;AAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AARA;AACA;AAgBA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAJA;AAcA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AA7BA;;;;;;;;;;;;;AC5EA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AATA;AACA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AARA;AAgBA;AAjBA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAhBA;AACA;AAkBA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AACA;AAKA;;;;;;;;;;;;;ACxGA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAIA;AACA;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AAYA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAVA;AACA;AAWA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAxBA;AAmCA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAHA;AA7BA;AAmCA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AA5DA;AAsEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AALA;AAWA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AA1IA;AAmJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAPA;AAbA;AAwBA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAFA;AAaA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AANA;AAdA;AADA;AA4BA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAtCA;AA+CA;AACA;;;;;;;;;;;;;;;;ACjWA;AACA;;;;;AACA;AACA;AACA;AAAA;AACA;AADA;AAKA;AACA;;;;;;;;;;;;;;ACVA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAbA;AAgCA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAhBA;AAPA;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;ACtGA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAbA;AACA;AAmBA;AAEA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AAvDA;AACA;AAsEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAZA;AADA;AAHA;AA+BA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AADA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AADA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AADA;AAjBA;AAHA;AA6BA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAJA;AAQA;AATA;AADA;AAaA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAfA;AA9BA;AAmDA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;;;;;;;;;;;;;ACvOA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAHA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AArBA;AAyBA;AACA;AACA;AAFA;AA3BA;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAVA;AAgBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AARA;AAFA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAbA;AAkBA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AANA;AAWA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AAHA;AAcA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AADA;AAJA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AA7MA;AACA;AAsNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AASA;AAdA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AADA;AAHA;AADA;AAFA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AA6BA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAEA;AACA;AACA;AANA;AAtFA;AAgGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AA1BA;AACA;AA4BA;;;;;;;;;;;;;ACraA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AAAA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AADA;AAGA;AACA;AADA;AA/BA;AALA;AACA;AA0CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAYA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAPA;AADA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AA1BA;AADA;AA+BA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AARA;AACA;AAUA;;;;;;;;;;;;;ACnHA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAPA;AASA;AACA;AADA;AAXA;AACA;AAgBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AAUA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAUA;AACA;;;;;;;;;;;;;;ACnGA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AACA;AAMA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAXA;AADA;AAJA;AA2BA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AADA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AARA;AADA;AAmBA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;ACrJA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;;;;;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAPA;AASA;AACA;AADA;AAXA;AACA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AACA;AAMA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AACA;AAUA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAXA;AAcA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AADA;AADA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAVA;AAqBA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;ACnJA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAPA;AASA;AACA;AADA;AAXA;AACA;AAgBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AAUA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAUA;AACA;;;;;;;;;;;;;;ACvHA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AAtDA;AAqEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;AC3JA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAQA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAfA;AACA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAUA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AATA;AADA;AAJA;AAuBA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAWA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AApCA;AA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAzBA;AACA;AA8BA;;;;;;;;;;;;;;AC/NA;AACA;;;AAAA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACTA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AANA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAUA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AATA;AADA;AAHA;AAsBA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAWA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AArCA;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAzBA;AACA;AA8BA;;;;;;;;;;;;;;AChNA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACPA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAJA;AAcA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAHA;AAaA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AAxBA;AAHA;AAsCA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AADA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AAHA;AAcA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAJA;AAaA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAPA;AAWA;AACA;AACA;AAFA;AAZA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AA5BA;AAgCA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AArPA;AACA;AA+PA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AAYA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAkyBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AA5BA;AA5BA;AAopBA;AADA;AAFA;AA+BA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AALA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAbA;AADA;AAFA;AAhCA;AAwDA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AAvBA;AAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1BA;AADA;AA8BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AATA;AAYA;AAzBA;AA2BA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AA5BA;AAmCA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AApCA;AAwCA;AAAA;AAAA;AAAA;AAAA;AA1EA;AADA;AAzDA;AAwIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AA1NA;AAkOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AADA;AAGA;AA3BA;AACA;AA6BA;;;;;;;;;;;;;ACnmBA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AA3BA;AACA;AAiCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAuBA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AACA;AAUA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AANA;AAaA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAGA;AAHA;AADA;AAMA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AAQA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AASA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AAQA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AAnCA;AAtBA;AAoEA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAhEA;AAyEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;AAlFA;AACA;AAoFA;;;;;;;;;;;;;;ACvbA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACtBA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAxBA;AA+BA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AALA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAPA;AAVA;AAJA;AA+BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAhCA;AADA;AAdA;AA2DA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;;;;;;;;;;;;;AClJA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AANA;AACA;AAcA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAOA;AAEA;AACA;AACA;AAHA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AALA;AAgBA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAVA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAXA;AACA;AAoBA;;;;;;;;;;;;;;AC1KA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACPA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AANA;AACA;AAcA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAOA;AAEA;AACA;AACA;AAHA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AANA;AAiBA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAVA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAXA;AACA;AAoBA;;;;;;;;;;;;;;ACjLA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;ACTA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AARA;AAYA;AACA;AACA;AArBA;AAuBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AArGA;AA2GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AAYA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAMA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AADA;AAJA;AAgBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AARA;AAUA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAjBA;AAFA;AAwBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AANA;AADA;AADA;AAJA;AAiBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AAlBA;AAlBA;AAZA;AAzBA;AAjBA;AAgGA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAPA;AAcA;;;;;;;;;;;;;AC5QA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AARA;AAZA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AASA;AAEA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAEA;AAFA;AADA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAJA;AADA;AATA;AAuBA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AARA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAlBA;AAyBA;;;;;;;;;;;;;;;;ACxLA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AACA;AACA;;;;;AAFA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AARA;AAaA;AACA;AAlBA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAVA;AAiBA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AA/EA;AAoFA;AACA;AAFA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AAYA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAPA;AAJA;AAsBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAVA;AAoBA;AA7BA;AAvBA;AADA;AA0DA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;;;;;;;;;;;ACvMA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAPA;AALA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AAFA;AAZA;AAiBA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAxDA;AA+DA;AACA;AAFA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AATA;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAdA;AAfA;AAhBA;AAqDA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;;;;;;;;;;;;AC9IA;AACA;;;AAAA;AACA;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACZA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAUA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAHA;AAaA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AAxBA;AAHA;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAJA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AALA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAPA;AAJA;AAiBA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAPA;AAjBA;AAzDA;AAgGA;AACA;AACA;AACA;AAHA;AA7NA;AACA;AAoOA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AACA;AADA;AACA;AADA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AAVA;AAHA;AAyhBA;AATA;AApCA;AAkEA;AACA;;;;;;;;;;;;;;ACjWA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AA/BA;AACA;AAqCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAWA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AACA;AAUA;AAEA;AACA;AACA;AAHA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAWA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAtCA;AAgDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AA5BA;AACA;AAqCA;;;;;;;;;;;;;;AC5PA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACVA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AADA;AAeA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAJA;AAeA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAhBA;AADA;AAdA;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;;;;;;;;;;;;;AC3GA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AAFA;AAXA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AATA;AAxezCA;AADA;AAhBA;AAoEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdA;AANA;AAzEA;AAkGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAJA;AACA;AAYA;;;;;;;;;;;;;AC/PA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAZA;AAmBA;AACA;AAFA;AACA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAWA;AAEA;AACA;AACA;AAHA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAGA;AAHA;AADA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AALA;AADA;AADA;AAXA;AAwBA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAVA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAXA;AACA;AAoBA;;;;;;;;;;;;;;ACrNA;AACA;;;AAAA;AACA;;;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACRA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAQA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAfA;AACA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAUA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AATA;AADA;AAJA;AAuBA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAWA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AApCA;AA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAzBA;AACA;AA8BA;;;;;;;;;;;;;;AC/NA;AACA;;;AAAA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACTA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AARA;AAZA;AACA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AACA;AAUA;AAEA;AACA;AACA;AAHA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AATA;AADA;AAZA;AA+BA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAWA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AA7CA;AAuDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AA7BA;AACA;AAsCA;;;;;;;;;;;;;ACrRA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AATA;AAHA;AAoBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AA1EA;AACA;AAiFA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AAYA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AADA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AAVA;AAHA;AAwBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AAZA;AAFA;AAiBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAtBA;AAzBA;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAHA;AACA;AAUA;;;;;;;;;;;;;AC5MA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAZA;AACA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AACA;AAUA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAGA;AAHA;AADA;AAMA;AAAA;AAAA;AAAA;AAAA;AARA;AAWA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAWA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AApCA;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAxBA;AACA;AA6BA;;;;;;;;;;;;;;ACtMA;AACA;;;AAAA;AACA;;;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;ACPA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AACA;AADA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AALA;AAOA;AACA;AARA;AAUA;AAAA;AAAA;AACA;AADA;AAXA;AAeA;AAAA;AAAA;AAAA;AAAA;AAhBA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AADA;;;;;;;;;;;;;;;AClCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;AAXA;AACA;AACA;AAUA;AACA;AACA;;;AAGA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAQA;AAAA;AAAA;AACA;AACA;AAVA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AA3BA;AA4BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3CA;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArDA;AACA;AADA;AAFA;AAKA;AACA;;;AAkDA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAZA;AADA;AAuBA;;;;AAtFA;AACA;AAwFA;AACA;AADA;AACA;AAGA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAlBA;AAXA;;;;;;;;;;;;;AC9GA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAdA;AAHA;AAsBA;AACA;AACA;AACA;AAHA;AAvBA;AACA;AACA;AA+BA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AASA;AACA;;;;;;;;;;;;;;AC3GA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AANA;AACA;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAOA;AACA;;;;;;;;;;;;;;;;AC/CA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AACA;AADA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AANA;AADA;AAWA;AAAA;AAAA;AAAA;AAAA;AAZA;AAeA;AACA;;;;;;;;;;;;;;;;AC1BA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;;;;;;;;;;;;;;;;AC1BA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AATA;AADA;AAkBA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AAZA;AAHA;AAmBA;AACA;;;;;;;;;;;;;;AC1DA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;;;;AAIA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAzCA;AACA;AAmDA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AADA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AATA;AARA;AATA;AAqCA;AAxCA;AA2CA;AACA;;;;;;;;;;;;;;;;AC3HA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;ACnDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;AC9BA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;AC9BA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAOA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAlBA;AA0BA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAnBA;AAuBA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAlGA;AA0GA;AACA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;AAWA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAPA;AAbA;AACA;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAFA;AAUA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AApBA;AADA;AA6BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AALA;AAaA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AADA;AAJA;AADA;AALA;AAjBA;AADA;AAxCA;AAkFA;AACA;;;;;;;;;;;;;;;;ACxPA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAOA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AANA;AAWA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAlBA;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAZA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAtFA;AAkGA;AACA;AACA;AADA;AAGA;AAEA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AACA;AAsBA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAPA;AAxBA;AACA;AAkCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AADA;AANA;AAaA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAFA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAlCA;AAVA;AAiDA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AALA;AAcA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAnBA;AADA;AA6BA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AAhFA;AAyFA;AACA;;;;;;;;;;;;;;;;AC5RA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAOA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AANA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAlBA;AA0BA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AA5EA;AA6FA;AACA;AACA;AADA;AAGA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AACA;AAaA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAPA;AAfA;AACA;AAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAFA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAvBA;AAVA;AAsCA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AALA;AAaA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AADA;AANA;AADA;AALA;AAlBA;AADA;AAyCA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AAhFA;AAyFA;AACA;AACA;AADA;AAGA;;;;;;;;;;;;;AC1PA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;;;;;;;;;;;;;;;;AC9BA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;AC7DA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;;;;;;;;;;;;;;AC9BA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;;;;;;;;;;;;;;;;ACpCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;AC/BA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;;;;;;;;;;;;;;ACzCA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;;;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AARA;AAYA;AACA;AACA;AADA;AAGA;;;;;;;;;;;;;;;ACpCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;AC9BA;AACA;;;AAAA;AACA;AAAA;AACA;;;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAWA;AACA;;;;;;;;;;;;;;;;ACxBA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAPA;AAWA;AACA;;;;;;;;;;;;;;;;ACrCA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAOA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AANA;AAYA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAlBA;AA0BA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAlBA;AAtFA;AA8GA;AACA;AACA;AADA;AAGA;AAEA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AACA;AAqBA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAPA;AAvBA;AACA;AAiCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAFA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AArBA;AAVA;AAkCA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AALA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AADA;AAJA;AADA;AALA;AAhBA;AADA;AAqCA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AAzEA;AAoFA;AACA;;;;;;;;;;;;;;ACzQA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;;;;;;;;;;;;;;ACzBA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AATA;AAcA;AACA;AACA;AACA;AAHA;AAfA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AAZA;AAHA;AAmBA;AACA;;;;;;;;;;;;;;ACjEA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;;;;AAIA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AADA;AAHA;AAzCA;AACA;AAkDA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AADA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AATA;AATA;AATA;AAsCA;AAzCA;AA4CA;AACA;;;;;;;;;;;;;;;;AC3HA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AACA;AADA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AANA;AAQA;AACA;AATA;AAWA;AAAA;AAAA;AACA;AADA;AAZA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAjBA;AAoBA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AANA;;;;;;;;;;;;;;;ACtCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;AC9BA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;AChCA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AARA;AAYA;AACA;;;;;;;;;;;;;;;;AChCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;AC9BA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAOA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AANA;AAYA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAlBA;AA0BA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAjBA;AAtFA;AA6GA;AACA;AACA;AADA;AAGA;AAEA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;AACA;AAuBA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAPA;AAzBA;AACA;AAmCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAFA;AASA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAHA;AAMA;AAjBA;AAVA;AA8BA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AALA;AAaA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AADA;AALA;AADA;AALA;AAjBA;AADA;AAuCA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AAvEA;AAkFA;AACA;;;;;;;;;;;;;;;;ACxQA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;AC9BA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AACA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAJA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAbA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AALA;AACA;AAhDA;AACA;AAiEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AARA;AALA;AAuBA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;ACtHA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAJA;AAWA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAFA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAJA;AAWA;AACA;AACA;AAFA;AAhGA;AACA;AAsGA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AADA;AACA;AASA;AACA;AAAA;AACA;AADA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AALA;AAeA;AACA;AACA;AAFA;AAhBA;AAsBA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAJA;AADA;AAPA;AADA;AAwBA;AAtDA;AACA;AA0DA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAOA;AACA;AAZA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AACA;AAUA;;;;;;;;;;;;;;AC/PA;AACA;;;AAAA;AACA;;;AAEA;AACA;;;;;;;;;;;;;;ACLA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AANA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AASA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AATA;AADA;AALA;AAwBA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAWA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAnCA;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAlBA;AACA;AA0BA;;;;;;;;;;;;;;AClNA;AACA;;;AAAA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;ACTA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAbA;AAuBA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAJA;AAaA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAdA;AADA;AAdA;AAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;;;;;;;;;;;;;AC5GA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAJA;AAWA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAhBA;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AANA;AAmBA;AACA;AACA;AAFA;AAzBA;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAPA;AAdA;AAvJA;AA0LA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAMA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AAvBA;AAFA;AAoCA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAKA;AAEA;AAAA;AAAA;AACA;AADA;AAbA;AAPA;AAyBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AATA;AAiBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AALA;AA3CA;AArCA;AA4FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AA1BA;AAkCA;;;;;;;;;;;;;ACrXA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AANA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAiBA;AAEA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAGA;AAHA;AADA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AAVA;AAgBA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAUA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AArEA;AA8EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAFA;AA/DA;AAoEA;;;;;;;;;;;;;;;AC/RA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AANA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AAlEA;AA6EA;AACA;AAFA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AANA;AAaA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AANA;AAjBA;AADA;AAPA;AAqCA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;AChKA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AAUA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AA/DA;AAqEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AAbA;AAZA;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;;;;;;;;;;;;;;ACpJA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACjBA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AALA;AACA;AAWA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AADA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AADA;AAJA;AAkBA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AADA;AAcA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AADA;AAtCA;AADA;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AADA;AAFA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AAHA;AAXA;AACA;AAiBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAHA;AAvCA;;;;;;;;;;;;;AC9GA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AATA;AACA;AAmBA;AACA;AADA;AACA;AAGA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AAhDA;AAwDA;AADA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAPA;AANA;AADA;AAwBA;AACA;;;;;;;;;;;;;;AC9GA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;;;;;;;;;;;;;;ACVA;AACA;;;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAQA;AACA;;;;;;;;;;;;;;AChCA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAfA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAtgBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AANA;AAWA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AALA;AAtKA;AACA;AAsLA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAJA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AARA;AALA;AADA;AADA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AADA;AAPA;AADA;AAeA;AACA;AADA;AAGA;AACA;AACA;AADA;AADA;AACA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAHA;AArBA;AAvCA;AACA;AAmEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAHA;AAUA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AAHA;AARA;AAcA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAPA;AA1EA;AACA;AAomzCA;AAJA;AA3BA;AAmFA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AANA;AA3FA;AA2GA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;;;;;;;;;;;;;ACvgBA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAJA;AAcA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAHA;AAaA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AAxBA;AAHA;AAsCA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AAHA;AAcA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAJA;AAaA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AA/KA;AACA;AAyLA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAFA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AATA;AAHA;AALA;AAFA;AA6BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AANA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AARA;AATA;AAFA;AAwBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AALA;AAFA;AAzBA;AAuCA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AAxBA;AA2BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA5BA;AALA;AADA;AAxCA;AA+EA;AAAA;AAAA;AAAA;AAAA;AA7GA;AAgHA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;;;;;;;;;;;;;;ACtWA;AACA;;;;;AAAA;AACA;AAEA;;;;;;;;;;;;;;ACJA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAfA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAtBA;AA2BA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AARA;AAhaA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAjBA;AALA;AACA;AA8BA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAEA;AAFA;AAAA;AAFA;AAMA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAEA;AAFA;AAAA;AAFA;AAPA;AAcA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AATA;AANA;AAnBA;AA0CA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AApDA;AA6DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;;;;;;;AC7XA;AACA;;;AACA;AACA;AAAA;AACA;;;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;ACXA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAfA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAtBA;AA2BA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAPA;AAWA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAtBA;AAtHA;AACA;AAkJA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAQA;AATA;AADA;AALA;AADA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AADA;AAPA;AADA;AAeA;AACA;AADA;AAGA;AACA;AACA;AADA;AADA;AACA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAHA;AALA;AAtCA;AACA;AAkDA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAHA;AAUA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AAHA;AAPA;AAaA;AACA;AACA;AACA;AACA;AACA;AADA;AAHA;AADA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAPA;AASA;AACA;AADA;AAGA;AACA;AACA;AANA;AAxEA;AAiFA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AANA;AADA;AAJA;AALA;AAwBA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAtCA;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AALA;AACA;AAYA;;;;;;;;;;;;;;ACjcA;AACA;;;AAAA;AACA;;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;ACXA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AANA;AAYA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAdA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAfA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAtBA;AA2BA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AA7EA;AACA;AAuFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AASA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AACA;AAQA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AADA;AAOA;AAAA;AAAA;AAAA;AAAA;AAVA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AADA;AAMA;AAPA;AADA;AADA;AAaA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AADA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AADA;AALA;AAUA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AATA;AALA;AAfA;AAsCA;AACA;AACA;AACA;AACA;AAJA;AArDA;AA6DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;;;;;;;AC5UA;AACA;;;AACA;AACA;;;AAEA;AACA;;;;;;;;;;;;;;ACNA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAPA;AALA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AAFA;AAZA;AAiBA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAxDA;AA+DA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AATA;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAfA;AAfA;AAhBA;AAsDA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;;;;;;;;;;;;;ACpJA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAFA;AASA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AALA;AAPA;AAkBA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAFA;AADA;AAdA;AAHA;AAyBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAhGA;AAsGA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAHA;AAUA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AAHA;AARA;AAcA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAPA;AA1EA;AAoFA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAHA;AAaA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAJA;AAUA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAXA;AADA;AAqBA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAoBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AALA;AASA;AACA;AACA;AAhCA;AADA;AAJA;AAFA;AACA;AA6CA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAHA;AACA;AASA;;;;;;;;;;;;;ACtUA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAFA;AASA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AALA;AAPA;AAkBA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAFA;AADA;AAdA;AAHA;AAyBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAhGA;AAsGA;AACA;AAFA;AACA;AAKA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAHA;AAUA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AAHA;AARA;AAcA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAPA;AA1EA;AAoFA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAHA;AAaA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AANA;AADA;AACA;AAeA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAoBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AALA;AASA;AACA;AACA;AAhCA;AADA;AAJA;AAFA;AACA;AA6CA;AACA;AAAA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;;;;;;;;;;;;;ACvTA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAFA;AASA;AACA;AACA;AACA;AACA;AADA;AADA;AAFA;AAQA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AATA;AAcA;AACA;AACA;AACA;AACA;AAJA;AAhCA;AAwCA;AACA;AAFA;AACA;AAKA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAJA;AAFA;AACA;AAWA;AACA;AAAA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;;;;;;;;;;;;;;ACxFA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AAFA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAfA;AAmBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AA1DA;AA2EA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAbA;AAPA;AADA;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;ACzLA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AATA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AAHA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AARA;AACA;AA5BA;AACA;AA6CA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AAxBA;AAFA;AA8BA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;AC/GA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAfA;AAoBA;AACA;AACA;AAFA;AAvBA;AA4BA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAlFA;AACA;AAuFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAaA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAzBA;AACA;AAgCA;AACA;AAAA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAtBA;AACA;AA+BA;;;;;;;;;;;;;ACjMA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AAbA;AACA;AAyBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAMA;AAEA;AACA;AACA;AAHA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAHA;AACA;AAYA;;;;;;;;;;;;;ACzJA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAlEA;AACA;AAuEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AADA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAJA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AADA;AATA;AADA;AAgBA;AACA;AACA;AACA;AAHA;AAjBA;AAwBA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAJA;AAJA;AADA;AAJA;AADA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AA9EA;AAiFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AALA;AACA;AAgBA;;;;;;;;;;;;;AClNA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAjEA;AACA;AAsEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AANA;AADA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAJA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AADA;AAXA;AADA;AAkBA;AACA;AACA;AAFA;AAnBA;AAyBA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAJA;AANA;AADA;AAJA;AADA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAlFA;AAqFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AALA;AACA;AAcA;;;;;;;;;;;;;ACnNA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AAJA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AARA;AACA;AApDA;AACA;AAqEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AAlBA;AAoBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AArBA;AAFA;AAgCA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;AC1IA;AACA;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACRA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AANA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAUA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAXA;AADA;AANA;AA6BA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAWA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AApCA;AA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAzBA;AACA;AA8BA;;;;;;;;;;;;;;AC9OA;AACA;;;AAAA;AACA;;;AAAA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACRA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AApBA;AACA;AA8BA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAKA;AACA;AAPA;AAUA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;AC/EA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AAHA;AAfA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAtBA;AAgCA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AAMA;AAPA;AASA;AAVA;AADA;AAJA;AAbA;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;;;;;;;;;;;;;ACtHA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAUA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAHA;AAaA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AAxBA;AAHA;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAJA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AALA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAPA;AAJA;AAiBA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAPA;AAjBA;AAzDA;AAgGA;AACA;AACA;AACA;AAHA;AA5NA;AACA;AAoOA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAcyBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AAVA;AA5BA;AAkDA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AAAA;AAHA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAPA;AAaA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AATA;AADA;AAeA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AAEA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAbA;AAkBA;AAjCA;AAmCA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AAFA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAHA;AAFA;AAFA;AADA;AAcA;AAnCA;AAqCA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AA3FA;AAhEA;AAwKA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AACA;AAOA;;;;;;;;;;;;;ACreA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AA/BA;AACA;AAqCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAiBA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AACA;AAUA;AAEA;AACA;AACA;AAHA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAGA;AAHA;AADA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAhBA;AAmBA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAWA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AA3DA;AAoEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AA5DA;AACA;AAkEA;;;;;;;;;;;;;;AChWA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACdA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AADA;AAFA;AAJA;AACA;AAeA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAJA;AAcA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;;;;;;;;;;;;;;;AChDA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;;;AACA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAXA;AAFA;AAuBA;AAxBA;AA2BA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AADA;AACA;AAIA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AATA;AAYA;AACA;;;;;;;;;;;;;;AClEA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAPA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAHA;AASA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AANA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAPA;AAWA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAZA;AAgBA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AARA;AA/GA;AAgIA;AACA;AAFA;AACA;AAOA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAJA;AAFA;AASA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAjBA;AAuBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCA;AAzBA;AAdA;AACA;AA8EA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAFA;AAQA;AACA;;;;;;;;;;;;;;;;AC7PA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AANA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AA/CA;AAoDA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhCA;AAJA;AAuCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAxCA;AADA;AAbA;AAkEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;AC5KA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AANA;AAaA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AA3EA;AACA;AAgFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AACA;AAUA;AAEA;AACA;AACA;AAHA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAXA;AADA;AALA;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AANA;AAFA;AAeA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;AALA;AAUA;AACA;AAAA;AACA;AADA;AAZA;AADA;AAJA;AAyBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAFA;AAWA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAhEA;AA1BA;AAHA;AAwGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAnDA;AACA;AA4DA;;;;;;;;;;;;;;;ACxbA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AANA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAhCA;AAqCA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BA;AAJA;AAqCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAtCA;AADA;AAbA;AAgEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;;;;;;;ACvJA;AACA;;;AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACnBA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AANA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAWA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AACA;AAUA;AAEA;AACA;AACA;AAHA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AATA;AADA;AAPA;AA0BA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAWA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAxCA;AAkDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AA7BA;AACA;AAsCA;;;;;;;;;;;;;;AClQA;AACA;;;AAAA;AACA;AAAA;AACA;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACXA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AARA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAZA;AAgBA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAPA;AAvCA;AAoDA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AATA;AAaA;AACA;AACA;AACA;AACA;AAJA;AApBA;AADA;AA8BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AADA;AADA;AA/BA;AA0CA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;;;;;;;;;;;;;AC/IA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AARA;AAaA;AACA;AADA;AAlBA;AAsBA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAXA;AAkBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAHA;AASA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AADA;AAfA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAZA;AAiBA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAHA;AAJA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AARA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAZA;AAgBA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AANA;AA5MA;AACA;AAwNA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AATA;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AADA;AADA;AA/BA;AAFA;AA4CA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAZA;AA3DA;AAfA;AA2FA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;;;;;;;;;;;;;;;ACtVA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;;;AACA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAXA;AAFA;AAuBA;AAxBA;AA2BA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AADA;AACA;AAIA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AATA;AAYA;AACA;;;;;;;;;;;;;;;AClEA;AACA;;;;;AAAA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;ACNA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AADA;AACA;;;;;;;;;;;AACA;AAcA;AAVA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;;;AAYA;AAAA;AACA;AADA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AAPA;AAQA;AACA;;;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;;;;AAvBA;AA0BA;;;;;;;;;;;;;ACnDA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;AAMA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAfA;AAtEA;AACA;AAwFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAdA;AACA;AAgBA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;;AC5OA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;AAMA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAfA;AA/EA;AACA;AAiGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AAvBA;AACA;AAyBA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;;AC5PA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAUA;AACA;AAMA;AACA;AAEA;AACA;;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAbA;AACA;AAcA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAdA;AACA;AAeA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAdA;AACA;AAeA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAdA;AACA;AAeA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAdA;AACA;AAeA;AAAA;AACA;AACA;AAFA;AA7JA;AACA;AAkKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAjBA;AACA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAfA;AACA;AAiBA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAPA;AAYA;AACA;AACA;AACA;AACA;AACA;AAlBA;AACA;AAoBA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AADA;AAmBA;AACA;;;;;;;;;;;;;;;AC1ZA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAIA;AACA;AAMA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAKA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAfA;AACA;AAgBA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AA7FA;AACA;AAmGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AA1BA;AACA;AA4BA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AADA;AAcA;AACA;;;;;;;;;;;;;;;ACjRA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAMA;AACA;AASA;AACA;;;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAMA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAbA;AACA;AAcA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AACA;AAQA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAbA;AACA;AAcA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAnHA;AACA;AAyHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAUA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAhBA;AACA;AAkBA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AADA;AAeA;AACA;;;;;;;;;;;;;;;ACnTA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;AAMA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAfA;AAtEA;AACA;AAwFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAjBA;AACA;AAmBA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;;AC9OA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;AAMA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAdA;AA/EA;AACA;AAgGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAbA;AACA;AAeA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;;AClPA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAaA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAMA;AACA;AAGA;AACA;AAGA;AACA;AAIA;AACA;AAKA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnCA;AAqCA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAZA;AACA;AAaA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAfA;AACA;AAgBA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAhBA;AACA;AAiBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAvGA;AA4GA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAZA;AACA;AAaA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAOA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAbA;AACA;AAcA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAhBA;AA/DA;AAiFA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AAIA;AAPA;AACA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAZA;AACA;AAaA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAhBA;AAzEA;AA2FA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AADA;AAUA;AACA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AA1BA;AACA;AAgCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AADA;AAGA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAXA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAUA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AAaA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AAjBA;AAmBA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAUA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AADA;AAiBA;AACA;;;;;;;;;;;;;;;ACnwBA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;AAMA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAfA;AAtEA;AACA;AAwFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAdA;AACA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;;AC3OA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;AAMA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAfA;AAtEA;AACA;AAwFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAbA;AACA;AAeA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;;ACzOA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AADA;AADA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AADA;AARA;;;;;;;;;;;;;AClBA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;AAYA;AACA;AAWA;AACA;AAEA;AACA;;;;;;;AAjBA;AACA;AACA;AAgBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAuBA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAOA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAlBA;AAmBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAZA;AACA;AAaA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAVA;AACA;AAWA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAfA;AACA;AAgBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAHA;AAUA;AACA;AAEA;AACA;AACA;AArBA;AACA;AAsBA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAzOA;AACA;AA+OA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AALA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AA5BA;AACA;AA8BA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAXA;AAgBA;AACA;AACA;AACA;AACA;AACA;AAtBA;AACA;AAwBA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AADA;AAyBA;AACA;;;;;;;;;;;;;;;ACzmBA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;AAKA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AAVA;AACA;AAWA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AAzCA;AACA;AAuDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAVA;AAeA;AACA;AACA;AACA;AACA;AACA;AA1BA;AACA;AA4BA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AAZA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;;ACnOA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;AAKA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AAVA;AACA;AAWA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAZA;AAzCA;AACA;AAwDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AAZA;AACA;AAcA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;;AC3MA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAMA;AACA;AAKA;AACA;AAAA;AACA;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AAMA;AAXA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AATA;AAUA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AApDA;AA0DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAWA;;;;;;;;;;;;;;;ACpOA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAOA;AACA;AAQA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAdA;AAeA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAVA;AACA;AAWA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAfA;AAgBA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AACA;AACA;AAFA;AAtIA;AACA;AA2IA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAjBA;AACA;AAmBA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AACA;AACA;AACA;AAhBA;AACA;AAkBA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AADA;AAcA;AACA;;;;;;;;;;;;;;;ACzVA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;AAKA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAZA;AACA;AAaA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAfA;AAgBA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AA3DA;AACA;AAiEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAdA;AACA;AAgBA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AAaA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAWA;AACA;;;;;;;;;;;;;;;ACrNA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;AAMA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAfA;AAtEA;AACA;AAwFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAdA;AACA;AAgBA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;;AC5OA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAQA;AACA;AAOA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAZA;AAaA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAfA;AAzHA;AACA;AA2IA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AAxBA;AACA;AA0BA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AAaA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AADA;AAcA;AACA;;;;;;;;;;;;;;;ACpVA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAIA;AACA;AAMA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAKA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAfA;AACA;AAgBA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AA7FA;AACA;AAmGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AA1BA;AACA;AA4BA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;;ACjQA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAIA;AACA;;;;;;;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AApBA;AAqBA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AA9BA;AACA;AAoCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAUA;AACA;;;;;;;;;;;;;;;ACtIA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;AAMA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAfA;AAtEA;AACA;AAwFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AAnBA;AACA;AAqBA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;;AC/OA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAUA;AACA;AAQA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAiBA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AAVA;AAWA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAUA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AAUA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAbA;AACA;AAcA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAdA;AACA;AAeA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAdA;AACA;AAeA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAlMA;AACA;AAwMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AArBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AAzCA;AACA;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AAfA;AACA;AAiBA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AAdA;AACA;AAgBA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AADA;AAmBA;AACA;;;;;;;;;;;;;;;AC/eA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;;;;;;;;;;;;;;AC/CA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAGA;AACA;AAGA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AACA;AAQA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAVA;AACA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAUA;AACA;;;;;;;;;;;;;;;ACjJA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;AAKA;AACA;AAAA;AACA;AADA;AACA;;;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAmBA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AAVA;AACA;AAWA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AACA;AAQA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAvDA;AACA;AA6DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AAZA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AADA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AAaA;AACA;;;;;;;;;;;;;;;AClPA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAGA;AACA;AAGA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AACA;AACA;AADA;AAGA;AAJA;AAVA;AACA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAUA;AACA;;;;;;;;;;;;;;;AC5IA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAIA;AACA;AAIA;AACA;AAEA;AACA;;;;;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAkBA;AAEA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAOA;AACA;AAtBA;AACA;AAuBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AAQA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAzDA;AACA;AA+DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;AAYA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AACA;AAsBA;AACA;AADA;AAGA;AACA;AACA;AAFA;AACA;AAIA;AACA;AADA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;;AC5PA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AAGA;AACA;;;;;;;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAVA;AACA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AASA;AACA;;;;;;;;;;;;;;AClHA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AACA;AACA;AAAA;AACA;;;;;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAFA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AACA;;;;;;;;;;;;;;AC5FA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AACA;AACA;AAAA;AACA;;;;;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAFA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AACA;;;;;;;;;;;;;;;AC5FA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AAEA;AACA;;;;;;;;;;;;;;ACNA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AAKA;AACA;AAOA;AACA;;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAoBA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AALA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AAVA;AACA;AAWA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAbA;AAcA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AA3DA;AACA;AAkEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAUA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AAdA;AACA;AAgBA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AADA;AAeA;AACA;;;;;;;;;;;;;;;AClRA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;AAMA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAdA;AA/EA;AACA;AAgGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AAnBA;AACA;AAqBA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;;ACvPA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAQA;AACA;AAOA;AACA;AAIA;AACA;;;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAQA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAVA;AACA;AAWA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAZA;AACA;AAaA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAlBA;AAmBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAVA;AACA;AAWA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAfA;AAgBA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAzJA;AAgKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAZA;AAVA;AACA;AAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AACA;AAJA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAfA;AAiBA;AACA;AACA;AACA;AACA;AACA;AA3BA;AACA;AA6BA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAXA;AAgBA;AACA;AACA;AACA;AACA;AACA;AAtBA;AACA;AAwBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AADA;AAmBA;AACA;;;;;;;;;;;;;;;ACreA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AACA;AAFA;AACA;AAIA;AACA;AAAA;AACA;AACA;AADA;AADA;AAMA;AACA;;;;;;;;;;;;;;;ACrCA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAUA;AACA;AASA;AACA;AAEA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAKA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAdA;AACA;AAeA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAVA;AACA;AAWA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAVA;AACA;AAWA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAZA;AACA;AAaA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAfA;AACA;AAgBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAdA;AACA;AAeA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAdA;AArLA;AACA;AAsMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAjBA;AACA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAfA;AACA;AAiBA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAPA;AAYA;AACA;AACA;AACA;AACA;AACA;AAlBA;AACA;AAoBA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AADA;AAkBA;AACA;;;;;;;;;;;;;;;AClcA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAOA;AACA;AAMA;AACA;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AAVA;AAWA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAjBA;AAzGA;AACA;AA6HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBA;AA2BA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AAdA;AACA;AAgBA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AAaA;AACA;;;;;;;;;;;;;;;AC1TA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAMA;AACA;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AAvBA;AACA;AAqCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAWA;AACA;;;;;;;;;;;;;;;ACpLA;AACA;;;;;AACA;;;;;;;;;;;;;;;ACFA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;ACZA;AACA;;;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAAA;AACA;AAAA;AAEA;AAEA;AAFA;AAIA;AAEA;AAEA;AACA;AACA;AACA;AALA;AAOA;AAEA;AAEA;AACA;AACA;AACA;AALA;AAOA;AAEA;AACA;AAEA;AACA;;;;;;;;;;;;;;ACzCA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACbA;AACA;;;AAAA;AACA;AAAA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAUA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAJA;;;;;;;;;;;;;ACfA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AA9QA;AACA;AAgRA;;;;;;;;;;;;;;;;AC1RA;AACA;AADA;AACA;AAAA;AACA;;;;;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAGA;AAHA;AAKA;AAGA;AAEA;AAFA;AAIA;AAEA;AACA;;;;;;;;;;;;;;;;;AC3BA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;AC1CA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;AC/BA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAGA;;;;;;;;;;;;;;;;;AC7BA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAGA;;;;;;;;;;;;;;;;;AC7BA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAGA;;;;;;;;;;;;;;;;;AC7BA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;AC9CA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACrDA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACrEA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACxCA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACxCA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;AC3CA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;AC/BA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;AC1CA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACtCA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACvDA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACnEA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACnCA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;AC/BA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACtCA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;;;;;;;;;;;;;;;;AClDA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;AC/BA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;AChCA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;;;;;;;;;;;;;;ACtBA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAkBA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACxEA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACnCA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACpCA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;AClCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;AC/CA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;ACtCA;AACA;;;AAAA;AACA;;;;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;;;;;;;;;;;;;;;ACXA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACpCA;AACA;;;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACtCA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;AChCA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAdA;AAgBA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACrEA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;AC/BA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAGA;;;;;;;;;;;;;;;;;ACnCA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;AC/BA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAGA;;;;;;;;;;;;;;;AC7BA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;;;;;;;;;;;;;;;AC3BA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;ACtCA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAQA;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC9HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpBA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AAAA;AACA;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAFA;AAVA;AACA;AAeA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AADA;;;","sourceRoot":""}