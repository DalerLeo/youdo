{"version":3,"file":"546f7cf6a6d76184c3ce-0.main.js","sources":["webpack:///src/constants/routes.js","webpack:///src/constants/api.js","webpack:///src/helpers/axios.js","webpack:///src/helpers/toCamelCase.js","webpack:///src/components/CloseIcon2/index.js","webpack:///src/components/ReduxForm/index.js","webpack:///src/constants/actionTypes.js","webpack:///src/helpers/numberFormat.js","webpack:///src/helpers/serializer.js","webpack:///src/components/Container/index.js","webpack:///src/helpers/filter.js","webpack:///src/components/Layout/index.js","webpack:///src/components/ToolTip/index.js","webpack:///src/helpers/toBoolean.js","webpack:///src/components/ReduxForm/Basic/SearchField.js","webpack:///src/helpers/getConfig.js","webpack:///src/components/GridList/index.js","webpack:///src/components/SubMenu/index.js","webpack:///src/components/Styles/MainStyles.js","webpack:///src/actions/snackbar.js","webpack:///./~/material-ui/svg-icons/action/delete.js","webpack:///./~/material-ui/svg-icons/content/add.js","webpack:///src/components/ConfirmDialog/index.js","webpack:///./~/material-ui/svg-icons/image/edit.js","webpack:///src/components/CloseIcon/index.js","webpack:///src/components/ReduxForm/Basic/DateToDateField.js","webpack:///./src/components/Images/not-found.png","webpack:///./~/material-ui/svg-icons/editor/border-color.js","webpack:///src/components/GridList/GridListNavPagination/index.js","webpack:///./~/material-ui/svg-icons/action/search.js","webpack:///./~/material-ui/svg-icons/editor/mode-edit.js","webpack:///src/components/ReduxForm/Basic/TextField.js","webpack:///./~/material-ui/svg-icons/navigation/more-vert.js","webpack:///src/helpers/dateFormat.js","webpack:///src/components/Statistics/StatSideMenu.js","webpack:///./~/material-ui/svg-icons/av/equalizer.js","webpack:///src/components/Statistics/index.js","webpack:///./src/components/Images/dot.png","webpack:///./src/components/Images/person.png","webpack:///src/components/DeleteIcon/index.js","webpack:///src/components/ReduxForm/Product/ProductTypeSearchField.js","webpack:///src/actions/order.js","webpack:///src/components/LinearProgress/index.js","webpack:///src/components/ReduxForm/normalizers/normalizeNumber.js","webpack:///src/helpers/numberWithoutSpaces.js","webpack:///./~/material-ui/svg-icons/action/list.js","webpack:///src/helpers/storage.js","webpack:///./src/components/Images/groceries.svg","webpack:///src/actions/error.js","webpack:///src/components/ReduxForm/Client/ClientSearchField.js","webpack:///src/components/StockReceive/TabReceiveFilterForm.js","webpack:///src/constants/googleMaps.js","webpack:///src/helpers/getDocument.js","webpack:///./~/material-ui/svg-icons/action/print.js","webpack:///src/actions/client.js","webpack:///src/components/Client/ClientCreateDialog.js","webpack:///src/components/DeleteDialog/index.js","webpack:///src/components/Manufacture/PersonFilterForm.js","webpack:///src/components/Product/ProductFilterForm.js","webpack:///src/components/Product/ProductShowPhotoDialog.js","webpack:///src/components/ReduxForm/Basic/CheckBox.js","webpack:///src/components/ReduxForm/Product/ProductSearchField.js","webpack:///src/components/ReduxForm/Provider/ProviderSearchField.js","webpack:///src/components/ReduxForm/Stock/StockSearchField.js","webpack:///src/components/ReduxForm/Supply/ProductCustomSearchField.js","webpack:///src/helpers/createReducer.js","webpack:///src/helpers/stockTypeFormat.js","webpack:///src/helpers/validate.js","webpack:///src/serializers/Statistics/statProductSerializer.js","webpack:///./~/material-ui/svg-icons/action/cached.js","webpack:///./~/material-ui/svg-icons/av/fiber-manual-record.js","webpack:///./~/material-ui/svg-icons/av/playlist-add-check.js","webpack:///./~/material-ui/svg-icons/content/remove.js","webpack:///./~/material-ui/svg-icons/editor/attach-money.js","webpack:///./~/material-ui/svg-icons/navigation/arrow-downward.js","webpack:///./~/material-ui/svg-icons/navigation/arrow-upward.js","webpack:///./~/react-google-maps/lib/async/withScriptjs.js","webpack:///src/actions/cashbox.js","webpack:///src/actions/equipment.js","webpack:///src/actions/marketType.js","webpack:///src/actions/notifications.js","webpack:///src/actions/product.js","webpack:///src/actions/shop.js","webpack:///src/actions/signIn.js","webpack:///src/actions/stock.js","webpack:///src/actions/tracking.js","webpack:///src/actions/transaction.js","webpack:///src/components/Brand/BrandCreateDialog.js","webpack:///src/components/Cashbox/CashboxCreateDialog.js","webpack:///src/components/ClientBalance/ClientBalanceFilterForm.js","webpack:///src/components/ClientTransaction/ClientTransactionFilterForm.js","webpack:///src/components/Currency/CurrencyCreateDialog.js","webpack:///src/components/Equipment/EquipmentCreateDialog.js","webpack:///src/components/ExpensiveCategory/ExpensiveCategoryCreateDialog.js","webpack:///src/components/GoogleMap/index.js","webpack:///src/components/GridList/GridListNavPagination/ArrowLeftIcon.js","webpack:///src/components/GridList/GridListNavPagination/ArrowRightIcon.js","webpack:///src/components/GridList/GridListNavSearch/index.js","webpack:///src/components/Icons/check.js","webpack:///src/components/Manufacture/ManufactureAddProductDialog.js","webpack:///src/components/Manufacture/ManufactureAddStaffDialog.js","webpack:///src/components/Manufacture/ManufactureEditProductDialog.js","webpack:///src/components/Manufacture/ManufactureShowBom.js","webpack:///src/components/MarketType/MarketTypeCreateDialog.js","webpack:///src/components/Measurement/MeasurementCreateDialog.js","webpack:///src/components/Order/OrderCreateDialog.js","webpack:///src/components/Order/OrderDetails.js","webpack:///src/components/Order/OrderFilterForm.js","webpack:///src/components/Order/OrderItemReturnDialog.js","webpack:///src/components/Order/OrderReturnDialog.js","webpack:///src/components/Order/OrderShortage.js","webpack:///src/components/Order/OrderTransactionsDialog.js","webpack:///src/components/Order/index.js","webpack:///src/components/PendingExpenses/PendingExpensesFilterForm.js","webpack:///src/components/PendingPayments/PendingPaymentsCreateDialog.js","webpack:///src/components/PendingPayments/PendingPaymentsFilterForm.js","webpack:///src/components/Position/PositionCreateDialog.js","webpack:///src/components/Price/PriceFilterForm.js","webpack:///src/components/Prices/PricesCreateDialog.js","webpack:///src/components/Prices/PricesFilterForm.js","webpack:///src/components/Product/ProductCreateDialog.js","webpack:///src/components/Product/index.js","webpack:///src/components/ProductPrice/ProductPriceFilterForm.js","webpack:///src/components/ProductType/ProductTypeCreateDialog.js","webpack:///src/components/Provider/ProviderCreateDialog.js","webpack:///src/components/ReduxForm/Basic/DateField.js","webpack:///src/components/ReduxForm/Pagination.js","webpack:///src/components/ReduxForm/Remainder/RemainderListProductField.js","webpack:///src/components/ReduxForm/Remainder/RemainderStatusSearchField.js","webpack:///src/components/ReduxForm/Shop/MarketTypeSearchField.js","webpack:///src/components/Remainder/RemainderDiscardDialog.js","webpack:///src/components/Remainder/RemainderFilterForm.js","webpack:///src/components/Remainder/RemainderTransferDialog.js","webpack:///src/components/Shift/ShiftCreateDialog.js","webpack:///src/components/Shop/ShopCreateDialog.js","webpack:///src/components/Shop/ShopFilterForm.js","webpack:///src/components/SidebarMenu/MenuItems.js","webpack:///src/components/StatDebtors/StatDebtorsFilterForm.js","webpack:///src/components/StatDebtors/StatDebtorsOrderDetails.js","webpack:///src/components/StatManufacture/StatManufactureCreateDialog.js","webpack:///src/components/StatStock/StatStockFilterForm.js","webpack:///src/components/Statistics/StatAgentGridList.js","webpack:///src/components/Statistics/StatCashboxGridList.js","webpack:///src/components/Statistics/StatDebtorsGridList.js","webpack:///src/components/Statistics/StatFinanceGridList.js","webpack:///src/components/Statistics/StatIncomeGridList.js","webpack:///src/components/Statistics/StatMarketGridList.js","webpack:///src/components/Statistics/StatOutcomeCategoryGridList.js","webpack:///src/components/Statistics/StatOutcomeGridList.js","webpack:///src/components/Statistics/StatProductGridList.js","webpack:///src/components/Statistics/StatRemainderGridLIst.js","webpack:///src/components/Statistics/StatSaleDialog.js","webpack:///src/components/Statistics/StatSalesGridList.js","webpack:///src/components/Stock/StockCreateDialog.js","webpack:///src/components/StockReceive/StockHistoryFilterForm.js","webpack:///src/components/Supply/SupplyCreateDialog.js","webpack:///src/components/Supply/SupplyExpenseCreateDialog.js","webpack:///src/components/Supply/SupplyFilterForm.js","webpack:///src/components/Tracking/TrackingWrapper.js","webpack:///src/components/Transaction/TransactionFilterForm.js","webpack:///src/components/Users/UsersCreateDialog.js","webpack:///src/components/Users/UsersFilterForm.js","webpack:///src/components/Zones/ZonesWrapper.js","webpack:///src/constants/manufactureTab.js","webpack:///src/constants/orderTab.js","webpack:///src/constants/stockReceiveTab.js","webpack:///src/constants/storage.js","webpack:///src/helpers/paymentTypeFormat.js","webpack:///src/helpers/userGroupFormat.js","webpack:///src/serializers/Statistics/statAgentSerializer.js","webpack:///src/serializers/Statistics/statCashboxSerializer.js","webpack:///./src/components/Images/badge.png","webpack:///./src/components/Images/cut.png","webpack:///./src/components/Images/cylindrical.png","webpack:///./src/components/Images/excel.png","webpack:///./src/components/Images/glue.png","webpack:///./src/components/Images/press.png","webpack:///./~/material-ui/svg-icons/action/account-balance-wallet.js","webpack:///./~/material-ui/svg-icons/action/date-range.js","webpack:///./~/material-ui/svg-icons/action/done-all.js","webpack:///./~/material-ui/svg-icons/action/done.js","webpack:///./~/material-ui/svg-icons/action/swap-horiz.js","webpack:///./~/material-ui/svg-icons/action/timeline.js","webpack:///./~/material-ui/svg-icons/content/remove-circle.js","webpack:///./~/material-ui/svg-icons/content/reply.js","webpack:///./~/material-ui/svg-icons/maps/map.js","webpack:///./~/material-ui/svg-icons/navigation/arrow-drop-down-circle.js","webpack:///./~/material-ui/svg-icons/notification/do-not-disturb-alt.js","webpack:///src/routes/index.js","webpack:///src/store/createStore.js","webpack:///src/styles/index.js","webpack:///./~/recompose/rxjsObservableConfig.js","webpack:///src/actions/activity.js","webpack:///src/actions/brand.js","webpack:///src/actions/clientBalance.js","webpack:///src/actions/clientTransaction.js","webpack:///src/actions/currency.js","webpack:///src/actions/expensiveCategory.js","webpack:///src/actions/ingredient.js","webpack:///src/actions/manufacture.js","webpack:///src/actions/manufactureProduct.js","webpack:///src/actions/measurement.js","webpack:///src/actions/pendingExpenses.js","webpack:///src/actions/pendingPayments.js","webpack:///src/actions/plan.js","webpack:///src/actions/position.js","webpack:///src/actions/price.js","webpack:///src/actions/prices.js","webpack:///src/actions/primeryCurrency.js","webpack:///src/actions/productPrice.js","webpack:///src/actions/productType.js","webpack:///src/actions/provider.js","webpack:///src/actions/remainder.js","webpack:///src/actions/remainderStock.js","webpack:///src/actions/shift.js","webpack:///src/actions/shipment.js","webpack:///src/actions/statAgent.js","webpack:///src/actions/statCashbox.js","webpack:///src/actions/statDebtors.js","webpack:///src/actions/statFianace.js","webpack:///src/actions/statIncome.js","webpack:///src/actions/statManufacture.js","webpack:///src/actions/statMarket.js","webpack:///src/actions/statOutcome.js","webpack:///src/actions/statOutcomeCategory.js","webpack:///src/actions/statProduct.js","webpack:///src/actions/statRemainder.js","webpack:///src/actions/statSales.js","webpack:///src/actions/statStock.js","webpack:///src/actions/statisticsCashboxt.js","webpack:///src/actions/statisticsDeptors.js","webpack:///src/actions/stockReceive.js","webpack:///src/actions/supply.js","webpack:///src/actions/supplyExpense.js","webpack:///src/actions/transactionStock.js","webpack:///src/actions/userShift.js","webpack:///src/actions/users.js","webpack:///src/actions/zones.js","webpack:///src/components/Activity/ActivityCalendar.js","webpack:///src/components/Activity/ActivityDelivery.js","webpack:///src/components/Activity/ActivityOrder.js","webpack:///src/components/Activity/ActivityPayment.js","webpack:///src/components/Activity/ActivityReport.js","webpack:///src/components/Activity/ActivityReturn.js","webpack:///src/components/Activity/ActivityVisit.js","webpack:///src/components/Activity/ActivityWrapper.js","webpack:///src/components/Activity/index.js","webpack:///src/components/AddPlace/AddPlace.js","webpack:///src/components/AddPlace/index.js","webpack:///src/components/BankPayment/BankPayment.js","webpack:///src/components/BankPayment/index.js","webpack:///src/components/Brand/BrandGridList.js","webpack:///src/components/Brand/index.js","webpack:///src/components/CashPayment/CashPayment.js","webpack:///src/components/CashPayment/index.js","webpack:///src/components/Cashbox/CashboxGridList.js","webpack:///src/components/Cashbox/index.js","webpack:///src/components/Client/ClientDetails.js","webpack:///src/components/Client/ClientGridList.js","webpack:///src/components/Client/index.js","webpack:///src/components/ClientBalance/ClientBalanceGridList.js","webpack:///src/components/ClientBalance/ClientBalanceInfoDialog.js","webpack:///src/components/ClientBalance/index.js","webpack:///src/components/ClientTransaction/ClientTransactionCreateDialog.js","webpack:///src/components/ClientTransaction/ClientTransactionGridList.js","webpack:///src/components/ClientTransaction/ClientTransactionSendDialog.js","webpack:///src/components/ClientTransaction/index.js","webpack:///src/components/CloseIcon/CloseIcon.js","webpack:///src/components/CloseIcon2/CloseIcon2.js","webpack:///src/components/ConfirmDialog/ConfirmDialog.js","webpack:///src/components/Container/Container.js","webpack:///src/components/Currency/AddCourseDialog.js","webpack:///src/components/Currency/CurrencyGridList.js","webpack:///src/components/Currency/PrimaryCurrencyDialog.js","webpack:///src/components/Currency/index.js","webpack:///src/components/DeleteDialog/DeleteDialog.js","webpack:///src/components/DeleteIcon/DeleteIcon.js","webpack:///src/components/Equipment/EquipmentGridList.js","webpack:///src/components/Equipment/index.js","webpack:///src/components/ErrorDialog/ErrorDialog.js","webpack:///src/components/ErrorDialog/index.js","webpack:///src/components/ExpensiveCategory/ExpensiveCategoryGridList.js","webpack:///src/components/ExpensiveCategory/index.js","webpack:///src/components/GoogleMap/GoogleMap.js","webpack:///src/components/GridList/GridList/GridList.js","webpack:///src/components/GridList/GridList/index.js","webpack:///src/components/GridList/GridListBody/GridListBody.js","webpack:///src/components/GridList/GridListBody/index.js","webpack:///src/components/GridList/GridListHeader/ArrowDownIcon.js","webpack:///src/components/GridList/GridListHeader/ArrowUpIcon.js","webpack:///src/components/GridList/GridListHeader/GridListHeader.js","webpack:///src/components/GridList/GridListHeader/index.js","webpack:///src/components/GridList/GridListNav/GridListNav.js","webpack:///src/components/GridList/GridListNav/index.js","webpack:///src/components/GridList/GridListNavPagination/GridListNavPagination.js","webpack:///src/components/GridList/GridListNavSearch/GridListNavSearch.js","webpack:///src/components/Layout/Layout.js","webpack:///src/components/LinearProgress/LinearProgress.js","webpack:///src/components/Manufacture/ManufactureChangeDialog.js","webpack:///src/components/Manufacture/ManufactureDetails.js","webpack:///src/components/Manufacture/ManufactureGridList.js","webpack:///src/components/Manufacture/ManufactureTab.js","webpack:///src/components/Manufacture/Tab/ManufactureEquipment.js","webpack:///src/components/Manufacture/Tab/ManufacturePerson.js","webpack:///src/components/Manufacture/Tab/ManufactureProduct.js","webpack:///src/components/Manufacture/Tab/ManufactureShipment.js","webpack:///src/components/Manufacture/Tab/ManufactureShipmentDetail.js","webpack:///src/components/Manufacture/index.js","webpack:///src/components/MarketType/MarketTypeGridList.js","webpack:///src/components/MarketType/index.js","webpack:///src/components/Measurement/MeasurementGridList.js","webpack:///src/components/Measurement/index.js","webpack:///src/components/Order/OrderDetailsRightSideTabs.js","webpack:///src/components/Order/OrderGridList.js","webpack:///src/components/Order/OrderPrint.js","webpack:///src/components/Order/OrderStatDetailsRightSide.js","webpack:///src/components/PendingExpenses/PendingExpensesCreateDialog.js","webpack:///src/components/PendingExpenses/PendingExpensesGridList.js","webpack:///src/components/PendingExpenses/index.js","webpack:///src/components/PendingPayments/PendingPaymentsGridList.js","webpack:///src/components/PendingPayments/index.js","webpack:///src/components/Plan/PlanCreateDialog.js","webpack:///src/components/Plan/PlanDetails.js","webpack:///src/components/Plan/PlanSearch.js","webpack:///src/components/Plan/PlanWrapper.js","webpack:///src/components/Plan/index.js","webpack:///src/components/Position/PositionGridList.js","webpack:///src/components/Position/PrimaryPositionDialog.js","webpack:///src/components/Position/index.js","webpack:///src/components/Price/PriceDetails.js","webpack:///src/components/Price/PriceGridList.js","webpack:///src/components/Price/PriceSetForm.js","webpack:///src/components/Price/PriceSupplyDialog.js","webpack:///src/components/Price/index.js","webpack:///src/components/Prices/PricesDetails.js","webpack:///src/components/Prices/PricesGridList.js","webpack:///src/components/Prices/index.js","webpack:///src/components/Product/ProductGridList.js","webpack:///src/components/ProductPrice/ProductPriceCreateDialog.js","webpack:///src/components/ProductPrice/ProductPriceDetails.js","webpack:///src/components/ProductPrice/ProductPriceGridList.js","webpack:///src/components/ProductPrice/index.js","webpack:///src/components/ProductType/ProductTypeGridList.js","webpack:///src/components/ProductType/index.js","webpack:///src/components/Provider/ProviderDetails.js","webpack:///src/components/Provider/ProviderGridList.js","webpack:///src/components/Provider/index.js","webpack:///src/components/ReduxForm/Basic/DateToDateFieldCustom.js","webpack:///src/components/ReduxForm/Basic/ImageUploadField.js","webpack:///src/components/ReduxForm/Basic/LocationField.js","webpack:///src/components/ReduxForm/Basic/TimeField.js","webpack:///src/components/ReduxForm/BrandSearchField.js","webpack:///src/components/ReduxForm/CashboxCurrencyField.js","webpack:///src/components/ReduxForm/CashboxSearchField.js","webpack:///src/components/ReduxForm/CategorySearchField.js","webpack:///src/components/ReduxForm/Client/ClientContactsField.js","webpack:///src/components/ReduxForm/Client/ClientContactsListField.js","webpack:///src/components/ReduxForm/CurrencySearchField.js","webpack:///src/components/ReduxForm/DealTypeSearchField.js","webpack:///src/components/ReduxForm/DeliveryTypeSearchField.js","webpack:///src/components/ReduxForm/DeptTypeSearchField.js","webpack:///src/components/ReduxForm/ExpensiveCategorySearchField.js","webpack:///src/components/ReduxForm/FrequencySearchField.js","webpack:///src/components/ReduxForm/InOutTypeSearchFiled.js","webpack:///src/components/ReduxForm/Manufacture/ManufactureListMaterialField.js","webpack:///src/components/ReduxForm/Manufacture/ManufactureSearchField.js","webpack:///src/components/ReduxForm/MeasurementSearchField.js","webpack:///src/components/ReduxForm/Order/OrderListProductField.js","webpack:///src/components/ReduxForm/Order/OrderListReturnField.js","webpack:///src/components/ReduxForm/Order/OrderProductMeasurementField.js","webpack:///src/components/ReduxForm/Order/OrderProductSearchField.js","webpack:///src/components/ReduxForm/Order/OrderReturnMeasurementField.js","webpack:///src/components/ReduxForm/Order/OrderReturnTotalSum.js","webpack:///src/components/ReduxForm/Order/OrderStatusSearchField.js","webpack:///src/components/ReduxForm/Order/OrderTotalSum.js","webpack:///src/components/ReduxForm/Order/ProductReturnCostField.js","webpack:///src/components/ReduxForm/Order/ReturnProductsSearchField.js","webpack:///src/components/ReduxForm/PaymentTypeSearchField.js","webpack:///src/components/ReduxForm/PendingPaymentRadioButton.js","webpack:///src/components/ReduxForm/PendingPayments/CashboxCustomField.js","webpack:///src/components/ReduxForm/PriceMainRadioButton.js","webpack:///src/components/ReduxForm/Product/ProductCostField.js","webpack:///src/components/ReduxForm/Product/ProductMeasurementField.js","webpack:///src/components/ReduxForm/Product/ProductTypeChildSearchField.js","webpack:///src/components/ReduxForm/Product/ProductTypeParentSearchField.js","webpack:///src/components/ReduxForm/Promotions/PricesBonusProductField.js","webpack:///src/components/ReduxForm/Promotions/PricesListProductField.js","webpack:///src/components/ReduxForm/Promotions/PromotionsRadioButton.js","webpack:///src/components/ReduxForm/Provider/ProviderContactsField.js","webpack:///src/components/ReduxForm/Provider/ProviderContactsListField.js","webpack:///src/components/ReduxForm/Remainder/ProductCustomSearchField.js","webpack:///src/components/ReduxForm/ShiftSearchField.js","webpack:///src/components/ReduxForm/Shop/MarketSearchField.js","webpack:///src/components/ReduxForm/Shop/ShopStatusSearchField.js","webpack:///src/components/ReduxForm/Shop/VisitFrequencySearchField.js","webpack:///src/components/ReduxForm/Stock/StockTypeSearchField.js","webpack:///src/components/ReduxForm/StockReceive/StockReceiveProductSearchField.js","webpack:///src/components/ReduxForm/StockStatusSearchField.js","webpack:///src/components/ReduxForm/Supply/SupplyListProductField.js","webpack:///src/components/ReduxForm/TransactionTypeSearchField.js","webpack:///src/components/ReduxForm/Users/UsersGroupSearchField.js","webpack:///src/components/ReduxForm/Users/UsersSearchField.js","webpack:///src/components/ReduxForm/ZoneSearchField.js","webpack:///src/components/ReduxForm/normalizers/normalizeDiscount.js","webpack:///src/components/Remainder/RemainderDetails.js","webpack:///src/components/Remainder/RemainderGridList.js","webpack:///src/components/Remainder/index.js","webpack:///src/components/Shift/ShiftGridList.js","webpack:///src/components/Shift/index.js","webpack:///src/components/Shop/AddPhotoDialog.js","webpack:///src/components/Shop/ShopDetails.js","webpack:///src/components/Shop/ShopGridList.js","webpack:///src/components/Shop/ShopMapDialog.js","webpack:///src/components/Shop/SlideShowDialog.js","webpack:///src/components/Shop/index.js","webpack:///src/components/SidebarMenu/SidebarMenu.js","webpack:///src/components/SidebarMenu/index.js","webpack:///src/components/SignInForm/SignInForm.js","webpack:///src/components/SignInForm/index.js","webpack:///src/components/SingInLayout/SingInLayout.js","webpack:///src/components/SingInLayout/index.js","webpack:///src/components/Snackbar/Snackbar.js","webpack:///src/components/Snackbar/index.js","webpack:///src/components/StatCashbox/StatCashboxGridList.js","webpack:///src/components/StatCashbox/StatCashboxOrderDetails.js","webpack:///src/components/StatCashbox/index.js","webpack:///src/components/StatDebtors/StatDebtorsGridList.js","webpack:///src/components/StatDebtors/index.js","webpack:///src/components/StatManufacture/StatManufactureGridList.js","webpack:///src/components/StatManufacture/index.js","webpack:///src/components/StatStock/StatStockGridList.js","webpack:///src/components/StatStock/index.js","webpack:///src/components/Statistics/StatAgentDialog.js","webpack:///src/components/Statistics/StatCashboxDetails.js","webpack:///src/components/Statistics/StatDebtorsDialog.js","webpack:///src/components/Statistics/StatIncomeDialog.js","webpack:///src/components/Statistics/StatMarketDialog.js","webpack:///src/components/Statistics/StatRemainderDialog.js","webpack:///src/components/Stock/StockGridList.js","webpack:///src/components/Stock/index.js","webpack:///src/components/StockReceive/StockReceiveCreateDialog.js","webpack:///src/components/StockReceive/StockReceiveDetails.js","webpack:///src/components/StockReceive/StockReceiveGridList.js","webpack:///src/components/StockReceive/StockTabHistory.js","webpack:///src/components/StockReceive/StockTabReceive.js","webpack:///src/components/StockReceive/StockTabTransfer.js","webpack:///src/components/StockReceive/StockTabTransferHistory.js","webpack:///src/components/StockReceive/StockTabTransferHistoryDetails.js","webpack:///src/components/StockReceive/StockTransferDetails.js","webpack:///src/components/StockReceive/index.js","webpack:///src/components/SubMenu/SubMenu.js","webpack:///src/components/Supply/SupplyDefectDialog.js","webpack:///src/components/Supply/SupplyDetails.js","webpack:///src/components/Supply/SupplyGridList.js","webpack:///src/components/Supply/index.js","webpack:///src/components/ToolTip/ToolTip.js","webpack:///src/components/Tracking/TrackingDetails.js","webpack:///src/components/Tracking/TrackingMap.js","webpack:///src/components/Tracking/TrackingShopDetails.js","webpack:///src/components/Tracking/index.js","webpack:///src/components/Transaction/AcceptClientTransactionDialog.js","webpack:///src/components/Transaction/TransactionCashDialog.js","webpack:///src/components/Transaction/TransactionCreateDialog.js","webpack:///src/components/Transaction/TransactionGridList.js","webpack:///src/components/Transaction/TransactionSendDialog.js","webpack:///src/components/Transaction/index.js","webpack:///src/components/Users/UsersGridList.js","webpack:///src/components/Users/index.js","webpack:///src/components/Zones/AddZonePopup.js","webpack:///src/components/Zones/ZoneBindAgentDialog.js","webpack:///src/components/Zones/ZoneDetails.js","webpack:///src/components/Zones/ZoneMapCustom.js","webpack:///src/components/Zones/index.js","webpack:///src/constants/googleMapsStyle.js","webpack:///src/containers/Activity/ActivityList.js","webpack:///src/containers/Activity/index.js","webpack:///src/containers/App/App.js","webpack:///src/containers/App/index.js","webpack:///src/containers/Brand/BrandList.js","webpack:///src/containers/Brand/index.js","webpack:///src/containers/Cashbox/CashboxList.js","webpack:///src/containers/Cashbox/index.js","webpack:///src/containers/Client/ClientList.js","webpack:///src/containers/Client/index.js","webpack:///src/containers/ClientBalance/ClientBalanceList.js","webpack:///src/containers/ClientBalance/index.js","webpack:///src/containers/ClientTransaction/ClientTransactionList.js","webpack:///src/containers/ClientTransaction/index.js","webpack:///src/containers/Currency/CurrencyList.js","webpack:///src/containers/Currency/index.js","webpack:///src/containers/Equipment/EquipmentList.js","webpack:///src/containers/Equipment/index.js","webpack:///src/containers/ExpensiveCategory/ExpensiveCategoryList.js","webpack:///src/containers/ExpensiveCategory/index.js","webpack:///src/containers/Manufacture/ManufactureList.js","webpack:///src/containers/Manufacture/index.js","webpack:///src/containers/MarketType/MarketTypeList.js","webpack:///src/containers/MarketType/index.js","webpack:///src/containers/Measurement/MeasurementList.js","webpack:///src/containers/Measurement/index.js","webpack:///src/containers/NotFound/NotFound.js","webpack:///src/containers/NotFound/index.js","webpack:///src/containers/Order/OrderList.js","webpack:///src/containers/Order/index.js","webpack:///src/containers/PendingExpenses/PendingExpensesList.js","webpack:///src/containers/PendingExpenses/index.js","webpack:///src/containers/PendingPayments/PendingPaymentsList.js","webpack:///src/containers/PendingPayments/index.js","webpack:///src/containers/Plan/PlanList.js","webpack:///src/containers/Plan/index.js","webpack:///src/containers/Position/PositionList.js","webpack:///src/containers/Position/index.js","webpack:///src/containers/Price/PriceList.js","webpack:///src/containers/Price/index.js","webpack:///src/containers/Prices/PricesList.js","webpack:///src/containers/Prices/index.js","webpack:///src/containers/Product/ProductList.js","webpack:///src/containers/Product/index.js","webpack:///src/containers/ProductPrice/ProductPriceList.js","webpack:///src/containers/ProductPrice/index.js","webpack:///src/containers/ProductType/ProductTypeList.js","webpack:///src/containers/ProductType/index.js","webpack:///src/containers/Provider/ProviderList.js","webpack:///src/containers/Provider/index.js","webpack:///src/containers/Remainder/RemainderList.js","webpack:///src/containers/Remainder/index.js","webpack:///src/containers/Shift/ShiftList.js","webpack:///src/containers/Shift/index.js","webpack:///src/containers/Shop/ShopList.js","webpack:///src/containers/Shop/index.js","webpack:///src/containers/SignIn/SignIn.js","webpack:///src/containers/SignIn/index.js","webpack:///src/containers/StatCashbox/StatCashbox.js","webpack:///src/containers/StatCashbox/index.js","webpack:///src/containers/StatDebtors/StatDebtors.js","webpack:///src/containers/StatDebtors/index.js","webpack:///src/containers/StatManufacture/StatManufacture.js","webpack:///src/containers/StatManufacture/index.js","webpack:///src/containers/StatStock/StatStock.js","webpack:///src/containers/StatStock/index.js","webpack:///src/containers/Statistics/StatAgent.js","webpack:///src/containers/Statistics/StatCashbox.js","webpack:///src/containers/Statistics/StatDebtors.js","webpack:///src/containers/Statistics/StatFinance.js","webpack:///src/containers/Statistics/StatIncome.js","webpack:///src/containers/Statistics/StatMarket.js","webpack:///src/containers/Statistics/StatOutcome.js","webpack:///src/containers/Statistics/StatOutcomeCategory.js","webpack:///src/containers/Statistics/StatProduct.js","webpack:///src/containers/Statistics/StatRemainder.js","webpack:///src/containers/Statistics/StatSales.js","webpack:///src/containers/Statistics/index.js","webpack:///src/containers/Stock/StockList.js","webpack:///src/containers/Stock/index.js","webpack:///src/containers/StockReceive/StockReceiveList.js","webpack:///src/containers/StockReceive/index.js","webpack:///src/containers/Supply/SupplyList.js","webpack:///src/containers/Supply/index.js","webpack:///src/containers/Tracking/Tracking.js","webpack:///src/containers/Tracking/index.js","webpack:///src/containers/Transaction/TransactionList.js","webpack:///src/containers/Transaction/index.js","webpack:///src/containers/Users/UsersList.js","webpack:///src/containers/Users/index.js","webpack:///src/containers/Zones/Zones.js","webpack:///src/containers/Zones/index.js","webpack:///src/helpers/createStandardReducer.js","webpack:///src/helpers/createThunkReducer.js","webpack:///src/helpers/dealTypeFormat.js","webpack:///src/helpers/excludeObjKey.js","webpack:///src/helpers/openErrorDialog.js","webpack:///src/permissions/index.js","webpack:///src/reducers/errorReducer.js","webpack:///src/reducers/index.js","webpack:///src/reducers/snackbarReducer.js","webpack:///src/serializers/Product/productPriceSerializer.js","webpack:///src/serializers/Product/productSerializer.js","webpack:///src/serializers/Product/productTypeSerializer.js","webpack:///src/serializers/Statistics/statDebtorsSerializer.js","webpack:///src/serializers/Statistics/statFinanceSerializer.js","webpack:///src/serializers/Statistics/statIncomeSerializer.js","webpack:///src/serializers/Statistics/statMarketSerializer.js","webpack:///src/serializers/Statistics/statOutcomeCategorySerializer.js","webpack:///src/serializers/Statistics/statOutcomeSerializer.js","webpack:///src/serializers/Statistics/statRemainderSerializer.js","webpack:///src/serializers/Statistics/statSalesSerializer.js","webpack:///src/serializers/Supply/supplyExpenseSerializer.js","webpack:///src/serializers/Supply/supplySerializer.js","webpack:///src/serializers/Transaction/transactionSerializer.js","webpack:///src/serializers/Transaction/transactionStockSerializer.js","webpack:///src/serializers/Users/userShiftSerializer.js","webpack:///src/serializers/Users/usersSerializer.js","webpack:///src/serializers/activitySerializer.js","webpack:///src/serializers/brandSerializer.js","webpack:///src/serializers/cashboxSerializer.js","webpack:///src/serializers/clientBalanceSerializer.js","webpack:///src/serializers/clientSerializer.js","webpack:///src/serializers/clientTransactionSerializer.js","webpack:///src/serializers/currencySerializer.js","webpack:///src/serializers/equipmentSerializer.js","webpack:///src/serializers/expensiveCategorySerializer.js","webpack:///src/serializers/ingredientSerializer.js","webpack:///src/serializers/manufactureProductSerializer.js","webpack:///src/serializers/marketTypeSerializer.js","webpack:///src/serializers/measurementSerializer.js","webpack:///src/serializers/orderReturnSerializer.js","webpack:///src/serializers/orderSerializer.js","webpack:///src/serializers/pendingExpensesSerializer.js","webpack:///src/serializers/pendingPaymentsSerializer.js","webpack:///src/serializers/planSerializer.js","webpack:///src/serializers/positionSerializer.js","webpack:///src/serializers/priceSerializer.js","webpack:///src/serializers/pricesSerializer.js","webpack:///src/serializers/providerSerializer.js","webpack:///src/serializers/remainderSerializer.js","webpack:///src/serializers/remainderStockSerializer.js","webpack:///src/serializers/shiftSerializer.js","webpack:///src/serializers/shipmentSerializer.js","webpack:///src/serializers/shopSerializer.js","webpack:///src/serializers/statCashboxSerializer.js","webpack:///src/serializers/statDebtorsSerializer.js","webpack:///src/serializers/statManufactureSerializer.js","webpack:///src/serializers/statStockSerializer.js","webpack:///src/serializers/stockReceiveSerializer.js","webpack:///src/serializers/stockSerializer.js","webpack:///src/serializers/trackingSerializer.js","webpack:///src/serializers/zoneSerializer.js","webpack:///./~/can-use-dom/index.js","webpack:///./src/styles/custom.css","webpack:///./src/components/Images/Notification.png","webpack:///./src/components/Images/agent.png","webpack:///./src/components/Images/logo.png","webpack:///./src/components/Images/market-location.png","webpack:///./src/components/Images/noPayment.png","webpack:///./src/components/Images/person-pin-green.png","webpack:///./src/components/Images/person-pin-red.png","webpack:///./~/marker-clusterer-plus/src/markerclusterer.js","webpack:///./~/material-ui/svg-icons/action/assignment.js","webpack:///./~/material-ui/svg-icons/action/credit-card.js","webpack:///./~/material-ui/svg-icons/action/home.js","webpack:///./~/material-ui/svg-icons/action/motorcycle.js","webpack:///./~/material-ui/svg-icons/action/payment.js","webpack:///./~/material-ui/svg-icons/action/settings-power.js","webpack:///./~/material-ui/svg-icons/action/settings.js","webpack:///./~/material-ui/svg-icons/action/store.js","webpack:///./~/material-ui/svg-icons/action/today.js","webpack:///./~/material-ui/svg-icons/action/touch-app.js","webpack:///./~/material-ui/svg-icons/alert/error-outline.js","webpack:///./~/material-ui/svg-icons/device/widgets.js","webpack:///./~/material-ui/svg-icons/hardware/keyboard-arrow-right.js","webpack:///./~/material-ui/svg-icons/image/image.js","webpack:///./~/material-ui/svg-icons/image/landscape.js","webpack:///./~/material-ui/svg-icons/maps/directions-bike.js","webpack:///./~/material-ui/svg-icons/maps/local-atm.js","webpack:///./~/material-ui/svg-icons/maps/local-shipping.js","webpack:///./~/material-ui/svg-icons/maps/place.js","webpack:///./~/material-ui/svg-icons/maps/transfer-within-a-station.js","webpack:///./~/material-ui/svg-icons/navigation/close.js","webpack:///./~/material-ui/svg-icons/navigation/more-horiz.js","webpack:///./~/material-ui/svg-icons/social/group.js","webpack:///./~/material-ui/svg-icons/social/notifications.js","webpack:///./~/material-ui/svg-icons/social/person.js","webpack:///./~/material-ui/svg-icons/toggle/indeterminate-check-box.js","webpack:///./~/material-ui/svg-icons/toggle/star-border.js","webpack:///./~/material-ui/svg-icons/toggle/star.js","webpack:///./~/react-google-maps/lib/addons/MarkerClusterer.js","webpack:///./~/scriptjs/dist/script.js","webpack:///./src/styles/custom.css?b14b","webpack:///src/index.js"],"sourcesContent":["export const DASHBOARD_URL = '/'\n\nexport const SIGN_IN = 'sign-in'\nexport const SIGN_IN_URL = '/sign-in'\n\nexport const SHOP = 'shop'\nexport const SHOP_LIST_URL = `/${SHOP}`\nexport const SHOP_ITEM_URL = `${SHOP_LIST_URL}/:shopId`\nexport const SHOP_ITEM_TAB_URL = `${SHOP_ITEM_URL}/:tab`\nexport const SHOP_ITEM_PATH = `/${SHOP}/%d`\nexport const SHOP_ITEM_TAB_PATH = `/${SHOP}/%d/%s`\n\nexport const USERS = 'users'\nexport const USERS_LIST_URL = `/${USERS}`\nexport const USERS_ITEM_URL = `${USERS_LIST_URL}/:usersId`\nexport const USERS_ITEM_PATH = `/${USERS}/%d`\n\nexport const CASHBOX = 'cashbox'\nexport const CASHBOX_LIST_URL = `/${CASHBOX}`\nexport const CASHBOX_ITEM_URL = `${CASHBOX_LIST_URL}/:cashboxId`\nexport const CASHBOX_ITEM_PATH = `/${CASHBOX}/%d`\n\nexport const TRANSACTION = 'transaction'\nexport const TRANSACTION_LIST_URL = `/${TRANSACTION}`\nexport const TRANSACTION_ITEM_URL = `${TRANSACTION_LIST_URL}/:transactionId`\nexport const TRANSACTION_ITEM_PATH = `/${TRANSACTION}/%d`\n\nexport const CLIENT_TRANSACTION = 'clientTransaction'\nexport const CLIENT_TRANSACTION_LIST_URL = `/${CLIENT_TRANSACTION}`\nexport const CLIENT_TRANSACTION_ITEM_URL = `${CLIENT_TRANSACTION_LIST_URL}/:clientTransactionId`\nexport const CLIENT_TRANSACTION_ITEM_PATH = `/${CLIENT_TRANSACTION}/%d`\n\nexport const SUPPLY = 'supply'\nexport const SUPPLY_LIST_URL = `/${SUPPLY}`\nexport const SUPPLY_ITEM_URL = `${SUPPLY_LIST_URL}/:supplyId`\nexport const SUPPLY_ITEM_PATH = `/${SUPPLY}/%d`\n\nexport const PRICES = 'prices'\nexport const PRICES_LIST_URL = `/${PRICES}`\nexport const PRICES_ITEM_URL = `${PRICES_LIST_URL}/:pricesId`\nexport const PRICES_ITEM_PATH = `/${PRICES}/%d`\n\nexport const ORDER = 'order'\nexport const ORDER_LIST_URL = `/${ORDER}`\nexport const ORDER_ITEM_URL = `${ORDER_LIST_URL}/:orderId`\nexport const ORDER_ITEM_PATH = `/${ORDER}/%d`\n\nexport const PRODUCT = 'product'\nexport const PRODUCT_LIST_URL = `/${PRODUCT}`\nexport const PRODUCT_ITEM_URL = `${PRODUCT_LIST_URL}/:productId`\nexport const PRODUCT_ITEM_PATH = `/${PRODUCT}/%d`\n\nexport const PRODUCT_TYPE = 'productType'\nexport const PRODUCT_TYPE_LIST_URL = `/${PRODUCT_TYPE}`\nexport const PRODUCT_TYPE_ITEM_URL = `${PRODUCT_TYPE_LIST_URL}/:productTypeId`\nexport const PRODUCT_TYPE_ITEM_PATH = `/${PRODUCT_TYPE}/%d`\n\nexport const PRODUCT_PRICE = 'productPrice'\nexport const PRODUCT_PRICE_LIST_URL = `/${PRODUCT_PRICE}`\nexport const PRODUCT_PRICE_ITEM_URL = `${PRODUCT_PRICE_LIST_URL}/:productPriceId`\nexport const PRODUCT_PRICE_ITEM_PATH = `/${PRODUCT_PRICE}/%d`\n\nexport const CATEGORY = 'category'\nexport const CATEGORY_LIST_URL = `/${CATEGORY}`\nexport const CATEGORY_ITEM_URL = `${CATEGORY_LIST_URL}/:categoryId`\nexport const CATEGORY_ITEM_PATH = `/${CATEGORY}/%d`\n\nexport const EQUIPMENT = 'equipment'\nexport const EQUIPMENT_LIST_URL = `/${EQUIPMENT}`\nexport const EQUIPMENT_ITEM_URL = `${EQUIPMENT_LIST_URL}/:equipmentId`\nexport const EQUIPMENT_ITEM_PATH = `/${EQUIPMENT}/%d`\n\nexport const STOCK = 'stock'\nexport const STOCK_LIST_URL = `/${STOCK}`\nexport const STOCK_ITEM_URL = `${STOCK_LIST_URL}/:stockId`\nexport const STOCK_ITEM_PATH = `/${STOCK}/%d`\n\nexport const BRAND = 'brand'\nexport const BRAND_LIST_URL = `/${BRAND}`\nexport const BRAND_ITEM_URL = `${BRAND_LIST_URL}/:brandId`\nexport const BRAND_ITEM_PATH = `/${BRAND}/%d`\n\nexport const CURRENCY = 'currency'\nexport const CURRENCY_LIST_URL = `/${CURRENCY}`\nexport const CURRENCY_ITEM_URL = `${CURRENCY_LIST_URL}/:currencyId`\nexport const CURRENCY_ITEM_PATH = `${CURRENCY}/%d`\n\nexport const MEASUREMENT = 'measurement'\nexport const MEASUREMENT_LIST_URL = `/${MEASUREMENT}`\nexport const MEASUREMENT_ITEM_URL = `${MEASUREMENT_LIST_URL}/:measurementId`\nexport const MEASUREMENT_ITEM_PATH = `${MEASUREMENT}/%d`\n\nexport const EXPENSIVE_CATEGORY = 'expensiveCategory'\nexport const EXPENSIVE_CATEGORY_LIST_URL = `/${EXPENSIVE_CATEGORY}`\nexport const EXPENSIVE_CATEGORY_ITEM_URL = `${EXPENSIVE_CATEGORY_LIST_URL}/:expensiveCategoryId`\nexport const EXPENSIVE_CATEGORY_ITEM_PATH = `${EXPENSIVE_CATEGORY}/%d`\n\nexport const PROVIDER = 'provider'\nexport const PROVIDER_LIST_URL = `/${PROVIDER}`\nexport const PROVIDER_ITEM_URL = `${PROVIDER_LIST_URL}/:providerId`\nexport const PROVIDER_ITEM_PATH = `${PROVIDER}/%d`\n\nexport const CLIENT = 'client'\nexport const CLIENT_LIST_URL = `/${CLIENT}`\nexport const CLIENT_ITEM_URL = `${CLIENT_LIST_URL}/:clientId`\nexport const CLIENT_ITEM_PATH = `${CLIENT}/%d`\n\nexport const MANUFACTURE = 'manufacture'\nexport const MANUFACTURE_LIST_URL = `/${MANUFACTURE}`\nexport const MANUFACTURE_CUSTOM_URL = `/${MANUFACTURE}/3`\nexport const MANUFACTURE_ITEM_URL = `${MANUFACTURE_LIST_URL}/:manufactureId`\nexport const MANUFACTURE_ITEM_PATH = `${MANUFACTURE}/%d`\n\nexport const SHIFT = 'shift'\nexport const SHIFT_LIST_URL = `/${SHIFT}`\nexport const SHIFT_ITEM_URL = `${SHIFT_LIST_URL}/:shiftId`\nexport const SHIFT_ITEM_PATH = `${SHIFT}/%d`\n\nexport const PENDING_EXPENSES = 'pendingExpenses'\nexport const PENDING_EXPENSES_LIST_URL = `/${PENDING_EXPENSES}`\nexport const PENDING_EXPENSES_ITEM_URL = `${PENDING_EXPENSES_LIST_URL}/:pendingExpensesId`\nexport const PENDING_EXPENSES_ITEM_PATH = `${PENDING_EXPENSES}/%d`\n\nexport const STATSTOCK = 'stockStat'\nexport const STATSTOCK_LIST_URL = `/${STATSTOCK}`\nexport const STATSTOCK_ITEM_URL = `${STATSTOCK_LIST_URL}/:statStockId`\nexport const STATSTOCK_ITEM_PATH = `/${STATSTOCK}/%d`\n\nexport const REMAINDER_STOCK = 'stockRemainder'\nexport const REMAINDER_STOCK_LIST_URL = `/${REMAINDER_STOCK}/%d/balances/`\nexport const REMAINDER_STOCK_ITEM_URL = `${REMAINDER_STOCK_LIST_URL}/%d/balances/:remainderStockId`\nexport const REMAINDER_STOCK_ITEM_PATH = `/${REMAINDER_STOCK}/%d/balances/%d`\n\nexport const STATDEBTORS = 'statDebtors'\nexport const STATDEBTORS_LIST_URL = `/${STATDEBTORS}`\nexport const STATDEBTORS_ITEM_URL = `${STATDEBTORS_LIST_URL}/:statDebtorsId`\nexport const STATDEBTORS_ITEM_PATH = `/${STATDEBTORS}/%d`\n\nexport const STAT_MANUFACTURE = 'statManufacture'\nexport const STAT_MANUFACTURE_LIST_URL = `/${STAT_MANUFACTURE}`\nexport const STAT_MANUFACTURE_ITEM_URL = `${STAT_MANUFACTURE_LIST_URL}/:statManufactureId`\nexport const STAT_MANUFACTURE_ITEM_PATH = `/${STAT_MANUFACTURE}/%d`\n\nexport const STAT_CASHBOX = 'statCashbox'\nexport const STAT_CASHBOX_LIST_URL = `/${STAT_CASHBOX}`\nexport const STAT_CASHBOX_ITEM_URL = `${STAT_CASHBOX_LIST_URL}/:statCashboxId`\nexport const STAT_CASHBOX_ITEM_PATH = `/${STAT_CASHBOX}/%d`\n\nexport const PENDING_PAYMENTS = 'pendingPayments'\nexport const PENDING_PAYMENTS_LIST_URL = `/${PENDING_PAYMENTS}`\nexport const PENDING_PAYMENTS_ITEM_URL = `${PENDING_PAYMENTS_LIST_URL}/:pendingPaymentsId`\nexport const PENDING_PAYMENTS_ITEM_PATH = `${PENDING_PAYMENTS}/%d`\n\nexport const ZONES = 'zones'\nexport const ZONES_LIST_URL = `/${ZONES}`\nexport const ZONES_ITEM_URL = `${ZONES_LIST_URL}/:zoneId`\nexport const ZONES_ITEM_PATH = `/${ZONES}/%d`\n\nexport const TRACKING = 'tracking'\nexport const TRACKING_LIST_URL = `/${TRACKING}`\nexport const TRACKING_ITEM_URL = `${TRACKING_LIST_URL}/:agentId`\nexport const TRACKING_ITEM_PATH = `/${TRACKING}/%d`\n\nexport const MARKET_TYPE = 'marketType'\nexport const MARKET_TYPE_LIST_URL = `/${MARKET_TYPE}`\nexport const MARKET_TYPE_ITEM_URL = `${MARKET_TYPE_LIST_URL}/:marketTypeId`\nexport const MARKET_TYPE_ITEM_PATH = `/${MARKET_TYPE}/%d`\n\nexport const PRICE = 'price'\nexport const PRICE_LIST_URL = `/${PRICE}`\nexport const PRICE_ITEM_URL = `${PRICE_LIST_URL}/:priceId`\nexport const PRICE_ITEM_PATH = `/${PRICE}/%d`\n\nexport const REMAINDER = 'remainder'\nexport const REMAINDER_LIST_URL = `/${REMAINDER}`\nexport const REMAINDER_ITEM_URL = `${REMAINDER_LIST_URL}/:remainderId`\nexport const REMAINDER_ITEM_PATH = `/${REMAINDER}/%d`\n\nexport const STATISTICS = 'statistics'\nexport const STATISTICS_LIST_URL = `/${STATISTICS}`\n\nexport const STATISTICS_SALES_URL = `/${STATISTICS}/sales`\nexport const STATISTICS_SALES_ITEM_URL = `${STATISTICS_SALES_URL}/:statSaleId`\nexport const STATISTICS_SALES_ITEM_PATH = `${STATISTICS_SALES_URL}/%d`\n\nexport const STATISTICS_AGENT = 'statistics/agent'\nexport const STATISTICS_AGENT_URL = `/${STATISTICS_AGENT}`\nexport const STATISTICS_AGENT_ITEM_URL = `/${STATISTICS_AGENT}/:statAgentId`\nexport const STATISTICS_AGENT_ITEM_PATH = `/${STATISTICS_AGENT}/%d`\nexport const STATISTICS_PRODUCT_URL = `/${STATISTICS}/product`\nexport const STATISTICS_MARKET = 'statistics/market'\nexport const STATISTICS_MARKET_URL = `/${STATISTICS_MARKET}`\nexport const STATISTICS_MARKET_ITEM_URL = `/${STATISTICS_MARKET}/:statMarketId`\nexport const STATISTICS_MARKET_ITEM_PATH = `/${STATISTICS_MARKET}/%d`\n\nexport const STATISTICS_FINANCE_URL = `/${STATISTICS}/finance`\nexport const STATISTICS_INCOME = 'statistics/income'\nexport const STATISTICS_INCOME_URL = `/${STATISTICS_INCOME}`\nexport const STATISTICS_OUTCOME = 'statistics/outcome'\nexport const STATISTICS_OUTCOME_URL = `/${STATISTICS_OUTCOME}`\nexport const STATISTICS_DEBTORS = 'statistics/debtors'\nexport const STATISTICS_DEBTORS_URL = `/${STATISTICS_DEBTORS}`\nexport const STATISTICS_DEBTORS_ITEM_URL = `/${STATISTICS_DEBTORS}/:statDebtorsId`\nexport const STATISTICS_DEBTORS_ITEM_PATH = `/${STATISTICS_DEBTORS}/%d`\nexport const STATISTICS_OUTCOME_CATEGORY = 'statistics/outcomeCategory'\nexport const STATISTICS_OUTCOME_CATEGORY_URL = `/${STATISTICS_OUTCOME_CATEGORY}`\n\n// ------------------------------------------------------------------------\nexport const STATISTICS_STOCK_URL = `/${STATISTICS}/stock`\n\nexport const STATISTICS_REMAINDER_URL = `${STATISTICS}/remainder`\nexport const STATISTICS_REMAINDER_ITEM_URL = `/${STATISTICS_REMAINDER_URL}/:statRemainderId`\nexport const STATISTICS_REMAINDER_ITEM_PATH = `/${STATISTICS_REMAINDER_URL}/%d`\n\nexport const STATISTICS_CASHBOX_URL = `${STATISTICS}/cashbox`\nexport const STATISTICS_CASHBOX_ITEM_URL = `/${STATISTICS_CASHBOX_URL}/:cashboxId`\nexport const STATISTICS_CASHBOX_ITEM_PATH = `/${STATISTICS_CASHBOX_URL}/%d`\n\nexport const STOCK_RECEIVE = 'stockReceive'\nexport const STOCK_RECEIVE_LIST_URL = `/${STOCK_RECEIVE}`\nexport const STOCK_RECEIVE_ITEM_URL = `${STOCK_RECEIVE_LIST_URL}/:stockReceiveId`\nexport const STOCK_RECEIVE_ITEM_PATH = `/${STOCK_RECEIVE}/%d`\n\nexport const CLIENT_BALANCE = 'clientBalance'\nexport const CLIENT_BALANCE_LIST_URL = `/${CLIENT_BALANCE}`\nexport const CLIENT_BALANCE_ITEM_URL = `${CLIENT_BALANCE_LIST_URL}/:clientBalanceId`\nexport const CLIENT_BALANCE_ITEM_PATH = `${CLIENT_BALANCE}/%d`\n\nexport const PLAN = 'plan'\nexport const PLAN_LIST_URL = `${PLAN}`\nexport const PLAN_ITEM_URL = `/${PLAN}/:agentId`\nexport const PLAN_ITEM_PATH = `${PLAN}/%d`\n\nexport const POSITION = 'position'\nexport const POSITION_LIST_URL = `/${POSITION}`\nexport const POSITION_ITEM_URL = `${POSITION_LIST_URL}/:positionId`\nexport const POSITION_ITEM_PATH = `${POSITION}/%d`\n\nexport const ACTIVITY = 'activity'\nexport const ACTIVITY_LIST_URL = `${ACTIVITY}`\nexport const ACTIVITY_ITEM_URL = `/${ACTIVITY}/:activityId`\nexport const ACTIVITY_ITEM_PATH = `${ACTIVITY}/%d`\n\n\n\n// WEBPACK FOOTER //\n// src/constants/routes.js","export const API_HOST = process.env.API_HOST\nexport const API_ROOT = 'api'\nexport const API_VERSION = 'v1'\n\nexport const API_URL = (API_HOST === 'apistick.wienerdeming.com')\n    ? `https://apistick.wienerdeming.com/${API_ROOT}/${API_VERSION}`\n    : `http://${API_HOST}/${API_ROOT}/${API_VERSION}`\n\nexport const USER = 'main/user'\nexport const SIGN_IN = `/${USER}/auth/`\nexport const AUTH_CONFIRM = `/${USER}/auth-confirm/`\nexport const SIGN_OUT = `/${USER}/unauth/`\nexport const CONFIG = 'config/'\n\nexport const EQUIPMENT = 'manufacture/equipment'\nexport const EQUIPMENT_CREATE = `/${EQUIPMENT}/`\nexport const EQUIPMENT_LIST = `/${EQUIPMENT}/`\nexport const EQUIPMENT_ITEM = `/${EQUIPMENT}/%d/`\nexport const EQUIPMENT_DELETE = `/${EQUIPMENT}/%d/`\n\nexport const STOCK = 'stock/stock'\nexport const STOCK_CREATE = `/${STOCK}/`\nexport const STOCK_LIST = `/${STOCK}/`\nexport const STOCK_ITEM = `/${STOCK}/%d/`\nexport const STOCK_DELETE = `/${STOCK}/%d/`\n\nexport const MEASUREMENT = 'main/measurement'\nexport const MEASUREMENT_CREATE = `/${MEASUREMENT}/`\nexport const MEASUREMENT_LIST = `/${MEASUREMENT}/`\nexport const MEASUREMENT_ITEM = `/${MEASUREMENT}/%d/`\nexport const MEASUREMENT_DELETE = `/${MEASUREMENT}/%d/`\n\nexport const EXPENSIVE_CATEGORY = 'finance/expanse_category'\nexport const EXPENSIVE_CATEGORY_CREATE = `/${EXPENSIVE_CATEGORY}/`\nexport const EXPENSIVE_CATEGORY_LIST = `/${EXPENSIVE_CATEGORY}/`\nexport const EXPENSIVE_CATEGORY_ITEM = `/${EXPENSIVE_CATEGORY}/%d/`\nexport const EXPENSIVE_CATEGORY_DELETE = `/${EXPENSIVE_CATEGORY}/%d/`\n\nexport const PROVIDER = 'stock/provider'\nexport const PROVIDER_CREATE = `/${PROVIDER}/`\nexport const PROVIDER_DELETE = `/${PROVIDER}/%d/`\nexport const PROVIDER_LIST = `/${PROVIDER}/`\nexport const PROVIDER_ITEM = `/${PROVIDER}/%d/`\n\nexport const CLIENT = 'sales/client'\nexport const CLIENT_CREATE = `/${CLIENT}/`\nexport const CLIENT_DELETE = `/${CLIENT}/%d/`\nexport const CLIENT_LIST = `/${CLIENT}/`\nexport const CLIENT_ITEM = `/${CLIENT}/%d/`\n\nexport const CURRENCY = 'finance/currencies'\nexport const CURRENCY_COURSE_CREATE = 'finance/currency_rate/'\nexport const CURRENCY_CREATE = `/${CURRENCY}/`\nexport const CURRENCY_LIST = `/${CURRENCY}/`\nexport const CURRENCY_DELETE = `/${CURRENCY}/%d/`\nexport const CURRENCY_ITEM = `/${CURRENCY}/%d/`\nexport const CURRENCY_PRIMARY = 'currency_primary'\nexport const CURRENCY_RATE = 'finance/currency_rate/'\n\nexport const SHOP = 'market/market'\nexport const SHOP_CREATE = `/${SHOP}/`\nexport const SHOP_LIST = `/${SHOP}/`\nexport const SHOP_ITEM = `/${SHOP}/%d/`\nexport const SHOP_ITEM_ADD_IMAGE = `/${SHOP}/%d/images/`\nexport const SHOP_SET_PRIMARY_IMAGE = `/${SHOP}/%d/set_primary_image/`\nexport const SHOP_ITEM_SHOW_IMAGE = 'main/file/%d/'\nexport const SHOP_ITEM_DELETE_IMAGE = `/${SHOP}/%d/images/%d/`\nexport const SHOP_DELETE = `/${SHOP}/%d/`\n\nexport const USERS = 'main/crud'\nexport const USERS_CREATE = `/${USERS}/`\nexport const USERS_LIST = `/${USERS}/`\nexport const USERS_ITEM = `/${USERS}/%d/`\nexport const USERS_DELETE = `/${USERS}/%d/`\nexport const USERS_GROUP = 'main/group/gcrud/'\nexport const USERS_GROUP_ITEM = `/${USERS_GROUP}/%d/`\n\nexport const CASHBOX = 'finance/cashbox'\nexport const CASHBOX_CREATE = `/${CASHBOX}/`\nexport const CASHBOX_LIST = `/${CASHBOX}/`\nexport const CASHBOX_ITEM = `/${CASHBOX}/%d/`\nexport const CASHBOX_DELETE = `/${CASHBOX}/%d/`\n\nexport const TRANSACTION = 'finance/transaction'\nexport const TRANSACTION_ACCEPT_CASH = 'finance/accept_cash_list/'\nexport const TRANSACTION_CREATE = `/${TRANSACTION}/`\nexport const TRANSACTION_LIST = `/${TRANSACTION}/`\nexport const TRANSACTION_ITEM = `/${TRANSACTION}/%d/`\nexport const TRANSACTION_SEND = '/transfer/'\nexport const TRANSACTION_DELETE = `/${TRANSACTION}/%d/`\n\nexport const CLIENT_TRANSACTION = 'sales/client_transaction'\nexport const CLIENT_TRANSACTION_CREATE = `/${CLIENT_TRANSACTION}/`\nexport const CLIENT_TRANSACTION_LIST = `/${CLIENT_TRANSACTION}/`\nexport const CLIENT_TRANSACTION_ITEM = `/${CLIENT_TRANSACTION}/%d/`\nexport const CLIENT_TRANSACTION_SEND = '/transfer/'\nexport const CLIENT_TRANSACTION_DELETE = `/${CLIENT_TRANSACTION}/%d/`\n\nexport const SUPPLY = 'stock/supply'\nexport const SUPPLY_CREATE = `/${SUPPLY}/`\nexport const SUPPLY_LIST = `/${SUPPLY}/`\nexport const SUPPLY_ITEM = `/${SUPPLY}/%d/`\nexport const SUPPLY_DEFECT = `/${SUPPLY}/%d/product_detail/%d/`\nexport const SUPPLY_CANCEL = `/${SUPPLY}/cancel`\n\nexport const PRICES = 'market/promotion'\nexport const PRICES_CREATE = `/${PRICES}/`\nexport const PRICES_LIST = `/${PRICES}/`\nexport const PRICES_ITEM = `/${PRICES}/%d/`\nexport const PRICES_DELETE = `/${PRICES}/%d/`\n\nexport const ORDER = 'sales/order'\nexport const ORDER_CREATE = `/${ORDER}/`\nexport const ORDER_RETURN = '/sales/order_return/'\nexport const ORDER_RETURN_LIST = '/sales/order_return/%d/'\nexport const ORDER_TRANSACTION = '/sales/client_transaction/'\nexport const ORDER_PAYMENTS = '/sales/payments_list/%d/'\nexport const ORDER_RETURN_CANCEL = '/sales/order_return/%d/cancel/'\n\nexport const ACCEPT_CLIENT_TRANSACTION = 'finance/accept_client_transaction'\n\nexport const ORDER_LIST = `/${ORDER}/`\nexport const ORDER_ITEM = `/${ORDER}/%d/`\nexport const ORDER_LIST_PRINT = `/${ORDER}/print/`\nexport const ORDER_CANCEL = `/${ORDER}/%d/cancel/`\nexport const GET_DOCUMENT = 'order_document/%d/'\n\nexport const SUPPLY_EXPENSE = 'stock/supply_expanse'\nexport const SUPPLY_EXPENSE_CREATE = `/${SUPPLY_EXPENSE}/`\nexport const SUPPLY_EXPENSE_LIST = `/${SUPPLY_EXPENSE}/`\nexport const SUPPLY_EXPENSE_ITEM = `/${SUPPLY_EXPENSE}/%d/`\nexport const SUPPLY_EXPENSE_DELETE = `/${SUPPLY_EXPENSE}/%d/`\n\nexport const PRODUCT = 'main/product'\nexport const PRODUCT_CREATE = `/${PRODUCT}/`\nexport const PRODUCT_LIST = `/${PRODUCT}/`\nexport const PRODUCT_ITEM = `/${PRODUCT}/%d/`\nexport const PRODUCT_DELETE = `/${PRODUCT}/%d/`\nexport const PRODUCT_EXTRA = 'sales/products_extra_list/'\nexport const PRODUCT_INGREDIENT = 'main/product/%d/ingredient_list/'\n\nexport const PRODUCT_PRICE = 'main/product'\nexport const PRODUCT_PRICE_CREATE = `/${PRODUCT_PRICE}/`\nexport const PRODUCT_PRICE_LIST = `/${PRODUCT_PRICE}/`\nexport const PRODUCT_PRICE_ITEM = `/${PRODUCT_PRICE}/%d/`\nexport const PRODUCT_PRICE_SET = `/${PRODUCT_PRICE}/%d/set_price/`\nexport const PRODUCT_PRICE_DELETE = `/${PRODUCT_PRICE}/%d/`\n\nexport const PRODUCT_TYPE = 'main/product_type'\nexport const PRODUCT_TYPE_CREATE = `/${PRODUCT_TYPE}/`\nexport const PRODUCT_TYPE_LIST = `/${PRODUCT_TYPE}/`\nexport const PRODUCT_TYPE_H_LIST = `/${PRODUCT_TYPE}/hierarchy/`\nexport const PRODUCT_TYPE_ITEM = `/${PRODUCT_TYPE}/%d/`\nexport const PRODUCT_TYPE_DELETE = `/${PRODUCT_TYPE}/%d/`\n\nexport const BRAND = 'main/brand'\nexport const BRAND_CREATE = `/${BRAND}/`\nexport const BRAND_LIST = `/${BRAND}/`\nexport const BRAND_ITEM = `/${BRAND}/%d/`\nexport const BRAND_DELETE = `/${BRAND}/%d/`\n\nexport const INGREDIENT = 'ingredients'\nexport const INGREDIENT_CREATE = `/${INGREDIENT}/`\nexport const INGREDIENT_LIST = 'main/product/%d/ingredient_list/'\nexport const INGREDIENT_ITEM = `/${INGREDIENT}/%d/`\nexport const INGREDIENT_DELETE = `/${INGREDIENT}/%d/`\n\nexport const FILE_UPLOAD = '/main/file/'\n\nexport const MANUFACTURE = 'manufacture/manufacturing'\nexport const MANUFACTURE_CREATE = `/${MANUFACTURE}/`\nexport const MANUFACTURE_LIST = `/${MANUFACTURE}/`\nexport const MANUFACTURE_ITEM = `/${MANUFACTURE}/%d/`\n\nexport const NOTIFICATIONS = 'notification/notifications'\nexport const NOTIFICATIONS_LIST = `/${NOTIFICATIONS}/`\nexport const NOTIFICATIONS_ITEM = `/${NOTIFICATIONS}/%d/`\nexport const NOTIFICATIONS_DELETE = `/${NOTIFICATIONS}/%d/`\nexport const NOTIFICATIONS_GET_NOT_VIEWED = 'notification/notifications/get_not_viewed'\n\nexport const SHIFT = 'staff/shift'\nexport const SHIFT_CREATE = `/${SHIFT}/`\nexport const SHIFT_LIST = `/${SHIFT}/`\nexport const SHIFT_ITEM = `/${SHIFT}/%d/`\nexport const SHIFT_DELETE = `/${SHIFT}/%d/`\n\nexport const USER_SHIFT = 'staff/user_shift'\nexport const USER_SHIFT_CREATE = `/${USER_SHIFT}/`\nexport const USER_SHIFT_LIST = `/${USER_SHIFT}/`\nexport const USER_SHIFT_ITEM = `/${USER_SHIFT}/%d/`\nexport const USER_SHIFT_DELETE = `/${USER_SHIFT}/%d/`\n\nexport const PENDING_EXPENSES = 'stock/supply_expanse'\nexport const PENDING_EXPENSES_UPDATE = '/transactions/expanse_cashbox/'\nexport const PENDING_EXPENSES_LIST = `/${PENDING_EXPENSES}/`\nexport const PENDING_EXPENSES_ITEM = `/${PENDING_EXPENSES}/%d/`\n\nexport const STATSTOCK = 'stock/stock'\nexport const STATSTOCK_CREATE = `/${STATSTOCK}/`\nexport const STATSTOCK_LIST = `/${STATSTOCK}/`\nexport const STATSTOCK_ITEM = `/${STATSTOCK}/%d/`\nexport const STATSTOCK_DELETE = `/${STATSTOCK}/%d/`\nexport const STATSTOCK_DATA = '/stock/stock_stat/'\nexport const STATSTOCK_GET_DOCUMENT = 'stock/stock/export_balances/'\n\nexport const REMAINDER_STOCK = 'stock/stock'\nexport const REMAINDER_STOCK_CREATE = `/${REMAINDER_STOCK}/all_balances/`\nexport const REMAINDER_STOCK_LIST = `/${REMAINDER_STOCK}/all_balances/`\nexport const REMAINDER_STOCK_ITEM = `/${REMAINDER_STOCK}/all_balances/balances/%d`\nexport const REMAINDER_STOCK_DELETE = `/${REMAINDER_STOCK}/all_balances/%d`\n\nexport const TRANSACTION_STOCK = 'stock/barcode_history'\nexport const TRANSACTION_STOCK_LIST = `/${TRANSACTION_STOCK}/`\n\nexport const STATDEBTORS = 'sales/debtors'\nexport const STATDEBTORS_CREATE = `/${STATDEBTORS}/`\nexport const STATDEBTORS_LIST = `/${STATDEBTORS}/`\nexport const STATDEBTORS_ORDER_LIST = 'sales/order/'\nexport const STATDEBTORS_SUM = '/sales/debtors_statistics/'\nexport const STATDEBTORS_ITEM = `/${STATDEBTORS}/%d/`\nexport const STATDEBTORS_DELETE = `/${STATDEBTORS}/%d/`\nexport const STATDEBTORS_GET_DOCUMENT = 'sales/debtors_statistics/'\n\nexport const PENDING_PAYMENTS = 'sales/order'\nexport const PENDING_PAYMENTS_CREATE = '/sales/order_payment/'\nexport const PENDING_PAYMENTS_LIST = `/${PENDING_PAYMENTS}/`\nexport const PENDING_PAYMENTS_ITEM = `/${PENDING_PAYMENTS}/%d/`\n\nexport const STAT_MANUFACTURE = 'manufacture/manufacturing'\nexport const STAT_MANUFACTURE_CREATE = `/${STAT_MANUFACTURE}/`\nexport const STAT_MANUFACTURE_LIST = `/${STAT_MANUFACTURE}/`\nexport const STAT_MANUFACTURE_ITEM = `/${STAT_MANUFACTURE}/%d/`\nexport const STAT_MANUFACTURE_DELETE = `/${STAT_MANUFACTURE}/%d/`\n\nexport const STAT_CASHBOX = 'finance/cashbox'\nexport const STAT_CASHBOX_CREATE = `/${STAT_CASHBOX}/`\nexport const STAT_CASHBOX_LIST = `/${STAT_CASHBOX}/`\nexport const STAT_CASHBOX_ITEM = `/${STAT_CASHBOX}/%d/`\nexport const STAT_CASHBOX_DELETE = `/${STAT_CASHBOX}/%d/`\n\nexport const MANUFACTURE_PRODUCT = 'manufacture/create_ingredient'\nexport const MANUFACTURE_PRODUCT_CREATE = `/${MANUFACTURE_PRODUCT}/`\nexport const MANUFACTURE_PRODUCT_LIST = `/${MANUFACTURE_PRODUCT}/`\nexport const MANUFACTURE_PRODUCT_DELETE = '/delete_ingredient/%d/'\nexport const MANUFACTURE_PRODUCT_CHANGE = '/main/product/%d/change_manufacture/'\n\nexport const SHIPMENT = 'manufacture/shipment_statistics/'\nexport const SHIPMENT_LIST = `/${SHIPMENT}/`\nexport const SHIPMENT_ITEM = 'manufacture/shipment_details/%d/'\n\nexport const MARKET_TYPE = 'market/market_type'\nexport const MARKET_TYPE_CREATE = `/${MARKET_TYPE}/`\nexport const MARKET_TYPE_LIST = `/${MARKET_TYPE}/`\nexport const MARKET_TYPE_ITEM = `/${MARKET_TYPE}/%d/`\nexport const MARKET_TYPE_DELETE = `/${MARKET_TYPE}/%d/`\n\nexport const ZONE = 'market/border'\nexport const ZONE_CREATE = `/${ZONE}/`\nexport const ZONE_LIST = `/${ZONE}/`\nexport const ZONE_ITEM = `/${ZONE}/%d/`\nexport const ZONE_DELETE = `/${ZONE}/%d/`\nexport const ZONE_STAT = `/${ZONE}/statistics/`\nexport const ZONE_BIND_AGENT = `${ZONE}/%d/bind_agent/`\nexport const ZONE_UNBIND_AGENT = `${ZONE}/%d/unbind_agent/`\n\nexport const PRICE = 'stock/products_net_costs'\nexport const PRICE_CREATE = `/${PRICE}/`\nexport const PRICE_LIST = `/${PRICE}/`\nexport const PRICE_ITEM = `/${PRODUCT}/%d/`\nexport const PRICE_DELETE = `/${PRICE}/%d/`\n\nexport const PRICE_LIST_ITEM = 'sales/price_list_item'\nexport const PRICE_LIST_ITEM_HISTORY = 'stock/supply_product_history/%d/'\nexport const PRICE_LIST_ITEM_EXPENSES = 'stock/supply_product_expenses/%d/'\nexport const PRICE_LIST_ITEM_LIST = `/${PRICE_LIST_ITEM}/`\nexport const PRICE_LIST_ITEM_ADD = `/${PRICE_LIST_ITEM}/add_items/`\n\nexport const TRACKING = 'market/agents_location/'\nexport const TRACKING_LIST = `${TRACKING}`\nexport const TRACKING_ITEM = `${TRACKING}/%d/`\nexport const MARKETS_LOCATION = `${SHOP}/locations/`\nexport const LOCATION_LIST = 'market/location/'\n\nexport const REMAINDER = 'stock/stock'\nexport const REMAINDER_LIST = `/${REMAINDER}/all_balances/`\nexport const REMAINDER_ITEM = `/${REMAINDER}/balances_by_product/%d/`\nexport const REMAINDER_TRANSFER = '/stock/stock_transfer/wb_create/'\nexport const REMAINDER_DISCARD = '/stock/writeoff/'\n\nexport const STAT_AGENT_LIST = 'stats/agents/'\nexport const STAT_AGENT_ITEM = 'sales/order/'\nexport const STAT_AGENT_GET_DOCUMENT = '/stats/agents/export/'\n\nexport const STAT_MARKET_LIST = 'stats/markets/'\nexport const STAT_MARKET_ITEM = 'sales/order/'\nexport const STAT_MARKET_GET_DOCUMENT = '/stats/markets/export'\nexport const STAT_MARKET_DATA = '/stats/orders/'\n\nexport const STAT_FINANCE_LIST = 'finance/transaction/'\nexport const STAT_FINANCE_DATA = 'stats/transactions/'\n\nexport const STAT_INCOME_DATA = 'stats/transactions/'\nexport const STAT_INCOME_LIST = 'finance/transaction/'\n\nexport const STAT_OUTCOME_DATA = 'stats/transactions/'\nexport const STAT_OUTCOME_LIST = 'finance/transaction/'\nexport const STAT_OUTCOME_GET_DOCUMENT = 'stats/transactions/export'\n\nexport const STAT_DEBTORS_DATA = 'stats/debtors_stats/'\nexport const STAT_DEBTORS_LIST = 'stats/debtors/'\nexport const STAT_DEBTORS_ITEM = 'sales/order/'\nexport const STAT_DEBTORS_GET_DOCUMENT = 'stats/debtors/export'\n\nexport const STAT_SALES_DATA = '/stats/orders/'\n\nexport const STAT_PRODUCT_LIST = 'stats/products/'\nexport const STAT_PRODUCT_GET_DOCUMENT = '/stats/products/export'\n\nexport const STAT_OUTCOME_CATEGORY_LIST = 'stats/expenses/'\nexport const STAT_OUTCOME_CATEGORY_ITEM = 'sales/order/'\nexport const STAT_OUTCOME_CATEGORY_GET_DOCUMENT = 'stats/agents/export/'\nexport const STAT_REMAINDER_LIST = `/${REMAINDER}/all_balances/`\nexport const STAT_REMAINDER_ITEM = `/${REMAINDER}/balances_by_product/%d/`\nexport const STATISTICS_CASHBOX_LIST = `/${CASHBOX}/`\nexport const STATISTICS_CASHBOX_ITEM = `/${CASHBOX}/%d/`\n\nexport const STOCK_RECEIVE = 'stock/supply'\nexport const STOCK_HISTORY = 'stock/barcode_history'\nexport const STOCK_HISTORY_LIST = `/${STOCK_HISTORY}/`\nexport const STOCK_TRANSFER = 'stock/outcome_tasks'\nexport const STOCK_TRANSFER_LIST = `/${STOCK_TRANSFER}/`\nexport const STOCK_TRANSFER_ITEM = '/sales/order/%d/'\nexport const STOCK_TRANSFER_ACCEPT = '/stock/accept_outcome/'\nexport const STOCK_RECEIVE_LIST = '/stock/income_tasks/'\nexport const STOCK_RECEIVE_ITEM = `/${STOCK_RECEIVE}/%d/`\nexport const STOCK_RECEIVE_TRANSFER_CHANGE_STATUS = 'stock/stock_transfer/%d/change_status/'\nexport const STOCK_RECEIVE_ACCEPT_ORDER_RETURN = 'stock/accept_order_return/'\n\nexport const STOCK_RECEIVE_CREATE = '/stock/supply/%d/accept_products/'\nexport const STOCK_BARCODE_LIST = STOCK_RECEIVE_CREATE\n\nexport const CLIENT_BALANCE = 'sales/client_balances'\nexport const CLIENT_BALANCE_LIST = `/${CLIENT_BALANCE}/`\nexport const CLIENT_BALANCE_ITEM = 'sales/client_transaction/'\nexport const CLIENT_BALANCE_UPDATE = `/${CLIENT_BALANCE}/%d/`\n\nexport const PLAN_CREATE = `/${STAT_AGENT_LIST}/`\nexport const PLAN_AGENT_ITEM = `${STAT_AGENT_LIST}/%d/`\n\nexport const POSITION = 'main/group/gcrud'\nexport const POSITION_COURSE_CREATE = 'finance/currency_rate/'\nexport const POSITION_CREATE = `/${POSITION}/`\nexport const POSITION_LIST = `/${POSITION}/`\nexport const POSITION_DELETE = `/${POSITION}/%d/`\nexport const POSITION_ITEM = `/${POSITION}/%d/`\nexport const POSITION_PRIMARY = 'currency_primary'\nexport const POSITION_RATE = `/${POSITION}/%d/permissions/`\n\nexport const ACTIVITY = 'market/plan_tasks'\nexport const ACTIVITY_ORDER_LIST = `${ACTIVITY}/`\nexport const ACTIVITY_ORDER_ITEM = `${ORDER}/%d`\nexport const ACTIVITY_VISIT_LIST = `/${ACTIVITY}/`\nexport const ACTIVITY_REPORT_LIST = `/${ACTIVITY}/`\nexport const ACTIVITY_REPORT_SHOW_IMAGE = 'main/file/%d/'\nexport const ACTIVITY_ORDER_RETURN_LIST = `/${ACTIVITY}/`\nexport const ACTIVITY_PAYMENT_LIST = `/${ACTIVITY}/`\nexport const ACTIVITY_DELIVERY_LIST = `/${ACTIVITY}/`\n\n\n\n// WEBPACK FOOTER //\n// src/constants/api.js","import axios from 'axios'\nimport {API_URL} from '../constants/api'\nimport * as storageHelper from '../helpers/storage'\nimport {hashHistory} from 'react-router'\nimport * as ROUTES from '../constants/routes'\n\nconst axiosRequest = () => {\n    const TOKEN = storageHelper.getToken()\n    const UNAUTHORIZATE_STATUS = 401\n    const NORM_STATUS_BEGIN = 200\n    const NORM_STATUS_END = 300\n    axios.defaults.baseURL = API_URL\n\n    if (TOKEN) {\n        axios.defaults.headers.common.Authorization = `Token ${TOKEN}`\n        axios.defaults.headers.common['cache-control'] = 'no-cache'\n        axios.defaults.validateStatus = (status) => {\n            if (status === UNAUTHORIZATE_STATUS) {\n                axios.defaults.headers.common.Authorization = ''\n                storageHelper.removeToken()\n                hashHistory.push(ROUTES.SIGN_IN)\n            }\n            return status >= NORM_STATUS_BEGIN && status < NORM_STATUS_END\n        }\n    }\n\n    return axios\n}\n\nexport default axiosRequest\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/axios.js","import _ from 'lodash'\n\nconst toCamelCase = (data) => {\n    if (_.isArray(data)) {\n        return _.map(data, (item) => toCamelCase(item))\n    }\n\n    if (_.isObject(data)) {\n        return _\n            .chain(data)\n            .mapKeys((value, key) => _.camelCase(key))\n            .mapValues((value) => toCamelCase(value))\n            .value()\n    }\n\n    return data\n}\n\nexport default toCamelCase\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/toCamelCase.js","import CloseIcon2 from './CloseIcon2'\n\nexport default CloseIcon2\n\n\n\n// WEBPACK FOOTER //\n// src/components/CloseIcon2/index.js","import TextField from './Basic/TextField'\nimport CheckBox from './Basic/CheckBox'\nimport DateToDateField from './Basic/DateToDateField'\nimport SearchField from './Basic/SearchField'\nimport LocationField from './Basic/LocationField'\nimport CategorySearchField from './CategorySearchField'\nimport UsersSearchField from './Users/UsersSearchField'\nimport ProductTypeSearchField from './Product/ProductTypeSearchField'\nimport ProductTypeParentSearchField from './Product/ProductTypeParentSearchField'\nimport ProductTypeChildSearchField from './Product/ProductTypeChildSearchField'\nimport BrandSearchField from './BrandSearchField'\nimport MeasurementSearchField from './MeasurementSearchField'\nimport CurrencySearchField from './CurrencySearchField'\nimport ProviderSearchField from './Provider/ProviderSearchField'\nimport ClientSearchField from './Client/ClientSearchField'\nimport StockSearchField from './Stock/StockSearchField'\nimport ImageUploadField from './Basic/ImageUploadField'\nimport DateField from './Basic/DateField'\nimport TimeField from './Basic/TimeField'\nimport ProductSearchField from './Product/ProductSearchField'\nimport SupplyListProductField from './Supply/SupplyListProductField'\nimport PricesListProductField from './Promotions/PricesListProductField'\nimport PricesBonusProductField from './Promotions/PricesBonusProductField'\nimport OrderListReturnField from './Order/OrderListReturnField'\nimport OrderListProductField from './Order/OrderListProductField'\nimport ExpensiveCategorySearchField from './ExpensiveCategorySearchField'\nimport PaymentTypeSearchField from './PaymentTypeSearchField'\nimport StockTypeSearchField from './Stock/StockTypeSearchField'\nimport CashboxSearchField from './CashboxSearchField'\nimport DeliveryTypeSearchField from './DeliveryTypeSearchField'\nimport ManufactureSearchField from './Manufacture/ManufactureSearchField'\nimport ManufactureListMaterialField from './Manufacture/ManufactureListMaterialField'\nimport ProviderContactsField from './Provider/ProviderContactsField'\nimport ClientContactsField from './Client/ClientContactsField'\nimport UsersGroupSearchField from './Users/UsersGroupSearchField'\nimport TransactionTypeSearchField from './TransactionTypeSearchField'\nimport ProductMeasurementField from './Product/ProductMeasurementField'\nimport ShiftSearchField from './ShiftSearchField'\nimport CashboxCustomField from './PendingPayments/CashboxCustomField'\nimport VisitFrequencySearchField from './Shop/VisitFrequencySearchField'\nimport ShopStatusSearchField from './Shop/ShopStatusSearchField'\nimport DealTypeSearchField from './DealTypeSearchField'\nimport MarketTypeSearchField from './Shop/MarketTypeSearchField'\nimport MarketSearchField from './Shop/MarketSearchField'\nimport DeptSearchField from './DeptTypeSearchField'\nimport StockReceiveProductSearchField from './StockReceive/StockReceiveProductSearchField'\nimport FrequencySearchField from './FrequencySearchField'\nimport StockStatusSearchField from './StockStatusSearchField'\nimport PriceMainRadioButton from './PriceMainRadioButton'\nimport normalizeDiscount from './normalizers/normalizeDiscount'\nimport normalizeNumber from './normalizers/normalizeNumber'\nimport ZoneSearchField from './ZoneSearchField'\nimport InOutTypeSearchFiled from './InOutTypeSearchFiled'\n\nexport {\n    ZoneSearchField,\n    PriceMainRadioButton,\n    normalizeDiscount,\n    normalizeNumber,\n    ShiftSearchField,\n    StockStatusSearchField,\n    ProductMeasurementField,\n    TransactionTypeSearchField,\n    UsersGroupSearchField,\n    ClientContactsField,\n    ManufactureListMaterialField,\n    OrderListProductField,\n    OrderListReturnField,\n    DeliveryTypeSearchField,\n    ManufactureSearchField,\n    ProductSearchField,\n    DateField,\n    TimeField,\n    CheckBox,\n    TextField,\n    DateToDateField,\n    LocationField,\n    SearchField,\n    CategorySearchField,\n    UsersSearchField,\n    ProductTypeSearchField,\n    BrandSearchField,\n    MeasurementSearchField,\n    ImageUploadField,\n    CurrencySearchField,\n    ProviderSearchField,\n    ClientSearchField,\n    StockSearchField,\n    SupplyListProductField,\n    ExpensiveCategorySearchField,\n    ProviderContactsField,\n    PaymentTypeSearchField,\n    StockTypeSearchField,\n    CashboxSearchField,\n    CashboxCustomField,\n    VisitFrequencySearchField,\n    PricesListProductField,\n    ShopStatusSearchField,\n    MarketTypeSearchField,\n    MarketSearchField,\n    DealTypeSearchField,\n    DeptSearchField,\n    StockReceiveProductSearchField,\n    FrequencySearchField,\n    PricesBonusProductField,\n    ProductTypeParentSearchField,\n    ProductTypeChildSearchField,\n    InOutTypeSearchFiled\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/index.js","/**\n * Action Types\n */\nexport const SIGN_IN = 'SIGN_IN'\nexport const AUTH_CONFIRM = 'AUTH_CONFIRM'\n\nexport const SHOP_LIST = 'SHOP_LIST'\nexport const SHOP_ITEM = 'SHOP_ITEM'\nexport const SHOP_UPDATE = 'SHOP_UPDATE'\nexport const SHOP_CREATE = 'SHOP_CREATE'\nexport const SHOP_DELETE = 'SHOP_DELETE'\nexport const SHOP_ITEM_ADD_IMAGE = 'SHOP_ITEM_ADD_IMAGE'\nexport const SHOP_SET_PRIMARY_IMAGE = 'SHOP_SET_PRIMARY_IMAGE'\nexport const SHOP_ITEM_SHOW_IMAGE = 'SHOP_ITEM_SHOW_IMAGE'\nexport const SHOP_ITEM_DELETE_IMAGE = 'SHOP_ITEM_DELETE_IMAGE'\n\nexport const CONFIG = 'CONFIG'\n\nexport const USERS_LIST = 'USERS_LIST'\nexport const USERS_ITEM = 'USERS_ITEM'\nexport const USERS_UPDATE = 'USERS_UPDATE'\nexport const USERS_CREATE = 'USERS_CREATE'\nexport const USERS_DELETE = 'USERS_DELETE'\nexport const USERS_GROUP = 'USERS_GROUP'\n\nexport const CASHBOX_LIST = 'CASHBOX_LIST'\nexport const CASHBOX_ITEM = 'CASHBOX_ITEM'\nexport const CASHBOX_UPDATE = 'CASHBOX_UPDATE'\nexport const CASHBOX_CREATE = 'CASHBOX_CREATE'\nexport const CASHBOX_DELETE = 'CASHBOX_DELETE'\n\nexport const TRANSACTION_LIST = 'TRANSACTION_LIST'\nexport const TRANSACTION_ITEM = 'TRANSACTION_ITEM'\nexport const TRANSACTION_UPDATE = 'TRANSACTION_UPDATE'\nexport const TRANSACTION_UPDATE_INCOME = 'TRANSACTION_UPDATE_INCOME'\nexport const TRANSACTION_CREATE = 'TRANSACTION_CREATE'\nexport const TRANSACTION_INCOME = 'TRANSACTION_INCOME'\nexport const TRANSACTION_EXPENSE = 'TRANSACTION_EXPENSE'\nexport const TRANSACTION_SEND = 'TRANSACTION_SEND'\nexport const TRANSACTION_DELETE = 'TRANSACTION_DELETE'\n\nexport const CLIENT_TRANSACTION_LIST = 'CLIENT_TRANSACTION_LIST'\nexport const CLIENT_TRANSACTION_ITEM = 'CLIENT_TRANSACTION_ITEM'\nexport const CLIENT_TRANSACTION_UPDATE = 'CLIENT_TRANSACTION_UPDATE'\nexport const CLIENT_TRANSACTION_CREATE = 'CLIENT_TRANSACTION_CREATE'\nexport const CLIENT_TRANSACTION_EXPENSE = 'CLIENT_TRANSACTION_EXPENSE'\nexport const CLIENT_TRANSACTION_INCOME = 'CLIENT_TRANSACTION_INCOME'\nexport const CLIENT_TRANSACTION_SEND = 'CLIENT_TRANSACTION_SEND'\nexport const CLIENT_TRANSACTION_DELETE = 'CLIENT_TRANSACTION_DELETE'\n\nexport const SUPPLY_LIST = 'SUPPLY_LIST'\nexport const SUPPLY_ITEM = 'SUPPLY_ITEM'\nexport const SUPPLY_UPDATE = 'SUPPLY_UPDATE'\nexport const SUPPLY_CREATE = 'SUPPLY_CREATE'\nexport const SUPPLY_CANCEL = 'SUPPLY_CANCEL'\nexport const SUPPLY_DEFECT = 'SUPPLY_DEFECT'\n\nexport const PRICES_LIST = 'PRICES_LIST'\nexport const PRICES_LIST_CSV = 'PRICES_LIST_CSV'\nexport const PRICES_ITEM = 'PRICES_ITEM'\nexport const PRICES_UPDATE = 'PRICES_UPDATE'\nexport const PRICES_CREATE = 'PRICES_CREATE'\nexport const PRICES_DELETE = 'PRICES_DELETE'\n\nexport const ORDER_LIST = 'ORDER_LIST'\nexport const ORDER_LIST_PRINT = 'ORDER_LIST_PRINT'\nexport const ORDER_ITEM = 'ORDER_ITEM'\nexport const ORDER_TRANSACTION = 'ORDER_TRANSACTION'\nexport const ORDER_PAYMENTS = 'ORDER_PAYMENTS'\nexport const ORDER_UPDATE = 'ORDER_UPDATE'\nexport const ORDER_CREATE = 'ORDER_CREATE'\nexport const ORDER_DELETE = 'ORDER_DELETE'\nexport const ORDER_RETURN = 'ORDER_RETURN'\nexport const ORDER_RETURN_CANCEL = 'ORDER_RETURN_CANCEL'\nexport const ORDER_RETURN_LIST = 'ORDER_RETURN_LIST'\nexport const GET_DOCUMENT = 'GET_DOCUMENT'\nexport const ACCEPT_CLIENT_TRANSACTION = 'ACCEPT_CLIENT_TRANSACTION'\n\nexport const SUPPLY_EXPENSE_LIST = 'SUPPLY_EXPENSE_LIST'\nexport const SUPPLY_EXPENSE_ITEM = 'SUPPLY_EXPENSE_ITEM'\nexport const SUPPLY_EXPENSE_UPDATE = 'SUPPLY_EXPENSE_UPDATE'\nexport const SUPPLY_EXPENSE_CREATE = 'SUPPLY_EXPENSE_CREATE'\nexport const SUPPLY_EXPENSE_DELETE = 'SUPPLY_EXPENSE_DELETE'\n\nexport const PRODUCT_LIST = 'PRODUCT_LIST'\nexport const PRODUCT_UPDATE = 'PRODUCT_UPDATE'\nexport const PRODUCT_CREATE = 'PRODUCT_CREATE'\nexport const PRODUCT_ITEM = 'PRODUCT_ITEM'\nexport const PRODUCT_DELETE = 'PRODUCT_DELETE'\nexport const PRODUCT_MEASUREMENT = 'PRODUCT_MEASUREMENT'\nexport const PRODUCT_EXTRA = 'PRODUCT_EXTRA'\n\nexport const PRODUCT_PRICE_LIST = 'PRODUCT_PRICE_LIST'\nexport const PRODUCT_PRICE_UPDATE = 'PRODUCT_PRICE_UPDATE'\nexport const PRODUCT_PRICE_CREATE = 'PRODUCT_PRICE_CREATE'\nexport const PRODUCT_PRICE_DELETE = 'PRODUCT_PRICE_DELETE'\nexport const PRODUCT_PRICE_ITEM = 'PRODUCT_PRICE_ITEM'\n\nexport const PRODUCT_TYPE_LIST = 'PRODUCT_TYPE_LIST'\nexport const PRODUCT_TYPE_H_LIST = 'PRODUCT_TYPE_H_LIST'\nexport const PRODUCT_TYPE_ITEM = 'PRODUCT_TYPE_ITEM'\nexport const PRODUCT_TYPE_UPDATE = 'PRODUCT_TYPE_UPDATE'\nexport const PRODUCT_TYPE_CREATE = 'PRODUCT_TYPE_CREATE'\nexport const PRODUCT_TYPE_DELETE = 'PRODUCT_TYPE_DELETE'\n\nexport const INGREDIENT_LIST = 'INGREDIENT_LIST'\nexport const INGREDIENT_ITEM = 'INGREDIENT_ITEM'\nexport const INGREDIENT_UPDATE = 'INGREDIENT_UPDATE'\nexport const INGREDIENT_CREATE = 'INGREDIENT_CREATE'\nexport const INGREDIENT_DELETE = 'INGREDIENT_DELETE'\n\nexport const CATEGORY_LIST = 'CATEGORY_LIST'\nexport const CATEGORY_ITEM = 'CATEGORY_ITEM'\nexport const CATEGORY_UPDATE = 'CATEGORY_UPDATE'\nexport const CATEGORY_CREATE = 'CATEGORY_CREATE'\nexport const CATEGORY_DELETE = 'CATEGORY_DELETE'\n\nexport const EQUIPMENT_LIST = 'EQUIPMENT_LIST'\nexport const EQUIPMENT_ITEM = 'EQUIPMENT_ITEM'\nexport const EQUIPMENT_UPDATE = 'EQUIPMENT_UPDATE'\nexport const EQUIPMENT_CREATE = 'EQUIPMENT_CREATE'\nexport const EQUIPMENT_DELETE = 'EQUIPMENT_DELETE'\n\nexport const STOCK_LIST = 'STOCK_LIST'\nexport const STOCK_ITEM = 'STOCK_ITEM'\nexport const STOCK_UPDATE = 'STOCK_UPDATE'\nexport const STOCK_CREATE = 'STOCK_CREATE'\nexport const STOCK_DELETE = 'STOCK_DELETE'\n\nexport const STATSTOCK_LIST = 'STATSTOCK_LIST'\nexport const STATSTOCK_ITEM = 'STATSTOCK_ITEM'\nexport const STATSTOCK_UPDATE = 'STATSTOCK_UPDATE'\nexport const STATSTOCK_CREATE = 'STATSTOCK_CREATE'\nexport const STATSTOCK_DELETE = 'STATSTOCK_DELETE'\nexport const STATSTOCK_DATA = 'STATSTOCK_DATA'\nexport const STATSTOCK_GET_DOCUMENT = 'STATSTOCK_GET_DOCUMENT'\n\nexport const REMAINDER_STOCK_LIST = 'REMAINDER_STOCK_LIST'\nexport const REMAINDER_STOCK_ITEM = 'REMAINDER_STOCK_ITEM'\nexport const REMAINDER_STOCK_UPDATE = 'REMAINDER_STOCK_UPDATE'\nexport const REMAINDER_STOCK_CREATE = 'REMAINDER_STOCK_CREATE'\nexport const REMAINDER_STOCK_DELETE = 'REMAINDER_STOCK_DELETE'\n\nexport const TRANSACTION_STOCK_LIST = 'TRANSACTION_STOCK_LIST'\nexport const TRANSACTION_STOCK_UPDATE = 'TRANSACTION_STOCK_UPDATE'\nexport const TRANSACTION_STOCK_CREATE = 'TRANSACTION_STOCK_CREATE'\nexport const TRANSACTION_ACCEPT_CASH = 'TRANSACTION_ACCEPT_CASH'\n\nexport const MEASUREMENT_LIST = 'MEASUREMENT_LIST'\nexport const MEASUREMENT_ITEM = 'MEASUREMENT_ITEM'\nexport const MEASUREMENT_UPDATE = 'MEASUREMENT_UPDATE'\nexport const MEASUREMENT_CREATE = 'MEASUREMENT_CREATE'\nexport const MEASUREMENT_DELETE = 'MEASUREMENT_DELETE'\n\nexport const EXPENSIVE_CATEGORY_LIST = 'EXPENSIVE_CATEGORY_LIST'\nexport const EXPENSIVE_CATEGORY_ITEM = 'EXPENSIVE_CATEGORY_ITEM'\nexport const EXPENSIVE_CATEGORY_UPDATE = 'EXPENSIVE_CATEGORY_UPDATE'\nexport const EXPENSIVE_CATEGORY_CREATE = 'EXPENSIVE_CATEGORY_CREATE'\nexport const EXPENSIVE_CATEGORY_DELETE = 'EXPENSIVE_CATEGORY_DELETE'\n\nexport const BRAND_LIST = 'BRAND_LIST'\nexport const BRAND_ITEM = 'BRAND_ITEM'\nexport const BRAND_UPDATE = 'BRAND_UPDATE'\nexport const BRAND_CREATE = 'BRAND_CREATE'\nexport const BRAND_DELETE = 'BRAND_DELETE'\n\nexport const PROVIDER_LIST = 'PROVIDER_LIST'\nexport const PROVIDER_ITEM = 'PROVIDER_ITEM'\nexport const PROVIDER_CONTACTS = 'PROVIDER_CONTACTS'\nexport const PROVIDER_UPDATE = 'PROVIDER_UPDATE'\nexport const PROVIDER_CREATE = 'PROVIDER_CREATE'\nexport const PROVIDER_DELETE = 'PROVIDER_DELETE'\n\nexport const CLIENT_LIST = 'CLIENT_LIST'\nexport const CLIENT_ITEM = 'CLIENT_ITEM'\nexport const CLIENT_CONTACTS = 'CLIENT_CONTACTS'\nexport const CLIENT_UPDATE = 'CLIENT_UPDATE'\nexport const CLIENT_CREATE = 'CLIENT_CREATE'\nexport const CLIENT_DELETE = 'CLIENT_DELETE'\n\nexport const CURRENCY_LIST = 'CURRENCY_LIST'\nexport const CURRENCY_ITEM = 'CURRENCY_ITEM'\nexport const CURRENCY_UPDATE = 'CURRENCY_UPDATE'\nexport const CURRENCY_COURSE_CREATE = 'CURRENCY_COURSE_CREATE'\nexport const CURRENCY_CREATE = 'CURRENCY_CREATE'\nexport const CURRENCY_DELETE = 'CURRENCY_DELETE'\nexport const CURRENCY_PRIMARY = 'CURRENCY_PRIMARY'\nexport const CURRENCY_PRIMARY_UPDATE = 'CURRENCY_PRIMARY_UPDATE'\n\nexport const SNACKBAR = 'SNACKBAR'\nexport const SNACKBAR_OPEN = `${SNACKBAR}_OPEN`\nexport const SNACKBAR_CLOSE = `${SNACKBAR}_CLOSE`\n\nexport const ERROR = 'ERROR'\nexport const ERROR_OPEN = `${ERROR}_OPEN`\nexport const ERROR_CLOSE = `${ERROR}_CLOSE`\n\nexport const MANUFACTURE_LIST = 'MANUFACTURE_LIST'\nexport const MANUFACTURE_ITEM = 'MANUFACTURE_ITEM'\nexport const MANUFACTURE_UPDATE = 'MANUFACTURE_UPDATE'\nexport const MANUFACTURE_CREATE = 'MANUFACTURE_CREATE'\n\nexport const NOTIFICATIONS_LIST = 'NOTIFICATIONS_LIST'\nexport const NOTIFICATIONS_ITEM = 'NOTIFICATIONS_ITEM'\nexport const NOTIFICATIONS_DELETE = 'NOTIFICATIONS_DELETE'\nexport const NOTIFICATIONS_TIME_INTERVAL = 'NOTIFICATIONS_TIME_INTERVAL'\n\nexport const SHIFT_LIST = 'SHIFT_LIST'\nexport const SHIFT_ITEM = 'SHIFT_ITEM'\nexport const SHIFT_UPDATE = 'SHIFT_UPDATE'\nexport const SHIFT_CREATE = 'SHIFT_CREATE'\nexport const SHIFT_DELETE = 'SHIFT_DELETE'\n\nexport const USER_SHIFT_LIST = 'USER_SHIFT_LIST'\nexport const USER_SHIFT_ITEM = 'USER_SHIFT_ITEM'\nexport const USER_SHIFT_UPDATE = 'USER_SHIFT_UPDATE'\nexport const USER_SHIFT_CREATE = 'USER_SHIFT_CREATE'\nexport const USER_SHIFT_DELETE = 'USER_SHIFT_DELETE'\n\nexport const PENDING_EXPENSES_LIST = 'PENDING_EXPENSES_LIST'\nexport const PENDING_EXPENSES_ITEM = 'PENDING_EXPENSES_ITEM'\nexport const PENDING_EXPENSES_UPDATE = 'PENDING_EXPENSES_UPDATE'\nexport const PENDING_EXPENSES_CREATE = 'PENDING_EXPENSES_CREATE'\nexport const PENDING_EXPENSES_DELETE = 'PENDING_EXPENSES_DELETE'\n\nexport const PENDING_PAYMENTS_LIST = 'PENDING_PAYMENTS_LIST'\nexport const PENDING_PAYMENTS_ITEM = 'PENDING_PAYMENTS_ITEM'\nexport const PENDING_PAYMENTS_UPDATE = 'PENDING_PAYMENTS_UPDATE'\nexport const PENDING_PAYMENTS_CREATE = 'PENDING_PAYMENTS_CREATE'\nexport const PENDING_PAYMENTS_DELETE = 'PENDING_PAYMENTS_DELETE'\n\nexport const STATDEBTORS_LIST = 'STATDEBTORS_LIST'\nexport const STATDEBTORS_ORDER_LIST = 'STATDEBTORS_ORDER_LIST'\nexport const STATDEBTORS_SUM = 'STATDEBTORS_SUM'\nexport const STATDEBTORS_ITEM = 'STATDEBTORS_ITEM'\nexport const STATDEBTORS_UPDATE = 'STATDEBTORS_UPDATE'\nexport const STATDEBTORS_CREATE = 'STATDEBTORS_CREATE'\nexport const STATDEBTORS_DELETE = 'STATDEBTORS_DELETE'\nexport const STATDEBTORS_GET_DOCUMENT = 'STATDEBTORS_GET_DOCUMENT'\n\nexport const STAT_MANUFACTURE_LIST = 'STAT_MANUFACTURE_LIST'\nexport const STAT_MANUFACTURE_ITEM = 'STAT_MANUFACTURE_ITEM'\nexport const STAT_MANUFACTURE_UPDATE = 'STAT_MANUFACTURE_UPDATE'\nexport const STAT_MANUFACTURE_CREATE = 'STAT_MANUFACTURE_CREATE'\nexport const STAT_MANUFACTURE_DELETE = 'STAT_MANUFACTURE_DELETE'\n\nexport const STAT_CASHBOX_LIST = 'STAT_CASHBOX_LIST'\nexport const STAT_CASHBOX_ITEM = 'STAT_CASHBOX_ITEM'\nexport const STAT_CASHBOX_UPDATE = 'STAT_CASHBOX_UPDATE'\nexport const STAT_CASHBOX_CREATE = 'STAT_CASHBOX_CREATE'\nexport const STAT_CASHBOX_DELETE = 'STAT_CASHBOX_DELETE'\n\nexport const MANUFACTURE_PRODUCT_CREATE = 'MANUFACTURE_PRODUCT_CREATE'\nexport const MANUFACTURE_PRODUCT_DELETE = 'MANUFACTURE_PRODUCT_DELETE'\nexport const MANUFACTURE_PRODUCT_CHANGE = 'MANUFACTURE_PRODUCT_CHANGE'\n\nexport const SHIPMENT_LIST = 'SHIPMENT_LIST'\nexport const SHIPMENT_ITEM = 'SHIPMENT_ITEM'\n\nexport const MARKET_TYPE_LIST = 'MARKET_TYPE_LIST'\nexport const MARKET_TYPE_ITEM = 'MARKET_TYPE_ITEM'\nexport const MARKET_TYPE_UPDATE = 'MARKET_TYPE_UPDATE'\nexport const MARKET_TYPE_CREATE = 'MARKET_TYPE_CREATE'\nexport const MARKET_TYPE_DELETE = 'MARKET_TYPE_DELETE'\n\nexport const PRICE_LIST = 'PRICE_LIST'\nexport const PRICE_UPDATE = 'PRICE_UPDATE'\nexport const PRICE_CREATE = 'PRICE_CREATE'\nexport const PRICE_ITEM = 'PRICE_ITEM'\nexport const PRICE_DELETE = 'PRICE_DELETE'\nexport const PRICE_LIST_CSV = 'PRICE_LIST_CSV'\nexport const PRICE_LIST_ITEM_LIST = 'PRICE_LIST_ITEM_LIST'\nexport const PRICE_LIST_ITEM_HISTORY = 'PRICE_LIST_ITEM_HISTORY'\nexport const PRICE_LIST_ITEM_EXPENSES = 'PRICE_LIST_ITEM_EXPENSES'\n\nexport const ZONE_LIST = 'ZONE_LIST'\nexport const ZONE_ITEM = 'ZONE_ITEM'\nexport const ZONE_UPDATE = 'ZONE_UPDATE'\nexport const ZONE_CREATE = 'ZONE_CREATE'\nexport const ZONE_DELETE = 'ZONE_DELETE'\nexport const ZONE_STAT = 'ZONE_STAT'\nexport const ZONE_BIND_AGENT = 'ZONE_BIND_AGENT'\n\nexport const TRACKING_LIST = 'TRACKING_LIST'\nexport const TRACKING_ITEM = 'TRACKING_ITEM'\nexport const LOCATION_LIST = 'LOCATION_LIST'\nexport const MARKETS_LOCATION = 'MARKETS_LOCATION'\n\nexport const REMAINDER_LIST = 'REMAINDER_LIST'\nexport const REMAINDER_ITEM = 'REMAINDER_ITEM'\nexport const REMAINDER_TRANSFER = 'REMAINDER_TRANSFER'\nexport const REMAINDER_DISCARD = 'REMAINDER_DISCARD'\n\nexport const STAT_AGENT_LIST = 'STAT_AGENT_LIST'\nexport const STAT_AGENT_ITEM = 'STAT_AGENT_ITEM'\nexport const STAT_AGENT_GET_DOCUMENT = 'STAT_AGENT_GET_DOCUMENT'\n\nexport const STAT_PRODUCT_LIST = 'STAT_PRODUCT_LIST'\nexport const STAT_PRODUCT_GET_DOCUMENT = 'STAT_PRODUCT_GET_DOCUMENT'\n\nexport const STAT_MARKET_LIST = 'STAT_MARKET_LIST'\nexport const STAT_MARKET_ITEM = 'STAT_MARKET_ITEM'\nexport const STAT_MARKET_GET_DOCUMENT = 'STAT_MARKET_GET_DOCUMENT'\nexport const STAT_MARKET_DATA = 'STAT_MARKET_DATA'\n\nexport const STAT_FINANCE_LIST = 'STAT_FINANCE_LIST'\nexport const STAT_FINANCE_DATA_IN = 'STAT_FINANCE_DATA_IN'\nexport const STAT_FINANCE_DATA_OUT = 'STAT_FINANCE_DATA_OUT'\n\nexport const STAT_INCOME_DATA = 'STAT_INCOME_DATA'\nexport const STAT_INCOME_LIST = 'STAT_INCOME_LIST'\n\nexport const STAT_OUTCOME_DATA = 'STAT_OUTCOME_DATA'\nexport const STAT_OUTCOME_LIST = 'STAT_OUTCOME_LIST'\nexport const STAT_OUTCOME_GET_DOCUMENT = 'STAT_OUTCOME_GET_DOCUMENT'\n\nexport const STAT_SALES_DATA = 'STAT_SALES_DATA'\n\nexport const STAT_DEBTORS_DATA = 'STAT_DEBTORS_DATA'\nexport const STAT_DEBTORS_LIST = 'STAT_DEBTORS_LIST'\nexport const STAT_DEBTORS_ITEM = 'STAT_DEBTORS_ITEM'\nexport const STAT_DEBTORS_GET_DOCUMENT = 'STAT_DEBTORS_GET_DOCUMENT'\n\nexport const STAT_OUTCOME_CATEGORY_LIST = 'STAT_OUTCOME_CATEGORY_LIST'\nexport const STAT_OUTCOME_CATEGORY_ITEM = 'STAT_OUTCOME_CATEGORY_ITEM'\nexport const STAT_OUTCOME_CATEGORY_GET_DOCUMENT = 'STAT_OUTCOME_CATEGORY_GET_DOCUMENT'\nexport const STAT_REMAINDER_ITEM = 'STAT_REMAINDER_ITEM'\nexport const STAT_REMAINDER_LIST = 'STAT_REMAINDER_LIST'\n\nexport const REMAINDER_UPDATE = 'REMAINDER_UPDATE'\nexport const REMAINDER_CREATE = 'REMAINDER_CREATE'\n\nexport const STOCK_RECEIVE_LIST = 'STOCK_RECEIVE_LIST'\nexport const STOCK_TRANSFER_LIST = 'STOCK_TRANSFER_LIST'\nexport const STOCK_TRANSFER_ITEM = 'STOCK_TRANSFER_ITEM'\nexport const STOCK_TRANSFER_ACCEPT = 'STOCK_TRANSFER_ACCEPT'\nexport const STOCK_HISTORY_LIST = 'STOCK_HISTORY_LIST'\nexport const STOCK_RECEIVE_ITEM = 'STOCK_RECEIVE_ITEM'\nexport const STOCK_RECEIVE_CREATE = 'STOCK_RECEIVE_CREATE'\nexport const STOCK_RECEIVE_TRANSFER_CHANGE_STATUS = 'STOCK_RECEIVE_TRANSFER_CHANGE_STATUS'\nexport const STOCK_BARCODE_LIST = 'STOCK_BARCODE_LIST'\nexport const STOCK_RECEIVE_ACCEPT_ORDER_RETURN = 'STOCK_RECEIVE_ACCEPT_ORDER_RETURN'\n\nexport const CLIENT_BALANCE_LIST = 'CLIENT_BALANCE_LIST'\nexport const CLIENT_BALANCE_ITEM = 'CLIENT_BALANCE_ITEM'\nexport const CLIENT_BALANCE_UPDATE = 'CLIENT_BALANCE_UPDATE'\nexport const CLIENT_BALANCE_CREATE = 'CLIENT_BALANCE_CREATE'\nexport const CLIENT_BALANCE_DELETE = 'CLIENT_BALANCE_DELETE'\n\nexport const POSITION_LIST = 'POSITION_LIST'\nexport const POSITION_ITEM = 'POSITION_ITEM'\nexport const POSITION_UPDATE = 'POSITION_UPDATE'\nexport const POSITION_COURSE_CREATE = 'POSITION_COURSE_CREATE'\nexport const POSITION_CREATE = 'POSITION_CREATE'\nexport const POSITION_DELETE = 'POSITION_DELETE'\nexport const POSITION_PRIMARY = 'POSITION_PRIMARY'\nexport const POSITION_PRIMARY_UPDATE = 'POSITION_PRIMARY_UPDATE'\n\nexport const ACTIVITY_ORDER_LIST = 'ACTIVITY_ORDER_LIST'\nexport const ACTIVITY_ORDER_ITEM = 'ACTIVITY_ORDER_ITEM'\nexport const ACTIVITY_VISIT_LIST = 'ACTIVITY_VISIT_LIST'\nexport const ACTIVITY_REPORT_LIST = 'ACTIVITY_REPORT_LIST'\nexport const ACTIVITY_REPORT_SHOW_IMAGE = 'ACTIVITY_REPORT_SHOW_IMAGE'\nexport const ACTIVITY_ORDER_RETURN_LIST = 'ACTIVITY_ORDER_RETURN_LIST'\nexport const ACTIVITY_PAYMENT_LIST = 'ACTIVITY_PAYMENT_LIST'\nexport const ACTIVITY_DELIVERY_LIST = 'ACTIVITY_DELIVERY_LIST'\n\n\n\n// WEBPACK FOOTER //\n// src/constants/actionTypes.js","const numberFormat = (amount, suffix) => {\n    const formatter = new Intl.NumberFormat('ru-RU')\n    const ZERO_NUM = 0\n    return ((amount) ? formatter.format(amount) : ZERO_NUM) + ' ' + (suffix || '')\n}\n\nexport default numberFormat\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/numberFormat.js","import _ from 'lodash'\n\nexport const orderingSnakeCase = (ordering) => {\n    return _\n        .chain(ordering)\n        .split(',')\n        .map((item) => {\n            const trans = _.chain(item).split('.').map(_.snakeCase).join('__')\n            return _.startsWith(item, '-') ? '-' + trans : trans\n        })\n        .join(',')\n        .value()\n}\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/serializer.js","import Container from './Container'\n\nexport default Container\n\n\n\n// WEBPACK FOOTER //\n// src/components/Container/index.js","import _ from 'lodash'\nimport {hashHistory} from 'react-router'\nimport sprintf from 'sprintf'\n\nconst filter = (data, pathname, query = {}, newKeys = {}) => {\n    const getKey = (key) => {\n        const newItemKey = _.get(newKeys, key)\n        if (newItemKey) {\n            return newItemKey\n        }\n        return key\n    }\n\n    const params = query\n    const first = 1\n    const defaultPageRange = 10\n    const currentPage = _.toInteger(_.get(params, getKey('page')) || first)\n    const pageRange = _.toInteger(_.get(params, getKey('pageSize')) || defaultPageRange)\n    const itemsCount = _.get(data, getKey('count'))\n\n    const pageCount = Math.ceil(itemsCount / pageRange)\n\n    const getParam = (paramName) => _.get(params, paramName)\n\n    const getParams = (newParams) => _.assign({}, params, newParams)\n\n    const getSelects = () => {\n        return _\n            .chain(getParam('select'))\n            .split(',')\n            .filter(item => item)\n            .map((item) => _.toInteger(item))\n            .value()\n    }\n\n    const paramsToQueryUrl = (paramsItems) => {\n        if (_.isEmpty(paramsItems)) {\n            return null\n        }\n\n        const url = _\n            .chain(paramsItems)\n            .keys()\n            .map((key) => {\n                return {\n                    key: key,\n                    value: paramsItems[key]\n                }\n            })\n            .filter((item) => !_.isEmpty(item.value) || _.isNumber(item.value))\n            .map((item) => {\n                return sprintf('%s=%s', item.key, encodeURIComponent(item.value))\n            })\n            .reduce((result, item) => {\n                return sprintf('%s&%s', result, item)\n            })\n            .value()\n\n        return url ? '?' + url : null\n    }\n\n    const createURL = (newParams) => {\n        const queryUrl = paramsToQueryUrl(_.assign({}, params, newParams))\n        return queryUrl ? pathname + queryUrl : pathname\n    }\n\n    const prevPage = () => {\n        const prevPageNumber = currentPage - first\n        if (currentPage <= first) {\n            return null\n        }\n\n        return createURL({[getKey('page')]: prevPageNumber})\n    }\n\n    const nextPage = () => {\n        const nextPageNumber = currentPage + first\n        if (pageCount < nextPageNumber) {\n            return null\n        }\n        return createURL({[getKey('page')]: nextPageNumber})\n    }\n\n    const getSortingType = (columnSortingName) => {\n        const currentOrdering = _.get(params, 'ordering')\n\n        const columnType = _\n            .chain(currentOrdering)\n            .split(',')\n            .filter((item) => !_.isEmpty(item))\n            .map((column) => ({column: _.trimStart(column, '-'), desc: _.startsWith(column, '-')}))\n            .find({column: columnSortingName})\n            .get('desc')\n            .value()\n\n        return _.isUndefined(columnType) ? null : columnType\n    }\n\n    const sortingURL = (columnSortingName) => {\n        const currentOrdering = _.get(params, 'ordering')\n        const columnList = _\n            .chain(currentOrdering)\n            .split(',')\n            .filter((item) => !_.isEmpty(item))\n            .map((column) => ({column: _.trimStart(column, '-'), desc: _.startsWith(column, '-')}))\n            .value()\n\n        const columnSortingType = _\n            .chain(columnList)\n            .find({column: columnSortingName})\n            .get('desc')\n            .value()\n\n        const columnSortingDesc = _.isUndefined(columnSortingType) ? false : (columnSortingType ? null : true)\n\n        const ordering = _\n            .chain(columnList)\n            .filter((item) => item.column !== columnSortingName)\n            .union([{column: columnSortingName, desc: columnSortingDesc}])\n            .filter((item) => !_.isNull(_.get(item, 'desc')))\n            .map((item) => {\n                return _.get(item, 'desc') ? '-' + _.get(item, 'column') : _.get(item, 'column')\n            })\n            .join(',')\n            .value()\n\n        return createURL({ordering})\n    }\n\n    const getCounts = () => itemsCount\n\n    const getPageRange = () => pageRange\n\n    const getCurrentPage = () => currentPage\n\n    const pageItemList = () => _.range(first, pageCount + first)\n\n    const hasPagination = () => pageCount > first\n\n    const filterRequest = () => {\n        return paramsToQueryUrl(_.assign({}, params, {\n            select: null,\n            openFilterDialog: null,\n            openCreateDialog: null,\n            openStatSalesDialog: null,\n            openCancelConfirmDialog: null,\n            openSendDialog: null,\n            openDefectDialog: null,\n            openAcceptMarketDialog: null,\n            openAcceptCashDetail: null,\n            openPriceSupplyDialog: null,\n            openMapDialog: null,\n            openCurrency: null,\n            openUser: null,\n            openAcceptTransactionDialog: null,\n            openUpdateMapDialog: null,\n            openAddPhoto: null,\n            openImagesDialog: null,\n            openTransferDialog: null,\n            openDeleteImageDialog: null,\n            openClientCreate: null,\n            openInfoDialog: null,\n            tab: null,\n            openConfirmDialog: null,\n            openType: null,\n            openCreateIncomeDialog: null,\n            openPriceSetFrom: null,\n            shipmentId: null,\n            openShowBigImg: null,\n            openIncomeDialog: null,\n            openTransactionsDialog: null,\n            openShortageDialog: null,\n            openOrderItemReturnDialog: null,\n            openSupplyExpenseCreateDialog: null,\n            openReturnDialog: null,\n            openSetCurrencyDialog: null,\n            openHistoryDialog: null,\n            openDeleteDialog: null,\n            openUpdateDialog: null,\n            openStatDebtorsDialog: null,\n            openAcceptCashDialog: null,\n            openCreateExpenseDialog: null,\n            detailId: null,\n            orderId: null\n        }))\n    }\n\n    const filterBy = (newParams) => {\n        hashHistory.push({\n            pathname,\n            query: {\n                ...params,\n                page: first,\n                ...newParams\n            }\n        })\n    }\n\n    return {\n        getParam,\n        getParams,\n        getCounts,\n        getPageRange,\n        getCurrentPage,\n        getSortingType,\n        getSelects,\n        sortingURL,\n        filterBy,\n        filterRequest,\n        createURL,\n        prevPage,\n        nextPage,\n        pageItemList,\n        hasPagination\n    }\n}\n\nexport default filter\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/filter.js","import Layout from './Layout'\n\nexport default Layout\n\n\n\n// WEBPACK FOOTER //\n// src/components/Layout/index.js","import ToolTip from './ToolTip'\n\nexport default ToolTip\n\n\n\n// WEBPACK FOOTER //\n// src/components/ToolTip/index.js","/* globals JSON */\nconst toBoolean = (str) => {\n    return (str === 'true')\n}\n\nexport default toBoolean\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/toBoolean.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {compose, withPropsOnChange, withReducer} from 'recompose'\nimport MUIAutoComplete from 'material-ui/AutoComplete'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport excludeObjKey from '../../../helpers/excludeObjKey'\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\n\nconst DELAY_FOR_TYPE_ATTACK = 300\n\nconst fetchList = ({state, dispatch, getOptions, getText, getValue}) => {\n    dispatch({loading: true})\n\n    getOptions(state.text)\n        .then((data) => {\n            return _.map(data, (item) => {\n                return {\n                    text: getText(item),\n                    value: getValue(item)\n                }\n            })\n        })\n        .then((data) => {\n            dispatch({dataSource: data, loading: false})\n        })\n}\n\nconst fetchItem = (props) => {\n    const {dispatch, getItem, getItemText} = props\n    const id = _.get(props, ['input', 'value', 'value'])\n\n    id && getItem(id)\n        .then(data => {\n            return getItemText(data)\n        })\n        .then(data => dispatch({text: data}))\n}\n\nconst errorStyle = {\n    textAlign: 'left',\n    bottom: '5px'\n}\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            position: 'relative',\n            width: '100%'\n        },\n        icon: {\n            position: 'absolute',\n            right: '0',\n            top: '20px'\n        }\n    }),\n\n    withReducer('state', 'dispatch', (state, action) => {\n        return {...state, ...action}\n    }, {dataSource: [], text: '', loading: false}),\n\n    withPropsOnChange((props, nextProps) => {\n        return _.get(props, ['state', 'text']) !== _.get(nextProps, ['state', 'text'])\n    }, (props) => _.debounce(fetchList, DELAY_FOR_TYPE_ATTACK)(props)),\n\n    withPropsOnChange((props, nextProps) => {\n        const value = _.get(props, ['input', 'value', 'value'])\n        const nextValue = _.get(nextProps, ['input', 'value', 'value'])\n        return nextValue && value !== nextValue\n    }, (props) => fetchItem(props))\n)\n\nconst SearchField = enhance((props) => {\n    const {\n        classes,\n        input,\n        label,\n        meta: {error},\n        state,\n        dispatch,\n        ...defaultProps\n    } = props\n\n    const autoCompleteProps = excludeObjKey(defaultProps, [\n        'sheet', 'getText', 'getValue', 'getOptions', 'getItem', 'getItemText'\n    ])\n    const inputAutoComplete = excludeObjKey(input, ['value', 'onChange'])\n\n    return (\n        <div className={classes.wrapper}>\n            <MUIAutoComplete\n                errorText={error}\n                searchText={state.text}\n                errorStyle={errorStyle}\n                floatingLabelText={label}\n                dataSource={state.dataSource}\n                dataSourceConfig={{text: 'text', value: 'value'}}\n                onUpdateInput={value => dispatch({text: value})}\n                onNewRequest={value => input.onChange(value)}\n                openOnFocus={true}\n                filter={() => true}\n                maxSearchResults={20}\n                maxHeight={200}\n                listStyle={{}}\n                className=\"autocomplete\"\n                {...inputAutoComplete}\n                {...autoCompleteProps}\n            />\n            {!state.loading && <div className={classes.icon}>\n                <KeyboardArrowDown style={{color: '#ccc', height: '20px', width: '20px'}}/>\n            </div>}\n            {state.loading && <div className={classes.icon}>\n                <CircularProgress size={20} thickness={2} />\n            </div>}\n        </div>\n    )\n})\n\nSearchField.defaultGetText = (text) => {\n    return (obj) => {\n        return _.get(obj, text)\n    }\n}\n\nSearchField.defaultGetValue = (value) => {\n    return (obj) => {\n        return _.get(obj, value)\n    }\n}\n\nSearchField.propTypes = {\n    getText: PropTypes.func.isRequired,\n    getValue: PropTypes.func.isRequired,\n    getOptions: PropTypes.func.isRequired,\n    getItemText: PropTypes.func.isRequired,\n    getItem: PropTypes.func.isRequired\n}\n\nexport default SearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Basic/SearchField.js","import _ from 'lodash'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\n\nconst getStorage = (local) => {\n    return local ? localStorage : sessionStorage\n}\n\nconst setConfigs = (configs) => {\n    const storage = getStorage(false)\n\n    _.forIn(configs, (value, key) => {\n        storage.setItem(key, value)\n    })\n}\n\nconst getConfig = (text) => {\n    if (getStorage(false).getItem(text)) {\n        return getStorage(false).getItem(text)\n    }\n    axios()\n        .get(API.CONFIG)\n        .then((response) => {\n            setConfigs(_.get(response, 'data'))\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return getStorage(false).getItem(text)\n}\n\nexport default getConfig\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/getConfig.js","import GridList from './GridList'\n\nexport default GridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/index.js","import SubMenu from './SubMenu'\n\nexport default SubMenu\n\n\n\n// WEBPACK FOOTER //\n// src/components/SubMenu/index.js","const MainStyles = {\n    test: {\n        padding: '10px'\n    },\n    dashedLink: {\n        borderBottom: '1px dashed'\n    },\n    lightBlueBg: {\n        background: '#f1f5f8',\n        color: '#333'\n    },\n    dottedList: {\n\n    },\n    // MODAL\n    body: {\n        overflowY: 'hidden !important',\n        fontSize: '13px !important',\n        position: 'relative',\n        padding: '0 !important',\n        overflowX: 'hidden',\n        minHeight: '317px !important'\n    },\n    popUp: {\n        color: '#333 !important',\n        overflowY: 'hidden !important',\n        fontSize: '13px !important',\n        position: 'relative',\n        padding: '0 !important',\n        overflowX: 'hidden',\n        height: '100%'\n    },\n    titleContent: {\n        background: '#fff',\n        color: '#333',\n        fontWeight: 'bold',\n        textTransform: 'uppercase',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        borderBottom: '1px solid #efefef',\n        padding: '20px 30px',\n        zIndex: '999',\n        '& button': {\n            right: '13px',\n            padding: '0 !important',\n            position: 'absolute !important'\n        }\n    },\n    inContent: {\n        display: 'flex',\n        maxHeight: '50vh',\n        minHeight: '184px',\n        overflow: 'auto',\n        padding: '0 30px',\n        color: '#333'\n    },\n    bodyContent: {\n        width: '100%'\n    },\n    form: {\n        position: 'relative'\n    },\n    field: {\n        width: '100%'\n    },\n    inputField: {\n        fontSize: '13px !important',\n        height: '45px !important',\n        marginTop: '7px',\n        '& div': {\n            fontSize: '13px !important'\n        },\n        '& label': {\n            top: '20px !important',\n            lineHeight: '5px !important'\n        },\n        '& input': {\n            marginTop: '0 !important'\n        }\n    },\n    bottomButton: {\n        bottom: '0',\n        left: '0',\n        right: '0',\n        padding: '10px',\n        zIndex: '999',\n        borderTop: '1px solid #efefef',\n        background: '#fff',\n        textAlign: 'right',\n        '& span': {\n            fontSize: '13px !important',\n            fontWeight: '600 !important',\n            color: '#129fdd',\n            verticalAlign: 'inherit !important'\n        }\n    },\n    inputFieldCustom: {\n        fontSize: '13px !important',\n        height: '45px !important',\n        marginTop: '7px',\n        '& div': {\n            fontSize: '13px !important'\n        },\n        '& label': {\n            top: '20px !important',\n            lineHeight: '5px !important'\n        },\n        '& input': {\n            marginTop: '0 !important'\n        }\n    },\n    inputDateCustom: {\n        fontSize: '13px !important',\n        height: '45px !important',\n        marginTop: '7px',\n        '& div': {\n            fontSize: '13px !important'\n        },\n        '& label': {\n            top: '20px !important',\n            lineHeight: '5px !important'\n        },\n        '& input': {\n            marginTop: '0 !important'\n        },\n        '& div:first-child': {\n            height: '45px !important'\n        }\n    },\n    actionButton: {\n        fontSize: '13px !important',\n        margin: '0 !important'\n    }\n    // GRID LIST\n\n}\n\nexport default MainStyles\n\n\n\n// WEBPACK FOOTER //\n// src/components/Styles/MainStyles.js","import * as actionTypes from '../constants/actionTypes'\n\nexport const openSnackbarAction = (payload) => {\n    return {\n        type: actionTypes.SNACKBAR_OPEN,\n        payload\n    }\n}\n\nexport const closeSnackbarAction = () => {\n    return {\n        type: actionTypes.SNACKBAR_CLOSE\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/snackbar.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionDelete = function ActionDelete(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z' })\n  );\n};\nActionDelete = (0, _pure2.default)(ActionDelete);\nActionDelete.displayName = 'ActionDelete';\nActionDelete.muiName = 'SvgIcon';\n\nexports.default = ActionDelete;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/delete.js\n// module id = 53\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ContentAdd = function ContentAdd(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z' })\n  );\n};\nContentAdd = (0, _pure2.default)(ContentAdd);\nContentAdd.displayName = 'ContentAdd';\nContentAdd.muiName = 'SvgIcon';\n\nexports.default = ContentAdd;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/content/add.js\n// module id = 54\n// module chunks = 0","import ConfirmDialog from './ConfirmDialog'\n\nexport default ConfirmDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/ConfirmDialog/index.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ImageEdit = function ImageEdit(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z' })\n  );\n};\nImageEdit = (0, _pure2.default)(ImageEdit);\nImageEdit.displayName = 'ImageEdit';\nImageEdit.muiName = 'SvgIcon';\n\nexports.default = ImageEdit;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/image/edit.js\n// module id = 63\n// module chunks = 0","import CloseIcon from './CloseIcon'\n\nexport default CloseIcon\n\n\n\n// WEBPACK FOOTER //\n// src/components/CloseIcon/index.js","/* eslint no-invalid-this: 0 */\n/* eslint no-undefined: 0 */\n\nimport _ from 'lodash'\nimport moment from 'moment'\nimport React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\nimport DatePickerDialog from 'material-ui/DatePicker/DatePickerDialog'\nimport MUITextField from 'material-ui/TextField'\nimport DateRange from 'material-ui/svg-icons/action/date-range'\n\nconst DELAY = 300\n\nclass DateToDateField extends React.Component {\n    datePicker = null\n\n    constructor (props) {\n        super(props)\n        this.state = {\n            starting: false\n        }\n    }\n\n    handleOnFocus = () => {\n        _.delay(() => this.datePicker.show(), DELAY)\n    }\n\n    handleOnAccept = (value) => {\n        const {input} = this.props\n        const fromDate = _.get(input, ['value', 'fromDate'])\n\n        if (!fromDate || !this.state.starting) {\n            input.onChange({fromDate: moment(value)})\n            this.setState({starting: true})\n            _.delay(() => this.datePicker.show(), DELAY)\n        } else {\n            input.onChange({\n                fromDate: _.get(input, ['value', 'fromDate']),\n                toDate: moment(value)\n            })\n            this.setState({starting: false})\n        }\n    }\n\n    textField = () => {\n        const {input, format} = this.props\n        const fromDate = _.get(input, ['value', 'fromDate'])\n        const toDate = _.get(input, ['value', 'toDate'])\n\n        if (fromDate && !toDate) {\n            return moment(fromDate).format(format)\n        }\n\n        if (fromDate && toDate) {\n            return moment(fromDate).format(format) + ' - ' + moment(toDate).format(format)\n        }\n\n        return ''\n    }\n\n    getMinDate = () => {\n        const {input} = this.props\n        const fromDate = _.get(input, ['value', 'fromDate'])\n        const toDate = _.get(input, ['value', 'toDate'])\n\n        if (fromDate && !toDate) {\n            return fromDate.toDate()\n        }\n\n        return undefined\n    }\n\n    render () {\n        const {label, classes, meta: {error}} = this.props\n\n        return (\n            <div className={classes.wrapper}>\n                <div style={{position: 'relative'}}>\n                    <DatePickerDialog\n                        ref={(element) => {\n                            this.datePicker = element\n                        }}\n                        minDate={this.getMinDate()}\n                        onAccept={this.handleOnAccept}\n                        firstDayOfWeek={0}\n                    />\n                    <div className={classes.icon}>\n                        <DateRange />\n                    </div>\n                    <MUITextField\n                        errorText={error}\n                        floatingLabelText={label}\n                        onFocus={this.handleOnFocus}\n                        value={this.textField()}\n                        className={classes.inputDateCustom}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nDateToDateField.defaultProps = {\n    format: 'DD.MM.YYYY'\n}\n\nDateToDateField.propTypes = {\n    format: PropTypes.string\n}\n\nexport default injectSheet({\n    icon: {\n        position: 'absolute',\n        right: '0',\n        top: '19px',\n        '& svg': {\n            color: '#ccc !important',\n            height: '20px !important',\n            width: '20px !important'\n        }\n    },\n    inputDateCustom: {\n        fontSize: '13px !important',\n        height: '45px !important',\n        marginTop: '7px',\n        width: '100% !important',\n        '& div': {\n            fontSize: '13px !important'\n        },\n        '& label': {\n            top: '20px !important',\n            lineHeight: '5px !important'\n        },\n        '& input': {\n            marginTop: '0 !important'\n        },\n        '& div:first-child': {\n            height: '45px !important'\n        },\n        '& div:first-child div:first-child': {\n            transform: 'translate(0px, 0px) !important'\n        }\n    }\n})(DateToDateField)\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Basic/DateToDateField.js","module.exports = __webpack_public_path__ + \"cff0e167f036f041ca4bcbdf1149e52c.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Images/not-found.png\n// module id = 69\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar EditorBorderColor = function EditorBorderColor(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M17.75 7L14 3.25l-10 10V17h3.75l10-10zm2.96-2.96c.39-.39.39-1.02 0-1.41L18.37.29c-.39-.39-1.02-.39-1.41 0L15 2.25 18.75 6l1.96-1.96z' }),\n    _react2.default.createElement('path', { fillOpacity: '.36', d: 'M0 20h24v4H0z' })\n  );\n};\nEditorBorderColor = (0, _pure2.default)(EditorBorderColor);\nEditorBorderColor.displayName = 'EditorBorderColor';\nEditorBorderColor.muiName = 'SvgIcon';\n\nexports.default = EditorBorderColor;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/editor/border-color.js\n// module id = 72\n// module chunks = 0","import GridListNavPagination from './GridListNavPagination'\n\nexport default GridListNavPagination\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridListNavPagination/index.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionSearch = function ActionSearch(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z' })\n  );\n};\nActionSearch = (0, _pure2.default)(ActionSearch);\nActionSearch.displayName = 'ActionSearch';\nActionSearch.muiName = 'SvgIcon';\n\nexports.default = ActionSearch;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/search.js\n// module id = 82\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar EditorModeEdit = function EditorModeEdit(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z' })\n  );\n};\nEditorModeEdit = (0, _pure2.default)(EditorModeEdit);\nEditorModeEdit.displayName = 'EditorModeEdit';\nEditorModeEdit.muiName = 'SvgIcon';\n\nexports.default = EditorModeEdit;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/editor/mode-edit.js\n// module id = 83\n// module chunks = 0","import React from 'react'\nimport MUITextField from 'material-ui/TextField'\n\nconst errorStyle = {\n    textAlign: 'left',\n    bottom: '5px'\n}\n\nconst TextField = ({input, label, meta: {error}, ...defaultProps}) => {\n    return (\n        <MUITextField\n            errorText={error}\n            errorStyle={errorStyle}\n            floatingLabelText={label}\n            {...input}\n            {...defaultProps}\n        />\n    )\n}\n\nexport default TextField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Basic/TextField.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar NavigationMoreVert = function NavigationMoreVert(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z' })\n  );\n};\nNavigationMoreVert = (0, _pure2.default)(NavigationMoreVert);\nNavigationMoreVert.displayName = 'NavigationMoreVert';\nNavigationMoreVert.muiName = 'SvgIcon';\n\nexports.default = NavigationMoreVert;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/navigation/more-vert.js\n// module id = 88\n// module chunks = 0","import moment from 'moment'\nconst dateFormat = (date, defaultText) => {\n    return (date) ? moment(date).locale('ru').format('DD MMM YYYY') : defaultText\n}\n\nexport default dateFormat\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/dateFormat.js","import React from 'react'\nimport _ from 'lodash'\nimport * as ROUTES from '../../constants/routes'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport {Link} from 'react-router'\nimport PropTypes from 'prop-types'\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            padding: '20px 30px',\n            '& .row': {\n                margin: '0rem !important',\n                '& div': {\n                    lineHeight: '55px'\n                }\n            },\n            '& ul': {\n                fontWeight: 'bold',\n                marginBottom: '20px'\n            },\n            '& li': {\n                paddingLeft: '20px',\n                paddingTop: '10px',\n                fontWeight: '400',\n                '&:last-child': {\n                    paddingBottom: '10px'\n                }\n            }\n        },\n        active: {\n            color: '#12aaeb'\n        },\n        simple: {\n            color: '#333'\n        }\n    }),\n)\n\nconst StatSideMenu = enhance((props) => {\n    const {classes, currentUrl} = props\n    const statMenus = [\n        {\n            section: 'Продажи',\n            url: ROUTES.STATISTICS_SALES_URL,\n            childs: [\n                {name: 'Общее', url: ROUTES.STATISTICS_SALES_URL},\n                {name: 'Агенты', url: ROUTES.STATISTICS_AGENT_URL},\n                {name: 'Товары', url: ROUTES.STATISTICS_PRODUCT_URL},\n                {name: 'Магазины', url: ROUTES.STATISTICS_MARKET_URL}\n            ]\n        },\n        {\n            section: 'Финансы',\n            url: ROUTES.STATISTICS_FINANCE_URL,\n            childs: [\n                {name: 'Общее', url: ROUTES.STATISTICS_FINANCE_URL},\n                {name: 'Доход', url: ROUTES.STATISTICS_INCOME_URL},\n                {name: 'Расход', url: ROUTES.STATISTICS_OUTCOME_URL},\n                {name: 'Задолжники', url: ROUTES.STATISTICS_DEBTORS_URL},\n                {name: 'Расходы по категориям', url: ROUTES.STATISTICS_OUTCOME_CATEGORY_URL},\n                {name: 'Кассы', url: ROUTES.STATISTICS_CASHBOX_URL}\n            ]\n        },\n        {\n            section: 'Склад',\n            url: ROUTES.STATISTICS_STOCK_URL,\n            childs: [\n                {name: 'Остаток', url: ROUTES.STATISTICS_REMAINDER_URL}\n            ]\n        }\n    ]\n\n    return (\n        <div className={classes.wrapper}>\n            {_.map(statMenus, (item, index) => {\n                return (\n                    <ul key={index}>\n                        {item.section}\n                        {_.map(item.childs, (object, i) => {\n                            return (\n                                <li key={i}>\n                                     <Link to={object.url}>\n                                         <span className={object.url === currentUrl ? classes.active : classes.simple}>\n                                             {object.name}\n                                         </span>\n                                     </Link>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                )\n            })}\n        </div>\n    )\n})\n\nStatSideMenu.propTypes = {\n    currentUrl: PropTypes.string.isRequired\n}\n\nexport default StatSideMenu\n\n\n\n// WEBPACK FOOTER //\n// src/components/Statistics/StatSideMenu.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar AvEqualizer = function AvEqualizer(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M10 20h4V4h-4v16zm-6 0h4v-8H4v8zM16 9v11h4V9h-4z' })\n  );\n};\nAvEqualizer = (0, _pure2.default)(AvEqualizer);\nAvEqualizer.displayName = 'AvEqualizer';\nAvEqualizer.muiName = 'SvgIcon';\n\nexports.default = AvEqualizer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/av/equalizer.js\n// module id = 104\n// module chunks = 0","import StatSideMenu from './StatSideMenu'\nimport StatSalesGridList from './StatSalesGridList'\nimport StatAgentGridList from './StatAgentGridList'\nimport StatProductGridList from './StatProductGridList'\nimport StatMarketGridList from './StatMarketGridList'\nimport StatFinanceGridList from './StatFinanceGridList'\nimport StatIncomeGridList from './StatIncomeGridList'\nimport StatOutcomeGridList from './StatOutcomeGridList'\nimport StatDebtorsGridList from './StatDebtorsGridList'\nimport StatOutcomeCategoryGridList from './StatOutcomeCategoryGridList'\nimport StatRemainderGridList from './StatRemainderGridLIst'\nimport StatCashboxGridList from './StatCashboxGridList'\n\nconst STAT_AGENT_DIALOG_OPEN = 'openStatAgentDialog'\nconst STAT_REMAINDER_DIALOG_OPEN = 'openStatAgentDialog'\nconst STAT_SALES_DIALOG_OPEN = 'openStatSalesDialog'\nconst STAT_MARKET_DIALOG_OPEN = 'openStatMarketDialog'\nconst STAT_FINANCE_DIALOG_OPEN = 'openStatFinanceDialog'\nconst STAT_INCOME_DIALOG_OPEN = 'openStatIncomeDialog'\nconst STAT_DEBTORS_DIALOG_OPEN = 'openStatDebtorsDialog'\nconst STAT_OUTCOME_DIALOG_OPEN = 'openStatOutcomeDialog'\n\nexport {\n    StatSideMenu,\n    StatSalesGridList,\n    StatAgentGridList,\n    StatProductGridList,\n    StatMarketGridList,\n    StatFinanceGridList,\n    StatIncomeGridList,\n    StatOutcomeGridList,\n    StatDebtorsGridList,\n    StatOutcomeCategoryGridList,\n    StatRemainderGridList,\n    StatCashboxGridList,\n    STAT_AGENT_DIALOG_OPEN,\n    STAT_MARKET_DIALOG_OPEN,\n    STAT_FINANCE_DIALOG_OPEN,\n    STAT_INCOME_DIALOG_OPEN,\n    STAT_DEBTORS_DIALOG_OPEN,\n    STAT_OUTCOME_DIALOG_OPEN,\n    STAT_SALES_DIALOG_OPEN,\n    STAT_REMAINDER_DIALOG_OPEN\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Statistics/index.js","module.exports = __webpack_public_path__ + \"601310d230b1f1e491b8ef41fc42036a.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Images/dot.png\n// module id = 108\n// module chunks = 0","module.exports = __webpack_public_path__ + \"43629f39ed09a4077104cf3a8c233fee.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Images/person.png\n// module id = 129\n// module chunks = 0","import DeleteIcon from './DeleteIcon'\n\nexport default DeleteIcon\n\n\n\n// WEBPACK FOOTER //\n// src/components/DeleteIcon/index.js","import sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\nimport axios from '../../../helpers/axios'\nimport * as PATH from '../../../constants/api'\nimport toCamelCase from '../../../helpers/toCamelCase'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.PRODUCT_TYPE_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst getItem = (id) => {\n    return axios().get(sprintf(PATH.PRODUCT_TYPE_ITEM, id))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\nconst ProductTypeSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default ProductTypeSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Product/ProductTypeSearchField.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/orderSerializer'\nimport * as returnSerializers from '../serializers/orderReturnSerializer'\n\nexport const orderCreateAction = (formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n\n    const payload = axios()\n        .post(API.ORDER_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.ORDER_CREATE,\n        payload\n    }\n}\n\nexport const orderReturnCancelAction = (id) => {\n    const payload = axios()\n        .post(sprintf(API.ORDER_RETURN_CANCEL, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.ORDER_RETURN_CANCEL,\n        payload\n    }\n}\n\nexport const orderReturnAction = (formValues, detail) => {\n    const requestData = returnSerializers.createSerializer(formValues, detail)\n    const payload = axios()\n        .post(API.ORDER_RETURN, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.ORDER_RETURN,\n        payload\n    }\n}\n\nexport const orderReturnListAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.ORDER_RETURN_LIST, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.ORDER_RETURN_LIST,\n        payload\n    }\n}\n\nexport const orderDeleteAction = (id) => {\n    const payload = axios()\n        .post(sprintf(API.ORDER_CANCEL, id), {})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.ORDER_DELETE,\n        payload\n    }\n}\n\nexport const orderUpdateAction = (id, formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .put(sprintf(API.ORDER_ITEM, id), requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.ORDER_UPDATE,\n        payload\n    }\n}\n\nexport const orderListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(API.ORDER_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.ORDER_LIST,\n        payload\n    }\n}\n\nexport const orderListPintFetchAction = (filter, id) => {\n    const params = serializers.listFilterSerializer(filter.getParams(), id)\n    const payload = axios()\n        .get(API.ORDER_LIST_PRINT, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.ORDER_LIST_PRINT,\n        payload\n    }\n}\n\nexport const orderTransactionFetchAction = (orderId) => {\n    let params = ''\n\n    if (orderId === 'trans') {\n        params = {\n            transaction: 0\n        }\n    } else {\n        params = {\n            'order': orderId\n        }\n    }\n\n    const payload = axios()\n        .get(sprintf(API.ORDER_PAYMENTS, orderId), {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.ORDER_PAYMENTS,\n        payload\n    }\n}\n\nexport const orderItemReturnFetchAction = (orderId) => {\n    const payload = axios()\n        .get(API.ORDER_RETURN, {params: {'order': orderId}})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.ORDER_RETURN,\n        payload\n    }\n}\n\nexport const orderItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.ORDER_ITEM, id), {'params': {'view': true}})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.ORDER_ITEM,\n        payload\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/actions/order.js","import LinearProgress from './LinearProgress'\n\nexport default LinearProgress\n\n\n\n// WEBPACK FOOTER //\n// src/components/LinearProgress/index.js","const normalizeNumber = value => {\n    if (!value) {\n        return value\n    }\n\n    const onlyNums = value.replace(/[^\\d]/g, '')\n    return onlyNums.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')\n}\n\nexport default normalizeNumber\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/normalizers/normalizeNumber.js","import _ from 'lodash'\nconst ZERO = 0\nconst numberWithoutSpaces = (amount) => {\n    if (amount) {\n        return _.toNumber(amount.replace(/[^\\d]/g, ''))\n    }\n    return ZERO\n}\n\nexport default numberWithoutSpaces\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/numberWithoutSpaces.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionList = function ActionList(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm4 4h14v-2H7v2zm0 4h14v-2H7v2zM7 7v2h14V7H7z' })\n  );\n};\nActionList = (0, _pure2.default)(ActionList);\nActionList.displayName = 'ActionList';\nActionList.muiName = 'SvgIcon';\n\nexports.default = ActionList;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/list.js\n// module id = 176\n// module chunks = 0","import {TOKEN_KEY, USER_GROUPS} from '../constants/storage'\nimport _ from 'lodash'\n\nexport const getStorage = (local) => {\n    return local ? localStorage : sessionStorage\n}\n\nexport const getToken = () => {\n    return localStorage.getItem(TOKEN_KEY) || sessionStorage.getItem(TOKEN_KEY)\n}\n\nexport const setToken = (token, local = false) => {\n    const storage = getStorage(local)\n\n    storage.setItem(TOKEN_KEY, token)\n}\n\nexport const setUser = (userData, local = false) => {\n    const storage = getStorage(local)\n    const groups = _.map(_.get(userData, 'groups'), (item) => {\n        return _.get(item, 'id')\n    })\n    storage.setItem(USER_GROUPS, groups)\n}\n\nexport const getGroups = () => {\n    return _.split(localStorage.getItem(USER_GROUPS) || sessionStorage.getItem(USER_GROUPS), ',')\n}\n\nexport const removeToken = () => {\n    localStorage.removeItem(TOKEN_KEY)\n    sessionStorage.removeItem(TOKEN_KEY)\n}\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/storage.js","module.exports = __webpack_public_path__ + \"668c8e03dd163ffcc3155b258f7d01dd.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Images/groceries.svg\n// module id = 192\n// module chunks = 0","import * as actionTypes from '../constants/actionTypes'\n\nexport const openErrorAction = (payload) => {\n    return {\n        type: actionTypes.ERROR_OPEN,\n        payload\n    }\n}\n\nexport const closeErrorAction = () => {\n    return {\n        type: actionTypes.ERROR_CLOSE\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/error.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\nimport axios from '../../../helpers/axios'\nimport * as PATH from '../../../constants/api'\nimport toCamelCase from '../../../helpers/toCamelCase'\nimport * as actionTypes from '../../../constants/actionTypes'\nimport {connect} from 'react-redux'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.CLIENT_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst setItemAction = (data, loading) => {\n    return {\n        type: actionTypes.CLIENT_CONTACTS,\n        data: data,\n        loading: loading\n    }\n}\n\nconst getItem = (id, dispatch) => {\n    dispatch(setItemAction(null, true))\n\n    return axios().get(sprintf(PATH.CLIENT_ITEM, id))\n        .then(({data}) => {\n            dispatch(setItemAction(_.get(data, 'contacts'), false))\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst ClientSearchField = connect()((props) => {\n    const {dispatch} = props\n    const test = (id) => {\n        return getItem(id, dispatch)\n    }\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={test}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n})\n\nexport default ClientSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Client/ClientSearchField.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose, withHandlers} from 'recompose'\nimport {reduxForm, Field} from 'redux-form'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {Link} from 'react-router'\nimport Paper from 'material-ui/Paper'\nimport IconButton from 'material-ui/IconButton'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\nimport {\n    DateToDateField,\n    InOutTypeSearchFiled,\n    StockSearchField\n} from '../ReduxForm'\nimport CloseIcon from '../CloseIcon'\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\n\nexport const TAB_RECEIVE_FILTER_KEY = {\n    TYPE: 'type',\n    FROM_DATE: 'fromDate',\n    TO_DATE: 'toDate',\n    STOCK: 'stock'\n}\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            position: 'absolute',\n            minWidth: '300px',\n            background: '#fff',\n            zIndex: 99,\n            top: 0,\n            left: 0,\n            borderRadius: 0,\n            padding: '10px 20px 10px 20px'\n        },\n        afterFilter: {\n            alignItems: 'center',\n            display: 'flex',\n            backgroundColor: '#efefef',\n            position: 'relative',\n            padding: '16px 30px',\n            marginLeft: '-30px',\n            '& > div:nth-child(2)': {\n                position: 'absolute',\n                right: '0'\n            },\n            '& > div:nth-child(1)': {\n                color: '#666666'\n            },\n            '& button': {\n                borderLeft: '1px solid white !important'\n            }\n        },\n        icon: {\n            color: '#8f8f8f !important'\n        },\n        arrow: {\n            color: '#12aaeb',\n            paddingRight: '14px',\n            position: 'relative',\n            '& svg': {\n                position: 'absolute',\n                width: '13px !important',\n                height: '20px !important'\n            }\n        },\n        header: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            '& button': {\n                marginRight: '-12px !important'\n            }\n        },\n        title: {\n            fontSize: '15px',\n            color: '#5d6474'\n        },\n        submit: {\n            color: '#fff !important'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'TabReceiveFilterForm',\n        enableReinitialize: true\n    }),\n    withHandlers({\n        getCount: props => () => {\n            const {filter} = props\n            return _(TAB_RECEIVE_FILTER_KEY)\n                .values()\n                .filter(item => item !== TAB_RECEIVE_FILTER_KEY.FROM_DATE)\n                .filter(item => filter.getParam(item))\n                .value()\n                .length\n        }\n    })\n)\n\nconst TabReceiveFilterForm = enhance((props) => {\n    const {classes, filterDialog, getCount, handleSubmit} = props\n    const filterCounts = getCount()\n\n    if (!filterDialog.openFilterDialog) {\n        if (filterCounts) {\n            return (\n                <div className={classes.afterFilter}>\n                    <div>Фильтр: {filterCounts} элемента</div>\n                    <div>\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\n                            <BorderColorIcon color=\"#8f8f8f\" />\n                        </IconButton>\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\n                            <CloseIcon className={classes.icon}/>\n                        </IconButton>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <Link\n                    className={classes.arrow}\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\n                </Link>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <Paper className={classes.wrapper} zDepth={2}>\n                <div className={classes.header}>\n                    <span className={classes.title}>Фильтр</span>\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\n                        <CloseIcon className={classes.icon} />\n                    </IconButton>\n                </div>\n                <form onSubmit={handleSubmit(filterDialog.handleSubmitTabReceiveFilterDialog)}>\n                    <div>\n                        <Field\n                            className={classes.inputFieldCustom}\n                            name=\"stock\"\n                            component={StockSearchField}\n                            label=\"Склад\"\n                            fullWidth={true}/>\n                    </div>\n                    <div>\n                        <Field\n                            className={classes.inputFieldCustom}\n                            name=\"type\"\n                            component={InOutTypeSearchFiled}\n                            label=\"Тип\"\n                            fullWidth={true}/>\n                    </div>\n                    <div>\n                        <Field\n                            className={classes.inputFieldCustom}\n                            name=\"date\"\n                            component={DateToDateField}\n                            label=\"Дата приемки\"\n                            fullWidth={true}/>\n                    </div>\n\n                    <RaisedButton\n                        type=\"submit\"\n                        primary={true}\n                        buttonStyle={{color: '#fff'}}\n                        label=\"Применить\"\n                        style={{marginTop: '15px'}}>\n                    </RaisedButton>\n                </form>\n            </Paper>\n        </div>\n    )\n})\n\nTabReceiveFilterForm.propTypes = {\n    filter: PropTypes.object.isRequired,\n    filterDialog: PropTypes.shape({\n        filterLoading: PropTypes.bool.isRequired,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    })\n}\n\nexport default TabReceiveFilterForm\n\n\n\n// WEBPACK FOOTER //\n// src/components/StockReceive/TabReceiveFilterForm.js","import _ from 'lodash'\n\nexport const GOOGLE_API_HOST = 'maps.googleapis.com'\nexport const GOOGLE_API_VERSION = '3.exp'\nexport const GOOGLE_USE_LIBRARY = ['geometry', 'drawing', 'places']\nexport const GOOGLE_API_KEY = 'AIzaSyDnUkBg_uV1aa4e7pyEvv3bVxN3RfwNQEo'\nexport const GOOGLE_API_URL = `https://${GOOGLE_API_HOST}/maps/api/js?v=${GOOGLE_API_VERSION}&libraries=${_.join(GOOGLE_USE_LIBRARY, ',')}&key=${GOOGLE_API_KEY}`\nexport const DEFAULT_LOCATION = {\n    lat: 41.31115127095392,\n    lng: 69.2797140777111\n}\n\n\n\n// WEBPACK FOOTER //\n// src/constants/googleMaps.js","import axios from 'axios'\nimport {API_URL} from '../constants/api'\nimport * as storageHelper from '../helpers/storage'\n\nconst getDocument = (url, params) => {\n    const TOKEN = storageHelper.getToken()\n    axios.defaults.baseURL = API_URL\n    if (!TOKEN) {\n        return\n    }\n    let str = ''\n    for (let key in params) {\n        if (params[key]) {\n            str += '&' + key + '=' + encodeURIComponent(params[key])\n        }\n    }\n    window.location = API_URL + url + '?token=' + TOKEN + str\n}\n\nexport default getDocument\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/getDocument.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionPrint = function ActionPrint(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z' })\n  );\n};\nActionPrint = (0, _pure2.default)(ActionPrint);\nActionPrint.displayName = 'ActionPrint';\nActionPrint.muiName = 'SvgIcon';\n\nexports.default = ActionPrint;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/print.js\n// module id = 249\n// module chunks = 0","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/clientSerializer'\n\nexport const clientCreateAction = (formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .post(API.CLIENT_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.CLIENT_CREATE,\n        payload\n    }\n}\n\nexport const clientDeleteAction = (id) => {\n    const payload = axios()\n        .delete(sprintf(API.CLIENT_DELETE, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.CLIENT_DELETE,\n        payload\n    }\n}\n\nexport const clientUpdateAction = (id, formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .put(sprintf(API.CLIENT_ITEM, id), requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.CLIENT_UPDATE,\n        payload\n    }\n}\n\nexport const clientListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(API.CLIENT_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.CLIENT_LIST,\n        payload\n    }\n}\n\nexport const clientItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.CLIENT_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.CLIENT_ITEM,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/client.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Field, FieldArray, reduxForm, SubmissionError} from 'redux-form'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {TextField} from '../ReduxForm'\nimport ClientContactsListField from '../ReduxForm/Client/ClientContactsListField'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport MainStyles from '../Styles/MainStyles'\n\nexport const CLIENT_CREATE_DIALOG_OPEN = 'openCreateDialog'\nexport const CLIENT_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\n\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        contacts: {\n            background: '#f1f5f8',\n            color: '#333',\n            margin: '12px -30px 0',\n            padding: '20px 30px'\n        }\n    })),\n    reduxForm({\n        form: 'ClientCreateForm',\n        enableReinitialize: true\n    })\n)\n\nconst ClientCreateDialog = enhance((props) => {\n    const {open, loading, handleSubmit, onClose, classes, isUpdate} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\n            bodyClassName={classes.popUp}>\n\n            <div className={classes.titleContent}>\n                <span>{isUpdate ? 'Изменение клиента' : 'Добавление клиента'}</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} className={classes.form}>\n                    <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4}/>\n                    </div>\n                    <div className={classes.inContent} style={{minHeight: '300px'}}>\n                        <div className={classes.field} style={{padding: '10px 0 0'}}>\n                            <Field\n                                name=\"name\"\n                                component={TextField}\n                                className={classes.inputFieldCustom}\n                                label=\"Организация\"\n                                fullWidth={true}/>\n                            <Field\n                                name=\"address\"\n                                component={TextField}\n                                className={classes.inputFieldCustom}\n                                label=\"Местположение\"\n                                fullWidth={true}/>\n\n                            <div className={classes.contacts}>\n                                Контактные данные\n                                <FieldArray\n                                    name=\"contacts\"\n                                    component={ClientContactsListField}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\n\nClientCreateDialog.propTypes = {\n    isUpdate: PropTypes.bool,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\n\nClientCreateDialog.defaultProps = {\n    isUpdate: false\n}\n\nexport default ClientCreateDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Client/ClientCreateDialog.js","import DeleteDialog, {DELETE_DIALOG_OPEN} from './DeleteDialog'\n\nexport {DELETE_DIALOG_OPEN}\nexport default DeleteDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/DeleteDialog/index.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose, withHandlers} from 'recompose'\nimport {reduxForm, Field} from 'redux-form'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {Link} from 'react-router'\nimport Paper from 'material-ui/Paper'\nimport IconButton from 'material-ui/IconButton'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\nimport {ShiftSearchField} from '../ReduxForm'\nimport CloseIcon from '../CloseIcon'\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\n\nexport const PERSON_FILTER_OPEN = 'openPersonFilterDialog'\n\nexport const PERSON_FILTER_KEY = {\n    SHIFT: 'shift'\n}\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            position: 'absolute',\n            minWidth: '300px',\n            background: '#fff',\n            zIndex: 99,\n            top: 0,\n            left: 0,\n            borderRadius: 0,\n            padding: '10px 20px 10px 20px'\n        },\n        afterFilter: {\n            alignItems: 'center',\n            display: 'flex',\n            backgroundColor: '#efefef',\n            position: 'relative',\n            padding: '16px 30px',\n            marginLeft: '-30px',\n            '& > div:nth-child(2)': {\n                position: 'absolute',\n                right: '0'\n            },\n            '& > div:nth-child(1)': {\n                color: '#666666'\n            },\n            '& button': {\n                borderLeft: '1px solid white !important'\n            }\n        },\n        icon: {\n            color: '#8f8f8f !important'\n        },\n        arrow: {\n            color: '#12aaeb',\n            paddingRight: '14px',\n            position: 'relative',\n            '& svg': {\n                position: 'absolute',\n                width: '13px !important',\n                height: '20px !important'\n            }\n        },\n        header: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            '& button': {\n                marginRight: '-12px !important'\n            }\n        },\n        title: {\n            fontSize: '15px',\n            color: '#5d6474'\n        },\n        submit: {\n            color: '#fff !important'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'PersonFilterForm',\n        enableReinitialize: true\n    }),\n    withHandlers({\n        getCount: props => () => {\n            const {filter} = props\n            return _(PERSON_FILTER_KEY)\n                .values()\n                .filter(item => item !== PERSON_FILTER_KEY.FROM_DATE)\n                .filter(item => filter.getParam(item))\n                .value()\n                .length\n        }\n    })\n)\n\nconst UsersFilterForm = enhance((props) => {\n    const {classes, filterDialog, getCount} = props\n    const filterCounts = getCount()\n\n    if (!filterDialog.openFilterDialog) {\n        if (filterCounts) {\n            return (\n                <div className={classes.afterFilter}>\n                    <div>Фильтр: {filterCounts} элемента</div>\n                    <div>\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\n                            <BorderColorIcon color=\"#8f8f8f\" />\n                        </IconButton>\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\n                            <CloseIcon className={classes.icon}/>\n                        </IconButton>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <Link\n                    className={classes.arrow}\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\n                </Link>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <Paper className={classes.wrapper} zDepth={2}>\n                <div className={classes.header}>\n                    <span className={classes.title}>Фильтр</span>\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\n                        <CloseIcon className={classes.icon} />\n                    </IconButton>\n                </div>\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\n                    <div>\n                        <Field className={classes.inputFieldCustom} name=\"shift\" component={ShiftSearchField} label=\"Смена\" fullWidth={true}/>\n                    </div>\n\n                    <RaisedButton\n                        type=\"submit\"\n                        primary={true}\n                        buttonStyle={{color: '#fff'}}\n                        label=\"Применить\"\n                        style={{marginTop: '15px'}}>\n                    </RaisedButton>\n                </form>\n            </Paper>\n        </div>\n    )\n})\n\nUsersFilterForm.propTypes = {\n    filter: PropTypes.object.isRequired,\n    filterDialog: PropTypes.shape({\n        filterLoading: PropTypes.bool.isRequired,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    })\n}\n\nexport default UsersFilterForm\n\n\n\n// WEBPACK FOOTER //\n// src/components/Manufacture/PersonFilterForm.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose, withHandlers} from 'recompose'\nimport {reduxForm, Field} from 'redux-form'\nimport {connect} from 'react-redux'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {Link} from 'react-router'\nimport Paper from 'material-ui/Paper'\nimport IconButton from 'material-ui/IconButton'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\nimport {\n    BrandSearchField,\n    MeasurementSearchField,\n    ProductTypeChildSearchField,\n    ProductTypeParentSearchField\n} from '../ReduxForm'\nimport CloseIcon from '../CloseIcon'\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\n\nexport const PRODUCT_FILTER_OPEN = 'openFilterDialog'\n\nexport const PRODUCT_FILTER_KEY = {\n    BRAND: 'brand',\n    TYPE_PARENT: 'typeParent',\n    TYPE_CHILD: 'typeChild',\n    MEASUREMENT: 'measurement'\n}\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            position: 'absolute',\n            minWidth: '300px',\n            background: '#fff',\n            zIndex: 99,\n            top: 0,\n            left: 0,\n            borderRadius: 0,\n            padding: '10px 20px 10px 20px'\n        },\n        afterFilter: {\n            alignItems: 'center',\n            display: 'flex',\n            backgroundColor: '#efefef',\n            position: 'relative',\n            padding: '16px 30px',\n            marginLeft: '-30px',\n            '& > div:nth-child(2)': {\n                position: 'absolute',\n                right: '0'\n            },\n            '& > div:nth-child(1)': {\n                color: '#666666'\n            },\n            '& button': {\n                borderLeft: '1px solid white !important'\n            }\n        },\n        icon: {\n            color: '#8f8f8f !important'\n        },\n        arrow: {\n            color: '#12aaeb',\n            paddingRight: '14px',\n            position: 'relative',\n            '& svg': {\n                position: 'absolute',\n                width: '13px !important',\n                height: '20px !important'\n            }\n        },\n        header: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            '& button': {\n                marginRight: '-12px !important'\n            }\n        },\n        title: {\n            fontSize: '15px',\n            color: '#5d6474'\n        },\n        submit: {\n            color: '#fff !important'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'ProductFilterForm',\n        enableReinitialize: true\n    }),\n    connect((state) => {\n        const typeParent = _.get(state, ['form', 'ProductFilterForm', 'values', 'typeParent', 'value'])\n        return {\n            typeParent\n        }\n    }),\n    withHandlers({\n        getCount: props => () => {\n            const {filter} = props\n            return _(PRODUCT_FILTER_KEY)\n                .values()\n                .filter(item => item !== PRODUCT_FILTER_KEY.FROM_DATE)\n                .filter(item => filter.getParam(item))\n                .value()\n                .length\n        }\n    })\n)\n\nconst ProductFilterForm = enhance((props) => {\n    const {classes, filterDialog, getCount, typeParent, handleSubmit} = props\n    const filterCounts = getCount()\n    if (!filterDialog.openFilterDialog) {\n        if (filterCounts) {\n            return (\n                <div className={classes.afterFilter}>\n                    <div>Фильтр: {filterCounts} элемента</div>\n                    <div>\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\n                            <BorderColorIcon color=\"#8f8f8f\" />\n                        </IconButton>\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\n                            <CloseIcon className={classes.icon}/>\n                        </IconButton>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <Link\n                    className={classes.arrow}\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\n                </Link>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <Paper className={classes.wrapper} zDepth={2}>\n                <div className={classes.header}>\n                    <span className={classes.title}>Фильтр</span>\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\n                        <CloseIcon className={classes.icon} />\n                    </IconButton>\n                </div>\n                <form onSubmit={handleSubmit(filterDialog.handleSubmitFilterDialog)}>\n                    <Field\n                        name=\"typeParent\"\n                        className={classes.inputFieldCustom}\n                        component={ProductTypeParentSearchField}\n                        label=\"Тип продукта\"\n                        fullWidth={true}\n                    />\n                    {typeParent ? <Field\n                        name=\"typeChild\"\n                        className={classes.inputFieldCustom}\n                        component={ProductTypeChildSearchField}\n                        parentType={typeParent}\n                        label=\"Подкатегория\"\n                        fullWidth={true}\n                    /> : null}\n                    <div>\n                        <Field\n                            className={classes.inputFieldCustom}\n                            name=\"measurement\"\n                            component={MeasurementSearchField}\n                            label=\"Мера\"/>\n                    </div>\n                    <div>\n                        <Field\n                            className={classes.inputFieldCustom}\n                            name=\"brand\"\n                            component={BrandSearchField}\n                            label=\"Бренд\"/>\n                    </div>\n                    <RaisedButton\n                        type=\"submit\"\n                        primary={true}\n                        buttonStyle={{color: '#fff'}}\n                        label=\"Применить\"\n                        style={{marginTop: '15px'}}>\n                    </RaisedButton>\n                </form>\n            </Paper>\n        </div>\n    )\n})\n\nProductFilterForm.propTypes = {\n    filter: PropTypes.object.isRequired,\n    filterDialog: PropTypes.shape({\n        filterLoading: PropTypes.bool.isRequired,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    })\n}\n\nexport default ProductFilterForm\n\n\n\n// WEBPACK FOOTER //\n// src/components/Product/ProductFilterForm.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport IconButton from 'material-ui/IconButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport CloseIcon2 from '../CloseIcon2'\n\nexport const PRODUCT_SHOW_PHOTO_OPEN = 'openShowBigImg'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            width: '100%',\n            height: '100%',\n            background: '#fff !important',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        imgPopup: {\n            padding: '0 !important',\n            maxHeight: '500px !important',\n            height: '500px'\n        },\n        imgWrapper: {\n            height: '500px',\n            '& img': {\n                height: '100%',\n                width: '100%'\n            }\n        },\n        closeBtn: {\n            position: 'absolute !important',\n            right: '7px',\n            top: '7px'\n        }\n    }),\n)\n\nconst ProductShowPhotoDialog = enhance((props) => {\n    const {open, loading, onClose, classes, detailData} = props\n    const image = _.get(detailData, ['data', 'image', 'file'])\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.imagePopup}\n            bodyStyle={{minHeight: 'auto'}}\n            bodyClassName={classes.imgPopup}>\n\n            <div className={classes.imgWrapper}>\n                <IconButton onTouchTap={onClose} className={classes.closeBtn}>\n                    <CloseIcon2 color=\"#f0f0f0\"/>\n                </IconButton>\n                {loading ? <div className={classes.loader}>\n                        <CircularProgress />\n                    </div>\n                    : <img src={image}/>}\n            </div>\n        </Dialog>\n    )\n})\n\nProductShowPhotoDialog.propTyeps = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired,\n    detailData: PropTypes.object\n}\n\nexport default ProductShowPhotoDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Product/ProductShowPhotoDialog.js","import React from 'react'\nimport MUICheckbox from 'material-ui/Checkbox'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\n\nconst checkboxStyle = {\n    textAlign: 'left',\n    marginBottom: '10px',\n    marginTop: '10px'\n}\n\nconst enhance = compose(\n    injectSheet({\n        checkBox: {\n            '& svg:first-child': {\n                fill: '#666666 !important',\n                color: '#666666 !important'\n            },\n            '& svg:last-child': {\n                fill: '#666666 !important',\n                color: '#666666 !important'\n            },\n            '& span': {\n                top: '-10px !important',\n                left: '-10px !important'\n            }\n        }\n    })\n)\n\nconst Checkbox = ({classes, input, meta, label, ...defaultProps}) => (\n    <MUICheckbox\n        label={label}\n        className={classes.checkBox}\n        style={checkboxStyle}\n        iconStyle={{width: '20px', height: '20px'}}\n        labelStyle={{lineHeight: '20px', left: '-10px'}}\n        checked={Boolean(input.value)}\n        onCheck={input.onChange}\n        {...defaultProps}\n    />\n)\n\nexport default enhance(Checkbox)\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Basic/CheckBox.js","import sprintf from 'sprintf'\nimport _ from 'lodash'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\nimport axios from '../../../helpers/axios'\nimport * as PATH from '../../../constants/api'\nimport toCamelCase from '../../../helpers/toCamelCase'\nimport * as actionTypes from '../../../constants/actionTypes'\nimport {connect} from 'react-redux'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.PRODUCT_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst setMeasurementAction = (data, loading) => {\n    return {\n        type: actionTypes.PRODUCT_MEASUREMENT,\n        data: data,\n        loading: loading\n    }\n}\n\nconst getItem = (id, dispatch) => {\n    dispatch(setMeasurementAction(null, true))\n    return axios().get(sprintf(PATH.PRODUCT_ITEM, id))\n        .then(({data}) => {\n            dispatch(setMeasurementAction(_.get(data, ['measurement', 'name']), false))\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst ProductSearchField = connect()((props) => {\n    const {dispatch, ...defaultProps} = props\n    const test = (id) => {\n        return getItem(id, dispatch)\n    }\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={test}\n            getItemText={SearchField.defaultGetText('name')}\n            {...defaultProps}\n        />\n    )\n})\n\nexport default ProductSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Product/ProductSearchField.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\nimport axios from '../../../helpers/axios'\nimport * as PATH from '../../../constants/api'\nimport toCamelCase from '../../../helpers/toCamelCase'\nimport * as actionTypes from '../../../constants/actionTypes'\nimport {connect} from 'react-redux'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.PROVIDER_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nexport const setItemAction = (data, loading) => {\n    return {\n        type: actionTypes.PROVIDER_CONTACTS,\n        data: data,\n        loading: loading\n    }\n}\n\nconst getItem = (id, dispatch) => {\n    dispatch(setItemAction(null, true))\n\n    return axios().get(sprintf(PATH.PROVIDER_ITEM, id))\n        .then(({data}) => {\n            dispatch(setItemAction(_.get(data, 'contacts'), false))\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst ProviderSearchField = connect()((props) => {\n    const {dispatch} = props\n    const test = (id) => {\n        return getItem(id, dispatch)\n    }\n\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={test}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n})\n\nexport default ProviderSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Provider/ProviderSearchField.js","import sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\nimport axios from '../../../helpers/axios'\nimport * as PATH from '../../../constants/api'\nimport toCamelCase from '../../../helpers/toCamelCase'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.STOCK_LIST}?stock_type=0&search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst getItem = (id) => {\n    return axios().get(sprintf(PATH.STOCK_ITEM, id))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst StockSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default StockSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Stock/StockSearchField.js","import sprintf from 'sprintf'\nimport _ from 'lodash'\nimport React from 'react'\nimport {compose} from 'recompose'\nimport SearchField from '../Basic/SearchField'\nimport axios from '../../../helpers/axios'\nimport * as PATH from '../../../constants/api'\nimport toCamelCase from '../../../helpers/toCamelCase'\nimport * as actionTypes from '../../../constants/actionTypes'\nimport {connect} from 'react-redux'\n\nconst getOptions = (search, type) => {\n    return axios().get(`${PATH.PRODUCT_LIST}?type=${type || ''}&search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst setMeasurementAction = (data, loading) => {\n    return {\n        type: actionTypes.PRODUCT_MEASUREMENT,\n        data: data,\n        loading: loading\n    }\n}\n\nconst getItem = (id, dispatch) => {\n    dispatch(setMeasurementAction(null, true))\n    return axios().get(sprintf(PATH.PRODUCT_ITEM, _.get(id, 'id')))\n        .then(({data}) => {\n            dispatch(setMeasurementAction(_.get(data, ['measurement', 'name']), false))\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst enhance = compose(\n    connect((state, props) => {\n        const dispatch = _.get(props, 'dispatch')\n        return {\n            state,\n            dispatch\n        }\n    })\n)\n\nconst ProductCustomSearchField = enhance((props) => {\n    const {dispatch, state, ...defaultProps} = props\n    const test = (id) => {\n        return getItem(id, dispatch)\n    }\n    const type = _.get(state, ['form', 'PricesCreateForm', 'values', 'type', 'value'])\n    return (\n        <SearchField\n            getValue={(value) => {\n                return value\n            }}\n            getText={(value) => {\n                return _.get(value, ['name'])\n            }}\n            getOptions={ (search) => { return getOptions(search, type) }}\n            getItem={test}\n            getItemText={(value) => {\n                return _.get(value, ['name'])\n            }}\n            {...defaultProps}\n        />\n    )\n})\n\nexport default ProductCustomSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Supply/ProductCustomSearchField.js","import _ from 'lodash'\n\nexport default function createReducer (initialState, handlers) {\n    return function reducer (state = initialState, action) {\n        if (_.has(handlers, action.type)) {\n            return handlers[action.type](state, action)\n        }\n\n        return state\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/createReducer.js","const stockTypeFormat = (type) => {\n    if (type === 'supply') {\n        return 'Поставка'\n    } else if (type === 'transfer' || type === 'stock_transfer') {\n        return 'Передача'\n    } else if (type === 'order transfer product') {\n        return 'По заказу'\n    } else if (type === 'order_return') {\n        return 'Возврат'\n    }\n    return type\n}\n\nexport default stockTypeFormat\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/stockTypeFormat.js","import _ from 'lodash'\nimport toCamelCase from './toCamelCase'\nimport {SubmissionError} from 'redux-form'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n\n    throw new SubmissionError({\n        ...errors,\n        _error: nonFieldErrors\n    })\n}\n\nexport default validate\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/validate.js","import _ from 'lodash'\nimport moment from 'moment'\nimport {orderingSnakeCase} from '../../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n\n    return {\n        name\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    const firstDayOfMonth = moment().format('YYYY-MM-01')\n    const lastDay = moment().daysInMonth()\n    const lastDayOfMonth = moment().format('YYYY-MM-' + lastDay)\n\n    return {\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering),\n        'type': _.get(defaultData, 'productType'),\n        'begin_date': _.get(defaultData, 'fromDate') || firstDayOfMonth,\n        'end_date': _.get(defaultData, 'toDate') || lastDayOfMonth\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Statistics/statProductSerializer.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionCached = function ActionCached(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M19 8l-4 4h3c0 3.31-2.69 6-6 6-1.01 0-1.97-.25-2.8-.7l-1.46 1.46C8.97 19.54 10.43 20 12 20c4.42 0 8-3.58 8-8h3l-4-4zM6 12c0-3.31 2.69-6 6-6 1.01 0 1.97.25 2.8.7l1.46-1.46C15.03 4.46 13.57 4 12 4c-4.42 0-8 3.58-8 8H1l4 4 4-4H6z' })\n  );\n};\nActionCached = (0, _pure2.default)(ActionCached);\nActionCached.displayName = 'ActionCached';\nActionCached.muiName = 'SvgIcon';\n\nexports.default = ActionCached;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/cached.js\n// module id = 374\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar AvFiberManualRecord = function AvFiberManualRecord(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('circle', { cx: '12', cy: '12', r: '8' })\n  );\n};\nAvFiberManualRecord = (0, _pure2.default)(AvFiberManualRecord);\nAvFiberManualRecord.displayName = 'AvFiberManualRecord';\nAvFiberManualRecord.muiName = 'SvgIcon';\n\nexports.default = AvFiberManualRecord;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/av/fiber-manual-record.js\n// module id = 376\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar AvPlaylistAddCheck = function AvPlaylistAddCheck(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M14 10H2v2h12v-2zm0-4H2v2h12V6zM2 16h8v-2H2v2zm19.5-4.5L23 13l-6.99 7-4.51-4.5L13 14l3.01 3 5.49-5.5z' })\n  );\n};\nAvPlaylistAddCheck = (0, _pure2.default)(AvPlaylistAddCheck);\nAvPlaylistAddCheck.displayName = 'AvPlaylistAddCheck';\nAvPlaylistAddCheck.muiName = 'SvgIcon';\n\nexports.default = AvPlaylistAddCheck;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/av/playlist-add-check.js\n// module id = 377\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ContentRemove = function ContentRemove(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M19 13H5v-2h14v2z' })\n  );\n};\nContentRemove = (0, _pure2.default)(ContentRemove);\nContentRemove.displayName = 'ContentRemove';\nContentRemove.muiName = 'SvgIcon';\n\nexports.default = ContentRemove;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/content/remove.js\n// module id = 378\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar EditorAttachMoney = function EditorAttachMoney(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M11.8 10.9c-2.27-.59-3-1.2-3-2.15 0-1.09 1.01-1.85 2.7-1.85 1.78 0 2.44.85 2.5 2.1h2.21c-.07-1.72-1.12-3.3-3.21-3.81V3h-3v2.16c-1.94.42-3.5 1.68-3.5 3.61 0 2.31 1.91 3.46 4.7 4.13 2.5.6 3 1.48 3 2.41 0 .69-.49 1.79-2.7 1.79-2.06 0-2.87-.92-2.98-2.1h-2.2c.12 2.19 1.76 3.42 3.68 3.83V21h3v-2.15c1.95-.37 3.5-1.5 3.5-3.55 0-2.84-2.43-3.81-4.7-4.4z' })\n  );\n};\nEditorAttachMoney = (0, _pure2.default)(EditorAttachMoney);\nEditorAttachMoney.displayName = 'EditorAttachMoney';\nEditorAttachMoney.muiName = 'SvgIcon';\n\nexports.default = EditorAttachMoney;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/editor/attach-money.js\n// module id = 379\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar NavigationArrowDownward = function NavigationArrowDownward(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z' })\n  );\n};\nNavigationArrowDownward = (0, _pure2.default)(NavigationArrowDownward);\nNavigationArrowDownward.displayName = 'NavigationArrowDownward';\nNavigationArrowDownward.muiName = 'SvgIcon';\n\nexports.default = NavigationArrowDownward;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/navigation/arrow-downward.js\n// module id = 380\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar NavigationArrowUpward = function NavigationArrowUpward(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z' })\n  );\n};\nNavigationArrowUpward = (0, _pure2.default)(NavigationArrowUpward);\nNavigationArrowUpward.displayName = 'NavigationArrowUpward';\nNavigationArrowUpward.muiName = 'SvgIcon';\n\nexports.default = NavigationArrowUpward;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/navigation/arrow-upward.js\n// module id = 382\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _objectWithoutProperties2 = require(\"babel-runtime/helpers/objectWithoutProperties\");\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _getPrototypeOf = require(\"babel-runtime/core-js/object/get-prototype-of\");\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nexports.default = withScriptjs;\n\nvar _invariant = require(\"invariant\");\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _canUseDom = require(\"can-use-dom\");\n\nvar _canUseDom2 = _interopRequireDefault(_canUseDom);\n\nvar _reactDisplayName = require(\"react-display-name\");\n\nvar _reactDisplayName2 = _interopRequireDefault(_reactDisplayName);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar LOADING_STATE_NONE = \"NONE\";\nvar LOADING_STATE_BEGIN = \"BEGIN\";\nvar LOADING_STATE_LOADED = \"LOADED\";\n\nfunction withScriptjs(WrappedComponent) {\n  var _class, _temp2;\n\n  return _temp2 = _class = function (_Component) {\n    (0, _inherits3.default)(Container, _Component);\n\n    function Container() {\n      var _ref;\n\n      var _temp, _this, _ret;\n\n      (0, _classCallCheck3.default)(this, Container);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Container.__proto__ || (0, _getPrototypeOf2.default)(Container)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n        loadingState: LOADING_STATE_NONE\n      }, _this.isUnmounted = false, _this.handleLoaded = _this.handleLoaded.bind(_this), _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n    }\n\n    (0, _createClass3.default)(Container, [{\n      key: \"handleLoaded\",\n      value: function handleLoaded() {\n        if (this.isUnmounted) {\n          return;\n        }\n        this.setState({\n          loadingState: LOADING_STATE_LOADED\n        });\n      }\n    }, {\n      key: \"componentWillMount\",\n      value: function componentWillMount() {\n        var _props = this.props,\n            loadingElement = _props.loadingElement,\n            googleMapURL = _props.googleMapURL;\n\n        (0, _invariant2.default)(!!loadingElement && !!googleMapURL, \"Required props loadingElement or googleMapURL is missing. You need to provide both of them.\");\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var loadingState = this.state.loadingState;\n\n        if (loadingState !== LOADING_STATE_NONE || !_canUseDom2.default) {\n          return;\n        }\n        this.setState({\n          loadingState: LOADING_STATE_BEGIN\n        });\n        // Don't load scriptjs as dependency since we want this module be used on server side.\n        // eslint-disable-next-line global-require\n        var scriptjs = require(\"scriptjs\");\n        var googleMapURL = this.props.googleMapURL;\n\n        scriptjs(googleMapURL, this.handleLoaded);\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this.isUnmounted = true;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _props2 = this.props,\n            loadingElement = _props2.loadingElement,\n            googleMapURL = _props2.googleMapURL,\n            restProps = (0, _objectWithoutProperties3.default)(_props2, [\"loadingElement\", \"googleMapURL\"]);\n        var loadingState = this.state.loadingState;\n\n\n        if (loadingState === LOADING_STATE_LOADED) {\n          return _react2.default.createElement(WrappedComponent, restProps);\n        } else {\n          return loadingElement;\n        }\n      }\n    }]);\n    return Container;\n  }(_react.Component), _class.displayName = \"withScriptjs(\" + (0, _reactDisplayName2.default)(WrappedComponent) + \")\", _class.propTypes = {\n    loadingElement: _propTypes2.default.node.isRequired,\n    googleMapURL: _propTypes2.default.string.isRequired\n  }, _temp2;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-google-maps/lib/async/withScriptjs.js\n// module id = 409\n// module chunks = 0","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/cashboxSerializer'\n\nexport const cashboxCreateAction = (formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .post(API.CASHBOX_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.CASHBOX_CREATE,\n        payload\n    }\n}\n\nexport const cashboxDeleteAction = (id) => {\n    const payload = axios()\n        .delete(sprintf(API.CASHBOX_DELETE, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.CASHBOX_DELETE,\n        payload\n    }\n}\n\nexport const cashboxUpdateAction = (id, formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .put(sprintf(API.CASHBOX_ITEM, id), requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.CASHBOX_UPDATE,\n        payload\n    }\n}\n\nexport const cashboxListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(API.CASHBOX_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.CASHBOX_LIST,\n        payload\n    }\n}\n\nexport const cashboxItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.CASHBOX_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.CASHBOX_ITEM,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/cashbox.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/equipmentSerializer'\n\nexport const equipmentCreateAction = (formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .post(API.EQUIPMENT_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.EQUIPMENT_CREATE,\n        payload\n    }\n}\n\nexport const equipmentDeleteAction = (id) => {\n    const payload = axios()\n        .delete(sprintf(API.EQUIPMENT_DELETE, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.EQUIPMENT_DELETE,\n        payload\n    }\n}\n\nexport const equipmentUpdateAction = (id, formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .put(sprintf(API.EQUIPMENT_ITEM, id), requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.EQUIPMENT_UPDATE,\n        payload\n    }\n}\n\nexport const equipmentListFetchAction = (filter, manufacture) => {\n    const params = serializers.listFilterSerializer(filter.getParams(), manufacture)\n    const payload = axios()\n        .get(API.EQUIPMENT_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.EQUIPMENT_LIST,\n        payload\n    }\n}\n\nexport const equipmentItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.EQUIPMENT_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.EQUIPMENT_ITEM,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/equipment.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/marketTypeSerializer'\n\nexport const marketTypeCreateAction = (formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .post(API.MARKET_TYPE_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.MARKET_TYPE_CREATE,\n        payload\n    }\n}\n\nexport const marketTypeDeleteAction = (id) => {\n    const payload = axios()\n        .delete(sprintf(API.MARKET_TYPE_DELETE, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.MARKET_TYPE_DELETE,\n        payload\n    }\n}\n\nexport const marketTypeUpdateAction = (id, formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .put(sprintf(API.MARKET_TYPE_ITEM, id), requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.MARKET_TYPE_UPDATE,\n        payload\n    }\n}\n\nexport const marketTypeListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(API.MARKET_TYPE_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.MARKET_TYPE_LIST,\n        payload\n    }\n}\n\nexport const marketTypeGetAllAction = () => {\n    const params = {\n        'page': 1,\n        'page_size': 100\n    }\n    const payload = axios()\n        .get(API.MARKET_TYPE_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.MARKET_TYPE_LIST,\n        payload\n    }\n}\n\nexport const marketTypeItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.MARKET_TYPE_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.MARKET_TYPE_ITEM,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/marketType.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\n\nexport const notificationDeleteAction = (id) => {\n    const payload = axios()\n        .delete(sprintf(API.NOTIFICATIONS_DELETE, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.NOTIFICATIONS_DELETE,\n        payload\n    }\n}\n\nexport const notificationListFetchAction = () => {\n    const payload = axios()\n        .get(API.NOTIFICATIONS_LIST)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.NOTIFICATIONS_LIST,\n        payload\n    }\n}\n\nexport const notificationGetNotViewed = () => {\n    const payload = axios()\n        .get(API.NOTIFICATIONS_GET_NOT_VIEWED)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.NOTIFICATIONS_TIME_INTERVAL,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/notifications.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/Product/productSerializer'\n\nexport const productCreateAction = (formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .post(API.PRODUCT_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PRODUCT_CREATE,\n        payload\n    }\n}\n\nexport const productDeleteAction = (id) => {\n    const payload = axios()\n        .delete(sprintf(API.PRODUCT_DELETE, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PRODUCT_DELETE,\n        payload\n    }\n}\n\nexport const productUpdateAction = (id, formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .put(sprintf(API.PRODUCT_ITEM, id), requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PRODUCT_UPDATE,\n        payload\n    }\n}\n\nexport const productListFetchAction = (filter, manufacture) => {\n    const params = serializers.listFilterSerializer(filter.getParams(), manufacture)\n    const payload = axios()\n        .get(API.PRODUCT_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PRODUCT_LIST,\n        payload\n    }\n}\n\nexport const productItemFetchAction = (id) => {\n    const params = {'thumbnail_type': 'large'}\n    const payload = axios()\n        .get(sprintf(API.PRODUCT_ITEM, id), {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PRODUCT_ITEM,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/product.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/shopSerializer'\n\nexport const shopCreateAction = (formValues, location) => {\n    const requestData = serializers.createSerializer(formValues, location)\n    const payload = axios()\n        .post(API.SHOP_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.SHOP_CREATE,\n        payload\n    }\n}\n\nexport const imageCreateAction = (image, id) => {\n    const requestData = serializers.imageSerializer(image, id)\n    const payload = axios()\n        .post(sprintf(API.SHOP_ITEM_ADD_IMAGE, id), requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.SHOP_ITEM_ADD_IMAGE,\n        payload\n    }\n}\n\nexport const imageDeleteAction = (shopId, imgId) => {\n    const payload = axios()\n        .delete(sprintf(API.SHOP_ITEM_DELETE_IMAGE, shopId, imgId))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.SHOP_ITEM_DELETE_IMAGE,\n        payload\n    }\n}\n\nexport const setPrimaryImageAction = (shopId, image) => {\n    const payload = axios()\n        .post(sprintf(API.SHOP_SET_PRIMARY_IMAGE, shopId), {image})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.SHOP_SET_PRIMARY_IMAGE,\n        payload\n    }\n}\n\nexport const shopDeleteAction = (id) => {\n    const payload = axios()\n        .delete(sprintf(API.SHOP_DELETE, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.SHOP_DELETE,\n        payload\n    }\n}\n\nexport const shopUpdateAction = (id, formValues, location) => {\n    const requestData = serializers.updateSerializer(formValues, location)\n    const payload = axios()\n        .put(sprintf(API.SHOP_ITEM, id), requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.SHOP_UPDATE,\n        payload\n    }\n}\n\nexport const shopListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(API.SHOP_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.SHOP_LIST,\n        payload\n    }\n}\n\nexport const shopItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.SHOP_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.SHOP_ITEM,\n        payload\n    }\n}\n\nexport const slideShowFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.SHOP_ITEM_SHOW_IMAGE, id), {params: {'thumbnail_type': 'large'}})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.SHOP_ITEM_SHOW_IMAGE,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/shop.js","import _ from 'lodash'\nimport axios from '../helpers/axios'\nimport * as storageHelper from '../helpers/storage'\nimport * as API from '../constants/api'\nimport {TOKEN_KEY} from '../constants/storage'\nimport * as actionTypes from '../constants/actionTypes'\n\nexport const setTokenAction = () => {\n    return {\n        type: `${actionTypes.SIGN_IN}_FULFILLED`,\n        payload: storageHelper.getToken()\n    }\n}\n\nexport const signInAction = (params) => {\n    const payload = axios()\n        .post(API.SIGN_IN, params)\n        .then((response) => {\n            const rememberMe = _.get(params, 'rememberMe')\n            const token = _.get(response, ['data', 'token'])\n\n            // Save token in browser storage\n            storageHelper.setToken(token, rememberMe)\n\n            return token\n        })\n        .catch((error) => {\n            const errorData = _.get(error, ['response', 'data'])\n\n            return Promise.reject(\n                errorData || {'nonFieldErrors': ['Internet connection error']}\n            )\n        })\n\n    return {\n        type: actionTypes.SIGN_IN,\n        payload\n    }\n}\n\nexport const signOutAction = () => {\n    const payload = axios().delete(API.SIGN_OUT)\n        .then(() => {\n            localStorage.removeItem(TOKEN_KEY)\n            sessionStorage.removeItem(TOKEN_KEY)\n        })\n        .catch((error) => {\n            const errorData = _.get(error, ['response', 'data'])\n            return Promise.reject(errorData)\n        })\n\n    return {\n        type: `${actionTypes.SIGN_IN}_CLEAR`,\n        payload\n    }\n}\n\nexport const authConfirmAction = () => {\n    const payload = axios().get(API.AUTH_CONFIRM)\n        .then((response) => {\n            const userData = _.get(response, 'data')\n            storageHelper.setUser(userData)\n        })\n    return {\n        type: actionTypes.AUTH_CONFIRM,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/signIn.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/stockSerializer'\n\nexport const stockCreateAction = (formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .post(API.STOCK_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STOCK_CREATE,\n        payload\n    }\n}\n\nexport const stockDeleteAction = (id) => {\n    const payload = axios()\n        .delete(sprintf(API.STOCK_DELETE, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STOCK_DELETE,\n        payload\n    }\n}\n\nexport const stockUpdateAction = (id, formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .put(sprintf(API.STOCK_ITEM, id), requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.STOCK_UPDATE,\n        payload\n    }\n}\n\nexport const stockListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(API.STOCK_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STOCK_LIST,\n        payload\n    }\n}\n\nexport const stockItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.STOCK_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STOCK_ITEM,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/stock.js","import _ from 'lodash'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/trackingSerializer'\n\nexport const trackingListFetchAction = () => {\n    const payload = axios()\n        .get(API.TRACKING_LIST)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.TRACKING_LIST,\n        payload\n    }\n}\n\nexport const marketsLocationFetchAction = () => {\n    const payload = axios()\n        .get(API.MARKETS_LOCATION)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.MARKETS_LOCATION,\n        payload\n    }\n}\n\nexport const locationListAction = (id, data) => {\n    const params = serializers.agentLocationSerializer(id, data)\n    const payload = axios()\n        .get(API.LOCATION_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.LOCATION_LIST,\n        payload\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/actions/tracking.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/Transaction/transactionSerializer'\n\nexport const transactionCreateIncomeAction = (formValues, cashboxId) => {\n    const requestData = serializers.createIncomeSerializer(formValues, cashboxId)\n    const payload = axios()\n        .post(API.TRANSACTION_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.TRANSACTION_INCOME,\n        payload\n    }\n}\n\nexport const acceptCashListFetchAction = () => {\n    const payload = axios()\n        .get(API.TRANSACTION_ACCEPT_CASH)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.TRANSACTION_ACCEPT_CASH,\n        payload\n    }\n}\n\nexport const transactionCreateExpenseAction = (formValues, cashboxId) => {\n    const requestData = serializers.createExpenseSerializer(formValues, cashboxId)\n    const payload = axios()\n        .post(API.TRANSACTION_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.TRANSACTION_EXPENSE,\n        payload\n    }\n}\n\nexport const pendingTransactionFetchAction = (user, currency) => {\n    const params = {\n        transaction: 0,\n        type: 'in',\n        user: user,\n        currency: currency\n    }\n\n    const payload = axios()\n        .get(API.ORDER_TRANSACTION, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.ORDER_TRANSACTION,\n        payload\n    }\n}\n\nexport const transactionCreateSendAction = (formValues, cashboxId) => {\n    const requestData = serializers.createSendSerializer(formValues, cashboxId)\n    const payload = axios()\n        .post(API.TRANSACTION_SEND, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.TRANSACTION_SEND,\n        payload\n    }\n}\nexport const acceptClientTransactionAction = (data) => {\n    const payload = axios()\n        .post(API.ACCEPT_CLIENT_TRANSACTION, data)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.ACCEPT_CLIENT_TRANSACTION,\n        payload\n    }\n}\nexport const transactionDeleteAction = (id) => {\n    const payload = axios()\n        .delete(sprintf(API.TRANSACTION_DELETE, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.TRANSACTION_DELETE,\n        payload\n    }\n}\n\nexport const transactionUpdateExpenseAction = (id, formValues, cashboxId) => {\n    const requestData = serializers.createExpenseSerializer(formValues, cashboxId)\n    const payload = axios()\n        .put(sprintf(API.TRANSACTION_ITEM, id), requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.TRANSACTION_UPDATE,\n        payload\n    }\n}\n\nexport const transactionUpdateIncomeAction = (id, formValues, cashboxId) => {\n    const requestData = serializers.createIncomeSerializer(formValues, cashboxId)\n    const payload = axios()\n        .put(sprintf(API.TRANSACTION_ITEM, id), requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.TRANSACTION_UPDATE_INCOME,\n        payload\n    }\n}\n\nexport const transactionListFetchAction = (filter, cashboxId) => {\n    const params = serializers.listFilterSerializer(filter.getParams(), cashboxId)\n    const payload = axios()\n        .get(API.TRANSACTION_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.TRANSACTION_LIST,\n        payload\n    }\n}\n\nexport const transactionItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.TRANSACTION_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.TRANSACTION_ITEM,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/transaction.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {TextField} from '../ReduxForm'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport MainStyles from '../Styles/MainStyles'\n\nexport const BRAND_CREATE_DIALOG_OPEN = 'openCreateDialog'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\n\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        }\n    })),\n    reduxForm({\n        form: 'BrandCreateForm',\n        enableReinitialize: true\n    })\n)\n\nconst BrandCreateDialog = enhance((props) => {\n    const {open, loading, handleSubmit, onClose, classes, isUpdate} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\n            bodyStyle={{minHeight: 'auto'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>{isUpdate ? 'Изменить бренд' : 'Добавить бренд'}</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} className={classes.form} style={{minHeight: 'auto'}}>\n                    <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4}/>\n                    </div>\n                    <div className={classes.inContent} style={{minHeight: '100px', paddingTop: '15px'}}>\n                        <div className={classes.field}>\n                            <Field\n                                name=\"name\"\n                                component={TextField}\n                                className={classes.inputFieldCustom}\n                                label=\"Наименование\"\n                                fullWidth={true}\n                            />\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\n\nBrandCreateDialog.propTyeps = {\n    isUpdate: PropTypes.bool,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\n\nBrandCreateDialog.defaultProps = {\n    isUpdate: false\n}\n\nexport default BrandCreateDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Brand/BrandCreateDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport FlatButton from 'material-ui/FlatButton'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {TextField, CurrencySearchField, UsersSearchField, PaymentTypeSearchField} from '../ReduxForm'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport MainStyles from '../Styles/MainStyles'\n\nexport const CASHBOX_CREATE_DIALOG_OPEN = 'openCreateDialog'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\n\nconst styles = _.merge(MainStyles, {\n    loader: {\n        position: 'absolute',\n        width: '100%',\n        height: '100%',\n        background: '#fff',\n        top: '0',\n        left: '0',\n        alignItems: 'center',\n        zIndex: '999',\n        textAlign: 'center',\n        display: ({loading}) => loading ? 'flex' : 'none'\n    }\n})\n\nconst enhance = compose(\n    injectSheet(styles),\n    reduxForm({\n        form: 'CashboxCreateForm',\n        enableReinitialize: true\n    })\n)\n\nconst CashboxCreateDialog = enhance((props) => {\n    const {open, loading, handleSubmit, onClose, classes, isUpdate} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\n            bodyStyle={{minHeight: 'auto'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>{isUpdate ? 'Изменить кассу' : 'Добавить кассу'}</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} className={classes.form}>\n                    <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4}/>\n                    </div>\n                    <div className={classes.inContent} style={{minHeight: '235px', paddingTop: '15px'}}>\n                        <div className={classes.field}>\n                            <Field\n                                name=\"name\"\n                                component={TextField}\n                                className={classes.inputFieldCustom}\n                                label=\"Наименование\"\n                                fullWidth={true}\n                            />\n                            <Field\n                                name=\"currency\"\n                                component={CurrencySearchField}\n                                className={classes.inputFieldCustom}\n                                label=\"Валюта\"\n                                fullWidth={true}\n                            />\n                            <Field\n                                name=\"cashier\"\n                                component={UsersSearchField}\n                                className={classes.inputFieldCustom}\n                                label=\"Кассир\"\n                                fullWidth={true}\n                            />\n                            <Field\n                                name=\"type\"\n                                component={PaymentTypeSearchField}\n                                className={classes.inputFieldCustom}\n                                label=\"Тип оплаты\"\n                                fullWidth={true}\n                            />\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\n\nCashboxCreateDialog.propTyeps = {\n    isUpdate: PropTypes.bool.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\n\nCashboxCreateDialog.defaultProps = {\n    isUpdate: false\n}\nexport default CashboxCreateDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Cashbox/CashboxCreateDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose, withHandlers} from 'recompose'\nimport {reduxForm, Field} from 'redux-form'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {Link} from 'react-router'\nimport Paper from 'material-ui/Paper'\nimport IconButton from 'material-ui/IconButton'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\nimport DateToDateField from '../ReduxForm/Basic/DateToDateField'\n\nimport CloseIcon from '../CloseIcon'\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\n\nexport const CLIENT_BALANCE_FILTER_OPEN = 'openFilterDialog'\n\nexport const CLIENT_BALANCE_FILTER_KEY = {\n    FROM_DATE: 'fromDate',\n    TO_DATE: 'toDate'\n}\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            position: 'absolute',\n            minWidth: '300px',\n            background: '#fff',\n            zIndex: 99,\n            top: 0,\n            left: 0,\n            borderRadius: 0,\n            padding: '10px 20px 10px 20px'\n        },\n        afterFilter: {\n            alignItems: 'center',\n            display: 'flex',\n            backgroundColor: '#efefef',\n            position: 'relative',\n            padding: '16px 30px',\n            marginLeft: '-30px',\n            '& > div:nth-child(2)': {\n                position: 'absolute',\n                right: '0'\n            },\n            '& > div:nth-child(1)': {\n                color: '#666666'\n            },\n            '& button': {\n                borderLeft: '1px solid white !important'\n            }\n        },\n        icon: {\n            color: '#8f8f8f !important'\n        },\n        arrow: {\n            color: '#12aaeb',\n            paddingRight: '14px',\n            position: 'relative',\n            '& svg': {\n                position: 'absolute',\n                width: '13px !important',\n                height: '20px !important'\n            }\n        },\n        header: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            '& button': {\n                marginRight: '-12px !important'\n            }\n        },\n        title: {\n            fontSize: '15px',\n            color: '#5d6474'\n        },\n        submit: {\n            color: '#fff !important'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'ClientBalanceFilterForm',\n        enableReinitialize: true\n    }),\n    withHandlers({\n        getCount: props => () => {\n            const {filter} = props\n            return _(CLIENT_BALANCE_FILTER_KEY)\n                .values()\n                .filter(item => item !== CLIENT_BALANCE_FILTER_KEY.FROM_DATE)\n                .filter(item => filter.getParam(item))\n                .value()\n                .length\n        }\n    })\n)\n\nconst ClientBalanceFilterForm = enhance((props) => {\n    const {classes, filterDialog, getCount} = props\n    const filterCounts = getCount()\n\n    if (!filterDialog.openFilterDialog) {\n        if (filterCounts) {\n            return (\n                <div className={classes.afterFilter}>\n                    <div>Фильтр: {filterCounts} элемента</div>\n                    <div>\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\n                            <BorderColorIcon color=\"#8f8f8f\" />\n                        </IconButton>\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\n                            <CloseIcon className={classes.icon}/>\n                        </IconButton>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <Link\n                    className={classes.arrow}\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\n                </Link>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <Paper className={classes.wrapper} zDepth={2}>\n                <div className={classes.header}>\n                    <span className={classes.title}>Фильтр</span>\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\n                        <CloseIcon className={classes.icon} />\n                    </IconButton>\n                </div>\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\n                    <div>\n                        <Field className={classes.inputFieldCustom} name=\"date\" component={DateToDateField} label=\"Диапазон дат\" fullWidth={true}/>\n                    </div>\n                    <RaisedButton\n                        type=\"submit\"\n                        primary={true}\n                        buttonStyle={{color: '#fff'}}\n                        label=\"Применить\"\n                        style={{marginTop: '15px'}}>\n                    </RaisedButton>\n                </form>\n            </Paper>\n        </div>\n    )\n})\n\nClientBalanceFilterForm.propTypes = {\n    filter: PropTypes.object.isRequired,\n    filterDialog: PropTypes.shape({\n        filterLoading: PropTypes.bool.isRequired,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    })\n}\n\nexport default ClientBalanceFilterForm\n\n\n\n// WEBPACK FOOTER //\n// src/components/ClientBalance/ClientBalanceFilterForm.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose, withHandlers} from 'recompose'\nimport {reduxForm, Field} from 'redux-form'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {Link} from 'react-router'\nimport Paper from 'material-ui/Paper'\nimport IconButton from 'material-ui/IconButton'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\nimport DateToDateField from '../ReduxForm/Basic/DateToDateField'\nimport {TransactionTypeSearchField, ExpensiveCategorySearchField} from '../ReduxForm'\nimport CloseIcon from '../CloseIcon'\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\n\nexport const CLIENT_TRANSACTION_FILTER_OPEN = 'openFilterDialog'\n\nexport const CLIENT_TRANSACTION_FILTER_KEY = {\n    TYPE: 'type',\n    CATEGORY_EXPENSE: 'categoryExpense',\n    FROM_DATE: 'fromDate',\n    TO_DATE: 'toDate'\n}\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            position: 'absolute',\n            minWidth: '300px',\n            background: '#fff',\n            zIndex: 99,\n            top: 0,\n            left: 0,\n            borderRadius: 0,\n            padding: '10px 20px 10px 20px'\n        },\n        afterFilter: {\n            alignItems: 'center',\n            display: 'flex',\n            backgroundColor: '#efefef',\n            position: 'relative',\n            padding: '16px 30px',\n            marginLeft: '-30px',\n            '& > div:nth-child(2)': {\n                position: 'absolute',\n                right: '0'\n            },\n            '& > div:nth-child(1)': {\n                color: '#666666'\n            },\n            '& button': {\n                borderLeft: '1px solid white !important'\n            }\n        },\n        icon: {\n            color: '#8f8f8f !important'\n        },\n        arrow: {\n            color: '#12aaeb',\n            paddingRight: '14px',\n            position: 'relative',\n            '& svg': {\n                position: 'absolute',\n                width: '13px !important',\n                height: '20px !important'\n            }\n        },\n        header: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            '& button': {\n                marginRight: '-12px !important'\n            }\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        title: {\n            fontSize: '15px',\n            color: '#5d6474'\n        },\n        submit: {\n            color: '#fff !important'\n        }\n    }),\n    reduxForm({\n        form: 'ClientTransactionFilterForm',\n        enableReinitialize: true\n    }),\n    withHandlers({\n        getCount: props => () => {\n            const {filter} = props\n            return _(CLIENT_TRANSACTION_FILTER_KEY)\n                .values()\n                .filter(item => item !== CLIENT_TRANSACTION_FILTER_KEY.FROM_DATE)\n                .filter(item => filter.getParam(item))\n                .value()\n                .length\n        }\n    })\n)\n\nconst ClientTransactionFilterForm = enhance((props) => {\n    const {classes, filterDialog, getCount} = props\n    const filterCounts = getCount()\n\n    if (!filterDialog.openFilterDialog) {\n        if (filterCounts) {\n            return (\n                <div className={classes.afterFilter}>\n                    <div>Фильтр: {filterCounts} элемента</div>\n                    <div>\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\n                            <BorderColorIcon color=\"#8f8f8f\" />\n                        </IconButton>\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\n                            <CloseIcon className={classes.icon}/>\n                        </IconButton>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <Link\n                    className={classes.arrow}\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\n                </Link>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <Paper className={classes.wrapper} zDepth={2}>\n                <div className={classes.header}>\n                    <span className={classes.title}>Фильтр</span>\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\n                        <CloseIcon className={classes.icon} />\n                    </IconButton>\n                </div>\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\n                    <div>\n                        <Field className={classes.inputFieldCustom} name=\"categoryExpense\" component={ExpensiveCategorySearchField} label=\"Категории расходов\"/>\n                    </div>\n                    <div>\n                        <Field className={classes.inputFieldCustom} name=\"type\" component={TransactionTypeSearchField} label=\"Тип\"/>\n                    </div>\n                    <div>\n                        <Field className={classes.inputFieldCustom} name=\"date\" component={DateToDateField} label=\"Диапазон дат\" fullWidth={true}/>\n                    </div>\n\n                    <RaisedButton\n                        type=\"submit\"\n                        primary={true}\n                        buttonStyle={{color: '#fff'}}\n                        label=\"Применить\"\n                        style={{marginTop: '15px'}}>\n                    </RaisedButton>\n                </form>\n            </Paper>\n        </div>\n    )\n})\n\nClientTransactionFilterForm.propTypes = {\n    filter: PropTypes.object.isRequired,\n    filterDialog: PropTypes.shape({\n        filterLoading: PropTypes.bool.isRequired,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    })\n}\n\nexport default ClientTransactionFilterForm\n\n\n\n// WEBPACK FOOTER //\n// src/components/ClientTransaction/ClientTransactionFilterForm.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {TextField} from '../ReduxForm'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport MainStyles from '../Styles/MainStyles'\nexport const CURRENCY_CREATE_DIALOG_OPEN = 'openCreateDialog'\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        }\n    })),\n    reduxForm({\n        form: 'CurrencyCreateForm',\n        enableReinitialize: true\n    })\n)\nconst CurrencyCreateDialog = enhance((props) => {\n    const {open, loading, handleSubmit, onClose, classes, isUpdate} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\n            bodyStyle={{minHeight: '100px !important'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>{isUpdate ? 'Изменить валюту' : 'Добавить валюту'}</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} className={classes.form} style={{minHeight: 'auto'}}>\n                    <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4}/>\n                    </div>\n                    <div className={classes.inContent} style={{minHeight: '120px', paddingTop: '15px'}}>\n                        <div className={classes.field}>\n                            <Field\n                                name=\"name\"\n                                component={TextField}\n                                className={classes.inputFieldCustom}\n                                label=\"Наименование\"\n                                fullWidth={true}\n                            />\n                            {isUpdate\n                                ? <Field\n                                    name=\"rate\"\n                                    disabled={true}\n                                    component={TextField}\n                                    className={classes.inputFieldCustom}\n                                    label=\"Курс\"\n                                    fullWidth={true}/>\n                                : <Field\n                                        name=\"rate\"\n                                        component={TextField}\n                                        className={classes.inputFieldCustom}\n                                        label=\"Курс\"\n                                        fullWidth={true}/>\n                            }\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\nCurrencyCreateDialog.propTypes = {\n    isUpdate: PropTypes.bool,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\nCurrencyCreateDialog.defaultProps = {\n    isUpdate: false\n}\nexport default CurrencyCreateDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Currency/CurrencyCreateDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {TextField, ManufactureSearchField, ImageUploadField} from '../ReduxForm'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport MainStyles from '../Styles/MainStyles'\n\nexport const EQUIPMENT_CREATE_DIALOG_OPEN = 'openCreateDialog'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\n\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        equipmentPhoto: {\n            '& .imageDropZone': {\n                width: '160px',\n                height: '160px',\n                marginLeft: '30px',\n                marginBottom: '30px',\n                '& svg': {\n                    width: '40px !important'\n                }\n            }\n        }\n    })),\n    reduxForm({\n        form: 'EquipmentCreateForm',\n        enableReinitialize: true\n    })\n)\n\nconst EquipmentCreateDialog = enhance((props) => {\n    const {open, loading, handleSubmit, onClose, classes, isUpdate} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\n            bodyStyle={{minHeight: 'auto'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>{isUpdate ? 'Изменить оборудование' : 'Добавить оборудование'}</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} className={classes.form}>\n                    <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4}/>\n                    </div>\n                    <div className={classes.inContent} style={{minHeight: '200px'}}>\n                        <div className={classes.field} style={{paddingTop: '15px'}}>\n                            <Field\n                                name=\"name\"\n                                component={TextField}\n                                className={classes.inputFieldCustom}\n                                label=\"Наименование\"\n                                fullWidth={true}\n                            />\n                            <Field\n                                name=\"manufacture\"\n                                component={ManufactureSearchField}\n                                className={classes.inputFieldCustom}\n                                label=\"Производство\"\n                                fullWidth={true}\n                            />\n                        </div>\n                        <div className={classes.equipmentPhoto}>\n                            <Field\n                                name=\"image\"\n                                className={classes.imageUpload}\n                                component={ImageUploadField}\n                                label=\"Изображения\"\n                                fullWidth={true}\n                            />\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\n\nEquipmentCreateDialog.propTypes = {\n    isUpdate: PropTypes.bool,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\n\nEquipmentCreateDialog.defaultProps = {\n    isUpdate: false\n}\n\nexport default EquipmentCreateDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Equipment/EquipmentCreateDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {TextField} from '../ReduxForm'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport MainStyles from '../Styles/MainStyles'\n\nexport const EXPENSIVE_CATEGORY_CREATE_DIALOG_OPEN = 'openCreateDialog'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\n\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        }\n    })),\n    reduxForm({\n        form: 'ExpensiveCategoryCreateForm',\n        enableReinitialize: true\n    })\n)\n\nconst ExpensiveCategoryCreateDialog = enhance((props) => {\n    const {open, loading, handleSubmit, onClose, classes, isUpdate} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\n            bodyStyle={{minHeight: 'auto'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>{isUpdate ? 'Изменить категорию расходов' : 'Добавить категорию расходов'}</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} className={classes.form} style={{minHeight: 'auto'}}>\n                    <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4}/>\n                    </div>\n                    <div className={classes.inContent} style={{minHeight: '100px', paddingTop: '15px'}}>\n                        <div className={classes.field}>\n                            <Field\n                                name=\"name\"\n                                component={TextField}\n                                className={classes.inputFieldCustom}\n                                label=\"Наименование\"\n                                fullWidth={true}\n                            />\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\n\nExpensiveCategoryCreateDialog.propTypes = {\n    isUpdate: PropTypes.bool,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\n\nExpensiveCategoryCreateDialog.defaultProps = {\n    isUpdate: false\n}\n\nexport default ExpensiveCategoryCreateDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/ExpensiveCategory/ExpensiveCategoryCreateDialog.js","import GoogleMap from './GoogleMap'\n\nexport default GoogleMap\n\n\n\n// WEBPACK FOOTER //\n// src/components/GoogleMap/index.js","import React from 'react'\nimport SvgIcon from 'material-ui/SvgIcon'\n\nconst ArrowLeftIcon = (props) => (\n    <SvgIcon {...props}>\n        <path d=\"M22,12A10,10 0 0,0 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12M14,7L9,12L14,17V7Z\" />\n    </SvgIcon>\n)\n\nexport default ArrowLeftIcon\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridListNavPagination/ArrowLeftIcon.js","import React from 'react'\nimport SvgIcon from 'material-ui/SvgIcon'\n\nconst ArrowRightIcon = (props) => (\n    <SvgIcon {...props}>\n        <path d=\"M2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2A10,10 0 0,0 2,12M4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12M10,17L15,12L10,7V17Z\" />\n    </SvgIcon>\n)\n\nexport default ArrowRightIcon\n\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridListNavPagination/ArrowRightIcon.js","import GridListNavSearch from './GridListNavSearch'\n\nexport default GridListNavSearch\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridListNavSearch/index.js","import React from 'react'\nimport SvgIcon from 'material-ui/SvgIcon'\n\nconst CheckIcon = (props) => {\n    return (\n        <SvgIcon {...props} style={{width: '24px', height: '24px'}}>\n            <g>\n                <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"/>\n            </g>\n        </SvgIcon>\n    )\n}\n\nexport default CheckIcon\n\n\n\n// WEBPACK FOOTER //\n// src/components/Icons/check.js","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose, withState} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport {Field, reduxForm, Fields} from 'redux-form'\nimport {ManufactureListMaterialField, ProductSearchField} from '../ReduxForm'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport validate from '../../helpers/validate'\n\nexport const MANUFACTURE_ADD_PRODUCT_DIALOG_OPEN = 'addProduct'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        popUp: {\n            overflowY: 'hidden !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            overflowX: 'hidden',\n            height: '100%'\n        },\n        titleContent: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '20px 30px',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                padding: '0 !important',\n                position: 'absolute !important'\n            }\n        },\n        inContent: {\n            display: 'flex',\n            maxHeight: '50vh',\n            minHeight: '220px',\n            overflow: 'auto',\n            padding: '0 30px',\n            color: '#333'\n        },\n        bodyContent: {\n            width: '100%'\n        },\n        form: {\n            position: 'relative'\n        },\n        field: {\n            width: '100%'\n        },\n        inputField: {\n            fontSize: '13px !important',\n            height: '50px !important',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        bottomButton: {\n            bottom: '0',\n            left: '0',\n            right: '0',\n            padding: '10px',\n            zIndex: '999',\n            borderTop: '1px solid #efefef',\n            background: '#fff',\n            textAlign: 'right',\n            '& span': {\n                fontSize: '13px !important',\n                fontWeight: '600 !important',\n                color: '#129fdd',\n                verticalAlign: 'inherit !important'\n            }\n        },\n        actionButton: {\n            fontSize: '13px !important',\n            margin: '0 !important'\n        },\n        buttonSub: {\n            textAlign: 'right',\n            marginTop: '10px',\n            '& span': {\n                fontSize: '13px !important',\n                fontWeight: '600 !important',\n                paddingLeft: '10px',\n                paddingRight: '10px'\n            },\n            '& button': {\n                margin: '0 !important',\n                fontSize: '13px !important',\n                marginRight: '-20px !important'\n            }\n        },\n        productAddForm: {\n            padding: '5px 0 20px 0',\n            borderBottom: '1px solid #efefef',\n            width: '100%',\n            '& input': {\n                fontSize: '13px !important',\n                marginTop: '5px !important'\n            },\n            '& label': {\n                fontSize: '13px',\n                top: '24px !important'\n            },\n            '& div': {\n                height: '55px !important'\n            },\n            '& div div': {\n                height: '0px !important'\n            },\n            '& div:first-child': {\n                width: '70%'\n            }\n        },\n        titleAdd: {\n            margin: '20px 0 5px',\n            '& h3': {\n                display: 'inline-block',\n                fontSize: '13px',\n                fontWeight: '800',\n                margin: '0'\n            },\n            '& a': {\n                float: 'right'\n            }\n        },\n        modalListTable: {\n            '& li': {\n                margin: '0',\n                padding: '10px 0',\n                display: 'flex',\n                alignItems: 'center',\n                position: 'relative',\n                '& div:first-child': {\n                    paddingLeft: '0'\n                },\n                '& div:last-child': {\n                    paddingRight: '0'\n                }\n            },\n            '& .dottedList:last-child:after': {\n                content: '\"\"',\n                backgroundImage: 'none'\n            },\n            '& .dottedList input': {\n                fontSize: '13px !important'\n            },\n            '& .dottedList:last-child': {\n                marginBottom: '20px'\n            }\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        addMaterials: {\n            background: 'rgb(242, 245, 248)',\n            margin: '10px -30px',\n            padding: '10px 23px',\n            display: 'flex',\n            '& input': {\n                fontSize: '13px !important',\n                marginTop: '5px !important'\n            },\n            '& label': {\n                fontSize: '13px !important',\n                top: '20px !important'\n            },\n            '& div div:first-child': {\n                height: '50px !important'\n            }\n        },\n        error: {\n            textAlign: 'center',\n            color: 'red'\n        }\n    }),\n    withState('openAddMaterials', 'setOpenAddMaterials', false),\n    reduxForm({\n        form: 'ProviderCreateForm',\n        enableReinitialize: true\n    })\n)\n\nconst ManufactureAddProductDialog = enhance((props) => {\n    const {open, handleSubmit, loading, onClose, classes, error} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '135px'} : {width: '600px'}}\n            bodyClassName={classes.popUp}>\n            <form onSubmit={onSubmit} className={classes.form}>\n                <div className={classes.titleContent}>\n                    <span>Добавление продукта</span>\n                    <IconButton onTouchTap={onClose}>\n                        <CloseIcon2 color=\"#666666\"/>\n                    </IconButton>\n                </div>\n                {error && <div className={classes.error}>Ошибка: {error}</div>}\n                <div className={classes.bodyContent}>\n                    <div className={classes.inContent}>\n                        <div style={{width: '100%', paddingTop: '10px'}}>\n                            <Field\n                                name=\"product\"\n                                label=\"Продукт\"\n                                className={classes.inputFieldCustom}\n                                component={ProductSearchField}\n                                fullWidth={true}/>\n                            <Fields\n                                names={['ingredients', 'ingredient', 'amount', 'measurement']}\n                                component={ManufactureListMaterialField}\n                            />\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </div>\n            </form>\n        </Dialog>\n    )\n})\n\nManufactureAddProductDialog.propTypes = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func,\n    loading: PropTypes.bool\n}\n\nManufactureAddProductDialog.defaultProps = {\n    isUpdate: false\n}\n\nexport default ManufactureAddProductDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Manufacture/ManufactureAddProductDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport IconButton from 'material-ui/IconButton'\nimport FlatButton from 'material-ui/FlatButton'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport CloseIcon2 from '../CloseIcon2'\nimport {ShiftSearchField, UsersSearchField} from '../ReduxForm'\nimport toCamelCase from '../../helpers/toCamelCase'\n\nexport const OPEN_USER_CREATE_DIALOG = 'openCreateUser'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        popUp: {\n            overflowY: 'hidden !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            overflowX: 'hidden',\n            height: '100%'\n        },\n        titleContent: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '20px 30px',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                padding: '0 !important',\n                position: 'absolute !important'\n            }\n        },\n        inContent: {\n            display: 'flex',\n            maxHeight: '50vh',\n            minHeight: '140px',\n            overflow: 'auto',\n            padding: '0 30px',\n            color: '#333'\n        },\n        bodyContent: {\n            width: '100%'\n        },\n        form: {\n            position: 'relative'\n        },\n        field: {\n            width: '100%'\n        },\n        inputField: {\n            fontSize: '13px !important'\n        },\n        bottomButton: {\n            bottom: '0',\n            left: '0',\n            right: '0',\n            padding: '10px',\n            zIndex: '999',\n            borderTop: '1px solid #efefef',\n            background: '#fff',\n            textAlign: 'right',\n            '& span': {\n                fontSize: '13px !important',\n                fontWeight: '600 !important',\n                color: '#129fdd',\n                verticalAlign: 'inherit !important'\n            }\n        },\n        actionButton: {\n            fontSize: '13px !important',\n            margin: '0 !important'\n        }\n    }),\n    reduxForm({\n        form: 'ManufactureCreateUserForm',\n        enableReinitialize: true\n    })\n)\n\nconst ManufactureAddStaffDialog = enhance((props) => {\n    const {\n        open,\n        loading,\n        onClose,\n        handleSubmit,\n        classes,\n        isUpdate\n    } = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '135px'} : {width: '400px'}}\n            bodyClassName={classes.popUp}>\n            <form onSubmit={onSubmit} className={classes.form}>\n                <div className={classes.titleContent}>\n                    <span>Производство клея: персонал</span>\n                    <IconButton onTouchTap={onClose}>\n                        <CloseIcon2 color=\"#666666\"/>\n                    </IconButton>\n                </div>\n                <div className={classes.bodyContent}>\n                    <div className={classes.inContent}>\n                        <div style={{width: '100%', paddingTop: '10px'}}>\n                            <Field\n                                name=\"user\"\n                                component={UsersSearchField}\n                                className={classes.inputFieldCustom}\n                                disabled={Boolean(isUpdate)}\n                                label=\"Сотрудник\"\n                                fullWidth={true}/>\n                            <Field\n                                name=\"shift\"\n                                component={ShiftSearchField}\n                                className={classes.inputFieldCustom}\n                                label=\"Смена\"\n                                fullWidth={true}/>\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </div>\n            </form>\n        </Dialog>\n    )\n})\n\nManufactureAddStaffDialog.propTypes = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired\n}\n\nManufactureAddStaffDialog.defaultProps = {\n    isUpdate: false\n}\n\nexport default ManufactureAddStaffDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Manufacture/ManufactureAddStaffDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose, withState} from 'recompose'\nimport {connect} from 'react-redux'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport {Row, Col} from 'react-flexbox-grid'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {TextField, ProductSearchField} from '../ReduxForm'\n\nexport const MANUFACTURE_EDIT_PRODUCT_DIALOG_OPEN = 'editMaterials'\nconst enhance = compose(\n    connect((state) => {\n        const measurementExp = _.get(state, ['product', 'measurement', 'data'])\n        return {\n            measurementExp\n        }\n    }),\n    injectSheet({\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        popUp: {\n            overflowY: 'hidden !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            overflowX: 'hidden',\n            height: '100%'\n        },\n        titleContent: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '20px 30px',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                padding: '0 !important',\n                position: 'absolute !important'\n            }\n        },\n        inContent: {\n            display: 'flex',\n            maxHeight: '50vh',\n            minHeight: '220px',\n            overflow: 'auto',\n            padding: '0 30px',\n            color: '#333'\n        },\n        bodyContent: {\n            width: '100%'\n        },\n        form: {\n            position: 'relative'\n        },\n        field: {\n            width: '100%'\n        },\n        inputField: {\n            fontSize: '13px !important',\n            height: '50px !important',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        bottomButton: {\n            bottom: '0',\n            left: '0',\n            right: '0',\n            padding: '10px',\n            zIndex: '999',\n            borderTop: '1px solid #efefef',\n            background: '#fff',\n            textAlign: 'right',\n            '& span': {\n                fontSize: '13px !important',\n                fontWeight: '600 !important',\n                color: '#129fdd',\n                verticalAlign: 'inherit !important'\n            }\n        },\n        actionButton: {\n            fontSize: '13px !important',\n            margin: '0 !important'\n        },\n        buttonSub: {\n            textAlign: 'right',\n            marginTop: '10px',\n            '& span': {\n                fontSize: '13px !important',\n                fontWeight: '600 !important',\n                paddingLeft: '10px',\n                paddingRight: '10px'\n            },\n            '& button': {\n                margin: '0 !important',\n                fontSize: '13px !important',\n                marginRight: '-20px !important'\n            }\n        },\n        productAddForm: {\n            padding: '5px 0 20px 0',\n            borderBottom: '1px solid #efefef',\n            width: '100%',\n            '& input': {\n                fontSize: '13px !important',\n                marginTop: '5px !important'\n            },\n            '& label': {\n                fontSize: '13px',\n                top: '24px !important'\n            },\n            '& div': {\n                height: '55px !important'\n            },\n            '& div div': {\n                height: '0px !important'\n            },\n            '& div:first-child': {\n                width: '70%'\n            }\n        },\n        titleAdd: {\n            margin: '20px 0 5px',\n            '& h3': {\n                display: 'inline-block',\n                fontSize: '13px',\n                fontWeight: '800',\n                margin: '0'\n            },\n            '& a': {\n                float: 'right'\n            }\n        },\n        modalListTable: {\n            '& li': {\n                margin: '0',\n                padding: '10px 0',\n                display: 'flex',\n                alignItems: 'center',\n                position: 'relative',\n                '& div:first-child': {\n                    paddingLeft: '0'\n                },\n                '& div:last-child': {\n                    paddingRight: '0'\n                }\n            },\n            '& .dottedList:last-child:after': {\n                content: '\"\"',\n                backgroundImage: 'none'\n            },\n            '& .dottedList input': {\n                fontSize: '13px !important'\n            },\n            '& .dottedList:last-child': {\n                marginBottom: '20px'\n            }\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        addMaterials: {\n            margin: '10px -30px',\n            padding: '10px 23px',\n            display: 'flex',\n            '& input:disabled': {\n                color: '#333 !important'\n            }\n        }\n    }),\n    withState('openAddMaterials', 'setOpenAddMaterials', false),\n    reduxForm({\n        form: 'IngredientCreateForm',\n        enableReinitialize: true\n    })\n)\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\nconst ManufactureEditProductDialog = enhance((props) => {\n    const {open, handleSubmit, loading, onClose, classes, isUpdate, measurement, measurementExp} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '135px'} : {width: '600px'}}\n            bodyClassName={classes.popUp}>\n            <form onSubmit={onSubmit} className={classes.form}>\n                <div className={classes.titleContent}>\n                    <span>Редактирование сырья</span>\n                    <IconButton onTouchTap={onClose}>\n                        <CloseIcon2 color=\"#666666\"/>\n                    </IconButton>\n                </div>\n                <div className={classes.bodyContent}>\n                    <div className={classes.inContent} style={{minHeight: '115px'}}>\n                        <div style={{width: '100%', paddingTop: '10px'}}>\n                            <div className={classes.addMaterials}>\n                                <Row className={classes.addRaw} style={{width: '100%'}}>\n                                    <Col xs={8}>\n                                        <Field\n                                            label=\"Наименование товара\"\n                                            name=\"ingredient\"\n                                            component={ProductSearchField}\n                                            className={classes.inputFieldCustom}\n                                            fullWidth={true}\n                                            disabled={isUpdate}\n                                        />\n                                    </Col>\n                                    <Col xs={3}>\n                                        <Field\n                                            name=\"amount\"\n                                            style={{textAlign: 'right'}}\n                                            label=\"Кол-во\"\n                                            component={TextField}\n                                            className={classes.inputFieldCustom}\n                                            fullWidth={true}\n                                        />\n                                    </Col>\n                                    <Col xs={1}>\n                                        <span style={{position: 'relative', top: '22px'}}>{!measurement ? measurementExp : measurement}</span>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </div>\n            </form>\n        </Dialog>\n    )\n})\n\nManufactureEditProductDialog.propTypes = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func,\n    loading: PropTypes.bool\n}\n\nManufactureEditProductDialog.defaultProps = {\n    isUpdate: false\n}\n\nexport default ManufactureEditProductDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Manufacture/ManufactureEditProductDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Col} from 'react-flexbox-grid'\nimport {compose, withState} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport {Field, reduxForm} from 'redux-form'\nimport {TextField} from '../ReduxForm'\nimport CloseIcon2 from '../CloseIcon2'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\nimport MainStyles from '../Styles/MainStyles'\nimport IconMenu from 'material-ui/IconMenu'\nimport MenuItem from 'material-ui/MenuItem'\nimport IconButton from 'material-ui/IconButton'\nimport Edit from 'material-ui/svg-icons/image/edit'\nimport ImageCheck from '../Icons/check'\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\n\nexport const MANUFACTURE_SHOW_BOM_DIALOG_OPEN = 'showBom'\n\nconst colorBlue = '#129fdd !important'\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        buttonSub: {\n            textAlign: 'right',\n            marginTop: '10px',\n            '& span': {\n                fontSize: '13px !important',\n                fontWeight: '600 !important',\n                color: colorBlue,\n                paddingLeft: '10px',\n                paddingRight: '10px'\n            },\n            '& button': {\n                margin: '0 !important',\n                fontSize: '13px !important',\n                marginRight: '-20px !important'\n            }\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        body: {\n            minHeight: '450px'\n        },\n        listBom: {\n            margin: '0 30px',\n            width: '100%'\n        },\n        titleBom: {\n            padding: '20px 0',\n            borderBottom: '1px solid #efefef',\n            width: '100%'\n        },\n        titleAdd: {\n            margin: '20px 0 5px',\n            '& h3': {\n                display: 'inline-block',\n                fontSize: '13px',\n                fontWeight: '800',\n                margin: '0'\n            },\n            '& a': {\n                float: 'right'\n            }\n        },\n        modalListTable: {\n            '& li': {\n                margin: '0',\n                padding: '10px 0',\n                display: 'flex',\n                alignItems: 'center',\n                position: 'relative',\n                '& div:first-child': {\n                    paddingLeft: '0'\n                },\n                '& div:last-child': {\n                    paddingRight: '0'\n                }\n            },\n            '& .dottedList:last-child:after': {\n                content: '\"\"',\n                backgroundImage: 'none'\n            },\n            '& .dottedList input': {\n                fontSize: '13px !important'\n            },\n            '& .dottedList:last-child': {\n                marginBottom: '20px'\n            }\n        },\n        addMaterials: {\n            background: 'rgb(242, 245, 248)',\n            margin: '10px -30px',\n            padding: '10px 23px',\n            display: 'flex',\n            '& input': {\n                fontSize: '13px !important',\n                marginTop: '5px !important'\n            },\n            '& label': {\n                fontSize: '13px !important',\n                top: '20px !important'\n            }\n        }\n    })),\n    withState('openAddMaterials', 'setOpenAddMaterials', false),\n    reduxForm({\n        form: 'ProviderCreateForm',\n        enableReinitialize: true\n    })\n)\n\nconst ManufactureShowBom = enhance((props) => {\n    const {open, loading, onClose, classes, openAddMaterials, setOpenAddMaterials} = props\n\n    const iconButton = (\n        <IconButton style={{padding: '0 12px', height: 'auto'}}>\n            <MoreVertIcon />\n        </IconButton>\n    )\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '135px'} : {width: '600px'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>BoM</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <div className={classes.inContent}>\n                    <div style={{width: '100%'}}>\n                        <div className={classes.titleBom}>\n                            <span>Продукт: <strong>Клей для скотча</strong></span><br />\n                            Lorem Ipsum has been the industry's standard dummy text ever since the 1500s.\n                        </div>\n                        <div className={classes.titleAdd}>\n                            <h3>Сырье</h3>\n                            <a onClick={() => { setOpenAddMaterials(!openAddMaterials) }}>\n                                <ContentAdd style={{height: '13px', width: '13px', color: 'rgb(18, 170, 235)'}} viewBox=\"0 0 24 15\" />\n                                добавить сырье\n                            </a>\n                        </div>\n                        {openAddMaterials && <div className={classes.addMaterials}>\n                            <Col xs={8}>\n                                <Field\n                                    name=\"nameAdd\"\n                                    component={TextField}\n                                    className={classes.inputFieldCustom}\n                                    label=\"Наименование\"\n                                    fullWidth={true}/>\n                            </Col>\n                            <Col xs={2}>\n                                <Field\n                                    name=\"countAdd\"\n                                    component={TextField}\n                                    className={classes.inputFieldCustom}\n                                    label=\"Кол-во\"\n                                    fullWidth={true}/>\n                            </Col>\n                            <Col xs={1}>\n                                <Field\n                                    name=\"edAdd\"\n                                    component={TextField}\n                                    className={classes.inputFieldCustom}\n                                    label=\"Ед.\"\n                                    fullWidth={true}/>\n                            </Col>\n                            <Col xs={1}>\n                                <IconButton>\n                                    <div>\n                                        <ImageCheck style={{color: '#129fdd'}} />\n                                    </div>\n                                </IconButton>\n                            </Col>\n                        </div>}\n                        <ul className={classes.modalListTable}>\n                            <li className=\"dottedList\">\n                                <Col xs={8}>\n                                    <strong>Наименование</strong>\n                                </Col>\n                                <Col xs={2}>\n                                    <strong>Кол-во</strong>\n                                </Col>\n                                <Col xs={1}>\n                                    <strong>Ед.</strong>\n                                </Col>\n                                <Col xs={1}>\n                                    &nbsp;\n                                </Col>\n                            </li>\n                            <li className=\"dottedList\">\n                                <Col xs={8}>\n                                    Дистилированная вода\n                                </Col>\n                                <Col xs={2}>\n                                    100\n                                </Col>\n                                <Col xs={1}>\n                                    л\n                                </Col>\n                                <Col xs={1}>\n                                    <IconMenu\n                                        iconButtonElement={iconButton}\n                                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\n                                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\n                                        <MenuItem\n                                            primaryText=\"Изменить\"\n                                            leftIcon={<Edit />}\n                                        />\n                                        <MenuItem\n                                            primaryText=\"Удалить \"\n                                            leftIcon={<DeleteIcon />}\n                                        />\n                                    </IconMenu>\n                                </Col>\n                            </li>\n                            <li className=\"dottedList\" style={{margin: '0 -29px', padding: '10px 30px', background: '#f2f5f8'}}>\n                                <Col xs={8}>\n                                    <Field\n                                        name=\"name\"\n                                        defaultValue=\"Value on load\"\n                                        component={TextField}\n                                        className={classes.inputFieldMaterials}\n                                        fullWidth={true}/>\n                                </Col>\n                                <Col xs={2}>\n                                    <Field\n                                        name=\"count\"\n                                        component={TextField}\n                                        className={classes.inputFieldMaterials}\n                                        fullWidth={true}/>\n                                </Col>\n                                <Col xs={1}>\n                                    <Field\n                                        name=\"unit\"\n                                        component={TextField}\n                                        className={classes.inputFieldMaterials}\n                                        fullWidth={true}/>\n                                </Col>\n                                <Col xs={1}>\n                                    <IconButton>\n                                        <div>\n                                            <ImageCheck style={{color: '#129fdd'}} />\n                                        </div>\n                                    </IconButton>\n                                </Col>\n                            </li>\n                            <li className=\"dottedList\">\n                                <Col xs={8}>\n                                    Дистилированная вода\n                                </Col>\n                                <Col xs={2}>\n                                    100\n                                </Col>\n                                <Col xs={1}>\n                                    л\n                                </Col>\n                                <Col xs={1}>\n                                    <IconMenu\n                                        iconButtonElement={iconButton}\n                                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\n                                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\n                                        <MenuItem\n                                            primaryText=\"Изменить\"\n                                            leftIcon={<Edit />}\n                                        />\n                                        <MenuItem\n                                            primaryText=\"Удалить \"\n                                            leftIcon={<DeleteIcon />}\n                                        />\n                                    </IconMenu>\n                                </Col>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </Dialog>\n    )\n})\n\nManufactureShowBom.propTypes = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func,\n    loading: PropTypes.bool\n}\n\nManufactureShowBom.defaultProps = {\n    isUpdate: false\n}\n\nexport default ManufactureShowBom\n\n\n\n// WEBPACK FOOTER //\n// src/components/Manufacture/ManufactureShowBom.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {TextField} from '../ReduxForm'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport MainStyles from '../Styles/MainStyles'\n\nexport const MARKET_TYPE_CREATE_DIALOG_OPEN = 'openCreateDialog'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\n\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        }\n    })),\n    reduxForm({\n        form: 'MarketTypeCreateForm',\n        enableReinitialize: true\n    })\n)\n\nconst MarketTypeCreateDialog = enhance((props) => {\n    const {open, loading, handleSubmit, onClose, classes, isUpdate} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\n            bodyStyle={{minHeight: 'auto'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>{isUpdate ? 'Изменить тип магазина' : 'Добавить тип магазина'}</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} className={classes.form} style={{minHeight: 'auto'}}>\n                    <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4}/>\n                    </div>\n                    <div className={classes.inContent} style={{minHeight: '100px', paddingTop: '15px'}}>\n                        <div className={classes.field}>\n                            <Field\n                                name=\"name\"\n                                component={TextField}\n                                className={classes.inputFieldCustom}\n                                label=\"Наименование\"\n                                fullWidth={true}\n                            />\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\n\nMarketTypeCreateDialog.propTyeps = {\n    isUpdate: PropTypes.bool,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\n\nMarketTypeCreateDialog.defaultProps = {\n    isUpdate: false\n}\n\nexport default MarketTypeCreateDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/MarketType/MarketTypeCreateDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {TextField} from '../ReduxForm'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport MainStyles from '../Styles/MainStyles'\n\nexport const MEASUREMENT_CREATE_DIALOG_OPEN = 'openCreateDialog'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\n\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        }\n    })),\n    reduxForm({\n        form: 'MeasurementCreateForm',\n        enableReinitialize: true\n    })\n)\n\nconst MeasurementCreateDialog = enhance((props) => {\n    const {open, loading, handleSubmit, onClose, classes, isUpdate} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\n            bodyStyle={{minHeight: 'auto'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>{isUpdate ? 'Изменить измерение' : 'Добавить измерение'}</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} className={classes.form} style={{minHeight: 'auto'}}>\n                    <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4}/>\n                    </div>\n                    <div className={classes.inContent} style={{minHeight: '100px', paddingTop: '15px'}}>\n                        <div className={classes.field}>\n                            <Field\n                                name=\"name\"\n                                component={TextField}\n                                className={classes.inputFieldCustom}\n                                label=\"Наименование\"\n                                fullWidth={true}\n                            />\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\n\nMeasurementCreateDialog.propTypes = {\n    isUpdate: PropTypes.bool,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\n\nMeasurementCreateDialog.defaultProps = {\n    isUpdate: false\n}\n\nexport default MeasurementCreateDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Measurement/MeasurementCreateDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport {Field, Fields, reduxForm, SubmissionError} from 'redux-form'\nimport Dialog from 'material-ui/Dialog'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport IconButton from 'material-ui/IconButton'\nimport FlatButton from 'material-ui/FlatButton'\nimport CloseIcon2 from '../CloseIcon2'\nimport normalizeNumber from '../ReduxForm/normalizers/normalizeNumber'\nimport {\n    ClientSearchField,\n    DeliveryTypeSearchField,\n    OrderListProductField,\n    ClientContactsField,\n    TextField,\n    DateField,\n    MarketSearchField,\n    DealTypeSearchField,\n    normalizeDiscount\n} from '../ReduxForm'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport MainStyles from '../Styles/MainStyles'\nimport OrderTotalSum from '../ReduxForm/Order/OrderTotalSum'\nimport getConfig from '../../helpers/getConfig'\n\nexport const ORDER_CREATE_DIALOG_OPEN = 'openCreateDialog'\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    throw new SubmissionError({\n        ...errors,\n        _error: nonFieldErrors\n    })\n}\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            justifyContent: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        popUp: {\n            overflowY: 'hidden !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            overflowX: 'hidden',\n            height: '100%',\n            maxHeight: 'inherit !important'\n        },\n        titleContent: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '20px 30px',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                padding: '0 !important',\n                position: 'absolute !important'\n            }\n        },\n        inContent: {\n            display: 'flex',\n            color: '#333',\n            minHeight: '450px'\n        },\n        innerWrap: {\n            maxHeight: '100vh',\n            overflow: 'auto'\n        },\n        bodyContent: {\n            color: '#333',\n            width: '100%'\n        },\n        form: {\n            position: 'relative'\n        },\n        field: {\n            width: '100%'\n        },\n        subTitleOrder: {\n            display: 'flex',\n            alignItems: 'center',\n            marginBottom: '5px !important',\n            justifyContent: 'space-between',\n            fontWeight: '600',\n            padding: '0 !important',\n            '& span': {\n                fontWeight: '600 !important'\n            }\n        },\n        radioButton: {\n            marginTop: '10px',\n            '&>div': {\n                marginBottom: '10px'\n            }\n        },\n        condition: {\n            marginTop: '20px',\n            '&>div:first-child': {\n                marginBottom: '-20px'\n            }\n        },\n        commentField: {\n            padding: '5px 20px',\n            fontSize: '16px !important',\n            textAlign: 'left',\n            width: '50%',\n            float: 'left'\n        },\n        bottomButton: {\n            bottom: '0',\n            left: '0',\n            right: '0',\n            padding: '10px',\n            zIndex: '999',\n            borderTop: '1px solid #efefef',\n            background: '#fff',\n            textAlign: 'right',\n            '& span': {\n                fontSize: '13px !important',\n                fontWeight: '600 !important',\n                color: '#129fdd',\n                verticalAlign: 'inherit !important'\n            }\n        },\n        actionButton: {\n            fontSize: '13px !important',\n            margin: '0 !important'\n        },\n        leftOrderPart: {\n            flexBasis: '35%',\n            padding: '20px 30px 20px 0',\n            borderRight: '1px #efefef solid'\n        },\n        rightOrderPart: {\n            flexBasis: '65%',\n            maxWidth: '65%',\n            padding: '20px 0 20px 30px'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        inputDateCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            },\n            '& div:first-child': {\n                height: '45px !important'\n            }\n        },\n        inputFieldDis: {\n            fontSize: '13px !important',\n            paddingTop: '24px',\n            '& div': {\n                color: 'rgb(229, 115, 115) !important'\n            }\n        },\n        podlojkaScroll: {\n            overflowY: 'auto !important',\n            '& > div:first-child > div:first-child': {\n                transform: 'translate(0px, 0px) !important'\n            }\n        },\n        notEnough: {\n            padding: '20px 30px',\n            color: '#ff2626',\n            margin: '0 -30px',\n            background: '#ffecec'\n        }\n    })),\n    reduxForm({\n        form: 'OrderCreateForm',\n        enableReinitialize: true\n    })\n)\n\nconst customContentStyle = {\n    width: '1000px',\n    maxWidth: 'none'\n}\nconst OrderCreateDialog = enhance((props) => {\n    const {\n        open,\n        handleSubmit,\n        onClose,\n        classes,\n        shortageDialog,\n        isUpdate,\n        createClientDialog,\n        products\n    } = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n    let notEnough = false\n    _.map(products, (item) => {\n        const amount = _.toNumber(_.get(item, 'amount'))\n        const balance = _.toNumber(_.get(item, ['extra', 'balance']))\n        if (amount > balance) {\n            notEnough = true\n        }\n    })\n\n    const primaryCurrency = getConfig('PRIMARY_CURRENCY')\n    return (\n        <Dialog\n            modal={true}\n            className={classes.podlojkaScroll}\n            contentStyle={customContentStyle}\n            open={open}\n            onRequestClose={onClose}\n            bodyClassName={classes.popUp}\n            autoScrollBodyContent={true}>\n            <div className={classes.titleContent}>\n                <span>{isUpdate ? 'Изменение заказа' : 'Добавление заказа'}</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} scrolling=\"auto\" className={classes.form}>\n                    <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4}/>\n                    </div>\n                    <div className={classes.innerWrap}>\n                        <div style={{minHeight: '470px', maxHeight: '75vh'}} className={classes.inContent}>\n                            <div className={classes.leftOrderPart}>\n\n                                <div className={classes.subTitleOrder}>\n                                    <span>Выбор клиента</span>\n                                    {!isUpdate && <a style={{color: '#12aaeb'}} onClick={createClientDialog.handleOpenCreateClientDialog}>+ добавить</a>}\n                                </div>\n                                <div>\n                                    <Field\n                                        name=\"client\"\n                                        component={ClientSearchField}\n                                        className={classes.inputFieldCustom}\n                                        label=\"Клиент\"\n                                        fullWidth={true}/>\n                                    <Field\n                                        name=\"contact\"\n                                        component={ClientContactsField}\n                                    />\n                                    <Field\n                                        name=\"market\"\n                                        component={MarketSearchField}\n                                        className={classes.inputFieldCustom}\n                                        label=\"Название магазина\"\n                                        fullWidth={true}/>\n                                </div>\n\n                                {(!notEnough) ? <div className={classes.condition}>\n                                    <div className={classes.subTitleOrder} style={{padding: '0 !important'}}>Условия доставки</div>\n                                    <Field\n                                        name=\"deliveryType\"\n                                        component={DeliveryTypeSearchField}\n                                        className={classes.inputFieldCustom}\n                                        label=\"Тип доставки\"\n                                        fullWidth={true}/>\n                                    <Field\n                                        name=\"dealType\"\n                                        component={DealTypeSearchField}\n                                        className={classes.inputFieldCustom}\n                                        label=\"Тип сделки\"\n                                        fullWidth={true}/>\n                                    <Field\n                                        name=\"deliveryPrice\"\n                                        component={TextField}\n                                        className={classes.inputFieldCustom}\n                                        label={'Стоимость доставки (' + primaryCurrency + ')'}\n                                        fullWidth={true}\n                                        normalize={normalizeNumber}\n                                        />\n                                    <Field\n                                            name=\"deliveryDate\"\n                                            component={DateField}\n                                            className={classes.inputDateCustom}\n                                            floatingLabelText=\"Дата доставки\"\n                                            container=\"inline\"\n                                            fullWidth={true}/>\n                                </div>\n                                : <div className={classes.notEnough}>Недостаточно товаров на складе</div>}\n\n                                <div className={classes.condition}>\n                                    <div className={classes.subTitleOrder} style={{padding: '0 !important'}}>Оплата</div>\n                                    <Field\n                                        name=\"discountPrice\"\n                                        component={TextField}\n                                        className={classes.inputFieldCustom}\n                                        label=\"Скидка (%)\"\n                                        style={{width: '50%'}}\n                                        normalize={normalizeDiscount}/>\n                                    <Field\n                                        name=\"paymentDate\"\n                                        component={DateField}\n                                        className={classes.inputDateCustom}\n                                        floatingLabelText=\"Дата оплаты\"\n                                        container=\"inline\"\n                                        fullWidth={true}/>\n                                </div>\n                            </div>\n                            <div className={classes.rightOrderPart}>\n                                <Fields\n                                    names={['products', 'product', 'amount', 'cost']}\n                                    component={OrderListProductField}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <div className={classes.commentField}>\n                            Общая сумма заказа: <OrderTotalSum/>\n                        </div>\n                        {(notEnough) ? <FlatButton\n                            label=\"Далее\"\n                            className={classes.actionButton}\n                            primary={true}\n                            onTouchTap={shortageDialog.handleOpenShortageDialog}/>\n\n                        : <FlatButton\n                            label=\"Оформить заказ\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"/>\n                        }\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\nOrderCreateDialog.propTyeps = {\n    products: PropTypes.array,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired,\n    shortageDialog: PropTypes.shape({\n        shortageLoading: PropTypes.bool.isRequired,\n        openShortageDialog: PropTypes.bool.isRequired,\n        handleOpenShortageDialog: PropTypes.func.isRequired,\n        handleCloseShortageDialog: PropTypes.func.isRequired\n    }).isRequired,\n    createClientDialog: PropTypes.shape({\n        createClientLoading: PropTypes.bool.isRequired,\n        openCreateClientDialog: PropTypes.bool.isRequired,\n        handleOpenCreateClientDialog: PropTypes.func.isRequired,\n        handleCloseCreateClientDialog: PropTypes.func.isRequired,\n        handleSubmitCreateClientDialog: PropTypes.func.isRequired\n    }).isRequired\n}\nOrderCreateDialog.defaultProps = {\n    isUpdate: false\n}\nexport default OrderCreateDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Order/OrderCreateDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose, withState} from 'recompose'\nimport injectSheet from 'react-jss'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport Paper from 'material-ui/Paper'\nimport Edit from 'material-ui/svg-icons/image/edit'\nimport Delete from 'material-ui/svg-icons/action/delete'\nimport OrderTransactionsDialog from './OrderTransactionsDialog'\nimport OrderReturnDialog from './OrderReturnDialog'\nimport OrderItemReturnDialog from './OrderItemReturnDialog'\nimport RightSide from './OrderDetailsRightSideTabs'\nimport IconButton from 'material-ui/IconButton'\nimport Return from 'material-ui/svg-icons/content/reply'\nimport PrintIcon from 'material-ui/svg-icons/action/print'\nimport ConfirmDialog from '../ConfirmDialog'\nimport Tooltip from '../ToolTip'\nimport moment from 'moment'\nimport numberFormat from '../../helpers/numberFormat'\nimport getConfig from '../../helpers/getConfig'\nimport StatRightSide from './OrderStatDetailsRightSide'\n\nconst ZERO = 0\n\nconst enhance = compose(\n    injectSheet({\n        dottedList: {\n            padding: '20px 0'\n        },\n        wrapper: {\n            color: '#333 !important',\n            width: '100%',\n            display: 'flex',\n            flexWrap: 'wrap',\n            transition: 'all 250ms ease-out',\n            maxHeight: '615px',\n            overflow: 'hidden'\n        },\n        link: {\n            extend: 'blue',\n            borderBottom: '1px dashed',\n            fontWeight: '600'\n        },\n        red: {\n            color: '#e57373 !important'\n        },\n        blue: {\n            color: '#12aaeb !important'\n        },\n        green: {\n            color: '#81c784 !important'\n        },\n        yellow: {\n            color: '#f0ad4e !important'\n        },\n        loader: {\n            width: '100%',\n            background: '#fff',\n            height: '200px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n        },\n        title: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            borderBottom: '1px #efefef solid',\n            alignItems: 'center',\n            width: '100%',\n            height: '65px',\n            padding: '0 30px',\n            position: 'relative'\n        },\n        titleLabel: {\n            fontSize: '18px',\n            color: '#333',\n            fontWeight: '600',\n            cursor: 'pointer'\n        },\n        closeDetail: {\n            position: 'absolute',\n            left: '0',\n            top: '0',\n            right: '0',\n            bottom: '0',\n            cursor: 'pointer',\n            zIndex: '1'\n        },\n        titleButtons: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            zIndex: '3'\n        },\n        content: {\n            display: 'flex',\n            width: '100%'\n        },\n        padding: {\n            padding: '20px 30px'\n        },\n        leftSide: {\n            width: '320px',\n            borderRight: '1px #efefef solid'\n        },\n        subBlock: {\n            padding: '15px 30px',\n            borderBottom: '1px #efefef solid',\n            '&:last-child': {\n                border: 'none'\n            }\n        },\n        subtitle: {\n            fontWeight: '600',\n            textTransform: 'uppercase',\n            marginBottom: '10px'\n        },\n        dataBox: {\n            '& li': {\n                display: 'flex',\n                flexWrap: 'wrap',\n                justifyContent: 'space-between',\n                lineHeight: '25px',\n                position: 'relative',\n                width: '100%',\n                '& span:last-child': {\n                    fontWeight: '600',\n                    textAlign: 'right'\n                },\n                '& a': {\n                    fontWeight: '600'\n                },\n                '& > div': {\n                    background: '#fff',\n                    position: 'absolute',\n                    padding: '15px 30px',\n                    left: 'calc(100% + 15px)',\n                    minWidth: '335px',\n                    zIndex: '-99',\n                    opacity: '0',\n                    top: '10px'\n                }\n            }\n        }\n    }),\n    withState('openInfo', 'setOpenInfo', false)\n)\n\nconst iconStyle = {\n    icon: {\n        color: '#666',\n        width: 20,\n        height: 20\n    },\n    button: {\n        width: 48,\n        height: 48,\n        padding: 0\n    }\n}\n\nconst OrderDetails = enhance((props) => {\n    const {classes,\n        loading,\n        data,\n        setOpenInfo,\n        openInfo,\n        transactionsDialog,\n        returnDialog,\n        returnListData,\n        returnDataLoading,\n        itemReturnDialog,\n        cancelOrderReturnDialog,\n        confirmDialog,\n        handleOpenUpdateDialog,\n        type,\n        tabData,\n        paymentData,\n        getDocument,\n        returnData,\n        handleCloseDetail\n    } = props\n\n    const id = _.get(data, 'id')\n    const contactName = _.get(data, ['contact', 'name'])\n    const contactEmail = _.get(data, ['contact', 'email']) || 'N/A'\n    const contactPhone = _.get(data, ['contact', 'telephone']) || 'N/A'\n    const market = _.get(data, ['market', 'name'])\n    const agent = _.get(data, ['user', 'firstName']) + ' ' + _.get(data, ['user', 'secondName'])\n    const dealType = _.get(data, 'dealType')\n\n    const client = _.get(data, ['client', 'name'])\n    const deliveryType = _.get(data, 'deliveryType')\n    const dateDelivery = moment(_.get(data, 'dateDelivery')).format('DD.MM.YYYY')\n    const createdDate = moment(_.get(data, 'createdDate')).format('DD.MM.YYYY')\n    const paymentDate = moment(_.get(data, 'paymentDate')).format('DD.MM.YYYY')\n    const returnAmount = _.toInteger(_.get(data, 'returnAmount'))\n\n    const REQUESTED = 0\n    const READY = 1\n    const GIVEN = 2\n    const DELIVERED = 3\n    const status = _.toInteger(_.get(data, 'status'))\n\n    const zero = 0\n    const deliveryPrice = _.toNumber(_.get(data, 'deliveryPrice'))\n    const totalPrice = _.toNumber(_.get(data, 'totalPrice'))\n    const totalPaid = _.toNumber(_.get(data, 'totalPaid'))\n    const paymentType = _.get(data, 'paymentType')\n    const totalBalance = _.get(data, 'totalBalance')\n\n    let productTotal = _.toNumber(zero)\n    _.map(_.get(data, 'products'), (item) => {\n        productTotal += _.toNumber(_.get(item, 'totalPrice'))\n    })\n    if (loading) {\n        return (\n            <div className={classes.wrapper} style={loading && {maxHeight: '200px'}}>\n                <div className={classes.loader}>\n                    <div>\n                        <CircularProgress size={40} thickness={4}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    const primaryCurrency = getConfig('PRIMARY_CURRENCY')\n    return (\n        <div className={classes.wrapper}>\n            {type && <div className={classes.title}>\n                <div className={classes.titleLabel}>Заказ №{id}</div>\n                <div className={classes.closeDetail}\n                     onClick={handleCloseDetail}>\n                </div>\n                <div className={classes.titleButtons}>\n                    <Tooltip position=\"bottom\" text=\"Добавить возврат\">\n                        <IconButton\n                            iconStyle={iconStyle.icon}\n                            style={iconStyle.button}\n                            touch={true}\n                            onTouchTap={returnDialog.handleOpenReturnDialog}>\n                            <Return />\n                        </IconButton>\n                    </Tooltip>\n                    <Tooltip position=\"bottom\" text=\"Распечатать накладную\">\n                        <IconButton\n                            iconStyle={iconStyle.icon}\n                            style={iconStyle.button}\n                            touch={true}\n                            onTouchTap={() => { getDocument.handleGetDocument(id) }}>\n                            <PrintIcon />\n                        </IconButton>\n                    </Tooltip>\n                    <Tooltip position=\"bottom\" text=\"Изменить\">\n                        <IconButton\n                            iconStyle={iconStyle.icon}\n                            style={iconStyle.button}\n                            touch={true}\n                            onTouchTap={handleOpenUpdateDialog}>\n                            <Edit />\n                        </IconButton>\n                    </Tooltip>\n                    <Tooltip position=\"bottom\" text=\"Отменить\">\n                        <IconButton\n                            iconStyle={iconStyle.icon}\n                            style={iconStyle.button}\n                            touch={true}\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(id) }}>\n                            <Delete />\n                        </IconButton>\n                    </Tooltip>\n                </div>\n            </div>}\n            <div className={classes.content}>\n                <div className={classes.leftSide}>\n                    <div className={classes.subBlock}>\n                        <div className={classes.dataBox}>\n                            <ul>\n                                <li onMouseEnter={() => { setOpenInfo(true) }}\n                                    onMouseLeave={() => {\n                                        if (openInfo) {\n                                            setOpenInfo(false)\n                                        }\n                                    }}>\n                                    <span>Клиент:</span>\n                                    <a><strong>{client}</strong></a>\n                                    <Paper zDepth={1} style={openInfo ? {opacity: '1', zIndex: '2', top: '0'} : {}}>\n                                        <li>\n                                            <span>Контактное лицо:</span>\n                                            <span>{contactName}</span>\n                                        </li>\n                                        <li>\n                                            <span>Телефон:</span>\n                                            <span>{contactPhone}</span>\n                                        </li>\n                                        <li>\n                                            <span>Email:</span>\n                                            <span>{contactEmail}</span>\n                                        </li>\n                                    </Paper>\n                                </li>\n\n                                <li>\n                                    <span>Магазин:</span>\n                                    <span>{market}</span>\n                                </li>\n                                <li>\n                                    <span>Инициатор:</span>\n                                    <span>{agent}</span>\n                                </li>\n                                <li>\n                                    <span>Дата создания</span>\n                                    <span>{createdDate}</span>\n                                </li>\n\n                                <li>\n                                    <span>Тип сделки:</span>\n                                    <span>{(dealType === '0') ? 'Стандартная' : 'Консигнация'}</span>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n\n                    <div className={classes.subBlock}>\n                        <div className={classes.subtitle}>Баланс</div>\n                        <div className={classes.dataBox}>\n                            <ul>\n                                <li>\n                                    <span>Дата ожидаемой оплаты:</span>\n                                    <span>{paymentDate}</span>\n                                </li>\n                                <li>\n                                    <span>Тип оплаты:</span>\n                                    <span>{(paymentType === '0') ? 'Наличными' : 'Перечислением'}</span>\n                                </li>\n                                <li>\n                                    <span>Стоимость товаров</span>\n                                    <span>{numberFormat(productTotal, primaryCurrency)}</span>\n                                </li>\n                                <li>\n                                    <span>Стоимость доставки:</span>\n                                    <span>{numberFormat(deliveryPrice)} {primaryCurrency}</span>\n                                </li>\n                                <li>\n                                    <span>ИТОГО</span>\n                                    <span>{numberFormat(totalPrice, primaryCurrency)}</span>\n                                </li>\n                                <li>\n                                    <span>Стоимость возвратов:</span>\n                                    <span>- {returnAmount && numberFormat(returnAmount, primaryCurrency)}</span>\n                                </li>\n                                <li>\n                                    <span>Оплачено:</span>\n                                    {(totalPaid !== zero && type) ? <span>\n                                        <a onClick={transactionsDialog.handleOpenTransactionsDialog} className={classes.link}>{numberFormat(totalPaid)} {primaryCurrency}</a>\n                                    </span>\n                                        : <span>{numberFormat(totalPaid)} {primaryCurrency}</span>}\n                                </li>\n                                <li>\n                                    <span>Остаток:</span>\n                                    <span className={totalBalance > zero ? classes.red : classes.green}>{numberFormat(totalBalance)} {primaryCurrency}</span>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n\n                    <div className={classes.subBlock}>\n                        <div className={classes.subtitle}>Исполнение</div>\n                        <div className={classes.dataBox}>\n                            <ul>\n                                <li>\n                                    <span>Текущий статус:</span>\n                                    {(status === REQUESTED) ? <span className={classes.yellow}>Запрос отправлен</span>\n                                        : (status === READY) ? <span className={classes.green}>Готов</span>\n                                            : (status === GIVEN) ? <span className={classes.yellow}>Передан доставщику</span>\n                                            : (status === DELIVERED) ? <span className={classes.green}>Доставлен</span>\n                                                : <span className={classes.red}>Отменен</span>\n                                    }\n                                </li>\n                                <li>\n                                    <span>Тип передачи:</span>\n                                    <span>{deliveryType > zero ? 'Доставка' : 'Самовывоз'}</span>\n                                </li>\n                                <li>\n                                    <span>Дата передачи:</span>\n                                    <span>{dateDelivery}</span>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n                {type &&\n                <RightSide\n                    data={data}\n                    tabData={tabData}\n                    itemReturnDialog={itemReturnDialog}\n                    returnData={returnData}\n                    returnDataLoading={returnDataLoading}\n                    cancelOrderReturnOpen={cancelOrderReturnDialog.handleOpenCancelOrderReturnDialog}\n                />}\n                {!type &&\n                <StatRightSide\n                    data={data}/>}\n            </div>\n            {type && <OrderTransactionsDialog\n                open={transactionsDialog.openTransactionsDialog}\n                loading={paymentData.paymentLoading}\n                onClose={transactionsDialog.handleCloseTransactionsDialog}\n                paymentData={paymentData}\n            />}\n            {type && <OrderReturnDialog\n                open={returnDialog.openReturnDialog}\n                loading={returnDialog.returnLoading}\n                onClose={returnDialog.handleCloseReturnDialog}\n                onSubmit={returnDialog.handleSubmitReturnDialog}\n                orderData={data}\n            />}\n            {type && <OrderItemReturnDialog\n                returnListData={returnListData}\n                open={itemReturnDialog.openOrderItemReturnDialog}\n                loading={itemReturnDialog.returnDialogLoading}\n                onClose={itemReturnDialog.handleCloseItemReturnDialog}\n            />}\n            {type && <ConfirmDialog\n                type=\"cancel\"\n                message={'Возврат № ' + cancelOrderReturnDialog.openCancelOrderReturnDialog}\n                onClose={cancelOrderReturnDialog.handleCloseCancelOrderReturnDialog}\n                onSubmit={cancelOrderReturnDialog.handleSubmitCancelOrderReturnDialog}\n                open={cancelOrderReturnDialog.openCancelOrderReturnDialog > ZERO}/>\n            }\n        </div>\n    )\n})\n\nOrderDetails.propTypes = {\n    paymentData: PropTypes.object,\n    returnListData: PropTypes.object,\n    tabData: PropTypes.shape({\n        tab: PropTypes.string,\n        handleTabChange: PropTypes.func\n    }),\n    data: PropTypes.object.isRequired,\n    returnData: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    returnDialog: PropTypes.shape({\n        returnLoading: PropTypes.bool,\n        openReturnDialog: PropTypes.bool,\n        handleOpenReturnDialog: PropTypes.func,\n        handleCloseReturnDialog: PropTypes.func\n    }),\n    itemReturnDialog: PropTypes.shape({\n        returnDialogLoading: PropTypes.bool,\n        openOrderItemReturnDialog: PropTypes.bool,\n        handleOpenItemReturnDialog: PropTypes.func,\n        handleCloseItemReturnDialog: PropTypes.func\n    }),\n    handleOpenUpdateDialog: PropTypes.func,\n    orderListData: PropTypes.object,\n    getDocument: PropTypes.shape({\n        handleGetDocument: PropTypes.func.isRequired\n    }),\n    returnDataLoading: PropTypes.bool,\n    cancelOrderReturnDialog: PropTypes.shape({\n        handleOpenCancelOrderReturnDialog: PropTypes.func.isRequired,\n        handleCloseCancelOrderReturnDialog: PropTypes.func.isRequired,\n        handleSubmitCancelOrderReturnDialog: PropTypes.func.isRequired,\n        openCancelOrderReturnDialog: PropTypes.number.isRequired\n    }).isRequired\n}\n\nexport default OrderDetails\n\n\n\n// WEBPACK FOOTER //\n// src/components/Order/OrderDetails.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose, withHandlers} from 'recompose'\nimport {reduxForm, Field} from 'redux-form'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {Link} from 'react-router'\nimport Paper from 'material-ui/Paper'\nimport IconButton from 'material-ui/IconButton'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\nimport DateToDateField from '../ReduxForm/Basic/DateToDateField'\nimport {ClientSearchField, MarketSearchField, UsersSearchField, DeptSearchField, ZoneSearchField} from '../ReduxForm'\nimport OrderStatusSearchField from '../ReduxForm/Order/OrderStatusSearchField'\nimport CloseIcon from '../CloseIcon'\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\n\nexport const ORDER_FILTER_OPEN = 'openFilterDialog'\n\nexport const ORDER_FILTER_KEY = {\n    CLIENT: 'client',\n    ORDERSTATUS: 'orderStatus',\n    SHOP: 'shop',\n    DEPT: 'dept',\n    INITIATOR: 'initiator',\n    DOST_DATE: 'dostDate',\n    CREATE_DATE: 'createDate',\n    FROM_DATE: 'fromDate',\n    DELIVERY_FROM_DATE: 'deliveryFromDate',\n    TO_DATE: 'fromDate',\n    DELIVERY_TO_DATE: 'deliveryToDate',\n    ZONE: 'zone'\n}\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            position: 'absolute',\n            minWidth: '300px',\n            background: '#fff',\n            zIndex: 99,\n            top: 0,\n            left: 0,\n            borderRadius: 0,\n            padding: '10px 20px 10px 20px'\n        },\n        afterFilter: {\n            alignItems: 'center',\n            display: 'flex',\n            backgroundColor: '#efefef',\n            position: 'relative',\n            padding: '16px 30px',\n            marginLeft: '-30px',\n            '& > div:nth-child(2)': {\n                position: 'absolute',\n                right: '0'\n            },\n            '& > div:nth-child(1)': {\n                color: '#666666'\n            },\n            '& button': {\n                borderLeft: '1px solid white !important'\n            }\n        },\n        icon: {\n            color: '#8f8f8f !important'\n        },\n        arrow: {\n            color: '#12aaeb',\n            paddingRight: '14px',\n            position: 'relative',\n            '& svg': {\n                position: 'absolute',\n                width: '13px !important',\n                height: '20px !important'\n            }\n        },\n        header: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            '& button': {\n                marginRight: '-12px !important'\n            }\n        },\n        title: {\n            fontSize: '15px',\n            color: '#5d6474'\n        },\n        submit: {\n            color: '#fff !important'\n        },\n        inputField: {\n            fontSize: '13px !important'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        inputDateCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            },\n            '& div:first-child': {\n                height: '45px !important'\n            },\n            '& div:first-child div:first-child': {\n                transform: 'translate(0px, 0px) !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'OrderFilterForm',\n        enableReinitialize: true\n    }),\n    withHandlers({\n        getCount: props => () => {\n            const {filter} = props\n            return _(ORDER_FILTER_KEY)\n                .values()\n                .filter(item => item !== ORDER_FILTER_KEY.FROM_DATE)\n                .filter(item => filter.getParam(item))\n                .value()\n                .length\n        }\n    })\n)\n\nconst OrderFilterForm = enhance((props) => {\n    const {classes, filterDialog, getCount} = props\n    const filterCounts = getCount()\n\n    if (!filterDialog.openFilterDialog) {\n        if (filterCounts) {\n            return (\n                <div className={classes.afterFilter}>\n                    <div>Фильтр: {filterCounts} элемента</div>\n                    <div>\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\n                            <BorderColorIcon color=\"#8f8f8f\" />\n                        </IconButton>\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\n                            <CloseIcon className={classes.icon}/>\n                        </IconButton>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <Link\n                    className={classes.arrow}\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\n                </Link>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <Paper className={classes.wrapper} zDepth={2}>\n                <div className={classes.header}>\n                    <span className={classes.title}>Фильтр</span>\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\n                        <CloseIcon className={classes.icon} />\n                    </IconButton>\n                </div>\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\n                    <div>\n                        <Field className={classes.inputFieldCustom} name=\"client\" component={ClientSearchField} label=\"Клиент\"/>\n                        <Field className={classes.inputFieldCustom} name=\"orderStatus\" component={OrderStatusSearchField} label=\"Статус\"/>\n                        <Field className={classes.inputFieldCustom} name=\"shop\" component={MarketSearchField} label=\"Магазин\"/>\n                        <Field className={classes.inputFieldCustom} name=\"initiator\" component={UsersSearchField} label=\"Инициатор \"/>\n                        <Field className={classes.inputFieldCustom} name=\"dept\" component={DeptSearchField} label=\"Оплаченный \"/>\n                        <Field className={classes.inputFieldCustom} name=\"zone\" component={ZoneSearchField} label=\"Зона\"/>\n                        <Field className={classes.inputDateCustom} name=\"data\" component={DateToDateField} label=\"Период создания\"/>\n                        <Field className={classes.inputDateCustom} name=\"deliveryDate\" component={DateToDateField} label=\"Дата доставки\"/>\n                    </div>\n\n                    <RaisedButton\n                        type=\"submit\"\n                        primary={true}\n                        buttonStyle={{color: '#fff'}}\n                        label=\"Применить\"\n                        style={{marginTop: '15px'}}>\n                    </RaisedButton>\n                </form>\n            </Paper>\n        </div>\n    )\n})\n\nOrderFilterForm.propTypes = {\n    filter: PropTypes.object.isRequired,\n    filterDialog: PropTypes.shape({\n        filterLoading: PropTypes.bool.isRequired,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    })\n}\n\nexport default OrderFilterForm\n\n\n\n// WEBPACK FOOTER //\n// src/components/Order/OrderFilterForm.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose, withReducer} from 'recompose'\nimport injectSheet from 'react-jss'\nimport {reduxForm} from 'redux-form'\nimport moment from 'moment'\nimport Dialog from 'material-ui/Dialog'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Row, Col} from 'react-flexbox-grid'\nimport IconButton from 'material-ui/IconButton'\nimport CloseIcon2 from '../CloseIcon2'\nimport MainStyles from '../Styles/MainStyles'\nimport numberFormat from '../../helpers/numberFormat'\nimport getConfig from '../../helpers/getConfig'\n\nexport const ORDER_ITEM_RETURN_DIALOG_OPEN = 'openOrderItemReturnDialog'\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        returnInfo: {\n            padding: '25px 0',\n            borderBottom: '1px #efefef solid',\n            '& span': {\n                display: 'block',\n                '&:first-child': {\n                    fontWeight: '600'\n                }\n            }\n        },\n        flex: {\n            alignItems: 'initial',\n            '& > div:first-child': {\n                maxWidth: '60%'\n            }\n        },\n        returnedItems: {\n            '& .dottedList': {\n                padding: '20px 0 !important'\n            },\n            padding: '10px 0 0',\n            '& .row': {\n                '& > div': {\n                    textAlign: 'left !important'\n                },\n                '&:after': {\n                    left: '0.5rem',\n                    right: '0.5rem'\n                },\n                '&:first-child': {\n                    fontWeight: '600'\n                },\n                '&:last-child:after': {\n                    position: 'static'\n                },\n                '& > div:nth-child(3)': {\n                    textAlign: 'right !important'\n                },\n                '& > div:nth-child(4)': {\n                    textAlign: 'right !important'\n                }\n            }\n        }\n    })),\n    reduxForm({\n        form: 'OrderCreateForm',\n        enableReinitialize: true\n    }),\n    withReducer('state', 'dispatch', (state, action) => {\n        return {...state, ...action}\n    }, {open: false}),\n)\n\nconst OrderItemReturnDialog = enhance((props) => {\n    const {open, loading, onClose, classes, returnListData} = props\n    const id = _.get(returnListData, 'id')\n    const date = moment(_.get(returnListData, 'createdDate')).format('DD.MM.YYYY')\n    const firstName = _.get(returnListData, ['createdBy', 'firstName'])\n    const secondName = _.get(returnListData, ['createdBy', 'secondName'])\n    const comment = _.get(returnListData, 'comment')\n    const totalPrice = numberFormat(_.get(returnListData, 'totalPrice'))\n    const productList = _.map(_.get(returnListData, 'returnedProducts'), (item) => {\n        const product = _.get(item, 'product')\n        const amount = _.get(item, 'amount')\n        const returnId = _.get(item, 'id')\n        return (\n            <Row key={returnId} className=\"dottedList\">\n                <Col xs={3}>{product}</Col>\n                <Col xs={3}>{amount}</Col>\n                <Col xs={3}>Цена</Col>\n                <Col xs={3}>{totalPrice}</Col>\n            </Row>\n        )\n    })\n    return (\n        <Dialog\n            modal={true}\n            contentStyle={loading ? {width: '300px'} : {width: '700px'}}\n            open={open}\n            onRequestClose={onClose}\n            bodyClassName={classes.popUp}\n            autoScrollBodyContent={true}>\n            <div className={classes.titleContent}>\n                <span>Возврат №{id}</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                {loading && <div className={classes.loader}>\n                    <CircularProgress size={40} thickness={4}/>\n                </div>}\n                <div className={classes.inContent} style={{minHeight: 'initial'}}>\n                    <div className={classes.field}>\n                        <div className={classes.returnInfo}>\n                            <div className={classes.flex} style={{justifyContent: 'space-between'}}>\n                                <div>\n                                    <span>Причина возврата</span>\n                                    <span>{comment}</span>\n                                </div>\n                                <div>Добавил: <span style={{fontWeight: '600'}}>{firstName} {secondName}</span></div>\n                            </div>\n                            <div style={{marginTop: '20px'}}>\n                                <span>Дата возврата</span>\n                                <span>{date}</span>\n                            </div>\n                        </div>\n                        <div className={classes.returnedItems}>\n                            <Row className=\"dottedList\">\n                                <Col xs={3}>Товар</Col>\n                                <Col xs={3}>Количество</Col>\n                                <Col xs={3}>Цена ({getConfig('PRIMARY_CURRENCY')})</Col>\n                                <Col xs={3}>Сумма ({getConfig('PRIMARY_CURRENCY')})</Col>\n                            </Row>\n                            {productList}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Dialog>\n    )\n})\nOrderItemReturnDialog.propTyeps = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired,\n    returnListData: PropTypes.object\n}\nexport default OrderItemReturnDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Order/OrderItemReturnDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose, withReducer} from 'recompose'\nimport injectSheet from 'react-jss'\nimport {Field, Fields, reduxForm, SubmissionError} from 'redux-form'\nimport Dialog from 'material-ui/Dialog'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport IconButton from 'material-ui/IconButton'\nimport FlatButton from 'material-ui/FlatButton'\nimport CloseIcon2 from '../CloseIcon2'\nimport {TextField, OrderListReturnField, StockSearchField} from '../ReduxForm'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport OrderReturnTotalSum from '../ReduxForm/Order/OrderReturnTotalSum'\n\nexport const ORDER_RETURN_DIALOG_OPEN = 'openReturnDialog'\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    throw new SubmissionError({\n        ...errors,\n        _error: nonFieldErrors\n    })\n}\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            justifyContent: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        popUp: {\n            overflowY: 'hidden !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            overflowX: 'hidden',\n            height: '100%',\n            minHeight: '600px'\n        },\n        titleContent: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '20px 30px',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                padding: '0 !important',\n                position: 'absolute !important'\n            }\n        },\n        inContent: {\n            display: 'flex',\n            color: '#333'\n        },\n        innerWrap: {\n            overflow: 'auto'\n        },\n        bodyContent: {\n            color: '#333',\n            width: '100%'\n        },\n        form: {\n            position: 'relative'\n        },\n        field: {\n            maxWidth: '70%',\n            flexBasis: '30%'\n\n        },\n        left: {\n            flexBasis: '30%',\n            padding: '15px 30px',\n            borderRight: '1px #efefef solid'\n        },\n        title: {\n            display: 'flex',\n            alignItems: 'center',\n            height: '40px',\n            fontWeight: '600'\n        },\n        right: {\n            flexBasis: '65%',\n            maxWidth: '55%',\n            padding: '15px 30px'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            width: '100%',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        selectContent: {\n            marginTop: '-15px'\n        },\n        radioButton: {\n            marginTop: '10px',\n            '&>div': {\n                marginBottom: '10px'\n            }\n        },\n        condition: {\n            marginTop: '20px',\n            '&>div:first-child': {\n                marginBottom: '-20px'\n            }\n        },\n        commentField: {\n            fontSize: '16px',\n            padding: '20px 30px',\n            textAlign: 'right',\n            borderTop: '1px #efefef solid'\n        },\n        returnComment: {\n            fontSize: '13px !important',\n            margin: '-20px 0 20px',\n            position: 'relative',\n            '& label': {\n                left: '0'\n            }\n        },\n        bottomButton: {\n            bottom: '0',\n            left: '0',\n            right: '0',\n            padding: '10px',\n            zIndex: '999',\n            borderTop: '1px solid #efefef',\n            background: '#fff',\n            textAlign: 'right',\n            '& span': {\n                fontSize: '13px !important',\n                fontWeight: '600 !important',\n                color: '#129fdd',\n                verticalAlign: 'inherit !important'\n            }\n        },\n        actionButton: {\n            fontSize: '13px !important',\n            margin: '0 !important'\n        },\n        podlojkaScroll: {\n            overflowY: 'auto !important',\n            padding: '0 !important'\n        },\n        rightOrderPart: {\n            flexBasis: '70%',\n            maxWidth: '70%',\n            padding: '20px 30px'\n        },\n        leftOrderPart: {\n            flexBasis: '30%',\n            padding: '20px 30px',\n            borderRight: '1px #efefef solid'\n        }\n    }),\n    reduxForm({\n        form: 'OrderReturnForm',\n        enableReinitialize: true\n    }),\n    withReducer('state', 'dispatch', (state, action) => {\n        return {...state, ...action}\n    }, {open: false}),\n)\n\nconst OrderReturnDialog = enhance((props) => {\n    const {open, loading, handleSubmit, onClose, classes, orderData} = props\n    const returnId = _.get(orderData, 'id')\n\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n    return (\n        <Dialog\n            modal={true}\n            contentStyle={loading ? {width: '500px'} : {width: '900px', maxWidth: 'unset'}}\n            className={classes.podlojkaScroll}\n            open={open}\n            onRequestClose={onClose}\n            bodyClassName={classes.popUp}\n            autoScrollBodyContent={true}>\n            <div className={classes.titleContent}>\n                <span>Возврат товаров заказа №{returnId}</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} scrolling=\"auto\" className={classes.form}>\n                    <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4}/>\n                    </div>\n                    <div className={classes.innerWrap}>\n                        <div className={classes.inContent}>\n                            <div className={classes.leftOrderPart}>\n                                <Field\n                                    component={StockSearchField}\n                                    className={classes.inputFieldCustom}\n                                    label=\"Cклад\"\n                                    fullWidth={true}\n                                    name=\"stock\"/>\n                                <Field\n                                    name=\"comment\"\n                                    component={TextField}\n                                    className={classes.returnComment}\n                                    label=\"Комментарий к возврату\"\n                                    fullWidth={true}\n                                    multiLine={true}\n                                    rows={2}\n                                    rowsMax={3}/>\n                            </div>\n                            <div className={classes.rightOrderPart}>\n                                <Fields\n                                    names={['returned_products', 'product', 'amount', 'cost']}\n                                    component={OrderListReturnField}\n                                    orderData={orderData}\n                                />\n                                <div>Общая сумма возврата: <OrderReturnTotalSum/></div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Возврат\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\nOrderReturnDialog.propTyeps = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired,\n    orderData: PropTypes.object.isRequired\n}\nexport default OrderReturnDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Order/OrderReturnDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose, withReducer} from 'recompose'\nimport injectSheet from 'react-jss'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport Dialog from 'material-ui/Dialog'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport IconButton from 'material-ui/IconButton'\nimport FlatButton from 'material-ui/FlatButton'\nimport CloseIcon2 from '../CloseIcon2'\nimport {DateField} from '../ReduxForm'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {Col} from 'react-flexbox-grid'\nimport numberFormat from '../../helpers/numberFormat'\n\nexport const ORDER_SHORTAGE_DIALOG_OPEN = 'openShortageDialog'\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    throw new SubmissionError({\n        ...errors,\n        _error: nonFieldErrors\n    })\n}\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            justifyContent: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        popUp: {\n            overflowY: 'hidden !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            overflowX: 'hidden',\n            height: '100%'\n        },\n        titleContent: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '20px 30px',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                padding: '0 !important',\n                position: 'absolute !important'\n            }\n        },\n        inContent: {\n            display: 'flex',\n            color: '#333',\n            padding: '15px 30px 0',\n            borderBottom: '1px #efefef solid'\n        },\n        innerWrap: {\n            maxHeight: '50vh',\n            overflow: 'auto'\n        },\n        bodyContent: {\n            color: '#333',\n            width: '100%'\n        },\n        form: {\n            position: 'relative',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            padding: '10px'\n        },\n        field: {\n            width: '100%'\n        },\n        title: {\n            display: 'flex',\n            alignItems: 'center',\n            height: '40px',\n            fontWeight: '600'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        bottomButton: {\n            bottom: '0'\n        },\n        actionButton: {\n            fontSize: '13px !important',\n            margin: '0 !important'\n        },\n        modalListTable: {\n            width: '100%',\n            '& li': {\n                margin: '0',\n                padding: '10px 0',\n                display: 'flex',\n                alignItems: 'center',\n                position: 'relative',\n                '& div:first-child': {\n                    paddingLeft: '0'\n                },\n                '& div:last-child': {\n                    paddingRight: '0'\n                },\n                '& div div:last-child': {\n                    display: 'inline-block'\n                }\n            },\n            '& .dottedList:last-child:after': {\n                content: '\"\"',\n                backgroundImage: 'none'\n            },\n            '& .dottedList input': {\n                fontSize: '13px !important'\n            },\n            '& .dottedList:last-child': {\n                marginBottom: '20px'\n            }\n        },\n        specialModalButton: {\n            '& span': {\n                color: '#12aaeb !important',\n                fontWeight: '600 !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'OrderCreateForm',\n        enableReinitialize: true\n    }),\n    withReducer('state', 'dispatch', (state, action) => {\n        return {...state, ...action}\n    }, {open: false})\n)\nconst ZERO = 0\nconst OrderShortageDialog = enhance((props) => {\n    const {open, loading, handleSubmit, onClose, classes, products} = props\n    const productsList = _.map(products, (item, index) => {\n        const name = _.get(item, ['product', 'text'])\n        const shortage = _.get(item, 'amount') - _.get(item, ['extra', 'balance'])\n        const firstname = _.get(item, ['extra', 'supply_manager', 'first_name'])\n        const lastname = _.get(item, ['extra', 'supply_manager', 'second_name'])\n\n        if (shortage > ZERO) {\n            return (\n                <li key={index} className=\"dottedList\">\n                    <Col xs={6}>{name}</Col>\n                    <Col xs={3}>{numberFormat(shortage)}</Col>\n                    <Col xs={3}>{firstname} {lastname}</Col>\n                </li>\n            )\n        }\n        return (null)\n    })\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n    return (\n        <Dialog\n            modal={true}\n            contentStyle={loading ? {width: '300px'} : {width: '800px'}}\n            open={open}\n            onRequestClose={onClose}\n            bodyClassName={classes.popUp}\n            autoScrollBodyContent={true}>\n            <div className={classes.titleContent}>\n                <span>Добавление заказа / недостающие товары</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <div className={classes.loader}>\n                    <CircularProgress size={40} thickness={4}/>\n                </div>\n                <div className={classes.innerWrap}>\n                    <div className={classes.inContent}>\n                        <ul className={classes.modalListTable}>\n                            <li className=\"dottedList\">\n                                <Col xs={6}>\n                                    <strong>Наименование</strong>\n                                </Col>\n                                <Col xs={3}>\n                                    <strong>Недостоющее кол-во</strong>\n                                </Col>\n                                <Col xs={3}>\n                                    <strong>Исполнитель</strong>\n                                </Col>\n                            </li>\n                            {productsList}\n                        </ul>\n                    </div>\n\n                    <form onSubmit={onSubmit} scrolling=\"auto\" className={classes.form}>\n                        <Field\n                            name=\"request_dedline\"\n                            component={DateField}\n                            className={classes.inputFieldCustom}\n                            hintText=\"Срок запроса\"\n                            fullWidth={true}/>\n                        <div className={classes.specialModalButton}>\n                            <FlatButton\n                                label=\"Передать запрос на подготовку\"\n                                className={classes.actionButton}\n                                primary={true}\n                                type=\"submit\"\n                            />\n                        </div>\n                    </form>\n\n                </div>\n            </div>\n        </Dialog>\n    )\n})\n\nOrderShortageDialog.propTyeps = {\n    products: PropTypes.array\n}\nexport default OrderShortageDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Order/OrderShortage.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose, withReducer} from 'recompose'\nimport injectSheet from 'react-jss'\nimport {reduxForm} from 'redux-form'\nimport Dialog from 'material-ui/Dialog'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Row, Col} from 'react-flexbox-grid'\nimport IconButton from 'material-ui/IconButton'\nimport CloseIcon2 from '../CloseIcon2'\nimport numberFormat from '../../helpers/numberFormat'\nimport moment from 'moment'\nimport noPayment from '../Images/noPayment.png'\nimport dateFormat from '../../helpers/dateFormat'\nimport getConfig from '../../helpers/getConfig'\n\nexport const ORDER_TRANSACTIONS_DIALOG_OPEN = 'openTransactionsDialog'\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            width: '100%',\n            height: '100px',\n            display: 'flex',\n            background: '#fff',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center'\n        },\n        transactions: {\n            padding: '10px 0 0',\n            '& .row': {\n                '& > div': {\n                    textAlign: 'left !important'\n                },\n                '&:after': {\n                    left: '0.5rem',\n                    right: '0.5rem'\n                },\n                '&:first-child': {\n                    fontWeight: '600'\n                },\n                '&:last-child:after': {\n                    position: 'static'\n                },\n                '& > div:nth-child(3)': {\n                    textAlign: 'right !important'\n                },\n                '& > div:nth-child(4)': {\n                    textAlign: 'right !important'\n                },\n                '& > div:nth-child(5)': {\n                    textAlign: 'right !important'\n                }\n            }\n        },\n        popUp: {\n            color: '#333 !important',\n            overflowY: 'hidden !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            overflowX: 'hidden',\n            height: '100%'\n        },\n        titleContent: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '20px 30px',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                padding: '0 !important',\n                position: 'absolute !important'\n            }\n        },\n        inContent: {\n            display: 'flex',\n            maxHeight: '50vh',\n            overflow: 'auto',\n            padding: '0 30px',\n            color: '#333'\n        },\n        noPayment: {\n            background: 'url(' + noPayment + ') no-repeat center 70px',\n            backgroundSize: '270px',\n            height: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            paddingTop: '25px',\n            '& > div': {\n                marginTop: '140px',\n                fontSize: '15px',\n                width: '50%',\n                textAlign: 'center'\n            }\n        },\n        field: {\n            width: '100%'\n        },\n        bodyContent: {\n            width: '100%'\n        }\n    }),\n    reduxForm({\n        form: 'OrderCreateForm',\n        enableReinitialize: true\n    }),\n    withReducer('state', 'dispatch', (state, action) => {\n        return {...state, ...action}\n    }, {open: false}),\n)\n\nconst OrderTransactionsDialog = enhance((props) => {\n    const {open, loading, onClose, classes, paymentData} = props\n    const orderId = _.get(paymentData, 'id')\n    const data = _.get(paymentData, ['data', 'results'])\n    return (\n        <Dialog\n            modal={true}\n            contentStyle={loading ? {width: '500px'} : {width: '900px', maxWidth: 'none'}}\n            open={open}\n            onRequestClose={onClose}\n            bodyClassName={classes.popUp}\n            autoScrollBodyContent={true}>\n            <div className={classes.titleContent}>\n                <span>Список оплат по заказу №{orderId}</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n\n            <div className={classes.bodyContent}>\n                {loading ? <div className={classes.loader}>\n                    <CircularProgress size={40} thickness={4}/>\n                </div>\n                : <div className={classes.inContent}>\n                        <div className={classes.field}>\n                            {data ? <div className={classes.transactions}>\n                                <Row className=\"dottedList\">\n                                    <Col xs={3}>Кто</Col>\n                                    <Col xs={2}>Касса</Col>\n                                    <Col xs={2}>Дата</Col>\n                                    <Col xs={2}>Сумма оплаты</Col>\n                                    <Col xs={3}>Во внутренней валюте</Col>\n                                </Row>\n                                {_.map(data, (item, index) => {\n                                    const whoFirst = _.get(item, ['clientTransaction', 'user', 'firstName'])\n                                    const whoSecond = _.get(item, ['clientTransaction', 'user', 'secondName'])\n                                    const who = whoFirst + ' ' + whoSecond\n                                    const currency = _.get(item, ['clientTransaction', 'currency', 'name'])\n                                    const cashbox = _.get(item, ['clientTransaction', 'transaction']) || 'Не принято'\n\n                                    const payDate = dateFormat(_.get(item, ['clientTransaction', 'createdDate'])) + moment(_.get(item, ['clientTransaction', 'createdDate'])).format(' HH:MM')\n                                    const amount = numberFormat(_.get(item, ['clientTransaction', 'amount']), currency)\n                                    const internal = numberFormat(_.get(item, ['clientTransaction', 'internal']), getConfig('PRIMARY_CURRENCY'))\n\n                                    return (\n                                        <Row key={index} className=\"dottedList\">\n                                            <Col xs={3}>{(whoFirst && whoSecond) ? who : 'Списано со счета'}</Col>\n                                            <Col xs={2}>{cashbox}</Col>\n                                            <Col xs={2}>{payDate}</Col>\n                                            <Col xs={2}>{amount}</Col>\n                                            <Col xs={3}>{internal}</Col>\n                                        </Row>\n                                    )\n                                })}\n                            </div>\n                                : <div className={classes.noPayment}>\n                                    <div>По данному заказу еще не произведено оплат</div>\n                                </div>}\n                        </div>\n                    </div>\n                }\n            </div>\n        </Dialog>\n    )\n})\nOrderTransactionsDialog.propTyeps = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired,\n    paymentData: PropTypes.object\n}\nexport default OrderTransactionsDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Order/OrderTransactionsDialog.js","import OrderGridList from './OrderGridList'\nimport {ORDER_CREATE_DIALOG_OPEN} from './OrderCreateDialog'\nimport {ORDER_TRANSACTIONS_DIALOG_OPEN} from './OrderTransactionsDialog'\nimport {ORDER_RETURN_DIALOG_OPEN} from './OrderReturnDialog'\nimport {ORDER_SHORTAGE_DIALOG_OPEN} from './OrderShortage'\nimport {ORDER_FILTER_KEY, ORDER_FILTER_OPEN} from './OrderFilterForm'\nimport {ORDER_ITEM_RETURN_DIALOG_OPEN} from './OrderItemReturnDialog'\nimport OrderPrint from './OrderPrint'\n\nconst ORDER_DELETE_DIALOG_OPEN = 'openDeleteDialog'\nconst ORDER_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nconst TAB = 'tab'\n\nexport {\n    ORDER_CREATE_DIALOG_OPEN,\n    ORDER_DELETE_DIALOG_OPEN,\n    ORDER_FILTER_KEY,\n    ORDER_FILTER_OPEN,\n    ORDER_TRANSACTIONS_DIALOG_OPEN,\n    ORDER_ITEM_RETURN_DIALOG_OPEN,\n    ORDER_RETURN_DIALOG_OPEN,\n    ORDER_SHORTAGE_DIALOG_OPEN,\n    ORDER_UPDATE_DIALOG_OPEN,\n    OrderGridList,\n    OrderPrint,\n    TAB\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Order/index.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose, withHandlers} from 'recompose'\nimport {reduxForm, Field} from 'redux-form'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {Link} from 'react-router'\nimport Paper from 'material-ui/Paper'\nimport IconButton from 'material-ui/IconButton'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\nimport DateToDateField from '../ReduxForm/Basic/DateToDateField'\n\nimport CloseIcon from '../CloseIcon'\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\n\nexport const PENDING_EXPENSES_FILTER_OPEN = 'openFilterDialog'\n\nexport const PENDING_EXPENSES_FILTER_KEY = {\n    FROM_DATE: 'fromDate',\n    TO_DATE: 'toDate'\n}\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            position: 'absolute',\n            minWidth: '300px',\n            background: '#fff',\n            zIndex: 99,\n            top: 0,\n            left: 0,\n            borderRadius: 0,\n            padding: '10px 20px 10px 20px'\n        },\n        afterFilter: {\n            alignItems: 'center',\n            display: 'flex',\n            backgroundColor: '#efefef',\n            position: 'relative',\n            padding: '16px 30px',\n            marginLeft: '-30px',\n            '& > div:nth-child(2)': {\n                position: 'absolute',\n                right: '0'\n            },\n            '& > div:nth-child(1)': {\n                color: '#666666'\n            },\n            '& button': {\n                borderLeft: '1px solid white !important'\n            }\n        },\n        icon: {\n            color: '#8f8f8f !important'\n        },\n        arrow: {\n            color: '#12aaeb',\n            paddingRight: '14px',\n            position: 'relative',\n            '& svg': {\n                position: 'absolute',\n                width: '13px !important',\n                height: '20px !important'\n            }\n        },\n        header: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            '& button': {\n                marginRight: '-12px !important'\n            }\n        },\n        title: {\n            fontSize: '15px',\n            color: '#5d6474'\n        },\n        submit: {\n            color: '#fff !important'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'PendingExpensesFilterForm',\n        enableReinitialize: true\n    }),\n    withHandlers({\n        getCount: props => () => {\n            const {filter} = props\n            return _(PENDING_EXPENSES_FILTER_KEY)\n                .values()\n                .filter(item => item !== PENDING_EXPENSES_FILTER_KEY.FROM_DATE)\n                .filter(item => filter.getParam(item))\n                .value()\n                .length\n        }\n    })\n)\n\nconst PendingExpensesFilterForm = enhance((props) => {\n    const {classes, filterDialog, getCount} = props\n    const filterCounts = getCount()\n\n    if (!filterDialog.openFilterDialog) {\n        if (filterCounts) {\n            return (\n                <div className={classes.afterFilter}>\n                    <div>Фильтр: {filterCounts} элемента</div>\n                    <div>\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\n                            <BorderColorIcon color=\"#8f8f8f\" />\n                        </IconButton>\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\n                            <CloseIcon className={classes.icon}/>\n                        </IconButton>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <Link\n                    className={classes.arrow}\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\n                </Link>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <Paper className={classes.wrapper} zDepth={2}>\n                <div className={classes.header}>\n                    <span className={classes.title}>Фильтр</span>\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\n                        <CloseIcon className={classes.icon} />\n                    </IconButton>\n                </div>\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\n                    <div>\n                        <Field className={classes.inputFieldCustom} name=\"date\" component={DateToDateField} label=\"Диапазон дат\" fullWidth={true}/>\n                    </div>\n                    <RaisedButton\n                        type=\"submit\"\n                        primary={true}\n                        buttonStyle={{color: '#fff'}}\n                        label=\"Применить\"\n                        style={{marginTop: '15px'}}>\n                    </RaisedButton>\n                </form>\n            </Paper>\n        </div>\n    )\n})\n\nPendingExpensesFilterForm.propTypes = {\n    filter: PropTypes.object.isRequired,\n    filterDialog: PropTypes.shape({\n        filterLoading: PropTypes.bool.isRequired,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    })\n}\n\nexport default PendingExpensesFilterForm\n\n\n\n// WEBPACK FOOTER //\n// src/components/PendingExpenses/PendingExpensesFilterForm.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {TextField, CashboxCustomField, normalizeNumber} from '../ReduxForm'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport MainStyles from '../Styles/MainStyles'\nimport numberformat from '../../helpers/numberFormat'\nimport CashboxCurrencyField from '../ReduxForm/CashboxCurrencyField'\nimport PendingPaymentRadioButton from '../ReduxForm/PendingPaymentRadioButton'\nimport getConfig from '../../helpers/getConfig'\n\nexport const PENDING_PAYMENTS_CREATE_DIALOG_OPEN = 'openCreateDialog'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        info: {\n            padding: '20px 0'\n        },\n        infoHeader: {\n            fontWeight: '600',\n            lineHeight: '20px'\n        },\n        infoSummary: {\n            color: '#666',\n            marginTop: '10px'\n        },\n        inContent: {\n            maxHeight: '52vh'\n        }\n    })),\n    reduxForm({\n        form: 'PendingPaymentsCreateForm',\n        enableReinitialize: true\n    })\n)\n\nconst PendingPaymentsCreateDialog = enhance((props) => {\n    const {open, loading, handleSubmit, onClose, detailData, classes} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n    const ONE = 1\n    const id = _.get(detailData, 'id')\n    const client = _.get(detailData, ['data', 'client'])\n    const marketName = _.get(detailData, ['data', 'market', 'name'])\n    const paymentType = (Number(_.get(detailData, ['data', 'paymentType'])) === ONE) ? 'банковский счет' : 'наличный'\n    const totalBalance = numberformat(_.get(detailData, ['data', 'totalBalance']), getConfig('PRIMARY_CURRENCY'))\n    const totalPrice = numberformat(_.get(detailData, ['data', 'totalPrice']), getConfig('PRIMARY_CURRENCY'))\n    const clientName = _.get(client, 'name')\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '300px'} : {width: '350px'}}\n            bodyStyle={{minHeight: 'auto'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>Оплата</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} className={classes.form}>\n                    <div className={classes.inContent} style={{minHeight: '220px'}}>\n                        <div className={classes.loader}>\n                            <CircularProgress size={40} thickness={4}/>\n                        </div>\n                        <div className={classes.field}>\n                            <div className={classes.info}>\n                                <div className={classes.infoHeader}>\n                                    <div><span className={classes.infoSummary}>Клиент:</span> {clientName}</div>\n                                    <div><span className={classes.infoSummary}>Магазин:</span> {marketName}</div>\n                                    <div><span className={classes.infoSummary}>Заказ №:</span> {id}</div>\n                                    <div><span className={classes.infoSummary}>Тип оплаты:</span> {paymentType}</div>\n                                </div>\n                                <div className={classes.infoSummary}>\n                                    <div>Сумма заказа:<span style={{marginLeft: '10px'}}>{totalPrice}</span></div>\n                                    <div>Остаток:<span style={{marginLeft: '10px'}}>{totalBalance}</span></div>\n                                </div>\n                            </div>\n                            <div className={classes.cashbox}>\n                                <Field\n                                    name=\"cashbox\"\n                                    className={classes.inputFieldCustom}\n                                    component={CashboxCustomField}\n                                    label=\"Касса получатель\"\n                                    fullWidth={true}\n                                />\n                                <div className={classes.flex}>\n                                    <Field\n                                        name=\"amount\"\n                                        className={classes.inputFieldCustom}\n                                        component={TextField}\n                                        label=\"Сумма\"\n                                        value={null}\n                                        normalize={normalizeNumber}\n                                        fullWidth={true}\n                                    />\n                                    <CashboxCurrencyField/>\n                                </div>\n                                <Field\n                                    name=\"now\"\n                                    style={{marginTop: '10px'}}\n                                    component={PendingPaymentRadioButton}\n                                    label=\"Текущий курс\"\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\n\nPendingPaymentsCreateDialog.propTyeps = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\n\nexport default PendingPaymentsCreateDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/PendingPayments/PendingPaymentsCreateDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose, withHandlers} from 'recompose'\nimport {reduxForm, Field} from 'redux-form'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {Link} from 'react-router'\nimport Paper from 'material-ui/Paper'\nimport IconButton from 'material-ui/IconButton'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\nimport {\n    PaymentTypeSearchField,\n    MarketSearchField,\n    ClientSearchField,\n    DateToDateField\n} from '../ReduxForm'\n\nimport CloseIcon from '../CloseIcon'\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\n\nexport const PENDING_PAYMENTS_FILTER_OPEN = 'openFilterDialog'\n\nexport const PENDING_PAYMENTS_FILTER_KEY = {\n    FROM_DATE: 'fromDate',\n    TO_DATE: 'toDate',\n    CLIENT: 'client',\n    MARKET: 'market',\n    PAYMENT_TYPE: 'paymentType'\n}\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            position: 'absolute',\n            minWidth: '300px',\n            background: '#fff',\n            zIndex: 99,\n            top: 0,\n            left: 0,\n            borderRadius: 0,\n            padding: '10px 20px 10px 20px'\n        },\n        afterFilter: {\n            alignItems: 'center',\n            display: 'flex',\n            backgroundColor: '#efefef',\n            position: 'relative',\n            padding: '16px 30px',\n            marginLeft: '-30px',\n            '& > div:nth-child(2)': {\n                position: 'absolute',\n                right: '0'\n            },\n            '& > div:nth-child(1)': {\n                color: '#666666'\n            },\n            '& button': {\n                borderLeft: '1px solid white !important'\n            }\n        },\n        icon: {\n            color: '#8f8f8f !important'\n        },\n        arrow: {\n            color: '#12aaeb',\n            paddingRight: '14px',\n            position: 'relative',\n            '& svg': {\n                position: 'absolute',\n                width: '13px !important',\n                height: '20px !important'\n            }\n        },\n        header: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            '& button': {\n                marginRight: '-12px !important'\n            }\n        },\n        title: {\n            fontSize: '15px',\n            color: '#5d6474'\n        },\n        submit: {\n            color: '#fff !important'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'PendingPaymentsFilterForm',\n        enableReinitialize: true\n    }),\n    withHandlers({\n        getCount: props => () => {\n            const {filter} = props\n            return _(PENDING_PAYMENTS_FILTER_KEY)\n                .values()\n                .filter(item => item !== PENDING_PAYMENTS_FILTER_KEY.FROM_DATE)\n                .filter(item => filter.getParam(item))\n                .value()\n                .length\n        }\n    })\n)\n\nconst PendingPaymentsFilterForm = enhance((props) => {\n    const {classes, filterDialog, getCount} = props\n    const filterCounts = getCount()\n\n    if (!filterDialog.openFilterDialog) {\n        if (filterCounts) {\n            return (\n                <div className={classes.afterFilter}>\n                    <div>Фильтр: {filterCounts} элемента</div>\n                    <div>\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\n                            <BorderColorIcon color=\"#8f8f8f\" />\n                        </IconButton>\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\n                            <CloseIcon className={classes.icon}/>\n                        </IconButton>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <Link\n                    className={classes.arrow}\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\n                </Link>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <Paper className={classes.wrapper} zDepth={2}>\n                <div className={classes.header}>\n                    <span className={classes.title}>Фильтр</span>\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\n                        <CloseIcon className={classes.icon} />\n                    </IconButton>\n                </div>\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\n                    <div>\n                        <Field\n                            className={classes.inputFieldCustom}\n                            name=\"market\"\n                            component={MarketSearchField}\n                            label=\"Магазин\"\n                            fullWidth={true}/>\n                    </div>\n                    <div>\n                        <Field\n                            className={classes.inputFieldCustom}\n                            name=\"client\"\n                            component={ClientSearchField}\n                            label=\"Клиент\"\n                            fullWidth={true}/>\n                    </div>\n                    <div>\n                        <Field\n                            className={classes.inputFieldCustom}\n                            name=\"paymentType\"\n                            component={PaymentTypeSearchField}\n                            label=\"Тип оплаты\"\n                            fullWidth={true}/>\n                    </div>\n                    <div>\n                        <Field\n                            className={classes.inputFieldCustom}\n                            name=\"date\"\n                            component={DateToDateField}\n                            label=\"Диапазон дат\"\n                            fullWidth={true}/>\n                    </div>\n                    <RaisedButton\n                        type=\"submit\"\n                        primary={true}\n                        buttonStyle={{color: '#fff'}}\n                        label=\"Применить\"\n                        style={{marginTop: '15px'}}>\n                    </RaisedButton>\n                </form>\n            </Paper>\n        </div>\n    )\n})\n\nPendingPaymentsFilterForm.propTypes = {\n    filter: PropTypes.object.isRequired,\n    filterDialog: PropTypes.shape({\n        filterLoading: PropTypes.bool.isRequired,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    })\n}\n\nexport default PendingPaymentsFilterForm\n\n\n\n// WEBPACK FOOTER //\n// src/components/PendingPayments/PendingPaymentsFilterForm.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {TextField} from '../ReduxForm'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport MainStyles from '../Styles/MainStyles'\nexport const POSITION_CREATE_DIALOG_OPEN = 'openCreateDialog'\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        }\n    })),\n    reduxForm({\n        form: 'PositionCreateForm',\n        enableReinitialize: true\n    })\n)\nconst PositionCreateDialog = enhance((props) => {\n    const {open, loading, handleSubmit, onClose, classes, isUpdate} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\n            bodyStyle={{minHeight: '100px !important'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>{isUpdate ? 'Изменить группу' : 'Добавить группу'}</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} className={classes.form} style={{minHeight: 'auto'}}>\n                    <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4}/>\n                    </div>\n                    <div className={classes.inContent} style={{minHeight: '120px', paddingTop: '15px'}}>\n                        <div className={classes.field}>\n                            <Field\n                                name=\"name\"\n                                component={TextField}\n                                className={classes.inputFieldCustom}\n                                label=\"Наименование\"\n                                fullWidth={true}\n                            />\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\nPositionCreateDialog.propTypes = {\n    isUpdate: PropTypes.bool,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\nPositionCreateDialog.defaultProps = {\n    isUpdate: false\n}\nexport default PositionCreateDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Position/PositionCreateDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose, withHandlers} from 'recompose'\nimport {reduxForm, Field} from 'redux-form'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {Link} from 'react-router'\nimport Paper from 'material-ui/Paper'\nimport IconButton from 'material-ui/IconButton'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\nimport {BrandSearchField, MeasurementSearchField} from '../ReduxForm'\nimport ProductTypeSerachField from '../ReduxForm/Product/ProductTypeSearchField'\nimport CloseIcon from '../CloseIcon'\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\n\nexport const PRICE_FILTER_OPEN = 'openFilterDialog'\n\nexport const PRICE_FILTER_KEY = {\n    BRAND: 'brand',\n    TYPE: 'type',\n    MEASUREMENT: 'measurement'\n}\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            position: 'absolute',\n            minWidth: '300px',\n            background: '#fff',\n            zIndex: 99,\n            top: 0,\n            left: 0,\n            borderRadius: 0,\n            padding: '10px 20px 10px 20px'\n        },\n        afterFilter: {\n            alignItems: 'center',\n            display: 'flex',\n            backgroundColor: '#efefef',\n            position: 'relative',\n            padding: '16px 30px',\n            marginLeft: '-30px',\n            '& > div:nth-child(2)': {\n                position: 'absolute',\n                right: '0'\n            },\n            '& > div:nth-child(1)': {\n                color: '#666666'\n            },\n            '& button': {\n                borderLeft: '1px solid white !important'\n            }\n        },\n        icon: {\n            color: '#8f8f8f !important'\n        },\n        arrow: {\n            color: '#12aaeb',\n            paddingRight: '14px',\n            position: 'relative',\n            '& svg': {\n                position: 'absolute',\n                width: '13px !important',\n                height: '20px !important'\n            }\n        },\n        header: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            '& button': {\n                marginRight: '-12px !important'\n            }\n        },\n        title: {\n            fontSize: '15px',\n            color: '#5d6474'\n        },\n        submit: {\n            color: '#fff !important'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'PriceFilterForm',\n        enableReinitialize: true\n    }),\n    withHandlers({\n        getCount: props => () => {\n            const {filter} = props\n            return _(PRICE_FILTER_KEY)\n                .values()\n                .filter(item => item !== PRICE_FILTER_KEY.FROM_DATE)\n                .filter(item => filter.getParam(item))\n                .value()\n                .length\n        }\n    })\n)\n\nconst PriceFilterForm = enhance((props) => {\n    const {\n        classes,\n        filterDialog,\n        getCount,\n        handleSubmit\n    } = props\n    const filterCounts = getCount()\n\n    if (!filterDialog.openFilterDialog) {\n        if (filterCounts) {\n            return (\n                <div className={classes.afterFilter}>\n                    <div>Фильтр: {filterCounts} элемента</div>\n                    <div>\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\n                            <BorderColorIcon color=\"#8f8f8f\" />\n                        </IconButton>\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\n                            <CloseIcon className={classes.icon}/>\n                        </IconButton>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <Link\n                    className={classes.arrow}\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\n                </Link>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <Paper className={classes.wrapper} zDepth={2}>\n                <div className={classes.header}>\n                    <span className={classes.title}>Фильтр</span>\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\n                        <CloseIcon className={classes.icon} />\n                    </IconButton>\n                </div>\n                <form onSubmit={handleSubmit(filterDialog.handleSubmitFilterDialog)}>\n                    <div>\n                        <Field\n                            className={classes.inputFieldCustom}\n                            name=\"measurement\"\n                            component={MeasurementSearchField}\n                            label=\"Мера\"/>\n                    </div>\n                    <div>\n                        <Field\n                            className={classes.inputFieldCustom}\n                            name=\"brand\"\n                            component={BrandSearchField}\n                            label=\"Бренд\"/>\n                        <Field\n                            className={classes.inputFieldCustom}\n                            name=\"type\"\n                            component={ProductTypeSerachField}\n                            label=\"Тип продукта\"/>\n                    </div>\n                    <RaisedButton\n                        type=\"submit\"\n                        primary={true}\n                        buttonStyle={{color: '#fff'}}\n                        label=\"Применить\"\n                        style={{marginTop: '15px'}}>\n                    </RaisedButton>\n                </form>\n            </Paper>\n        </div>\n    )\n})\n\nPriceFilterForm.propTypes = {\n    filter: PropTypes.object.isRequired,\n    filterDialog: PropTypes.shape({\n        filterLoading: PropTypes.bool.isRequired,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    })\n}\n\nexport default PriceFilterForm\n\n\n\n// WEBPACK FOOTER //\n// src/components/Price/PriceFilterForm.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport {Field, Fields, reduxForm, SubmissionError} from 'redux-form'\nimport Dialog from 'material-ui/Dialog'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport IconButton from 'material-ui/IconButton'\nimport FlatButton from 'material-ui/FlatButton'\nimport CloseIcon2 from '../CloseIcon2'\nimport {connect} from 'react-redux'\nimport {\n    PricesListProductField,\n    PricesBonusProductField,\n    TextField,\n    DateField\n} from '../ReduxForm'\nimport PromotionsRadioButton from '../ReduxForm/Promotions/PromotionsRadioButton'\nimport toCamelCase from '../../helpers/toCamelCase'\n\nexport const PRICES_CREATE_DIALOG_OPEN = 'openCreateDialog'\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    throw new SubmissionError({\n        ...errors,\n        _error: nonFieldErrors\n    })\n}\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            justifyContent: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        podlojkaScroll: {\n            overflowY: 'auto !important'\n        },\n        popUp: {\n            background: '#fff',\n            overflowY: 'hidden !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            overflowX: 'hidden',\n            height: '100%',\n            maxHeight: 'inherit !important'\n        },\n        titleContent: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '20px 30px',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                padding: '0 !important',\n                position: 'absolute !important'\n            }\n        },\n        inContent: {\n            display: 'flex',\n            color: '#333',\n            height: '100%'\n        },\n        innerWrap: {\n            height: 'calc(100% - 57px)'\n        },\n        bodyContent: {\n            color: '#333',\n            width: '100%',\n            height: 'calc(100% - 59px)'\n        },\n        form: {\n            position: 'relative',\n            display: 'flex',\n            flexDirection: 'column',\n            height: '100%',\n            justifyContent: 'space-between'\n        },\n        field: {\n            width: '100%'\n        },\n        subTitleOrder: {\n            display: 'flex',\n            alignItems: 'center',\n            marginBottom: '5px !important',\n            justifyContent: 'space-between',\n            fontWeight: 'bold',\n            padding: '0 !important',\n            '& span': {\n                fontWeight: '600 !important'\n            }\n        },\n        radioButton: {\n            marginTop: '10px',\n            '& > div > div > div': {\n                marginBottom: '5px',\n                '& svg': {\n                    width: '22px !important',\n                    height: '22px !important',\n                    '&:first-child': {\n                        color: '#999 !important',\n                        fill: '#999 !important'\n                    },\n                    '&:last-child': {\n                        color: '#666 !important',\n                        fill: '#666 !important'\n                    }\n                }\n            }\n        },\n        condition: {\n            marginTop: '20px',\n            '&>div:first-child': {\n                marginBottom: '-20px'\n            }\n        },\n        commentFieldPrices: {\n            textAlign: 'left',\n            width: '100%'\n        },\n        bottomButton: {\n            bottom: '0',\n            left: '0',\n            right: '0',\n            padding: '10px',\n            zIndex: '999',\n            borderTop: '1px solid #efefef',\n            background: '#fff',\n            textAlign: 'right',\n            '& span': {\n                fontSize: '13px !important',\n                fontWeight: '600 !important',\n                color: '#129fdd',\n                verticalAlign: 'inherit !important'\n            }\n        },\n        actionButton: {\n            fontSize: '13px !important',\n            margin: '0 !important'\n        },\n        leftOrderPart: {\n            flexBasis: '30%',\n            maxWidth: '30%',\n            padding: '20px 30px',\n            borderRight: '1px #efefef solid'\n        },\n        rightOrderPart: {\n            flexBasis: '70%',\n            maxWidth: '70%',\n            padding: '20px 30px',\n            maxHeight: '694px',\n            minHeight: '500px',\n            overflow: 'auto'\n        },\n        halfField: {\n            width: '50%'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        inputDateCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            },\n            '& div:first-child': {\n                height: '45px !important'\n            }\n        },\n        inputFieldDis: {\n            fontSize: '13px !important',\n            paddingTop: '24px',\n            '& div': {\n                color: 'rgb(229, 115, 115) !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'PricesCreateForm',\n        enableReinitialize: true\n    }),\n    connect((state) => {\n        const type = _.get(state, ['form', 'PricesCreateForm', 'values', 'promotionType']) || 'discount'\n        return {\n            type\n        }\n    })\n)\n\nconst customContentStyle = {\n    width: '930px',\n    maxWidth: 'none'\n}\nconst PricesCreateDialog = enhance((props) => {\n    const {openDialog, handleSubmit, onClose, classes, isUpdate, type} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n\n    let isDiscount = false\n    if (type === 'discount') {\n        isDiscount = true\n    }\n\n    return (\n        <Dialog\n            modal={true}\n            className={classes.podlojkaScroll}\n            contentStyle={customContentStyle}\n            open={openDialog}\n            onRequestClose={onClose}\n            bodyClassName={classes.popUp}\n            autoScrollBodyContent={true}>\n            <div className={classes.titleContent}>\n                <span>{isUpdate ? 'Изменение акции' : 'Новая акция'}</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} scrolling=\"auto\" className={classes.form}>\n                    <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4}/>\n                    </div>\n                    <div className={classes.innerWrap}>\n                        <div className={classes.inContent} style={{minHeight: '350px'}}>\n                            <div className={classes.leftOrderPart}>\n                                <div className={classes.selectContent}>\n                                    <Field\n                                        name=\"name\"\n                                        component={TextField}\n                                        className={classes.inputFieldCustom}\n                                        label=\"Название новой акции\"\n                                        fullWidth={true}/>\n                                    <div className={classes.radioButton}>\n                                        <Field\n                                            name=\"promotionType\"\n                                            style={{marginTop: '10px'}}\n                                            selectedType={type}\n                                            component={PromotionsRadioButton}\n                                        />\n                                    </div>\n                                </div>\n                                <div className={classes.condition}>\n                                    <div className={classes.subTitleOrder}>Условия акции</div>\n                                    <Field\n                                        name=\"beginDate\"\n                                        component={DateField}\n                                        className={classes.inputDateCustom}\n                                        floatingLabelText=\"Дата начала акции\"\n                                        container=\"inline\"\n                                        fullWidth={true}/>\n                                    <Field\n                                        name=\"tillDate\"\n                                        component={DateField}\n                                        className={classes.inputDateCustom}\n                                        floatingLabelText=\"Дата завершения акции\"\n                                        container=\"inline\"\n                                        fullWidth={true}/>\n                                    {isDiscount && <div className={classes.halfField}>\n                                        <Field\n                                            name=\"discount\"\n                                            component={TextField}\n                                            className={classes.inputFieldCustom}\n                                            fullWidth={true}\n                                            label=\"Размер скидки\"\n                                            hintText=\"10%\"\n                                        />\n                                    </div>}\n                                </div>\n                            </div>\n                            <div className={classes.rightOrderPart}>\n                                {isDiscount\n                                    ? <Fields\n                                        names={['products', 'product', 'amount']}\n                                        component={PricesListProductField}/>\n                                    : <Fields\n                                        names={['bonusProducts', 'bonusProduct', 'bonusAmount', 'giftProduct', 'giftAmount']}\n                                        component={PricesBonusProductField}/>\n                                    }\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        {isDiscount\n                            ? <FlatButton\n                                label=\"Оформить заказ\"\n                                className={classes.actionButton}\n                                primary={true}\n                                type=\"submit\"\n                            />\n                            : <FlatButton\n                                label=\"Добавить акции\"\n                                className={classes.actionButton}\n                                primary={true}\n                                type=\"submit\"\n                            />}\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\nPricesCreateDialog.propTyeps = {\n    isUpdate: PropTypes.bool,\n    openDialog: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\nPricesCreateDialog.defaultProps = {\n    isUpdate: false\n}\nexport default PricesCreateDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Prices/PricesCreateDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose, withHandlers} from 'recompose'\nimport {reduxForm, Field} from 'redux-form'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {Link} from 'react-router'\nimport Paper from 'material-ui/Paper'\nimport IconButton from 'material-ui/IconButton'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\nimport CloseIcon from '../CloseIcon'\nimport DateToDateField from '../ReduxForm/Basic/DateToDateField'\n\nexport const PRICES_FILTER_OPEN = 'openFilterDialog'\n\nexport const PRICES_FILTER_KEY = {\n    BEGIN_FROM_DATE: 'beginFromDate',\n    BEGIN_TO_DATE: 'beginToDate',\n    TILL_FROM_DATE: 'tillFromDate',\n    TILL_TO_DATE: 'tillToDate'\n}\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            position: 'absolute',\n            minWidth: '300px',\n            background: '#fff',\n            zIndex: 99,\n            top: 0,\n            left: 0,\n            borderRadius: 0,\n            padding: '10px 20px 10px 20px'\n        },\n        afterFilter: {\n            alignItems: 'center',\n            display: 'flex',\n            backgroundColor: '#efefef',\n            position: 'relative',\n            padding: '16px 30px',\n            marginLeft: '-30px',\n            '& > div:nth-child(2)': {\n                position: 'absolute',\n                right: '0'\n            },\n            '& > div:nth-child(1)': {\n                color: '#666666'\n            },\n            '& button': {\n                borderLeft: '1px solid white !important'\n            }\n        },\n        icon: {\n            color: '#8f8f8f !important'\n        },\n        arrow: {\n            color: '#12aaeb',\n            paddingRight: '14px',\n            position: 'relative',\n            '& svg': {\n                position: 'absolute',\n                width: '13px !important',\n                height: '20px !important'\n            }\n        },\n        header: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            '& button': {\n                marginRight: '-12px !important'\n            }\n        },\n        title: {\n            fontSize: '15px',\n            color: '#5d6474'\n        },\n        submit: {\n            color: '#fff !important'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'PricesFilterForm',\n        enableReinitialize: true\n    }),\n    withHandlers({\n        getCount: props => () => {\n            const {filter} = props\n            return _(PRICES_FILTER_KEY)\n                .values()\n                .filter(item => item !== PRICES_FILTER_KEY.FROM_DATE)\n                .filter(item => filter.getParam(item))\n                .value()\n                .length\n        }\n    })\n)\n\nconst PricesFilterForm = enhance((props) => {\n    const {classes, filterDialog, getCount} = props\n    const filterCounts = getCount()\n\n    if (!filterDialog.openFilterDialog) {\n        if (filterCounts) {\n            return (\n                <div className={classes.afterFilter}>\n                    <div>Фильтр: {filterCounts} элемента</div>\n                    <div>\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\n                            <BorderColorIcon color=\"#8f8f8f\" />\n                        </IconButton>\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\n                            <CloseIcon className={classes.icon}/>\n                        </IconButton>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <Link\n                    className={classes.arrow}\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\n                </Link>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <Paper className={classes.wrapper} zDepth={2}>\n                <div className={classes.header}>\n                    <span className={classes.title}>Фильтр</span>\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\n                        <CloseIcon className={classes.icon} />\n                    </IconButton>\n                </div>\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\n                    <div>\n                        <Field className={classes.inputField} name=\"beginDate\" component={DateToDateField} label=\"Дата поставки\" fullWidth={true}/>\n                    </div>\n                    <div>\n                        <Field className={classes.inputField} name=\"tillDate\" component={DateToDateField} label=\"Дата создания\" fullWidth={true}/>\n                    </div>\n                    <div>\n                        <RaisedButton\n                            type=\"submit\"\n                            primary={true}\n                            buttonStyle={{color: '#fff'}}>\n                            Применить\n                        </RaisedButton>\n                    </div>\n                </form>\n            </Paper>\n        </div>\n    )\n})\n\nPricesFilterForm.propTypes = {\n    filter: PropTypes.object.isRequired,\n    filterDialog: PropTypes.shape({\n        filterLoading: PropTypes.bool.isRequired,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    })\n}\n\nexport default PricesFilterForm\n\n\n\n// WEBPACK FOOTER //\n// src/components/Prices/PricesFilterForm.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport {connect} from 'react-redux'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {\n    TextField,\n    ProductTypeParentSearchField,\n    ProductTypeChildSearchField,\n    MeasurementSearchField,\n    ImageUploadField\n} from '../ReduxForm'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport MainStyles from '../Styles/MainStyles'\n\nexport const PRODUCT_CREATE_DIALOG_OPEN = 'openCreateDialog'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        }\n    })),\n    reduxForm({\n        form: 'ProductCreateForm',\n        enableReinitialize: true\n    }),\n    connect((state) => {\n        const type = _.get(state, ['form', 'ProductCreateForm', 'values', 'productTypeParent', 'value'])\n        return {\n            type\n        }\n    }),\n)\n\nconst ProductCreateDialog = enhance((props) => {\n    const {open, loading, handleSubmit, onClose, classes, isUpdate, type} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '300px'} : {}}\n            bodyStyle={{minHeight: 'auto'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>{isUpdate ? 'Изменить продукт' : 'Добавить продукт'}</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} className={classes.form}>\n                    <div className={classes.inContent} style={{minHeight: '250px'}}>\n                        <div className={classes.loader}>\n                            <CircularProgress size={40} thickness={4}/>\n                        </div>\n                        <div className={classes.field} style={{marginTop: '10px'}}>\n                            <Field\n                                name=\"name\"\n                                className={classes.inputFieldCustom}\n                                component={TextField}\n                                label=\"Наименование\"\n                                fullWidth={true}\n                            />\n                            <Field\n                                name=\"code\"\n                                className={classes.inputFieldCustom}\n                                component={TextField}\n                                label=\"Код товара\"\n                                fullWidth={true}\n                            />\n                            <Field\n                                name=\"productTypeParent\"\n                                className={classes.inputFieldCustom}\n                                component={ProductTypeParentSearchField}\n                                label=\"Тип продукта\"\n                                fullWidth={true}\n                            />\n                            {type && <Field\n                                name=\"type\"\n                                className={classes.inputFieldCustom}\n                                component={ProductTypeChildSearchField}\n                                parentType={type}\n                                label=\"Подкатегория\"\n                                fullWidth={true}\n                            />}\n                            <Field\n                                name=\"measurement\"\n                                className={classes.inputFieldCustom}\n                                component={MeasurementSearchField}\n                                label=\"Мера\"\n                                fullWidth={true}\n                            />\n                        </div>\n                        <div className={classes.field} style={{maxWidth: '224px'}}>\n                            <Field\n                                name=\"image\"\n                                component={ImageUploadField}\n                                label=\"Изображения\"\n                                fullWidth={true}\n                            />\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\n\nProductCreateDialog.propTyeps = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\n\nexport default ProductCreateDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Product/ProductCreateDialog.js","import ProductGridList from './ProductGridList'\nimport {PRODUCT_CREATE_DIALOG_OPEN} from './ProductCreateDialog'\nimport {PRODUCT_SHOW_PHOTO_OPEN} from './ProductShowPhotoDialog'\nimport {PRODUCT_FILTER_KEY, PRODUCT_FILTER_OPEN} from './ProductFilterForm'\nimport {PERSON_FILTER_OPEN, PERSON_FILTER_KEY} from '../Manufacture/PersonFilterForm'\n\nconst PRODUCT_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nconst PRODUCT_DELETE_DIALOG_OPEN = 'openDeleteDialog'\n\nexport {\n    PRODUCT_CREATE_DIALOG_OPEN,\n    PRODUCT_UPDATE_DIALOG_OPEN,\n    PRODUCT_DELETE_DIALOG_OPEN,\n    PRODUCT_SHOW_PHOTO_OPEN,\n    PRODUCT_FILTER_KEY,\n    PRODUCT_FILTER_OPEN,\n    PERSON_FILTER_OPEN,\n    PERSON_FILTER_KEY,\n    ProductGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Product/index.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose, withHandlers} from 'recompose'\nimport {reduxForm, Field} from 'redux-form'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {Link} from 'react-router'\nimport Paper from 'material-ui/Paper'\nimport IconButton from 'material-ui/IconButton'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\nimport {ProductTypeSearchField, BrandSearchField, MeasurementSearchField} from '../ReduxForm'\nimport CloseIcon from '../CloseIcon'\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\n\nexport const PRODUCT_PRICE_FILTER_OPEN = 'openFilterDialog'\n\nexport const PRODUCT_PRICE_FILTER_KEY = {\n    BRAND: 'brand',\n    TYPE: 'type',\n    MEASUREMENT: 'measurement'\n}\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            position: 'absolute',\n            minWidth: '300px',\n            background: '#fff',\n            zIndex: 99,\n            top: 0,\n            left: 0,\n            borderRadius: 0,\n            padding: '10px 20px 10px 20px'\n        },\n        afterFilter: {\n            alignItems: 'center',\n            display: 'flex',\n            backgroundColor: '#efefef',\n            position: 'relative',\n            padding: '16px 30px',\n            marginLeft: '-30px',\n            '& > div:nth-child(2)': {\n                position: 'absolute',\n                right: '0'\n            },\n            '& > div:nth-child(1)': {\n                color: '#666666'\n            },\n            '& button': {\n                borderLeft: '1px solid white !important'\n            }\n        },\n        icon: {\n            color: '#8f8f8f !important'\n        },\n        arrow: {\n            color: '#12aaeb',\n            paddingRight: '14px',\n            position: 'relative',\n            '& svg': {\n                position: 'absolute',\n                width: '13px !important',\n                height: '20px !important'\n            }\n        },\n        header: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            '& button': {\n                marginRight: '-12px !important'\n            }\n        },\n        title: {\n            fontSize: '15px',\n            color: '#5d6474'\n        },\n        submit: {\n            color: '#fff !important'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'ProductPriceFilterForm',\n        enableReinitialize: true\n    }),\n    withHandlers({\n        getCount: props => () => {\n            const {filter} = props\n            return _(PRODUCT_PRICE_FILTER_KEY)\n                .values()\n                .filter(item => item !== PRODUCT_PRICE_FILTER_KEY.FROM_DATE)\n                .filter(item => filter.getParam(item))\n                .value()\n                .length\n        }\n    })\n)\n\nconst ProductPriceFilterForm = enhance((props) => {\n    const {classes, filterDialog, getCount} = props\n    const filterCounts = getCount()\n\n    if (!filterDialog.openFilterDialog) {\n        if (filterCounts) {\n            return (\n                <div className={classes.afterFilter}>\n                    <div>Фильтр: {filterCounts} элемента</div>\n                    <div>\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\n                            <BorderColorIcon color=\"#8f8f8f\" />\n                        </IconButton>\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\n                            <CloseIcon className={classes.icon}/>\n                        </IconButton>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <Link\n                    className={classes.arrow}\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\n                </Link>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <Paper className={classes.wrapper} zDepth={2}>\n                <div className={classes.header}>\n                    <span className={classes.title}>Фильтр</span>\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\n                        <CloseIcon className={classes.icon} />\n                    </IconButton>\n                </div>\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\n                    <div>\n                        <Field className={classes.inputFieldCustom} name=\"type\" component={ProductTypeSearchField} label=\"Тип продукта\"/>\n                    </div>\n                    <div>\n                        <Field className={classes.inputFieldCustom} name=\"measurement\" component={MeasurementSearchField} label=\"Мера\"/>\n                    </div>\n                    <div>\n                        <Field className={classes.inputFieldCustom} name=\"brand\" component={BrandSearchField} label=\"Бренд\"/>\n                    </div>\n                    <RaisedButton\n                        type=\"submit\"\n                        primary={true}\n                        buttonStyle={{color: '#fff'}}\n                        label=\"Применить\"\n                        style={{marginTop: '15px'}}>\n                    </RaisedButton>\n                </form>\n            </Paper>\n        </div>\n    )\n})\n\nProductPriceFilterForm.propTypes = {\n    filter: PropTypes.object.isRequired,\n    filterDialog: PropTypes.shape({\n        filterLoading: PropTypes.bool.isRequired,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    })\n}\n\nexport default ProductPriceFilterForm\n\n\n\n// WEBPACK FOOTER //\n// src/components/ProductPrice/ProductPriceFilterForm.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {TextField, ProductTypeParentSearchField} from '../ReduxForm'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport MainStyles from '../Styles/MainStyles'\n\nexport const PRODUCT_TYPE_CREATE_DIALOG_OPEN = 'openCreateDialog'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\n\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        }\n    })),\n    reduxForm({\n        form: 'ProductTypeCreateForm',\n        enableReinitialize: true\n    })\n)\n\nconst ProductTypeCreateDialog = enhance((props) => {\n    const {open, loading, handleSubmit, onClose, classes, isUpdate} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\n            bodyStyle={{minHeight: 'auto'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>{isUpdate ? 'Изменить тип продукта' : 'Добавить тип продукта'}</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} className={classes.form} style={{minHeight: 'auto'}}>\n                    <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4}/>\n                    </div>\n                    <div className={classes.inContent} style={{minHeight: '100px', paddingTop: '15px'}}>\n                        <div className={classes.field}>\n                            <Field\n                                name=\"parent\"\n                                component={ProductTypeParentSearchField}\n                                className={classes.inputFieldCustom}\n                                label=\"Родительская категория\"\n                                fullWidth={true}\n                            />\n                            <Field\n                                name=\"name\"\n                                component={TextField}\n                                className={classes.inputFieldCustom}\n                                label=\"Наименование категории\"\n                                fullWidth={true}\n                            />\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\n\nProductTypeCreateDialog.propTyeps = {\n    isUpdate: PropTypes.bool,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\n\nProductTypeCreateDialog.defaultProps = {\n    isUpdate: false\n}\n\nexport default ProductTypeCreateDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/ProductType/ProductTypeCreateDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Field, FieldArray, reduxForm, SubmissionError} from 'redux-form'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {TextField} from '../ReduxForm'\nimport ProviderContactsListField from '../ReduxForm/Provider/ProviderContactsListField'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport MainStyles from '../Styles/MainStyles'\n\nexport const PROVIDER_CREATE_DIALOG_OPEN = 'openCreateDialog'\nexport const PROVIDER_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\n\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        contacts: {\n            background: '#f1f5f8',\n            color: '#333',\n            margin: '12px -30px 0',\n            padding: '20px 30px'\n        }\n    })),\n    reduxForm({\n        form: 'ProviderCreateForm',\n        enableReinitialize: true\n    })\n)\n\nconst ProviderCreateDialog = enhance((props) => {\n    const {open, loading, handleSubmit, onClose, classes, isUpdate} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\n            bodyClassName={classes.popUp}>\n\n            <div className={classes.titleContent}>\n                <span>{isUpdate ? 'Изменение поставщика' : 'Добавление поставщика'}</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} className={classes.form} style={{width: '100%'}}>\n                    <div className={classes.inContent} style={{minHeight: '300px'}}>\n                        <div className={classes.loader}>\n                            <CircularProgress size={40} thickness={4}/>\n                        </div>\n                        <div className={classes.field} style={{padding: '10px 0 0'}}>\n                            <Field\n                                name=\"name\"\n                                component={TextField}\n                                className={classes.inputFieldCustom}\n                                label=\"Организация\"\n                                fullWidth={true}/>\n                            <Field\n                                name=\"address\"\n                                component={TextField}\n                                className={classes.inputFieldCustom}\n                                label=\"Местположение\"\n                                fullWidth={true}/>\n\n                            <div className={classes.contacts}>\n                                Контактные данные\n                                <FieldArray\n                                    name=\"contacts\"\n                                    component={ProviderContactsListField}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\n\nProviderCreateDialog.propTypes = {\n    isUpdate: PropTypes.bool,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\n\nProviderCreateDialog.defaultProps = {\n    isUpdate: false\n}\n\nexport default ProviderCreateDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Provider/ProviderCreateDialog.js","import React from 'react'\nimport _ from 'lodash'\nimport injectSheet from 'react-jss'\nimport DatePicker from 'material-ui/DatePicker'\nimport DateRange from 'material-ui/svg-icons/action/date-range'\n\nconst errorStyle = {\n    textAlign: 'left'\n}\n\nconst DateField = ({classes, input, label, meta: {error}, ...defaultProps}) => {\n    _.unset(defaultProps, 'sheet')\n    if (!_.isObject(input.value)) {\n        _.unset(input, 'value')\n    }\n    return (\n        <div className={classes.wrapper}>\n            <div style={{position: 'relative'}}>\n                <DatePicker\n                    errorText={error}\n                    errorStyle={errorStyle}\n                    floatingLabelText={label}\n                    {...input}\n                    onChange={(event, value) => input.onChange(value)}\n                    {...defaultProps}\n                    okLabel=\"Ок\"\n                    cancelLabel=\"Отмена\"\n                />\n                <div className={classes.icon}>\n                    <DateRange />\n                </div>\n            </div>\n            {error && <span>{error}</span>}\n        </div>\n    )\n}\n\nexport default injectSheet({\n    icon: {\n        position: 'absolute',\n        right: '0',\n        top: '14px',\n        '& svg': {\n            color: '#ccc !important',\n            height: '20px !important',\n            width: '20px !important'\n        }\n    }\n})(DateField)\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Basic/DateField.js","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {hashHistory} from 'react-router'\nimport {compose, withHandlers} from 'recompose'\nimport injectSheet from 'react-jss'\nimport IconButton from 'material-ui/IconButton'\nimport ArrowLeftIcon from '../GridList/GridListNavPagination/ArrowLeftIcon'\nimport ArrowRightIcon from '../GridList/GridListNavPagination/ArrowRightIcon'\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            color: '#5d6474'\n        },\n        customWrapper: {\n            extend: 'wrapper',\n            position: 'absolute',\n            right: '30px',\n            top: '-52px',\n            height: '52px'\n        },\n\n        count: {\n            marginRight: '15px',\n            height: '54px !important',\n            '& > div': {\n                fontSize: '13px !important',\n                marginTop: '3px !important'\n            }\n        },\n\n        nav: {\n            display: 'flex',\n            alignItems: 'center'\n        },\n        gridPagination: {\n            '& button': {\n                padding: '0 !important',\n                width: 'inherit !important',\n                height: 'inherit !important',\n                top: '2px'\n            },\n            '& button:first-child': {\n                padding: '0 5px 0 10px !important'\n            }\n        }\n    }),\n    withHandlers({\n        onChange: props => (event, index, value) => {\n            const {filter} = props\n            event.preventDefault()\n\n            hashHistory.push(filter.createURL({pageSize: value, page: 1}))\n        }\n    })\n)\nconst Pagination = enhance(({classes, onChange, filter, customPagination}) => {\n    const prev = filter.prevPage()\n    const next = filter.nextPage()\n    const firstPage = 1\n    const startPage = (filter.getPageRange() * (filter.getCurrentPage() - firstPage)) + firstPage\n    const startEnd = filter.getCounts() < (filter.getPageRange() * filter.getCurrentPage()) ? filter.getCounts() : filter.getPageRange() * filter.getCurrentPage()\n\n    return (\n        <div className={customPagination ? classes.customWrapper : classes.wrapper}>\n            <div className={classes.nav}>\n                <div>{startPage} - {startEnd} из {filter.getCounts()}</div>\n                <div className={classes.gridPagination}>\n                    <IconButton\n                        disabled={Boolean(!prev)}\n                        disableTouchRipple={true}\n                        iconStyle={{color: 'rgba(0, 0, 0, 0.56)'}}\n                        onTouchTap={() => prev && hashHistory.push(prev)}>\n                        <ArrowLeftIcon />\n                    </IconButton>\n\n                    <IconButton\n                        disabled={Boolean(!next)}\n                        disableTouchRipple={true}\n                        iconStyle={{color: 'rgba(0, 0, 0, 0.56)'}}\n                        onTouchTap={() => next && hashHistory.push(next)}>\n                        <ArrowRightIcon />\n                    </IconButton>\n                </div>\n            </div>\n        </div>\n    )\n})\n\nPagination.propTypes = {\n    filter: PropTypes.object.isRequired\n}\nPagination.defaultProps = {\n    customPagination: false\n}\n\nexport default Pagination\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Pagination.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose, withReducer, withHandlers} from 'recompose'\nimport injectSheet from 'react-jss'\nimport IconButton from 'material-ui/IconButton'\nimport Check from 'material-ui/svg-icons/navigation/check'\nimport {Field} from 'redux-form'\nimport Dot from '../../Images/dot.png'\nimport {connect} from 'react-redux'\nimport {\n    Table,\n    TableBody,\n    TableHeader,\n    TableHeaderColumn,\n    TableRow,\n    TableRowColumn\n} from 'material-ui/Table'\nimport DeleteIcon from '../../DeleteIcon/index'\nimport ProductCustomSearchField from './ProductCustomSearchField'\nimport RemainderStatusSearchField from '../../ReduxForm/Remainder/RemainderStatusSearchField'\nimport ProductTypeSearchField from '../Product/ProductTypeSearchField'\nimport TextField from '../Basic/TextField'\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            display: 'flex',\n            flexDirection: 'column',\n            height: '100%',\n            position: 'relative'\n        },\n        error: {\n            textAlign: 'center',\n            fontSize: '14px',\n            color: 'red'\n        },\n        imagePlaceholder: {\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            '& img': {\n                width: '70px',\n                marginBottom: '20px',\n                marginTop: '25px'\n            }\n        },\n        table: {\n            padding: '10px 30px !important',\n            maxHeight: '200px',\n            minHeight: '200px',\n            overflowY: 'auto'\n        },\n        tableRowHead: {\n            height: '50px !important',\n            border: 'none !important',\n            display: 'table',\n            width: '100%',\n            alignItems: 'center',\n            position: 'relative',\n            '&:after': {\n                content: '\" \"',\n                backgroundImage: 'url(' + Dot + ')',\n                position: 'absolute',\n                bottom: '0',\n                height: '2px',\n                left: '0',\n                right: '0'\n            },\n            '& th': {\n                textAlign: 'left !important',\n                border: 'none !important',\n                height: '40px !important',\n                fontWeight: '600 !important',\n                fontSize: '13px!important'\n            },\n            '& th:first-child': {\n                width: '80%',\n                textAlign: 'left !important',\n                fontWeight: '600 !important'\n            }\n        },\n        tableRow: {\n            height: '50px !important',\n            border: 'none !important',\n            display: 'table',\n            width: '100%',\n            alignItems: 'center',\n            position: 'relative',\n            '&:after': {\n                content: '\" \"',\n                backgroundImage: 'url(' + Dot + ')',\n                position: 'absolute',\n                bottom: '0',\n                height: '2px',\n                left: '0',\n                right: '0'\n            },\n            '&:last-child:after': {\n                content: '\"\"',\n                backgroundImage: 'none'\n            },\n            '& td:first-child': {\n                width: '80%'\n            },\n            '& tr': {\n                border: 'none !important'\n            },\n            '& td': {\n                height: '40px !important',\n                padding: '0 !important'\n            },\n            '& th:first-child': {\n                width: '80%',\n                textAlign: 'left !important',\n                fontWeight: '600 !important'\n            },\n            '& th': {\n                textAlign: 'left !important',\n                border: 'none !important',\n                height: '40px !important',\n                fontWeight: '600 !important',\n                fontSize: '13px!important'\n            }\n        },\n        tableTitle: {\n            fontWeight: '600',\n            color: '#333 !important',\n            textAlign: 'left',\n            padding: '0 !important'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        title: {\n            fontWeight: '600',\n            border: 'none !important'\n        },\n        headers: {\n            display: 'flex',\n            alignItems: 'center',\n            height: '40px',\n            justifyContent: 'space-between',\n            '& span': {\n                textTransform: 'lowercase !important'\n            }\n        },\n        background: {\n            display: 'flex',\n            padding: '0 30px 10px',\n            backgroundColor: '#f1f5f8',\n            alignItems: 'baseline',\n            position: 'relative',\n            zIndex: '2',\n            '& > div': {\n                marginTop: '-7px !important',\n                width: '200px !important',\n                marginRight: '20px',\n                '& > div > div': {\n                    width: '200px !important'\n                }\n            },\n            '& > button > div > span': {\n                padding: '0 !important'\n            },\n            '& button': {\n                marginTop: '10px !important'\n            }\n        }\n    }),\n    connect((state) => {\n        const measurement = _.get(state, ['form', 'RemainderTransferForm', 'values', 'product', 'value', 'measurement', 'name'])\n        return {\n            measurement\n        }\n    }),\n    withReducer('state', 'dispatch', (state, action) => {\n        return {...state, ...action}\n    }, {open: false}),\n\n    withHandlers({\n        handleAdd: props => () => {\n            const product = _.get(props, ['product', 'input', 'value'])\n            const amount = _.get(props, ['amount', 'input', 'value'])\n            const isDefect = _.get(props, ['isDefect', 'input', 'value'])\n            const onChange = _.get(props, ['products', 'input', 'onChange'])\n            const products = _.get(props, ['products', 'input', 'value'])\n\n            if (!_.isEmpty(product) && amount && isDefect) {\n                let has = false\n                _.map(products, (item) => {\n                    if (_.get(item, 'product') === product && _.get(item, 'isDefect') === isDefect) {\n                        item.amount = _.toInteger(item.amount) + _.toInteger(amount)\n                        has = true\n                    }\n                })\n                const fields = ['productType', 'product', 'isDefect', 'amount']\n                for (let i = 0; i < fields.length; i++) {\n                    let newChange = _.get(props, [fields[i], 'input', 'onChange'])\n                    props.dispatch(newChange(null))\n                }\n                if (!has) {\n                    onChange(_.union(products, [{product, isDefect, amount}]))\n                    has = false\n                }\n            }\n        },\n\n        handleRemove: props => (listIndex) => {\n            const onChange = _.get(props, ['products', 'input', 'onChange'])\n            const products = _(props)\n                .get(['products', 'input', 'value'])\n                .filter((item, index) => index !== listIndex)\n\n            onChange(products)\n        }\n    })\n)\n\nconst RemainderListProductField = ({classes, handleAdd, handleRemove, measurement, ...defaultProps}) => {\n    const products = _.get(defaultProps, ['products', 'input', 'value']) || []\n    const error = _.get(defaultProps, ['products', 'meta', 'error'])\n    return (\n        <div className={classes.wrapper}>\n            <div>\n                <div className={classes.background}>\n                    <Field\n                        style={{width: '50px'}}\n                        label=\"Отфильтровать по типу\"\n                        name=\"productType\"\n                        className={classes.inputFieldCustom}\n                        component={ProductTypeSearchField}\n                        {..._.get(defaultProps, 'productType')}\n                    />\n\n                    <ProductCustomSearchField\n                        style={{width: '50px'}}\n                        label=\"Наименование товара\"\n                        className={classes.inputFieldCustom}\n                        {..._.get(defaultProps, 'product')}\n                    />\n                    <TextField\n                        style={{width: '50px'}}\n                        label=\"Кол-во\"\n                        {..._.get(defaultProps, 'amount')}\n                    />\n                    <span style={{margin: '0 10px 0 -10px'}}>{measurement}</span>\n\n                    <Field\n                        label=\"Статус\"\n                        name=\"isDefect\"\n                        style={{width: '50px'}}\n                        className={classes.inputFieldCustom}\n                        component={RemainderStatusSearchField}\n                        {..._.get(defaultProps, 'isDefect')}\n                    />\n                    <IconButton\n                        label=\"Применить\"\n                        onTouchTap={handleAdd}>\n                        <Check color=\"#12aaeb\"/>\n                    </IconButton>\n                </div>\n            </div>\n            {error && <div className={classes.error}>{error}</div>}\n            <div className={classes.table}>\n                {!_.isEmpty(products) && <Table\n                    fixedHeader={true}\n                    fixedFooter={false}\n                    multiSelectable={false}>\n                    <TableHeader\n                        displaySelectAll={false}\n                        adjustForCheckbox={false}\n                        enableSelectAll={false}\n                        className={classes.title}>\n                        <TableRow className={classes.tableRowHead}>\n                            <TableHeaderColumn\n                                className={classes.tableTitle}>Наименование</TableHeaderColumn>\n                            <TableHeaderColumn className={classes.tableTitle}>Статус</TableHeaderColumn>\n                            <TableHeaderColumn className={classes.tableTitle}>Кол-во</TableHeaderColumn>\n                            <TableHeaderColumn style={{display: 'none'}}>.</TableHeaderColumn>\n                        </TableRow>\n                    </TableHeader>\n                    <TableBody\n                        displayRowCheckbox={false}\n                        deselectOnClickaway={false}\n                        showRowHover={false}\n                        stripedRows={false}>\n                        {_.map(products, (item, index) => {\n                            return (\n                                <TableRow key={index} className={classes.tableRow}>\n                                    <TableRowColumn>{_.get(item, ['product', 'value', 'name'])}</TableRowColumn>\n                                    <TableRowColumn>\n                                        {_.get(item, ['isDefect', 'text'])}\n                                    </TableRowColumn>\n                                    <TableRowColumn>\n                                        {_.get(item, 'amount')} {_.get(item, ['product', 'value', 'measurement', 'name'])}\n                                    </TableRowColumn>\n                                    <TableRowColumn style={{textAlign: 'right'}}>\n                                        <IconButton onTouchTap={() => handleRemove(index)}>\n                                            <DeleteIcon color=\"#666666\"/>\n                                        </IconButton>\n                                    </TableRowColumn>\n                                </TableRow>)\n                        })}\n                    </TableBody>\n                </Table>}\n            </div>\n        </div>\n    )\n}\n\nexport default enhance(RemainderListProductField)\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Remainder/RemainderListProductField.js","import _ from 'lodash'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\n\nconst Items = [\n    {id: 1, name: 'OK'},\n    {id: 2, name: 'Брак'}\n]\nconst getOptions = () => {\n    return Promise.resolve(Items)\n}\n\nconst getItem = (id) => {\n    return Promise.resolve(\n        _.find(Items, (o) => { return o.id === _.toInteger(id) }))\n}\n\nconst RemainderStatusSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default RemainderStatusSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Remainder/RemainderStatusSearchField.js","import sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\nimport axios from '../../../helpers/axios'\nimport * as PATH from '../../../constants/api'\nimport toCamelCase from '../../../helpers/toCamelCase'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.MARKET_TYPE_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst getItem = (id) => {\n    return axios().get(sprintf(PATH.MARKET_TYPE_ITEM, id))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst MarketTypeSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default MarketTypeSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Shop/MarketTypeSearchField.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport {Field, Fields, reduxForm, SubmissionError} from 'redux-form'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport TextField from '../ReduxForm/Basic/TextField'\nimport RemainderListProductField from '../ReduxForm/Remainder/RemainderListProductField'\nimport {StockSearchField} from '../ReduxForm'\n\nexport const REMAINDER_DISCARD_DIALOG_OPEN = 'openDiscardDialog'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            display: 'flex',\n            justifyContent: 'center',\n            width: '100%',\n            background: '#fff'\n        },\n        wrapper: {\n            position: 'relative',\n            padding: '0 30px',\n            marginBottom: '5px',\n            '& .row': {\n                alignItems: 'center',\n                '& div': {\n                    lineHeight: '55px'\n                }\n            }\n        },\n        title: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '20px 30px',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                padding: '0 !important',\n                position: 'absolute !important'\n            }\n        },\n        dialogBody: {\n            display: 'flex',\n            '& tbody:last-child': {\n                borderBottom: '1px #efefef solid'\n\n            }\n        },\n        noPadding: {\n            padding: '0! important',\n            maxHeight: 'none !important',\n            color: '#333 !important'\n        },\n        subTitle: {\n            fontWeight: '600'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            width: '100% !important',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        inputDateCustom: {\n            height: '45px !important',\n            '& input': {\n                marginTop: '0 !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& div': {\n                fontSize: '13px !important',\n                height: '45px !important',\n                width: '100% !important'\n            }\n        },\n        bottomButton: {\n            position: 'relative',\n            padding: '10px',\n            borderTop: '1px solid #efefef',\n            textAlign: 'right',\n            '& span': {\n                fontSize: '13px !important',\n                fontWeight: '600 !important',\n                color: '#129fdd',\n                verticalAlign: 'inherit !important'\n            }\n        },\n        actionButton: {\n            fontSize: '13px !important',\n            margin: '0 !important',\n            position: 'absolute'\n        },\n        comment: {\n            display: 'flex',\n            alignItems: 'center',\n            padding: '10px 30px'\n        },\n        commentText: {\n            fontSize: '14px',\n            fontWeight: '600'\n        },\n        commentField: {\n            maxHeight: '70px',\n            '& > div:first-child': {\n                padding: '3px 7px',\n                top: '12px',\n                bottom: 'auto !important'\n            },\n            '& hr': {\n                opacity: '0'\n            },\n            '& textarea': {\n                border: 'solid 1px #999999 !important',\n                margin: 'auto',\n                padding: '3px 7px !important'\n            }\n        },\n        leftSide: {\n            flexBasis: '25%',\n            maxWidth: '25%',\n            height: '280px',\n            borderRight: '1px #efefef solid',\n            padding: '20px 30px',\n            '&  > div > div:first-child': {\n                width: '100% !important'\n            }\n\n        },\n        rightSide: {\n            flexBasis: '75%',\n            maxWidth: '75%'\n        }\n    }),\n    reduxForm({\n        form: 'RemainderDiscardForm',\n        enableReinitialize: true\n    })\n)\n\nconst RemainderDiscardDialog = enhance((props) => {\n    const {open, handleSubmit, onClose, classes} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n\n    const iconStyle = {\n        icon: {\n            color: '#666',\n            width: 25,\n            height: 25\n        },\n        button: {\n            width: 40,\n            height: 40,\n            padding: '0'\n        }\n    }\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={{maxWidth: 'none', width: '1000px'}}\n            bodyStyle={{minHeight: 'auto'}}\n            bodyClassName={classes.noPadding}>\n            <div className={classes.title}>\n                <span>Списание товара</span>\n                <IconButton\n                    iconStyle={iconStyle.icon}\n                    style={iconStyle.button}\n                    touch={true}\n                    onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <form onSubmit={onSubmit} className={classes.form} style={{minHeight: 'auto'}}>\n                <div className={classes.dialogBody}>\n                    <div className={classes.leftSide}>\n                        <Field\n                            className={classes.inputFieldCustom}\n                            name=\"fromStock\"\n                            component={StockSearchField}\n                            label=\"С какого склада\"\n                        />\n                        <Field\n                            style={{marginTop: '-20px', lineHeight: '20px', fontSize: '13px'}}\n                            name=\"comment\"\n                            component={TextField}\n                            label=\"Оставить комментарий...\"\n\n                            multiLine={true}\n                            rows={4}\n                            rowsMax={6}\n                            fullWidth={true}/>\n                    </div>\n                    <div className={classes.rightSide}>\n                        <Fields\n                            names={['products', 'productType', 'product', 'isDefect', 'amount']}\n                            component={RemainderListProductField}\n                        />\n                    </div>\n                </div>\n                <div className={classes.bottomButton}>\n                    <FlatButton\n                        label=\"СПИСАТЬ\"\n                        className={classes.actionButton}\n                        primary={true}\n                        type=\"submit\"\n                    />\n                </div>\n            </form>\n        </Dialog>\n    )\n})\n\nRemainderDiscardDialog.propTypes = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired\n}\n\nRemainderDiscardDialog.defaultProps = {\n    isUpdate: false\n}\n\nexport default RemainderDiscardDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Remainder/RemainderDiscardDialog.js","import React from 'react'\nimport _ from 'lodash'\nimport {compose, withHandlers} from 'recompose'\nimport {reduxForm, Field} from 'redux-form'\nimport injectSheet from 'react-jss'\nimport Paper from 'material-ui/Paper'\nimport IconButton from 'material-ui/IconButton'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport PropTypes from 'prop-types'\nimport StockSearchField from '../ReduxForm/Stock/StockSearchField'\nimport ProductTypeSearchField from '../ReduxForm/Product/ProductTypeSearchField'\nimport RemainderStatusSearchField from '../ReduxForm/Remainder/RemainderStatusSearchField'\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\nimport {Link} from 'react-router'\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\nimport CloseIcon from '../CloseIcon'\nexport const REMAINDER_FILTER_OPEN = 'openFilterDialog'\n\nexport const REMAINDER_FILTER_KEY = {\n    TYPE: 'type',\n    STOCK: 'stock',\n    STATUS: 'status'\n}\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            position: 'absolute',\n            minWidth: '300px',\n            background: '#fff',\n            zIndex: 99,\n            top: 0,\n            left: 0,\n            borderRadius: 0,\n            padding: '10px 20px 10px 20px'\n        },\n        afterFilter: {\n            alignItems: 'center',\n            display: 'flex',\n            backgroundColor: '#efefef',\n            position: 'absolute',\n            width: '100%',\n            padding: '0 30px',\n            height: '48px',\n            marginLeft: '-30px',\n            '& > div:nth-child(2)': {\n                position: 'absolute',\n                right: '0'\n            },\n            '& > div:nth-child(1)': {\n                color: '#666666'\n            },\n            '& button': {\n                borderLeft: '1px solid white !important'\n            }\n        },\n        icon: {\n            color: '#8f8f8f !important'\n        },\n        arrow: {\n            display: 'flex',\n            alignItems: 'center',\n            color: '#12aaeb',\n            paddingRight: '14px',\n            position: 'relative',\n            '& svg': {\n                width: '13px !important',\n                height: '20px !important'\n            }\n        },\n        header: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            '& button': {\n                marginRight: '-12px !important'\n            }\n        },\n        title: {\n            fontSize: '15px',\n            color: '#5d6474'\n        },\n        submit: {\n            color: '#fff !important'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'RemainderFilterForm',\n        enableReinitialize: true\n    }),\n    withHandlers({\n        getCount: props => () => {\n            const {filter} = props\n            return _(REMAINDER_FILTER_KEY)\n                .values()\n                .filter(item => item !== REMAINDER_FILTER_KEY.FROM_DATE)\n                .filter(item => filter.getParam(item))\n                .value()\n                .length\n        }\n    })\n)\n\nconst RemainderFilterForm = enhance((props) => {\n    const {classes, filterDialog, getCount} = props\n    const filterCounts = getCount()\n\n    if (!filterDialog.openFilterDialog) {\n        if (filterCounts) {\n            return (\n                    <div className={classes.afterFilter}>\n                        <div>Фильтр: {filterCounts} элемента</div>\n                        <div>\n                            <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\n                                <BorderColorIcon color=\"#8f8f8f\" />\n                            </IconButton>\n                            <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\n                                <CloseIcon className={classes.icon}/>\n                            </IconButton>\n                        </div>\n                    </div>\n            )\n        }\n\n        return (\n                <Link\n                    className={classes.arrow}\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\n                    <div>Показать фильтр</div> <KeyboardArrowDown color=\"#12aaeb\" />\n                </Link>\n        )\n    }\n    return (\n        <div>\n            <Paper className={classes.wrapper} zDepth={2}>\n                <div className={classes.header}>\n                    <span className={classes.title}>Фильтр</span>\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\n                        <CloseIcon className={classes.icon} />\n                    </IconButton>\n                </div>\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\n                    <div>\n                        <Field\n                            className={classes.inputFieldCustom}\n                            name=\"stock\"\n                            component={StockSearchField}\n                            label=\"Склад\"\n                            fullWidth={true}/>\n                        <Field\n                            className={classes.inputFieldCustom}\n                            name=\"type\"\n                            component={ProductTypeSearchField}\n                            fullWidth={true}\n                            label=\"Тип товара\"/>\n                        <Field\n                            className={classes.inputFieldCustom}\n                            name=\"status\"\n                            fullWidth={true}\n                            component={RemainderStatusSearchField}\n                            label=\"Статус\"/>\n                    </div>\n\n                    <RaisedButton\n                        type=\"submit\"\n                        primary={true}\n                        buttonStyle={{color: '#fff'}}\n                        label=\"Применить\"\n                        style={{marginTop: '15px'}}>\n                    </RaisedButton>\n                </form>\n            </Paper>\n        </div>\n    )\n})\n\nRemainderFilterForm.propTypes = {\n    filterDialog: PropTypes.shape({\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired,\n        handleClearFilterDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default RemainderFilterForm\n\n\n\n// WEBPACK FOOTER //\n// src/components/Remainder/RemainderFilterForm.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport {Field, Fields, reduxForm, SubmissionError} from 'redux-form'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport StockSearchField from '../ReduxForm/Stock/StockSearchField'\nimport DateField from '../ReduxForm/Basic/DateField'\nimport TextField from '../ReduxForm/Basic/TextField'\nimport RemainderListProductField from '../ReduxForm/Remainder/RemainderListProductField'\n\nexport const REMAINDER_TRANSFER_DIALOG_OPEN = 'openTransferDialog'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            display: 'flex',\n            justifyContent: 'center',\n            width: '100%',\n            background: '#fff'\n        },\n        popUp: {\n            color: '#333 !important',\n            overflowY: 'hidden !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            overflowX: 'hidden',\n            height: '100%'\n        },\n        wrapper: {\n            position: 'relative',\n            padding: '0 30px',\n            marginBottom: '5px',\n            '& .row': {\n                alignItems: 'center',\n                '& div': {\n                    lineHeight: '55px'\n                }\n            }\n        },\n        title: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '20px 30px',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                padding: '0 !important',\n                position: 'absolute !important'\n            }\n        },\n        leftSide: {\n            flexBasis: '25%',\n            maxWidth: '25%',\n            borderRight: '1px #efefef solid',\n            padding: '20px 30px',\n            '&  > div > div:first-child': {\n                width: '100% !important'\n            }\n\n        },\n        rightSide: {\n            flexBasis: '75%',\n            maxWidth: '75%'\n        },\n        dialog: {\n            width: '1000px important'\n        },\n        dialogBody: {\n            display: 'flex'\n        },\n        noPadding: {\n            color: '#333 !important',\n            padding: '0! important'\n        },\n        subTitle: {\n            fontWeight: '600'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            width: '100% !important',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        inputDateCustom: {\n            height: '45px !important',\n            '& input': {\n                marginTop: '0 !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& div': {\n                fontSize: '13px !important',\n                height: '45px !important',\n                width: '100% !important'\n            }\n        },\n        bottomButton: {\n            bottom: '0',\n            left: '0',\n            right: '0',\n            padding: '10px',\n            zIndex: '999',\n            borderTop: '1px solid #efefef',\n            background: '#fff',\n            textAlign: 'right',\n            '& span': {\n                fontSize: '13px !important',\n                fontWeight: '600 !important',\n                color: '#129fdd',\n                verticalAlign: 'inherit !important'\n            }\n        },\n        actionButton: {\n            fontSize: '13px !important',\n            margin: '0 !important'\n        }\n    }),\n    reduxForm({\n        form: 'RemainderTransferForm',\n        enableReinitialize: true\n    })\n)\n\nconst RemainderTransferDialog = enhance((props) => {\n    const {open, handleSubmit, onClose, classes} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={{maxWidth: 'none', width: '1000px'}}\n            bodyStyle={{minHeight: 'auto'}}\n            bodyClassName={classes.noPadding}>\n            <div className={classes.title}>\n                <span>передача товаров</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <form onSubmit={onSubmit} className={classes.form} style={{minHeight: 'auto'}}>\n            <div className={classes.dialogBody}>\n                <div className={classes.leftSide}>\n                    <span className={classes.subTitle}>Условия передачи товара</span>\n                    <Field\n                        className={classes.inputFieldCustom}\n                        name=\"fromStock\"\n                        component={StockSearchField}\n                        label=\"С какого склада\"\n                    />\n                    <Field\n                        className={classes.inputFieldCustom}\n                        name=\"toStock\"\n                        component={StockSearchField}\n                        label=\"На Склад\"\n                    />\n                    <Field\n                        className={classes.inputDateCustom}\n                        name=\"deliveryDate\"\n                        component={DateField}\n                        label=\"Дата доставки\"\n                    />\n                    <Field\n                        style={{marginTop: '-20px', lineHeight: '20px', fontSize: '13px'}}\n                        name=\"comment\"\n                        component={TextField}\n                        label=\"Оставить комментарий...\"\n\n                        multiLine={true}\n                        rows={1}\n                        rowsMax={6}\n                        fullWidth={true}/>\n                </div>\n                <div className={classes.rightSide}>\n                    <Fields\n                        names={['products', 'productType', 'product', 'amount', 'isDefect']}\n                        component={RemainderListProductField}\n                    />\n                </div>\n            </div>\n            <div className={classes.bottomButton}>\n                <FlatButton\n                    label=\"Передать\"\n                    className={classes.actionButton}\n                    primary={true}\n                    type=\"submit\"\n                />\n            </div>\n            </form>\n        </Dialog>\n    )\n})\n\nRemainderTransferDialog.propTypes = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired\n}\n\nRemainderTransferDialog.defaultProps = {\n    isUpdate: false\n}\n\nexport default RemainderTransferDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Remainder/RemainderTransferDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {TextField, TimeField} from '../ReduxForm'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport MainStyles from '../Styles/MainStyles'\n\nexport const SHIFT_CREATE_DIALOG_OPEN = 'openCreateDialog'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\n\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        buttonSub: {\n            textAlign: 'right',\n            marginTop: '10px',\n            '& span': {\n                color: '#129fdd !important'\n            }\n        },\n        timePick: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            '& > div': {\n                flexBasis: '49%'\n            }\n        },\n        inputFieldShift: {\n            fontSize: '13px !important',\n            marginRight: '20px',\n            height: '50px !important',\n            '& input': {\n                top: '-10px'\n            },\n            '& label': {\n                top: '20px !important'\n            }\n        },\n        inputFieldTime: {\n            fontSize: '13px !important',\n            height: '50px !important',\n            '& input': {\n                top: '-10px'\n            },\n            '& label': {\n                top: '20px !important'\n            }\n        }\n    })),\n    reduxForm({\n        form: 'ShiftCreateForm',\n        enableReinitialize: true\n    })\n)\n\nconst ShiftCreateDialog = enhance((props) => {\n    const {open, loading, handleSubmit, onClose, classes, isUpdate} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\n            bodyStyle={{minHeight: 'auto'}}\n            bodyClassName={classes.body}>\n            <div className={classes.titleContent}>\n                <span>{isUpdate ? 'Редактирование смены' : 'Добавить смену'}</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit}>\n                    <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4}/>\n                    </div>\n                    <div className={classes.inContent} style={{minHeight: '150px'}}>\n                        <div className={classes.field} style={{paddingTop: '15px'}}>\n                            <Field\n                                name=\"name\"\n                                component={TextField}\n                                className={classes.inputFieldShift}\n                                label=\"Наименование\"\n                                fullWidth={true}/>\n                            <div className={classes.timePick}>\n                                <Field\n                                    name=\"beginTime\"\n                                    component={TimeField}\n                                    className={classes.inputFieldTime}\n                                    label=\"Начало\"\n                                    fullWidth={true}/>\n                                <Field\n                                    name=\"endTime\"\n                                    component={TimeField}\n                                    className={classes.inputFieldTime}\n                                    label=\"Конец\"\n                                    fullWidth={true}/>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Применить\"\n                            className={classes.actionButton}\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\n\nShiftCreateDialog.propTypes = {\n    isUpdate: PropTypes.bool,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\n\nShiftCreateDialog.defaultProps = {\n    isUpdate: false\n}\n\nexport default ShiftCreateDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Shift/ShiftCreateDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose, withState} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {\n    TextField,\n    MarketTypeSearchField,\n    ClientSearchField,\n    VisitFrequencySearchField,\n    ShopStatusSearchField\n} from '../ReduxForm'\nimport IconButton from 'material-ui/IconButton'\nimport CloseIcon2 from '../CloseIcon2'\nimport Place from '../AddPlace'\nimport Dot from '../Images/dot.png'\n\nexport const SHOP_CREATE_DIALOG_OPEN = 'openCreateDialog'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            justifyContent: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        popUp: {\n            overflowY: 'hidden !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            overflowX: 'hidden',\n            height: '100%',\n            maxHeight: 'inherit !important'\n        },\n        titleContent: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '20px 30px',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                padding: '0 !important',\n                position: 'absolute !important'\n            }\n        },\n        inContent: {\n            display: 'flex',\n            color: '#333',\n            minHeight: '450px'\n        },\n        padding: {\n            padding: '20px 30px'\n        },\n        leftSide: {\n            flexBasis: '50%',\n            maxWidth: '50%',\n            borderRight: '1px solid #efefef',\n            extend: 'padding'\n        },\n        rightSide: {\n            flexBasis: '50%',\n            maxWidth: '50%',\n            extend: 'padding',\n            maxHeight: '442px',\n            overflowY: 'auto'\n        },\n        bodyContent: {\n            color: '#333',\n            width: '100%'\n        },\n        form: {\n            position: 'relative'\n        },\n        fields: {\n            width: '100%',\n            padding: '20px 30px',\n            maxHeight: '622px',\n            overflowY: 'auto'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        bottomButton: {\n            bottom: '0',\n            left: '0',\n            right: '0',\n            padding: '10px',\n            zIndex: '999',\n            borderTop: '1px solid #efefef',\n            background: '#fff',\n            textAlign: 'right',\n            '& span': {\n                fontSize: '13px !important',\n                fontWeight: '600 !important',\n                color: '#129fdd',\n                verticalAlign: 'inherit !important'\n            }\n        },\n        actionButton: {\n            fontSize: '13px !important',\n            margin: '0 !important'\n        },\n        podlojkaScroll: {\n            padding: '0 !important',\n            overflowY: 'auto !important',\n            '& > div > div': {\n                width: 'auto !important',\n                maxWidth: '820px !important'\n            }\n        },\n        flex: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            width: '100%'\n        },\n        divider: {\n            paddingBottom: '20px',\n            marginBottom: '20px',\n            position: 'relative',\n            '&:after': {\n                content: '\"\"',\n                backgroundImage: 'url(' + Dot + ')',\n                position: 'absolute',\n                bottom: '0',\n                height: '2px',\n                left: '0',\n                right: '0'\n            }\n        },\n        inputHalfWrap: {\n            flexBasis: '50%',\n            width: '50%'\n        },\n        add: {\n            marginTop: '5px',\n            marginBottom: '-5px',\n            textAlign: 'right'\n        },\n        addPlace: {\n            extend: 'add',\n            textAlign: 'left',\n            display: 'flex',\n            alignItems: 'center',\n            '& a': {\n                display: 'flex',\n                alignItems: 'center',\n                '& svg': {\n                    marginRight: '5px',\n                    width: '16px !important'\n                }\n            },\n            '& div': {\n                display: 'flex',\n                alignItems: 'center',\n                '& span': {\n                    marginRight: '5px',\n                    fontSize: '12px !important'\n                },\n                '& svg': {\n                    marginRight: '5px',\n                    width: '16px !important'\n                }\n            }\n        }\n    }),\n    reduxForm({\n        form: 'ShopCreateForm',\n        enableReinitialize: true\n    }),\n    withState('openClient', 'setOpenClient', false)\n)\nconst ShopCreateDialog = enhance((props) => {\n    const {\n        open,\n        loading,\n        handleSubmit,\n        onClose,\n        classes,\n        isUpdate,\n        openClient,\n        setOpenClient,\n        mapDialog,\n        updateMapDialog,\n        mapLocation\n    } = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n    const lat = _.get(mapLocation, 'lat')\n    const lng = _.get(mapLocation, 'lng')\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.podlojkaScroll}\n            contentStyle={loading ? {width: '500px'} : {width: '100%'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} className={classes.form}>\n                    <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4}/>\n                    </div>\n                    <div className={classes.titleContent}>\n                        <span>{isUpdate ? 'Изменение магазина' : 'Добавление магазина'}</span>\n                        <IconButton onTouchTap={onClose}>\n                            <CloseIcon2 color=\"#666666\"/>\n                        </IconButton>\n                    </div>\n                    <div className={classes.inContent}>\n                        <div className={classes.leftSide}>\n                            <div className={classes.divider}>\n                                {!isUpdate ? (!openClient ? <Field\n                                    name=\"client\"\n                                    component={ClientSearchField}\n                                    className={classes.inputFieldCustom}\n                                    label=\"Клиент\"\n                                    fullWidth={true}/>\n                                    : <Field\n                                        name=\"newClientName\"\n                                        component={TextField}\n                                        className={classes.inputFieldCustom}\n                                        label=\"Имя клиента\"\n                                        fullWidth={true}/>)\n                                    : <Field\n                                        name=\"client\"\n                                        component={TextField}\n                                        className={classes.inputFieldCustom}\n                                        label=\"Имя клиента\"\n                                        fullWidth={true}/>}\n                                <div className={classes.add}>\n                                    {!openClient && !isUpdate && <a onClick={() => {\n                                        setOpenClient(true)\n                                    }}>+ добавить клиента</a>}\n                                </div>\n                            </div>\n                            <div className={classes.divider}>\n                                <Field\n                                    name=\"name\"\n                                    component={TextField}\n                                    className={classes.inputFieldCustom}\n                                    label=\"Наименование\"\n                                    fullWidth={true}/>\n                                <Field\n                                    name=\"marketType\"\n                                    component={MarketTypeSearchField}\n                                    className={classes.inputFieldCustom}\n                                    label=\"Тип заведения\"\n                                    fullWidth={true}/>\n                            </div>\n                            <div className={classes.flex} style={{alignItems: 'baseline'}}>\n                                <div className={classes.inputHalfWrap}>Частота посещений:</div>\n                                <div className={classes.inputHalfWrap}>\n                                    <Field\n                                        name=\"frequency\"\n                                        component={VisitFrequencySearchField}\n                                        className={classes.inputFieldCustom}\n                                        hintText=\"Ежедневно\"\n                                        fullWidth={true}/>\n                                </div>\n                            </div>\n                            <div className={classes.flex} style={{alignItems: 'baseline'}}>\n                                <div className={classes.inputHalfWrap}>Статус объекта:</div>\n                                <div className={classes.inputHalfWrap}>\n                                    <Field\n                                        name=\"status\"\n                                        component={ShopStatusSearchField}\n                                        className={classes.inputFieldCustom}\n                                        hintText=\"Активен\"\n                                        fullWidth={true}/>\n                                </div>\n                            </div>\n                        </div>\n                        <div className={classes.rightSide}>\n                            <div className={classes.divider}>\n                                <Field\n                                    name=\"address\"\n                                    component={TextField}\n                                    className={classes.inputFieldCustom}\n                                    label=\"Адрес\"\n                                    fullWidth={true}/>\n                                <Field\n                                    name=\"guide\"\n                                    component={TextField}\n                                    className={classes.inputFieldCustom}\n                                    label=\"Ориентир\"\n                                    fullWidth={true}/>\n                                <div className={classes.addPlace}>\n                                    {!(lat && lng)\n                                        ? <a onClick={mapDialog.handleOpenMapDialog}><Place color=\"#129fdd\"/> отметить\n                                            местоположение на карте</a>\n                                        : <div className={classes.flex}>\n                                            <div>\n                                                <Place color=\"#999\"/> <span>{lat}</span> <span>{lng}</span>\n                                            </div>\n                                            <a onClick={updateMapDialog.handleOpenMapUpdateDialog}>Изменить</a>\n                                        </div>}\n                                </div>\n                            </div>\n                            <Field\n                                name=\"phone\"\n                                component={TextField}\n                                className={classes.inputFieldCustom}\n                                label=\"Телефон\"\n                                fullWidth={true}/>\n                            <Field\n                                name=\"contactName\"\n                                component={TextField}\n                                className={classes.inputFieldCustom}\n                                label=\"Контактное лицо\"\n                                fullWidth={true}/>\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"/>\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\n\nShopCreateDialog.propTyeps = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired,\n    mapLocation: PropTypes.object,\n    mapDialog: PropTypes.shape({\n        openMapDialog: PropTypes.bool.isRequired,\n        handleOpenMapDialog: PropTypes.func.isRequired,\n        handleCloseMapDialog: PropTypes.func.isRequired,\n        handleSubmitMapDialog: PropTypes.func.isRequired\n    }).isRequired,\n    updateMapDialog: PropTypes.shape({\n        openUpdateMapDialog: PropTypes.bool.isRequired,\n        handleOpenMapUpdateDialog: PropTypes.func.isRequired,\n        handleCloseMapUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitMapUpdateDialog: PropTypes.func.isRequired\n    }).isRequired\n}\nShopCreateDialog.defaultProps = {\n    isUpdate: false\n}\nexport default ShopCreateDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Shop/ShopCreateDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose, withHandlers} from 'recompose'\nimport {reduxForm, Field} from 'redux-form'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {Link} from 'react-router'\nimport Paper from 'material-ui/Paper'\nimport IconButton from 'material-ui/IconButton'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\nimport MarketTypeField from '../ReduxForm/Shop/MarketTypeSearchField'\nimport {ClientSearchField, ShopStatusSearchField, FrequencySearchField, UsersSearchField, ZoneSearchField} from '../ReduxForm'\nimport CloseIcon from '../CloseIcon'\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\n\nexport const SHOP_FILTER_OPEN = 'openFilterDialog'\n\nexport const SHOP_FILTER_KEY = {\n    CLIENT: 'client',\n    MARKET_TYPE: 'marketType',\n    STATUS: 'isActive',\n    FREQUENCY: 'frequency',\n    ZONE: 'zone',\n    CREATED_BY: 'createdBy'\n}\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            position: 'absolute',\n            minWidth: '300px',\n            background: '#fff',\n            zIndex: 99,\n            top: 0,\n            left: 0,\n            borderRadius: 0,\n            padding: '10px 20px 10px 20px'\n        },\n        afterFilter: {\n            alignItems: 'center',\n            display: 'flex',\n            backgroundColor: '#efefef',\n            position: 'relative',\n            padding: '16px 30px',\n            marginLeft: '-30px',\n            '& > div:nth-child(2)': {\n                position: 'absolute',\n                right: '0'\n            },\n            '& > div:nth-child(1)': {\n                color: '#666666'\n            },\n            '& button': {\n                borderLeft: '1px solid white !important'\n            }\n        },\n        icon: {\n            color: '#8f8f8f !important'\n        },\n        arrow: {\n            color: '#12aaeb',\n            paddingRight: '14px',\n            position: 'relative',\n            '& svg': {\n                position: 'absolute',\n                width: '13px !important',\n                height: '20px !important'\n            }\n        },\n        header: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            '& button': {\n                marginRight: '-12px !important'\n            }\n        },\n        title: {\n            fontSize: '15px',\n            color: '#5d6474'\n        },\n        submit: {\n            color: '#fff !important'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'ShopFilterForm',\n        enableReinitialize: true\n    }),\n    withHandlers({\n        getCount: props => () => {\n            const {filter} = props\n            return _(SHOP_FILTER_KEY)\n                .values()\n                .filter(item => item !== SHOP_FILTER_KEY.FROM_DATE)\n                .filter(item => filter.getParam(item))\n                .value()\n                .length\n        }\n    })\n)\n\nconst ShopFilterForm = enhance((props) => {\n    const {classes, filterDialog, getCount} = props\n    const filterCounts = getCount()\n\n    if (!filterDialog.openFilterDialog) {\n        if (filterCounts) {\n            return (\n                <div className={classes.afterFilter}>\n                    <div>Фильтр: {filterCounts} элемента</div>\n                    <div>\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\n                            <BorderColorIcon color=\"#8f8f8f\" />\n                        </IconButton>\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\n                            <CloseIcon className={classes.icon}/>\n                        </IconButton>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <Link\n                    className={classes.arrow}\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\n                </Link>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <Paper className={classes.wrapper} zDepth={2}>\n                <div className={classes.header}>\n                    <span className={classes.title}>Фильтр</span>\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\n                        <CloseIcon className={classes.icon} />\n                    </IconButton>\n                </div>\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\n                    <Field\n                        className={classes.inputFieldCustom}\n                        name=\"marketType\"\n                        component={MarketTypeField}\n                        label=\"Тип магазина\"\n                        fullWidth={true}/>\n                    <Field\n                        className={classes.inputFieldCustom}\n                        name=\"isActive\"\n                        component={ShopStatusSearchField}\n                        label=\"Статус\"\n                        fullWidth={true}/>\n                    <Field\n                        className={classes.inputFieldCustom}\n                        name=\"createdBy\"\n                        component={UsersSearchField}\n                        label=\"Создал\"/>\n                    <Field\n                        className={classes.inputFieldCustom}\n                        name=\"client\"\n                        component={ClientSearchField}\n                        label=\"Клиент\"/>\n                    <Field className={classes.inputFieldCustom}\n                           name=\"zone\"\n                           component={ZoneSearchField}\n                           label=\"Зона\"/>\n                    <Field\n                        className={classes.inputFieldCustom}\n                        name=\"frequency\"\n                        component={FrequencySearchField}\n                        label=\"Частота посещений\"/>\n\n                    <RaisedButton\n                        type=\"submit\"\n                        primary={true}\n                        buttonStyle={{color: '#fff'}}\n                        label=\"Применить\"\n                        style={{marginTop: '15px'}}>\n                    </RaisedButton>\n                </form>\n            </Paper>\n        </div>\n    )\n})\n\nShopFilterForm.propTypes = {\n    filter: PropTypes.object.isRequired,\n    filterDialog: PropTypes.shape({\n        filterLoading: PropTypes.bool.isRequired,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    })\n}\n\nexport default ShopFilterForm\n\n\n\n// WEBPACK FOOTER //\n// src/components/Shop/ShopFilterForm.js","import _ from 'lodash'\nimport React from 'react'\nimport * as ROUTES from '../../constants/routes'\nimport AttachMoney from 'material-ui/svg-icons/editor/attach-money'\nimport Finance from 'material-ui/svg-icons/action/account-balance-wallet'\nimport Map from 'material-ui/svg-icons/maps/map'\nimport Settings from 'material-ui/svg-icons/action/settings'\nimport Statistics from 'material-ui/svg-icons/action/timeline'\nimport Store from 'material-ui/svg-icons/action/store'\nimport Person from 'material-ui/svg-icons/social/group'\nimport Supply from 'material-ui/svg-icons/action/swap-horiz'\nimport Products from 'material-ui/svg-icons/device/widgets'\nimport {getGroups} from '../../helpers/storage'\n\nexport const MenuItems = [\n    {\n        name: 'Продажи',\n        icon: (<AttachMoney />),\n        url: ROUTES.ORDER_LIST_URL,\n        childs: [\n            {name: 'Заказы', url: ROUTES.ORDER_LIST_URL},\n            {name: 'Активность', url: ROUTES.ACTIVITY_LIST_URL},\n            {name: 'План', url: ROUTES.PLAN_LIST_URL},\n            {name: 'Формирование цен', url: ROUTES.PRICE_LIST_URL},\n            {name: 'Отслеживание агентов', url: ROUTES.TRACKING_LIST_URL},\n            {name: 'Маркетинговые акции', url: ROUTES.PRICES_LIST_URL},\n            {name: 'Зоны', url: ROUTES.ZONES_LIST_URL}\n        ]\n    },\n    {\n        name: 'Клиенты',\n        icon: (<Person />),\n        url: ROUTES.CLIENT_LIST_URL,\n        childs: [\n            {name: 'Клиенты', url: ROUTES.CLIENT_LIST_URL},\n            {name: 'Магазины', url: ROUTES.SHOP_LIST_URL}\n        ]\n    },\n    {\n        name: 'Продукты',\n        icon: (<Products />),\n        url: ROUTES.PRODUCT_LIST_URL,\n        childs: [\n            {name: 'Продукты', url: ROUTES.PRODUCT_LIST_URL}\n        ]\n    },\n    {\n        name: 'Склад',\n        icon: (<Store />),\n        url: ROUTES.REMAINDER_LIST_URL,\n        childs: [\n            {name: 'Остаток', url: ROUTES.REMAINDER_LIST_URL},\n            {name: 'Приемка / Передача', url: ROUTES.STOCK_RECEIVE_LIST_URL}\n        ]\n    },\n    {\n        name: 'Поставки',\n        icon: (<Supply />),\n        url: ROUTES.PROVIDER_LIST_URL,\n        childs: [\n            {name: 'Поставщики', url: ROUTES.PROVIDER_LIST_URL},\n            {name: 'Поставки', url: ROUTES.SUPPLY_LIST_URL}\n        ]\n    },\n    {\n        name: 'Финансы',\n        icon: (<Finance />),\n        url: ROUTES.TRANSACTION_LIST_URL,\n        childs: [\n            {name: 'Транзакции', url: ROUTES.TRANSACTION_LIST_URL},\n            {name: 'Ожидаемые расходы', url: ROUTES.PENDING_EXPENSES_LIST_URL},\n            {name: 'Ожидаeмые оплаты', url: ROUTES.PENDING_PAYMENTS_LIST_URL},\n            {name: 'Баланс клиентов', url: ROUTES.CLIENT_BALANCE_LIST_URL}\n        ]\n    },\n    {\n        name: 'Производство',\n        icon: (<Map />),\n        url: ROUTES.MANUFACTURE_CUSTOM_URL,\n        childs: [\n            {name: 'Производство', url: ROUTES.MANUFACTURE_CUSTOM_URL}\n        ]\n    },\n    {\n        name: 'Статистика',\n        icon: (<Statistics />),\n        url: ROUTES.STATISTICS_LIST_URL,\n        childs: [\n            {name: 'Статистика', url: ROUTES.STATISTICS_LIST_URL}\n        ]\n    },\n    {\n        name: 'Настройки',\n        icon: (<Settings />),\n        url: ROUTES.STOCK_LIST_URL,\n        bottom: true,\n        childs: [\n            {name: 'Склады', url: ROUTES.STOCK_LIST_URL},\n            {name: 'Валюты', url: ROUTES.CURRENCY_LIST_URL},\n            {name: 'Кассы', url: ROUTES.CASHBOX_LIST_URL},\n            {name: 'Категории расходов', url: ROUTES.EXPENSIVE_CATEGORY_LIST_URL},\n            {name: 'Типы продуктов', url: ROUTES.PRODUCT_TYPE_LIST_URL},\n            {name: 'Пользователи', url: ROUTES.USERS_LIST_URL},\n            {name: 'Измерения', url: ROUTES.MEASUREMENT_LIST_URL},\n            {name: 'Оборудование', url: ROUTES.EQUIPMENT_LIST_URL},\n            {name: 'Смена', url: ROUTES.SHIFT_LIST_URL},\n            {name: 'Тип магазина', url: ROUTES.MARKET_TYPE_LIST_URL},\n            {name: 'Должности', url: ROUTES.POSITION_LIST_URL}\n        ]\n    }\n]\n\nconst groups = [\n    {\n        id: 1,\n        name: 'SupDir',\n        urls: [\n            ROUTES.REMAINDER_LIST_URL,\n            ROUTES.STOCK_RECEIVE_LIST_URL\n        ]\n    },\n    {\n        id: 2,\n        name: 'delivery',\n        urls: []\n    },\n    {\n        id: 3,\n        name: 'agent',\n        urls: []\n    },\n    {\n        id: 4,\n        name: 'merch',\n        urls: []\n    },\n    {\n        id: 5,\n        name: 'collector'\n    },\n    {\n        id: 6,\n        name: 'cashier',\n        urls: [\n            ROUTES.TRANSACTION_LIST_URL,\n            ROUTES.PENDING_EXPENSES_LIST_URL,\n            ROUTES.PENDING_PAYMENTS_LIST_URL,\n            ROUTES.CLIENT_BALANCE_LIST_URL\n        ]\n    },\n    {\n        id: 7,\n        name: 'supervisor'\n    }\n]\n\nconst sessionGroups = getGroups()\nlet menus = []\nconst getLinksByGroup = (groupId) => {\n    return _.get(_.find(groups, {'id': _.toInteger(groupId)}), 'urls')\n}\n_.map(sessionGroups, (item) => {\n    const links = getLinksByGroup(item)\n    _.map(links, (link) => {\n        menus.push(link)\n    })\n})\n\n\n\n// WEBPACK FOOTER //\n// src/components/SidebarMenu/MenuItems.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose, withHandlers} from 'recompose'\nimport {reduxForm, Field} from 'redux-form'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {Link} from 'react-router'\nimport Paper from 'material-ui/Paper'\nimport IconButton from 'material-ui/IconButton'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\nimport DateToDateField from '../ReduxForm/Basic/DateToDateField'\nimport ExportExel from '../Images/excel.png'\nimport CloseIcon from '../CloseIcon'\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\n\nexport const STATDEBTORS_FILTER_OPEN = 'openFilterDialog'\n\nexport const STATDEBTORS_FILTER_KEY = {\n    FROM_DATE: 'fromDate',\n    TO_DATE: 'toDate'\n}\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            position: 'absolute',\n            minWidth: '300px',\n            background: '#fff',\n            zIndex: 99,\n            top: 0,\n            left: 0,\n            borderRadius: 0,\n            padding: '10px 20px 10px 20px'\n        },\n        afterFilter: {\n            alignItems: 'center',\n            display: 'flex',\n            backgroundColor: '#efefef',\n            position: 'relative',\n            padding: '16px 30px',\n            marginLeft: '-30px',\n            '& > div:nth-child(2)': {\n                position: 'absolute',\n                right: '0'\n            },\n            '& > div:nth-child(1)': {\n                color: '#666666'\n            },\n            '& button': {\n                borderLeft: '1px solid white !important'\n            }\n        },\n        icon: {\n            color: '#8f8f8f !important'\n        },\n        arrow: {\n            color: '#12aaeb',\n            paddingRight: '14px',\n            position: 'relative',\n            '& svg': {\n                position: 'absolute',\n                width: '13px !important',\n                height: '20px !important'\n            }\n        },\n        header: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            '& button': {\n                marginRight: '-12px !important'\n            }\n        },\n        title: {\n            fontSize: '15px',\n            color: '#5d6474'\n        },\n        submit: {\n            color: '#fff !important'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'StatDebtorsFilterForm',\n        enableReinitialize: true\n    }),\n    withHandlers({\n        getCount: props => () => {\n            const {filter} = props\n            return _(STATDEBTORS_FILTER_KEY)\n                .values()\n                .filter(item => item !== STATDEBTORS_FILTER_KEY.FROM_DATE)\n                .filter(item => filter.getParam(item))\n                .value()\n                .length\n        }\n    })\n)\n\nconst StatDebtorsFilterForm = enhance((props) => {\n    const {classes, filterDialog, getCount, getDocument} = props\n    const filterCounts = getCount()\n\n    if (!filterDialog.openFilterDialog) {\n        if (filterCounts) {\n            return (\n                <div className={classes.afterFilter}>\n                    <div>Фильтр: {filterCounts} элемента</div>\n                    <div>\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\n                            <BorderColorIcon color=\"#8f8f8f\" />\n                        </IconButton>\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\n                            <CloseIcon className={classes.icon}/>\n                        </IconButton>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <div\n                    style={{position: 'absolute', top: '15px', right: '260px'}}\n                     onTouchTap={getDocument.handleGetDocument}>\n                    <a><img src={ExportExel} style={{width: '24px'}} /></a>\n                </div>\n                <Link\n                    className={classes.arrow}\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\n                </Link>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <Paper className={classes.wrapper} zDepth={2}>\n                <div className={classes.header}>\n                    <span className={classes.title}>Фильтр</span>\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\n                        <CloseIcon className={classes.icon} />\n                    </IconButton>\n                </div>\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\n                    <div>\n                        <Field className={classes.inputFieldCustom} name=\"date\" component={DateToDateField} label=\"Диапазон дат\" fullWidth={true}/>\n                    </div>\n\n                    <RaisedButton\n                        type=\"submit\"\n                        primary={true}\n                        buttonStyle={{color: '#fff'}}\n                        label=\"Применить\"\n                        style={{marginTop: '15px'}}>\n                    </RaisedButton>\n                </form>\n            </Paper>\n        </div>\n    )\n})\n\nStatDebtorsFilterForm.propTypes = {\n    filter: PropTypes.object.isRequired,\n    filterDialog: PropTypes.shape({\n        filterLoading: PropTypes.bool.isRequired,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    }),\n    getDocument: PropTypes.shape({\n        handleGetDocument: PropTypes.func.isRequired\n    })\n}\n\nexport default StatDebtorsFilterForm\n\n\n\n// WEBPACK FOOTER //\n// src/components/StatDebtors/StatDebtorsFilterForm.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose, withState} from 'recompose'\nimport injectSheet from 'react-jss'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Row, Col} from 'react-flexbox-grid'\nimport Dot from '../Images/dot.png'\nimport Dialog from 'material-ui/Dialog'\nimport MainStyles from '../Styles/MainStyles'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\n\nexport const STAT_DEBTORS_ORDER_D = 'statDebtors'\n\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        dottedList: {\n            padding: '20px 0'\n        },\n        wrapper: {\n            color: '#333 !important',\n            width: '100%',\n            display: 'flex',\n            flexWrap: 'wrap'\n        },\n        dropdown: {\n            position: 'relative',\n            paddingRight: '15px',\n            zIndex: '10',\n            '&:after': {\n                top: '8px',\n                right: '0',\n                content: '\"\"',\n                position: 'absolute',\n                borderTop: '4px solid',\n                borderLeft: '4px solid transparent',\n                borderRight: '4px solid transparent'\n            }\n        },\n        link: {\n            extend: 'blue',\n            borderBottom: '1px dashed',\n            fontWeight: '600'\n        },\n        red: {\n            color: '#e57373 !important'\n        },\n        blue: {\n            color: '#12aaeb !important'\n        },\n        green: {\n            color: '#81c784 !important'\n        },\n        loader: {\n            width: '100%',\n            background: '#fff',\n            height: '400px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n        },\n        title: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            borderBottom: '1px #efefef solid',\n            alignItems: 'center',\n            width: '100%',\n            height: '65px',\n            padding: '0 30px'\n        },\n        titleLabel: {\n            fontSize: '18px',\n            color: '#333',\n            fontWeight: '600'\n        },\n        titleSupplier: {\n            width: '34%',\n            padding: '0 33%',\n            position: 'absolute',\n            marginLeft: '-30px',\n            textAlign: 'center',\n            fontSize: '14px',\n            '& .supplierDetails': {\n                background: '#fff',\n                boxShadow: '0 2px 5px 0px rgba(0, 0, 0, 0.16)',\n                fontSize: '13px',\n                position: 'absolute',\n                padding: '64px 28px 20px',\n                top: '-21px',\n                left: '50%',\n                zIndex: '9',\n                minWidth: '300px',\n                transform: 'translate(-50%, 0)',\n                '& .detailsWrap': {\n                    position: 'relative',\n                    paddingTop: '10px',\n                    '&:before': {\n                        content: '\"\"',\n                        background: 'url(' + Dot + ')',\n                        position: 'absolute',\n                        top: '0',\n                        left: '0',\n                        right: '0',\n                        height: '2px'\n                    }\n                },\n                '& .detailsList': {\n                    padding: '10px 0',\n                    textAlign: 'left',\n                    textTransform: 'initial',\n                    fontWeight: '600',\n                    '&:last-child': {\n                        paddingBottom: '0'\n                    },\n                    '& div:first-child': {\n                        color: '#666'\n                    }\n                }\n            }\n        },\n        titleClient: {\n            '& span': {\n                fontWeight: '600'\n            }\n        },\n        content: {\n            display: 'flex',\n            width: '100%'\n        },\n        padding: {\n            padding: '20px 30px'\n        },\n        leftSide: {\n            flexBasis: '35%',\n            borderRight: '1px #efefef solid'\n        },\n        subBlock: {\n            extend: 'padding',\n            borderBottom: '1px #efefef solid',\n            '&:last-child': {\n                border: 'none'\n            }\n        },\n        rightSide: {\n            flexBasis: '65%',\n            padding: '0 30px 20px'\n        },\n        subtitle: {\n            fontWeight: '600',\n            textTransform: 'uppercase',\n            marginBottom: '10px'\n        },\n        dataBox: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            '& ul:last-child': {\n                fontWeight: '600',\n                marginLeft: '30px',\n                textAlign: 'right'\n            },\n            '& li': {\n                lineHeight: '25px'\n            }\n        },\n        tabNav: {\n            padding: '15px 0',\n            borderBottom: '1px #f2f5f8 solid',\n            '& a': {\n                margin: '-15px 0',\n                padding: '15px 0',\n                marginRight: '40px',\n                color: '#9b9b9b',\n                '&.active': {\n                    color: '#12aaeb',\n                    borderBottom: '1px solid'\n                }\n            }\n        },\n        tabContent: {\n            '& .row:first-child': {\n                fontWeight: '600'\n            },\n            '& .row': {\n                '& > div': {\n                    textAlign: 'right'\n                },\n                '& > div:first-child': {\n                    textAlign: 'left'\n                }\n            }\n        },\n        tabWrapper: {\n            maxHeight: '232px',\n            overflowY: 'auto',\n            overflowX: 'hidden',\n            paddingRight: '0'\n        },\n        summary: {\n            fontWeight: '600',\n            marginTop: '20px',\n            paddingRight: '30px',\n            textTransform: 'uppercase',\n            textAlign: 'right'\n        }\n    })),\n    withState('openDetails', 'setOpenDetails', false)\n)\n\nconst StatDebtorsOrderDetails = enhance((props) => {\n    const {classes,\n        loading,\n        data,\n        setOpenDetails,\n        openDetails,\n        open,\n        close\n    } = props\n\n    const id = _.get(data, 'id')\n    const products = _.get(data, 'products')\n    const contact = _.get(data, 'contact')\n    const contactName = _.get(contact, 'name')\n    const contactEmail = _.get(contact, 'email') || 'N/A'\n    const contactPhone = _.get(contact, 'telephone') || 'N/A'\n\n    const client = _.get(data, 'client')\n    const clientPerson = _.get(client, 'name')\n    const deliveryType = _.get(data, 'deliveryType')\n\n    const percent = 100\n    const zero = 0\n    const deliveryPrice = _.get(data, 'deliveryPrice')\n    const discount = _.get(data, 'discountPrice')\n    const totalPrice = _.get(data, 'totalPrice')\n    const totalBalance = _.get(data, 'totalBalance')\n    const discountPrice = deliveryPrice * (discount / percent)\n\n    if (loading) {\n        return (\n            <div className={classes.loader}>\n                <div>\n                    <CircularProgress size={40} thickness={4}/>\n                </div>\n            </div>\n        )\n    }\n    return (\n            <Dialog\n                modal={true}\n                open={open}\n                onRequestClose={close}\n                className={classes.dialog}\n                contentStyle={loading ? {width: '300px'} : {width: '1000px', maxWidth: '1000px'}}\n                bodyStyle={{minHeight: 'auto'}}\n                bodyClassName={classes.popUp}>\n                <div className={classes.titleContent}>\n                    <span>Заказ №{id}</span>\n                    <div className={classes.titleSupplier}>\n                        <a className={classes.dropdown} onMouseEnter={() => {\n                            setOpenDetails(true)\n                        }}>{clientPerson}</a>\n                        {openDetails &&\n                        <div className=\"supplierDetails\" onMouseLeave={() => {\n                            setOpenDetails(false)\n                        }}>\n                            <div className=\"detailsWrap\">\n                                <Row className=\"detailsList\">\n                                    <Col xs={6}>Контактное лицо</Col>\n                                    <Col xs={6}>{contactName}</Col>\n                                </Row>\n                                <Row className=\"detailsList\">\n                                    <Col xs={6}>Телефон</Col>\n                                    <Col xs={6}>{contactPhone}</Col>\n                                </Row>\n                                <Row className=\"detailsList\">\n                                    <Col xs={6}>Email</Col>\n                                    <Col xs={6}>{contactEmail}</Col>\n                                </Row>\n                            </div>\n                        </div>\n                        }\n                    </div>\n                    <IconButton onTouchTap={close}>\n                        <CloseIcon2 color=\"#666666\"/>\n                    </IconButton>\n                </div>\n                <div className={classes.wrapper}>\n                    <div className={classes.content}>\n                        <div className={classes.leftSide} style={{paddingRight: '0'}}>\n                            <div className={classes.subBlock}>\n                                <div className={classes.subtitle}>Баланс</div>\n                                <div className={classes.dataBox}>\n                                    <ul style={{width: '50%'}}>\n                                        <li>Тип оплаты:</li>\n                                        <li>Дата оплаты:</li>\n                                        <li>Стоимость:</li>\n                                        <li>Скидка ({discount}%):</li>\n                                        <li>Оплачено:</li>\n                                        <li>Остаток:</li>\n                                    </ul>\n                                    <ul style={{width: '50%', textAlign: 'left'}}>\n                                        <li>Перечисление</li>\n                                        <li>22.05.2017</li>\n                                        <li>{deliveryPrice}</li>\n                                        <li>{discountPrice}</li>\n                                        <li>\n                                            <span className={classes.link}>500 000 UZS</span>\n                                        </li>\n                                        <li className={totalBalance > zero ? classes.red : classes.green}>{totalBalance}</li>\n                                    </ul>\n                                </div>\n                            </div>\n\n                            <div className={classes.subBlock}>\n                                <div className={classes.subtitle}>Передача</div>\n                                <div className={classes.dataBox}>\n                                    <ul>\n                                        <li>Тип передачи:</li>\n                                        <li>Статус передачи:</li>\n                                    </ul>\n                                    <ul>\n                                        <li>{deliveryType > zero ? 'Доставка' : 'Самовывоз'}</li>\n                                        <li className={classes.red}>не доставлен</li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        <div className={classes.rightSide}>\n                            <div className={classes.tab}>\n                                <div className={classes.tabNav}>\n                                    <a className=\"active\">Список товаров</a>\n                                    <a>Возврат</a>\n                                </div>\n                                <div className={classes.tabContent}>\n                                    <div className={classes.tabWrapper}>\n                                        <Row className=\"dottedList\">\n                                            <Col xs={6}>Товар</Col>\n                                            <Col xs={2}>Количество</Col>\n                                            <Col xs={2}>Цена (UZS)</Col>\n                                            <Col xs={2}>Сумма (UZS)</Col>\n                                        </Row>\n\n                                        {_.map(products, (item) => {\n                                            const product = _.get(item, 'product')\n                                            const productId = _.get(product, 'id')\n                                            const productName = _.get(product, 'name')\n                                            const price = _.get(item, 'price')\n                                            const cost = _.get(item, 'cost')\n                                            const amount = _.get(item, 'amount')\n                                            const measurement = _.get(product, ['measurement', 'name'])\n                                            return (\n                                                <Row className=\"dottedList\" key={productId}>\n                                                    <Col xs={6}>{productName}</Col>\n                                                    <Col xs={2}>{amount} {measurement}</Col>\n                                                    <Col xs={2}>{price}</Col>\n                                                    <Col xs={2}>{cost}</Col>\n                                                </Row>\n                                            )\n                                        })}\n                                    </div>\n\n                                    <div className={classes.summary}>Итого: {totalPrice} UZS</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Dialog>\n\n    )\n})\n\nStatDebtorsOrderDetails.propTypes = {\n    open: PropTypes.bool.isRequired,\n    data: PropTypes.object.isRequired,\n    loading: PropTypes.bool.isRequired,\n    orderListData: PropTypes.object,\n    close: PropTypes.func.isRequired\n}\n\nexport default StatDebtorsOrderDetails\n\n\n\n// WEBPACK FOOTER //\n// src/components/StatDebtors/StatDebtorsOrderDetails.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport MainStyles from '../Styles/MainStyles'\nimport {Row, Col} from 'react-flexbox-grid'\n\nexport const STAT_MANUFACTURE_CREATE_DIALOG_OPEN = 'openCreateDialog'\n\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        innerTitle: {\n            fontWeight: 'bold'\n        },\n        transactions: {\n            padding: '10px 0',\n            '& .row': {\n                padding: '15px 0',\n                '&:after': {\n                    left: '0.5rem',\n                    right: '0.5rem'\n                },\n                '&:first-child': {\n                    fontWeight: '600'\n                },\n                '&:last-child:after': {\n                    position: 'static'\n                },\n                '& > div:nth-child(2)': {\n                    textAlign: 'right'\n                },\n                '& > div:nth-child(3)': {\n                    textAlign: 'right'\n                }\n            }\n        }\n    }))\n)\n\nconst statManufactureCreateDialog = enhance((props) => {\n    const {open, loading, onClose, classes} = props\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\n            bodyStyle={{minHeight: 'auto'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>Использованные материалы</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <div className={classes.inContent}>\n                    <div className={classes.field}>\n                        <div className={classes.innerTitle}>Сырье</div>\n                        <div className={classes.transactions}>\n                            <Row className=\"dottedList\">\n                                <Col xs={6}>Наименование</Col>\n                                <Col xs={3}>Кол-во</Col>\n                                <Col xs={3}>Норма</Col>\n                            </Row>\n                            <Row className=\"dottedList\">\n                                <Col xs={6}>Дистилированная вода</Col>\n                                <Col xs={3}>76 л</Col>\n                                <Col xs={3}>70 л</Col>\n                            </Row>\n                            <Row className=\"dottedList\">\n                                <Col xs={6}>Бура</Col>\n                                <Col xs={3}>3 кг</Col>\n                                <Col xs={3}>3 кг</Col>\n                            </Row>\n                            <Row className=\"dottedList\">\n                                <Col xs={6}>Каустик</Col>\n                                <Col xs={3}>3 кг</Col>\n                                <Col xs={3}>3 кг</Col>\n                            </Row>\n                            <Row className=\"dottedList\">\n                                <Col xs={6}>Гранит</Col>\n                                <Col xs={3}>3 кг</Col>\n                                <Col xs={3}>3 кг</Col>\n                            </Row>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Dialog>\n    )\n})\n\nstatManufactureCreateDialog.propTypes = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\n\nstatManufactureCreateDialog.defaultProps = {\n    isUpdate: false\n}\n\nexport default statManufactureCreateDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/StatManufacture/StatManufactureCreateDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose, withHandlers} from 'recompose'\nimport {reduxForm, Field} from 'redux-form'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {Link} from 'react-router'\nimport Paper from 'material-ui/Paper'\nimport IconButton from 'material-ui/IconButton'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\nimport DateToDateField from '../ReduxForm/Basic/DateToDateField'\nimport ExportExel from '../Images/excel.png'\nimport CloseIcon from '../CloseIcon'\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\nimport {BrandSearchField, ProductTypeSearchField} from '../../components/ReduxForm'\n\nexport const STATSTOCK_FILTER_OPEN = 'openFilterDialog'\n\nexport const STATSTOCK_FILTER_KEY = {\n    TYPE: 'type',\n    BRAND: 'brand',\n    FROM_DATE: 'from_date',\n    TO_DATE: 'to_date'\n}\nconst TWO = 2\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            position: 'absolute',\n            minWidth: '300px',\n            background: '#fff',\n            zIndex: 99,\n            top: 0,\n            left: 0,\n            borderRadius: 0,\n            padding: '10px 20px 10px 20px'\n        },\n        afterFilter: {\n            alignItems: 'center',\n            display: 'flex',\n            backgroundColor: '#efefef',\n            position: 'relative',\n            padding: '16px 30px',\n            marginLeft: '-30px',\n            '& > div:nth-child(2)': {\n                position: 'absolute',\n                right: '0'\n            },\n            '& > div:nth-child(1)': {\n                color: '#666666'\n            },\n            '& button': {\n                borderLeft: '1px solid white !important'\n            }\n        },\n        icon: {\n            color: '#8f8f8f !important'\n        },\n        arrow: {\n            color: '#12aaeb',\n            paddingRight: '14px',\n            position: 'relative',\n            '& svg': {\n                position: 'absolute',\n                width: '13px !important',\n                height: '20px !important'\n            }\n        },\n        header: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            '& button': {\n                marginRight: '-12px !important'\n            }\n        },\n        title: {\n            fontSize: '15px',\n            color: '#5d6474'\n        },\n        submit: {\n            color: '#fff !important'\n        },\n        inputField: {\n            fontSize: '13px !important'\n        }\n    }),\n    reduxForm({\n        form: 'StatStockFilterForm',\n        enableReinitialize: true\n    }),\n    withHandlers({\n        getCount: props => () => {\n            const {filter} = props\n            return _(STATSTOCK_FILTER_KEY)\n                .values()\n                .filter(item => item !== STATSTOCK_FILTER_KEY.FROM_DATE)\n                .filter(item => filter.getParam(item))\n                .value()\n                .length\n        }\n    })\n)\n\nconst StatStockFilterForm = enhance((props) => {\n    const {classes, filterDialog, getCount, isBalance, getDocument} = props\n    const filterCounts = getCount()\n\n    if (!filterDialog.openFilterDialog) {\n        if (filterCounts) {\n            return (\n                <div className={classes.afterFilter}>\n                    <div>Фильтр: {filterCounts} элемента</div>\n                    <div>\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\n                            <BorderColorIcon color=\"#8f8f8f\" />\n                        </IconButton>\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\n                            <CloseIcon className={classes.icon}/>\n                        </IconButton>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <div\n                    style={{position: 'absolute', top: '15px', right: '260px'}}\n                    onTouchTap = {getDocument.handleGetDocument}>\n                    <a><img src={ExportExel} style={{width: '24px'}} /></a>\n                </div>\n                <Link\n                    className={classes.arrow}\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\n                </Link>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <Paper className={classes.wrapper} zDepth={2}>\n                <div className={classes.header}>\n                    <span className={classes.title}>Фильтр</span>\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\n                        <CloseIcon className={classes.icon} />\n                    </IconButton>\n                </div>\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\n                    {isBalance === TWO && <div>\n                        <Field className={classes.inputFieldCustom} name=\"date\" component={DateToDateField} label=\"Диапазон дат\" fullWidth={true}/>\n                    </div>}\n                    <div>\n                        <Field className={classes.inputFieldCustom} name=\"brand\" component={BrandSearchField} label=\"Бренд\" fullWidth={true}/>\n                    </div>\n                    <div>\n                        <Field className={classes.inputFieldCustom} name=\"type\" component={ProductTypeSearchField} label=\"Тип продукта\" fullWidth={true}/>\n                    </div>\n                    <RaisedButton\n                        type=\"submit\"\n                        primary={true}\n                        buttonStyle={{color: '#fff'}}\n                        label=\"Применить\"\n                        style={{marginTop: '15px'}}>\n                    </RaisedButton>\n                </form>\n            </Paper>\n        </div>\n    )\n})\n\nStatStockFilterForm.propTypes = {\n    filter: PropTypes.object.isRequired,\n    filterDialog: PropTypes.shape({\n        filterLoading: PropTypes.bool.isRequired,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    })\n}\nStatStockFilterForm.defaultDate = {\n    isBalance: false\n}\n\nexport default StatStockFilterForm\n\n\n\n// WEBPACK FOOTER //\n// src/components/StatStock/StatStockFilterForm.js","import _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport {Row, Col} from 'react-flexbox-grid'\nimport * as ROUTES from '../../constants/routes'\nimport Container from '../Container'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport {reduxForm, Field} from 'redux-form'\nimport {TextField} from '../ReduxForm'\nimport DateToDateField from '../ReduxForm/Basic/DateToDateField'\nimport StatAgentDialog from './StatAgentDialog'\nimport StatSideMenu from './StatSideMenu'\nimport Search from 'material-ui/svg-icons/action/search'\nimport IconButton from 'material-ui/IconButton'\nimport List from 'material-ui/svg-icons/action/list'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport Excel from 'material-ui/svg-icons/av/equalizer'\nimport LinearProgress from 'material-ui/LinearProgress'\nimport Pagination from '../GridList/GridListNavPagination'\nimport numberFormat from '../../helpers/numberFormat.js'\nimport getConfig from '../../helpers/getConfig'\nimport NotFound from '../Images/not-found.png'\n\nexport const STAT_AGENT_FILTER_KEY = {\n    FROM_DATE: 'fromDate',\n    TO_DATE: 'toDate',\n    USER: 'user',\n    SEARCH: 'search'\n}\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        mainWrapper: {\n            background: '#fff',\n            margin: '0 -28px',\n            height: 'calc(100% + 28px)',\n            boxShadow: 'rgba(0, 0, 0, 0.09) 0px -1px 6px, rgba(0, 0, 0, 0.10) 0px -1px 4px'\n        },\n        wrapper: {\n            padding: '20px 30px',\n            height: 'calc(100% - 40px)',\n            '& > div:nth-child(2)': {\n                marginTop: '10px',\n                borderTop: '1px #efefef solid',\n                borderBottom: '1px #efefef solid'\n            },\n            '& .row': {\n                margin: '0 !important'\n            }\n        },\n        tableWrapper: {\n            height: 'calc(100% - 118px)',\n            overflowY: 'auto',\n            overflowX: 'hidden',\n            '& .row': {\n                '&:after': {\n                    bottom: '-1px'\n                },\n                '& > div': {\n                    display: 'flex',\n                    height: '50px',\n                    alignItems: 'center'\n                }\n            },\n            '& .dottedList': {\n                padding: '0',\n                '&:last-child:after': {\n                    content: '\"\"',\n                    backgroundImage: 'none'\n                }\n            },\n            '& .personImage': {\n                borderRadius: '50%',\n                overflow: 'hidden',\n                height: '30px',\n                minWidth: '30px',\n                width: '30px',\n                marginRight: '10px',\n                '& img': {\n                    display: 'flex',\n                    height: '100%',\n                    width: '100%'\n                }\n            }\n        },\n        balanceInfo: {\n            padding: '15px 0'\n        },\n        balance: {\n            paddingRight: '10px',\n            fontSize: '24px!important',\n            fontWeight: '600'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        balanceButtonWrap: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n        },\n        form: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n        },\n        filter: {\n            display: 'flex',\n            alignItems: 'center',\n            '& > div': {\n                width: '170px!important',\n                position: 'relative',\n                marginRight: '40px',\n                '&:last-child': {\n                    margin: '0'\n                },\n                '&:after': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    right: '-20px',\n                    height: '30px',\n                    width: '1px',\n                    top: '50%',\n                    marginTop: '-15px',\n                    background: '#efefef'\n                },\n                '&:last-child:after': {\n                    display: 'none'\n                }\n            }\n        },\n        leftPanel: {\n            backgroundColor: '#f2f5f8',\n            flexBasis: '250px',\n            maxWidth: '250px'\n\n        },\n        rightPanel: {\n            flexBasis: 'calc(100% - 250px)',\n            maxWidth: 'calc(100% - 250px)',\n            overflow: 'hidden'\n        },\n        searchButton: {\n            marginLeft: '-10px !important',\n            '& div': {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center'\n            }\n        },\n        excel: {\n            background: '#71ce87',\n            borderRadius: '2px',\n            color: '#fff',\n            fontWeight: '600',\n            display: 'flex',\n            alignItems: 'center',\n            padding: '5px 15px',\n            '& svg': {\n                width: '18px !important'\n            }\n        },\n        emptyQuery: {\n            background: 'url(' + NotFound + ') no-repeat center center',\n            backgroundSize: '200px',\n            padding: '200px 0 0',\n            textAlign: 'center',\n            fontSize: '13px',\n            color: '#666',\n            '& svg': {\n                width: '50px !important',\n                height: '50px !important',\n                color: '#999 !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'StatAgentFilterForm',\n        enableReinitialize: true\n    }),\n)\n\nconst StatAgentGridList = enhance((props) => {\n    const {\n        classes,\n        statAgentDialog,\n        listData,\n        filter,\n        handleSubmitFilterDialog,\n        detailData,\n        getDocument\n    } = props\n\n    const listLoading = _.get(listData, 'listLoading')\n\n    const headerStyle = {\n        backgroundColor: '#fff',\n        fontWeight: '600',\n        color: '#666'\n    }\n    const iconStyle = {\n        icon: {\n            color: '#5d6474',\n            width: 22,\n            height: 22\n        },\n        button: {\n            width: 40,\n            height: 40,\n            padding: 0\n        }\n    }\n\n    const headers = (\n        <Row style={headerStyle} className=\"dottedList\">\n            <Col xs={3}>Агенты</Col>\n            <Col xs={6}>Продажи</Col>\n            <Col xs={2} style={{justifyContent: 'flex-end'}}>Сумма</Col>\n        </Row>\n    )\n\n    const list = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        const percent = _.get(item, 'percent')\n        const income = numberFormat(_.get(item, 'income'), getConfig('PRIMARY_CURRENCY'))\n\n        return (\n            <Row key={id} className=\"dottedList\">\n                <Col xs={3}>\n                    <div>{name}</div>\n                </Col>\n                <Col xs={6}>\n                    <LinearProgress\n                        color=\"#58bed9\"\n                        mode=\"determinate\"\n                        value={percent}\n                        style={{backgroundColor: '#fff', height: '10px'}}/>\n                </Col>\n                <Col xs={2} style={{justifyContent: 'flex-end'}}>{income}</Col>\n                <Col xs={1} style={{justifyContent: 'flex-end', paddingRight: '0'}}>\n                    <IconButton\n                        onTouchTap={() => { statAgentDialog.handleOpenStatAgentDialog(id) }}>\n                        <List color=\"#12aaeb\"/>\n                    </IconButton>\n                </Col>\n            </Row>\n        )\n    })\n\n    const page = (\n        <div className={classes.mainWrapper}>\n            <Row style={{margin: '0', height: '100%'}}>\n                <div className={classes.leftPanel}>\n                    <StatSideMenu currentUrl={ROUTES.STATISTICS_AGENT_URL}/>\n                </div>\n                <div className={classes.rightPanel}>\n                    {listLoading\n                        ? <div className={classes.loader}>\n                            <CircularProgress size={40} thickness={4}/>\n                        </div>\n                        : <div className={classes.wrapper}>\n                            <form className={classes.form} onSubmit={handleSubmitFilterDialog}>\n                                <div className={classes.filter}>\n                                    <Field\n                                        className={classes.inputFieldCustom}\n                                        name=\"date\"\n                                        component={DateToDateField}\n                                        label=\"Диапазон дат\"\n                                        fullWidth={true}/>\n                                    <Field\n                                        className={classes.inputFieldCustom}\n                                        name=\"search\"\n                                        component={TextField}\n                                        label=\"Поиск\"\n                                        fullWidth={true}/>\n\n                                    <IconButton\n                                        className={classes.searchButton}\n                                        iconStyle={iconStyle.icon}\n                                        style={iconStyle.button}\n                                        type=\"submit\">\n                                        <Search/>\n                                    </IconButton>\n                                </div>\n                                <a className={classes.excel}\n                                   onClick={getDocument.handleGetDocument}>\n                                    <Excel color=\"#fff\"/> <span>Excel</span>\n                                </a>\n                            </form>\n                            <Pagination filter={filter}/>\n                            {(_.isEmpty(list) && !listLoading) ? <div className={classes.emptyQuery}>\n                                <div>По вашему запросу ничего не найдено</div>\n                            </div>\n                                : <div className={classes.tableWrapper}>\n                                    {headers}\n                                    {list}\n                                </div>}\n                        </div>\n                    }\n                </div>\n            </Row>\n        </div>\n    )\n\n    return (\n        <Container>\n            {page}\n            <StatAgentDialog\n                loading={_.get(detailData.detailLoading)}\n                detailData={detailData}\n                open={statAgentDialog.openStatAgentDialog}\n                onClose={statAgentDialog.handleCloseStatAgentDialog}\n                filter={filter}/>\n        </Container>\n    )\n})\n\nStatAgentGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    statAgentDialog: PropTypes.shape({\n        openStatAgentDialog: PropTypes.bool.isRequired,\n        handleOpenStatAgentDialog: PropTypes.func.isRequired,\n        handleCloseStatAgentDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default StatAgentGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Statistics/StatAgentGridList.js","import _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport {Row} from 'react-flexbox-grid'\nimport * as ROUTES from '../../constants/routes'\nimport Container from '../Container'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport {reduxForm, Field} from 'redux-form'\nimport {CashboxSearchField} from '../ReduxForm'\nimport DateToDateField from '../ReduxForm/Basic/DateToDateField'\nimport StatSideMenu from './StatSideMenu'\nimport Search from 'material-ui/svg-icons/action/search'\nimport IconButton from 'material-ui/IconButton'\nimport Excel from 'material-ui/svg-icons/av/equalizer'\nimport {Link} from 'react-router'\nimport sprintf from 'sprintf'\nimport Tooltip from '../ToolTip'\nimport Person from '../Images/person.png'\nimport ReactHighcharts from 'react-highcharts'\nimport numberFormat from '../../helpers/numberFormat.js'\nimport NotFound from '../Images/not-found.png'\nimport CashboxDetails from './StatCashboxDetails'\n\nexport const STAT_CASHBOX_FILTER_KEY = {\n    CASHBOX: 'cashbox',\n    TO_DATE: 'toDate',\n    FROM_DATE: 'fromDate'\n}\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        mainWrapper: {\n            background: '#fff',\n            margin: '0 -28px',\n            height: 'calc(100% + 28px)',\n            boxShadow: 'rgba(0, 0, 0, 0.09) 0px -1px 6px, rgba(0, 0, 0, 0.10) 0px -1px 4px'\n        },\n        wrapper: {\n            height: 'calc(100% - 40px)',\n            overflowY: 'auto',\n            overflowX: 'hidden',\n            padding: '20px 30px',\n            '& > div:nth-child(2)': {\n                marginTop: '10px',\n                borderTop: '1px #efefef solid',\n                borderBottom: '1px #efefef solid'\n            },\n            '& .row': {\n                margin: '0 !important'\n            }\n        },\n        cashboxWrapper: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            marginTop: '45px'\n        },\n        cashbox: {\n            marginRight: '45px',\n            width: 'calc((100% / 3) - 30px)',\n            '&:nth-child(3n+3)': {\n                margin: '0'\n            }\n        },\n        cashboxTitle: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            paddingBottom: '5px',\n            borderBottom: '1px #efefef solid',\n            '& > div:first-child': {\n                fontWeight: 'bold',\n                '& a': {\n                    fontWeight: 'inherit',\n                    color: 'inherit'\n                }\n            },\n            '& > div:last-child': {\n                color: '#666'\n            }\n        },\n        cashboxFooter: {\n            extend: 'cashboxTitle',\n            '& > div': {\n                lineHeight: '15px'\n            },\n            '& > div:last-child': {\n                color: '#333 !important',\n                textAlign: 'right'\n            }\n        },\n        cashboxBalance: {\n            '& > div:first-child': {\n                color: '#666',\n                fontSize: '11px',\n                fontWeight: '600 !important'\n            }\n        },\n        avatar: {\n            width: '30px',\n            height: '30px',\n            borderRadius: '50%',\n            overflow: 'hidden',\n            '& img': {\n                width: '100%',\n                height: '100%'\n            }\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        excel: {\n            background: '#71ce87',\n            borderRadius: '2px',\n            color: '#fff',\n            fontWeight: '600',\n            display: 'flex',\n            alignItems: 'center',\n            padding: '5px 15px',\n            '& svg': {\n                width: '18px !important'\n            }\n        },\n        form: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n        },\n        filter: {\n            display: 'flex',\n            alignItems: 'center',\n            '& > div': {\n                width: '170px !important',\n                position: 'relative',\n                marginRight: '40px',\n                '&:after': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    right: '-20px',\n                    height: '30px',\n                    width: '1px',\n                    top: '50%',\n                    marginTop: '-15px',\n                    background: '#efefef'\n                },\n                '&:last-child': {\n                    '&:after': {\n                        display: 'none'\n                    }\n                }\n            }\n        },\n        leftPanel: {\n            backgroundColor: '#f2f5f8',\n            flexBasis: '250px',\n            maxWidth: '250px'\n\n        },\n        rightPanel: {\n            flexBasis: 'calc(100% - 250px)',\n            maxWidth: 'calc(100% - 250px)',\n            overflow: 'hidden',\n            position: 'relative'\n        },\n        searchButton: {\n            marginLeft: '-10px !important',\n            '& div': {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center'\n            }\n        },\n        balances: {\n            display: 'flex',\n            padding: '20px 0',\n            borderTop: '1px #efefef solid',\n            borderBottom: '1px #efefef solid'\n        },\n        balanceItem: {\n            marginRight: '50px',\n            '& span': {\n                color: '#666',\n                marginBottom: '5px'\n            },\n            '& div': {\n                fontSize: '24px',\n                fontWeight: '600'\n            },\n            '&:last-child': {\n                marginRight: '0'\n            }\n        },\n        emptyQuery: {\n            background: 'url(' + NotFound + ') no-repeat center center',\n            backgroundSize: '200px',\n            padding: '200px 0 0',\n            textAlign: 'center',\n            fontSize: '13px',\n            color: '#666',\n            '& svg': {\n                width: '50px !important',\n                height: '50px !important',\n                color: '#999 !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'StatCashboxFilterForm',\n        enableReinitialize: true\n    }),\n)\nlet arr = []\nfor (let i = 0, t = 20; i < t; i++) {\n    arr.push(Math.round(Math.random() * t))\n}\n\nconst StatCashboxGridList = enhance((props) => {\n    const {\n        filter,\n        listData,\n        detailData,\n        classes,\n        handleSubmitFilterDialog,\n        getDocument\n    } = props\n\n    const listLoading = _.get(listData, 'listLoading')\n    const openDetails = _.get(listData, 'openDetails')\n\n    const iconStyle = {\n        icon: {\n            color: '#5d6474',\n            width: 22,\n            height: 22\n        },\n        button: {\n            width: 40,\n            height: 40,\n            padding: 0\n        }\n    }\n\n    const list = _.map(_.get(listData, 'data'), (item) => {\n        const ZERO = 0\n        const TEN = 10\n        const bank = 1\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        const currency = _.get(item, ['currency', 'name'])\n        const balance = numberFormat(_.get(item, 'balance'), currency)\n        const cashierFirstName = _.get(item, ['cashier', 'firstName'])\n        const cashierSecondName = _.get(item, ['cashier', 'secondName'])\n        const cashier = cashierFirstName + ' ' + cashierSecondName\n        const type = _.toInteger(_.get(item, 'type')) === bank ? 'банковский счет' : 'наличные'\n\n        const config = {\n            chart: {\n                type: 'area',\n                height: 100,\n                showAxes: false,\n                spacing: [TEN, ZERO, TEN, ZERO]\n            },\n            title: {\n                text: '',\n                style: {\n                    display: 'none'\n                }\n            },\n            legend: {\n                enabled: false\n            },\n            credits: {\n                enabled: false\n            },\n            yAxis: {\n                title: {\n                    text: '',\n                    style: {\n                        display: 'none'\n                    }\n                },\n                gridLineColor: '#fff',\n                plotLines: [{\n                    value: 0,\n                    width: 1,\n                    color: 'transparent'\n                }],\n                labels: {\n                    enabled: false\n                },\n                lineWidth: 0,\n                minorGridLineWidth: 0,\n                lineColor: 'transparent',\n                minorTickLength: 0,\n                tickLength: 0\n            },\n            xAxis: {\n                lineWidth: 0,\n                minorGridLineWidth: 0,\n                lineColor: 'transparent',\n                minorTickLength: 0,\n                tickLength: 0,\n                labels: {\n                    enabled: false\n                }\n            },\n            plotOptions: {\n                series: {\n                    lineWidth: 0,\n                    pointPlacement: 'on'\n                },\n                area: {\n                    fillColor: '#bfebf7',\n                    lineColor: '#3aa8c6'\n                }\n            },\n            tooltip: {\n                shared: true,\n                valueSuffix: ' ' + currency,\n                backgroundColor: '#fff',\n                borderColor: '#ccc',\n                style: {\n                    color: '#333',\n                    fontFamily: 'Open Sans',\n                    fontSize: '11px'\n                },\n                borderRadius: 0,\n                borderWidth: 1,\n                enabled: true,\n                shadow: false,\n                useHTML: true,\n                crosshairs: false,\n                pointFormat: '{series.name}: <strong>{point.y}</strong>'\n            },\n            series: [{\n                marker: {\n                    enabled: false,\n                    symbol: 'circle',\n                    fillColor: '#3aa8c6',\n                    radius: 2\n                },\n                name: 'Баланс',\n                data: arr,\n                color: '#3aa8c6'\n\n            }]\n        }\n\n        return (\n            <div className={classes.cashbox} key={id}>\n                <div className={classes.cashboxTitle}>\n                    <div>\n                        <Link to={{\n                            pathname: sprintf(ROUTES.STATISTICS_CASHBOX_ITEM_PATH, id),\n                            query: filter.getParams()\n                        }}>{name}</Link>\n                    </div>\n                    <div>{type}</div>\n                </div>\n                <div>\n                    <ReactHighcharts config={config} neverReflow={true} isPureConfig={true}/>\n                </div>\n                <div className={classes.cashboxFooter}>\n                    <div className={classes.cashboxBalance}>\n                        <div>Баланс</div>\n                        <div>{balance}</div>\n                    </div>\n                    <Tooltip position=\"left\" text={cashier}>\n                        <div className={classes.avatar}>\n                            <img src={Person} alt=\"\"/>\n                        </div>\n                    </Tooltip>\n                </div>\n            </div>\n        )\n    })\n\n    const page = (\n        <div className={classes.mainWrapper}>\n            <Row style={{margin: '0', height: '100%'}}>\n                <div className={classes.leftPanel}>\n                    <StatSideMenu currentUrl={ROUTES.STATISTICS_CASHBOX_URL}/>\n                </div>\n                <div className={classes.rightPanel}>\n                    {listLoading\n                        ? <div className={classes.loader}>\n                            <CircularProgress size={40} thickness={4}/>\n                        </div>\n                        : <div className={classes.wrapper}>\n                            <form className={classes.form} onSubmit={handleSubmitFilterDialog}>\n                                <div className={classes.filter}>\n                                    <Field\n                                        className={classes.inputFieldCustom}\n                                        name=\"date\"\n                                        component={DateToDateField}\n                                        label=\"Диапазон дат\"\n                                        fullWidth={true}/>\n                                    <Field\n                                        className={classes.inputFieldCustom}\n                                        name=\"cashbox\"\n                                        component={CashboxSearchField}\n                                        label=\"Кассы\"\n                                        fullWidth={true}/>\n                                    <IconButton\n                                        className={classes.searchButton}\n                                        iconStyle={iconStyle.icon}\n                                        style={iconStyle.button}\n                                        type=\"submit\">\n                                        <Search/>\n                                    </IconButton>\n                                </div>\n                                <a className={classes.excel}\n                                   onClick={getDocument.handleGetDocument}>\n                                    <Excel color=\"#fff\"/> <span>Excel</span>\n                                </a>\n                            </form>\n                            <div className={classes.balances}>\n                                <div className={classes.balanceItem}>\n                                    <span>Баланс на начало периода</span>\n                                    <div>10 000 000 UZS</div>\n                                </div>\n                                <div className={classes.balanceItem}>\n                                    <span>Расход за период</span>\n                                    <div>-5 000 000 UZS</div>\n                                </div>\n                                <div className={classes.balanceItem}>\n                                    <span>Доход за период</span>\n                                    <div>25 000 000 UZS</div>\n                                </div>\n                                <div className={classes.balanceItem}>\n                                    <span>Баланс на конец периода</span>\n                                    <div>30 000 000 UZS</div>\n                                </div>\n                            </div>\n                            {(_.isEmpty(list) && !listLoading) ? <div className={classes.emptyQuery}>\n                                <div>По вашему запросу ничего не найдено</div>\n                            </div>\n                                : <div className={classes.cashboxWrapper}>\n                                    {list}\n                                </div>}\n                        </div>}\n\n                    {openDetails && <CashboxDetails\n                        filter={filter}\n                        detailData={detailData}\n                        listData={listData}\n                        handleSubmitFilterDialog={handleSubmitFilterDialog}\n                        getDocument={getDocument}\n                    />}\n                </div>\n            </Row>\n        </div>\n    )\n\n    return (\n        <Container>\n            {page}\n        </Container>\n    )\n})\n\nStatCashboxGridList.propTypes = {\n    filter: PropTypes.object,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    handleSubmitFilterDialog: PropTypes.func,\n    getDocument: PropTypes.object\n}\n\nexport default StatCashboxGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Statistics/StatCashboxGridList.js","import _ from 'lodash'\nimport moment from 'moment'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport {Row, Col} from 'react-flexbox-grid'\nimport * as ROUTES from '../../constants/routes'\nimport Container from '../Container'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport {reduxForm, Field} from 'redux-form'\nimport ClientSearchField from '../ReduxForm/Client/ClientSearchField'\nimport StatSideMenu from './StatSideMenu'\nimport Search from 'material-ui/svg-icons/action/search'\nimport IconButton from 'material-ui/IconButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport List from 'material-ui/svg-icons/action/list'\nimport ArrowDown from 'material-ui/svg-icons/navigation/arrow-drop-down-circle'\nimport Excel from 'material-ui/svg-icons/av/equalizer'\nimport Pagination from '../GridList/GridListNavPagination'\nimport StatDebtorsDialog from './StatDebtorsDialog'\nimport numberFormat from '../../helpers/numberFormat'\nimport getConfig from '../../helpers/getConfig'\n\nexport const STAT_DEBTORS_FILTER_KEY = {\n    FROM_DATE: 'fromDate',\n    TO_DATE: 'toDate',\n    USER: 'user'\n}\n\nconst ZERO = 0\n\nconst enhance = compose(\n    injectSheet({\n        mainWrapper: {\n            background: '#fff',\n            margin: '0 -28px',\n            height: 'calc(100% + 28px)',\n            boxShadow: 'rgba(0, 0, 0, 0.09) 0px -1px 6px, rgba(0, 0, 0, 0.10) 0px -1px 4px'\n        },\n        loader: {\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        wrapper: {\n            height: 'calc(100% - 40px)',\n            padding: '20px 30px',\n            '& .row': {\n                marginLeft: '0',\n                marginRight: '0'\n            }\n        },\n        debtors: {\n            display: 'flex',\n            margin: '15px 0',\n            '& > div': {\n                marginRight: '60px',\n                '& span': {\n                    color: '#666',\n                    marginBottom: '5px'\n                },\n                '& div': {\n                    fontSize: '24px',\n                    fontWeight: '600'\n                }\n            }\n        },\n        pagination: {\n            display: 'flex',\n            alignItems: 'center',\n            marginTop: '10px',\n            justifyContent: 'space-between',\n            borderTop: '1px #efefef solid',\n            borderBottom: '1px #efefef solid'\n        },\n        tableWrapper: {\n            height: 'calc(100% - 169px)',\n            overflowY: 'auto',\n            overflowX: 'hidden',\n            margin: '0 -30px !important',\n            '& .row': {\n                padding: '0 30px',\n                '&:after': {\n                    bottom: '-1px'\n                },\n                '& > div': {\n                    display: 'flex',\n                    height: '50px',\n                    alignItems: 'center',\n                    justifyContent: 'flex-end',\n                    '&:first-child': {\n                        justifyContent: 'flex-start'\n                    }\n                }\n            },\n            '& .personImage': {\n                borderRadius: '50%',\n                overflow: 'hidden',\n                height: '30px',\n                minWidth: '30px',\n                width: '30px',\n                marginRight: '10px',\n                '& img': {\n                    display: 'flex',\n                    height: '100%',\n                    width: '100%'\n                }\n            }\n        },\n        headers: {\n            backgroundColor: '#fff',\n            fontWeight: '600',\n            color: '#666',\n            '& > div': {\n                height: '40px !important'\n            }\n        },\n        list: {\n            '&:nth-child(even)': {\n                background: '#f9f9f9'\n            },\n            '&:last-child:after': {\n                content: '\"\"',\n                backgroundImage: 'none'\n            }\n        },\n        expandedList: {\n            extend: 'list',\n            borderTop: '1px #dadada solid',\n            borderBottom: '1px #dadada solid',\n            '& > div': {\n                fontWeight: 'bold'\n            }\n        },\n        detail: {\n            width: '100%',\n            fontWeight: '400 !important',\n            display: 'block !important',\n            borderTop: '1px #efefef solid',\n            '& .dottedList': {\n                '& > div:nth-child(2)': {\n                    justifyContent: 'flex-start'\n                },\n                '&:last-child:after': {\n                    display: 'none'\n                }\n            }\n        },\n        balance: {\n            paddingRight: '10px',\n            fontSize: '24px!important',\n            fontWeight: '600'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        form: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n        },\n        filter: {\n            display: 'flex',\n            alignItems: 'center',\n            '& > div': {\n                width: '300px !important',\n                position: 'relative',\n                marginRight: '40px',\n                '&:last-child': {\n                    margin: '0'\n                },\n                '&:after': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    right: '-20px',\n                    height: '30px',\n                    width: '1px',\n                    top: '50%',\n                    marginTop: '-15px',\n                    background: '#efefef'\n                },\n                '&:last-child:after': {\n                    display: 'none'\n                }\n            }\n        },\n        leftPanel: {\n            backgroundColor: '#f2f5f8',\n            flexBasis: '250px',\n            maxWidth: '250px'\n\n        },\n        rightPanel: {\n            flexBasis: 'calc(100% - 250px)',\n            maxWidth: 'calc(100% - 250px)',\n            overflow: 'hidden'\n        },\n        searchButton: {\n            marginLeft: '-10px !important',\n            '& div': {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center'\n            }\n        },\n        excel: {\n            background: '#71ce87',\n            borderRadius: '2px',\n            color: '#fff',\n            fontWeight: '600',\n            display: 'flex',\n            alignItems: 'center',\n            padding: '5px 15px',\n            '& svg': {\n                width: '18px !important'\n            }\n        },\n        diagram: {\n            marginTop: '30px'\n        },\n        salesSummary: {\n            '& > div:first-child': {\n                color: '#666'\n            },\n            '& > div:last-child': {\n                fontSize: '24px',\n                fontWeight: '600'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'StatDebtorsFilterForm',\n        enableReinitialize: true\n    }),\n)\n\nconst StatDebtorsGridList = enhance((props) => {\n    const {\n        classes,\n        filter,\n        listData,\n        detailData,\n        handleSubmitFilterDialog,\n        statDebtorsDialog,\n        handleOpenCloseDetail,\n        getDocument\n    } = props\n\n    const iconStyle = {\n        icon: {\n            color: '#5d6474',\n            width: 24,\n            height: 24\n        },\n        button: {\n            width: 40,\n            height: 40,\n            padding: 0\n        }\n    }\n\n    const listLoading = _.get(listData, 'listLoading')\n\n    const headers = (\n        <Row className={classes.headers}>\n            <Col xs={5}>Клиент</Col>\n            <Col xs={3}>Просроченные (UZS)</Col>\n            <Col xs={3}>Ожидаемые (UZS)</Col>\n        </Row>\n    )\n    const primaryCurrency = getConfig('PRIMARY_CURRENCY')\n    const detailList = _.map(_.get(detailData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const createdDate = moment(_.get(item, 'createdDate')).format(('DD.MM.YYYY'))\n        const totalPrice = numberFormat(_.get(item, 'totalPrice'), primaryCurrency)\n        const totalBalance = numberFormat(_.get(item, 'totalBalance'), primaryCurrency)\n        const totalExpected = numberFormat(_.toInteger(_.get(item, 'totalPrice')) - _.toInteger(_.get(item, 'totalBalance')), primaryCurrency)\n\n        return (\n            <Row key={id} className=\"dottedList\">\n                <Col xs={2}>{id}</Col>\n                <Col xs={3}>{createdDate}</Col>\n                <Col xs={2}>{totalPrice}</Col>\n                <Col xs={2}>{totalBalance}</Col>\n                <Col xs={2}>{totalExpected}</Col>\n                <Col xs={1} style={{paddingRight: '0'}}>\n                    <IconButton\n                        onTouchTap={() => { statDebtorsDialog.handleOpenStatDebtorsDialog(id) }}>\n                        <List color=\"#12aaeb\"/>\n                    </IconButton>\n                </Col>\n            </Row>\n        )\n    })\n\n    const list = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, ['client', 'id'])\n        const client = _.get(item, ['client', 'name'])\n        const deptSum = numberFormat(_.get(item, 'debtSum'), getConfig('PRIMARY_CURRENCY'))\n        const expectSum = numberFormat(_.get(item, 'expectSum'), getConfig('PRIMARY_CURRENCY'))\n        if (_.get(detailData, 'openDetailId') === id) {\n            return (\n                <div className={classes.expandedList}>\n                    <Row>\n                        <Col xs={5}>{client}</Col>\n                        <Col xs={3}>{deptSum}</Col>\n                        <Col xs={3}>{expectSum}</Col>\n                        <Col xs={1} style={{paddingRight: '0'}}>\n                            <IconButton\n                                style={{transform: 'rotate(180deg)'}}\n                                disableTouchRipple={true}\n                                onTouchTap={() => { handleOpenCloseDetail.handleCloseDetail(id) }}>\n                                <ArrowDown color=\"#12aaeb\"/>\n                            </IconButton>\n                        </Col>\n                    </Row>\n                    <div className={classes.detail}>\n                        <Row className=\"dottedList\">\n                            <Col xs={2}>№ заказа</Col>\n                            <Col xs={3}>Ожидаемая дата платежа</Col>\n                            <Col xs={2}>Сумма заказа (UZS)</Col>\n                            <Col xs={2}>Оплачено (UZS)</Col>\n                            <Col xs={2}>Долг (UZS)</Col>\n                        </Row>\n                        {_.get(detailData, 'detailLoading')\n                            ? <div style={{textAlign: 'center'}}>\n                                <CircularProgress size={40} thickness={4} />\n                            </div>\n                            : detailList}\n                    </div>\n                </div>)\n        }\n        return (\n            <Row key={id} className={classes.list}>\n                <Col xs={5}>{client}</Col>\n                <Col xs={3}>{deptSum}</Col>\n                <Col xs={3}>{expectSum}</Col>\n                <Col xs={1} style={{paddingRight: '0'}}>\n                    <IconButton\n                        disableTouchRipple={true}\n                        onTouchTap={() => { handleOpenCloseDetail.handleOpenDetail(id) }}>\n                        <ArrowDown color=\"#12aaeb\"/>\n                    </IconButton>\n                </Col>\n            </Row>\n        )\n    })\n\n    const countDebtors = _.get(listData, ['statData', 'debtors'])\n    const deptSum = numberFormat(_.get(listData, ['statData', 'debSum']), getConfig('PRIMARY_CURRENCY'))\n    const expectSum = numberFormat(_.get(listData, ['statData', 'expectSum']), getConfig('PRIMARY_CURRENCY'))\n    const page = (\n        <div className={classes.mainWrapper}>\n            <Row style={{margin: '0', height: '100%'}}>\n                <div className={classes.leftPanel}>\n                    <StatSideMenu currentUrl={ROUTES.STATISTICS_DEBTORS_URL}/>\n                </div>\n                <div className={classes.rightPanel}>\n                    {listLoading\n                    ? <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4} />\n                    </div>\n                    : <div className={classes.wrapper}>\n                        <form className={classes.form} onSubmit={handleSubmitFilterDialog}>\n                            <div className={classes.filter}>\n                                <Field\n                                    className={classes.inputFieldCustom}\n                                    name=\"debtors\"\n                                    component={ClientSearchField}\n                                    label=\"Задолжники\"\n                                    fullWidth={true}/>\n\n                                <IconButton\n                                    className={classes.searchButton}\n                                    iconStyle={iconStyle.icon}\n                                    style={iconStyle.button}\n                                    type=\"submit\">\n                                    <Search/>\n                                </IconButton>\n                            </div>\n                            <a className={classes.excel}\n                               onClick = {getDocument.handleGetDocument}>\n                                <Excel color=\"#fff\"/> <span>Excel</span>\n                            </a>\n                        </form>\n                        <div className={classes.debtors}>\n                            <div>\n                                <span>Всего должников</span>\n                                <div>{countDebtors} клиентов</div>\n                            </div>\n                            <div>\n                                <span>Просроченные платежи</span>\n                                <div>{deptSum}</div>\n                            </div>\n                            <div>\n                                <span>Ожидаемые поступления</span>\n                                <div>{expectSum}</div>\n                            </div>\n                        </div>\n                        <div className={classes.pagination}>\n                            <div><b>Отчет по задолжностям</b></div>\n                            <Pagination filter={filter}/>\n                        </div>\n                        <div className={classes.tableWrapper}>\n                            {headers}\n                            {list}\n                        </div>\n                    </div>}\n                </div>\n            </Row>\n        </div>\n    )\n\n    return (\n        <Container>\n            {page}\n            <StatDebtorsDialog\n                open={_.get(statDebtorsDialog, 'openStatDebtorsDialog') !== ZERO}\n                onClose={statDebtorsDialog.handleCloseStatDebtorsDialog}\n                data={_.get(detailData, 'detailOrder')}\n                loading={_.get(detailData, 'detailOrderLoading')}\n            />\n        </Container>\n    )\n})\n\nStatDebtorsGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    statDebtorsDialog: PropTypes.shape({\n        openStatDebtorsDialog: PropTypes.number.isRequired,\n        handleCloseStatDebtorsDialog: PropTypes.func.isRequired,\n        handleOpenStatDebtorsDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default StatDebtorsGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Statistics/StatDebtorsGridList.js","import PropTypes from 'prop-types'\nimport React from 'react'\nimport {Row, Col} from 'react-flexbox-grid'\nimport * as ROUTES from '../../constants/routes'\nimport _ from 'lodash'\nimport Container from '../Container'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport {reduxForm, Field} from 'redux-form'\nimport ReactHighcharts from 'react-highcharts'\nimport DateToDateField from '../ReduxForm/Basic/DateToDateField'\nimport ClientSearchField from '../ReduxForm/Client/ClientSearchField'\nimport StatSideMenu from './StatSideMenu'\nimport Search from 'material-ui/svg-icons/action/search'\nimport IconButton from 'material-ui/IconButton'\nimport Excel from 'material-ui/svg-icons/av/equalizer'\nimport Pagination from '../GridList/GridListNavPagination'\nimport getConfig from '../../helpers/getConfig'\nimport dateFormat from '../../helpers/dateFormat'\nimport numberFormat from '../../helpers/numberFormat'\nexport const STAT_FINANCE_FILTER_KEY = {\n    FROM_DATE: 'fromDate',\n    TO_DATE: 'toDate',\n    USER: 'user'\n}\n\nconst NEGATIVE = -1\n\nconst enhance = compose(\n    injectSheet({\n        mainWrapper: {\n            background: '#fff',\n            margin: '0 -28px',\n            height: 'calc(100% + 28px)',\n            boxShadow: 'rgba(0, 0, 0, 0.09) 0px -1px 6px, rgba(0, 0, 0, 0.10) 0px -1px 4px'\n        },\n        wrapper: {\n            height: 'calc(100% - 40px)',\n            padding: '20px 30px',\n            '& .row': {\n                marginLeft: '0',\n                marginRight: '0'\n            }\n        },\n        pagination: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            borderTop: '1px #efefef solid',\n            borderBottom: '1px #efefef solid'\n        },\n        tableWrapper: {\n            height: 'calc(100% - 283px)',\n            overflowY: 'auto',\n            overflowX: 'hidden',\n            '& .row': {\n                '&:after': {\n                    bottom: '-1px'\n                },\n                '& > div': {\n                    display: 'flex',\n                    height: '50px',\n                    alignItems: 'center',\n                    '&:last-child': {\n                        justifyContent: 'flex-end'\n                    }\n                }\n            },\n            '& .dottedList': {\n                padding: '0',\n                '&:last-child:after': {\n                    content: '\"\"',\n                    backgroundImage: 'none'\n                }\n            },\n            '& .personImage': {\n                borderRadius: '50%',\n                overflow: 'hidden',\n                height: '30px',\n                minWidth: '30px',\n                width: '30px',\n                marginRight: '10px',\n                '& img': {\n                    display: 'flex',\n                    height: '100%',\n                    width: '100%'\n                }\n            }\n        },\n        balanceInfo: {\n            padding: '15px 0'\n        },\n        balance: {\n            paddingRight: '10px',\n            fontSize: '24px!important',\n            fontWeight: '600'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        balanceButtonWrap: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n        },\n        form: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n        },\n        filter: {\n            display: 'flex',\n            alignItems: 'center',\n            '& > div': {\n                width: '170px!important',\n                position: 'relative',\n                marginRight: '40px',\n                '&:last-child': {\n                    margin: '0'\n                },\n                '&:after': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    right: '-20px',\n                    height: '30px',\n                    width: '1px',\n                    top: '50%',\n                    marginTop: '-15px',\n                    background: '#efefef'\n                },\n                '&:last-child:after': {\n                    display: 'none'\n                }\n            }\n        },\n        leftPanel: {\n            backgroundColor: '#f2f5f8',\n            flexBasis: '250px',\n            maxWidth: '250px'\n\n        },\n        rightPanel: {\n            flexBasis: 'calc(100% - 250px)',\n            maxWidth: 'calc(100% - 250px)',\n            overflow: 'hidden'\n        },\n        searchButton: {\n            marginLeft: '-10px !important',\n            '& div': {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center'\n            }\n        },\n        excel: {\n            background: '#71ce87',\n            borderRadius: '2px',\n            color: '#fff',\n            fontWeight: '600',\n            display: 'flex',\n            alignItems: 'center',\n            padding: '5px 15px',\n            '& svg': {\n                width: '18px !important'\n            }\n        },\n        diagram: {\n            marginTop: '30px'\n        },\n        summaryTitle: {\n            color: '#666'\n        },\n        summaryValue: {\n            fontSize: '24px',\n            fontWeight: '600'\n        },\n        mainSummary: {\n            '& > div:last-child': {\n                borderBottom: '1px #efefef solid',\n                paddingBottom: '10px'\n            }\n        },\n        secondarySummary: {\n            margin: '10px 0',\n            '& > div:nth-child(even)': {\n                fontSize: '16px'\n            }\n        },\n        chart: {\n            '& .highcharts-label': {\n                boxShadow: 'rgba(0, 0, 0, 0.12) 0px 1px 6px, rgba(0, 0, 0, 0.12) 0px 1px 4px !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'StatFinanceFilterForm',\n        enableReinitialize: true\n    }),\n)\n\nconst StatFinanceGridList = enhance((props) => {\n    const {\n        graphData,\n        classes,\n        filter,\n        handleSubmitFilterDialog,\n        listData\n    } = props\n\n    const primaryCurrency = getConfig('PRIMARY_CURRENCY')\n    let sumIn = 0\n    const valueIn = _.map(_.get(graphData, 'dataIn'), (item) => {\n        sumIn += _.toInteger(_.get(item, 'amount'))\n        return _.toInteger(_.get(item, 'amount'))\n    })\n    const valueInName = _.map(_.get(graphData, 'dataIn'), (item) => {\n        return dateFormat(_.get(item, 'date'))\n    })\n\n    let sumOut = 0\n    const valueOut = _.map(_.get(graphData, 'dataOut'), (item) => {\n        sumOut += _.toInteger(_.get(item, 'amount')) * NEGATIVE\n        return _.toInteger(_.get(item, 'amount')) * NEGATIVE\n    })\n    const config = {\n        chart: {\n            type: 'areaspline',\n            height: 145\n        },\n        title: {\n            text: '',\n            style: {\n                display: 'none'\n            }\n        },\n        legend: {\n            enabled: false\n        },\n        credits: {\n            enabled: false\n        },\n        xAxis: {\n            categories: valueInName,\n            tickmarkPlacement: 'on',\n            title: {\n                text: '',\n                style: {\n                    display: 'none'\n                }\n            }\n        },\n        yAxis: {\n            title: {\n                text: '',\n                style: {\n                    display: 'none'\n                }\n            },\n            gridLineColor: '#efefef',\n            plotLines: [{\n                value: 0,\n                width: 1,\n                color: '#808080'\n            }]\n        },\n        plotOptions: {\n            series: {\n                lineWidth: 0,\n                pointPlacement: 'on'\n            },\n            areaspline: {\n                fillOpacity: 0.7\n            }\n        },\n        tooltip: {\n            shared: true,\n            valueSuffix: ' ' + primaryCurrency,\n            backgroundColor: '#fff',\n            style: {\n                color: '#666',\n                fontFamily: 'Open Sans',\n                fontWeight: '600'\n            },\n            borderRadius: 0,\n            borderWidth: 0,\n            enabled: true,\n            shadow: true,\n            useHTML: true,\n            crosshairs: true,\n            pointFormat:\n                '<div class=\"diagramTooltip\">' +\n                    '{series.name}: {point.y}' +\n                '</div>'\n        },\n        series: [{\n            marker: {\n                enabled: false,\n                symbol: 'circle'\n            },\n            name: 'Доход',\n            data: valueIn,\n            color: '#6cc6de'\n\n        },\n        {\n            marker: {\n                enabled: false,\n                symbol: 'circle'\n            },\n            name: 'Расход',\n            data: valueOut,\n            color: '#EB9696'\n\n        }]\n    }\n\n    const headerStyle = {\n        backgroundColor: '#fff',\n        fontWeight: '600',\n        color: '#666'\n    }\n\n    const iconStyle = {\n        icon: {\n            color: '#5d6474',\n            width: 22,\n            height: 22\n        },\n        button: {\n            width: 40,\n            height: 40,\n            padding: 0\n        }\n    }\n\n    const headers = (\n        <Row style={headerStyle} className=\"dottedList\">\n            <Col xs={2}>№ заказа</Col>\n            <Col xs={3}>Дата</Col>\n            <Col xs={4}>Описания</Col>\n            <Col xs={3}>Сумма</Col>\n        </Row>\n    )\n\n    const list = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const date = dateFormat(_.get(item, 'createdDate'))\n        const amount = numberFormat(_.get(item, 'amount'), primaryCurrency)\n        const comment = _.get(item, 'comment')\n        return (\n            <Row key={id} className=\"dottedList\">\n                <Col xs={2}>{id}</Col>\n                <Col xs={3}>{date}</Col>\n                <Col xs={4}>{comment}</Col>\n                <Col xs={3} style={{justifyContent: 'flex-end'}}>{amount}</Col>\n            </Row>\n        )\n    })\n\n    const page = (\n            <div className={classes.mainWrapper}>\n                <Row style={{margin: '0', height: '100%'}}>\n                    <div className={classes.leftPanel}>\n                        <StatSideMenu currentUrl={ROUTES.STATISTICS_FINANCE_URL}/>\n                    </div>\n                    <div className={classes.rightPanel}>\n                        <div className={classes.wrapper}>\n                            <form className={classes.form} onSubmit={handleSubmitFilterDialog}>\n                                <div className={classes.filter}>\n                                    <Field\n                                        className={classes.inputFieldCustom}\n                                        name=\"date\"\n                                        component={DateToDateField}\n                                        label=\"Диапазон дат\"\n                                        fullWidth={true}/>\n                                    <Field\n                                        className={classes.inputFieldCustom}\n                                        name=\"client\"\n                                        component={ClientSearchField}\n                                        label=\"Клиенты\"\n                                        fullWidth={true}/>\n\n                                    <IconButton\n                                        className={classes.searchButton}\n                                        iconStyle={iconStyle.icon}\n                                        style={iconStyle.button}\n                                        type=\"submit\">\n                                        <Search/>\n                                    </IconButton>\n                                </div>\n                                <a className={classes.excel}>\n                                    <Excel color=\"#fff\"/> <span>Excel</span>\n                                </a>\n                            </form>\n                            <Row className={classes.diagram}>\n                                <Col xs={3} className={classes.salesSummary}>\n                                    <div className={classes.mainSummary}>\n                                        <div className={classes.summaryTitle}>Прибыль за период</div>\n                                        <div className={classes.summaryValue}>5 000 000 {primaryCurrency}</div>\n                                    </div>\n                                    <div className={classes.secondarySummary}>\n                                        <div className={classes.summaryTitle}>Доход</div>\n                                        <div className={classes.summaryValue}>{numberFormat(sumIn)} {primaryCurrency}</div>\n\n                                        <div className={classes.summaryTitle}>Расход</div>\n                                        <div className={classes.summaryValue}>{numberFormat(sumOut)} {primaryCurrency}</div>\n                                    </div>\n                                </Col>\n                                <Col xs={9} className={classes.chart}>\n                                    <ReactHighcharts config={config} neverReflow={true} isPureConfig={true}/>\n                                </Col>\n                            </Row>\n                            <div className={classes.pagination}>\n                                <div><b>История заказов</b></div>\n                                <Pagination filter={filter}/>\n                            </div>\n                            <div className={classes.tableWrapper}>\n                                {headers}\n                                {list}\n                            </div>\n                        </div>\n                    </div>\n                </Row>\n            </div>\n    )\n\n    return (\n        <Container>\n            {page}\n        </Container>\n    )\n})\n\nStatFinanceGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object\n}\n\nexport default StatFinanceGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Statistics/StatFinanceGridList.js","import _ from 'lodash'\nimport moment from 'moment'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport {Row, Col} from 'react-flexbox-grid'\nimport * as ROUTES from '../../constants/routes'\nimport Container from '../Container'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport {reduxForm, Field} from 'redux-form'\nimport ReactHighcharts from 'react-highcharts'\nimport DateToDateField from '../ReduxForm/Basic/DateToDateField'\nimport TextField from '../ReduxForm/Basic/TextField'\nimport StatSideMenu from './StatSideMenu'\nimport Search from 'material-ui/svg-icons/action/search'\nimport IconButton from 'material-ui/IconButton'\nimport Excel from 'material-ui/svg-icons/av/equalizer'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport Pagination from '../GridList/GridListNavPagination'\nimport StatIncomeDialog from './StatIncomeDialog'\nimport getConfig from '../../helpers/getConfig'\nimport numberFormat from '../../helpers/numberFormat'\nimport NotFound from '../Images/not-found.png'\n\nexport const STAT_INCOME_FILTER_KEY = {\n    FROM_DATE: 'fromDate',\n    TO_DATE: 'toDate',\n    SEARCH: 'search'\n}\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        mainWrapper: {\n            background: '#fff',\n            margin: '0 -28px',\n            height: 'calc(100% + 28px)',\n            boxShadow: 'rgba(0, 0, 0, 0.09) 0px -1px 6px, rgba(0, 0, 0, 0.10) 0px -1px 4px'\n        },\n        wrapper: {\n            height: 'calc(100% - 40px)',\n            padding: '20px 30px',\n            '& .row': {\n                marginLeft: '0',\n                marginRight: '0'\n            }\n        },\n        pagination: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            borderTop: '1px #efefef solid',\n            borderBottom: '1px #efefef solid'\n        },\n        tableWrapper: {\n            height: 'calc(100% - 283px)',\n            overflowY: 'auto',\n            overflowX: 'hidden',\n            '& .row': {\n                '&:after': {\n                    bottom: '-1px'\n                },\n                '& > div': {\n                    display: 'flex',\n                    height: '50px',\n                    alignItems: 'center',\n                    '&:last-child': {\n                        justifyContent: 'flex-end'\n                    }\n                }\n            },\n            '& .dottedList': {\n                padding: '0',\n                '&:last-child:after': {\n                    content: '\"\"',\n                    backgroundImage: 'none'\n                }\n            },\n            '& .personImage': {\n                borderRadius: '50%',\n                overflow: 'hidden',\n                height: '30px',\n                minWidth: '30px',\n                width: '30px',\n                marginRight: '10px',\n                '& img': {\n                    display: 'flex',\n                    height: '100%',\n                    width: '100%'\n                }\n            }\n        },\n        balanceInfo: {\n            padding: '15px 0'\n        },\n        balance: {\n            paddingRight: '10px',\n            fontSize: '24px!important',\n            fontWeight: '600'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        balanceButtonWrap: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n        },\n        form: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n        },\n        filter: {\n            display: 'flex',\n            alignItems: 'center',\n            '& > div': {\n                width: '170px!important',\n                position: 'relative',\n                marginRight: '40px',\n                '&:last-child': {\n                    margin: '0'\n                },\n                '&:after': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    right: '-20px',\n                    height: '30px',\n                    width: '1px',\n                    top: '50%',\n                    marginTop: '-15px',\n                    background: '#efefef'\n                },\n                '&:last-child:after': {\n                    display: 'none'\n                }\n            }\n        },\n        leftPanel: {\n            backgroundColor: '#f2f5f8',\n            flexBasis: '250px',\n            maxWidth: '250px'\n\n        },\n        rightPanel: {\n            flexBasis: 'calc(100% - 250px)',\n            maxWidth: 'calc(100% - 250px)',\n            overflow: 'hidden'\n        },\n        searchButton: {\n            marginLeft: '-10px !important',\n            '& div': {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center'\n            }\n        },\n        excel: {\n            background: '#71ce87',\n            borderRadius: '2px',\n            color: '#fff',\n            fontWeight: '600',\n            display: 'flex',\n            alignItems: 'center',\n            padding: '5px 15px',\n            '& svg': {\n                width: '18px !important'\n            }\n        },\n        diagram: {\n            marginTop: '30px'\n        },\n        salesSummary: {\n            '& > div:first-child': {\n                color: '#666'\n            },\n            '& > div:last-child': {\n                fontSize: '24px',\n                fontWeight: '600'\n            }\n        },\n        emptyQuery: {\n            background: 'url(' + NotFound + ') no-repeat center center',\n            backgroundSize: '200px',\n            padding: '200px 0 0',\n            textAlign: 'center',\n            fontSize: '13px',\n            color: '#666',\n            '& svg': {\n                width: '50px !important',\n                height: '50px !important',\n                color: '#999 !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'StatIncomeFilterForm',\n        enableReinitialize: true\n    }),\n)\n\nconst StatIncomeGridList = enhance((props) => {\n    const {\n        classes,\n        filter,\n        handleSubmitFilterDialog,\n        statIncomeDialog,\n        listData\n    } = props\n\n    const listLoading = _.get(listData, 'listLoading')\n\n    let sum = 0\n    const value = _.map(_.get(listData, 'grafData'), (item) => {\n        sum += _.toInteger(_.get(item, 'amount'))\n        return _.toInteger(_.get(item, 'amount'))\n    })\n    const valueName = _.map(_.get(listData, 'grafData'), (item) => {\n        return moment(_.get(item, 'date')).format('LL')\n    })\n    const config = {\n        chart: {\n            type: 'areaspline',\n            height: 145\n        },\n        title: {\n            text: '',\n            style: {\n                display: 'none'\n            }\n        },\n        legend: {\n            enabled: false\n        },\n        credits: {\n            enabled: false\n        },\n        xAxis: {\n            categories: valueName,\n            tickmarkPlacement: 'on',\n            title: {\n                text: '',\n                style: {\n                    display: 'none'\n                }\n            }\n        },\n        yAxis: {\n            title: {\n                text: '',\n                style: {\n                    display: 'none'\n                }\n            },\n            gridLineColor: '#efefef',\n            plotLines: [{\n                value: 0,\n                width: 1,\n                color: '#808080'\n            }]\n        },\n        plotOptions: {\n            series: {\n                lineWidth: 0,\n                pointPlacement: 'on'\n            },\n            areaspline: {\n                fillOpacity: 0.7\n            }\n        },\n        tooltip: {\n            shared: true,\n            valueSuffix: ' %',\n            backgroundColor: '#363636',\n            style: {\n                color: '#fff'\n            },\n            borderRadius: 2,\n            borderWidth: 0,\n            enabled: true,\n            shadow: false,\n            useHTML: true,\n            crosshairs: true,\n            pointFormat: '{series.name}: <b>{point.y}</b><br/>в отношении к BoM<br/>'\n        },\n        series: [{\n            marker: {\n                enabled: false,\n                symbol: 'circle'\n            },\n            name: 'Эффективность',\n            data: value,\n            color: '#6cc6de'\n\n        }]\n    }\n\n    const headerStyle = {\n        backgroundColor: '#fff',\n        fontWeight: '600',\n        color: '#666'\n    }\n\n    const iconStyle = {\n        icon: {\n            color: '#5d6474',\n            width: 22,\n            height: 22\n        },\n        button: {\n            width: 40,\n            height: 40,\n            padding: 0\n        }\n    }\n\n    const headers = (\n        <Row style={headerStyle} className=\"dottedList\">\n            <Col xs={2}>№ заказа</Col>\n            <Col xs={3}>Дата</Col>\n            <Col xs={4}>Клиент</Col>\n            <Col xs={3}>Сумма</Col>\n        </Row>\n    )\n    const primaryCurrency = getConfig('PRIMARY_CURRENCY')\n    const list = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const date = moment(_.get(item, 'createdDate')).format('YY:MM:DD')\n        const amount = numberFormat(_.get(item, 'amount'), primaryCurrency)\n\n        return (\n            <Row key={id} className=\"dottedList\">\n                <Col xs={2}>{id}</Col>\n                <Col xs={3}>{date}</Col>\n                <Col xs={4}>Имя Фамилия Клиента</Col>\n                <Col xs={3} style={{justifyContent: 'flex-end'}}>{amount}</Col>\n            </Row>\n        )\n    })\n\n    const page = (\n        <div className={classes.mainWrapper}>\n            <Row style={{margin: '0', height: '100%'}}>\n                <div className={classes.leftPanel}>\n                    <StatSideMenu currentUrl={ROUTES.STATISTICS_INCOME_URL}/>\n                </div>\n                <div className={classes.rightPanel}>\n                    {listLoading ? <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4}/>\n                    </div>\n                        : <div className={classes.wrapper}>\n                            <form className={classes.form} onSubmit={handleSubmitFilterDialog}>\n                                <div className={classes.filter}>\n                                    <Field\n                                        className={classes.inputFieldCustom}\n                                        name=\"date\"\n                                        component={DateToDateField}\n                                        label=\"Диапазон дат\"\n                                        fullWidth={true}/>\n                                    <Field\n                                        className={classes.inputFieldCustom}\n                                        name=\"search\"\n                                        component={TextField}\n                                        label=\"Клиенты\"\n                                        fullWidth={true}/>\n\n                                    <IconButton\n                                        className={classes.searchButton}\n                                        iconStyle={iconStyle.icon}\n                                        style={iconStyle.button}\n                                        type=\"submit\">\n                                        <Search/>\n                                    </IconButton>\n                                </div>\n                                <a className={classes.excel}>\n                                    <Excel color=\"#fff\"/> <span>Excel</span>\n                                </a>\n                            </form>\n                            <Row className={classes.diagram}>\n                                <Col xs={3} className={classes.salesSummary}>\n                                    <div>Сумма продаж за период</div>\n                                    <div>{numberFormat(sum, primaryCurrency)}</div>\n                                </Col>\n                                <Col xs={9}>\n                                    <ReactHighcharts config={config}/>\n                                </Col>\n                            </Row>\n                            <div className={classes.pagination}>\n                                <div><b>История доходов</b></div>\n                                <Pagination filter={filter}/>\n                            </div>\n                            {(_.isEmpty(list) && !listLoading) ? <div className={classes.emptyQuery}>\n                                <div>По вашему запросу ничего не найдено</div>\n                            </div>\n                                : <div className={classes.tableWrapper}>\n                                    {headers}\n                                    {list}\n                                </div>}\n                        </div>}\n                </div>\n            </Row>\n        </div>\n    )\n\n    return (\n        <Container>\n            {page}\n            <StatIncomeDialog\n                loading={statIncomeDialog.loading}\n                open={statIncomeDialog.openStatIncomeDialog}\n                onClose={statIncomeDialog.handleCloseStatIncomeDialog}\n            />\n        </Container>\n    )\n})\n\nStatIncomeGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    statIncomeDialog: PropTypes.shape({\n        openStatIncomeDialog: PropTypes.bool.isRequired,\n        handleCloseStatIncomeDialog: PropTypes.func.isRequired,\n        handleOpenStatIncomeDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default StatIncomeGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Statistics/StatIncomeGridList.js","import _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport {Row, Col} from 'react-flexbox-grid'\nimport * as ROUTES from '../../constants/routes'\nimport Container from '../Container'\nimport LinearProgress from 'material-ui/LinearProgress'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport {reduxForm, Field} from 'redux-form'\nimport TextField from '../ReduxForm/Basic/TextField'\nimport DateToDateField from '../ReduxForm/Basic/DateToDateField'\nimport StatSideMenu from './StatSideMenu'\nimport LinearLoading from '../LinearProgress'\nimport Search from 'material-ui/svg-icons/action/search'\nimport IconButton from 'material-ui/IconButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport List from 'material-ui/svg-icons/action/list'\nimport Excel from 'material-ui/svg-icons/av/equalizer'\nimport Pagination from '../GridList/GridListNavPagination'\nimport StatMarketDialog from './StatMarketDialog'\nimport numberFormat from '../../helpers/numberFormat'\nimport getConfig from '../../helpers/getConfig'\nimport ReactHighcharts from 'react-highcharts'\nimport NotFound from '../Images/not-found.png'\nimport dateFormat from '../../helpers/dateFormat'\n\nexport const STAT_MARKET_FILTER_KEY = {\n    SEARCH: 'search',\n    TO_DATE: 'toDate',\n    FROM_DATE: 'fromDate'\n}\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        mainWrapper: {\n            background: '#fff',\n            margin: '0 -28px',\n            height: 'calc(100% + 28px)',\n            boxShadow: 'rgba(0, 0, 0, 0.09) 0px -1px 6px, rgba(0, 0, 0, 0.10) 0px -1px 4px'\n        },\n        wrapper: {\n            height: 'calc(100% - 40px)',\n            padding: '20px 30px',\n            '& > div:nth-child(2)': {\n                marginTop: '10px',\n                borderTop: '1px #efefef solid',\n                borderBottom: '1px #efefef solid'\n            },\n            '& .row': {\n                margin: '0 !important'\n            }\n        },\n        tableWrapper: {\n            height: 'calc(100% - 140px)',\n            overflowY: 'auto',\n            overflowX: 'hidden',\n            '& .row': {\n                '&:after': {\n                    bottom: '-1px'\n                },\n                '& > div': {\n                    display: 'flex',\n                    height: '50px',\n                    alignItems: 'center',\n                    '& img': {\n                        width: '35px',\n                        height: '35px',\n                        borderRadius: '4px',\n                        marginRight: '10px'\n                    }\n                }\n            },\n            '& .dottedList': {\n                padding: '0',\n                '&:last-child:after': {\n                    content: '\"\"',\n                    backgroundImage: 'none'\n                }\n            }\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        excel: {\n            background: '#71ce87',\n            borderRadius: '2px',\n            color: '#fff',\n            fontWeight: '600',\n            display: 'flex',\n            alignItems: 'center',\n            padding: '5px 15px',\n            '& svg': {\n                width: '18px !important'\n            }\n        },\n        form: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n        },\n        filter: {\n            display: 'flex',\n            alignItems: 'center',\n            '& > div': {\n                width: '170px!important',\n                position: 'relative',\n                marginRight: '40px',\n                '&:after': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    right: '-20px',\n                    height: '30px',\n                    width: '1px',\n                    top: '50%',\n                    marginTop: '-15px',\n                    background: '#efefef'\n                },\n                '&:last-child': {\n                    '&:after': {\n                        content: '\"\"',\n                        background: 'none'\n                    }\n                }\n            }\n        },\n        leftPanel: {\n            backgroundColor: '#f2f5f8',\n            flexBasis: '250px',\n            maxWidth: '250px'\n\n        },\n        rightPanel: {\n            flexBasis: 'calc(100% - 250px)',\n            maxWidth: 'calc(100% - 250px)',\n            overflow: 'hidden'\n        },\n        searchButton: {\n            marginLeft: '-10px !important',\n            '& div': {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center'\n            }\n        },\n        emptyQuery: {\n            background: 'url(' + NotFound + ') no-repeat center center',\n            backgroundSize: '200px',\n            padding: '200px 0 0',\n            textAlign: 'center',\n            fontSize: '13px',\n            color: '#666',\n            '& svg': {\n                width: '50px !important',\n                height: '50px !important',\n                color: '#999 !important'\n            }\n        },\n        summary: {\n            padding: '14px 0',\n            color: '#666',\n            '& > div': {\n                fontSize: '24px',\n                color: '#333',\n                fontWeigh: '600'\n\n            }\n        },\n        pagination: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            '& div:first-child': {\n                fontWeight: '600'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'StatMarketFilterForm',\n        enableReinitialize: true\n    }),\n)\n\nconst StatMarketGridList = enhance((props) => {\n    const {\n        listData,\n        detailData,\n        classes,\n        filter,\n        filterItem,\n        statMarketDialog,\n        handleSubmitFilterDialog,\n        getDocument\n    } = props\n\n    const listLoading = _.get(listData, 'listLoading')\n    const graphLoading = _.get(detailData, ['graphLoading'])\n    const headerStyle = {\n        backgroundColor: '#fff',\n        fontWeight: '600',\n        color: '#666'\n    }\n\n    let sum = 0\n    const value = _.map(_.get(detailData, ['graphList']), (item) => {\n        sum += _.toInteger(_.get(item, 'amount'))\n        return _.toInteger(_.get(item, 'amount'))\n    })\n\n    const valueName = _.map(_.get(detailData, ['graphList']), (item) => {\n        return dateFormat(_.get(item, 'date'))\n    })\n\n    const config = {\n        chart: {\n            type: 'column',\n            height: 145\n        },\n        title: {\n            text: '',\n            style: {\n                display: 'none'\n            }\n        },\n        legend: {\n            enabled: false\n        },\n        credits: {\n            enabled: false\n        },\n        xAxis: {\n            categories: valueName,\n            tickmarkPlacement: 'on',\n            title: {\n                text: '',\n                style: {\n                    display: 'none'\n                }\n            }\n        },\n        yAxis: {\n            title: {\n                text: '',\n                style: {\n                    display: 'none'\n                }\n            },\n            gridLineColor: '#efefef',\n            plotLines: [{\n                value: 0,\n                width: 1,\n                color: '#808080'\n            }]\n        },\n        plotOptions: {\n            series: {\n                lineWidth: 0,\n                pointPlacement: 'on'\n            },\n            column: {\n                fillOpacity: 0.7\n            }\n        },\n        tooltip: {\n            shared: true,\n            valueSuffix: ' ' + getConfig('PRIMARY_CURRENCY'),\n            backgroundColor: '#363636',\n            style: {\n                color: '#fff'\n            },\n            borderRadius: 2,\n            borderWidth: 0,\n            enabled: true,\n            shadow: false,\n            useHTML: true,\n            crosshairs: true,\n            pointFormat: '{series.name}: <b>{point.y}</b>'\n        },\n        series: [{\n            marker: {\n                enabled: false,\n                symbol: 'circle'\n            },\n            name: 'Сумма',\n            data: value,\n            color: '#378ca2'\n\n        }]\n    }\n    const iconStyle = {\n        icon: {\n            color: '#5d6474',\n            width: 22,\n            height: 22\n        },\n        button: {\n            width: 40,\n            height: 40,\n            padding: 0\n        }\n    }\n\n    const headers = (\n        <Row style={headerStyle} className=\"dottedList\">\n            <Col xs={3}>Магазины</Col>\n            <Col xs={3}>Клиент</Col>\n            <Col xs={3}>Продажи</Col>\n            <Col xs={2} style={{justifyContent: 'flex-end'}}>Сумма</Col>\n        </Row>\n    )\n\n    const list = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        const percent = _.get(item, 'percent')\n        const clientName = _.get(item, 'clientName')\n        const income = numberFormat(_.get(item, 'income'), getConfig('PRIMARY_CURRENCY'))\n\n        if (id === _.get(detailData, 'id')) {\n            return (\n                <div key={id}>\n                    <Row>\n                        <Col xs={3}>\n                            <img src=\"http://www.shop-script.su/images/internet-biznes/market-store-icon.jpg\" alt=\"\"/>\n                            <span>{name}</span>\n                        </Col>\n                        <Col xs={3}>{clientName}</Col>\n                        <Col xs={3}>\n                            <LinearProgress\n                                color=\"#58bed9\"\n                                mode=\"determinate\"\n                                value={percent}\n                                style={{backgroundColor: '#fff', height: '10px'}}/>\n                        </Col>\n                        <Col xs={2} style={{justifyContent: 'flex-end'}}>{income}</Col>\n                        <Col xs={1} style={{justifyContent: 'flex-end', paddingRight: '0'}}>\n                            <IconButton\n                                onTouchTap={() => { detailData.handleCloseDetail() }}>\n                                <List color=\"#12aaeb\"/>\n                            </IconButton>\n                        </Col>\n                    </Row>\n                    {graphLoading ? <div style={{position: 'relative'}}><LinearLoading/></div>\n                        : <ReactHighcharts\n                        config={config}\n                        neverReflow={true}\n                        isPureConfig={true}\n                        />}\n                </div>\n            )\n        }\n\n        return (\n            <Row key={id} className=\"dottedList\">\n                <Col xs={3}>\n                    <img src=\"http://www.shop-script.su/images/internet-biznes/market-store-icon.jpg\" alt=\"\"/>\n                    <span>{name}</span>\n                </Col>\n                <Col xs={3}>{clientName}</Col>\n                <Col xs={3}>\n                    <LinearProgress\n                        color=\"#58bed9\"\n                        mode=\"determinate\"\n                        value={percent}\n                        style={{backgroundColor: '#fff', height: '10px'}}/>\n                </Col>\n                <Col xs={2} style={{justifyContent: 'flex-end'}}>{income}</Col>\n                <Col xs={1} style={{justifyContent: 'flex-end', paddingRight: '0'}}>\n                    <IconButton\n                        onTouchTap={() => { detailData.handleOpenDetail(id) }}>\n                        <List color=\"#12aaeb\"/>\n                    </IconButton>\n                </Col>\n            </Row>\n        )\n    })\n\n    const page = (\n        <div className={classes.mainWrapper}>\n            <Row style={{margin: '0', height: '100%'}}>\n                <div className={classes.leftPanel}>\n                    <StatSideMenu currentUrl={ROUTES.STATISTICS_MARKET_URL}/>\n                </div>\n                <div className={classes.rightPanel}>\n                    {listLoading\n                        ? <div className={classes.loader}>\n                            <CircularProgress size={40} thickness={4}/>\n                        </div>\n                        : <div className={classes.wrapper}>\n                            <form className={classes.form} onSubmit={ handleSubmitFilterDialog }>\n                                <div className={classes.filter}>\n                                    <Field\n                                        className={classes.inputFieldCustom}\n                                        name=\"date\"\n                                        component={DateToDateField}\n                                        label=\"Диапазон дат\"\n                                        fullWidth={true}/>\n                                    <Field\n                                        className={classes.inputFieldCustom}\n                                        name=\"search\"\n                                        component={TextField}\n                                        label=\"Магазин\"\n                                        fullWidth={true}/>\n\n                                    <IconButton\n                                        className={classes.searchButton}\n                                        iconStyle={iconStyle.icon}\n                                        style={iconStyle.button}\n                                        type=\"submit\">\n                                        <Search/>\n                                    </IconButton>\n                                </div>\n                                <a className={classes.excel}\n                                   onClick={getDocument.handleGetDocument}>\n                                    <Excel color=\"#fff\"/> <span>Excel</span>\n                                </a>\n                            </form>\n                            <div className={classes.summary}>Сумма от продаж\n                                <div>\n                                    {numberFormat(sum, 'SUM')}\n                                </div>\n                            </div>\n                            <div className={classes.pagination}>\n                                <div>Продажи по магазинам в зоне</div>\n                                <Pagination filter={filter}/>\n                            </div>\n                            {(_.isEmpty(list) && !listLoading) ? <div className={classes.emptyQuery}>\n                                <div>По вашему запросу ничего не найдено</div>\n                            </div>\n                                : <div className={classes.tableWrapper}>\n                                    {headers}\n                                    {list}\n                                </div>}\n                        </div>\n                    }\n                </div>\n            </Row>\n        </div>\n    )\n\n    return (\n        <Container>\n            {page}\n            <StatMarketDialog\n                loading={detailData.detailLoading}\n                detailData={detailData}\n                open={statMarketDialog.openStatMarketDialog}\n                onClose={statMarketDialog.handleCloseStatMarketDialog}\n                filterItem={filterItem}\n            />\n        </Container>\n    )\n})\n\nStatMarketGridList.propTypes = {\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    statMarketDialog: PropTypes.shape({\n        openStatMarketDialog: PropTypes.bool.isRequired,\n        handleOpenStatMarketDialog: PropTypes.func.isRequired,\n        handleCloseStatMarketDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default StatMarketGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Statistics/StatMarketGridList.js","import _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport {Row, Col} from 'react-flexbox-grid'\nimport * as ROUTES from '../../constants/routes'\nimport Container from '../Container'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport {reduxForm, Field} from 'redux-form'\nimport DateToDateField from '../ReduxForm/Basic/DateToDateField'\nimport StatSideMenu from './StatSideMenu'\nimport Person from '../Images/person.png'\nimport Search from 'material-ui/svg-icons/action/search'\nimport IconButton from 'material-ui/IconButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport Excel from 'material-ui/svg-icons/av/equalizer'\nimport LinearProgress from 'material-ui/LinearProgress'\nimport Pagination from '../GridList/GridListNavPagination'\nimport numberFormat from '../../helpers/numberFormat.js'\nimport getConfig from '../../helpers/getConfig'\nimport NotFound from '../Images/not-found.png'\n\nexport const STAT_OUTCOME_CATEGORY_FILTER_KEY = {\n    FROM_DATE: 'fromDate',\n    TO_DATE: 'toDate'\n}\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        mainWrapper: {\n            background: '#fff',\n            margin: '0 -28px',\n            height: 'calc(100% + 28px)',\n            boxShadow: 'rgba(0, 0, 0, 0.09) 0px -1px 6px, rgba(0, 0, 0, 0.10) 0px -1px 4px'\n        },\n        wrapper: {\n            padding: '20px 30px',\n            height: 'calc(100% - 40px)',\n            '& > div:nth-child(2)': {\n                marginTop: '10px',\n                borderTop: '1px #efefef solid',\n                borderBottom: '1px #efefef solid'\n            },\n            '& .row': {\n                margin: '0 !important'\n            }\n        },\n        tableWrapper: {\n            height: 'calc(100% - 118px)',\n            overflowY: 'auto',\n            overflowX: 'hidden',\n            '& .row': {\n                '&:after': {\n                    bottom: '-1px'\n                },\n                '& > div': {\n                    display: 'flex',\n                    height: '50px',\n                    alignItems: 'center'\n                }\n            },\n            '& .dottedList': {\n                padding: '0',\n                '&:last-child:after': {\n                    content: '\"\"',\n                    backgroundImage: 'none'\n                }\n            },\n            '& .personImage': {\n                borderRadius: '50%',\n                overflow: 'hidden',\n                height: '30px',\n                minWidth: '30px',\n                width: '30px',\n                marginRight: '10px',\n                '& img': {\n                    display: 'flex',\n                    height: '100%',\n                    width: '100%'\n                }\n            }\n        },\n        balanceInfo: {\n            padding: '15px 0'\n        },\n        balance: {\n            paddingRight: '10px',\n            fontSize: '24px!important',\n            fontWeight: '600'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        balanceButtonWrap: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n        },\n        form: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n        },\n        filter: {\n            display: 'flex',\n            alignItems: 'center',\n            '& > div': {\n                width: '170px!important',\n                position: 'relative',\n                marginRight: '40px',\n                '&:last-child': {\n                    margin: '0'\n                },\n                '&:after': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    right: '-20px',\n                    height: '30px',\n                    width: '1px',\n                    top: '50%',\n                    marginTop: '-15px',\n                    background: '#efefef'\n                },\n                '&:last-child:after': {\n                    display: 'none'\n                }\n            }\n        },\n        leftPanel: {\n            backgroundColor: '#f2f5f8',\n            flexBasis: '250px',\n            maxWidth: '250px'\n\n        },\n        rightPanel: {\n            flexBasis: 'calc(100% - 250px)',\n            maxWidth: 'calc(100% - 250px)',\n            overflow: 'hidden'\n        },\n        searchButton: {\n            marginLeft: '-10px !important',\n            '& div': {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center'\n            }\n        },\n        excel: {\n            background: '#71ce87',\n            borderRadius: '2px',\n            color: '#fff',\n            fontWeight: '600',\n            display: 'flex',\n            alignItems: 'center',\n            padding: '5px 15px',\n            '& svg': {\n                width: '18px !important'\n            }\n        },\n        emptyQuery: {\n            background: 'url(' + NotFound + ') no-repeat center center',\n            backgroundSize: '200px',\n            padding: '200px 0 0',\n            textAlign: 'center',\n            fontSize: '13px',\n            color: '#666',\n            '& svg': {\n                width: '50px !important',\n                height: '50px !important',\n                color: '#999 !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'StatOutcomeCategoryFilterForm',\n        enableReinitialize: true\n    }),\n)\n\nconst StatOutcomeCategoryGridList = enhance((props) => {\n    const {\n        classes,\n        listData,\n        filter,\n        handleSubmitFilterDialog,\n        getDocument\n    } = props\n\n    const currentCurrency = getConfig('PRIMARY_CURRENCY')\n    const listLoading = _.get(listData, 'listLoading')\n\n    const headerStyle = {\n        backgroundColor: '#fff',\n        fontWeight: '600',\n        color: '#666'\n    }\n    const iconStyle = {\n        icon: {\n            color: '#5d6474',\n            width: 22,\n            height: 22\n        },\n        button: {\n            width: 40,\n            height: 40,\n            padding: 0\n        }\n    }\n\n    const headers = (\n        <Row style={headerStyle} className=\"dottedList\">\n            <Col xs={3}>Категория</Col>\n            <Col xs={6}>Процентное соотношение</Col>\n            <Col xs={3} style={{justifyContent: 'flex-end'}}>Сумма ({currentCurrency})</Col>\n        </Row>\n    )\n\n    const list = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        const percent = _.get(item, 'percent')\n        const amount = numberFormat(_.get(item, 'amount'), getConfig('PRIMARY_CURRENCY'))\n\n        return (\n            <Row key={id} className=\"dottedList\">\n                <Col xs={3}>\n                    <div className=\"personImage\"><img src={Person}/></div>\n                    <div>{name}</div>\n                </Col>\n                <Col xs={6}>\n                    <LinearProgress\n                        color=\"#58bed9\"\n                        mode=\"determinate\"\n                        value={percent}\n                        style={{backgroundColor: '#fff', height: '10px'}}/>\n                </Col>\n                <Col xs={3} style={{justifyContent: 'flex-end'}}>{amount}</Col>\n            </Row>\n        )\n    })\n\n    const page = (\n        <div className={classes.mainWrapper}>\n            <Row style={{margin: '0', height: '100%'}}>\n                <div className={classes.leftPanel}>\n                    <StatSideMenu currentUrl={ROUTES.STATISTICS_OUTCOME_CATEGORY_URL}/>\n                </div>\n                <div className={classes.rightPanel}>\n                    {listLoading\n                        ? <div className={classes.loader}>\n                            <CircularProgress size={40} thickness={4}/>\n                        </div>\n                        : <div className={classes.wrapper}>\n                            <form className={classes.form} onSubmit={handleSubmitFilterDialog}>\n                                <div className={classes.filter}>\n                                    <Field\n                                        className={classes.inputFieldCustom}\n                                        name=\"date\"\n                                        component={DateToDateField}\n                                        label=\"Диапазон дат\"\n                                        fullWidth={true}/>\n\n                                    <IconButton\n                                        className={classes.searchButton}\n                                        iconStyle={iconStyle.icon}\n                                        style={iconStyle.button}\n                                        type=\"submit\">\n                                        <Search/>\n                                    </IconButton>\n                                </div>\n                                <a className={classes.excel}\n                                   onClick={getDocument.handleGetDocument}>\n                                    <Excel color=\"#fff\"/> <span>Excel</span>\n                                </a>\n                            </form>\n                            <Pagination filter={filter}/>\n                            {(_.isEmpty(list) && !listLoading) ? <div className={classes.emptyQuery}>\n                                <div>По вашему запросу ничего не найдено</div>\n                            </div>\n                                : <div className={classes.tableWrapper}>\n                                    {headers}\n                                    {list}\n                                </div>}\n                        </div>}\n                </div>\n            </Row>\n        </div>\n    )\n\n    return (\n        <Container>\n            {page}\n        </Container>\n    )\n})\n\nStatOutcomeCategoryGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object\n}\n\nexport default StatOutcomeCategoryGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Statistics/StatOutcomeCategoryGridList.js","import _ from 'lodash'\nimport moment from 'moment'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport {Row, Col} from 'react-flexbox-grid'\nimport * as ROUTES from '../../constants/routes'\nimport Container from '../Container'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport {reduxForm, Field} from 'redux-form'\nimport ReactHighcharts from 'react-highcharts'\nimport DateToDateField from '../ReduxForm/Basic/DateToDateField'\nimport ClientSearchField from '../ReduxForm/Client/ClientSearchField'\nimport StatSideMenu from './StatSideMenu'\nimport Search from 'material-ui/svg-icons/action/search'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport IconButton from 'material-ui/IconButton'\nimport Person from '../Images/person.png'\nimport Excel from 'material-ui/svg-icons/av/equalizer'\nimport Pagination from '../GridList/GridListNavPagination'\nimport getConfig from '../../helpers/getConfig'\nimport numberFormat from '../../helpers/numberFormat'\nimport NotFound from '../Images/not-found.png'\n\nexport const STAT_OUTCOME_FILTER_KEY = {\n    FROM_DATE: 'fromDate',\n    TO_DATE: 'toDate',\n    USER: 'user'\n}\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        mainWrapper: {\n            background: '#fff',\n            margin: '0 -28px',\n            height: 'calc(100% + 28px)',\n            boxShadow: 'rgba(0, 0, 0, 0.09) 0px -1px 6px, rgba(0, 0, 0, 0.10) 0px -1px 4px'\n        },\n        wrapper: {\n            height: 'calc(100% - 40px)',\n            padding: '20px 30px',\n            '& .row': {\n                marginLeft: '0',\n                marginRight: '0'\n            }\n        },\n        pagination: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            borderTop: '1px #efefef solid',\n            borderBottom: '1px #efefef solid'\n        },\n        tableWrapper: {\n            height: 'calc(100% - 283px)',\n            overflowY: 'auto',\n            overflowX: 'hidden',\n            '& .row': {\n                '&:after': {\n                    bottom: '-1px'\n                },\n                '& > div': {\n                    display: 'flex',\n                    height: '50px',\n                    alignItems: 'center',\n                    '&:last-child': {\n                        justifyContent: 'flex-end'\n                    }\n                }\n            },\n            '& .dottedList': {\n                padding: '0',\n                '&:last-child:after': {\n                    content: '\"\"',\n                    backgroundImage: 'none'\n                }\n            },\n            '& .personImage': {\n                borderRadius: '50%',\n                overflow: 'hidden',\n                height: '30px',\n                minWidth: '30px',\n                width: '30px',\n                marginRight: '10px',\n                '& img': {\n                    display: 'flex',\n                    height: '100%',\n                    width: '100%'\n                }\n            }\n        },\n        balanceInfo: {\n            padding: '15px 0'\n        },\n        balance: {\n            paddingRight: '10px',\n            fontSize: '24px!important',\n            fontWeight: '600'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        balanceButtonWrap: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n        },\n        form: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n        },\n        filter: {\n            display: 'flex',\n            alignItems: 'center',\n            '& > div': {\n                width: '170px!important',\n                position: 'relative',\n                marginRight: '40px',\n                '&:last-child': {\n                    margin: '0'\n                },\n                '&:after': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    right: '-20px',\n                    height: '30px',\n                    width: '1px',\n                    top: '50%',\n                    marginTop: '-15px',\n                    background: '#efefef'\n                },\n                '&:last-child:after': {\n                    display: 'none'\n                }\n            }\n        },\n        leftPanel: {\n            backgroundColor: '#f2f5f8',\n            flexBasis: '250px',\n            maxWidth: '250px'\n\n        },\n        rightPanel: {\n            flexBasis: 'calc(100% - 250px)',\n            maxWidth: 'calc(100% - 250px)',\n            overflow: 'hidden'\n        },\n        searchButton: {\n            marginLeft: '-10px !important',\n            '& div': {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center'\n            }\n        },\n        excel: {\n            background: '#71ce87',\n            borderRadius: '2px',\n            color: '#fff',\n            fontWeight: '600',\n            display: 'flex',\n            alignItems: 'center',\n            padding: '5px 15px',\n            '& svg': {\n                width: '18px !important'\n            }\n        },\n        diagram: {\n            marginTop: '30px'\n        },\n        salesSummary: {\n            '& > div:first-child': {\n                color: '#666'\n            },\n            '& > div:last-child': {\n                fontSize: '24px',\n                fontWeight: '600'\n            }\n        },\n        emptyQuery: {\n            background: 'url(' + NotFound + ') no-repeat center center',\n            backgroundSize: '200px',\n            padding: '200px 0 0',\n            textAlign: 'center',\n            fontSize: '13px',\n            color: '#666',\n            '& svg': {\n                width: '50px !important',\n                height: '50px !important',\n                color: '#999 !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'StatOutcomeFilterForm',\n        enableReinitialize: true\n    }),\n)\n\nconst StatOutcomeGridList = enhance((props) => {\n    const {\n        listData,\n        classes,\n        filter,\n        handleSubmitFilterDialog,\n        getDocument\n    } = props\n\n    const listLoading = _.get(listData, 'listLoading')\n\n    let sum = 0\n    const value = _.map(_.get(listData, 'grafData'), (item) => {\n        sum += _.toInteger(_.get(item, 'amount'))\n        return _.toInteger(_.get(item, 'amount'))\n    })\n    const valueName = _.map(_.get(listData, 'grafData'), (item) => {\n        return moment(_.get(item, 'date')).format('LL')\n    })\n    const config = {\n        chart: {\n            type: 'areaspline',\n            height: 145\n        },\n        title: {\n            text: '',\n            style: {\n                display: 'none'\n            }\n        },\n        legend: {\n            enabled: false\n        },\n        credits: {\n            enabled: false\n        },\n        xAxis: {\n            categories: valueName,\n            tickmarkPlacement: 'on',\n            title: {\n                text: '',\n                style: {\n                    display: 'none'\n                }\n            }\n        },\n        yAxis: {\n            title: {\n                text: '',\n                style: {\n                    display: 'none'\n                }\n            },\n            gridLineColor: '#efefef',\n            plotLines: [{\n                value: 0,\n                width: 1,\n                color: '#808080'\n            }]\n        },\n        plotOptions: {\n            series: {\n                lineWidth: 0,\n                pointPlacement: 'on'\n            },\n            areaspline: {\n                fillOpacity: 0.7\n            }\n        },\n        tooltip: {\n            shared: true,\n            valueSuffix: ' %',\n            backgroundColor: '#363636',\n            style: {\n                color: '#fff'\n            },\n            borderRadius: 2,\n            borderWidth: 0,\n            enabled: true,\n            shadow: false,\n            useHTML: true,\n            crosshairs: true,\n            pointFormat: '{series.name}: <b>{point.y}</b><br/>в отношении к BoM<br/>'\n        },\n        series: [{\n            marker: {\n                enabled: false,\n                symbol: 'circle'\n            },\n            name: 'Эффективность',\n            data: value,\n            color: '#eb9696'\n\n        }]\n    }\n\n    const headerStyle = {\n        backgroundColor: '#fff',\n        fontWeight: '600',\n        color: '#666'\n    }\n\n    const iconStyle = {\n        icon: {\n            color: '#5d6474',\n            width: 22,\n            height: 22\n        },\n        button: {\n            width: 40,\n            height: 40,\n            padding: 0\n        }\n    }\n\n    const primaryCurrency = getConfig('PRIMARY_CURRENCY')\n    const headers = (\n        <Row style={headerStyle} className=\"dottedList\">\n            <Col xs={1}>№</Col>\n            <Col xs={2}>Категория</Col>\n            <Col xs={4}>Описание</Col>\n            <Col xs={3}>Кассир</Col>\n            <Col xs={2}>Сумма</Col>\n        </Row>\n    )\n\n    const list = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const comment = _.get(item, 'comment')\n        const amount = _.get(item, 'amount')\n\n        return (\n            <Row key={id} className=\"dottedList\">\n                <Col xs={1}>{id}</Col>\n                <Col xs={2}>Логистика</Col>\n                <Col xs={4}>{comment}</Col>\n                <Col xs={3}>\n                    <div className=\"personImage\"><img src={Person}/></div>\n                    <div>Бамбамбиев Куркуда</div>\n                </Col>\n                <Col xs={2}>{numberFormat(amount, primaryCurrency)}</Col>\n            </Row>\n        )\n    })\n\n    const page = (\n        <div className={classes.mainWrapper}>\n            <Row style={{margin: '0', height: '100%'}}>\n                <div className={classes.leftPanel}>\n                    <StatSideMenu currentUrl={ROUTES.STATISTICS_OUTCOME_URL}/>\n                </div>\n                <div className={classes.rightPanel}>\n                    {listLoading\n                        ? <div className={classes.loader}>\n                            <CircularProgress size={40} thickness={4}/>\n                        </div>\n                        : <div className={classes.wrapper}>\n                            <form className={classes.form} onSubmit={handleSubmitFilterDialog}>\n                                <div className={classes.filter}>\n                                    <Field\n                                        className={classes.inputFieldCustom}\n                                        name=\"date\"\n                                        component={DateToDateField}\n                                        label=\"Диапазон дат\"\n                                        fullWidth={true}/>\n                                    <Field\n                                        className={classes.inputFieldCustom}\n                                        name=\"client\"\n                                        component={ClientSearchField}\n                                        label=\"Клиенты\"\n                                        fullWidth={true}/>\n\n                                    <IconButton\n                                        className={classes.searchButton}\n                                        iconStyle={iconStyle.icon}\n                                        style={iconStyle.button}\n                                        type=\"submit\">\n                                        <Search/>\n                                    </IconButton>\n                                </div>\n                                <a className={classes.excel}>\n                                    <Excel color=\"#fff\" onTouchTap={() => { getDocument.handleGetDocument() }}/>\n                                    <span>Excel</span>\n                                </a>\n                            </form>\n                            <Row className={classes.diagram}>\n                                <Col xs={3} className={classes.salesSummary}>\n                                    <div>Сумма продаж за период</div>\n                                    <div>{numberFormat(sum)} {primaryCurrency}</div>\n                                </Col>\n                                <Col xs={9}>\n                                    <ReactHighcharts config={config}/>\n                                </Col>\n                            </Row>\n                            <div className={classes.pagination}>\n                                <div><b>История расходов</b></div>\n                                <Pagination filter={filter}/>\n                            </div>\n                            {(_.isEmpty(list) && !listLoading) ? <div className={classes.emptyQuery}>\n                                <div>По вашему запросу ничего не найдено</div>\n                            </div>\n                                : <div className={classes.tableWrapper}>\n                                    {headers}\n                                    {list}\n                                </div>}\n                        </div>}\n                </div>\n            </Row>\n        </div>\n    )\n\n    return (\n        <Container>\n            {page}\n        </Container>\n    )\n})\n\nStatOutcomeGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object\n}\n\nexport default StatOutcomeGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Statistics/StatOutcomeGridList.js","import _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport {Row, Col} from 'react-flexbox-grid'\nimport * as ROUTES from '../../constants/routes'\nimport Container from '../Container'\nimport LinearProgress from 'material-ui/LinearProgress'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport {reduxForm, Field} from 'redux-form'\nimport {TextField} from '../ReduxForm'\nimport ProductTypeSearchField from '../ReduxForm/Product/ProductTypeSearchField'\nimport DateToDateField from '../ReduxForm/Basic/DateToDateField'\nimport StatSideMenu from './StatSideMenu'\nimport Search from 'material-ui/svg-icons/action/search'\nimport IconButton from 'material-ui/IconButton'\nimport Excel from 'material-ui/svg-icons/av/equalizer'\nimport Pagination from '../GridList/GridListNavPagination'\nimport getConfig from '../../helpers/getConfig'\nimport numberFormat from '../../helpers/numberFormat.js'\nimport NotFound from '../Images/not-found.png'\n\nexport const STAT_PRODUCT_FILTER_KEY = {\n    SEARCH: 'search',\n    PRODUCT: 'product',\n    PRODUCT_TYPE: 'productType',\n    TO_DATE: 'toDate',\n    FROM_DATE: 'fromDate'\n}\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        mainWrapper: {\n            background: '#fff',\n            margin: '0 -28px',\n            height: 'calc(100% + 28px)',\n            boxShadow: 'rgba(0, 0, 0, 0.09) 0px -1px 6px, rgba(0, 0, 0, 0.10) 0px -1px 4px'\n        },\n        wrapper: {\n            height: 'calc(100% - 40px)',\n            overflowY: 'auto',\n            overflowX: 'hidden',\n            padding: '20px 30px',\n            '& > div:nth-child(2)': {\n                marginTop: '10px',\n                borderTop: '1px #efefef solid',\n                borderBottom: '1px #efefef solid'\n            },\n            '& .row': {\n                margin: '0 !important'\n            }\n        },\n        tableWrapper: {\n            height: 'calc(100% - 118px)',\n            '& .row': {\n                '&:after': {\n                    bottom: '-1px'\n                },\n                '& > div': {\n                    display: 'flex',\n                    height: '50px',\n                    alignItems: 'center',\n                    '&:last-child': {\n                        justifyContent: 'flex-end'\n                    }\n                }\n            },\n            '& .dottedList': {\n                padding: '0',\n                '&:last-child:after': {\n                    content: '\"\"',\n                    backgroundImage: 'none'\n                }\n            }\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        excel: {\n            background: '#71ce87',\n            borderRadius: '2px',\n            color: '#fff',\n            fontWeight: '600',\n            display: 'flex',\n            alignItems: 'center',\n            padding: '5px 15px',\n            '& svg': {\n                width: '18px !important'\n            }\n        },\n        form: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n        },\n        filter: {\n            display: 'flex',\n            alignItems: 'center',\n            '& > div': {\n                width: '100% !important',\n                position: 'relative',\n                marginRight: '40px',\n                '&:after': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    right: '-20px',\n                    height: '30px',\n                    width: '1px',\n                    top: '50%',\n                    marginTop: '-15px',\n                    background: '#efefef'\n                },\n                '&:last-child': {\n                    '&:after': {\n                        content: '\"\"',\n                        background: 'none'\n                    }\n                }\n            }\n        },\n        leftPanel: {\n            backgroundColor: '#f2f5f8',\n            flexBasis: '250px',\n            maxWidth: '250px'\n\n        },\n        rightPanel: {\n            flexBasis: 'calc(100% - 250px)',\n            maxWidth: 'calc(100% - 250px)',\n            overflow: 'hidden'\n        },\n        searchButton: {\n            marginLeft: '-10px !important',\n            marginRight: '10px !important',\n            '& div': {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center'\n            }\n        },\n        emptyQuery: {\n            background: 'url(' + NotFound + ') no-repeat center center',\n            backgroundSize: '200px',\n            padding: '200px 0 0',\n            textAlign: 'center',\n            fontSize: '13px',\n            color: '#666',\n            '& svg': {\n                width: '50px !important',\n                height: '50px !important',\n                color: '#999 !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'StatProductFilterForm',\n        enableReinitialize: true\n    }),\n)\n\nconst StatProductGridList = enhance((props) => {\n    const {\n        listData,\n        classes,\n        filter,\n        handleSubmitFilterDialog,\n        getDocument\n    } = props\n\n    const listLoading = _.get(listData, 'listLoading')\n\n    const headerStyle = {\n        backgroundColor: '#fff',\n        fontWeight: '600',\n        color: '#666'\n    }\n    const iconStyle = {\n        icon: {\n            color: '#5d6474',\n            width: 22,\n            height: 22\n        },\n        button: {\n            width: 40,\n            height: 40,\n            padding: 0\n        }\n    }\n\n    const headers = (\n        <Row style={headerStyle} className=\"dottedList\">\n            <Col xs={3}>Товар</Col>\n            <Col xs={3}>Тип товара</Col>\n            <Col xs={3}>Продажи</Col>\n            <Col xs={1}>Кол-во</Col>\n            <Col xs={2}>Сумма</Col>\n        </Row>\n    )\n    const list = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        const type = _.get(item, 'type')\n        const percent = _.get(item, 'percent')\n        const count = _.get(item, 'count')\n        const measurement = _.get(item, 'measurement')\n        const income = numberFormat(_.get(item, 'income'), getConfig('PRIMARY_CURRENCY'))\n\n        return (\n            <Row key={id} className=\"dottedList\">\n                <Col xs={3}>{name}</Col>\n                <Col xs={3}>{type}</Col>\n                <Col xs={3}>\n                    <LinearProgress\n                        color=\"#58bed9\"\n                        mode=\"determinate\"\n                        value={percent}\n                        style={{backgroundColor: '#fff', height: '10px'}}/>\n                </Col>\n                <Col xs={1}>{count} {measurement}</Col>\n                <Col xs={2}>{income}</Col>\n            </Row>\n        )\n    })\n\n    const page = (\n        <div className={classes.mainWrapper}>\n            <Row style={{margin: '0', height: '100%'}}>\n                <div className={classes.leftPanel}>\n                    <StatSideMenu currentUrl={ROUTES.STATISTICS_PRODUCT_URL}/>\n                </div>\n                <div className={classes.rightPanel}>\n                    {listLoading\n                    ? <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4} />\n                    </div>\n                    : <div className={classes.wrapper}>\n                        <form className={classes.form} onSubmit={handleSubmitFilterDialog}>\n                            <div className={classes.filter}>\n                                <Field\n                                    className={classes.inputFieldCustom}\n                                    name=\"date\"\n                                    component={DateToDateField}\n                                    label=\"Диапазон дат\"\n                                    fullWidth={true}/>\n                                <Field\n                                    className={classes.inputFieldCustom}\n                                    name=\"productType\"\n                                    component={ProductTypeSearchField}\n                                    label=\"Тип товара\"\n                                    fullWidth={true}/>\n                                <Field\n                                    className={classes.inputFieldCustom}\n                                    name=\"search\"\n                                    component={TextField}\n                                    label=\"Поиск\"\n                                    fullWidth={true}/>\n                                <IconButton\n                                    className={classes.searchButton}\n                                    iconStyle={iconStyle.icon}\n                                    style={iconStyle.button}\n                                    type=\"submit\">\n                                    <Search/>\n                                </IconButton>\n                            </div>\n                            <a className={classes.excel}\n                               onClick={getDocument.handleGetDocument}>\n                                <Excel color=\"#fff\"/> <span>Excel</span>\n                            </a>\n                        </form>\n                        <Pagination filter={filter}/>\n                        {(_.isEmpty(list) && !listLoading) ? <div className={classes.emptyQuery}>\n                            <div>По вашему запросу ничего не найдено</div>\n                        </div>\n                        : <div className={classes.tableWrapper}>\n                            {headers}\n                            {list}\n                        </div>}\n                    </div>}\n                </div>\n            </Row>\n        </div>\n    )\n\n    return (\n        <Container>\n            {page}\n        </Container>\n    )\n})\n\nStatProductGridList.propTypes = {\n    listData: PropTypes.object,\n    detailData: PropTypes.object\n}\n\nexport default StatProductGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Statistics/StatProductGridList.js","import _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport {Row, Col} from 'react-flexbox-grid'\nimport * as ROUTES from '../../constants/routes'\nimport Container from '../Container'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport {reduxForm, Field} from 'redux-form'\nimport {StockSearchField, ProductTypeSearchField, ProductSearchField} from '../ReduxForm'\nimport StatRemainderDialog from './StatRemainderDialog'\nimport StatSideMenu from './StatSideMenu'\nimport Search from 'material-ui/svg-icons/action/search'\nimport IconButton from 'material-ui/IconButton'\nimport List from 'material-ui/svg-icons/action/list'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport Excel from 'material-ui/svg-icons/av/equalizer'\nimport Pagination from '../GridList/GridListNavPagination'\nimport numberFormat from '../../helpers/numberFormat.js'\n\nexport const STAT_REMAINDER_FILTER_KEY = {\n    STOCK: 'stock',\n    TYPE: 'type',\n    PRODUCT: 'product'\n}\nconst enhance = compose(\n    injectSheet({\n        mainWrapper: {\n            background: '#fff',\n            margin: '0 -28px',\n            height: 'calc(100% + 28px)',\n            boxShadow: 'rgba(0, 0, 0, 0.09) 0px -1px 6px, rgba(0, 0, 0, 0.10) 0px -1px 4px'\n        },\n        loader: {\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            justifyContent: 'center',\n            alignItems: 'center',\n            zIndex: '999',\n            display: 'flex'\n        },\n        wrapper: {\n            padding: '20px 30px',\n            height: 'calc(100% - 40px)',\n            overflowY: 'auto',\n            overflowX: 'hidden',\n            '& > div:nth-child(2)': {\n                marginTop: '10px',\n                borderTop: '1px #efefef solid',\n                borderBottom: '1px #efefef solid'\n            },\n            '& .row': {\n                margin: '0 !important'\n            }\n        },\n        tableWrapper: {\n            height: 'calc(100% - 118px)',\n            '& .row': {\n                '&:after': {\n                    bottom: '-1px'\n                },\n                '& > div': {\n                    display: 'flex',\n                    height: '50px',\n                    alignItems: 'center'\n                }\n            },\n            '& .dottedList': {\n                padding: '0',\n                '&:last-child:after': {\n                    content: '\"\"',\n                    backgroundImage: 'none'\n                }\n            },\n            '& .personImage': {\n                borderRadius: '50%',\n                overflow: 'hidden',\n                height: '30px',\n                minWidth: '30px',\n                width: '30px',\n                marginRight: '10px',\n                '& img': {\n                    display: 'flex',\n                    height: '100%',\n                    width: '100%'\n                }\n            }\n        },\n        balanceInfo: {\n            padding: '15px 0'\n        },\n        balance: {\n            paddingRight: '10px',\n            fontSize: '24px!important',\n            fontWeight: '600'\n        },\n        balanceButtonWrap: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n        },\n        form: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n        },\n        filter: {\n            display: 'flex',\n            alignItems: 'center',\n            '& > div': {\n                width: '140px!important',\n                position: 'relative',\n                marginRight: '40px',\n                '&:last-child': {\n                    margin: '0'\n                },\n                '&:after': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    right: '-20px',\n                    height: '30px',\n                    width: '1px',\n                    top: '50%',\n                    marginTop: '-15px',\n                    background: '#efefef'\n                },\n                '&:last-child:after': {\n                    display: 'none'\n                }\n            }\n        },\n        leftPanel: {\n            backgroundColor: '#f2f5f8',\n            flexBasis: '250px',\n            maxWidth: '250px'\n\n        },\n        rightPanel: {\n            flexBasis: 'calc(100% - 250px)',\n            maxWidth: 'calc(100% - 250px)',\n            overflow: 'hidden'\n        },\n        searchButton: {\n            marginLeft: '-10px !important',\n            '& div': {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center'\n            }\n        },\n        excel: {\n            background: '#71ce87',\n            borderRadius: '2px',\n            color: '#fff',\n            fontWeight: '600',\n            display: 'flex',\n            alignItems: 'center',\n            padding: '5px 15px',\n            '& svg': {\n                width: '18px !important'\n            }\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'StatRemainderFilterForm',\n        enableReinitialize: true\n    }),\n)\n\nconst StatRemainderGridList = enhance((props) => {\n    const {\n        classes,\n        statRemainderDialog,\n        listData,\n        filter,\n        detailData,\n        getDocument,\n        handleSubmit,\n        filterItem,\n        onSubmit\n    } = props\n\n    const listLoading = _.get(listData, 'listLoading')\n\n    const headerStyle = {\n        backgroundColor: '#fff',\n        fontWeight: '600',\n        color: '#666'\n    }\n    const iconStyle = {\n        icon: {\n            color: '#5d6474',\n            width: 22,\n            height: 22\n        },\n        button: {\n            width: 40,\n            height: 40,\n            padding: 0\n        }\n    }\n    const headers = (\n        <Row style={headerStyle} className=\"dottedList\">\n            <Col xs={4}>Товар</Col>\n            <Col xs={3}>Тип товара</Col>\n            <Col xs={2} style={{justifyContent: 'flex-end'}}>Всего товаров</Col>\n            <Col xs={2} style={{justifyContent: 'flex-end'}}>Брак</Col>\n            <Col xs={1} style={{display: 'none'}}>|</Col>\n\n        </Row>\n    )\n\n    const list = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const productType = _.get(item, ['type', 'name'])\n        const product = _.get(item, 'title')\n        const measurement = _.get(item, ['measurement', 'name'])\n        const defects = numberFormat(_.get(item, 'defects'), measurement)\n        const balance = numberFormat(Number(_.get(item, 'balance')) + Number(_.get(item, 'defects')), measurement)\n        return (\n            <Row key={id} className=\"dottedList\">\n                <Col xs={4}>\n                    <div>{product}</div>\n                </Col>\n                <Col xs={3}>{productType}</Col>\n                <Col xs={2} style={{justifyContent: 'flex-end', fontWeight: '600', fontSize: '15px'}}>{balance}</Col>\n                <Col xs={2} style={{justifyContent: 'flex-end', fontWeight: '600', fontSize: '15px'}}>{defects}</Col>\n                <Col xs={1} style={{justifyContent: 'flex-end', paddingRight: '0'}}>\n                    <IconButton\n                        onTouchTap={() => { statRemainderDialog.handleOpenStatRemainderDialog(id) }}>\n                        <List color=\"#12aaeb\"/>\n                    </IconButton>\n                </Col>\n            </Row>\n        )\n    })\n\n    const page = (\n        <div className={classes.mainWrapper}>\n            <Row style={{margin: '0', height: '100%'}}>\n                <div className={classes.leftPanel}>\n                    <StatSideMenu currentUrl={ROUTES.STATISTICS_REMAINDER_URL}/>\n                </div>\n                <div className={classes.rightPanel}>\n                    {listLoading\n                    ? <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4} />\n                    </div>\n                    : <div className={classes.wrapper}>\n                        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n                            <div className={classes.filter}>\n                                <Field\n                                    className={classes.inputFieldCustom}\n                                    name=\"stock\"\n                                    component={StockSearchField}\n                                    label=\"Склад\"\n                                    fullWidth={true}/>\n                                <Field\n                                    className={classes.inputFieldCustom}\n                                    name=\"type\"\n                                    component={ProductTypeSearchField}\n                                    label=\"Тип товаров\"\n                                    fullWidth={true}/>\n                                <Field\n                                    className={classes.inputFieldCustom}\n                                    name=\"product\"\n                                    component={ProductSearchField}\n                                    label=\"Товары\"\n                                    fullWidth={true}/>\n                                <IconButton\n                                    className={classes.searchButton}\n                                    iconStyle={iconStyle.icon}\n                                    style={iconStyle.button}\n                                    type=\"submit\">\n                                    <Search/>\n                                </IconButton>\n                            </div>\n                            <a className={classes.excel}\n                               onClick = {getDocument.handleGetDocument}>\n                                <Excel color=\"#fff\"/> <span>Excel</span>\n                            </a>\n                        </form>\n                        <Pagination filter={filter}/>\n                        <div className={classes.tableWrapper}>\n                            {headers}\n                            {list}\n                        </div>\n                    </div>}\n                </div>\n            </Row>\n        </div>\n    )\n\n    return (\n        <Container>\n            {page}\n            <StatRemainderDialog\n                loading={_.get(detailData.detailLoading)}\n                detailData={detailData}\n                open={statRemainderDialog.openStatRemainderDialog}\n                onClose={statRemainderDialog.handleCloseStatRemainderDialog}\n                filterItem={filterItem}/>\n        </Container>\n    )\n})\n\nStatRemainderGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    statRemainderDialog: PropTypes.shape({\n        openStatRemainderDialog: PropTypes.bool.isRequired,\n        handleOpenStatRemainderDialog: PropTypes.func.isRequired,\n        handleCloseStatRemainderDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default StatRemainderGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Statistics/StatRemainderGridLIst.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport OrderDetails from '../Order/OrderDetails'\nimport CircularProgress from 'material-ui/CircularProgress'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            width: '100%',\n            height: '400px',\n            background: '#fff',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        dialog: {\n            overflowY: 'auto !important',\n            '& > div:first-child > div:first-child': {\n                transform: 'translate(0px, 0px) !important'\n            }\n        },\n        popUp: {\n            color: '#333 !important',\n            overflowY: 'hidden !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            overflowX: 'hidden',\n            maxHeight: 'none !important'\n        },\n        content: {\n            width: '100%',\n            display: 'block',\n            '& > div': {\n                width: 'auto',\n                border: 'none',\n                padding: '0',\n                overflowY: 'auto',\n                maxHeight: '573px',\n                '& > div > div:last-child > div > div:last-child': {\n                    padding: '0'\n                }\n            }\n        },\n        titleSummary: {\n            padding: '20px 30px',\n            display: 'flex',\n            justifyContent: 'space-between'\n        },\n        downBlock: {\n            padding: '20px 30px',\n            '& .row': {\n                lineHeight: '35px',\n                padding: '0 10px',\n                display: 'flex',\n                justifyContent: 'space-between',\n                '& > div:last-child': {\n                    textAlign: 'right',\n                    fontWeight: '600'\n                }\n            },\n            '& .row:last-child': {\n                fontWeight: '600',\n                borderTop: '1px #efefef solid'\n            }\n        },\n        subTitle: {\n            paddingBottom: '8px',\n            fontStyle: 'italic',\n            fontWeight: '400'\n        },\n        titleContent: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '0 30px',\n            height: '59px',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                position: 'absolute !important'\n            },\n            '& div': {\n                display: 'flex',\n                alignItems: 'center'\n            },\n            '& .personImage': {\n                borderRadius: '50%',\n                overflow: 'hidden',\n                flexBasis: '35px',\n                height: '35px',\n                minWidth: '30px',\n                width: '35px',\n                marginRight: '10px',\n                '& img': {\n                    display: 'flex',\n                    height: '100%',\n                    width: '100%'\n                }\n            }\n        },\n        tableWrapper: {\n            padding: '0 30px',\n            maxHeight: '424px',\n            overflowY: 'auto',\n            '& .row': {\n                '&:first-child': {\n                    fontWeight: '600'\n                }\n            },\n            '& .dottedList': {\n                padding: '15px 0',\n                '& > div:last-child': {\n                    textAlign: 'right'\n                },\n                '&:last-child:after': {\n                    display: 'none'\n                }\n            }\n        }\n    }),\n)\n\nconst StatSaleDialog = enhance((props) => {\n    const {\n        open,\n        onClose,\n        classes,\n        detailData\n    } = props\n    const detailLoading = _.get(detailData, 'detailLoading')\n    const id = _.get(detailData, 'id')\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={detailLoading ? {width: '400px'} : {width: '1000px', maxWidth: 'none'}}\n            bodyStyle={{minHeight: 'auto'}}\n            bodyClassName={classes.popUp}>\n            {detailLoading ? <div className={classes.loader}>\n                <CircularProgress/>\n            </div>\n                : <div>\n                    <div className={classes.titleContent}>\n                        <div>\n                            <div>Заказ №{id}</div>\n                        </div>\n                        <IconButton onTouchTap={onClose}>\n                            <CloseIcon2 color=\"#666666\"/>\n                        </IconButton>\n                    </div>\n                    <div className={classes.content}>\n                        <OrderDetails\n                            data={_.get(detailData, 'data')}\n                            loading={detailLoading}/>\n                    </div>\n                </div>}\n        </Dialog>\n    )\n})\n\nStatSaleDialog.propTyeps = {\n    filter: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    loading: PropTypes.bool,\n    detailData: PropTypes.object\n}\n\nexport default StatSaleDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Statistics/StatSaleDialog.js","import PropTypes from 'prop-types'\nimport React from 'react'\nimport _ from 'lodash'\nimport {Row, Col} from 'react-flexbox-grid'\nimport * as ROUTES from '../../constants/routes'\nimport Container from '../Container'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport {reduxForm, Field} from 'redux-form'\nimport ReactHighcharts from 'react-highcharts'\nimport DateToDateField from '../ReduxForm/Basic/DateToDateField'\nimport StatSideMenu from './StatSideMenu'\nimport Search from 'material-ui/svg-icons/action/search'\nimport IconButton from 'material-ui/IconButton'\nimport Excel from 'material-ui/svg-icons/av/equalizer'\nimport Pagination from '../GridList/GridListNavPagination'\nimport List from 'material-ui/svg-icons/action/list'\nimport numberFormat from '../../helpers/numberFormat'\nimport StatSaleDialog from './StatSaleDialog'\nimport moment from 'moment'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport dateFormat from '../../helpers/dateFormat'\nimport getConfig from '../../helpers/getConfig'\n\nexport const STAT_SALES_FILTER_KEY = {\n    FROM_DATE: 'fromDate',\n    TO_DATE: 'toDate'\n}\n\nconst enhance = compose(\n    injectSheet({\n        mainWrapper: {\n            background: '#fff',\n            margin: '0 -28px',\n            height: 'calc(100% + 28px)',\n            boxShadow: 'rgba(0, 0, 0, 0.09) 0px -1px 6px, rgba(0, 0, 0, 0.10) 0px -1px 4px'\n        },\n        wrapper: {\n            height: 'calc(100% - 40px)',\n            padding: '20px 30px',\n            '& .row': {\n                marginLeft: '0',\n                marginRight: '0'\n            }\n        },\n        loader: {\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            justifyContent: 'center',\n            alignItems: 'center',\n            zIndex: '999',\n            display: 'flex'\n        },\n        pagination: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            borderTop: '1px #efefef solid',\n            borderBottom: '1px #efefef solid'\n        },\n        tableWrapper: {\n\n            '& .row': {\n                '&:after': {\n                    bottom: '-1px'\n                },\n                '& > div': {\n                    display: 'flex',\n                    height: '50px',\n                    alignItems: 'center',\n                    '&:last-child': {\n                        justifyContent: 'flex-end'\n                    }\n                }\n            },\n            '& .dottedList': {\n                padding: '0',\n                '&:last-child:after': {\n                    content: '\"\"',\n                    backgroundImage: 'none'\n                }\n            },\n            '& .personImage': {\n                borderRadius: '50%',\n                overflow: 'hidden',\n                height: '30px',\n                minWidth: '30px',\n                width: '30px',\n                marginRight: '10px',\n                '& img': {\n                    display: 'flex',\n                    height: '100%',\n                    width: '100%'\n                }\n            }\n        },\n        balanceInfo: {\n            padding: '15px 0'\n        },\n        balance: {\n            paddingRight: '10px',\n            fontSize: '24px!important',\n            fontWeight: '600'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        balanceButtonWrap: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n        },\n        form: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n        },\n        filter: {\n            display: 'flex',\n            alignItems: 'center',\n            '& > div': {\n                width: '170px!important',\n                position: 'relative',\n                marginRight: '40px',\n                '&:last-child': {\n                    margin: '0'\n                },\n                '&:after': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    right: '-20px',\n                    height: '30px',\n                    width: '1px',\n                    top: '50%',\n                    marginTop: '-15px',\n                    background: '#efefef'\n                },\n                '&:last-child:after': {\n                    display: 'none'\n                }\n            }\n        },\n        leftPanel: {\n            backgroundColor: '#f2f5f8',\n            flexBasis: '250px',\n            maxWidth: '250px'\n\n        },\n        rightPanel: {\n            flexBasis: 'calc(100% - 250px)',\n            maxWidth: 'calc(100% - 250px)',\n            overflowY: 'auto',\n            overflowX: 'hidden'\n        },\n        searchButton: {\n            marginLeft: '-10px !important',\n            '& div': {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center'\n            }\n        },\n        excel: {\n            background: '#71ce87',\n            borderRadius: '2px',\n            color: '#fff',\n            fontWeight: '600',\n            display: 'flex',\n            alignItems: 'center',\n            padding: '5px 15px',\n            '& svg': {\n                width: '18px !important'\n            }\n        },\n        diagram: {\n            marginTop: '30px'\n        },\n        salesSummary: {\n            '& > div:first-child': {\n                color: '#666'\n            },\n            '& > div:last-child': {\n                fontSize: '24px',\n                fontWeight: '600'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'StatSalesFilterForm',\n        enableReinitialize: true\n    }),\n)\n\nconst StatSalesGridList = enhance((props) => {\n    const {\n        classes,\n        type,\n        filter,\n        graphData,\n        onSubmit,\n        listData,\n        statSaleDialog,\n        handleSubmit,\n        detailData\n    } = props\n\n    const loading = _.get(listData, 'listLoading')\n    let sum = 0\n    const value = _.map(_.get(graphData, 'data'), (item) => {\n        sum += _.toInteger(_.get(item, 'amount'))\n        return _.toInteger(_.get(item, 'amount'))\n    })\n\n    const valueName = _.map(_.get(graphData, 'data'), (item) => {\n        return dateFormat(_.get(item, 'date'))\n    })\n\n    const config = {\n        chart: {\n            type: 'areaspline',\n            height: 100\n        },\n        title: {\n            text: '',\n            style: {\n                display: 'none'\n            }\n        },\n        legend: {\n            enabled: false\n        },\n        credits: {\n            enabled: false\n        },\n        yAxis: {\n            title: {\n                text: '',\n                style: {\n                    display: 'none'\n                }\n            },\n            gridLineColor: '#fff',\n            plotLines: [{\n                value: 0,\n                width: 1,\n                color: 'transparent'\n            }],\n            labels: {\n                enabled: false\n            },\n            lineWidth: 0,\n            minorGridLineWidth: 0,\n            lineColor: 'transparent',\n            minorTickLength: 0,\n            tickLength: 0\n        },\n        xAxis: {\n            categories: valueName,\n            lineWidth: 0,\n            minorGridLineWidth: 0,\n            lineColor: 'transparent',\n            minorTickLength: 0,\n            tickLength: 0,\n            labels: {\n                enabled: false\n            }\n        },\n        plotOptions: {\n            series: {\n                lineWidth: 0,\n                pointPlacement: 'on'\n            },\n            areaspline: {\n                fillOpacity: 0.7\n            }\n        },\n        tooltip: {\n            shared: true,\n            valueSuffix: ' ' + getConfig('PRIMARY_CURRENCY'),\n            backgroundColor: '#363636',\n            style: {\n                color: '#fff'\n            },\n            borderRadius: 2,\n            borderWidth: 0,\n            enabled: true,\n            shadow: false,\n            useHTML: true,\n            crosshairs: false,\n            pointFormat: '{series.name}: <b>{point.y}</b>'\n        },\n        series: [{\n            marker: {\n                enabled: false,\n                symbol: 'circle'\n            },\n            name: 'Сумма',\n            data: value,\n            color: '#6cc6de'\n\n        }]\n    }\n\n    const headerStyle = {\n        backgroundColor: '#fff',\n        fontWeight: '600',\n        color: '#666'\n    }\n\n    const iconStyle = {\n        icon: {\n            color: '#5d6474',\n            width: 22,\n            height: 22\n        },\n        button: {\n            width: 40,\n            height: 40,\n            padding: 0\n        }\n    }\n\n    const headers = (\n        <Row style={headerStyle} className=\"dottedList\">\n            <Col xs={2}>№ Сделки</Col>\n            <Col xs={2}>Дата</Col>\n            <Col xs={3}>Магазин</Col>\n            <Col xs={2}>Агент</Col>\n            <Col xs={2} style={{justifyContent: 'flex-end'}}>Сумма</Col>\n            <Col xs={1} style={{display: 'none'}}>|</Col>\n        </Row>\n    )\n    const list = (\n\n        _.map(_.get(listData, 'data'), (item) => {\n            const marketName = _.get(item, ['market', 'name'])\n            const id = _.get(item, 'id')\n            const createdDate = moment(_.get(item, 'createdDate')).locale('ru').format('DD MMM YYYY HH:MM')\n            const firstName = _.get(item, ['user', 'firstName'])\n            const secondName = _.get(item, ['user', 'secondName '])\n            const totalPrice = _.get(item, 'totalPrice')\n\n            return (\n                <Row key={id} className=\"dottedList\">\n                    <Col xs={2}>{id}</Col>\n                    <Col xs={2}>{createdDate}</Col>\n                    <Col xs={3}>{marketName}</Col>\n                    <Col xs={2}>\n                        <div>{firstName} {secondName}</div>\n                    </Col>\n                    <Col xs={2} style={{justifyContent: 'flex-end'}}>{numberFormat(totalPrice)} UZS</Col>\n                    <Col xs={1}>\n                        <IconButton\n                            onTouchTap={ () => { statSaleDialog.handleOpenStatSaleDialog(id) }}>\n\n                            <List color=\"#12aaeb\"/>\n                        </IconButton>\n                    </Col>\n                </Row>\n            )\n        })\n\n    )\n\n    const page = (\n            <div className={classes.mainWrapper}>\n                <Row style={{margin: '0', height: '100%'}}>\n                    <div className={classes.leftPanel}>\n                        <StatSideMenu currentUrl={ROUTES.STATISTICS_SALES_URL}/>\n                    </div>\n                    <div className={classes.rightPanel}>\n                        {loading\n                        ? <div className={classes.loader}>\n                            <CircularProgress size={70} thickness={4} />\n                        </div>\n                        : <div className={classes.wrapper}>\n                            <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n                                <div className={classes.filter}>\n                                    <Field\n                                        className={classes.inputFieldCustom}\n                                        name=\"date\"\n                                        component={DateToDateField}\n                                        label=\"Диапазон дат\"\n                                        fullWidth={true}/>\n                                    <IconButton\n                                        className={classes.searchButton}\n                                        iconStyle={iconStyle.icon}\n                                        style={iconStyle.button}\n                                        type=\"submit\">\n                                        <Search/>\n                                    </IconButton>\n                                </div>\n                                <a className={classes.excel}>\n                                    <Excel color=\"#fff\"/> <span>Excel</span>\n                                </a>\n                            </form>\n                            <Row className={classes.diagram}>\n                                <Col xs={3} className={classes.salesSummary}>\n                                    <div>Сумма продаж за период</div>\n                                    <div>{numberFormat(sum, getConfig('PRIMARY_CURRENCY'))}</div>\n                                </Col>\n                                <Col xs={9}>\n                                    {_.get(graphData, 'graphLoading') && <div className={classes.loader}>\n                                        <CircularProgress size={50} thickness={4} />\n                                    </div>}\n\n                                    {!_.get(graphData, 'graphLoading') &&\n                                    <ReactHighcharts config={config} neverReflow={true} isPureConfig={true}/>}\n                                </Col>\n                            </Row>\n                            <div className={classes.pagination}>\n                                <div><b>История продаж</b></div>\n                                <Pagination filter={filter}/>\n                            </div>\n                            <div className={classes.tableWrapper}>\n                                {headers}\n                                {list}\n                            </div>\n                        </div>}\n                    </div>\n                </Row>\n            </div>\n    )\n\n    return (\n        <Container>\n            {page}\n            <StatSaleDialog\n                loading={_.get(detailData.detailLoading)}\n                detailData={detailData}\n                open={statSaleDialog.openStatSaleDialog}\n                onClose={statSaleDialog.handleCloseStatSaleDialog}\n                filter={filter}\n                type={type}/>\n        </Container>\n    )\n})\n\nStatSalesGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    statSaleDialog: PropTypes.shape({\n        openStatSaleDialog: PropTypes.bool.isRequired,\n        handleOpenStatSaleDialog: PropTypes.func.isRequired,\n        handleCloseStatSaleDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default StatSalesGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Statistics/StatSalesGridList.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {TextField, UsersSearchField, StockTypeSearchField} from '../ReduxForm'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport MainStyles from '../Styles/MainStyles'\n\nexport const STOCK_CREATE_DIALOG_OPEN = 'openCreateDialog'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\n\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n\n        body: {\n            minHeight: 'auto'\n        },\n        form: {\n            minHeight: 'auto'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        }\n    })),\n    reduxForm({\n        form: 'StockCreateForm',\n        enableReinitialize: true\n    })\n)\n\nconst StockCreateDialog = enhance((props) => {\n    const {open, loading, handleSubmit, onClose, classes, isUpdate} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\n            bodyStyle={{minHeight: 'auto'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>{isUpdate ? 'Изменить склад' : 'Добавить склад'}</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} className={classes.form}>\n                    <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4}/>\n                    </div>\n                    <div className={classes.inContent} style={{minHeight: '200px'}}>\n                        <div className={classes.field} style={{paddingTop: '15px'}}>\n                            <Field\n                                name=\"name\"\n                                component={TextField}\n                                className={classes.inputFieldCustom}\n                                label=\"Наименование\"\n                                fullWidth={true}\n                            />\n                            <Field\n                                name=\"manager\"\n                                component={UsersSearchField}\n                                className={classes.inputFieldCustom}\n                                label=\"Завсклад\"\n                                fullWidth={true}\n                            />\n                            <Field\n                                name=\"stockType\"\n                                component={StockTypeSearchField}\n                                className={classes.inputFieldCustom}\n                                label=\"Тип склада\"\n                                fullWidth={true}\n                            />\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\n\nStockCreateDialog.propTypes = {\n    isUpdate: PropTypes.bool,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\n\nStockCreateDialog.defaultProps = {\n    isUpdate: false\n}\n\nexport default StockCreateDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Stock/StockCreateDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose, withHandlers} from 'recompose'\nimport {reduxForm, Field} from 'redux-form'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {Link} from 'react-router'\nimport Paper from 'material-ui/Paper'\nimport IconButton from 'material-ui/IconButton'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\n\nimport {\n    ProductSearchField,\n    BrandSearchField,\n    DateToDateField,\n    ProductTypeSearchField,\n    StockStatusSearchField,\n    StockSearchField\n} from '../ReduxForm'\n\nimport CloseIcon from '../CloseIcon'\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\n\nexport const HISTORY_FILTER_KEY = {\n    PRODUCT: 'product',\n    TYPE: 'type',\n    PRODUCT_TYPE: 'productType',\n    BRAND: 'brand',\n    FROM_DATE: 'fromDate',\n    TO_DATE: 'toDate',\n    STOCK: 'stock'\n\n}\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            position: 'absolute',\n            minWidth: '300px',\n            background: '#fff',\n            zIndex: 99,\n            top: 0,\n            left: 0,\n            borderRadius: 0,\n            padding: '10px 20px 10px 20px'\n        },\n        afterFilter: {\n            alignItems: 'center',\n            display: 'flex',\n            backgroundColor: '#efefef',\n            position: 'relative',\n            padding: '16px 30px',\n            marginLeft: '-30px',\n            '& > div:nth-child(2)': {\n                position: 'absolute',\n                right: '0'\n            },\n            '& > div:nth-child(1)': {\n                color: '#666666'\n            },\n            '& button': {\n                borderLeft: '1px solid white !important'\n            }\n        },\n        icon: {\n            color: '#8f8f8f !important'\n        },\n        arrow: {\n            color: '#12aaeb',\n            paddingRight: '14px',\n            position: 'relative',\n            '& svg': {\n                position: 'absolute',\n                width: '13px !important',\n                height: '20px !important'\n            }\n        },\n        header: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            '& button': {\n                marginRight: '-12px !important'\n            }\n        },\n        title: {\n            fontSize: '15px',\n            color: '#5d6474'\n        },\n        submit: {\n            color: '#fff !important'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'HistoryFilterForm',\n        enableReinitialize: true\n    }),\n    withHandlers({\n        getCount: props => () => {\n            const {filter} = props\n            return _(HISTORY_FILTER_KEY)\n                .values()\n                .filter(item => item !== HISTORY_FILTER_KEY.FROM_DATE)\n                .filter(item => filter.getParam(item))\n                .value()\n                .length\n        }\n    })\n)\n\nconst HistoryFilterForm = enhance((props) => {\n    const {classes, filterDialog, getCount, handleSubmit} = props\n    const filterCounts = getCount()\n\n    if (!filterDialog.openFilterDialog) {\n        if (filterCounts) {\n            return (\n                <div className={classes.afterFilter}>\n                    <div>Фильтр: {filterCounts} элемента</div>\n                    <div>\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\n                            <BorderColorIcon color=\"#8f8f8f\" />\n                        </IconButton>\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\n                            <CloseIcon className={classes.icon}/>\n                        </IconButton>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <Link\n                    className={classes.arrow}\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\n                </Link>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <Paper className={classes.wrapper} zDepth={2}>\n                <div className={classes.header}>\n                    <span className={classes.title}>Фильтр</span>\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\n                        <CloseIcon className={classes.icon} />\n                    </IconButton>\n                </div>\n                <form onSubmit={handleSubmit(filterDialog.handleSubmitFilterDialog)}>\n                    <div>\n                        <Field\n                            className={classes.inputFieldCustom}\n                            name=\"brand\"\n                            component={BrandSearchField}\n                            label=\"Бренд\"\n                            fullWidth={true}/>\n                    </div>\n                    <div>\n                        <Field\n                            className={classes.inputFieldCustom}\n                            name=\"productType\"\n                            component={ProductTypeSearchField}\n                            label=\"Тип товара\"\n                            fullWidth={true}/>\n                    </div>\n                    <div>\n                        <Field\n                            className={classes.inputFieldCustom}\n                            name=\"product\"\n                            component={ProductSearchField}\n                            label=\"Товар\"\n                            fullWidth={true}/>\n                    </div>\n                    <div>\n                        <Field\n                            className={classes.inputFieldCustom}\n                            name=\"stock\"\n                            component={StockSearchField}\n                            label=\"Склад\"\n                            fullWidth={true}/>\n                    </div>\n                    <div>\n                        <Field\n                            className={classes.inputFieldCustom}\n                            name=\"type\"\n                            component={StockStatusSearchField}\n                            label=\"Статус\"\n                            fullWidth={true}/>\n                    </div>\n                    <div>\n                        <Field\n                            className={classes.inputFieldCustom}\n                            name=\"date\"\n                            component={DateToDateField}\n                            label=\"Период\"\n                            fullWidth={true}/>\n                    </div>\n                    <RaisedButton\n                        type=\"submit\"\n                        primary={true}\n                        buttonStyle={{color: '#fff'}}\n                        label=\"Применить\"\n                        style={{marginTop: '15px'}}>\n                    </RaisedButton>\n                </form>\n            </Paper>\n        </div>\n    )\n})\n\nHistoryFilterForm.propTypes = {\n    filter: PropTypes.object.isRequired,\n    filterDialog: PropTypes.shape({\n        filterLoading: PropTypes.bool.isRequired,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    })\n}\n\nexport default HistoryFilterForm\n\n\n\n// WEBPACK FOOTER //\n// src/components/StockReceive/StockHistoryFilterForm.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose, withReducer} from 'recompose'\nimport injectSheet from 'react-jss'\nimport {Field, Fields, reduxForm, SubmissionError} from 'redux-form'\nimport Dialog from 'material-ui/Dialog'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport IconButton from 'material-ui/IconButton'\nimport FlatButton from 'material-ui/FlatButton'\nimport CloseIcon2 from '../CloseIcon2'\nimport {\n    CurrencySearchField,\n    ProviderSearchField,\n    ProviderContactsField,\n    StockSearchField,\n    SupplyListProductField,\n    TextField,\n    DateField\n} from '../ReduxForm'\nimport toCamelCase from '../../helpers/toCamelCase'\n\nexport const SUPPLY_CREATE_DIALOG_OPEN = 'openCreateDialog'\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    throw new SubmissionError({\n        ...errors,\n        _error: nonFieldErrors\n    })\n}\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            justifyContent: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        podlojkaScroll: {\n            overflowY: 'auto !important',\n            padding: '0 !important',\n            '& > div:first-child > div:first-child': {\n                transform: 'translate(0px, 0px) !important'\n            },\n            '& > div': {\n                height: '100% !important',\n                '& > div': {\n                    height: '100% !important',\n                    padding: '50px 0',\n                    '& > div': {\n                        height: '100%'\n                    }\n                }\n            }\n        },\n        popUp: {\n            background: '#fff',\n            overflowY: 'hidden !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            overflowX: 'hidden',\n            height: '100%',\n            minHeight: '700px',\n            maxHeight: 'inherit !important'\n        },\n        titleContent: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '20px 30px',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                padding: '0 !important',\n                position: 'absolute !important'\n            }\n        },\n        inContent: {\n            display: 'flex',\n            color: '#333',\n            height: '100%',\n            padding: '0 30px'\n        },\n        innerWrap: {\n            height: 'calc(100% - 57px)'\n        },\n        bodyContent: {\n            color: '#333',\n            width: '100%',\n            height: 'calc(100% - 59px)'\n        },\n        form: {\n            position: 'relative',\n            display: 'flex',\n            flexDirection: 'column',\n            height: '100%',\n            justifyContent: 'space-between'\n        },\n        field: {\n            width: '100%'\n        },\n        subTitleOrder: {\n            display: 'flex',\n            alignItems: 'center',\n            marginBottom: '5px !important',\n            justifyContent: 'space-between',\n            fontWeight: '600',\n            padding: '0 !important',\n            '& span': {\n                fontWeight: '600 !important'\n            }\n        },\n        radioButton: {\n            marginTop: '10px',\n            '&>div': {\n                marginBottom: '10px'\n            }\n        },\n        condition: {\n            marginTop: '20px',\n            '&>div:first-child': {\n                marginBottom: '-20px'\n            }\n        },\n        commentFieldSupply: {\n            textAlign: 'left',\n            width: '100%'\n        },\n        bottomButton: {\n            bottom: '0',\n            left: '0',\n            right: '0',\n            padding: '10px',\n            zIndex: '999',\n            borderTop: '1px solid #efefef',\n            background: '#fff',\n            textAlign: 'right',\n            '& span': {\n                fontSize: '13px !important',\n                fontWeight: '600 !important',\n                color: '#129fdd',\n                verticalAlign: 'inherit !important'\n            }\n        },\n        actionButton: {\n            fontSize: '13px !important',\n            margin: '0 !important'\n        },\n        leftOrderPart: {\n            flexBasis: '35%',\n            padding: '20px 30px 20px 0',\n            borderRight: '1px #efefef solid'\n        },\n        rightOrderPart: {\n            flexBasis: '65%',\n            maxWidth: '65%',\n            padding: '20px 1px 20px 30px',\n            maxHeight: '694px',\n            overflow: 'auto'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        inputDateCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            },\n            '& div:first-child': {\n                height: '45px !important'\n            }\n        },\n        inputFieldDis: {\n            fontSize: '13px !important',\n            paddingTop: '24px',\n            '& div': {\n                color: 'rgb(229, 115, 115) !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'SupplyCreateForm',\n        enableReinitialize: true\n    }),\n    withReducer('state', 'dispatch', (state, action) => {\n        return {...state, ...action}\n    }, {open: false}),\n)\n\nconst customContentStyle = {\n    width: '1000px',\n    maxWidth: 'none'\n}\nconst SupplyCreateDialog = enhance((props) => {\n    const {open, handleSubmit, onClose, classes, isUpdate} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n    return (\n        <Dialog\n            modal={true}\n            className={classes.podlojkaScroll}\n            contentStyle={customContentStyle}\n            open={open}\n            onRequestClose={onClose}\n            bodyClassName={classes.popUp}\n            autoScrollBodyContent={true}>\n            <div className={classes.titleContent}>\n                <span>{isUpdate ? 'Изменение поставки' : 'Добавление поставки'}</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} scrolling=\"auto\" className={classes.form}>\n                    <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4}/>\n                    </div>\n                    <div className={classes.innerWrap}>\n                        <div className={classes.inContent} style={{minHeight: '350px'}}>\n                            <div className={classes.leftOrderPart}>\n                                <div className={classes.subTitleOrder}>Выбор поставщика</div>\n                                <div className={classes.selectContent}>\n                                    <Field\n                                        name=\"provider\"\n                                        component={ProviderSearchField}\n                                        className={classes.inputFieldCustom}\n                                        label=\"Поставщик\"\n                                        fullWidth={true}/>\n                                    <Field\n                                        name=\"contact\"\n                                        component={ProviderContactsField}\n                                    />\n                                </div>\n                                <div className={classes.condition}>\n                                    <div className={classes.subTitleOrder}>Условия доставки</div>\n                                    <Field\n                                        name=\"date_delivery\"\n                                        component={DateField}\n                                        className={classes.inputDateCustom}\n                                        floatingLabelText=\"Дата поставки\"\n                                        container=\"inline\"\n                                        fullWidth={true}/>\n                                    <Field\n                                        name=\"stock\"\n                                        component={StockSearchField}\n                                        className={classes.inputFieldCustom}\n                                        label=\"Склад назначения\"\n                                        fullWidth={true}/>\n                                    <Field\n                                        name=\"currency\"\n                                        component={CurrencySearchField}\n                                        className={classes.inputFieldCustom}\n                                        label=\"Валюта оплаты\"\n                                        fullWidth={true}/>\n                                </div>\n                                <div className={classes.commentFieldSupply}>\n                                    <div>\n                                        <div className={classes.subTitleOrder} style={{marginTop: '15px'}}>Комментарии по заказу</div>\n                                        <Field\n                                            style={{marginTop: '-20px', lineHeight: '20px', fontSize: '13px'}}\n                                            name=\"comment\"\n                                            component={TextField}\n                                            label=\"Оставить комментарий...\"\n\n                                            multiLine={true}\n                                            rows={4}\n                                            rowsMax={6}\n                                            fullWidth={true}/>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className={classes.rightOrderPart}>\n                                <Fields\n                                    names={['products', 'product', 'amount', 'cost']}\n                                    component={SupplyListProductField}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Оформить заказ\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\nSupplyCreateDialog.propTyeps = {\n    isUpdate: PropTypes.bool,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\nSupplyCreateDialog.defaultProps = {\n    isUpdate: false\n}\nexport default SupplyCreateDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Supply/SupplyCreateDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport IconButton from 'material-ui/IconButton'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport CloseIcon2 from '../CloseIcon2'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {TextField, CurrencySearchField, CheckBox} from '../ReduxForm'\nimport MainStyles from '../Styles/MainStyles'\nimport ProductSearchField from '../ReduxForm/Product/ProductSearchField'\nimport {connect} from 'react-redux'\n\nexport const SUPPLY_EXPENSE_CREATE_DIALOG_OPEN = 'openSupplyExpenseCreateDialog'\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    throw new SubmissionError({\n        ...errors,\n        _error: nonFieldErrors\n    })\n}\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        inputHalfWrap: {\n            flexBasis: '49%',\n            width: '49%'\n        }\n    })),\n    reduxForm({\n        form: 'SupplyExpenseCreateForm',\n        enableReinitialize: true\n    }),\n    connect((state) => {\n        const isChecked = _.get(state, ['form', 'SupplyExpenseCreateForm', 'values', 'linkToProduct'])\n        return {\n            isChecked\n        }\n    }),\n)\n\nconst ExpenseCreateDialog = enhance((props) => {\n    const {open, handleSubmit, onClose, classes, loading, isChecked} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>Добавление расхода</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} className={classes.form}>\n                    <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4}/>\n                    </div>\n                    <div className={classes.inContent} style={{minHeight: 'auto', paddingBottom: '20px', paddingTop: '20px'}}>\n                        <div className={classes.field}>\n                            <Field\n                                name=\"comment\"\n                                component={TextField}\n                                className={classes.inputFieldCustom}\n                                label=\"Описание раскода\"\n                                fullWidth={true}/>\n                            <div className={classes.flex} style={{justifyContent: 'space-between'}}>\n                                <div className={classes.inputHalfWrap}>\n                                    <Field\n                                        name=\"amount\"\n                                        component={TextField}\n                                        className={classes.inputFieldCustom}\n                                        label=\"Сумма\"\n                                        fullWidth={true}/>\n                                </div>\n                                <div className={classes.inputHalfWrap}>\n                                    <Field\n                                        name=\"currency\"\n                                        component={CurrencySearchField}\n                                        className={classes.inputFieldCustom}\n                                        label=\"Валюта\"\n                                        fullWidth={true}/>\n                                </div>\n                            </div>\n                            <Field\n                                name=\"linkToProduct\"\n                                style={{margin: '20px 0 10px'}}\n                                component={CheckBox}\n                                label=\"Привязать к товару\"\n                            />\n                            {isChecked && <Field\n                                name=\"product\"\n                                label=\"Наименование товара\"\n                                component={ProductSearchField}\n                                className={classes.inputFieldCustom}\n                                fullWidth={true}\n                            />}\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Применить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\nExpenseCreateDialog.propTyeps = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\nexport default ExpenseCreateDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Supply/SupplyExpenseCreateDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose, withHandlers} from 'recompose'\nimport {reduxForm, Field} from 'redux-form'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {Link} from 'react-router'\nimport Paper from 'material-ui/Paper'\nimport IconButton from 'material-ui/IconButton'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\nimport {ProviderSearchField, StockSearchField} from '../ReduxForm'\nimport CloseIcon from '../CloseIcon'\nimport DateToDateField from '../ReduxForm/Basic/DateToDateField'\n\nexport const SUPPLY_FILTER_OPEN = 'openFilterDialog'\n\nexport const SUPPLY_FILTER_KEY = {\n    PROVIDER: 'provider',\n    STOCK: 'stock',\n    DELIVERY_FROM_DATE: 'deliveryFromDate',\n    DELIVERY_TO_DATE: 'deliveryToDate',\n    CREATED_FROM_DATE: 'createdFromDate',\n    CREATED_TO_DATE: 'createdToDate'\n}\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            position: 'absolute',\n            minWidth: '300px',\n            background: '#fff',\n            zIndex: 99,\n            top: 0,\n            left: 0,\n            borderRadius: 0,\n            padding: '10px 20px 10px 20px'\n        },\n        afterFilter: {\n            alignItems: 'center',\n            display: 'flex',\n            backgroundColor: '#efefef',\n            position: 'relative',\n            padding: '16px 30px',\n            marginLeft: '-30px',\n            '& > div:nth-child(2)': {\n                position: 'absolute',\n                right: '0'\n            },\n            '& > div:nth-child(1)': {\n                color: '#666666'\n            },\n            '& button': {\n                borderLeft: '1px solid white !important'\n            }\n        },\n        icon: {\n            color: '#8f8f8f !important'\n        },\n        arrow: {\n            color: '#12aaeb',\n            paddingRight: '14px',\n            position: 'relative',\n            '& svg': {\n                position: 'absolute',\n                width: '13px !important',\n                height: '20px !important'\n            }\n        },\n        header: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            '& button': {\n                marginRight: '-12px !important'\n            }\n        },\n        title: {\n            fontSize: '15px',\n            color: '#5d6474'\n        },\n        submit: {\n            color: '#fff !important'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'SupplyFilterForm',\n        enableReinitialize: true\n    }),\n    withHandlers({\n        getCount: props => () => {\n            const {filter} = props\n            return _(SUPPLY_FILTER_KEY)\n                .values()\n                .filter(item => item !== SUPPLY_FILTER_KEY.FROM_DATE)\n                .filter(item => filter.getParam(item))\n                .value()\n                .length\n        }\n    })\n)\n\nconst SupplyFilterForm = enhance((props) => {\n    const {classes, filterDialog, getCount} = props\n    const filterCounts = getCount()\n\n    if (!filterDialog.openFilterDialog) {\n        if (filterCounts) {\n            return (\n                <div className={classes.afterFilter}>\n                    <div>Фильтр: {filterCounts} элемента</div>\n                    <div>\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\n                            <BorderColorIcon color=\"#8f8f8f\" />\n                        </IconButton>\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\n                            <CloseIcon className={classes.icon}/>\n                        </IconButton>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <Link\n                    className={classes.arrow}\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\n                </Link>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <Paper className={classes.wrapper} zDepth={2}>\n                <div className={classes.header}>\n                    <span className={classes.title}>Фильтр</span>\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\n                        <CloseIcon className={classes.icon} />\n                    </IconButton>\n                </div>\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\n                    <div>\n                        <Field className={classes.inputFieldCustom} name=\"provider\" component={ProviderSearchField} label=\"Поставщик\"/>\n                        <Field className={classes.inputFieldCustom} name=\"stock\" component={StockSearchField} label=\"Склад\"/>\n                    </div>\n                    <div>\n                        <Field className={classes.inputFieldCustom} name=\"dateDelivery\" component={DateToDateField} label=\"Дата поставки\" fullWidth={true}/>\n                    </div>\n                    <div>\n                        <Field className={classes.inputFieldCustom} name=\"dateCreated\" component={DateToDateField} label=\"Дата создания\" fullWidth={true}/>\n                    </div>\n                    <RaisedButton\n                        type=\"submit\"\n                        primary={true}\n                        buttonStyle={{color: '#fff'}}\n                        label=\"Применить\"\n                        style={{marginTop: '15px'}}>\n                    </RaisedButton>\n                </form>\n            </Paper>\n        </div>\n    )\n})\n\nSupplyFilterForm.propTypes = {\n    filter: PropTypes.object.isRequired,\n    filterDialog: PropTypes.shape({\n        filterLoading: PropTypes.bool.isRequired,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    })\n}\n\nexport default SupplyFilterForm\n\n\n\n// WEBPACK FOOTER //\n// src/components/Supply/SupplyFilterForm.js","import _ from 'lodash'\nimport React from 'react'\nimport {Link} from 'react-router'\nimport * as ROUTES from '../../constants/routes'\nimport {reduxForm, Field} from 'redux-form'\nimport Container from '../Container'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport sprintf from 'sprintf'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport moment from 'moment'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport Checkbox from '../ReduxForm/Basic/CheckBox'\nimport Arrow from 'material-ui/svg-icons/navigation/arrow-drop-down'\nimport TrackingMap from './TrackingMap'\nimport Dot from 'material-ui/svg-icons/av/fiber-manual-record'\nimport TrackingDetails from './TrackingDetails'\nimport ShopDetails from './TrackingShopDetails'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            width: '100%',\n            background: '#fff',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n        },\n        red: {\n            color: '#e57373 !important'\n        },\n        green: {\n            color: '#81c784 !important'\n        },\n        trackingWrapper: {\n            background: '#f2f5f8',\n            position: 'relative',\n            overflowX: 'hidden',\n            margin: '0 -28px',\n            minHeight: 'calc(100% - 32px)',\n            boxShadow: 'rgba(0, 0, 0, 0.09) 0px -2px 5px, rgba(0, 0, 0, 0.05) 0px -2px 6px',\n            '& > div:first-child': {\n                position: 'absolute',\n                top: '0',\n                left: '0',\n                right: '0',\n                bottom: '0'\n            }\n        },\n        wrapper: {\n\n        },\n        trackingInfo: {\n            background: '#fff',\n            position: 'absolute',\n            width: '350px',\n            top: '0',\n            bottom: '0',\n            transition: 'all 0.3s ease',\n            zIndex: '2'\n        },\n        toggleButton: {\n            position: 'absolute',\n            left: '-24px',\n            top: '18px',\n            padding: '8px 0',\n            background: '#fff',\n            cursor: 'pointer'\n        },\n        expanded: {\n            display: 'flex',\n            alignItems: 'center',\n            '& svg': {\n                transform: 'rotate(-90deg)',\n                position: 'relative',\n                left: '1px'\n            }\n        },\n        collapsed: {\n            extend: 'expanded',\n            '& svg': {\n                transform: 'rotate(90deg)',\n                position: 'relative',\n                left: '1px'\n            }\n        },\n        trackingInfoTitle: {\n            display: 'flex',\n            alignItems: 'center',\n            padding: '20px 30px',\n            borderBottom: '1px #efefef solid',\n            fontWeight: '600',\n            '& span': {\n                textAlign: 'right',\n                lineHeight: '1'\n            }\n        },\n        online: {\n            color: '#666',\n            display: 'flex',\n            alignItems: 'center',\n            fontSize: '30px',\n            marginLeft: '10px',\n            '& span': {\n                fontSize: 'inherit !important'\n            }\n        },\n        content: {\n            padding: '20px 30px'\n        },\n        inputFieldCustom: {\n            flexBasis: '200px',\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        checkbox: {\n            margin: '15px 0 !important',\n            '& span': {\n                top: '-10px !important',\n                left: '-10px !important'\n            }\n        },\n        filter: {\n            marginBottom: '20px'\n        },\n        title: {\n            fontWeight: '600',\n            marginBottom: '15px'\n        },\n        activeAgents: {\n            margin: '-10px 0 10px'\n        },\n        agent: {\n            display: 'flex',\n            alignItems: 'center',\n            padding: '10px 0',\n            '& a': {\n                color: '#333',\n                marginRight: '5px'\n            },\n            '& i': {\n                fontSize: '10px',\n                color: '#999'\n            },\n            '& svg': {\n                width: '12px !important',\n                height: '12px !important',\n                marginRight: '10px',\n                color: '#666'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'TrackingFilterForm',\n        enableReinitialize: true\n    }),\n)\n\nconst TrackingWrapper = enhance((props) => {\n    const ZERO = 0\n    const {\n        classes,\n        filter,\n        listData,\n        detailData,\n        toggle,\n        handleOpenDetails,\n        agentLocation,\n        marketsLocation,\n        handleSubmit,\n        isOpenTrack,\n        isOpenMarkets,\n        filterForm,\n        shopDetails\n    } = props\n\n    const listLoading = _.get(listData, 'listLoading')\n    const isOpenToggle = toggle.openToggle\n    const agentsCount = _.get(listData, ['data', 'length'])\n    let agentsOnline = 0\n\n    const openDetail = _.get(detailData, 'openDetail')\n    let openShopDetail = false\n    if (_.get(shopDetails, 'openShopDetails') > ZERO) {\n        openShopDetail = true\n    }\n\n    const zoneInfoToggle = (\n        <div className={classes.trackingInfo} style={isOpenToggle ? {right: '0'} : {right: '-350px'}}>\n            <div className={classes.toggleButton}>\n                {isOpenToggle ? <div className={classes.expanded} onClick={toggle.handleCollapseInfo}><Arrow/></div>\n                    : <div className={classes.collapsed} onClick={toggle.handleExpandInfo}><Arrow/></div>}\n            </div>\n            {!listLoading ? <div className={classes.wrapper}>\n                <div className={classes.trackingInfoTitle}>\n                    <span>Агентов <br/> online</span>\n                    <div className={classes.online}>\n                        <div>\n                            {\n                                _.map(_.get(listData, 'data'), (item) => {\n                                    const FIVE_MIN = 350000\n                                    const dateNow = _.toInteger(moment().format('x'))\n                                    const registeredDate = _.toInteger(moment(_.get(item, 'registeredDate')).format('x'))\n                                    let isOnline = false\n                                    if ((dateNow - registeredDate) <= FIVE_MIN) {\n                                        isOnline = true\n                                    }\n                                    if (isOnline) {\n                                        agentsOnline++\n                                    }\n                                })\n                            }\n                            <span className={agentsOnline > ZERO && classes.green}>{agentsOnline}</span>/<span>{agentsCount}</span>\n                        </div>\n                    </div>\n                </div>\n                <div className={classes.content}>\n                    <div className={classes.filter}>\n                        <div className={classes.title}>Фильтры</div>\n                        <form onSubmit={handleSubmit(filterForm.handleSubmitFilterDialog)}>\n                            <Field\n                                name=\"showMarkets\"\n                                className={classes.checkbox}\n                                component={Checkbox}\n                                label=\"Отображать магазины\"/>\n                            <Field\n                                name=\"showZones\"\n                                className={classes.checkbox}\n                                component={Checkbox}\n                                label=\"Отображать зоны\"/>\n                            <RaisedButton\n                                label=\"Применить\"\n                                backgroundColor=\"#12aaeb\"\n                                labelColor=\"#fff\"\n                                type=\"submit\"/>\n                        </form>\n                    </div>\n                    <div className={classes.activeAgents}>\n                        {\n                            _.map(_.get(listData, 'data'), (item) => {\n                                const id = _.get(item, 'id')\n                                const agent = _.get(item, 'agent')\n                                const FIVE_MIN = 350000\n                                const dateNow = _.toInteger(moment().format('x'))\n                                const registeredDate = _.toInteger(moment(_.get(item, 'registeredDate')).format('x'))\n                                const difference = dateNow - registeredDate\n                                let isOnline = false\n                                if (difference <= FIVE_MIN) {\n                                    isOnline = true\n                                }\n                                const lastSeen = moment(registeredDate).fromNow()\n\n                                return (\n                                    <div key={id} className={classes.agent}>\n                                        <Dot style={isOnline ? {color: '#81c784'} : {color: '#666'}}/>\n                                        <Link to={{\n                                            pathname: sprintf(ROUTES.TRACKING_ITEM_PATH, id),\n                                            query: filter.getParams()\n                                        }}>{agent}</Link>\n                                        {!isOnline && <i>({lastSeen})</i>}\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n            : <div className={classes.loader}>\n                    <div>\n                        <CircularProgress size={40} thickness={4}/>\n                    </div>\n                </div>}\n            {openDetail &&\n            <TrackingDetails\n                initialValues={filterForm.initialValues}\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                filterForm={filterForm}\n                agentLocation={agentLocation}\n            />\n            }\n            {openShopDetail &&\n            <ShopDetails\n                shopDetails={shopDetails}\n            />\n            }\n        </div>\n    )\n\n    return (\n        <Container>\n            <SubMenu url={ROUTES.TRACKING_LIST_URL}/>\n            <div className={classes.trackingWrapper}>\n                <TrackingMap\n                    listData={_.get(listData, 'data')}\n                    handleOpenDetails={handleOpenDetails}\n                    agentLocation={agentLocation}\n                    marketsLocation={marketsLocation}\n                    isOpenTrack={isOpenTrack}\n                    isOpenMarkets={isOpenMarkets}\n                    shopDetails={shopDetails}\n                />\n                {zoneInfoToggle}\n            </div>\n        </Container>\n    )\n})\n\nTrackingWrapper.PropTypes = {\n    filter: PropTypes.object,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    agentLocation: PropTypes.object,\n    marketsLocation: PropTypes.object,\n    toggle: PropTypes.shape({\n        openToggle: PropTypes.bool.isRequired,\n        handleExpandInfo: PropTypes.func.isRequired,\n        handleCollapseInfo: PropTypes.func.isRequired\n    }).isRequired,\n    handleOpenDetails: PropTypes.func,\n    filterForm: PropTypes.shape({\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    }).isRequired,\n    isOpenTrack: PropTypes.bool,\n    isOpenMarkets: PropTypes.bool,\n    shopDetails: PropTypes.shape({\n        openShopDetails: PropTypes.number.isRequired,\n        handleOpenShopDetails: PropTypes.func.isRequired,\n        handleCloseShopDetails: PropTypes.func.isRequired\n    })\n}\n\nexport default TrackingWrapper\n\n\n\n// WEBPACK FOOTER //\n// src/components/Tracking/TrackingWrapper.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose, withHandlers} from 'recompose'\nimport {reduxForm, Field} from 'redux-form'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {Link} from 'react-router'\nimport Paper from 'material-ui/Paper'\nimport IconButton from 'material-ui/IconButton'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\nimport DateToDateField from '../ReduxForm/Basic/DateToDateField'\nimport {TransactionTypeSearchField, ExpensiveCategorySearchField} from '../ReduxForm'\nimport CloseIcon from '../CloseIcon'\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\n\nexport const TRANSACTION_FILTER_OPEN = 'openFilterDialog'\n\nexport const TRANSACTION_FILTER_KEY = {\n    TYPE: 'type',\n    CATEGORY_EXPENSE: 'categoryExpense',\n    FROM_DATE: 'fromDate',\n    TO_DATE: 'toDate'\n}\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            position: 'absolute',\n            minWidth: '300px',\n            background: '#fff',\n            zIndex: 99,\n            top: 0,\n            left: 0,\n            borderRadius: 0,\n            padding: '10px 20px 10px 20px'\n        },\n        afterFilter: {\n            alignItems: 'center',\n            display: 'flex',\n            backgroundColor: '#efefef',\n            position: 'relative',\n            padding: '16px 30px',\n            marginLeft: '-30px',\n            '& > div:nth-child(2)': {\n                position: 'absolute',\n                right: '0'\n            },\n            '& > div:nth-child(1)': {\n                color: '#666666'\n            },\n            '& button': {\n                borderLeft: '1px solid white !important'\n            }\n        },\n        icon: {\n            color: '#8f8f8f !important'\n        },\n        arrow: {\n            color: '#12aaeb',\n            paddingRight: '14px',\n            position: 'relative',\n            '& svg': {\n                position: 'absolute',\n                width: '13px !important',\n                height: '20px !important'\n            }\n        },\n        header: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            '& button': {\n                marginRight: '-12px !important'\n            }\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        title: {\n            fontSize: '15px',\n            color: '#5d6474'\n        },\n        submit: {\n            color: '#fff !important'\n        }\n    }),\n    reduxForm({\n        form: 'TransactionFilterForm',\n        enableReinitialize: true\n    }),\n    withHandlers({\n        getCount: props => () => {\n            const {filter} = props\n            return _(TRANSACTION_FILTER_KEY)\n                .values()\n                .filter(item => item !== TRANSACTION_FILTER_KEY.FROM_DATE)\n                .filter(item => filter.getParam(item))\n                .value()\n                .length\n        }\n    })\n)\n\nconst TransactionFilterForm = enhance((props) => {\n    const {classes, filterDialog, getCount} = props\n    const filterCounts = getCount()\n\n    if (!filterDialog.openFilterDialog) {\n        if (filterCounts) {\n            return (\n                <div className={classes.afterFilter}>\n                    <div>Фильтр: {filterCounts} элемента</div>\n                    <div>\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\n                            <BorderColorIcon color=\"#8f8f8f\" />\n                        </IconButton>\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\n                            <CloseIcon className={classes.icon}/>\n                        </IconButton>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <Link\n                    className={classes.arrow}\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\n                </Link>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <Paper className={classes.wrapper} zDepth={2}>\n                <div className={classes.header}>\n                    <span className={classes.title}>Фильтр</span>\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\n                        <CloseIcon className={classes.icon} />\n                    </IconButton>\n                </div>\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\n                    <div>\n                        <Field className={classes.inputFieldCustom} name=\"categoryExpense\" component={ExpensiveCategorySearchField} label=\"Категории расходов\"/>\n                    </div>\n                    <div>\n                        <Field className={classes.inputFieldCustom} name=\"type\" component={TransactionTypeSearchField} label=\"Тип\"/>\n                    </div>\n                    <div>\n                        <Field className={classes.inputFieldCustom} name=\"date\" component={DateToDateField} label=\"Диапазон дат\" fullWidth={true}/>\n                    </div>\n\n                    <RaisedButton\n                        type=\"submit\"\n                        primary={true}\n                        buttonStyle={{color: '#fff'}}\n                        label=\"Применить\"\n                        style={{marginTop: '15px'}}>\n                    </RaisedButton>\n                </form>\n            </Paper>\n        </div>\n    )\n})\n\nTransactionFilterForm.propTypes = {\n    filter: PropTypes.object.isRequired,\n    filterDialog: PropTypes.shape({\n        filterLoading: PropTypes.bool.isRequired,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    })\n}\n\nexport default TransactionFilterForm\n\n\n\n// WEBPACK FOOTER //\n// src/components/Transaction/TransactionFilterForm.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport {Row, Col} from 'react-flexbox-grid'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport IconButton from 'material-ui/IconButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport CloseIcon2 from '../CloseIcon2'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {TextField, ImageUploadField, CheckBox} from '../ReduxForm'\nimport MainStyles from '../Styles/MainStyles'\nimport userGroupFormat from '../../helpers/userGroupFormat'\n\nexport const USERS_CREATE_DIALOG_OPEN = 'openCreateDialog'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\n\nconst validateForm = values => {\n    const errors = {}\n    if (values.password && values.passwordExp && values.password !== values.passwordExp) {\n        errors.password = 'Пароли не совпадают'\n    }\n    return errors\n}\n\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        dialogAddUser: {\n            overflowY: 'auto !important',\n            '& .imageDropZone': {\n                width: '150px !important',\n                height: '145px !important',\n                '& svg': {\n                    width: '30px !important',\n                    height: '30px !important'\n                }\n            }\n        },\n        groupLoader: {\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        inContent: {\n            '& .dottedList': {\n                padding: '5px'\n            }\n        },\n        bottomButtonUsers: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            height: '59px',\n            borderTop: '1px #efefef solid',\n            padding: '0 10px 0 30px',\n            zIndex: '999',\n            '& span': {\n                fontSize: '13px !important',\n                fontWeight: '600 !important',\n                color: '#129fdd',\n                verticalAlign: 'inherit !important'\n            }\n        },\n        stocksCheckList: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            marginBottom: '10px',\n            '& > div': {\n                flexBasis: 'calc(100% / 3)',\n                maxWidth: 'calc(100% / 3)',\n                overflowX: 'hidden !important',\n                '& label': {\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    overflow: 'hidden',\n                    maxWidth: 'calc(100% - 60px)'\n                }\n            }\n        }\n    })),\n    reduxForm({\n        form: 'UsersCreateForm',\n        validate: validateForm,\n        enableReinitialize: true\n    })\n)\n\nconst UsersCreateDialog = enhance((props) => {\n    const {open, loading, handleSubmit, onClose, classes, isUpdate, errorData, groupListData, stockListData} = props\n    const errorText = _.get(errorData, 'errorText')\n    const show = _.get(errorData, 'show')\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialogAddUser}\n            contentStyle={loading ? {width: '300px'} : {width: '600px'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>{isUpdate ? 'Изменить пользователя' : 'Добавить пользователя'}</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} className={classes.form}>\n                    <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4}/>\n                    </div>\n                    <div className={classes.inContent} style={{display: 'block', minHeight: '350px', maxHeight: 'none'}}>\n                        <Row className={classes.field}>\n                            <Col xs={7} style={{paddingTop: '15px'}}>\n                                <Field\n                                    name=\"firstName\"\n                                    component={TextField}\n                                    label=\"Имя\"\n                                    className={classes.inputFieldCustom}\n                                    fullWidth={true}/>\n                                <Field\n                                    name=\"secondName\"\n                                    component={TextField}\n                                    label=\"Фамилия\"\n                                    className={classes.inputFieldCustom}\n                                    fullWidth={true}/>\n                                    <div style={{marginTop: '30px'}}><strong>Тип пользователя:</strong></div>\n                            </Col>\n                            <Col xs={5}>\n                                <Field\n                                    name=\"image\"\n                                    component={ImageUploadField}\n                                    fullWidth={true}\n                                />\n                            </Col>\n                        </Row>\n                        <Row>\n                            {(!loading) && _.get(groupListData, 'groupListLoading') &&\n                            <div className={classes.groupLoader}>\n                                <CircularProgress size={40} thickness={4}/>\n                            </div>}\n                            {!_.get(groupListData, 'groupListLoading') &&\n                            _.map(_.get(groupListData, 'data'), (item, index) => {\n                                const id = _.get(item, 'id')\n                                const name = _.get(item, 'name')\n                                return (\n                                    <div key={id} style={{flexBasis: '33.33333%', maxWidth: '33.33333%', padding: '0 10px'}}>\n                                        <Field\n                                            name={'groups[' + index + '][selected]'}\n                                            component={CheckBox}\n                                            label={userGroupFormat(name)}/>\n                                    </div>\n                                )\n                            })}\n                        </Row>\n                        <div className=\"dottedList\"></div>\n                        <Row className={classes.field} style={{paddingTop: '15px'}}>\n                            <Col xs={6}>\n                                <Field\n                                    name=\"username\"\n                                    component={TextField}\n                                    label=\"Логин\"\n                                    className={classes.inputFieldCustom}\n                                    fullWidth={true}/>\n                                <Field\n                                    name=\"phoneNumber\"\n                                    component={TextField}\n                                    label=\"Телефон\"\n                                    className={classes.inputFieldCustom}\n                                    fullWidth={true}/>\n                            </Col>\n                            <Col xs={6}>\n                                <Field\n                                    name=\"password\"\n                                    component={TextField}\n                                    type=\"password\"\n                                    label={isUpdate ? 'Изменить пароль' : 'Пароль'}\n                                    className={classes.inputFieldCustom}\n                                    fullWidth={true}/>\n                                <Field\n                                    name=\"passwordExp\"\n                                    errorText={show ? errorText : ''}\n                                    type=\"password\"\n                                    component={TextField}\n                                    label=\"Подтвердите пароль\"\n                                    className={classes.inputFieldCustom}\n                                    fullWidth={true}/>\n                            </Col>\n                        </Row>\n                        <div className={classes.subTitle} style={{marginTop: '15px'}}>Связанные склады</div>\n                        {(!loading) && _.get(stockListData, 'stockListLoading')\n                        ? <div className={classes.groupLoader}>\n                            <CircularProgress size={40} thickness={4}/>\n                        </div>\n                        : <div className={classes.stocksCheckList}>\n                            {_.map(_.get(stockListData, 'data'), (item, index) => {\n                                const name = _.get(item, 'name')\n                                return (\n                                    <Field\n                                        name={'stock[' + index + '][selected]'}\n                                        component={CheckBox}\n                                        label={name}/>\n                                )\n                            })}\n                        </div>}\n                    </div>\n                    <div className={classes.bottomButtonUsers}>\n                        <div>\n                            <Field\n                                name=\"isActive\"\n                                component={CheckBox}\n                                label=\"Активный\"/>\n                        </div>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\n\nUsersCreateDialog.propTyeps = {\n    isUpdate: PropTypes.bool,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\n\nexport default UsersCreateDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Users/UsersCreateDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose, withHandlers} from 'recompose'\nimport {reduxForm, Field} from 'redux-form'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {Link} from 'react-router'\nimport Paper from 'material-ui/Paper'\nimport IconButton from 'material-ui/IconButton'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport BorderColorIcon from 'material-ui/svg-icons/editor/border-color'\nimport {ManufactureSearchField, UsersGroupSearchField} from '../ReduxForm'\nimport CloseIcon from '../CloseIcon'\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\n\nexport const USERS_FILTER_OPEN = 'openFilterDialog'\n\nexport const USERS_FILTER_KEY = {\n    MANUFACTURE: 'manufacture',\n    GROUP: 'group'\n}\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            position: 'absolute',\n            minWidth: '300px',\n            background: '#fff',\n            zIndex: 99,\n            top: 0,\n            left: 0,\n            borderRadius: 0,\n            padding: '10px 20px 10px 20px'\n        },\n        afterFilter: {\n            alignItems: 'center',\n            display: 'flex',\n            backgroundColor: '#efefef',\n            position: 'relative',\n            padding: '16px 30px',\n            marginLeft: '-30px',\n            '& > div:nth-child(2)': {\n                position: 'absolute',\n                right: '0'\n            },\n            '& > div:nth-child(1)': {\n                color: '#666666'\n            },\n            '& button': {\n                borderLeft: '1px solid white !important'\n            }\n        },\n        icon: {\n            color: '#8f8f8f !important'\n        },\n        arrow: {\n            color: '#12aaeb',\n            paddingRight: '14px',\n            position: 'relative',\n            '& svg': {\n                position: 'absolute',\n                width: '13px !important',\n                height: '20px !important'\n            }\n        },\n        header: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            '& button': {\n                marginRight: '-12px !important'\n            }\n        },\n        title: {\n            fontSize: '15px',\n            color: '#5d6474'\n        },\n        submit: {\n            color: '#fff !important'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'UsersFilterForm',\n        enableReinitialize: true\n    }),\n    withHandlers({\n        getCount: props => () => {\n            const {filter} = props\n            return _(USERS_FILTER_KEY)\n                .values()\n                .filter(item => item !== USERS_FILTER_KEY.FROM_DATE)\n                .filter(item => filter.getParam(item))\n                .value()\n                .length\n        }\n    })\n)\n\nconst UsersFilterForm = enhance((props) => {\n    const {classes, filterDialog, getCount} = props\n    const filterCounts = getCount()\n\n    if (!filterDialog.openFilterDialog) {\n        if (filterCounts) {\n            return (\n                <div className={classes.afterFilter}>\n                    <div>Фильтр: {filterCounts} элемента</div>\n                    <div>\n                        <IconButton onTouchTap={filterDialog.handleOpenFilterDialog}>\n                            <BorderColorIcon color=\"#8f8f8f\" />\n                        </IconButton>\n                        <IconButton onTouchTap={filterDialog.handleClearFilterDialog}>\n                            <CloseIcon className={classes.icon}/>\n                        </IconButton>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <Link\n                    className={classes.arrow}\n                    onTouchTap={filterDialog.handleOpenFilterDialog}>\n                    <div>Показать фильтр <KeyboardArrowDown color=\"#12aaeb\" /></div>\n                </Link>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <Paper className={classes.wrapper} zDepth={2}>\n                <div className={classes.header}>\n                    <span className={classes.title}>Фильтр</span>\n                    <IconButton onTouchTap={filterDialog.handleCloseFilterDialog}>\n                        <CloseIcon className={classes.icon} />\n                    </IconButton>\n                </div>\n                <form onSubmit={filterDialog.handleSubmitFilterDialog}>\n                    <div>\n                        <Field className={classes.inputFieldCustom} name=\"manufacture\" component={ManufactureSearchField} label=\"Производство\" fullWidth={true}/>\n                    </div>\n                    <div>\n                        <Field className={classes.inputFieldCustom} name=\"group\" component={UsersGroupSearchField} label=\"Принадлежность к группе\" fullWidth={true}/>\n                    </div>\n\n                    <RaisedButton\n                        type=\"submit\"\n                        primary={true}\n                        buttonStyle={{color: '#fff'}}\n                        label=\"Применить\"\n                        style={{marginTop: '15px'}}>\n                    </RaisedButton>\n                </form>\n            </Paper>\n        </div>\n    )\n})\n\nUsersFilterForm.propTypes = {\n    filter: PropTypes.object.isRequired,\n    filterDialog: PropTypes.shape({\n        filterLoading: PropTypes.bool.isRequired,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    })\n}\n\nexport default UsersFilterForm\n\n\n\n// WEBPACK FOOTER //\n// src/components/Users/UsersFilterForm.js","import _ from 'lodash'\nimport React from 'react'\nimport {hashHistory, Link} from 'react-router'\nimport IconButton from 'material-ui/IconButton'\nimport sprintf from 'sprintf'\nimport PropTypes from 'prop-types'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\nimport * as ROUTES from '../../constants/routes'\nimport {reduxForm} from 'redux-form'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport TextFieldSearch from 'material-ui/TextField'\nimport SearchIcon from 'material-ui/svg-icons/action/search'\nimport Container from '../Container'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport {Row, Col} from 'react-flexbox-grid'\nimport {compose, withState, withHandlers} from 'recompose'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport IconMenu from 'material-ui/IconMenu'\nimport MenuItem from 'material-ui/MenuItem'\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\nimport Edit from 'material-ui/svg-icons/image/edit'\nimport Tooltip from '../ToolTip'\nimport Arrow from 'material-ui/svg-icons/navigation/arrow-drop-down'\nimport ZoneMap from './ZoneMapCustom'\nimport AddZonePopup from './AddZonePopup'\nimport BindAgentDialog from './ZoneBindAgentDialog'\nimport ConfirmDialog from '../ConfirmDialog'\nimport ZoneDetails from './ZoneDetails'\nimport NotFound from '../Images/not-found.png'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        addButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        addPerson: {\n            boxShadow: 'none !important',\n            '& button': {\n                background: '#199ee0 !important',\n                width: '30px !important',\n                height: '30px !important',\n                '& svg': {\n                    width: '20px !important',\n                    height: '30px !important'\n                }\n            }\n        },\n        addButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px'\n        },\n        zonesWrapper: {\n            background: '#f2f5f8',\n            position: 'relative',\n            overflowX: 'hidden',\n            margin: '0 -28px',\n            minHeight: 'calc(100% - 32px)',\n            boxShadow: 'rgba(0, 0, 0, 0.09) 0px -2px 5px, rgba(0, 0, 0, 0.05) 0px -2px 6px',\n            '& > div:first-child': {\n                position: 'absolute',\n                top: '0',\n                left: '0',\n                right: '0',\n                bottom: '0'\n            }\n        },\n        zonesInfo: {\n            background: '#fff',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-between',\n            position: 'absolute',\n            width: '450px',\n            top: '0',\n            bottom: '0',\n            transition: 'all 0.3s ease',\n            zIndex: '2'\n        },\n        toggleButton: {\n            position: 'absolute',\n            left: '-24px',\n            top: '18px',\n            padding: '8px 0',\n            background: '#fff',\n            cursor: 'pointer'\n        },\n        expanded: {\n            display: 'flex',\n            alignItems: 'center',\n            '& svg': {\n                transform: 'rotate(-90deg)',\n                position: 'relative',\n                left: '1px'\n            }\n        },\n        collapsed: {\n            extend: 'expanded',\n            '& svg': {\n                transform: 'rotate(90deg)',\n                position: 'relative',\n                left: '1px'\n            }\n        },\n        zonesInfoTitle: {\n            display: 'flex',\n            padding: '20px 30px',\n            borderBottom: '1px #efefef solid',\n            position: 'relative',\n            '& > div': {\n                display: 'flex',\n                marginRight: '50px',\n                '& big': {\n                    fontSize: '28px',\n                    lineHeight: '28px',\n                    marginRight: '10px'\n                },\n                '& span': {\n                    fontSize: '12px !important',\n                    lineHeight: '14px'\n                }\n            },\n            '& > div:last-child': {\n                margin: '0'\n            }\n        },\n        zonesInfoFooter: {\n            extend: 'zonesInfoTitle',\n            borderBottom: 'none',\n            borderTop: '1px #efefef solid',\n            '& > div big': {\n                color: '#ff7374'\n            }\n        },\n        list: {\n            height: 'calc(100% - 138px)',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'flex-start',\n            '& .row': {\n                alignItems: 'center',\n                margin: '0',\n                paddingLeft: '22px',\n                height: '50px',\n                '& > div:last-child': {\n                    paddingRight: '0'\n                },\n                '& > div:nth-child(3)': {\n                    textAlign: 'center'\n                },\n                '& button > div': {\n                    display: 'flex'\n                }\n            }\n        },\n        listHeader: {\n            background: '#5d6474',\n            color: '#fff',\n            fontWeight: 'bold',\n            height: '57px !important'\n        },\n        listTitle: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            padding: '0 30px',\n            height: '57px',\n            '& > span': {\n                fontWeight: '600'\n            }\n        },\n        itemList: {\n            height: '100%',\n            overflowY: 'auto',\n            position: 'relative'\n        },\n        search: {\n            position: 'relative',\n            display: 'flex',\n            width: '100%',\n            '& > div': {\n                paddingRight: '35px'\n            }\n        },\n        searchField: {\n            fontSize: '13px !important',\n            width: '100%',\n            marginLeft: '50px'\n        },\n        searchButton: {\n            position: 'absolute !important',\n            right: '-10px'\n        },\n        addZoneWrapper: {\n            position: 'absolute',\n            top: '10px',\n            left: '50%',\n            marginLeft: '-275px',\n            padding: '7px 20px',\n            width: '550px',\n            height: '60px',\n            '& form': {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                width: '100%',\n                height: '100%'\n            }\n        },\n        inputFieldCustom: {\n            flexBasis: '200px',\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        actionButton: {\n            '& span': {\n                color: '#129fdd !important',\n                fontWeight: '600 !important'\n            }\n        },\n        addZoneClose: {\n            position: 'absolute',\n            right: '30px',\n            '& button': {\n                background: '#fff !important'\n            },\n            '& svg': {\n                fill: '#666 !important'\n            }\n        },\n        emptyQuery: {\n            background: 'url(' + NotFound + ') no-repeat center center',\n            backgroundSize: '200px',\n            padding: '200px 0 0',\n            textAlign: 'center',\n            fontSize: '13px',\n            color: '#666',\n            '& svg': {\n                width: '50px !important',\n                height: '50px !important',\n                color: '#999 !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'ZoneCreateForm',\n        enableReinitialize: true\n    }),\n    withState('search', 'setSearch', ({filter}) => filter.getParam('search')),\n    withHandlers({\n        onSubmit: props => (event) => {\n            const {search, filter} = props\n            event.preventDefault()\n\n            hashHistory.push(filter.createURL({search}))\n        }\n    })\n)\n\nconst iconStyle = {\n    icon: {\n        color: '#666'\n    },\n    button: {\n        width: 45,\n        height: 45,\n        padding: '0 12px'\n    }\n}\n\nconst ZonesWrapper = enhance((props) => {\n    const {\n        filter,\n        listData,\n        statData,\n        classes,\n        addZone,\n        detailData,\n        toggle,\n        search,\n        setSearch,\n        onSubmit,\n        bindAgent,\n        unbindAgent\n    } = props\n\n    const ZERO = 0\n    const ONE = 1\n    const isOpenToggle = toggle.openToggle\n    const isOpenPopup = addZone.openAddZone\n    const isLoadingList = _.get(listData, 'listLoading')\n    const isListEmpty = _.isEmpty(_.get(listData, 'data'))\n\n    const openDetail = _.get(detailData, 'openDetail')\n\n    const isLoadingStat = _.get(statData, 'statLoading')\n    const activeZones = _.get(statData, ['data', 'activeBorders'])\n    const boundMarkets = _.get(statData, ['data', 'boundMarkets'])\n    const passiveMarkets = _.get(statData, ['data', 'passiveMarkets'])\n    const passiveAgents = _.get(statData, ['data', 'passiveAgents'])\n\n    let isOpenConfirm = false\n    if (_.get(unbindAgent, 'openConfirmDialog') > ZERO) {\n        isOpenConfirm = true\n    }\n\n    const iconButton = (\n        <IconButton\n            iconStyle={iconStyle.icon}\n            style={iconStyle.button}>\n            <MoreVertIcon/>\n        </IconButton>\n    )\n\n    const zoneInfoToggle = (\n        <div className={classes.zonesInfo} style={isOpenToggle ? {right: '0'} : {right: '-450px'}}>\n            <div className={classes.toggleButton}>\n                {isOpenToggle ? <div className={classes.expanded} onClick={toggle.handleCollapseInfo}><Arrow/></div>\n                    : <div className={classes.collapsed} onClick={toggle.handleExpandInfo}><Arrow/></div>}\n            </div>\n            {!openDetail ? <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'space-between', height: '100%'}}>\n                <div className={classes.zonesInfoTitle}>\n                    {isLoadingStat &&\n                    <div className={classes.loader}>\n                        <CircularProgress size={25} thickness={3}/>\n                    </div>}\n                    <div>\n                        <big>{activeZones}</big>\n                        <span>{(activeZones === ONE) ? 'активная' : 'активных'} <br/> {(activeZones === ONE) ? 'зона' : 'зон'}</span>\n                    </div>\n                    <div>\n                        <big>{boundMarkets}</big>\n                        <span>магазинов <br/> в зонах</span>\n                    </div>\n                </div>\n\n                <div className={classes.list}>\n                    <div className={classes.listTitle}>\n                        <span>Зоны</span>\n                        <div className={classes.searchField}>\n                            <form onSubmit={onSubmit}>\n                                <div className={classes.search}>\n                                    <TextFieldSearch\n                                        fullWidth={true}\n                                        hintText=\"Поиск\"\n                                        className={classes.searchField}\n                                        value={search}\n                                        onChange={(event) => setSearch(event.target.value)}\n                                    />\n                                    <IconButton\n                                        iconStyle={{color: '#ccc'}}\n                                        className={classes.searchButton}\n                                        disableTouchRipple={true}>\n                                        <SearchIcon />\n                                    </IconButton>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                    <Row className={classes.listHeader}>\n                        <Col xs={2}>ID</Col>\n                        <Col xs={6}>Наименование зоны</Col>\n                        <Col xs={2}>Магазины</Col>\n                    </Row>\n                    <div className={classes.itemList}>\n                        {isLoadingList &&\n                        <div className={classes.loader}>\n                            <CircularProgress size={40} thickness={4}/>\n                        </div>}\n                        {!isListEmpty ? _.map(_.get(listData, 'data'), (item) => {\n                            const id = _.get(item, 'id')\n                            const marketsCount = _.get(item, 'marketsCount')\n                            const name = _.get(item, 'title')\n                            return (\n                                <Row key={id}>\n                                    <Col xs={2} style={{color: '#237bde'}}>Z-{id}</Col>\n                                    <Col xs={6}>\n                                        <Link to={{\n                                            pathname: sprintf(ROUTES.ZONES_ITEM_PATH, id),\n                                            query: filter.getParams()\n                                        }}>{name}</Link>\n                                    </Col>\n                                    <Col xs={2}>{marketsCount}</Col>\n                                    <Col xs={2} style={{textAlign: 'right'}}>\n                                        <IconMenu\n                                            iconButtonElement={iconButton}\n                                            anchorOrigin={{horizontal: 'right', vertical: 'top'}}\n                                            targetOrigin={{horizontal: 'right', vertical: 'top'}}>\n                                            <MenuItem\n                                                primaryText=\"Изменить\"\n                                                leftIcon={<Edit />}\n                                            />\n                                            <MenuItem\n                                                primaryText=\"Удалить \"\n                                                leftIcon={<DeleteIcon />}\n                                            />\n                                        </IconMenu>\n                                    </Col>\n                                </Row>\n                            )\n                        })\n                        : <div className={classes.emptyQuery}>\n                                <div>По вашему запросу ничего не найдено</div>\n                            </div>}\n                    </div>\n                </div>\n\n                <div className={classes.zonesInfoFooter}>\n                    {isLoadingStat &&\n                    <div className={classes.loader}>\n                        <CircularProgress size={25} thickness={3}/>\n                    </div>}\n                    <div>\n                        <big>{passiveMarkets}</big>\n                        <span>магазинов <br/> не распределено</span>\n                    </div>\n                    <div>\n                        <big>{passiveAgents}</big>\n                        <span>агентов <br/> не распределено</span>\n                    </div>\n                </div>\n            </div>\n            : <ZoneDetails\n                    detailData={detailData}\n                    bindAgent={bindAgent}\n                    unbindAgent={unbindAgent}\n                    filter={filter}\n                />}\n        </div>\n    )\n\n    return (\n        <Container>\n            <SubMenu url={ROUTES.ZONES_LIST_URL}/>\n\n            <div className={classes.addButtonWrapper}>\n                <Tooltip position=\"left\" text=\"Добавить зону\">\n                    <FloatingActionButton\n                        mini={true}\n                        className={classes.addButton}\n                        onTouchTap={addZone.handleOpenAddZone}>\n                        <ContentAdd />\n                    </FloatingActionButton>\n                </Tooltip>\n            </div>\n\n            <div className={classes.zonesWrapper}>\n                <ZoneMap />\n                {isOpenPopup && <AddZonePopup\n                    onClose={addZone.handleCloseAddZone}\n                    onSubmit={addZone.handleSubmitAddZone}\n                />}\n                <BindAgentDialog\n                    open={bindAgent.openBindAgent}\n                    loading={bindAgent.bindAgentLoading}\n                    onClose={bindAgent.handleCloseBindAgent}\n                    onSubmit={bindAgent.handleSubmitBindAgent}\n                />\n                <ConfirmDialog\n                    open={isOpenConfirm}\n                    onClose={unbindAgent.handleCloseConfirmDialog}\n                    onSubmit={unbindAgent.handleSendConfirmDialog}\n                    message=\"Открепить данного агента?\"\n                    type=\"submit\"\n                />\n                {zoneInfoToggle}\n            </div>\n        </Container>\n    )\n})\n\nZonesWrapper.PropTypes = {\n    filter: PropTypes.object,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    statData: PropTypes.object,\n    addZone: PropTypes.shape({\n        openAddZone: PropTypes.bool.isRequired,\n        handleOpenAddZone: PropTypes.func.isRequired,\n        handleCloseAddZone: PropTypes.func.isRequired,\n        handleSubmitAddZone: PropTypes.func.isRequired\n    }).isRequired,\n    toggle: PropTypes.shape({\n        openToggle: PropTypes.bool.isRequired,\n        handleExpandInfo: PropTypes.func.isRequired,\n        handleCollapseInfo: PropTypes.func.isRequired\n    }).isRequired,\n    bindAgent: PropTypes.shape({\n        openBindAgent: PropTypes.bool.isRequired,\n        bindAgentLoading: PropTypes.bool.isRequired,\n        handleOpenBindAgent: PropTypes.func.isRequired,\n        handleCloseBindAgent: PropTypes.func.isRequired,\n        handleSubmitBindAgent: PropTypes.func.isRequired\n    }).isRequired,\n    unbindAgent: PropTypes.shape({\n        openConfirmDialog: PropTypes.bool.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleSendConfirmDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default ZonesWrapper\n\n\n\n// WEBPACK FOOTER //\n// src/components/Zones/ZonesWrapper.js","export const MANUFACTURE_TAB_PRODUCT = 'product'\nexport const MANUFACTURE_TAB_PERSON = 'person'\nexport const MANUFACTURE_TAB_EQUIPMENT = 'equipment'\nexport const MANUFACTURE_TAB_SHIPMENT = 'shipment'\n\nexport const MANUFACTURE_DEFAULT_TAB = MANUFACTURE_TAB_PRODUCT\n\n\n\n// WEBPACK FOOTER //\n// src/constants/manufactureTab.js","export const ORDER_TAB_PRODUCT_LIST = 'productList'\nexport const ORDER_TAB_RETURN = 'return'\n\nexport const ORDER_DEFAULT_TAB = ORDER_TAB_PRODUCT_LIST\n\n\n\n// WEBPACK FOOTER //\n// src/constants/orderTab.js","export const STOCK_RECEIVE_TAB_RECEIVE = 'receive'\nexport const STOCK_RECEIVE_TAB_TRANSFER = 'transfer'\nexport const STOCK_RECEIVE_TAB_OUT_HISTORY = 'outHistory'\nexport const STOCK_RECEIVE_TAB_TRANSFER_HISTORY = 'transferHistory'\nexport const STOCK_RECEIVE_TAB_HISTORY = 'receiveHistory'\nexport const STOCK_RECEIVE_DEFAULT_TAB = STOCK_RECEIVE_TAB_RECEIVE\n\n\n\n// WEBPACK FOOTER //\n// src/constants/stockReceiveTab.js","export const TOKEN_KEY = 'token'\nexport const USER_GROUPS = 'user_groups'\n\n\n\n// WEBPACK FOOTER //\n// src/constants/storage.js","\nconst ONE = 1\nconst paymentTypeFormat = (type) => {\n    return (Number(type) === ONE) ? 'Банковский счет' : 'Наличными'\n}\n\nexport default paymentTypeFormat\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/paymentTypeFormat.js","const groups = {\n    'SupDir': 'Завсклад',\n    'delivery': 'Доставщик',\n    'agent': 'Агент',\n    'merch': 'Мерчендайзер',\n    'collector': 'Инкасатор',\n    'cashier': 'Кассир',\n    'supervisor': 'Супервайзер'\n}\n\nconst userGroupFormat = (key) => {\n    return groups[key]\n}\n\nexport default userGroupFormat\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/userGroupFormat.js","import _ from 'lodash'\nimport moment from 'moment'\nimport {orderingSnakeCase} from '../../helpers/serializer'\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    const firstDayOfMonth = moment().format('YYYY-MM-01')\n    const lastDay = moment().daysInMonth()\n    const lastDayOfMonth = moment().format('YYYY-MM-' + lastDay)\n\n    return {\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering),\n        'begin_date': _.get(defaultData, 'fromDate') || firstDayOfMonth,\n        'end_date': _.get(defaultData, 'toDate') || lastDayOfMonth\n    }\n}\n\nexport const itemSerializer = (data, filterItem, id) => {\n    const {...defaultData} = data\n\n    return {\n        'user': id,\n        'page': _.get(filterItem, 'page'),\n        'page_size': _.get(filterItem, 'pageSize'),\n        'created_date_0': _.get(defaultData, 'fromDate'),\n        'created_date_1': _.get(defaultData, 'toDate')\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Statistics/statAgentSerializer.js","import _ from 'lodash'\nimport moment from 'moment'\nimport {orderingSnakeCase} from '../../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n\n    return {\n        name\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n    const firstDayOfMonth = moment().format('YYYY-MM-01')\n    const lastDay = moment().daysInMonth()\n    const lastDayOfMonth = moment().format('YYYY-MM-' + lastDay)\n\n    return {\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering),\n        'type': _.get(defaultData, 'productType'),\n        'begin_date': _.get(defaultData, 'fromDate') || firstDayOfMonth,\n        'end_date': _.get(defaultData, 'toDate') || lastDayOfMonth\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Statistics/statCashboxSerializer.js","module.exports = __webpack_public_path__ + \"d9f29071735cb71be3f0e89870e8899f.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Images/badge.png\n// module id = 573\n// module chunks = 0","module.exports = __webpack_public_path__ + \"305f1e1d4ce61c0c5eaedc6dcf7154df.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Images/cut.png\n// module id = 574\n// module chunks = 0","module.exports = __webpack_public_path__ + \"3ead59a7f1824afd7fd2d85780be9922.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Images/cylindrical.png\n// module id = 575\n// module chunks = 0","module.exports = __webpack_public_path__ + \"ecc0f78a568cf1c319d70c6873812d87.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Images/excel.png\n// module id = 576\n// module chunks = 0","module.exports = __webpack_public_path__ + \"7c6cef250a3046fcc773aca8907ac82c.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Images/glue.png\n// module id = 577\n// module chunks = 0","module.exports = __webpack_public_path__ + \"341a661712f6f184db83172b38e1e195.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Images/press.png\n// module id = 578\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionAccountBalanceWallet = function ActionAccountBalanceWallet(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M21 18v1c0 1.1-.9 2-2 2H5c-1.11 0-2-.9-2-2V5c0-1.1.89-2 2-2h14c1.1 0 2 .9 2 2v1h-9c-1.11 0-2 .9-2 2v8c0 1.1.89 2 2 2h9zm-9-2h10V8H12v8zm4-2.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z' })\n  );\n};\nActionAccountBalanceWallet = (0, _pure2.default)(ActionAccountBalanceWallet);\nActionAccountBalanceWallet.displayName = 'ActionAccountBalanceWallet';\nActionAccountBalanceWallet.muiName = 'SvgIcon';\n\nexports.default = ActionAccountBalanceWallet;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/account-balance-wallet.js\n// module id = 685\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionDateRange = function ActionDateRange(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z' })\n  );\n};\nActionDateRange = (0, _pure2.default)(ActionDateRange);\nActionDateRange.displayName = 'ActionDateRange';\nActionDateRange.muiName = 'SvgIcon';\n\nexports.default = ActionDateRange;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/date-range.js\n// module id = 686\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionDoneAll = function ActionDoneAll(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M18 7l-1.41-1.41-6.34 6.34 1.41 1.41L18 7zm4.24-1.41L11.66 16.17 7.48 12l-1.41 1.41L11.66 19l12-12-1.42-1.41zM.41 13.41L6 19l1.41-1.41L1.83 12 .41 13.41z' })\n  );\n};\nActionDoneAll = (0, _pure2.default)(ActionDoneAll);\nActionDoneAll.displayName = 'ActionDoneAll';\nActionDoneAll.muiName = 'SvgIcon';\n\nexports.default = ActionDoneAll;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/done-all.js\n// module id = 687\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionDone = function ActionDone(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z' })\n  );\n};\nActionDone = (0, _pure2.default)(ActionDone);\nActionDone.displayName = 'ActionDone';\nActionDone.muiName = 'SvgIcon';\n\nexports.default = ActionDone;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/done.js\n// module id = 688\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionSwapHoriz = function ActionSwapHoriz(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M6.99 11L3 15l3.99 4v-3H14v-2H6.99v-3zM21 9l-3.99-4v3H10v2h7.01v3L21 9z' })\n  );\n};\nActionSwapHoriz = (0, _pure2.default)(ActionSwapHoriz);\nActionSwapHoriz.displayName = 'ActionSwapHoriz';\nActionSwapHoriz.muiName = 'SvgIcon';\n\nexports.default = ActionSwapHoriz;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/swap-horiz.js\n// module id = 689\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionTimeline = function ActionTimeline(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M23 8c0 1.1-.9 2-2 2-.18 0-.35-.02-.51-.07l-3.56 3.55c.05.16.07.34.07.52 0 1.1-.9 2-2 2s-2-.9-2-2c0-.18.02-.36.07-.52l-2.55-2.55c-.16.05-.34.07-.52.07s-.36-.02-.52-.07l-4.55 4.56c.05.16.07.33.07.51 0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2c.18 0 .35.02.51.07l4.56-4.55C8.02 9.36 8 9.18 8 9c0-1.1.9-2 2-2s2 .9 2 2c0 .18-.02.36-.07.52l2.55 2.55c.16-.05.34-.07.52-.07s.36.02.52.07l3.55-3.56C19.02 8.35 19 8.18 19 8c0-1.1.9-2 2-2s2 .9 2 2z' })\n  );\n};\nActionTimeline = (0, _pure2.default)(ActionTimeline);\nActionTimeline.displayName = 'ActionTimeline';\nActionTimeline.muiName = 'SvgIcon';\n\nexports.default = ActionTimeline;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/timeline.js\n// module id = 690\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ContentRemoveCircle = function ContentRemoveCircle(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z' })\n  );\n};\nContentRemoveCircle = (0, _pure2.default)(ContentRemoveCircle);\nContentRemoveCircle.displayName = 'ContentRemoveCircle';\nContentRemoveCircle.muiName = 'SvgIcon';\n\nexports.default = ContentRemoveCircle;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/content/remove-circle.js\n// module id = 691\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ContentReply = function ContentReply(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z' })\n  );\n};\nContentReply = (0, _pure2.default)(ContentReply);\nContentReply.displayName = 'ContentReply';\nContentReply.muiName = 'SvgIcon';\n\nexports.default = ContentReply;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/content/reply.js\n// module id = 692\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MapsMap = function MapsMap(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M20.5 3l-.16.03L15 5.1 9 3 3.36 4.9c-.21.07-.36.25-.36.48V20.5c0 .28.22.5.5.5l.16-.03L9 18.9l6 2.1 5.64-1.9c.21-.07.36-.25.36-.48V3.5c0-.28-.22-.5-.5-.5zM15 19l-6-2.11V5l6 2.11V19z' })\n  );\n};\nMapsMap = (0, _pure2.default)(MapsMap);\nMapsMap.displayName = 'MapsMap';\nMapsMap.muiName = 'SvgIcon';\n\nexports.default = MapsMap;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/maps/map.js\n// module id = 693\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar NavigationArrowDropDownCircle = function NavigationArrowDropDownCircle(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 12l-4-4h8l-4 4z' })\n  );\n};\nNavigationArrowDropDownCircle = (0, _pure2.default)(NavigationArrowDropDownCircle);\nNavigationArrowDropDownCircle.displayName = 'NavigationArrowDropDownCircle';\nNavigationArrowDropDownCircle.muiName = 'SvgIcon';\n\nexports.default = NavigationArrowDropDownCircle;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/navigation/arrow-drop-down-circle.js\n// module id = 694\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar NotificationDoNotDisturbAlt = function NotificationDoNotDisturbAlt(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zM4 12c0-4.4 3.6-8 8-8 1.8 0 3.5.6 4.9 1.7L5.7 16.9C4.6 15.5 4 13.8 4 12zm8 8c-1.8 0-3.5-.6-4.9-1.7L18.3 7.1C19.4 8.5 20 10.2 20 12c0 4.4-3.6 8-8 8z' })\n  );\n};\nNotificationDoNotDisturbAlt = (0, _pure2.default)(NotificationDoNotDisturbAlt);\nNotificationDoNotDisturbAlt.displayName = 'NotificationDoNotDisturbAlt';\nNotificationDoNotDisturbAlt.muiName = 'SvgIcon';\n\nexports.default = NotificationDoNotDisturbAlt;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/notification/do-not-disturb-alt.js\n// module id = 695\n// module chunks = 0","import {hashHistory} from 'react-router'\nimport {userIsAuth} from '../permissions'\nimport {getToken} from '../helpers/storage'\nimport * as ROUTES from '../constants/routes'\nimport App from '../containers/App'\nimport SignIn from '../containers/SignIn'\nimport {ShopList} from '../containers/Shop'\nimport {CashboxList} from '../containers/Cashbox'\nimport {TransactionList} from '../containers/Transaction'\nimport {ClientTransactionList} from '../containers/ClientTransaction'\nimport {SupplyList} from '../containers/Supply'\nimport {OrderList} from '../containers/Order'\nimport {ProductList} from '../containers/Product'\nimport {ProductTypeList} from '../containers/ProductType'\nimport {ProductPriceList} from '../containers/ProductPrice'\nimport {StockList} from '../containers/Stock'\nimport {CurrencyList} from '../containers/Currency'\nimport {PositionList} from '../containers/Position'\nimport {BrandList} from '../containers/Brand'\nimport {MeasurementList} from '../containers/Measurement'\nimport {ExpensiveCategoryList} from '../containers/ExpensiveCategory'\nimport {UsersList} from '../containers/Users'\nimport {ProviderList} from '../containers/Provider'\nimport {ClientList} from '../containers/Client'\nimport {ManufactureList} from '../containers/Manufacture'\nimport {PendingExpensesList} from '../containers/PendingExpenses'\nimport {StatStock} from '../containers/StatStock'\nimport {StatDebtors} from '../containers/StatDebtors'\nimport {StatManufacture} from '../containers/StatManufacture'\nimport {StatCashbox} from '../containers/StatCashbox'\nimport {PendingPaymentsList} from '../containers/PendingPayments'\nimport {EquipmentList} from '../containers/Equipment'\nimport {ShiftList} from '../containers/Shift'\nimport {Zones} from '../containers/Zones'\nimport {Tracking} from '../containers/Tracking'\nimport {MarketTypeList} from '../containers/MarketType'\nimport {PricesList} from '../containers/Prices'\nimport {PriceList} from '../containers/Price'\nimport NotFound from '../containers/NotFound'\nimport {RemainderList} from '../containers/Remainder'\nimport {\n    StatSalesList,\n    StatAgentList,\n    StatProductList,\n    StatMarketList,\n    StatFinanceList,\n    StatIncomeList,\n    StatOutcomeList,\n    StatDebtorsList,\n    StatOutcomeCategoryList,\n    StatRemainderList,\n    StatCashboxList\n} from '../containers/Statistics'\nimport {ClientBalanceList} from '../containers/ClientBalance'\nimport {StockReceiveList} from '../containers/StockReceive'\nimport {PlanList} from '../containers/Plan'\nimport {ActivityList} from '../containers/Activity'\n\nexport default {\n    path: '/',\n    component: App,\n    indexRoute: {\n        component: userIsAuth(StatSalesList)\n    },\n    childRoutes: [\n        {\n            path: ROUTES.SIGN_IN_URL,\n            component: SignIn,\n            onEnter: () => {\n                if (getToken()) {\n                    hashHistory.push(ROUTES.DASHBOARD_URL)\n                }\n            }\n        },\n        // Shop\n        {\n            path: ROUTES.SHOP_LIST_URL,\n            component: userIsAuth(ShopList),\n            childRoutes: [\n                {\n                    path: ROUTES.SHOP_ITEM_URL,\n                    component: userIsAuth(ShopList)\n                },\n\n                {\n                    path: ROUTES.SHOP_ITEM_TAB_URL,\n                    component: userIsAuth(ShopList)\n                }\n            ]\n        },\n        // Users\n        {\n            path: ROUTES.USERS_LIST_URL,\n            component: userIsAuth(UsersList),\n            childRoutes: [\n                {\n                    path: ROUTES.USERS_ITEM_URL,\n                    component: userIsAuth(UsersList)\n                }\n            ]\n        },\n        // Cashbox\n        {\n            path: ROUTES.CASHBOX_LIST_URL,\n            component: userIsAuth(CashboxList),\n            childRoutes: [\n                {\n                    path: ROUTES.CASHBOX_ITEM_URL,\n                    component: userIsAuth(CashboxList)\n                }\n            ]\n        },\n        // Transactoin\n        {\n            path: ROUTES.TRANSACTION_LIST_URL,\n            component: userIsAuth(TransactionList),\n            childRoutes: [\n                {\n                    path: ROUTES.TRANSACTION_ITEM_URL,\n                    component: userIsAuth(TransactionList)\n                }\n            ]\n        },\n        // Client Transactoin\n        {\n            path: ROUTES.CLIENT_TRANSACTION_LIST_URL,\n            component: userIsAuth(ClientTransactionList),\n            childRoutes: [\n                {\n                    path: ROUTES.CLIENT_TRANSACTION_ITEM_URL,\n                    component: userIsAuth(ClientTransactionList)\n                }\n            ]\n        },\n        // Supply\n        {\n            path: ROUTES.SUPPLY_LIST_URL,\n            component: userIsAuth(SupplyList),\n            childRoutes: [\n                {\n                    path: ROUTES.SUPPLY_ITEM_URL,\n                    component: userIsAuth(SupplyList)\n                }\n            ]\n        },\n        // Prices\n        {\n            path: ROUTES.PRICES_LIST_URL,\n            component: userIsAuth(PricesList),\n            childRoutes: [\n                {\n                    path: ROUTES.PRICES_ITEM_URL,\n                    component: userIsAuth(PricesList)\n                }\n            ]\n        },\n        // PRICE\n        {\n            path: ROUTES.PRICE_LIST_URL,\n            component: userIsAuth(PriceList),\n            childRoutes: [\n                {\n                    path: ROUTES.PRICE_ITEM_URL,\n                    component: userIsAuth(PriceList)\n                }\n            ]\n        },\n        // Order\n        {\n            path: ROUTES.ORDER_LIST_URL,\n            component: userIsAuth(OrderList),\n            childRoutes: [\n                {\n                    path: ROUTES.ORDER_ITEM_URL,\n                    component: userIsAuth(OrderList)\n                }\n            ]\n        },\n        // Product\n        {\n            path: ROUTES.PRODUCT_LIST_URL,\n            component: userIsAuth(ProductList),\n            childRoutes: [\n                {\n                    path: ROUTES.PRODUCT_ITEM_URL,\n                    component: userIsAuth(ProductList)\n                }\n            ]\n        },\n        // Product Type\n        {\n            path: ROUTES.PRODUCT_TYPE_LIST_URL,\n            component: userIsAuth(ProductTypeList),\n            childRoutes: [\n                {\n                    path: ROUTES.PRODUCT_TYPE_ITEM_URL,\n                    component: userIsAuth(ProductTypeList)\n                }\n            ]\n        },\n        // Product Price\n        {\n            path: ROUTES.PRODUCT_PRICE_LIST_URL,\n            component: userIsAuth(ProductPriceList),\n            childRoutes: [\n                {\n                    path: ROUTES.PRODUCT_PRICE_ITEM_URL,\n                    component: userIsAuth(ProductPriceList)\n                }\n            ]\n        },\n        // Equipment\n        {\n            path: ROUTES.EQUIPMENT_LIST_URL,\n            component: userIsAuth(EquipmentList),\n            childRoutes: [\n                {\n                    path: ROUTES.EQUIPMENT_ITEM_URL,\n                    component: userIsAuth(EquipmentList)\n                }\n            ]\n        },\n        // Stock\n        {\n            path: ROUTES.STOCK_LIST_URL,\n            component: userIsAuth(StockList),\n            childRoutes: [\n                {\n                    path: ROUTES.STOCK_ITEM_URL,\n                    component: userIsAuth(StockList)\n                }\n            ]\n        },\n        // Currency\n        {\n            path: ROUTES.CURRENCY_LIST_URL,\n            component: userIsAuth(CurrencyList),\n            childRoutes: [\n                {\n                    path: ROUTES.CURRENCY_ITEM_URL,\n                    component: userIsAuth(CurrencyList)\n                }\n            ]\n        },\n        // Measurement\n        {\n            path: ROUTES.MEASUREMENT_LIST_URL,\n            component: userIsAuth(MeasurementList),\n            childRoutes: [\n                {\n                    path: ROUTES.MEASUREMENT_ITEM_URL,\n                    component: userIsAuth(MeasurementList)\n                }\n            ]\n        },\n        // ExpensiveCategory\n        {\n            path: ROUTES.EXPENSIVE_CATEGORY_LIST_URL,\n            component: userIsAuth(ExpensiveCategoryList),\n            childRoutes: [\n                {\n                    path: ROUTES.EXPENSIVE_CATEGORY_ITEM_URL,\n                    component: userIsAuth(ExpensiveCategoryList)\n                }\n            ]\n        },\n        // Provider\n        {\n            path: ROUTES.PROVIDER_LIST_URL,\n            component: userIsAuth(ProviderList),\n            childRoutes: [\n                {\n                    path: ROUTES.PROVIDER_ITEM_URL,\n                    component: userIsAuth(ProviderList)\n                }\n            ]\n        },\n        // Client\n        {\n            path: ROUTES.CLIENT_LIST_URL,\n            component: userIsAuth(ClientList),\n            childRoutes: [\n                {\n                    path: ROUTES.CLIENT_ITEM_URL,\n                    component: userIsAuth(ClientList)\n                }\n            ]\n        },\n        // Brand\n        {\n            path: ROUTES.BRAND_LIST_URL,\n            component: userIsAuth(BrandList),\n            childRoutes: [\n                {\n                    path: ROUTES.BRAND_ITEM_URL,\n                    component: userIsAuth(BrandList)\n                }\n            ]\n        },\n        // Shift\n        {\n            path: ROUTES.SHIFT_LIST_URL,\n            component: userIsAuth(ShiftList),\n            childRoutes: [\n                {\n                    path: ROUTES.SHIFT_ITEM_URL,\n                    component: userIsAuth(ShiftList)\n                }\n            ]\n        },\n        // Manufacture\n        {\n            path: ROUTES.MANUFACTURE_LIST_URL,\n            component: userIsAuth(ManufactureList),\n            childRoutes: [\n                {\n                    path: ROUTES.MANUFACTURE_ITEM_URL,\n                    component: userIsAuth(ManufactureList)\n                }\n            ]\n        },\n        // Pending Expenses\n        {\n            path: ROUTES.PENDING_EXPENSES_LIST_URL,\n            component: userIsAuth(PendingExpensesList),\n            childRoutes: [{\n                path: ROUTES.PENDING_EXPENSES_ITEM_URL,\n                component: userIsAuth(PendingExpensesList)\n            }]\n        },\n\n        // Pending Payments\n        {\n            path: ROUTES.PENDING_PAYMENTS_LIST_URL,\n            component: userIsAuth(PendingPaymentsList),\n            childRoutes: [{\n                path: ROUTES.PENDING_PAYMENTS_ITEM_URL,\n                component: userIsAuth(PendingPaymentsList)\n            }]\n        },\n        // METRICA (Stat Stock)\n        {\n            path: ROUTES.STATSTOCK_LIST_URL,\n            component: userIsAuth(StatStock),\n            childRoutes: [{\n                path: ROUTES.STATSTOCK_ITEM_URL,\n                component: userIsAuth(StatStock)\n            }]\n        },\n        // METRICA (Stat Debtors)\n        {\n            path: ROUTES.STATDEBTORS_LIST_URL,\n            component: userIsAuth(StatDebtors),\n            childRoutes: [{\n                path: ROUTES.STATDEBTORS_ITEM_URL,\n                component: userIsAuth(StatDebtors)\n            }]\n        },\n        // METRICA (Stat Manufacture)\n        {\n            path: ROUTES.STAT_MANUFACTURE_LIST_URL,\n            component: userIsAuth(StatManufacture),\n            childRoutes: [{\n                path: ROUTES.STAT_MANUFACTURE_ITEM_URL,\n                component: userIsAuth(StatManufacture)\n            }]\n        },\n        // METRICA (Stat Cashbox)\n        {\n            path: ROUTES.STAT_CASHBOX_LIST_URL,\n            component: userIsAuth(StatCashbox),\n            childRoutes: [{\n                path: ROUTES.STAT_CASHBOX_ITEM_URL,\n                component: userIsAuth(StatCashbox)\n            }]\n        },\n        // ZONES\n        {\n            path: ROUTES.ZONES_LIST_URL,\n            component: userIsAuth(Zones),\n            childRoutes: [{\n                path: ROUTES.ZONES_ITEM_URL,\n                component: userIsAuth(Zones)\n            }]\n        },\n        // TRACKING\n        {\n            path: ROUTES.TRACKING_LIST_URL,\n            component: userIsAuth(Tracking),\n            childRoutes: [{\n                path: ROUTES.TRACKING_ITEM_URL,\n                component: userIsAuth(Tracking)\n            }]\n        },\n        // MARKET TYPE\n        {\n            path: ROUTES.MARKET_TYPE_LIST_URL,\n            component: userIsAuth(MarketTypeList),\n            childRoutes: [\n                {\n                    path: ROUTES.MARKET_TYPE_ITEM_URL,\n                    component: userIsAuth(MarketTypeList)\n                }\n            ]\n        },\n        // Price\n        {\n            path: ROUTES.PRICES_LIST_URL,\n            component: userIsAuth(PricesList),\n            childRoutes: [\n                {\n                    path: ROUTES.PRICES_ITEM_URL,\n                    component: userIsAuth(PricesList)\n                }\n            ]\n        },\n        // Remainder\n        {\n            path: ROUTES.REMAINDER_LIST_URL,\n            component: userIsAuth(RemainderList),\n            childRoutes: [\n                {\n                    path: ROUTES.REMAINDER_ITEM_URL,\n                    component: userIsAuth(RemainderList)\n                }\n            ]\n        },\n        // Statistics\n        {\n            path: ROUTES.STATISTICS_LIST_URL,\n            component: userIsAuth(StatSalesList),\n            childRoutes: [\n            ]\n        },\n        // Statistics/sales all\n        {\n            path: ROUTES.STATISTICS_SALES_URL,\n            component: userIsAuth(StatSalesList),\n            childRoutes: [\n                {\n                    path: ROUTES.STATISTICS_SALES_ITEM_URL,\n                    component: userIsAuth(StatSalesList)\n                }\n            ]\n        },\n        // Statistics/agent\n        {\n            path: ROUTES.STATISTICS_AGENT_URL,\n            component: userIsAuth(StatAgentList),\n            childRoutes: [\n                {\n                    path: ROUTES.STATISTICS_AGENT_ITEM_URL,\n                    component: userIsAuth(StatAgentList)\n                }\n            ]\n        },\n        // Statistics/product\n        {\n            path: ROUTES.STATISTICS_PRODUCT_URL,\n            component: userIsAuth(StatProductList),\n            childRoutes: []\n        },\n        // Statistics/market\n        {\n            path: ROUTES.STATISTICS_MARKET_URL,\n            component: userIsAuth(StatMarketList),\n            childRoutes: [\n                {\n                    path: ROUTES.STATISTICS_MARKET_ITEM_URL,\n                    component: userIsAuth(StatMarketList)\n                }\n            ]\n        },\n        // Statistics/finance\n        {\n            path: ROUTES.STATISTICS_FINANCE_URL,\n            component: userIsAuth(StatFinanceList),\n            childRoutes: []\n        },\n        // Statistics/income\n        {\n            path: ROUTES.STATISTICS_INCOME_URL,\n            component: userIsAuth(StatIncomeList),\n            childRoutes: []\n        },\n        // Statistics/outcome\n        {\n            path: ROUTES.STATISTICS_OUTCOME_URL,\n            component: userIsAuth(StatOutcomeList),\n            childRoutes: []\n        },\n        // Statistics/debtors\n        {\n            path: ROUTES.STATISTICS_DEBTORS_URL,\n            component: userIsAuth(StatDebtorsList),\n            childRoutes: [\n                {\n                    path: ROUTES.STATISTICS_DEBTORS_ITEM_URL,\n                    component: userIsAuth(StatDebtorsList)\n                }\n            ]\n        },\n        // Statistics/outcomeCategory\n        {\n            path: ROUTES.STATISTICS_OUTCOME_CATEGORY_URL,\n            component: userIsAuth(StatOutcomeCategoryList),\n            childRoutes: []\n        },\n        // Stock Receive Transfer\n        {\n            path: ROUTES.STOCK_RECEIVE_LIST_URL,\n            component: userIsAuth(StockReceiveList),\n            childRoutes: [\n                {\n                    path: ROUTES.STOCK_RECEIVE_ITEM_URL,\n                    component: userIsAuth(StockReceiveList)\n                }\n            ]\n        },\n        // ClientBalance\n        {\n            path: ROUTES.CLIENT_BALANCE_LIST_URL,\n            component: userIsAuth(ClientBalanceList),\n            childRoutes: [\n                {\n                    path: ROUTES.CLIENT_BALANCE_ITEM_URL,\n                    component: userIsAuth(ClientBalanceList)\n                }\n            ]\n        },\n        // Plan\n        {\n            path: ROUTES.PLAN_LIST_URL,\n            component: userIsAuth(PlanList),\n            childRoutes: [\n                {\n                    path: ROUTES.PLAN_ITEM_URL,\n                    component: userIsAuth(PlanList)\n                }\n            ]\n        },\n        // Statistics/remainder\n        {\n            path: ROUTES.STATISTICS_REMAINDER_URL,\n            component: userIsAuth(StatRemainderList),\n            childRoutes: [\n                {\n                    path: ROUTES.STATISTICS_REMAINDER_ITEM_URL,\n                    component: userIsAuth(StatRemainderList)\n                }\n            ]\n        },\n        // Statistics/cashbox\n        {\n            path: ROUTES.STATISTICS_CASHBOX_URL,\n            component: userIsAuth(StatCashboxList),\n            childRoutes: [\n                {\n                    path: ROUTES.STATISTICS_CASHBOX_ITEM_URL,\n                    component: userIsAuth(StatCashboxList)\n                }\n            ]\n        },\n\n        // Position\n        {\n            path: ROUTES.POSITION_LIST_URL,\n            component: userIsAuth(PositionList),\n            childRoutes: [\n                {\n                    path: ROUTES.POSITION_ITEM_URL,\n                    component: userIsAuth(PositionList)\n                }\n            ]\n        },\n        // Activity\n        {\n            path: ROUTES.ACTIVITY_LIST_URL,\n            component: userIsAuth(ActivityList),\n            childRoutes: [\n                {\n                    path: ROUTES.ACTIVITY_ITEM_URL,\n                    component: userIsAuth(ActivityList)\n                }\n            ]\n        },\n        {\n            path: '*',\n            component: NotFound\n        }\n    ]\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/routes/index.js","import {createStore, applyMiddleware} from 'redux'\nimport {routerMiddleware} from 'react-router-redux'\nimport thunkMiddleware from 'redux-thunk'\nimport promiseMiddleware from 'redux-promise-middleware'\nimport {hashHistory} from 'react-router'\nimport rootReducer from '../reducers'\n\nexport default (initialState) => {\n    const middleware = [\n        promiseMiddleware(),\n        thunkMiddleware,\n        routerMiddleware(hashHistory)\n    ]\n\n    if (process.env.NODE_ENV === 'development') {\n        const createLogger = require('redux-logger')\n        middleware.push(createLogger())\n    }\n\n    return createStore(rootReducer, initialState, applyMiddleware(...middleware))\n}\n\n\n\n// WEBPACK FOOTER //\n// src/store/createStore.js","import './custom.css'\n\n\n\n// WEBPACK FOOTER //\n// src/styles/index.js","'use strict';\n\nexports.__esModule = true;\n\nvar _rxjs = require('rxjs');\n\nvar _rxjs2 = _interopRequireDefault(_rxjs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar config = {\n  fromESObservable: _rxjs2.default.Observable.from\n};\n\nexports.default = config;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/recompose/rxjsObservableConfig.js\n// module id = 931\n// module chunks = 0","import _ from 'lodash'\nimport axios from '../helpers/axios'\nimport sprintf from 'sprintf'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/activitySerializer'\n\nconst VISIT = 1\nconst ORDER = 2\nconst REPORT = 3\nconst ORDER_RETURN = 4\nconst PAYMENT = 5\nconst DELIVERY = 6\n\nconst thumbnailType = 'medium'\n\n// ORDER\n\nexport const activityOrderListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams(), ORDER)\n    const payload = axios()\n        .get(API.ACTIVITY_ORDER_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.ACTIVITY_ORDER_LIST,\n        payload\n    }\n}\n\nexport const activityOrderItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.ACTIVITY_ORDER_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.ACTIVITY_ORDER_ITEM,\n        payload\n    }\n}\n\n// VISIT\n\nexport const activityVisitListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams(), VISIT)\n    const payload = axios()\n        .get(API.ACTIVITY_VISIT_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.ACTIVITY_VISIT_LIST,\n        payload\n    }\n}\n\n// REPORT\n\nexport const activityReportListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams(), REPORT, thumbnailType)\n    const payload = axios()\n        .get(API.ACTIVITY_REPORT_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.ACTIVITY_REPORT_LIST,\n        payload\n    }\n}\nexport const activityReportShowImageAction = (id) => {\n    const params = {'thumbnail_type': 'large'}\n    const payload = axios()\n        .get(sprintf(API.ACTIVITY_REPORT_SHOW_IMAGE, id), {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.ACTIVITY_REPORT_SHOW_IMAGE,\n        payload\n    }\n}\n\n// ORDER_RETURN\n\nexport const activityReturnListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams(), ORDER_RETURN)\n    const payload = axios()\n        .get(API.ACTIVITY_REPORT_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.ACTIVITY_ORDER_RETURN_LIST,\n        payload\n    }\n}\n\n// PAYMENT\n\nexport const activityPaymentListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams(), PAYMENT)\n    const payload = axios()\n        .get(API.ACTIVITY_REPORT_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.ACTIVITY_PAYMENT_LIST,\n        payload\n    }\n}\n\n// DELIVERY\n\nexport const activityDeliveryListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams(), DELIVERY)\n    const payload = axios()\n        .get(API.ACTIVITY_REPORT_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.ACTIVITY_DELIVERY_LIST,\n        payload\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/actions/activity.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/brandSerializer'\n\nexport const brandCreateAction = (formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .post(API.BRAND_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.BRAND_CREATE,\n        payload\n    }\n}\n\nexport const brandDeleteAction = (id) => {\n    const payload = axios()\n        .delete(sprintf(API.BRAND_DELETE, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.BRAND_DELETE,\n        payload\n    }\n}\n\nexport const brandUpdateAction = (id, formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .put(sprintf(API.BRAND_ITEM, id), requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.BRAND_UPDATE,\n        payload\n    }\n}\n\nexport const brandListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(API.BRAND_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.BRAND_LIST,\n        payload\n    }\n}\n\nexport const brandItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.BRAND_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.BRAND_ITEM,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/brand.js","import _ from 'lodash'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/clientBalanceSerializer'\n\nexport const clientBalanceListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(API.CLIENT_BALANCE_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.CLIENT_BALANCE_LIST,\n        payload\n    }\n}\n\nexport const clientBalanceItemFetchAction = (filter, id) => {\n    const params = serializers.itemFilterSerializer(filter.getParams(), id)\n    const payload = axios()\n        .get(API.CLIENT_BALANCE_ITEM, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.CLIENT_BALANCE_ITEM,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/clientBalance.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/clientTransactionSerializer'\n\nexport const clientTransactionCreateIncomeAction = (formValues, clientId) => {\n    const requestData = serializers.createIncomeSerializer(formValues, clientId)\n    const payload = axios()\n        .post(API.CLIENT_TRANSACTION_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.CLIENT_TRANSACTION_INCOME,\n        payload\n    }\n}\n\nexport const clientTransactionCreateExpenseAction = (formValues, clientId) => {\n    const requestData = serializers.createExpenseSerializer(formValues, clientId)\n    const payload = axios()\n        .post(API.CLIENT_TRANSACTION_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.CLIENT_TRANSACTION_EXPENSE,\n        payload\n    }\n}\n\nexport const clientTransactionCreateSendAction = () => {\n    const payload = axios()\n        .post(API.CLIENT_TRANSACTION_SEND)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.CLIENT_TRANSACTION_SEND,\n        payload\n    }\n}\n\nexport const clientTransactionDeleteAction = (id) => {\n    const payload = axios()\n        .delete(sprintf(API.CLIENT_TRANSACTION_DELETE, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.CLIENT_TRANSACTION_DELETE,\n        payload\n    }\n}\n\nexport const clientTransactionListFetchAction = (filter, clientId) => {\n    const params = serializers.listFilterSerializer(filter.getParams(), clientId)\n    const payload = axios()\n        .get(API.CLIENT_TRANSACTION_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.CLIENT_TRANSACTION_LIST,\n        payload\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/actions/clientTransaction.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/currencySerializer'\n\nexport const courseCreateAction = (formValues, currency) => {\n    const requestData = serializers.courseSerializer(formValues, currency)\n    const payload = axios()\n        .post(API.CURRENCY_COURSE_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.CURRENCY_COURSE_CREATE,\n        payload\n    }\n}\n\nexport const currencyCreateAction = (formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .post(API.CURRENCY_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.CURRENCY_CREATE,\n        payload\n    }\n}\n\nexport const currencyDeleteAction = (id) => {\n    const payload = axios()\n        .delete(sprintf(API.CURRENCY_DELETE, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.CURRENCY_DELETE,\n        payload\n    }\n}\n\nexport const currencyUpdateAction = (id, formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .put(sprintf(API.CURRENCY_ITEM, id), requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.CURRENCY_UPDATE,\n        payload\n    }\n}\n\nexport const currencyListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(API.CURRENCY_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.CURRENCY_LIST,\n        payload\n    }\n}\n\nexport const currencyItemFetchAction = (filter, id) => {\n    const params = serializers.itemSerializer(filter.getParams(), id)\n    const payload = axios()\n        .get(API.CURRENCY_RATE, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.CURRENCY_ITEM,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/currency.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/expensiveCategorySerializer'\n\nexport const expensiveCategoryCreateAction = (formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .post(API.EXPENSIVE_CATEGORY_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.EXPENSIVE_CATEGORY_CREATE,\n        payload\n    }\n}\n\nexport const expensiveCategoryDeleteAction = (id) => {\n    const payload = axios()\n        .delete(sprintf(API.EXPENSIVE_CATEGORY_DELETE, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.EXPENSIVE_CATEGORY_DELETE,\n        payload\n    }\n}\n\nexport const expensiveCategoryUpdateAction = (id, formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .put(sprintf(API.EXPENSIVE_CATEGORY_ITEM, id), requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.EXPENSIVE_CATEGORY_UPDATE,\n        payload\n    }\n}\n\nexport const expensiveCategoryListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(API.EXPENSIVE_CATEGORY_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.EXPENSIVE_CATEGORY_LIST,\n        payload\n    }\n}\n\nexport const expensiveCategoryItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.EXPENSIVE_CATEGORY_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.EXPENSIVE_CATEGORY_ITEM,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/expensiveCategory.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/ingredientSerializer'\n\nexport const ingredientCreateAction = (formValues, id) => {\n    const requestData = serializers.createSerializer(formValues, id)\n    const payload = axios()\n        .post(API.INGREDIENT_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.INGREDIENT_CREATE,\n        payload\n    }\n}\n\nexport const ingredientDeleteAction = (id) => {\n    const payload = axios()\n        .delete(sprintf(API.INGREDIENT_DELETE, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.INGREDIENT_DELETE,\n        payload\n    }\n}\n\nexport const ingredientUpdateAction = (formValues, id, productId) => {\n    const requestData = serializers.createSerializer(formValues, productId)\n    const payload = axios()\n        .put(sprintf(API.INGREDIENT_ITEM, id), requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.INGREDIENT_UPDATE,\n        payload\n    }\n}\n\nexport const ingredientListFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.INGREDIENT_LIST, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.INGREDIENT_LIST,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/ingredient.js","import _ from 'lodash'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\n\nexport const manufactureListFetchAction = () => {\n    const payload = axios()\n        .get(API.MANUFACTURE_LIST)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.MANUFACTURE_LIST,\n        payload\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/actions/manufacture.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/manufactureProductSerializer'\n\nexport const manufactureProductCreateAction = (formValues, manufactureId) => {\n    const requestData = serializers.createSerializer(formValues, manufactureId)\n    const payload = axios()\n        .post(API.MANUFACTURE_PRODUCT_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.MANUFACTURE_PRODUCT_CREATE,\n        payload\n    }\n}\n\nexport const manufactureProductDeleteAction = (id) => {\n    const payload = axios()\n        .delete(sprintf(API.MANUFACTURE_PRODUCT_DELETE, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.MANUFACTURE_PRODUCT_DELETE,\n        payload\n    }\n}\n\nexport const productChangeManufacture = (id, formValues) => {\n    const requestData = serializers.changeManufacture(formValues)\n    const payload = axios()\n        .post(sprintf(API.MANUFACTURE_PRODUCT_CHANGE, id), requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.MANUFACTURE_PRODUCT_CHANGE,\n        payload\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/actions/manufactureProduct.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/measurementSerializer'\n\nexport const measurementCreateAction = (formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .post(API.MEASUREMENT_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.MEASUREMENT_CREATE,\n        payload\n    }\n}\n\nexport const measurementDeleteAction = (id) => {\n    const payload = axios()\n        .delete(sprintf(API.MEASUREMENT_DELETE, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.MEASUREMENT_DELETE,\n        payload\n    }\n}\n\nexport const measurementUpdateAction = (id, formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .put(sprintf(API.MEASUREMENT_ITEM, id), requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.MEASUREMENT_UPDATE,\n        payload\n    }\n}\n\nexport const measurementListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(API.MEASUREMENT_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.MEASUREMENT_LIST,\n        payload\n    }\n}\n\nexport const measurementItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.MEASUREMENT_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.MEASUREMENT_ITEM,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/measurement.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/pendingExpensesSerializer'\n\nexport const pendingExpensesUpdateAction = (id, formValues) => {\n    const requestData = serializers.createSerializer(formValues, id)\n    const payload = axios()\n        .post(API.PENDING_EXPENSES_UPDATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PENDING_EXPENSES_UPDATE,\n        payload\n    }\n}\n\nexport const pendingExpensesListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(API.PENDING_EXPENSES_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PENDING_EXPENSES_LIST,\n        payload\n    }\n}\n\nexport const pendingExpensesItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.PENDING_EXPENSES_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PENDING_EXPENSES_ITEM,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/pendingExpenses.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/pendingPaymentsSerializer'\n\nexport const pendingPaymentsUpdateAction = (formValues, order) => {\n    const requestData = serializers.createSerializer(formValues, order)\n    const payload = axios()\n        .post(API.PENDING_PAYMENTS_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PENDING_PAYMENTS_CREATE,\n        payload\n    }\n}\n\nexport const pendingPaymentsListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(API.PENDING_PAYMENTS_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PENDING_PAYMENTS_LIST,\n        payload\n    }\n}\n\nexport const pendingPaymentsItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.PENDING_PAYMENTS_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PENDING_PAYMENTS_ITEM,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/pendingPayments.js","import _ from 'lodash'\nimport axios from '../helpers/axios'\nimport sprintf from 'sprintf'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/planSerializer'\n\nexport const planCreateAction = (formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .post(API.PLAN_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PLAN_CREATE,\n        payload\n    }\n}\n\nexport const planAgentsListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(API.USERS_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.USERS_LIST,\n        payload\n    }\n}\n\nexport const planItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.USERS_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.USERS_ITEM,\n        payload\n    }\n}\n\nexport const planZonesListFetchAction = () => {\n    const payload = axios()\n        .get(API.ZONE_LIST)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.ZONE_LIST,\n        payload\n    }\n}\n\nexport const planListSearchFetchAction = (search) => {\n    const payload = axios()\n        .get(API.PLAN_LIST, {params: {'search': search}})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.PLAN_LIST,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/plan.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/positionSerializer'\n\nexport const courseCreateAction = (formValues, position) => {\n    const requestData = serializers.courseSerializer(formValues, position)\n    const payload = axios()\n        .post(API.POSITION_COURSE_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.POSITION_COURSE_CREATE,\n        payload\n    }\n}\n\nexport const positionCreateAction = (formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .post(API.POSITION_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.POSITION_CREATE,\n        payload\n    }\n}\n\nexport const positionDeleteAction = (id) => {\n    const payload = axios()\n        .delete(sprintf(API.POSITION_DELETE, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.POSITION_DELETE,\n        payload\n    }\n}\n\nexport const positionUpdateAction = (id, formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .put(sprintf(API.POSITION_ITEM, id), requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.POSITION_UPDATE,\n        payload\n    }\n}\n\nexport const positionListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(API.POSITION_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.POSITION_LIST,\n        payload\n    }\n}\n\nexport const positionItemFetchAction = (filter, id) => {\n    const payload = axios()\n        .get(sprintf(API.POSITION_RATE, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.POSITION_ITEM,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/position.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/priceSerializer'\nexport const priceCreateAction = (formValues, productId) => {\n    const requestData = serializers.createSerializer(formValues, productId)\n    const payload = axios()\n        .post(API.PRICE_LIST_ITEM_ADD, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.PRICE_CREATE,\n        payload\n    }\n}\nexport const priceListFetchAction = (filter, manufacture) => {\n    const params = serializers.listFilterSerializer(filter.getParams(), manufacture)\n    const payload = axios()\n        .get(API.PRICE_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.PRICE_LIST,\n        payload\n    }\n}\nexport const priceItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.PRICE_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.PRICE_ITEM,\n        payload\n    }\n}\nexport const getPriceItemsAction = (id) => {\n    const params = {\n        'product': id\n    }\n    const payload = axios()\n        .get(API.PRICE_LIST_ITEM_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.PRICE_LIST_ITEM_LIST,\n        payload\n    }\n}\n\nexport const priceItemHistoryFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.PRICE_LIST_ITEM_HISTORY, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.PRICE_LIST_ITEM_HISTORY,\n        payload\n    }\n}\n\nexport const priceItemExpensesFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.PRICE_LIST_ITEM_EXPENSES, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.PRICE_LIST_ITEM_EXPENSES,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/price.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/pricesSerializer'\n\nexport const pricesCreateAction = (formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n\n    const payload = axios()\n        .post(API.PRICES_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PRICES_CREATE,\n        payload\n    }\n}\n\nexport const pricesDeleteAction = (id) => {\n    const payload = axios()\n        .delete(sprintf(API.PRICES_DELETE, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PRICES_DELETE,\n        payload\n    }\n}\n\nexport const pricesUpdateAction = (id, formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .put(sprintf(API.PRICES_ITEM, id), requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PRICES_UPDATE,\n        payload\n    }\n}\n\nexport const pricesListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(API.PRICES_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PRICES_LIST,\n        payload\n    }\n}\n\nexport const pricesCSVFetchAction = (filter) => {\n    const params = serializers.csvFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(API.PRICES_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PRICES_LIST_CSV,\n        payload\n    }\n}\n\nexport const pricesItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.PRICES_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PRICES_ITEM,\n        payload: payload\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/actions/prices.js","import _ from 'lodash'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\n\nexport const getConfig = () => {\n    const payload = axios()\n        .post(API.CONFIG)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.CONFIG,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/primeryCurrency.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/Product/productPriceSerializer'\n\nexport const productPriceCreateAction = (formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .post(API.PRODUCT_PRICE_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PRODUCT_PRICE_CREATE,\n        payload\n    }\n}\n\nexport const productPriceDeleteAction = (id) => {\n    const payload = axios()\n        .delete(sprintf(API.PRODUCT_PRICE_DELETE, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PRODUCT_PRICE_DELETE,\n        payload\n    }\n}\n\nexport const productPriceUpdateAction = (id, formValues) => {\n    const requestData = serializers.createSerializer(formValues, id)\n    const payload = axios()\n        .post(sprintf(API.PRODUCT_PRICE_SET, id), requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PRODUCT_PRICE_UPDATE,\n        payload\n    }\n}\n\nexport const productPriceListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(API.PRODUCT_PRICE_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PRODUCT_PRICE_LIST,\n        payload\n    }\n}\n\nexport const productPriceItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.PRODUCT_PRICE_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PRODUCT_PRICE_ITEM,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/productPrice.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/Product/productTypeSerializer'\n\nexport const productTypeCreateAction = (formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .post(API.PRODUCT_TYPE_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PRODUCT_TYPE_CREATE,\n        payload\n    }\n}\n\nexport const productTypeDeleteAction = (id) => {\n    const payload = axios()\n        .delete(sprintf(API.PRODUCT_TYPE_DELETE, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.PRODUCT_TYPE_DELETE,\n        payload\n    }\n}\n\nexport const productTypeUpdateAction = (id, formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .put(sprintf(API.PRODUCT_TYPE_ITEM, id), requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PRODUCT_TYPE_UPDATE,\n        payload\n    }\n}\n\nexport const productTypeListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(API.PRODUCT_TYPE_H_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PRODUCT_TYPE_H_LIST,\n        payload\n    }\n}\n\nexport const productTypeItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.PRODUCT_TYPE_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PRODUCT_TYPE_ITEM,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/productType.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/providerSerializer'\n\nexport const providerCreateAction = (formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .post(API.PROVIDER_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PROVIDER_CREATE,\n        payload\n    }\n}\n\nexport const providerDeleteAction = (id) => {\n    const payload = axios()\n        .delete(sprintf(API.PROVIDER_DELETE, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PROVIDER_DELETE,\n        payload\n    }\n}\n\nexport const providerUpdateAction = (id, formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .put(sprintf(API.PROVIDER_ITEM, id), requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PROVIDER_UPDATE,\n        payload\n    }\n}\n\nexport const providerListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(API.PROVIDER_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PROVIDER_LIST,\n        payload\n    }\n}\n\nexport const providerItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.PROVIDER_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.PROVIDER_ITEM,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/provider.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/remainderSerializer'\n\nexport const remainderListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get((API.REMAINDER_LIST), {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.REMAINDER_LIST,\n        payload\n    }\n}\n\nexport const remainderItemFetchAction = (id, filter) => {\n    const params = serializers.itemFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(sprintf(API.REMAINDER_ITEM, id), {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.REMAINDER_ITEM,\n        payload\n    }\n}\n\nexport const remainderTransferAction = (formValues) => {\n    const requestData = serializers.transferSerializer(formValues)\n\n    const payload = axios()\n        .post(API.REMAINDER_TRANSFER, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.REMAINDER_TRANSFER,\n        payload\n    }\n}\n\nexport const remainderDiscardAction = (formValues) => {\n    const requestData = serializers.discardSerializer(formValues)\n\n    const payload = axios()\n        .post(API.REMAINDER_DISCARD, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.REMAINDER_DISCARD,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/remainder.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/remainderStockSerializer'\n\nexport const remainderStockCreateAction = (formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .post(API.REMAINDER_STOCK_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.REMAINDER_STOCK_CREATE,\n        payload\n    }\n}\n\nexport const remainderStockDeleteAction = (id) => {\n    const payload = axios()\n        .delete(sprintf(API.REMAINDER_STOCK_DELETE, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.REMAINDER_STOCK_DELETE,\n        payload\n    }\n}\n\nexport const remainderStockUpdateAction = (id, formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .put(sprintf(API.REMAINDER_STOCK_ITEM, id), requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.REMAINDER_STOCK_UPDATE,\n        payload\n    }\n}\n\nexport const remainderStockListFetchAction = (filter, id) => {\n    const params = serializers.listFilterSerializer(filter.getParams(), id)\n    const payload = axios()\n        .get((API.REMAINDER_STOCK_LIST), {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.REMAINDER_STOCK_LIST,\n        payload\n    }\n}\n\nexport const remainderStockCSVFetchAction = (filter) => {\n    const params = serializers.csvFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(API.REMAINDER_STOCK_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.REMAINDER_STOCK_LIST_CSV,\n        payload\n    }\n}\n\nexport const remainderStockItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.REMAINDER_STOCK_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.REMAINDER_STOCK_ITEM,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/remainderStock.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/shiftSerializer'\n\nexport const shiftCreateAction = (formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .post(API.SHIFT_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.SHIFT_CREATE,\n        payload\n    }\n}\n\nexport const shiftDeleteAction = (id) => {\n    const payload = axios()\n        .delete(sprintf(API.SHIFT_DELETE, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.SHIFT_DELETE,\n        payload\n    }\n}\n\nexport const shiftUpdateAction = (id, formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .put(sprintf(API.SHIFT_ITEM, id), requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.SHIFT_UPDATE,\n        payload\n    }\n}\n\nexport const shiftListFetchAction = (filter, manufactureId) => {\n    const params = serializers.listFilterSerializer(filter.getParam(), manufactureId)\n    const payload = axios()\n        .get(API.SHIFT_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.SHIFT_LIST,\n        payload\n    }\n}\n\nexport const shiftItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.SHIFT_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.SHIFT_ITEM,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/shift.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/shipmentSerializer'\n\nexport const shipmentListFetchAction = (filter, manufacture) => {\n    const params = serializers.listFilterSerializer(filter.getParams(), manufacture)\n    const payload = axios()\n        .get(API.SHIPMENT_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.SHIPMENT_LIST,\n        payload\n    }\n}\n\nexport const shipmentItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.SHIPMENT_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.SHIPMENT_ITEM,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/shipment.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport fileDownload from 'react-file-download'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/Statistics/statAgentSerializer'\n\nexport const statAgentListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get((API.STAT_AGENT_LIST), {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_AGENT_LIST,\n        payload\n    }\n}\n\nexport const statAgentItemFetchAction = (filter, filterItem, id) => {\n    const params = serializers.itemSerializer(filter.getParams(), filterItem.getParams(), id)\n    const payload = axios()\n        .get(sprintf(API.STAT_AGENT_ITEM, id), {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_AGENT_ITEM,\n        payload\n    }\n}\n\nexport const getDocumentAction = (filter) => {\n    const params = serializers.csvFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(sprintf(API.STAT_AGENT_GET_DOCUMENT), {params})\n        .then((response) => {\n            fileDownload(response.data, 'document.xlsx')\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_AGENT_GET_DOCUMENT,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/statAgent.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/statCashboxSerializer'\n\nexport const statCashboxListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(API.STAT_CASHBOX_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_CASHBOX_LIST,\n        payload\n    }\n}\n\nexport const statCashboxItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.STAT_CASHBOX_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_CASHBOX_ITEM,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/statCashbox.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/statDebtorsSerializer'\nimport fileDownload from 'react-file-download'\n\nexport const statDebtorsListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(API.STATDEBTORS_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STATDEBTORS_LIST,\n        payload\n    }\n}\n\nexport const statDebtorsOrderListFetchAction = (id) => {\n    const params = serializers.orderListFilterSerializer(id)\n    const payload = axios()\n        .get(API.STATDEBTORS_ORDER_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STATDEBTORS_ORDER_LIST,\n        payload\n\n    }\n}\nexport const statDebtorsSumFetchAction = () => {\n    const payload = axios()\n        .get(API.STATDEBTORS_SUM)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STATDEBTORS_SUM,\n        payload\n    }\n}\n\nexport const getDocumentAction = (filter) => {\n    const params = serializers.csvFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(sprintf(API.STATDEBTORS_GET_DOCUMENT), {params})\n        .then((response) => {\n            fileDownload(response.data, 'договор.xls')\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STATDEBTORS_GET_DOCUMENT,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/statDebtors.js","import _ from 'lodash'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/Statistics/statFinanceSerializer'\n\nexport const statFinanceOutDataFetchAction = () => {\n    const payload = axios()\n        .get(API.STAT_FINANCE_DATA, {params: {'type': 'expense'}})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_FINANCE_DATA_OUT,\n        payload\n    }\n}\n\nexport const statFinanceInDataFetchAction = () => {\n    const payload = axios()\n        .get(API.STAT_FINANCE_DATA, {params: {'type': 'income'}})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_FINANCE_DATA_IN,\n        payload\n    }\n}\nexport const statFinanceListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get((API.STAT_FINANCE_LIST), {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_FINANCE_LIST,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/statFianace.js","import _ from 'lodash'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/Statistics/statIncomeSerializer'\n\nexport const statIncomeDataFetchAction = () => {\n    const payload = axios()\n        .get(API.STAT_INCOME_DATA)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_INCOME_DATA,\n        payload\n    }\n}\nexport const statIncomeListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get((API.STAT_INCOME_LIST), {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_INCOME_LIST,\n        payload\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/actions/statIncome.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/statManufactureSerializer'\n\nexport const statManufactureListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(API.STAT_MANUFACTURE_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_MANUFACTURE_LIST,\n        payload\n    }\n}\n\nexport const statManufactureItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.STAT_MANUFACTURE_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_MANUFACTURE_ITEM,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/statManufacture.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/Statistics/statMarketSerializer'\nimport fileDownload from 'react-file-download'\n\nexport const statMarketListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(API.STAT_MARKET_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_MARKET_LIST,\n        payload\n    }\n}\n\nexport const getDocumentAction = (filter) => {\n    const params = serializers.csvFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(sprintf(API.STAT_MARKET_GET_DOCUMENT), {params})\n        .then((response) => {\n            fileDownload(response.data, 'договор.xls')\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_MARKET_GET_DOCUMENT,\n        payload\n    }\n}\nexport const statMarketDataFetchAction = (market) => {\n    const payload = axios()\n        .get(sprintf(API.STAT_MARKET_DATA), {'params': {'market': market}})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_MARKET_DATA,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/statMarket.js","import _ from 'lodash'\nimport axios from '../helpers/axios'\nimport sprintf from 'sprintf'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/Statistics/statOutcomeSerializer'\nimport fileDownload from 'react-file-download'\n\nexport const statOutcomeDataFetchAction = () => {\n    const payload = axios()\n        .get(API.STAT_OUTCOME_DATA)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_OUTCOME_DATA,\n        payload\n    }\n}\nexport const statOutcomeListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get((API.STAT_OUTCOME_LIST), {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_OUTCOME_LIST,\n        payload\n    }\n}\nexport const getDocumentAction = (filter) => {\n    const params = serializers.csvFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(sprintf(API.STAT_OUTCOME_GET_DOCUMENT), {params})\n        .then((response) => {\n            fileDownload(response.data, 'договор.xls')\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_OUTCOME_GET_DOCUMENT,\n        payload\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/actions/statOutcome.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport fileDownload from 'react-file-download'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/Statistics/statOutcomeCategorySerializer'\n\nexport const statOutcomeCategoryListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get((API.STAT_OUTCOME_CATEGORY_LIST), {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_OUTCOME_CATEGORY_LIST,\n        payload\n    }\n}\n\nexport const statOutcomeCategoryItemFetchAction = (filter, filterItem, id) => {\n    const params = serializers.itemSerializer(filter.getParams(), filterItem.getParams(), id)\n    const payload = axios()\n        .get(sprintf(API.STAT_OUTCOME_CATEGORY_ITEM, id), {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_OUTCOME_CATEGORY_ITEM,\n        payload\n    }\n}\n\nexport const getDocumentAction = (filter) => {\n    const params = serializers.csvFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(sprintf(API.STAT_OUTCOME_CATEGORY_GET_DOCUMENT), {params})\n        .then((response) => {\n            fileDownload(response.data, 'document.xlsx')\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_OUTCOME_CATEGORY_GET_DOCUMENT,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/statOutcomeCategory.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/Statistics/statProductSerializer'\nimport fileDownload from 'react-file-download'\n\nexport const statProductListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get((API.STAT_PRODUCT_LIST), {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_PRODUCT_LIST,\n        payload\n    }\n}\n\nexport const getDocumentAction = (filter) => {\n    const params = serializers.csvFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(sprintf(API.STAT_PRODUCT_GET_DOCUMENT), {params})\n        .then((response) => {\n            fileDownload(response.data, 'договор.xls')\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_PRODUCT_GET_DOCUMENT,\n        payload\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/actions/statProduct.js","import _ from 'lodash'\nimport axios from '../helpers/axios'\nimport sprintf from 'sprintf'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/Statistics/statRemainderSerializer'\nimport fileDownload from 'react-file-download'\n\nexport const statRemainderItemFetchAction = (filterItem, id) => {\n    const params = serializers.itemFilterSerializer(filterItem.getParams())\n    const payload = axios()\n        .get(sprintf(API.STAT_REMAINDER_ITEM, id), {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_REMAINDER_ITEM,\n        payload\n    }\n}\nexport const statRemainderListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get((API.STAT_REMAINDER_LIST), {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_REMAINDER_LIST,\n        payload\n    }\n}\nexport const getDocumentAction = (filter) => {\n    const params = serializers.csvFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(sprintf(API.STAT_OUTCOME_GET_DOCUMENT), {params})\n        .then((response) => {\n            fileDownload(response.data, 'договор.xls')\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_OUTCOME_GET_DOCUMENT,\n        payload\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/actions/statRemainder.js","import _ from 'lodash'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/Statistics/statSalesSerializer'\n\nexport const statSalesDataFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(API.STAT_SALES_DATA, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_SALES_DATA,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/statSales.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/statStockSerializer'\nimport fileDownload from 'react-file-download'\n\nexport const statStockListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(API.STATSTOCK_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STATSTOCK_LIST,\n        payload\n    }\n}\n\nexport const statStockDataFetchAction = (id) => {\n    const params = (id) ? {stock: id} : {}\n    const payload = axios()\n        .post(API.STATSTOCK_DATA, params)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STATSTOCK_DATA,\n        payload\n    }\n}\n\nexport const getDocumentAction = (filter) => {\n    const params = serializers.csvFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(sprintf(API.STATSTOCK_GET_DOCUMENT), {params})\n        .then((response) => {\n            fileDownload(response.data, 'договор.xls')\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STATSTOCK_GET_DOCUMENT,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/statStock.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/Statistics/statCashboxSerializer'\nimport fileDownload from 'react-file-download'\n\nexport const statCashboxListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get((API.STATISTICS_CASHBOX_LIST), {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.CASHBOX_LIST,\n        payload\n    }\n}\n\nexport const statCashboxItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.STATISTICS_CASHBOX_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.CASHBOX_ITEM,\n        payload\n    }\n}\n\nexport const getDocumentAction = (filter) => {\n    const params = serializers.csvFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(sprintf(API.STAT_CASHBOX_GET_DOCUMENT), {params})\n        .then((response) => {\n            fileDownload(response.data, 'договор.xls')\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_CASHBOX_GET_DOCUMENT,\n        payload\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/actions/statisticsCashboxt.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/Statistics/statDebtorsSerializer'\nimport fileDownload from 'react-file-download'\n\nexport const statDebtorsListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get((API.STAT_DEBTORS_LIST), {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_DEBTORS_LIST,\n        payload\n    }\n}\n\nexport const statDebtorsDataFetchAction = () => {\n    const payload = axios()\n        .get(API.STAT_DEBTORS_DATA)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_DEBTORS_DATA,\n        payload\n    }\n}\n\nexport const statDebtorsItemFetchAction = (id) => {\n    const params = serializers.itemSerializer(id)\n    const payload = axios()\n        .get(sprintf(API.STAT_DEBTORS_ITEM, id), {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_DEBTORS_ITEM,\n        payload\n    }\n}\n\nexport const statDebtorsOrderItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.ORDER_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.ORDER_ITEM,\n        payload\n    }\n}\nexport const getDocumentAction = (filter) => {\n    const params = serializers.csvFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(sprintf(API.STAT_DEBTORS_GET_DOCUMENT), {params})\n        .then((response) => {\n            fileDownload(response.data, 'договор.xls')\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STAT_DEBTORS_GET_DOCUMENT,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/statisticsDeptors.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/stockReceiveSerializer'\n\nexport const stockReceiveCreateAction = (formValues, supplyId, detail) => {\n    const requestData = serializers.createSerializer(formValues, detail)\n    const payload = axios()\n        .post(sprintf(API.STOCK_RECEIVE_CREATE, supplyId), requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STOCK_RECEIVE_CREATE,\n        payload\n    }\n}\n\nexport const stockReceiveListFetchAction = (filter, history) => {\n    const params = serializers.listFilterSerializer(filter.getParams(), history)\n    const payload = axios()\n        .get((API.STOCK_RECEIVE_LIST), {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STOCK_RECEIVE_LIST,\n        payload\n    }\n}\n\nexport const stockReceiveItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.STOCK_RECEIVE_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STOCK_RECEIVE_ITEM,\n        payload\n    }\n}\n\nexport const stockHistoryListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get((API.STOCK_HISTORY_LIST), {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STOCK_HISTORY_LIST,\n        payload\n    }\n}\n\nexport const stockTransferListFetchAction = (filter, history) => {\n    const params = serializers.listFilterSerializer(filter.getParams(), history)\n    const payload = axios()\n        .get((API.STOCK_TRANSFER_LIST), {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STOCK_TRANSFER_LIST,\n        payload\n    }\n}\n\nexport const stockTransferItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.STOCK_TRANSFER_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STOCK_TRANSFER_ITEM,\n        payload\n    }\n}\n\nexport const stockTransferItemAcceptAction = (id, stock) => {\n    const requestData = serializers.acceptSerializer(id, stock)\n    const payload = axios()\n        .post(API.STOCK_TRANSFER_ACCEPT, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STOCK_TRANSFER_ACCEPT,\n        payload\n    }\n}\n\nexport const stockReceiveItemConfirmAction = (id, status) => {\n    const payload = axios()\n        .post(sprintf(API.STOCK_RECEIVE_TRANSFER_CHANGE_STATUS, id), {status: status})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STOCK_RECEIVE_TRANSFER_CHANGE_STATUS,\n        payload\n    }\n}\n\nexport const stockReceiveItemReturnAction = (id) => {\n    const payload = axios()\n        .post(API.STOCK_RECEIVE_ACCEPT_ORDER_RETURN, {order_return: id})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.STOCK_RECEIVE_ACCEPT_ORDER_RETURN,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/stockReceive.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/Supply/supplySerializer'\n\nexport const supplyCreateAction = (formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n\n    const payload = axios()\n        .post(API.SUPPLY_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.SUPPLY_CREATE,\n        payload\n    }\n}\nexport const supplyDefectAction = (supplyId, productId) => {\n    const payload = axios()\n        .get(sprintf(API.SUPPLY_DEFECT, supplyId, productId))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.SUPPLY_DEFECT,\n        payload\n    }\n}\n\nexport const supplyDeleteAction = (id) => {\n    const payload = axios()\n        .post(API.SUPPLY_CANCEL, {pk: id})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.SUPPLY_CANCEL,\n        payload\n    }\n}\n\nexport const supplyUpdateAction = (id, formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .put(sprintf(API.SUPPLY_ITEM, id), requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.SUPPLY_UPDATE,\n        payload\n    }\n}\n\nexport const supplyListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(API.SUPPLY_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.SUPPLY_LIST,\n        payload\n    }\n}\n\nexport const supplyItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.SUPPLY_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.SUPPLY_ITEM,\n        payload\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/actions/supply.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/Supply/supplyExpenseSerializer'\n\nexport const supplyExpenseCreateAction = (formValues, id) => {\n    const requestData = serializers.createSerializer(formValues, id)\n    const payload = axios()\n        .post(API.SUPPLY_EXPENSE_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.SUPPLY_EXPENSE_CREATE,\n        payload\n    }\n}\n\nexport const supplyExpenseDeleteAction = (id) => {\n    const payload = axios()\n        .delete(sprintf(API.SUPPLY_EXPENSE_DELETE, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.SUPPLY_EXPENSE_DELETE,\n        payload\n    }\n}\n\nexport const supplyExpenseListFetchAction = (supplyId) => {\n    const params = serializers.expenseSupplySerializer(supplyId)\n    const payload = axios()\n        .get(API.SUPPLY_EXPENSE_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.SUPPLY_EXPENSE_LIST,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/supplyExpense.js","import _ from 'lodash'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/Transaction/transactionStockSerializer'\n\nexport const transactionStockListFetchAction = (filter, id) => {\n    const params = serializers.listFilterSerializer(filter.getParams(), id)\n    const payload = axios()\n        .get(API.TRANSACTION_STOCK_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.TRANSACTION_STOCK_LIST,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/transactionStock.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/Users/userShiftSerializer'\n\nexport const userShiftCreateAction = (formValues, manufacture) => {\n    const requestData = serializers.createSerializer(formValues, manufacture)\n    const payload = axios()\n        .post(API.USER_SHIFT_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.USER_SHIFT_CREATE,\n        payload\n    }\n}\n\nexport const userShiftDeleteAction = (id) => {\n    const payload = axios()\n        .delete(sprintf(API.USER_SHIFT_DELETE, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.USER_SHIFT_DELETE,\n        payload\n    }\n}\n\nexport const userShiftUpdateAction = (id, formValues, manufacture) => {\n    const requestData = serializers.createSerializer(formValues, manufacture)\n    const payload = axios()\n        .put(sprintf(API.USER_SHIFT_ITEM, id), requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.USER_SHIFT_UPDATE,\n        payload\n    }\n}\n\nexport const userShiftListFetchAction = (data, manufactureId) => {\n    const params = serializers.listFilterSerializer(data, manufactureId)\n    const payload = axios()\n        .get(API.USER_SHIFT_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.USER_SHIFT_LIST,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/userShift.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport axios from '../helpers/axios'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/Users/usersSerializer'\n\nexport const usersCreateAction = (formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .post(API.USERS_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.USERS_CREATE,\n        payload\n    }\n}\n\nexport const usersDeleteAction = (id) => {\n    const payload = axios()\n        .delete(sprintf(API.USERS_DELETE, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.USERS_DELETE,\n        payload\n    }\n}\n\nexport const usersUpdateAction = (id, formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .patch(sprintf(API.USERS_ITEM, id), requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.USERS_UPDATE,\n        payload\n    }\n}\n\nexport const usersListFetchAction = (filter) => {\n    const params = serializers.listFilterSerializer(filter.getParams())\n    const payload = axios()\n        .get(API.USERS_LIST, {params})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.USERS_LIST,\n        payload\n    }\n}\n\nexport const usersItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.USERS_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.USERS_ITEM,\n        payload\n    }\n}\n\nexport const userGroupListFetchAction = () => {\n    const payload = axios()\n        .get(API.USERS_GROUP)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.USERS_GROUP,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/users.js","import _ from 'lodash'\nimport axios from '../helpers/axios'\nimport sprintf from 'sprintf'\nimport * as API from '../constants/api'\nimport * as actionTypes from '../constants/actionTypes'\nimport * as serializers from '../serializers/zoneSerializer'\n\nexport const zoneCreateAction = (formValues) => {\n    const requestData = serializers.createSerializer(formValues)\n    const payload = axios()\n        .post(API.ZONE_CREATE, requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n\n    return {\n        type: actionTypes.ZONE_CREATE,\n        payload\n    }\n}\n\nexport const zoneListFetchAction = () => {\n    const payload = axios()\n        .get(API.ZONE_LIST)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.ZONE_LIST,\n        payload\n    }\n}\n\nexport const zoneItemFetchAction = (id) => {\n    const payload = axios()\n        .get(sprintf(API.ZONE_ITEM, id))\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.ZONE_ITEM,\n        payload\n    }\n}\n\nexport const zoneListSearchFetchAction = (search) => {\n    const payload = axios()\n        .get(API.ZONE_LIST, {params: {'search': search}})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.ZONE_LIST,\n        payload\n    }\n}\n\nexport const zoneStatisticsFetchAction = () => {\n    const payload = axios()\n        .get(API.ZONE_STAT)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.ZONE_STAT,\n        payload\n    }\n}\n\nexport const zoneBindAgentAction = (id, formValues) => {\n    const requestData = serializers.bindAgentSerializer(formValues)\n    const payload = axios()\n        .post(sprintf(API.ZONE_BIND_AGENT, id), requestData)\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.ZONE_BIND_AGENT,\n        payload\n    }\n}\n\nexport const zoneUnbindAgentAction = (detailId, agentId) => {\n    const payload = axios()\n        .post(sprintf(API.ZONE_UNBIND_AGENT, detailId), {'user_id': agentId})\n        .then((response) => {\n            return _.get(response, 'data')\n        })\n        .catch((error) => {\n            return Promise.reject(_.get(error, ['response', 'data']))\n        })\n    return {\n        type: actionTypes.ZONE_BIND_AGENT,\n        payload\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/actions/zones.js","import _ from 'lodash'\nimport React from 'react'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport moment from 'moment'\nimport Paper from 'material-ui/Paper'\nimport ChevronLeft from 'material-ui/svg-icons/navigation/chevron-left'\nimport ChevronRight from 'material-ui/svg-icons/navigation/chevron-right'\n\nconst border = '1px #efefef solid'\nconst enhance = compose(\n    injectSheet({\n        calendarWrapper: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            textTransform: 'capitalize',\n            userSelect: 'none'\n        },\n        calendarNav: {\n            extend: 'calendarWrapper',\n            color: '#666',\n            padding: '0 30px',\n            cursor: 'pointer',\n            lineHeight: '75px',\n            '& svg': {\n                width: '20px !important',\n                height: '20px !important',\n                color: 'inherit !important'\n            }\n        },\n        calendar: {\n            borderLeft: border,\n            borderRight: border\n        },\n        currentMonth: {\n            textAlign: 'center',\n            fontWeight: 'bold',\n            borderBottom: border,\n            padding: '10px'\n        },\n        currentDays: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: '5px'\n        },\n        day: {\n            height: '26px',\n            width: '26px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            cursor: 'pointer'\n        },\n        today: {\n            extend: 'day',\n            borderRadius: '50%',\n            background: '#92ce95',\n            color: '#fff',\n            fontWeight: '600',\n            position: 'relative',\n            '&:before': {\n                content: '\"\"',\n                position: 'absolute',\n                bottom: '-14px',\n                left: 'calc(50% - 6px)',\n                borderTop: '7px solid #cacaca',\n                borderLeft: '6px solid transparent',\n                borderRight: '6px solid transparent',\n                filter: 'blur(1px)'\n            },\n            '&:after': {\n                content: '\"\"',\n                position: 'absolute',\n                bottom: '-12px',\n                left: 'calc(50% - 6px)',\n                borderTop: '7px solid',\n                borderLeft: '6px solid transparent',\n                borderRight: '6px solid transparent'\n            }\n        }\n    })\n)\n\nconst ActivityCalendar = enhance((props) => {\n    const {classes, calendar, handleClickDay} = props\n\n    const ONE = 1\n    const monthFormat = (date, defaultText) => {\n        return (date) ? moment(date).locale('ru').format('MMMM') : defaultText\n    }\n    const selectedDay = _.get(calendar, 'selectedDay')\n    const selectedDate = _.get(calendar, 'selectedDate')\n    const handleNextMonth = _.get(calendar, 'handleNextMonth')\n    const handlePrevMonth = _.get(calendar, 'handlePrevMonth')\n\n    const selectedYear = moment(selectedDate).format('YYYY')\n\n    const getDaysArrayByMonth = () => {\n        let daysInMonth = moment(selectedDate).daysInMonth()\n        let arrDays = []\n\n        while (daysInMonth) {\n            const current = moment(selectedDate).date(daysInMonth)\n            arrDays.push(current)\n            daysInMonth--\n        }\n\n        return arrDays\n    }\n    const currentMonthDays = getDaysArrayByMonth()\n\n    const prevMonth = monthFormat(moment(selectedDate).subtract(ONE, 'month'))\n    const nextMonth = monthFormat(moment(selectedDate).add(ONE, 'month'))\n\n    const days = _.map(_.reverse(currentMonthDays), (item) => {\n        const day = _.toInteger(item.format('D'))\n        return (\n            <div\n                key={day}\n                onClick={() => { handleClickDay(day) }}\n                className={(day === selectedDay) ? classes.today : classes.day}>\n                {day}\n            </div>\n        )\n    })\n\n    return (\n        <Paper zDepth={1} className={classes.calendarWrapper}>\n            <div className={classes.calendarNav} onClick={() => { handlePrevMonth() }}>\n                <ChevronLeft/> <span>{prevMonth}</span>\n            </div>\n            <div className={classes.calendar}>\n                <div className={classes.currentMonth}>{monthFormat(selectedDate)} {selectedYear}</div>\n                <div className={classes.currentDays}>{days}</div>\n            </div>\n            <div className={classes.calendarNav} onClick={() => { handleNextMonth() }}>\n                <span>{nextMonth}</span> <ChevronRight/>\n            </div>\n        </Paper>\n    )\n})\n\nActivityCalendar.PropTypes = {\n}\n\nexport default ActivityCalendar\n\n\n\n// WEBPACK FOOTER //\n// src/components/Activity/ActivityCalendar.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport moment from 'moment'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport Paper from 'material-ui/Paper'\nimport numberFormat from '../../helpers/numberFormat'\nimport getConfig from '../../helpers/getConfig'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            minWidth: '300px',\n            height: '300px',\n            marginRight: '30px',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        padding: {\n            padding: '20px 30px'\n        },\n        block: {\n            paddingRight: '20px'\n        },\n        blockTitle: {\n            padding: '15px 0',\n            fontWeight: 'bold'\n        },\n        blockItems: {\n            overflowY: 'auto',\n            height: 'calc(100% - 80px)',\n            paddingRight: '10px'\n        },\n        tube: {\n            padding: '20px 15px',\n            marginBottom: '10px',\n            width: '300px'\n        },\n        tubeTitle: {\n            fontWeight: '600',\n            display: 'flex',\n            justifyContent: 'space-between'\n        },\n        tubeTime: {\n            fontSize: '10px',\n            color: '#999'\n        },\n        status: {\n            borderRadius: '2px',\n            height: '4px',\n            width: '30px'\n        },\n        statusGreen: {\n            extend: 'status',\n            background: '#92ce95'\n        },\n        statusRed: {\n            extend: 'status',\n            background: '#e57373'\n        },\n        tubeImg: {\n            marginTop: '10px',\n            '& img': {\n                width: '100%',\n                display: 'block',\n                cursor: 'pointer'\n            }\n        },\n        tubeImgDouble: {\n            extend: 'tubeImg',\n            display: 'flex',\n            justifyContent: 'space-between',\n            '& > div': {\n                width: 'calc(50% - 4px)',\n                position: 'relative',\n                '&:after': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    top: '8px',\n                    left: '8px',\n                    padding: '2px 8px',\n                    color: '#fff',\n                    background: '#333',\n                    opacity: '0.8',\n                    fontSize: '11px',\n                    fontWeight: '600'\n                },\n                '&:first-child:after': {\n                    content: '\"до\"'\n                },\n                '&:last-child:after': {\n                    content: '\"после\"'\n                }\n            }\n        },\n        tubeInfo: {\n            marginTop: '10px',\n            lineHeight: '15px'\n        }\n    })\n)\n\nconst dateFormat = (date, defaultText) => {\n    return (date) ? moment(date).locale('ru').format('DD MMM YYYY - HH:mm') : defaultText\n}\n\nconst ActivityDelivery = enhance((props) => {\n    const {\n        deliverylistData,\n        classes\n    } = props\n    const deliverylistLoading = _.get(deliverylistData, 'deliveryListLoading')\n    const deliveryList = _.map(_.get(deliverylistData, 'data'), (item) => {\n        const id = _.get(item, ['order', 'id'])\n        const currentCurrency = getConfig('PRIMARY_CURRENCY')\n        const amount = numberFormat(_.get(item, ['order', 'totalPrice']), currentCurrency)\n        const name = _.get(item, ['order', 'user', 'firstName']) + ' ' + _.get(item, ['order', 'user', 'secondName'])\n        const market = _.get(item, ['order', 'market', 'name'])\n        const createdDate = dateFormat(_.get(item, ['order', 'createdDate']))\n\n        return (\n            <Paper key={id} zDepth={1} className={classes.tube}>\n                <div className={classes.tubeTitle}>\n                    <span>{name}</span>\n                </div>\n                <div className={classes.tubeTime}>{createdDate}</div>\n                <div className={classes.tubeInfo}>Доставлено с магазина \"{market}\" на сумму {amount}</div>\n            </Paper>\n        )\n    })\n\n    if (_.isEmpty(deliveryList)) {\n        return false\n    } else if (deliverylistLoading) {\n        return (\n            <div className={classes.loader}>\n                <CircularProgress size={40} thickness={4}/>\n            </div>\n        )\n    }\n\n    return (\n        <div className={classes.block}>\n            <div className={classes.blockTitle}>Доставки</div>\n            <div className={classes.blockItems}>\n                {deliveryList}\n            </div>\n        </div>\n    )\n})\n\nActivityDelivery.PropTypes = {\n    returnlistData: PropTypes.object\n}\n\nexport default ActivityDelivery\n\n\n\n// WEBPACK FOOTER //\n// src/components/Activity/ActivityDelivery.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport moment from 'moment'\nimport numberFormat from '../../helpers/numberFormat'\nimport getConfig from '../../helpers/getConfig'\nimport paymentTypeFormat from '../../helpers/paymentTypeFormat'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport Paper from 'material-ui/Paper'\nimport InfiniteScroll from 'react-infinite-scroller'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            minWidth: '300px',\n            height: '300px',\n            marginRight: '30px',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        padding: {\n            padding: '20px 30px'\n        },\n        block: {\n            paddingRight: '20px'\n        },\n        blockTitle: {\n            padding: '15px 0',\n            fontWeight: 'bold'\n        },\n        blockItems: {\n            overflowY: 'auto',\n            height: 'calc(100% - 80px)',\n            paddingRight: '10px'\n        },\n        tube: {\n            padding: '20px 15px',\n            marginBottom: '10px',\n            width: '300px',\n            cursor: 'pointer',\n            transition: 'box-shadow 125ms ease-out !important',\n            '&:hover': {\n                boxShadow: 'rgba(0, 0, 0, 0.16) 0px 3px 10px, rgba(0, 0, 0, 0.23) 0px 3px 10px !important'\n            }\n        },\n        tubeTitle: {\n            fontWeight: '600',\n            display: 'flex',\n            justifyContent: 'space-between'\n        },\n        tubeTime: {\n            fontSize: '10px',\n            color: '#999'\n        },\n        status: {\n            borderRadius: '2px',\n            height: '4px',\n            width: '30px'\n        },\n        statusGreen: {\n            extend: 'status',\n            background: '#92ce95'\n        },\n        statusRed: {\n            extend: 'status',\n            background: '#e57373'\n        },\n        tubeImg: {\n            marginTop: '10px',\n            '& img': {\n                width: '100%',\n                display: 'block',\n                cursor: 'pointer'\n            }\n        },\n        tubeImgDouble: {\n            extend: 'tubeImg',\n            display: 'flex',\n            justifyContent: 'space-between',\n            '& > div': {\n                width: 'calc(50% - 4px)',\n                position: 'relative',\n                '&:after': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    top: '8px',\n                    left: '8px',\n                    padding: '2px 8px',\n                    color: '#fff',\n                    background: '#333',\n                    opacity: '0.8',\n                    fontSize: '11px',\n                    fontWeight: '600'\n                },\n                '&:first-child:after': {\n                    content: '\"до\"'\n                },\n                '&:last-child:after': {\n                    content: '\"после\"'\n                }\n            }\n        },\n        tubeInfo: {\n            marginTop: '10px',\n            lineHeight: '15px'\n        }\n    })\n)\n\nconst dateFormat = (date, defaultText) => {\n    return (date) ? moment(date).locale('ru').format('DD MMM YYYY - HH:mm') : defaultText\n}\n\nconst ActivityOrder = enhance((props) => {\n    const currentCurrency = getConfig('PRIMARY_CURRENCY')\n    const {\n        orderlistData,\n        classes,\n        orderDetails\n    } = props\n\n    const orderlistLoading = _.get(orderlistData, 'orderListLoading')\n    const orderList = _.map(_.get(orderlistData, 'data'), (item) => {\n        const id = _.get(item, ['order', 'id'])\n        const name = _.get(item, ['order', 'user', 'firstName']) + ' ' + _.get(item, ['order', 'user', 'secondName'])\n        const createdDate = dateFormat(_.get(item, ['order', 'createdDate']))\n        const orderPrice = numberFormat(_.get(item, ['order', 'totalPrice']), currentCurrency)\n        const marketName = _.get(item, ['order', 'market', 'name'])\n        const paymentType = paymentTypeFormat(_.get(item, ['order', 'paymentType']))\n\n        return (\n            <Paper key={id} zDepth={1} className={classes.tube} onClick={() => { orderDetails.handleOpenOrderDetails(id) }}>\n                <div className={classes.tubeTitle}>\n                    <span>{name}</span>\n                    <div className={classes.statusGreen}> </div>\n                </div>\n                <div className={classes.tubeTime}>{createdDate}</div>\n                <div className={classes.tubeInfo}>Сделка №{id} с магазина \"{marketName}\" на сумму {orderPrice} ({paymentType})\n                </div>\n            </Paper>\n        )\n    })\n\n    if (_.isEmpty(orderList)) {\n        return false\n    } else if (orderlistLoading) {\n        return (\n            <div className={classes.loader}>\n                <CircularProgress size={40} thickness={4}/>\n            </div>\n        )\n    }\n\n    return (\n        <div className={classes.block}>\n            <div className={classes.blockTitle}>Cделки</div>\n            <InfiniteScroll\n                pageStart={0}\n                loader={<div className={classes.loader}><CircularProgress size={30} thickness={3}/></div>}\n                useWindow={false}\n                className={classes.blockItems}>\n                {orderList}\n            </InfiniteScroll>\n        </div>\n    )\n})\n\nActivityOrder.PropTypes = {\n    orderlistData: PropTypes.object,\n    orderDetails: PropTypes.shape({\n        openOrderDetails: PropTypes.bool.isRequired,\n        orderItemLoading: PropTypes.bool.isRequired,\n        handleOpenOrderDetails: PropTypes.func.isRequired,\n        handleCloseOrderDetails: PropTypes.func.isRequired,\n        data: PropTypes.object\n    }).isRequired\n}\n\nexport default ActivityOrder\n\n\n\n// WEBPACK FOOTER //\n// src/components/Activity/ActivityOrder.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport moment from 'moment'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport Paper from 'material-ui/Paper'\nimport numberFormat from '../../helpers/numberFormat'\nimport InfiniteScroll from 'react-infinite-scroller'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            minWidth: '300px',\n            height: '300px',\n            marginRight: '30px',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        infiniteLoader: {\n            extend: 'loader',\n            height: '100px',\n            marginRight: '0'\n        },\n        padding: {\n            padding: '20px 30px'\n        },\n        block: {\n            paddingRight: '20px'\n        },\n        blockTitle: {\n            padding: '15px 0',\n            fontWeight: 'bold'\n        },\n        blockItems: {\n            overflowY: 'auto',\n            height: 'calc(100% - 80px)',\n            paddingRight: '10px'\n        },\n        tube: {\n            padding: '20px 15px',\n            marginBottom: '10px',\n            width: '300px'\n        },\n        tubeTitle: {\n            fontWeight: '600',\n            display: 'flex',\n            justifyContent: 'space-between'\n        },\n        tubeTime: {\n            fontSize: '10px',\n            color: '#999'\n        },\n        status: {\n            borderRadius: '2px',\n            height: '4px',\n            width: '30px'\n        },\n        statusGreen: {\n            extend: 'status',\n            background: '#92ce95'\n        },\n        statusRed: {\n            extend: 'status',\n            background: '#e57373'\n        },\n        tubeImg: {\n            marginTop: '10px',\n            '& img': {\n                width: '100%',\n                display: 'block',\n                cursor: 'pointer'\n            }\n        },\n        tubeImgDouble: {\n            extend: 'tubeImg',\n            display: 'flex',\n            justifyContent: 'space-between',\n            '& > div': {\n                width: 'calc(50% - 4px)',\n                position: 'relative',\n                '&:after': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    top: '8px',\n                    left: '8px',\n                    padding: '2px 8px',\n                    color: '#fff',\n                    background: '#333',\n                    opacity: '0.8',\n                    fontSize: '11px',\n                    fontWeight: '600'\n                },\n                '&:first-child:after': {\n                    content: '\"до\"'\n                },\n                '&:last-child:after': {\n                    content: '\"после\"'\n                }\n            }\n        },\n        tubeInfo: {\n            marginTop: '10px',\n            lineHeight: '15px'\n        }\n    })\n)\n\nconst dateFormat = (date, defaultText) => {\n    return (date) ? moment(date).locale('ru').format('DD MMM YYYY - HH:mm') : defaultText\n}\n\nconst ActivityPayment = enhance((props) => {\n    const {\n        paymentlistData,\n        classes\n    } = props\n\n    const paymentlistLoading = _.get(paymentlistData, 'paymentListLoading')\n    const paymentList = _.map(_.get(paymentlistData, 'data'), (item) => {\n        const id = _.get(item, ['clientTransaction', 'id'])\n        const currency = _.get(item, ['clientTransaction', 'currency', 'name'])\n        const amount = numberFormat(_.get(item, ['clientTransaction', 'amount']), currency)\n        const name = _.get(item, ['clientTransaction', 'user', 'firstName']) + ' ' + _.get(item, ['clientTransaction', 'user', 'secondName'])\n        const createdDate = dateFormat(_.get(item, ['clientTransaction', 'createdDate']))\n\n        return (\n            <Paper key={id} zDepth={1} className={classes.tube}>\n                <div className={classes.tubeTitle}>\n                    <span>{name}</span>\n                </div>\n                <div className={classes.tubeTime}>{createdDate}</div>\n                <div className={classes.tubeInfo}>Принято {amount} с магазина \"Магазин\"</div>\n            </Paper>\n        )\n    })\n\n    if (_.isEmpty(paymentList)) {\n        return false\n    } else if (paymentlistLoading) {\n        return (\n            <div className={classes.loader}>\n                <CircularProgress size={40} thickness={4}/>\n            </div>\n        )\n    }\n    const loadMore = () => {\n        return true\n    }\n\n    return (\n        <div className={classes.block}>\n            <div className={classes.blockTitle}>Визиты</div>\n            <div className={classes.blockItems}>\n                <InfiniteScroll\n                    pageStart={500}\n                    hasMore={true}\n                    loadMore={loadMore}\n                    loader={<div className={classes.infiniteLoader}><CircularProgress size={30} thickness={3}/></div>}\n                    useWindow={false}\n                    threshold={500}>\n                    {paymentList}\n                </InfiniteScroll>\n            </div>\n        </div>\n    )\n})\n\nActivityPayment.PropTypes = {\n    returnlistData: PropTypes.object\n}\n\nexport default ActivityPayment\n\n\n\n// WEBPACK FOOTER //\n// src/components/Activity/ActivityPayment.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport moment from 'moment'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport Paper from 'material-ui/Paper'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            minWidth: '300px',\n            height: '300px',\n            marginRight: '30px',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        padding: {\n            padding: '20px 30px'\n        },\n        block: {\n            paddingRight: '20px'\n        },\n        blockTitle: {\n            padding: '15px 0',\n            fontWeight: 'bold'\n        },\n        blockItems: {\n            overflowY: 'auto',\n            height: 'calc(100% - 80px)',\n            paddingRight: '10px'\n        },\n        tube: {\n            padding: '20px 15px',\n            marginBottom: '10px',\n            width: '300px'\n        },\n        tubeTitle: {\n            fontWeight: '600',\n            display: 'flex',\n            justifyContent: 'space-between'\n        },\n        tubeTime: {\n            fontSize: '10px',\n            color: '#999'\n        },\n        status: {\n            borderRadius: '2px',\n            height: '4px',\n            width: '30px'\n        },\n        statusGreen: {\n            extend: 'status',\n            background: '#92ce95'\n        },\n        statusRed: {\n            extend: 'status',\n            background: '#e57373'\n        },\n        tubeImg: {\n            marginTop: '10px',\n            '& img': {\n                width: '100%',\n                display: 'block',\n                cursor: 'pointer'\n            }\n        },\n        tubeImgDouble: {\n            extend: 'tubeImg',\n            display: 'flex',\n            justifyContent: 'space-between',\n            '& > div': {\n                width: 'calc(50% - 4px)',\n                position: 'relative',\n                '&:after': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    top: '8px',\n                    left: '8px',\n                    padding: '2px 8px',\n                    color: '#fff',\n                    background: '#333',\n                    opacity: '0.8',\n                    fontSize: '11px',\n                    fontWeight: '600'\n                },\n                '&:first-child:after': {\n                    content: '\"до\"'\n                },\n                '&:last-child:after': {\n                    content: '\"после\"'\n                }\n            }\n        },\n        tubeInfo: {\n            marginTop: '10px',\n            lineHeight: '15px'\n        }\n    })\n)\n\nconst dateFormat = (date, defaultText) => {\n    return (date) ? moment(date).locale('ru').format('DD MMM YYYY - HH:mm') : defaultText\n}\n\nconst ActivityReport = enhance((props) => {\n    const {\n        reportlistData,\n        reportImageData,\n        classes\n    } = props\n\n    const reportlistLoading = _.get(reportlistData, 'reportListLoading')\n    const reportList = _.map(_.get(reportlistData, 'data'), (item) => {\n        const id = _.get(item, ['report', 'id'])\n        const market = _.get(item, ['report', 'market', 'name'])\n        const comment = _.get(item, ['report', 'comment'])\n        const beforeImg = _.get(item, ['report', 'beforeImg', 'file'])\n        const afterImg = _.get(item, ['report', 'afterImg', 'file'])\n        const beforeImgId = _.get(item, ['report', 'beforeImg', 'id'])\n        const afterImgId = _.get(item, ['report', 'afterImg', 'id'])\n        const name = _.get(item, ['report', 'user', 'firstName']) + ' ' + _.get(item, ['report', 'user', 'secondName'])\n        const createdDate = dateFormat(_.get(item, ['report', 'createdDate']))\n\n        return (\n            <Paper key={id} zDepth={1} className={classes.tube}>\n                <div className={classes.tubeTitle}>\n                    <span>{name}</span>\n                </div>\n                <div className={classes.tubeTime}>{createdDate}</div>\n                <div className={classes.tubeImgDouble}>\n                    <div>\n                        <img src={beforeImg} alt=\"\" onClick={() => { reportImageData.handleOpenReportImage(beforeImgId) }}/>\n                    </div>\n                    <div>\n                        <img src={afterImg} alt=\"\" onClick={() => { reportImageData.handleOpenReportImage(afterImgId) }}/>\n                    </div>\n                </div>\n                <div className={classes.tubeInfo}>Отчет №{id}. Магазин \"{market}\", комментарий: {comment}</div>\n            </Paper>\n        )\n    })\n\n    if (_.isEmpty(reportList)) {\n        return false\n    } else if (reportlistLoading) {\n        return (\n            <div className={classes.loader}>\n                <CircularProgress size={40} thickness={4}/>\n            </div>\n        )\n    }\n\n    return (\n        <div className={classes.block}>\n            <div className={classes.blockTitle}>Отчеты</div>\n            <div className={classes.blockItems}>\n                {reportList}\n            </div>\n        </div>\n    )\n})\n\nActivityReport.PropTypes = {\n    reportlistData: PropTypes.object,\n    reportImageData: PropTypes.shape({\n        imageData: PropTypes.object.isRequired,\n        openReportImage: PropTypes.bool.isRequired,\n        handleOpenReportImage: PropTypes.func.isRequired,\n        handleCloseReportImage: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default ActivityReport\n\n\n\n// WEBPACK FOOTER //\n// src/components/Activity/ActivityReport.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport moment from 'moment'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport Paper from 'material-ui/Paper'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            minWidth: '300px',\n            height: '300px',\n            marginRight: '30px',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        padding: {\n            padding: '20px 30px'\n        },\n        block: {\n            paddingRight: '20px'\n        },\n        blockTitle: {\n            padding: '15px 0',\n            fontWeight: 'bold'\n        },\n        blockItems: {\n            overflowY: 'auto',\n            height: 'calc(100% - 80px)',\n            paddingRight: '10px'\n        },\n        tube: {\n            padding: '20px 15px',\n            marginBottom: '10px',\n            width: '300px'\n        },\n        tubeTitle: {\n            fontWeight: '600',\n            display: 'flex',\n            justifyContent: 'space-between'\n        },\n        tubeTime: {\n            fontSize: '10px',\n            color: '#999'\n        },\n        status: {\n            borderRadius: '2px',\n            height: '4px',\n            width: '30px'\n        },\n        statusGreen: {\n            extend: 'status',\n            background: '#92ce95'\n        },\n        statusRed: {\n            extend: 'status',\n            background: '#e57373'\n        },\n        tubeImg: {\n            marginTop: '10px',\n            '& img': {\n                width: '100%',\n                display: 'block',\n                cursor: 'pointer'\n            }\n        },\n        tubeImgDouble: {\n            extend: 'tubeImg',\n            display: 'flex',\n            justifyContent: 'space-between',\n            '& > div': {\n                width: 'calc(50% - 4px)',\n                position: 'relative',\n                '&:after': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    top: '8px',\n                    left: '8px',\n                    padding: '2px 8px',\n                    color: '#fff',\n                    background: '#333',\n                    opacity: '0.8',\n                    fontSize: '11px',\n                    fontWeight: '600'\n                },\n                '&:first-child:after': {\n                    content: '\"до\"'\n                },\n                '&:last-child:after': {\n                    content: '\"после\"'\n                }\n            }\n        },\n        tubeInfo: {\n            marginTop: '10px',\n            lineHeight: '15px'\n        }\n    })\n)\n\nconst dateFormat = (date, defaultText) => {\n    return (date) ? moment(date).locale('ru').format('DD MMM YYYY - HH:mm') : defaultText\n}\n\nconst ActivityReturn = enhance((props) => {\n    const {\n        returnlistData,\n        classes\n    } = props\n\n    const returnlistLoading = _.get(returnlistData, 'returnListLoading')\n    const returnList = _.map(_.get(returnlistData, 'data'), (item) => {\n        const id = _.get(item, ['return', 'id'])\n        const market = _.get(item, ['return', 'market', 'name'])\n        const comment = _.get(item, ['return', 'comment'])\n        const name = _.get(item, ['return', 'user', 'firstName']) + ' ' + _.get(item, ['return', 'user', 'secondName'])\n        const createdDate = dateFormat(_.get(item, ['return', 'createdDate']))\n\n        return (\n            <Paper key={id} zDepth={1} className={classes.tube}>\n                <div className={classes.tubeTitle}>\n                    <span>{name}</span>\n                </div>\n                <div className={classes.tubeTime}>{createdDate}</div>\n                <div className={classes.tubeInfo}>Причина отказа заказа с магазина \"{market}\": <strong>{comment}</strong></div>\n            </Paper>\n        )\n    })\n\n    if (_.isEmpty(returnList)) {\n        return false\n    } else if (returnlistLoading) {\n        return (\n            <div className={classes.loader}>\n                <CircularProgress size={40} thickness={4}/>\n            </div>\n        )\n    }\n\n    return (\n        <div className={classes.block}>\n            <div className={classes.blockTitle}>Возвраты</div>\n            <div className={classes.blockItems}>\n                {returnList}\n            </div>\n        </div>\n    )\n})\n\nActivityReturn.PropTypes = {\n    returnlistData: PropTypes.object\n}\n\nexport default ActivityReturn\n\n\n\n// WEBPACK FOOTER //\n// src/components/Activity/ActivityReturn.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport moment from 'moment'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport Paper from 'material-ui/Paper'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            minWidth: '300px',\n            height: '300px',\n            marginRight: '30px',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        padding: {\n            padding: '20px 30px'\n        },\n        block: {\n            paddingRight: '20px'\n        },\n        blockTitle: {\n            padding: '15px 0',\n            fontWeight: 'bold'\n        },\n        blockItems: {\n            overflowY: 'auto',\n            height: 'calc(100% - 80px)',\n            paddingRight: '10px'\n        },\n        tube: {\n            padding: '20px 15px',\n            marginBottom: '10px',\n            width: '300px'\n        },\n        tubeTitle: {\n            fontWeight: '600',\n            display: 'flex',\n            justifyContent: 'space-between'\n        },\n        tubeTime: {\n            fontSize: '10px',\n            color: '#999'\n        },\n        status: {\n            borderRadius: '2px',\n            height: '4px',\n            width: '30px'\n        },\n        statusGreen: {\n            extend: 'status',\n            background: '#92ce95'\n        },\n        statusRed: {\n            extend: 'status',\n            background: '#e57373'\n        },\n        tubeImg: {\n            marginTop: '10px',\n            '& img': {\n                width: '100%',\n                display: 'block',\n                cursor: 'pointer'\n            }\n        },\n        tubeImgDouble: {\n            extend: 'tubeImg',\n            display: 'flex',\n            justifyContent: 'space-between',\n            '& > div': {\n                width: 'calc(50% - 4px)',\n                position: 'relative',\n                '&:after': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    top: '8px',\n                    left: '8px',\n                    padding: '2px 8px',\n                    color: '#fff',\n                    background: '#333',\n                    opacity: '0.8',\n                    fontSize: '11px',\n                    fontWeight: '600'\n                },\n                '&:first-child:after': {\n                    content: '\"до\"'\n                },\n                '&:last-child:after': {\n                    content: '\"после\"'\n                }\n            }\n        },\n        tubeInfo: {\n            marginTop: '10px',\n            lineHeight: '15px'\n        }\n    })\n)\n\nconst dateFormat = (date, defaultText) => {\n    return (date) ? moment(date).locale('ru').format('DD MMM YYYY - HH:mm') : defaultText\n}\n\nconst ActivityVisit = enhance((props) => {\n    const {\n        visitlistData,\n        classes\n    } = props\n\n    const visitlistLoading = _.get(visitlistData, 'visitListLoading')\n    const visitList = _.map(_.get(visitlistData, 'data'), (item) => {\n        const id = _.get(item, ['visit', 'id'])\n        const market = _.get(item, ['visit', 'market', 'name'])\n        const comment = _.get(item, ['visit', 'comment'])\n        const name = _.get(item, ['visit', 'user', 'firstName']) + ' ' + _.get(item, ['visit', 'user', 'secondName'])\n        const createdDate = dateFormat(_.get(item, ['visit', 'createdDate']))\n\n        return (\n            <Paper key={id} zDepth={1} className={classes.tube}>\n                <div className={classes.tubeTitle}>\n                    <span>{name}</span>\n                </div>\n                <div className={classes.tubeTime}>{createdDate}</div>\n                <div className={classes.tubeInfo}>Причина отказа заказа с магазина \"{market}\": <strong>{comment}</strong></div>\n            </Paper>\n        )\n    })\n\n    if (_.isEmpty(visitList)) {\n        return false\n    } else if (visitlistLoading) {\n        return (\n            <div className={classes.loader}>\n                <CircularProgress size={40} thickness={4}/>\n            </div>\n        )\n    }\n\n    return (\n        <div className={classes.block}>\n            <div className={classes.blockTitle}>Визиты</div>\n            <div className={classes.blockItems}>\n                {visitList}\n            </div>\n        </div>\n    )\n})\n\nActivityVisit.PropTypes = {\n    visitlistData: PropTypes.object\n}\n\nexport default ActivityVisit\n\n\n\n// WEBPACK FOOTER //\n// src/components/Activity/ActivityVisit.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport * as ROUTES from '../../constants/routes'\nimport Container from '../Container'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport Paper from 'material-ui/Paper'\nimport NotFound from '../Images/not-found.png'\nimport ActivityCalendar from './ActivityCalendar'\nimport ActivityOrderDetails from '../Statistics/StatSaleDialog'\nimport ReportImage from '../Product/ProductShowPhotoDialog'\nimport ActivityOrder from './ActivityOrder'\nimport ActivityVisit from './ActivityVisit'\nimport ActivityReport from './ActivityReport'\nimport ActivityReturn from './ActivityReturn'\nimport ActivityPayment from './ActivityPayment'\nimport ActivityDelivery from './ActivityDelivery'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            minWidth: '100%',\n            height: 'calc(100% - 75px)',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        wrapper: {\n            height: 'calc(100% - 32px)',\n            margin: '0 -28px'\n        },\n        padding: {\n            padding: '20px 30px'\n        },\n        addButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        addButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px'\n        },\n        tubeWrapper: {\n            padding: '0 30px 25px',\n            marginTop: '10px',\n            height: 'calc(100% - 85px)'\n        },\n        horizontal: {\n            display: 'flex',\n            position: 'relative',\n            height: 'calc(100% + 16px)',\n            margin: '0 -30px',\n            padding: '0 30px',\n            overflowX: 'auto',\n            zIndex: '2'\n        },\n        block: {\n            paddingRight: '20px'\n        },\n        blockTitle: {\n            padding: '15px 0',\n            fontWeight: 'bold'\n        },\n        blockItems: {\n            overflowY: 'auto',\n            height: 'calc(100% - 80px)',\n            paddingRight: '10px'\n        },\n        tube: {\n            padding: '20px 15px',\n            marginBottom: '10px',\n            width: '300px',\n            cursor: 'pointer',\n            transition: 'box-shadow 125ms ease-out !important',\n            '&:hover': {\n                boxShadow: 'rgba(0, 0, 0, 0.16) 0px 3px 10px, rgba(0, 0, 0, 0.23) 0px 3px 10px !important'\n            }\n        },\n        tubeTitle: {\n            fontWeight: '600',\n            display: 'flex',\n            justifyContent: 'space-between'\n        },\n        tubeTime: {\n            fontSize: '10px',\n            color: '#999'\n        },\n        status: {\n            borderRadius: '2px',\n            height: '4px',\n            width: '30px'\n        },\n        statusGreen: {\n            extend: 'status',\n            background: '#92ce95'\n        },\n        statusRed: {\n            extend: 'status',\n            background: '#e57373'\n        },\n        tubeImg: {\n            marginTop: '10px',\n            '& img': {\n                width: '100%',\n                display: 'block',\n                cursor: 'pointer'\n            }\n        },\n        tubeImgDouble: {\n            extend: 'tubeImg',\n            display: 'flex',\n            justifyContent: 'space-between',\n            '& > div': {\n                width: 'calc(50% - 4px)',\n                position: 'relative',\n                '&:after': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    top: '8px',\n                    left: '8px',\n                    padding: '2px 8px',\n                    color: '#fff',\n                    background: '#333',\n                    opacity: '0.8',\n                    fontSize: '11px',\n                    fontWeight: '600'\n                },\n                '&:first-child:after': {\n                    content: '\"до\"'\n                },\n                '&:last-child:after': {\n                    content: '\"после\"'\n                }\n            }\n        },\n        tubeInfo: {\n            marginTop: '10px',\n            lineHeight: '15px'\n        },\n        horizontalScroll: {\n            position: 'fixed',\n            height: '25px',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            zIndex: '0',\n            transform: 'rotate(180deg)'\n        },\n        emptyQuery: {\n            background: 'url(' + NotFound + ') no-repeat center center',\n            backgroundSize: '200px',\n            padding: '230px 0 50px',\n            width: '300px',\n            margin: 'auto',\n            textAlign: 'center',\n            fontSize: '13px',\n            color: '#999 !important'\n        }\n    })\n)\n\nconst ActivityWrapper = enhance((props) => {\n    const {\n        orderlistData,\n        classes,\n        orderDetails,\n        visitlistData,\n        reportlistData,\n        reportImageData,\n        returnlistData,\n        paymentlistData,\n        deliverylistData,\n        calendar,\n        handleClickDay\n    } = props\n\n    const orderlistLoading = _.get(orderlistData, 'orderListLoading')\n    const visitlistLoading = _.get(visitlistData, 'visitListLoading')\n    const reportlistLoading = _.get(reportlistData, 'reportListLoading')\n    const returnlistLoading = _.get(returnlistData, 'returnListLoading')\n    const paymentlistLoading = _.get(paymentlistData, 'paymentListLoading')\n    const deliverylistLoading = _.get(deliverylistData, 'deliveryListLoading')\n\n    const orderListEmpty = _.isEmpty(_.get(orderlistData, 'data'))\n    const visitListEmpty = _.isEmpty(_.get(visitlistData, 'data'))\n    const reportListEmpty = _.isEmpty(_.get(reportlistData, 'data'))\n    const returnListEmpty = _.isEmpty(_.get(returnlistData, 'data'))\n    const paymentListEmpty = _.isEmpty(_.get(paymentlistData, 'data'))\n    const deliveryListEmpty = _.isEmpty(_.get(deliverylistData, 'data'))\n\n    let megaLoading = false\n    if (orderlistLoading &&\n        visitlistLoading &&\n        reportlistLoading &&\n        returnlistLoading &&\n        paymentlistLoading &&\n        deliverylistLoading) {\n        megaLoading = true\n    }\n    let emptyQuery = false\n    if (orderListEmpty && visitListEmpty && reportListEmpty && returnListEmpty && paymentListEmpty && deliveryListEmpty) {\n        emptyQuery = true\n    }\n\n    const tubeWrapper = (\n        <div className={classes.tubeWrapper}>\n            <div className={classes.horizontal}>\n                <ActivityOrder\n                    orderlistData={orderlistData}\n                    orderDetails={orderDetails}/>\n                <ActivityVisit\n                    visitlistData={visitlistData}/>\n                <ActivityReport\n                    reportImageData={reportImageData}\n                    reportlistData={reportlistData}/>\n                <ActivityReturn\n                    returnListData={returnlistData}/>\n                <ActivityPayment\n                    paymentlistData={paymentlistData}/>\n                <ActivityDelivery\n                    deliverylistData={deliverylistData}/>\n            </div>\n            <Paper className={classes.horizontalScroll}>\n            </Paper>\n        </div>\n    )\n\n    return (\n        <Container>\n            <SubMenu url={ROUTES.ACTIVITY_LIST_URL}/>\n\n            <div className={classes.wrapper}>\n                <ActivityCalendar\n                    calendar={calendar}\n                    handleClickDay={handleClickDay}\n                />\n                {megaLoading\n                    ? <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4}/>\n                    </div>\n                    : (!emptyQuery\n                        ? tubeWrapper\n                        : <div className={classes.emptyQuery}>\n                            <div>По вашему запросу ничего не найдено...</div>\n                        </div>)}\n            </div>\n\n            <ActivityOrderDetails\n                open={orderDetails.openOrderDetails}\n                loading={orderDetails.orderItemLoading}\n                onClose={orderDetails.handleCloseOrderDetails}\n                detailData={orderDetails}\n            />\n            <ReportImage\n                open={reportImageData.openReportImage}\n                loading={reportImageData.reportImageLoading}\n                onClose={reportImageData.handleCloseReportImage}\n                detailData={reportImageData.imageData}\n            />\n        </Container>\n    )\n})\n\nActivityWrapper.PropTypes = {\n    orderlistData: PropTypes.object,\n    visitlistData: PropTypes.object,\n    reportlistData: PropTypes.object,\n    returnlistData: PropTypes.object,\n    paymentlistData: PropTypes.object,\n    deliverylistData: PropTypes.object,\n    orderDetails: PropTypes.shape({\n        openOrderDetails: PropTypes.bool.isRequired,\n        orderItemLoading: PropTypes.bool.isRequired,\n        handleOpenOrderDetails: PropTypes.func.isRequired,\n        handleCloseOrderDetails: PropTypes.func.isRequired,\n        data: PropTypes.object\n    }).isRequired,\n    reportImageData: PropTypes.shape({\n        imageData: PropTypes.object.isRequired,\n        openReportImage: PropTypes.bool.isRequired,\n        handleOpenReportImage: PropTypes.func.isRequired,\n        handleCloseReportImage: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default ActivityWrapper\n\n\n\n// WEBPACK FOOTER //\n// src/components/Activity/ActivityWrapper.js","import ActivityWrapper from './ActivityWrapper'\nconst ORDER_DETAILS = 'orderDetails'\nconst IMAGE = 'image'\nconst DAY = 'day'\nconst DATE = 'date'\n\nexport {\n    ORDER_DETAILS,\n    IMAGE,\n    DAY,\n    DATE,\n    ActivityWrapper\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Activity/index.js","import React from 'react'\nimport SvgIcon from 'material-ui/SvgIcon'\n\nconst AddPlace = (props) => {\n    return (\n        <SvgIcon {...props} fill=\"#000000\" height=\"24\" viewBox=\"-255.4 385.6 24 23.5\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M-243.3,395.8c1.5,0,2.7-1.2,2.7-2.7c0-1.5-1.2-2.7-2.7-2.7c-1.5,0-2.7,1.2-2.7,2.7C-246,394.6-244.8,395.8-243.3,395.8z M-243.3,391.1c1.1,0,2,0.9,2,2c0,1.1-0.9,2-2,2s-2-0.9-2-2C-245.2,392-244.4,391.1-243.3,391.1z\"/>\n            <path d=\"M-235.7,400.2h-2.8l1.2-1.7c2.3-3,1.9-8-0.7-10.6c-1.4-1.4-3.3-2.2-5.3-2.2c-2,0-3.9,0.8-5.3,2.2c-2.6,2.6-3,7.6-0.7,10.6 l1.2,1.7h-2.9l-4.3,9h24L-235.7,400.2z M-248.7,398c-2-2.7-1.7-7.2,0.6-9.6c1.3-1.3,3-2,4.8-2s3.5,0.7,4.8,2 c2.4,2.4,2.7,6.8,0.6,9.6l-5.4,7.8l-3.9-5.6l0,0L-248.7,398z M-250.6,400.9h3l4.3,6.2l4.3-6.2h2.9l3.6,7.5h-21.5L-250.6,400.9z\"/>\n        </SvgIcon>\n\n    )\n}\n\nexport default AddPlace\n\n\n\n// WEBPACK FOOTER //\n// src/components/AddPlace/AddPlace.js","import AddPlace from './AddPlace'\n\nexport default AddPlace\n\n\n\n// WEBPACK FOOTER //\n// src/components/AddPlace/index.js","import React from 'react'\nimport SvgIcon from 'material-ui/SvgIcon'\n\nconst CloseIcon = (props) => {\n    return (\n        <SvgIcon {...props} fill=\"#000000\" height=\"16\" viewBox=\"0 0 24 24\" width=\"16\"\n                 xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n            <path\n                d=\"M20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zm0 14H4v-6h16v6zm0-10H4V6h16v2z\"/>\n        </SvgIcon>\n    )\n}\n\nexport default CloseIcon\n\n\n\n// WEBPACK FOOTER //\n// src/components/BankPayment/BankPayment.js","import BankPayment from './BankPayment'\n\nexport default BankPayment\n\n\n\n// WEBPACK FOOTER //\n// src/components/BankPayment/index.js","import _ from 'lodash'\nimport moment from 'moment'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport {Row, Col} from 'react-flexbox-grid'\nimport IconButton from 'material-ui/IconButton'\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport Edit from 'material-ui/svg-icons/image/edit'\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\nimport IconMenu from 'material-ui/IconMenu'\nimport MenuItem from 'material-ui/MenuItem'\nimport * as ROUTES from '../../constants/routes'\nimport GridList from '../GridList'\nimport Container from '../Container'\nimport BrandCreateDialog from './BrandCreateDialog'\nimport ConfirmDialog from '../ConfirmDialog'\nimport SubMenu from '../SubMenu'\nimport Tooltip from '../ToolTip'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'id',\n        xs: 2,\n        title: 'Id'\n    },\n    {\n        sorting: true,\n        name: 'name',\n        xs: 5,\n        title: 'Наименование'\n    },\n    {\n        sorting: true,\n        xs: 4,\n        name: 'created_date',\n        title: 'Дата создания'\n    },\n    {\n        sorting: true,\n        xs: 1,\n        name: 'actions',\n        title: ''\n    }\n\n]\n\nconst enhance = compose(\n    injectSheet({\n        addButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        addButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px'\n        },\n        marginLeft: {\n            marginLeft: '20px !important'\n        },\n        right: {\n            textAlign: 'right'\n        }\n    })\n)\n\nconst BrandGridList = enhance((props) => {\n    const {\n        filter,\n        createDialog,\n        updateDialog,\n        actionsDialog,\n        confirmDialog,\n        listData,\n        detailData,\n        classes\n    } = props\n\n    const actions = (\n        <div>\n            <IconButton onTouchTap={actionsDialog.handleActionEdit}>\n                <ModEditorIcon />\n            </IconButton>\n\n            <IconButton onTouchTap={actionsDialog.handleActionDelete}>\n                <DeleteIcon />\n            </IconButton>\n        </div>\n    )\n\n    const brandDetail = (\n        <span>a</span>\n    )\n\n    const brandList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\n        const iconButton = (\n            <IconButton style={{padding: '0 12px'}}>\n                <MoreVertIcon />\n            </IconButton>\n        )\n        return (\n            <Row key={id}>\n                <Col xs={2}>{id}</Col>\n                <Col xs={5}>{name}</Col>\n                <Col xs={4}>{createdDate}</Col>\n                <Col xs={1} className={classes.right}>\n                    <IconMenu\n                        iconButtonElement={iconButton}\n                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\n                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\n                        <MenuItem\n                            primaryText=\"Изменить\"\n                            leftIcon={<Edit />}\n                            onTouchTap={() => { updateDialog.handleOpenUpdateDialog(id) }}\n                        />\n                        <MenuItem\n                            primaryText=\"Удалить \"\n                            leftIcon={<DeleteIcon />}\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(id) }}\n                        />\n                    </IconMenu>\n                </Col>\n            </Row>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: brandList,\n        loading: _.get(listData, 'listLoading')\n    }\n    return (\n        <Container>\n            <SubMenu url={ROUTES.BRAND_LIST_URL}/>\n            <div className={classes.addButtonWrapper}>\n                <Tooltip position=\"left\" text=\"Добавить бренд\">\n                    <FloatingActionButton\n                        mini={true}\n                        className={classes.addButton}\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\n                        <ContentAdd />\n                    </FloatingActionButton>\n                </Tooltip>\n            </div>\n            <GridList\n                filter={filter}\n                list={list}\n                detail={brandDetail}\n                actionsDialog={actions}\n            />\n\n            <BrandCreateDialog\n                open={createDialog.openCreateDialog}\n                loading={createDialog.createLoading}\n                onClose={createDialog.handleCloseCreateDialog}\n                onSubmit={createDialog.handleSubmitCreateDialog}\n            />\n\n            <BrandCreateDialog\n                isUpdate={true}\n                initialValues={updateDialog.initialValues}\n                open={updateDialog.openUpdateDialog}\n                loading={updateDialog.updateLoading}\n                onClose={updateDialog.handleCloseUpdateDialog}\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\n            />\n\n            {detailData.data && <ConfirmDialog\n                type=\"delete\"\n                message={_.get(detailData, ['data', 'name'])}\n                loading={confirmDialog.confirmLoading}\n                onClose={confirmDialog.handleCloseConfirmDialog}\n                onSubmit={confirmDialog.handleSendConfirmDialog}\n                open={confirmDialog.openConfirmDialog}\n            />}\n        </Container>\n    )\n})\n\nBrandGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    createDialog: PropTypes.shape({\n        createLoading: PropTypes.bool.isRequired,\n        openCreateDialog: PropTypes.bool.isRequired,\n        handleOpenCreateDialog: PropTypes.func.isRequired,\n        handleCloseCreateDialog: PropTypes.func.isRequired,\n        handleSubmitCreateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    confirmDialog: PropTypes.shape({\n        confirmLoading: PropTypes.bool.isRequired,\n        openConfirmDialog: PropTypes.bool.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleSendConfirmDialog: PropTypes.func.isRequired\n    }).isRequired,\n    updateDialog: PropTypes.shape({\n        updateLoading: PropTypes.bool.isRequired,\n        openUpdateDialog: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    actionsDialog: PropTypes.shape({\n        handleActionEdit: PropTypes.func.isRequired,\n        handleActionDelete: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default BrandGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Brand/BrandGridList.js","import BrandGridList from './BrandGridList'\nimport {BRAND_CREATE_DIALOG_OPEN} from './BrandCreateDialog'\n\nconst BRAND_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nconst BRAND_DELETE_DIALOG_OPEN = 'openDeleteDialog'\n\nexport {\n    BRAND_UPDATE_DIALOG_OPEN,\n    BRAND_CREATE_DIALOG_OPEN,\n    BRAND_DELETE_DIALOG_OPEN,\n    BrandGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Brand/index.js","import React from 'react'\nimport SvgIcon from 'material-ui/SvgIcon'\n\nconst CloseIcon = (props) => {\n    return (\n        <SvgIcon {...props} fill=\"#000000\" height=\"18\" viewBox=\"0 0 24 24\" width=\"18\"\n                 xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M15 4c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z\"/>\n            <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n            <path d=\"M3 12c0-2.61 1.67-4.83 4-5.65V4.26C3.55 5.15 1 8.27 1 12s2.55 6.85 6 7.74v-2.09c-2.33-.82-4-3.04-4-5.65z\"/>\n        </SvgIcon>\n    )\n}\n\nexport default CloseIcon\n\n\n\n// WEBPACK FOOTER //\n// src/components/CashPayment/CashPayment.js","import CashPayment from './CashPayment'\n\nexport default CashPayment\n\n\n\n// WEBPACK FOOTER //\n// src/components/CashPayment/index.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Row, Col} from 'react-flexbox-grid'\nimport IconButton from 'material-ui/IconButton'\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\nimport IconMenu from 'material-ui/IconMenu'\nimport MenuItem from 'material-ui/MenuItem'\nimport * as ROUTES from '../../constants/routes'\nimport GridList from '../GridList'\nimport Container from '../Container'\nimport CashboxCreateDialog from './CashboxCreateDialog'\nimport ConfirmDialog from '../ConfirmDialog'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\nimport Edit from 'material-ui/svg-icons/image/edit'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport Tooltip from '../ToolTip'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'id',\n        title: 'Id',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'name',\n        title: 'Name',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'currency',\n        title: 'Валюта',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'cashier',\n        title: 'Кассир',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'type',\n        title: 'Тип',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: '',\n        title: '',\n        xs: 2\n    }\n]\n\nconst enhance = compose(\n    injectSheet({\n        addButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        addButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px'\n        }\n    }),\n)\n\nconst CashboxGridList = enhance((props) => {\n    const {\n        filter,\n        createDialog,\n        updateDialog,\n        actionsDialog,\n        confirmDialog,\n        listData,\n        detailData,\n        classes\n    } = props\n\n    const actions = (\n        <div>\n            <IconButton onTouchTap={actionsDialog.handleActionEdit}>\n                <ModEditorIcon />\n            </IconButton>\n\n            <IconButton onTouchTap={actionsDialog.handleActionDelete}>\n                <DeleteIcon />\n            </IconButton>\n        </div>\n    )\n\n    const cashboxDetail = (\n        <span>a</span>\n    )\n    const bank = 1\n    const cashboxList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        const currency = _.get(item, ['currency', 'name']) || 'N/A'\n        const cashier = _.get(item, ['cashier', 'firstName']) + ' ' + _.get(item, ['cashier', 'secondName'])\n        const type = _.toInteger(_.get(item, 'type')) === bank ? 'банковский счет' : 'наличный'\n        const iconButton = (\n            <IconButton style={{padding: '0 12px'}}>\n                <MoreVertIcon />\n            </IconButton>\n        )\n        return (\n            <Row key={id}>\n                <Col xs={2}>{id}</Col>\n                <Col xs={2}>{name}</Col>\n                <Col xs={2}>{currency}</Col>\n                <Col xs={2}>{cashier}</Col>\n                <Col xs={2}>{type}</Col>\n                <Col xs={2} style={{textAlign: 'right'}}>\n                    <IconMenu\n                        iconButtonElement={iconButton}\n                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\n                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\n                        <MenuItem\n                            primaryText=\"Изменить\"\n                            leftIcon={<Edit />}\n                            onTouchTap={() => { updateDialog.handleOpenUpdateDialog(id) }}\n                        />\n                        <MenuItem\n                            primaryText=\"Удалить \"\n                            leftIcon={<DeleteIcon />}\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(id) }}\n                        />\n                    </IconMenu>\n                </Col>\n            </Row>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: cashboxList,\n        loading: _.get(listData, 'listLoading')\n    }\n\n    return (\n        <Container>\n            <SubMenu url={ROUTES.CASHBOX_LIST_URL}/>\n\n            <div className={classes.addButtonWrapper}>\n                <Tooltip position=\"left\" text=\"Добавить кассу\">\n                    <FloatingActionButton\n                        mini={true}\n                        className={classes.addButton}\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\n                        <ContentAdd />\n                    </FloatingActionButton>\n                </Tooltip>\n            </div>\n            <GridList\n                filter={filter}\n                list={list}\n                detail={cashboxDetail}\n                actionsDialog={actions}\n            />\n\n            <CashboxCreateDialog\n                open={createDialog.openCreateDialog}\n                loading={createDialog.createLoading}\n                onClose={createDialog.handleCloseCreateDialog}\n                onSubmit={createDialog.handleSubmitCreateDialog}\n            />\n\n            <CashboxCreateDialog\n                initialValues={updateDialog.initialValues}\n                isUpdate={true}\n                open={updateDialog.openUpdateDialog}\n                loading={updateDialog.updateLoading}\n                onClose={updateDialog.handleCloseUpdateDialog}\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\n            />\n\n            {detailData.data && <ConfirmDialog\n                type=\"delete\"\n                message={_.get(detailData, ['data', 'name'])}\n                loading={confirmDialog.confirmLoading}\n                onClose={confirmDialog.handleCloseConfirmDialog}\n                onSubmit={confirmDialog.handleSendConfirmDialog}\n                open={confirmDialog.openConfirmDialog}\n            />}\n        </Container>\n    )\n})\n\nCashboxGridList.propTypes = {\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    createDialog: PropTypes.shape({\n        createLoading: PropTypes.bool.isRequired,\n        openCreateDialog: PropTypes.bool.isRequired,\n        handleOpenCreateDialog: PropTypes.func.isRequired,\n        handleCloseCreateDialog: PropTypes.func.isRequired,\n        handleSubmitCreateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    confirmDialog: PropTypes.shape({\n        confirmLoading: PropTypes.bool.isRequired,\n        openConfirmDialog: PropTypes.bool.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleSendConfirmDialog: PropTypes.func.isRequired\n    }).isRequired,\n    updateDialog: PropTypes.shape({\n        updateLoading: PropTypes.bool.isRequired,\n        openUpdateDialog: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    actionsDialog: PropTypes.shape({\n        handleActionEdit: PropTypes.func.isRequired,\n        handleActionDelete: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default CashboxGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Cashbox/CashboxGridList.js","import CashboxGridList from './CashboxGridList'\nimport {CASHBOX_CREATE_DIALOG_OPEN} from './CashboxCreateDialog'\nconst CASHBOX_DELETE_DIALOG_OPEN = 'openDeleteDialog'\n\nconst CASHBOX_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nexport {\n    CASHBOX_CREATE_DIALOG_OPEN,\n    CASHBOX_UPDATE_DIALOG_OPEN,\n    CASHBOX_DELETE_DIALOG_OPEN,\n    CashboxGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Cashbox/index.js","import _ from 'lodash'\nimport React from 'react'\nimport moment from 'moment'\nimport PropTypes from 'prop-types'\nimport {compose, withState} from 'recompose'\nimport injectSheet from 'react-jss'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport Edit from 'material-ui/svg-icons/image/edit'\nimport Delete from 'material-ui/svg-icons/action/delete'\nimport IconButton from 'material-ui/IconButton'\nimport {Row, Col} from 'react-flexbox-grid'\nimport Tooltip from '../ToolTip'\n\nconst colorBlue = '#12aaeb !important'\nconst enhance = compose(\n    injectSheet({\n        dottedList: {\n            padding: '20px 0'\n        },\n        wrapper: {\n            color: '#333 !important',\n            width: '100%',\n            display: 'flex',\n            flexWrap: 'wrap',\n            '& a': {\n                color: colorBlue\n            }\n        },\n        loader: {\n            position: 'absolute',\n            display: 'flex',\n            justifyContent: 'center',\n            width: '100%'\n        },\n        title: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            width: '100%',\n            height: '65px',\n            padding: '0 30px',\n            borderBottom: '1px #efefef solid',\n            position: 'relative'\n        },\n        container: {\n            display: 'flex',\n            width: '100%'\n        },\n        sides: {\n            flexBasis: '27%'\n        },\n        leftSide: {\n            extend: 'sides',\n            borderRight: '1px #efefef solid',\n            padding: '20px 30px'\n        },\n        rightSide: {\n            extend: 'sides',\n            borderLeft: '1px #efefef solid',\n            padding: '20px 30px'\n        },\n        body: {\n            flexBasis: '66%',\n            padding: '20px 30px',\n            '& .dottedList': {\n                padding: '10px 0',\n                '&:after': {\n                    left: '0.5rem',\n                    right: '0.5rem'\n                },\n                '&:first-child': {\n                    padding: '0 0 10px'\n                },\n                '&:last-child': {\n                    padding: '10px 0 0',\n                    '&:after': {\n                        display: 'none'\n                    }\n                }\n            }\n        },\n        titleLabel: {\n            fontSize: '18px',\n            color: '#333',\n            fontWeight: '700',\n            cursor: 'pointer'\n        },\n        titleButtons: {\n            display: 'flex',\n            justifyContent: 'flex-end'\n        },\n        bodyTitle: {\n            fontWeight: '600',\n            marginBottom: '10px'\n        },\n        closeDetail: {\n            position: 'absolute',\n            left: '0',\n            top: '0',\n            right: '0',\n            bottom: '0',\n            cursor: 'pointer',\n            zIndex: '1'\n        }\n    }),\n    withState('openDetails', 'setOpenDetails', false)\n)\n\nconst iconStyle = {\n    icon: {\n        color: '#666',\n        width: 20,\n        height: 20\n    },\n    button: {\n        width: 48,\n        height: 48,\n        padding: 0\n    }\n}\n\nconst ClientDetails = enhance((props) => {\n    const {classes,\n        loading,\n        data,\n        updateDialog,\n        confirmDialog,\n        handleCloseDetail\n    } = props\n    const detId = _.get(data, 'id')\n    const contacts = _.get(data, 'contacts')\n    const date = moment(_.get(data, 'createdDate')).format('DD.MM.YYYY')\n    const address = _.get(data, 'address') || 'N/A'\n    const providerName = _.get(data, 'name')\n\n    if (loading) {\n        return (\n            <div className={classes.loader}>\n                <div>\n                    <CircularProgress size={40} thickness={4}/>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className={classes.wrapper} key={detId}>\n            <div className={classes.title}>\n                <div className={classes.titleLabel}>{providerName}</div>\n                <div className={classes.closeDetail}\n                     onClick={handleCloseDetail}>\n                </div>\n                <div className={classes.titleButtons}>\n                    <Tooltip position=\"bottom\" text=\"Изменить\">\n                        <IconButton\n                            iconStyle={iconStyle.icon}\n                            style={iconStyle.button}\n                            touch={true}\n                            onTouchTap={ () => { updateDialog.handleOpenUpdateDialog(detId) }}>\n                            <Edit />\n                        </IconButton>\n                    </Tooltip>\n                    <Tooltip position=\"bottom\" text=\"Удалить\">\n                        <IconButton\n                            iconStyle={iconStyle.icon}\n                            style={iconStyle.button}\n                            touch={true}\n                            onTouchTap={confirmDialog.handleOpenConfirmDialog}>\n                            <Delete />\n                        </IconButton>\n                    </Tooltip>\n                </div>\n            </div>\n            <div className={classes.container}>\n                <div className={classes.leftSide}>\n                    <div className={classes.bodyTitle}>Адрес</div>\n                    <div>{address}</div>\n                </div>\n                <div className={classes.body}>\n                    <div className={classes.bodyTitle}>Контакты</div>\n                    <div>\n                        {_.map(contacts, (item) => {\n                            const name = _.get(item, 'name')\n                            const phone = _.get(item, 'telephone')\n                            const email = _.get(item, 'email')\n                            return (\n                                <Row key={item.id} className=\"dottedList\">\n                                    <Col xs={4}>{name}</Col>\n                                    <Col xs={4}>{email}</Col>\n                                    <Col xs={4}>{phone}</Col>\n                                </Row>\n                            )\n                        })}\n                    </div>\n                </div>\n                <div className={classes.rightSide}>\n                    <div className={classes.bodyTitle}>Дата добавления</div>\n                    <div>{date}</div>\n                </div>\n            </div>\n        </div>\n    )\n})\n\nClientDetails.propTypes = {\n    data: PropTypes.object.isRequired,\n    loading: PropTypes.bool.isRequired,\n    detailData: PropTypes.object,\n    updateDialog: PropTypes.shape({\n        updateLoading: PropTypes.bool.isRequired,\n        openUpdateDialog: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    confirmDialog: PropTypes.shape({\n        openConfirmDialog: PropTypes.bool.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleSendConfirmDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default ClientDetails\n\n\n\n// WEBPACK FOOTER //\n// src/components/Client/ClientDetails.js","import _ from 'lodash'\nimport moment from 'moment'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Row, Col} from 'react-flexbox-grid'\nimport sprintf from 'sprintf'\nimport * as ROUTES from '../../constants/routes'\nimport GridList from '../GridList'\nimport ClientDetails from './ClientDetails'\nimport Container from '../Container'\nimport ClientCreateDialog from './ClientCreateDialog'\nimport ConfirmDialog from '../ConfirmDialog'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport Tooltip from '../ToolTip'\nimport {Link} from 'react-router'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'id',\n        xs: 2,\n        title: 'Id'\n    },\n    {\n        sorting: true,\n        name: 'name',\n        xs: 6,\n        title: 'Наименование'\n    },\n    {\n        sorting: true,\n        xs: 3,\n        name: 'created_date',\n        title: 'Дата создания'\n    },\n    {\n        sorting: false,\n        xs: 1,\n        name: 'actions',\n        title: ''\n    }\n]\n\nconst colorBlue = '#12aaeb !important'\nconst enhance = compose(\n    injectSheet({\n        addButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        addButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px'\n        },\n        actionBtn: {\n            height: '48px'\n        },\n        wrapper: {\n            color: '#333 !important',\n            width: '100%',\n            display: 'flex',\n            flexWrap: 'wrap',\n            '& a': {\n                color: colorBlue\n            }\n        },\n        title: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            width: '100%',\n            height: '65px',\n            padding: '0 30px',\n            borderBottom: '1px #efefef solid'\n        },\n        container: {\n            display: 'flex',\n            width: '100%'\n        },\n        sides: {\n            flexBasis: '27%'\n        },\n        leftSide: {\n            extend: 'sides',\n            borderRight: '1px #efefef solid',\n            padding: '20px 30px'\n        },\n        rightSide: {\n            extend: 'sides',\n            borderLeft: '1px #efefef solid',\n            padding: '20px 30px'\n        },\n        body: {\n            flexBasis: '66%',\n            padding: '20px 30px',\n            '& .dottedList': {\n                padding: '10px 0',\n                '&:after': {\n                    left: '0.5rem',\n                    right: '0.5rem'\n                },\n                '&:first-child': {\n                    padding: '0 0 10px'\n                },\n                '&:last-child': {\n                    padding: '10px 0 0',\n                    '&:after': {\n                        display: 'none'\n                    }\n                }\n            }\n        },\n        titleLabel: {\n            fontSize: '18px',\n            color: '#333',\n            fontWeight: '700'\n        },\n        titleButtons: {\n            display: 'flex',\n            justifyContent: 'flex-end'\n        },\n        bodyTitle: {\n            fontWeight: '600',\n            marginBottom: '10px'\n        },\n        listRow: {\n            position: 'relative',\n            '& > a': {\n                display: 'flex',\n                alignItems: 'center',\n                position: 'absolute',\n                top: '0',\n                left: '-30px',\n                right: '-30px',\n                bottom: '0',\n                padding: '0 30px',\n                '& > div': {\n                    '&:first-child': {\n                        paddingLeft: '0'\n                    },\n                    '&:last-child': {\n                        paddingRight: '0'\n                    }\n                }\n            }\n        }\n    })\n)\nconst ClientGridList = enhance((props) => {\n    const {\n        filter,\n        createDialog,\n        updateDialog,\n        confirmDialog,\n        listData,\n        detailData,\n        classes\n    } = props\n    const clientDetail = (\n        <ClientDetails\n            key={_.get(detailData, 'id')}\n            data={_.get(detailData, 'data') || {}}\n            confirmDialog={confirmDialog}\n            loading={_.get(detailData, 'detailLoading')}\n            updateDialog={updateDialog}\n            handleCloseDetail={_.get(detailData, 'handleCloseDetail')}\n        />\n    )\n\n    const clientList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\n        return (\n            <Row key={id} className={classes.listRow}>\n                <Link to={{\n                    pathname: sprintf(ROUTES.CLIENT_ITEM_PATH, id),\n                    query: filter.getParams()\n                }}>\n                    <Col xs={2}>{id}</Col>\n                    <Col xs={6}>{name}</Col>\n                    <Col xs={3}>{createdDate}</Col>\n            </Link>\n            </Row>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: clientList,\n        loading: _.get(listData, 'listLoading')\n    }\n\n    return (\n        <Container>\n            <SubMenu url={ROUTES.CLIENT_LIST_URL}/>\n            <div className={classes.addButtonWrapper}>\n                <Tooltip position=\"left\" text=\"Добавить клиента\">\n                    <FloatingActionButton\n                        mini={true}\n                        className={classes.addButton}\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\n                        <ContentAdd />\n                    </FloatingActionButton>\n                </Tooltip>\n            </div>\n\n            <GridList\n                filter={filter}\n                list={list}\n                detail={clientDetail}\n            />\n\n            <ClientCreateDialog\n                open={createDialog.openCreateDialog}\n                loading={createDialog.createLoading}\n                onClose={createDialog.handleCloseCreateDialog}\n                onSubmit={createDialog.handleSubmitCreateDialog}\n            />\n\n            <ClientCreateDialog\n                isUpdate={true}\n                initialValues={updateDialog.initialValues}\n                open={updateDialog.openUpdateDialog}\n                loading={updateDialog.updateLoading}\n                onClose={updateDialog.handleCloseUpdateDialog}\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\n            />\n\n            {detailData.data && <ConfirmDialog\n                type=\"delete\"\n                message={_.get(detailData, ['data', 'name'])}\n                onClose={confirmDialog.handleCloseConfirmDialog}\n                onSubmit={confirmDialog.handleSendConfirmDialog}\n                open={confirmDialog.openConfirmDialog}\n            />}\n        </Container>\n    )\n})\n\nClientGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    tabData: PropTypes.object.isRequired,\n    createDialog: PropTypes.shape({\n        createLoading: PropTypes.bool.isRequired,\n        openCreateDialog: PropTypes.bool.isRequired,\n        handleOpenCreateDialog: PropTypes.func.isRequired,\n        handleCloseCreateDialog: PropTypes.func.isRequired,\n        handleSubmitCreateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    confirmDialog: PropTypes.shape({\n        openConfirmDialog: PropTypes.bool.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleSendConfirmDialog: PropTypes.func.isRequired\n    }).isRequired,\n    updateDialog: PropTypes.shape({\n        updateLoading: PropTypes.bool.isRequired,\n        openUpdateDialog: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default ClientGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Client/ClientGridList.js","import ClientGridList from './ClientGridList'\nimport {CLIENT_CREATE_DIALOG_OPEN, CLIENT_UPDATE_DIALOG_OPEN} from './ClientCreateDialog'\n\nexport {\n    CLIENT_CREATE_DIALOG_OPEN,\n    CLIENT_UPDATE_DIALOG_OPEN,\n    ClientGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Client/index.js","import _ from 'lodash'\nimport moment from 'moment'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Row, Col} from 'react-flexbox-grid'\nimport IconButton from 'material-ui/IconButton'\nimport * as ROUTES from '../../constants/routes'\nimport GridList from '../GridList'\nimport Container from '../Container'\nimport ClientBalanceFilterForm from './ClientBalanceFilterForm'\nimport ClientBalanceCreateDialog from './ClientBalanceInfoDialog'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport List from 'material-ui/svg-icons/action/list'\nimport numberFormat from '../../helpers/numberFormat'\nimport getConfig from '../../helpers/getConfig'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'client',\n        title: 'Клиент',\n        xs: 4\n    },\n    {\n        sorting: true,\n        name: 'created_date',\n        title: 'Дата создания',\n        xs: 3\n    },\n    {\n        sorting: true,\n        name: 'number_of_orders',\n        title: 'Кол-во заказов',\n        xs: 2\n    },\n    {\n        sorting: true,\n        alignRight: true,\n        name: 'balance',\n        title: 'Баланс',\n        xs: 2\n    }\n]\n\nconst enhance = compose(\n    injectSheet({\n        rightAlign: {\n            textAlign: 'right'\n        }\n    })\n)\n\nconst iconStyle = {\n    icon: {\n        color: '#12aaeb',\n        width: 24,\n        height: 24\n    },\n    button: {\n        width: 48,\n        height: 48,\n        padding: 0\n    }\n}\n\nconst ClientBlanceGridList = enhance((props) => {\n    const ZERO = 0\n    const {\n        classes,\n        filter,\n        filterDialog,\n        filterItem,\n        infoDialog,\n        listData,\n        detailData\n    } = props\n\n    const clientBalanceFilterDialog = (\n        <ClientBalanceFilterForm\n            initialValues={filterDialog.initialValues}\n            filter={filter}\n            filterDialog={filterDialog}\n        />\n    )\n\n    const clientBalanceDetail = (\n        <span>a</span>\n    )\n    const clientBalanceList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\n        const balance = _.toNumber(_.get(item, 'balance'))\n        const currentCurrency = getConfig('PRIMARY_CURRENCY')\n        const orders = numberFormat(_.get(item, 'orders'))\n        const clientName = _.get(item, 'name')\n        const balanceStyle = {\n            color: '#333'\n        }\n        if (balance > ZERO) {\n            balanceStyle.color = '#92ce95'\n        } else if (balance < ZERO) {\n            balanceStyle.color = '#e27676'\n        }\n        return (\n            <Row key={id}>\n                <Col xs={4}>{clientName}</Col>\n                <Col xs={3}>{createdDate}</Col>\n                <Col xs={2}>{orders}</Col>\n                <Col xs={2} className={classes.rightAlign} style={balanceStyle}>{numberFormat(balance)} {currentCurrency}</Col>\n                <Col xs={1} style={{textAlign: 'right', padding: '0'}}>\n                    <IconButton\n                        disabled={(balance === ZERO) && true}\n                        iconStyle={iconStyle.icon}\n                        style={iconStyle.button}\n                        touch={true}\n                        onTouchTap={() => { infoDialog.handleOpenInfoDialog(id) }}>\n                        <List />\n                    </IconButton>\n                </Col>\n            </Row>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: clientBalanceList,\n        loading: _.get(listData, 'listLoading')\n    }\n\n    const client = _.find(_.get(listData, 'data'), {'id': _.get(detailData, 'id')})\n\n    return (\n        <Container>\n            <SubMenu url={ROUTES.CLIENT_BALANCE_LIST_URL}/>\n\n            <GridList\n                filter={filter}\n                list={list}\n                detail={clientBalanceDetail}\n                filterDialog={clientBalanceFilterDialog}\n                loading={_.get(listData, 'listLoading')}\n            />\n\n            <ClientBalanceCreateDialog\n                open={infoDialog.openInfoDialog}\n                detailData={detailData}\n                onClose={infoDialog.handleCloseInfoDialog}\n                filterItem={filterItem}\n                name={_.get(client, 'name')}\n                balance={_.get(client, 'balance')}\n            />\n        </Container>\n    )\n})\n\nClientBlanceGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    infoDialog: PropTypes.shape({\n        updateLoading: PropTypes.bool.isRequired,\n        openInfoDialog: PropTypes.bool.isRequired,\n        handleOpenInfoDialog: PropTypes.func.isRequired,\n        handleCloseInfoDialog: PropTypes.func.isRequired\n    }).isRequired,\n    filterDialog: PropTypes.shape({\n        initialValues: PropTypes.object,\n        filterLoading: PropTypes.bool,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default ClientBlanceGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/ClientBalance/ClientBalanceGridList.js","import _ from 'lodash'\nimport moment from 'moment'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport {Row} from 'react-flexbox-grid'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport ArrowUpIcon from 'material-ui/svg-icons/navigation/arrow-upward'\nimport ArrowDownIcon from 'material-ui/svg-icons/navigation/arrow-downward'\nimport Pagination from '../ReduxForm/Pagination'\nimport getConfig from '../../helpers/getConfig'\nimport numberFormat from '../../helpers/numberFormat'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            width: '100%',\n            height: '300px',\n            background: '#fff',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        red: {\n            color: '#e57373 !important'\n        },\n        green: {\n            color: '#81c784 !important'\n        },\n        popUp: {\n            color: '#333 !important',\n            overflowY: 'hidden !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            overflowX: 'hidden',\n            height: '100%'\n        },\n        titleContent: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '20px 30px',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                padding: '0 !important',\n                position: 'absolute !important',\n                '& > div': {\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center'\n                }\n            }\n        },\n        subtitle: {\n            fontWeight: '600',\n            marginBottom: '20px'\n        },\n        bodyContent: {\n            width: '100%'\n        },\n        infoBlock: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            position: 'relative',\n            height: '70px',\n            fontWeight: '600',\n            borderBottom: '1px #efefef solid',\n            margin: '0',\n            padding: '0 30px'\n        },\n        info: {\n            display: 'flex',\n            width: '45%',\n            justifyContent: 'space-between',\n            '& span': {\n                fontWeight: '500'\n            }\n        },\n        content: {\n            width: '100%',\n            padding: '0 30px 10px',\n            '& > .row': {\n                margin: '0',\n                padding: '15px 0',\n                '& > div': {\n                    padding: '0 0.5rem'\n                },\n                '& > div:first-child': {\n                    display: 'flex',\n                    '& > svg': {\n                        width: '18px !important',\n                        height: '18px !important'\n                    }\n                }\n            },\n            '& > .row:first-child': {\n                fontWeight: '600',\n                borderBottom: 'solid 1px #efefef'\n            },\n            '& .row:last-child:after': {\n                display: 'none'\n            }\n        }\n    })\n)\n\nconst iconStyle = {\n    icon: {\n        color: '#666666',\n        width: 24,\n        height: 24,\n        lineHeight: 'normal'\n    },\n    button: {\n        width: 48,\n        height: 48,\n        '& > div': {\n            lineHeight: 'none'\n        }\n    }\n}\n\nconst ClientBalanceCreateDialog = enhance((props) => {\n    const {open, filterItem, onClose, classes, detailData, name, balance} = props\n    const ZERO = 0\n    const currentCurrency = getConfig('PRIMARY_CURRENCY')\n    const loading = _.get(detailData, 'detailLoading')\n\n    const detailList = _.map(_.get(detailData, 'data'), (item, index) => {\n        const id = _.get(item, 'order') || _.get(item, 'transaction')\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\n        const comment = _.get(item, 'comment') || 'Комментариев нет'\n        const amount = _.toNumber(_.get(item, 'amount'))\n\n        return (\n            <Row key={index} className='dottedList'>\n                <div style={{flexBasis: '5%', maxWidth: '5%'}}>\n                    {(amount > ZERO) ? <ArrowUpIcon color=\"#92ce95\"/> : <ArrowDownIcon color=\"#e27676\"/>}\n                </div>\n                <div style={{flexBasis: '25%', maxWidth: '25%'}}>{(_.get(item, 'order')) ? 'З-' : 'Т-'}{id}</div>\n                <div style={{flexBasis: '15%', maxWidth: '15%'}}>{createdDate}</div>\n                <div style={{flexBasis: '35%', maxWidth: '35%'}}>{comment}</div>\n                <div style={{flexBasis: '20%', maxWidth: '20%', textAlign: 'right'}}>{numberFormat(amount, currentCurrency)}</div>\n            </Row>)\n    })\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            contentStyle={loading ? {width: '500px'} : {width: '1000px'}}\n            bodyStyle={{minHeight: 'auto'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>Информация по балансу клиента</span>\n                <IconButton\n                    iconStyle={iconStyle.icon}\n                    style={iconStyle.button}\n                    onTouchTap={onClose}>\n                    <CloseIcon2/>\n                </IconButton>\n            </div>\n            {loading ? <div className={classes.loader}>\n                    <CircularProgress size={40} thickness={4}/>\n                </div>\n                : <div className={classes.bodyContent}>\n                    <div className={classes.infoBlock}>\n                        <div className={classes.info}>\n                            <div>\n                                <span>Клиент</span>\n                                <div>{name}</div>\n                            </div>\n                            <div>\n                                <span>Баланс</span>\n                                <div className={(balance > ZERO) ? classes.green : classes.red}>{numberFormat(balance, currentCurrency)}</div>\n                            </div>\n                        </div>\n                        <Pagination filter={filterItem}/>\n                    </div>\n                    <div className={classes.content}>\n                        <Row>\n                            <div style={{flexBasis: '5%', maxWidth: '5%'}}>\n                            </div>\n                            <div style={{flexBasis: '25%', maxWidth: '25%'}}>Транзакция / заказ</div>\n                            <div style={{flexBasis: '15%', maxWidth: '15%'}}>Дата</div>\n                            <div style={{flexBasis: '35%', maxWidth: '35%'}}>Описание</div>\n                            <div style={{flexBasis: '20%', maxWidth: '20%', textAlign: 'right'}}>Сумма</div>\n                        </Row>\n                        {detailList}\n                    </div>\n                </div>\n            }\n        </Dialog>\n    )\n})\n\nClientBalanceCreateDialog.propTyeps = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\n\nexport default ClientBalanceCreateDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/ClientBalance/ClientBalanceInfoDialog.js","import ClientBalanceGridList from './ClientBalanceGridList'\nimport {CLIENT_BALANCE_FILTER_KEY, CLIENT_BALANCE_FILTER_OPEN} from './ClientBalanceFilterForm'\nconst CLIENT_BALANCE_INFO_DIALOG_OPEN = 'openInfoDialog'\n\nexport {\n    CLIENT_BALANCE_INFO_DIALOG_OPEN,\n    CLIENT_BALANCE_FILTER_KEY,\n    CLIENT_BALANCE_FILTER_OPEN,\n    ClientBalanceGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/ClientBalance/index.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport IconButton from 'material-ui/IconButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {TextField, ExpensiveCategorySearchField, CurrencySearchField, normalizeNumber} from '../ReduxForm'\nimport CloseIcon2 from '../CloseIcon2'\nimport MainStyles from '../Styles/MainStyles'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\n\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        nav: {\n            fontSize: '18px',\n            fontWeight: 'bold',\n            padding: '20px',\n            color: 'black',\n            borderBottom: '1px solid #efefef',\n            '& button': {\n                float: 'right',\n                marginTop: '-5px !important'\n            }\n        },\n        flex: {\n            display: 'flex',\n            alignItems: 'center'\n        },\n        label: {\n            fontSize: '75%',\n            color: '#999'\n        },\n        itemList: {\n            marginTop: '20px'\n        }\n    })),\n    reduxForm({\n        form: 'ClientTransactionCreateForm',\n        enableReinitialize: true\n    })\n)\n\nconst ClientTransactionCreateDialog = enhance((props) => {\n    const {open, loading, handleSubmit, onClose, classes, cashboxData, isExpense} = props\n\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n    const cashbox = _.find(_.get(cashboxData, 'data'), {'id': _.get(cashboxData, 'cashboxId')})\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '300px'} : {width: '400px'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>{isExpense ? 'Расход' : 'Приход'}</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} className={classes.form}>\n                    <div className={classes.inContent} style={{minHeight: '230px'}}>\n                        <div className={classes.loader}>\n                            <CircularProgress size={40} thickness={4}/>\n                        </div>\n                        <div className={classes.field}>\n                            <div className={classes.itemList}>\n                                <div className={classes.label}>Касса:</div>\n                                <div style={{fontWeight: '600', marginBottom: '5px'}}>{_.get(cashbox, 'name')}</div>\n                            </div>\n                            {isExpense && <Field\n                                name=\"categoryId\"\n                                component={ExpensiveCategorySearchField}\n                                label=\"Категория расхода\"\n                                className={classes.inputFieldCustom}\n                                fullWidth={true}/>\n                            }\n                            <div className={classes.flex} style={{alignItems: 'baseline'}}>\n                                <Field\n                                    name=\"amount\"\n                                    component={TextField}\n                                    label=\"Сумма\"\n                                    normalize={normalizeNumber}\n                                    className={classes.inputFieldCustom}\n                                    style={{width: '50%'}}\n                                    fullWidth={false}/>\n                                <div style={{marginLeft: '20px'}}>\n                                    <Field\n                                        name=\"currency\"\n                                        component={CurrencySearchField}\n                                        label=\"Валюта\"\n                                        className={classes.inputFieldCustom}\n                                        style={{width: '50%'}}\n                                        fullWidth={false}/>\n                                </div>\n                            </div>\n                            <Field\n                                name=\"comment\"\n                                style={{top: '-20px', lineHeight: '20px', fontSize: '13px'}}\n                                component={TextField}\n                                label=\"Комментарий...\"\n                                multiLine={true}\n                                rows={1}\n                                rowsMax={3}\n                                fullWidth={true}/>\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\n\nClientTransactionCreateDialog.propTyeps = {\n    isExpense: PropTypes.bool,\n    open: PropTypes.bool.isRequired,\n    cashboxData: PropTypes.object.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\nClientTransactionCreateDialog.defaultProps = {\n    isExpense: false\n}\n\nexport default ClientTransactionCreateDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/ClientTransaction/ClientTransactionCreateDialog.js","import _ from 'lodash'\nimport moment from 'moment'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Row, Col} from 'react-flexbox-grid'\nimport IconButton from 'material-ui/IconButton'\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\nimport * as ROUTES from '../../constants/routes'\nimport GridList from '../GridList'\nimport Container from '../Container'\nimport ClientTransactionFilterForm from './ClientTransactionFilterForm'\nimport ClientTransactionCreateDialog from './ClientTransactionCreateDialog'\nimport ClientTransactionSendDialog from './ClientTransactionSendDialog'\nimport ConfirmDialog from '../ConfirmDialog'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport Paper from 'material-ui/Paper'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport numberFormat from '../../helpers/numberFormat'\nimport GridListNavSearch from '../GridList/GridListNavSearch'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'id',\n        title: 'Id',\n        xs: 1\n    },\n    {\n        sorting: true,\n        name: 'comment',\n        title: 'Описание',\n        xs: 5\n    },\n    {\n        sorting: true,\n        name: 'date',\n        title: 'Дата',\n        xs: 3\n    },\n    {\n        sorting: true,\n        alignRight: true,\n        name: 'amount',\n        title: 'Сумма',\n        xs: 3\n    }\n]\n\nconst enhance = compose(\n    injectSheet({\n        wrap: {\n            display: 'flex',\n            margin: '0 -28px',\n            padding: '0 28px 0 0',\n            minHeight: 'calc(100% - 66px)'\n        },\n        listWrapper: {\n            border: '1px solid #d9dde1',\n            borderBottom: 'none',\n            height: '100%'\n        },\n        searchForm: {\n            padding: '10px 30px 0',\n            '& form > div': {\n                maxWidth: '100%'\n            }\n        },\n        leftSide: {\n            flexBasis: '25%',\n            maxWidth: '25%'\n        },\n        rightSide: {\n            flexBasis: '75%',\n            maxWidth: '75%',\n            marginLeft: '28px'\n        },\n        list: {\n            borderBottom: '1px solid #efefef',\n            display: 'flex',\n            padding: '20px 30px',\n            margin: '0',\n            cursor: 'pointer',\n            justifyContent: 'space-between',\n            position: 'relative'\n        },\n        flex: {\n            display: 'flex',\n            alignItems: 'center'\n        },\n        outerTitle: {\n            extend: 'flex',\n            justifyContent: 'space-between',\n            fontWeight: '600',\n            paddingBottom: '10px',\n            paddingTop: '5px',\n            '& a': {\n                padding: '2px 10px',\n                border: '1px solid',\n                borderRadius: '2px',\n                marginLeft: '12px'\n            }\n        },\n        balance: {\n            textAlign: 'right',\n            position: 'absolute',\n            right: '30px'\n        },\n        btnSend: {\n            color: '#12aaeb !important'\n        },\n        btnAdd: {\n            color: '#8acb8d !important'\n        },\n        btnRemove: {\n            color: '#e57373 !important'\n        },\n        title: {\n            fontWeight: '600',\n            '& span': {\n                fontSize: '11px !important',\n                display: 'block',\n                color: '#999'\n            }\n        },\n        rightTitle: {\n            extend: 'flex',\n            justifyContent: 'space-between'\n        },\n        green: {\n            color: '#92ce95 !important'\n        },\n        red: {\n            color: '#e57373 !important'\n        }\n    }),\n)\n\nconst ClientTransactionGridList = enhance((props) => {\n    const {\n        filter,\n        filterClient,\n        createExpenseDialog,\n        createIncomeDialog,\n        updateExpenseDialog,\n        updateIncomeDialog,\n        createSendDialog,\n        filterDialog,\n        clientData,\n        actionsDialog,\n        clientListLoading,\n        confirmDialog,\n        listData,\n        detailData,\n        classes\n    } = props\n\n    const actions = (\n        <div>\n            <IconButton onTouchTap={actionsDialog.handleActionEdit}>\n                <ModEditorIcon />\n            </IconButton>\n\n            <IconButton onTouchTap={actionsDialog.handleActionDelete}>\n                <DeleteIcon />\n            </IconButton>\n        </div>\n    )\n\n    const clientTransactionFilterDialog = (\n        <ClientTransactionFilterForm\n            initialValues={filterDialog.initialValues}\n            filter={filter}\n            filterDialog={filterDialog}\n        />\n    )\n\n    const clientTransactionDetail = (\n        <span>a</span>\n    )\n\n    const clientTransactionList = _.map(_.get(listData, 'data'), (item) => {\n        const zero = 0\n        const id = _.get(item, 'id')\n        const comment = _.get(item, 'comment')\n        const type = _.get(item, 'amount') || 'N/A'\n        const amount = numberFormat(_.get(item, 'amount')) || 'N/A'\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY HH:mm')\n        const currency = _.get(item, ['currency', 'name']) || 'N/A'\n\n        return (\n            <Row key={id}>\n                <Col xs={1}>{id}</Col>\n                <Col xs={5}>{comment}</Col>\n                <Col xs={3}>{createdDate}</Col>\n                <Col style={{textAlign: 'right'}} className={type >= zero ? classes.green : classes.red} xs={3}>{amount} {currency}</Col>\n            </Row>\n        )\n    })\n    const clientList = _.map(_.get(clientData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        const isActive = _.get(detailData, 'id') === id\n        return (\n            <div key={id} className={classes.list}\n                 onClick={() => { clientData.handleClickClient(id) }}\n                 style={isActive ? {backgroundColor: '#ffffff'} : {backgroundColor: '#f2f5f8'}}>\n                <div>\n                    <div className={classes.title}>{name}</div>\n                </div>\n            </div>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: clientTransactionList,\n        loading: _.get(listData, 'listLoading')\n    }\n    const AllClientId = 0\n    const selectedClient = _.find(_.get(clientData, 'data'),\n        (o) => {\n            return _.toInteger(o.id) === _.toInteger(_.get(clientData, 'cashboxId'))\n        })\n    const cashboxName = _.get(clientData, 'cashboxId') === AllClientId ? 'Общий объем' : _.get(selectedClient, 'name')\n    return (\n        <Container>\n            <SubMenu url={ROUTES.CLIENT_TRANSACTION_LIST_URL}/>\n\n            <div className={classes.wrap}>\n                <div className={classes.leftSide}>\n                    <div className={classes.outerTitle} style={{paddingLeft: '30px'}}>\n                        <div>Кассы</div>\n                    </div>\n                    <Paper zDepth={2} style={{height: '100%'}}>\n                        <div className={classes.listWrapper}>\n                            <div className={classes.searchForm}>\n                                <GridListNavSearch filter={filterClient} filterIsEmpty={false}/>\n                            </div>\n                            <div className={classes.list}\n                                 onClick={() => {\n                                     clientData.handleClickClient(AllClientId)\n                                 } }\n                                 style={_.get(clientData, 'clientId') === AllClientId ? {backgroundColor: '#ffffff'} : {backgroundColor: '#f2f5f8'}}>\n                                <div className={classes.title}>\n                                    Общий объем\n                                    <span>во всех классах</span>\n                                </div>\n                            </div>\n                            {clientListLoading\n                                ? <div style={{textAlign: 'center'}}>\n                                    <CircularProgress size={40} thickness={4}/>\n                                </div>\n                                : clientList\n                            }\n                        </div>\n                    </Paper>\n                </div>\n                <div className={classes.rightSide}>\n                    <div className={classes.rightTitle}>\n                        <div className={classes.outerTitle}>{cashboxName}</div>\n                        { _.get(clientData, 'cashboxId') !== AllClientId && <div className={classes.outerTitle}>\n                            <div className={classes.buttons}>\n                                <a onClick={createIncomeDialog.handleOpenDialog} className={classes.btnAdd}>+ Доход</a>\n                                <a onClick={createExpenseDialog.handleOpenDialog} className={classes.btnRemove}>-\n                                    Расход</a>\n                            </div>\n                        </div>}\n                    </div>\n\n                    <GridList\n                        filter={filter}\n                        list={list}\n                        detail={clientTransactionDetail}\n                        actionsDialog={actions}\n                        filterDialog={clientTransactionFilterDialog}\n                    />\n\n                    <ClientTransactionCreateDialog\n                        isExpense={true}\n                        clientData={clientData}\n                        open={createExpenseDialog.open}\n                        loading={createExpenseDialog.loading}\n                        onClose={createExpenseDialog.handleCloseDialog}\n                        onSubmit={createExpenseDialog.handleSubmitDialog}\n                    />\n\n                    <ClientTransactionCreateDialog\n                        clientData={clientData}\n                        open={createIncomeDialog.open}\n                        loading={createIncomeDialog.loading}\n                        onClose={createIncomeDialog.handleCloseDialog}\n                        onSubmit={createIncomeDialog.handleSubmitDialog}\n                    />\n\n                    <ClientTransactionCreateDialog\n                        initialValues={updateExpenseDialog.initialValues}\n                        isUpdate={true}\n                        isExpense={true}\n                        open={updateExpenseDialog.open}\n                        loading={updateExpenseDialog.loading}\n                        onClose={updateExpenseDialog.handleCloseUpdateDialog}\n                        onSubmit={updateExpenseDialog.handleSubmitUpdateDialog}\n                    />\n\n                    <ClientTransactionCreateDialog\n                        initialValues={updateIncomeDialog.initialValues}\n                        isUpdate={true}\n                        open={updateIncomeDialog.open}\n                        loading={updateIncomeDialog.loading}\n                        onClose={updateIncomeDialog.handleCloseUpdateDialog}\n                        onSubmit={updateIncomeDialog.handleSubmitUpdateDialog}\n                    />\n\n                    <ClientTransactionSendDialog\n                        clientData={clientData}\n                        open={createSendDialog.open}\n                        loading={createSendDialog.loading}\n                        onClose={createSendDialog.handleCloseDialog}\n                        onSubmit={createSendDialog.handleSubmitDialog}\n                    />\n\n                    {detailData.data && <ConfirmDialog\n                        type=\"delete\"\n                        message={_.get(detailData, ['data', 'comment'])}\n                        onClose={confirmDialog.handleCloseConfirmDialog}\n                        onSubmit={confirmDialog.handleExpenseConfirmDialog}\n                        open={confirmDialog.open}\n                    />}\n                </div>\n            </div>\n        </Container>\n    )\n})\n\nClientTransactionGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    clientData: PropTypes.object,\n    clientListLoading: PropTypes.bool,\n    detailData: PropTypes.object,\n    createExpenseDialog: PropTypes.shape({\n        loading: PropTypes.bool.isRequired,\n        open: PropTypes.bool.isRequired,\n        handleOpenDialog: PropTypes.func.isRequired,\n        handleCloseDialog: PropTypes.func.isRequired,\n        handleSubmitDialog: PropTypes.func.isRequired\n    }).isRequired,\n    createIncomeDialog: PropTypes.shape({\n        loading: PropTypes.bool.isRequired,\n        open: PropTypes.bool.isRequired,\n        handleOpenDialog: PropTypes.func.isRequired,\n        handleCloseDialog: PropTypes.func.isRequired,\n        handleSubmitDialog: PropTypes.func.isRequired\n    }).isRequired,\n    updateExpenseDialog: PropTypes.shape({\n        loading: PropTypes.bool.isRequired,\n        open: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    updateIncomeDialog: PropTypes.shape({\n        loading: PropTypes.bool.isRequired,\n        open: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    createSendDialog: PropTypes.shape({\n        loading: PropTypes.bool.isRequired,\n        open: PropTypes.bool.isRequired,\n        handleOpenDialog: PropTypes.func.isRequired,\n        handleCloseDialog: PropTypes.func.isRequired,\n        handleSubmitDialog: PropTypes.func.isRequired\n    }).isRequired,\n    confirmDialog: PropTypes.shape({\n        open: PropTypes.bool.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleExpenseConfirmDialog: PropTypes.func.isRequired\n    }).isRequired,\n    actionsDialog: PropTypes.shape({\n        handleActionEdit: PropTypes.func.isRequired,\n        handleActionDelete: PropTypes.func.isRequired\n    }).isRequired,\n    filterDialog: PropTypes.shape({\n        initialValues: PropTypes.object,\n        filterLoading: PropTypes.bool,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default ClientTransactionGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/ClientTransaction/ClientTransactionGridList.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport IconButton from 'material-ui/IconButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {TextField, CashboxSearchField} from '../ReduxForm'\nimport CloseIcon2 from '../CloseIcon2'\nimport MainStyles from '../Styles/MainStyles'\nimport normalizeNumber from '../ReduxForm/normalizers/normalizeNumber'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\n\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        nav: {\n            fontSize: '18px',\n            fontWeight: 'bold',\n            padding: '20px',\n            color: 'black',\n            borderBottom: '1px solid #efefef',\n            '& button': {\n                float: 'right',\n                marginTop: '-5px !important'\n            }\n        },\n        flex: {\n            display: 'flex',\n            alignItems: 'center'\n        },\n        label: {\n            fontSize: '75%',\n            color: '#999'\n        },\n        itemList: {\n            marginTop: '20px'\n        }\n    })),\n    reduxForm({\n        form: 'ClientTransactionCreateForm',\n        enableReinitialize: true\n    })\n)\n\nconst ClientTransactionSendDialog = enhance((props) => {\n    const {open, loading, handleSubmit, onClose, classes, cashboxData} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n    const cashbox = _.find(_.get(cashboxData, 'data'), {'id': _.get(cashboxData, 'cashboxId')})\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '300px'} : {width: '400px'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>Перевод</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} className={classes.form}>\n                    <div className={classes.inContent} style={{minHeight: '325px'}}>\n                        <div className={classes.loader}>\n                            <CircularProgress size={40} thickness={4}/>\n                        </div>\n                        <div className={classes.field}>\n                            <div className={classes.itemList}>\n                                <div className={classes.label}>Текущая касса:</div>\n                                <div style={{fontWeight: '600'}}>{_.get(cashbox, 'name')}</div>\n                            </div>\n                            <Field\n                                name=\"categoryId\"\n                                component={CashboxSearchField}\n                                label=\"Касса получатель\"\n                                fullWidth={true}/>\n                            <div className={classes.flex} style={{alignItems: 'baseline'}}>\n                                <Field\n                                    name=\"amount\"\n                                    component={TextField}\n                                    label=\"Сумма\"\n                                    normalize={normalizeNumber}\n                                    style={{width: '50%'}}\n                                    fullWidth={false}/>\n                                <div style={{marginLeft: '20px'}}>\n                                   {_.get(cashbox, ['currency', 'name'])}\n                                </div>\n                            </div>\n                            <Field\n                                name=\"comment\"\n                                style={{lineHeight: '20px', fontSize: '13px'}}\n                                component={TextField}\n                                label=\"Комментарий...\"\n                                multiLine={true}\n                                rows={1}\n                                rowsMax={3}\n                                fullWidth={true}/>\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Отправить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\n\nClientTransactionSendDialog.propTyeps = {\n    open: PropTypes.bool.isRequired,\n    cashboxData: PropTypes.object.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\n\nexport default ClientTransactionSendDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/ClientTransaction/ClientTransactionSendDialog.js","import ClientTransactionGridList from './ClientTransactionGridList'\nimport {CLIENT_TRANSACTION_FILTER_KEY, CLIENT_TRANSACTION_FILTER_OPEN} from './ClientTransactionFilterForm'\n\nconst CLIENT_TRANSACTION_CREATE_EXPENSE_DIALOG_OPEN = 'openCreateExpenseDialog'\nconst CLIENT_TRANSACTION_CREATE_INCOME_DIALOG_OPEN = 'openCreateIncomeDialog'\nconst CLIENT_TRANSACTION_UPDATE_EXPENSE_DIALOG_OPEN = 'openUpdateExpenseDialog'\nconst CLIENT_TRANSACTION_UPDATE_INCOME_DIALOG_OPEN = 'openUpdateIncomeDialog'\nconst CLIENT_TRANSACTION_CREATE_SEND_DIALOG_OPEN = 'openSendDialog'\nconst CLIENT_TRANSACTION_DELETE_DIALOG_OPEN = 'openDeleteDialog'\n\nexport {\n\n    CLIENT_TRANSACTION_CREATE_EXPENSE_DIALOG_OPEN,\n    CLIENT_TRANSACTION_CREATE_INCOME_DIALOG_OPEN,\n    CLIENT_TRANSACTION_UPDATE_EXPENSE_DIALOG_OPEN,\n    CLIENT_TRANSACTION_UPDATE_INCOME_DIALOG_OPEN,\n    CLIENT_TRANSACTION_CREATE_SEND_DIALOG_OPEN,\n    CLIENT_TRANSACTION_DELETE_DIALOG_OPEN,\n    CLIENT_TRANSACTION_FILTER_KEY,\n    CLIENT_TRANSACTION_FILTER_OPEN,\n    ClientTransactionGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/ClientTransaction/index.js","import React from 'react'\nimport SvgIcon from 'material-ui/SvgIcon'\n\nconst CloseIcon = (props) => {\n    return (\n        <SvgIcon {...props}>\n            <path d=\"M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2C6.47,2 2,6.47 2,12C2,17.53 6.47,22 12,22C17.53,22 22,17.53 22,12C22,6.47 17.53,2 12,2M14.59,8L12,10.59L9.41,8L8,9.41L10.59,12L8,14.59L9.41,16L12,13.41L14.59,16L16,14.59L13.41,12L16,9.41L14.59,8Z\" />\n        </SvgIcon>\n    )\n}\n\nexport default CloseIcon\n\n\n\n// WEBPACK FOOTER //\n// src/components/CloseIcon/CloseIcon.js","import React from 'react'\nimport SvgIcon from 'material-ui/SvgIcon'\n\nconst CloseIcon = (props) => {\n    return (\n        <SvgIcon {...props} fill=\"#000000\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n        </SvgIcon>\n\n    )\n}\n\nexport default CloseIcon\n\n\n\n// WEBPACK FOOTER //\n// src/components/CloseIcon2/CloseIcon2.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport IconButton from 'material-ui/IconButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport CloseIcon2 from '../CloseIcon2'\n\nconst enhance = compose(\n    injectSheet({\n        popUp: {\n            overflowY: 'hidden !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            overflowX: 'hidden',\n            height: '100%'\n        },\n        titleContent: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '20px 30px',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                padding: '0 !important',\n                position: 'absolute !important'\n            }\n        },\n        inContent: {\n            maxHeight: '50vh',\n            minHeight: '184px',\n            overflow: 'auto',\n            padding: '0 30px',\n            color: '#333'\n        },\n        bodyContent: {\n            width: '100%'\n        },\n        form: {\n            position: 'relative'\n        },\n        field: {\n            width: '100%'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        bottomButton: {\n            bottom: '0',\n            left: '0',\n            right: '0',\n            padding: '10px',\n            zIndex: '999',\n            borderTop: '1px solid #efefef',\n            background: '#fff',\n            textAlign: 'right',\n            '& span': {\n                fontSize: '13px !important',\n                fontWeight: '600 !important',\n                color: '#129fdd',\n                verticalAlign: 'inherit !important'\n            }\n        },\n        actionButton: {\n            fontSize: '13px !important',\n            margin: '0 !important'\n        },\n        background: {\n            background: '#f1f5f8',\n            boxSizing: 'content-box',\n            fontWeight: '600',\n            padding: '20px 30px',\n            margin: '0 -30px',\n            width: '100%'\n        },\n        confirm: {\n            padding: '20px 0'\n        },\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            justifyContent: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        }\n    })\n)\n\nconst ConfirmDialog = enhance((props) => {\n    const {open, onClose, classes, type, message, onSubmit, loading} = props\n    const typesList = {\n        delete: {\n            name: 'Подтверждение удаления', submitName: 'Удалить', text: 'Вы уверены что хотите удалить эти данные?'\n        },\n        cancel: {\n            name: 'Подтверждение отмены', submitName: 'Отменить', text: 'Вы уверены что хотите отменить эти данные?'\n        },\n        submit: {\n            name: 'Выполнить', submitName: 'Да', text: 'Вы уверены что хотите подтвердить?'\n        }\n    }\n    const title = _.get(typesList, [type, 'name'])\n    const buttonLabel = _.get(typesList, [type, 'submitName'])\n    const text = _.get(typesList, [type, 'text'])\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            contentStyle={{width: '500px'}}\n            className={classes.dialog}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>{title}</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <div className={classes.inContent}>\n                    {loading &&\n                    <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4}/>\n                    </div>}\n                    <div className={classes.confirm}>\n                        {text}\n                    </div>\n                    {message && <div className={classes.background}>\n                        {message}\n                    </div>}\n                </div>\n                <div className={classes.bottomButton}>\n                    <FlatButton\n                        className={classes.actionButton}\n                        label={buttonLabel}\n                        primary={true}\n                        onTouchTap={onSubmit}\n                    />\n                </div>\n            </div>\n        </Dialog>\n    )\n})\n\nConfirmDialog.propTypes = {\n    type: PropTypes.oneOf(['delete', 'cancel', 'submit']).isRequired,\n    message: PropTypes.string.isRequired,\n    loading: PropTypes.bool,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired\n}\n\nexport default ConfirmDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/ConfirmDialog/ConfirmDialog.js","import React from 'react'\n\nconst Container = (props) => {\n    return (\n        <div style={{width: '100%', height: '100%', position: 'relative'}}>{props.children}</div>\n    )\n}\n\nexport default Container\n\n\n\n// WEBPACK FOOTER //\n// src/components/Container/Container.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport TextField from '../ReduxForm/Basic/TextField'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport MainStyles from '../Styles/MainStyles'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\n\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n\n        fields: {\n            width: '100%'\n        }\n    })),\n    reduxForm({\n        form: 'AddCourseForm',\n        enableReinitialize: true\n    })\n)\n\nconst PrimaryCurrencyDialog = enhance((props) => {\n    const {classes, open, onClose, handleSubmit, loading} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '400px'} : {width: '400px'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>Установить курс</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} className={classes.form}>\n                    <div className={classes.inContent} style={{minHeight: '100px', paddingTop: '25px'}}>\n                        <div className={classes.fields}>\n                            <Field\n                                name=\"rate\"\n                                component={TextField}\n                                className={classes.inputFieldCustom}\n                                label=\"Курс\"\n                                fullWidth={true}\n                            />\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\n\nPrimaryCurrencyDialog.propTypes = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired\n}\n\nPrimaryCurrencyDialog.defaultProps = {\n    isUpdate: false\n}\n\nexport default PrimaryCurrencyDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Currency/AddCourseDialog.js","import _ from 'lodash'\nimport moment from 'moment'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Row, Col} from 'react-flexbox-grid'\nimport IconButton from 'material-ui/IconButton'\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\nimport Delete from 'material-ui/svg-icons/action/delete'\nimport * as ROUTES from '../../constants/routes'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport Paper from 'material-ui/Paper'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport CurrencyCreateDialog from './CurrencyCreateDialog'\nimport AddCourseDialog from './AddCourseDialog'\nimport SubMenu from '../SubMenu'\nimport ConfirmDialog from '../ConfirmDialog'\nimport GridList from '../GridList'\nimport Tooltip from '../ToolTip'\nimport Container from '../Container'\nimport numberFormat from '../../helpers/numberFormat'\nimport getConfig from '../../helpers/getConfig'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'name',\n        xs: 2,\n        title: '№'\n    },\n    {\n        sorting: true,\n        name: 'name',\n        xs: 4,\n        title: 'Курс'\n    },\n    {\n        sorting: true,\n        xs: 4,\n        name: 'created_date',\n        title: 'Дата обновления'\n    }\n]\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        addButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        addButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px'\n        },\n        semibold: {\n            fontWeight: '600'\n        },\n        editContent: {\n            width: '100%',\n            backgroundColor: '#fff',\n            color: '#333',\n            padding: '20px 30px',\n            marginBottom: '15px',\n            '&>div': {\n                marginBottom: '10px',\n                '&:last-child': {\n                    margin: '0'\n                }\n            }\n        },\n        wrap: {\n            display: 'flex',\n            margin: '0 -28px',\n            padding: '0 28px 0 0',\n            minHeight: 'calc(100% - 120px)'\n        },\n        leftSide: {\n            flexBasis: '25%'\n        },\n        list: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            padding: '15px 30px',\n            borderBottom: '1px #efefef solid',\n            cursor: 'pointer',\n            '& > div:first-child': {\n                fontWeight: '600'\n            },\n            '& > div:last-child': {\n                textAlign: 'right'\n            }\n        },\n        rightSide: {\n            flexBasis: '75%',\n            marginLeft: '28px'\n        },\n        rightTitle: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n        },\n        btnSend: {\n            color: '#12aaeb !important'\n        },\n        btnAdd: {\n            color: '#8acb8d !important'\n        },\n        btnRemove: {\n            color: '#e57373 !important'\n        },\n        outerTitle: {\n            extend: 'flex',\n            justifyContent: 'space-between',\n            fontWeight: '600',\n            paddingBottom: '10px',\n            paddingTop: '5px',\n            '& a': {\n                padding: '2px 10px',\n                border: '1px solid',\n                borderRadius: '2px',\n                marginLeft: '12px'\n            }\n        },\n        buttons: {\n            float: 'right',\n            textAlign: 'right'\n        }\n    })\n)\nconst MINUS_ONE = -1\n\nconst CurrencyGridList = enhance((props) => {\n    const {\n        createDialog,\n        updateDialog,\n        actionsDialog,\n        confirmDialog,\n        listData,\n        detailData,\n        classes,\n        detailId,\n        courseDialog,\n        detailFilter\n    } = props\n\n    const actions = (\n        <div>\n            <IconButton onTouchTap={actionsDialog.handleActionEdit}>\n                <ModEditorIcon />\n            </IconButton>\n\n            <IconButton onTouchTap={actionsDialog.handleActionDelete}>\n                <Delete />\n            </IconButton>\n        </div>\n    )\n\n    const currencyList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        const rate = numberFormat(_.get(item, 'rate'))\n        const currentCurrency = getConfig('PRIMARY_CURRENCY')\n        const createdDate = moment(_.get(_.find(_.get(detailData, ['data', 'results']), {'currency': id}), 'createdDate')).format('DD.MM.YYYY')\n        const isActive = _.get(detailData, 'id') === id\n\n        if (name !== currentCurrency) {\n            return (\n                <div key={id} className={classes.list}\n                     style={isActive ? {backgroundColor: '#ffffff', display: 'relative'}\n                         : {backgroundColor: '#f2f5f8', display: 'relative'}}\n                     onClick={() => { listData.handleCurrencyClick(id) }}>\n                    <div className={classes.title}>{name}</div>\n                    <div className={classes.balance}>\n                        <div>Курс: {rate}</div>\n                        <div>{createdDate}</div>\n                    </div>\n                </div>\n            )\n        }\n        return false\n    })\n    const currency = _.get(_.find(_.get(listData, 'data'), (o) => {\n        return o.id === _.toInteger(_.get(detailData, 'id'))\n    }), 'name')\n    const currentCurrency = getConfig('PRIMARY_CURRENCY')\n    const historyList = _.map(_.get(detailData, ['data', 'results']), (item) => {\n        const id = _.get(item, 'id')\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\n        const rate = numberFormat(_.get(item, 'rate')) || 'N/A'\n        return (\n            <Row key={id}>\n                <Col xs={2}>{id}</Col>\n                <Col xs={4}>1 {currency} = {rate} {currentCurrency}</Col>\n                <Col xs={4}>{createdDate}</Col>\n            </Row>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: historyList,\n        loading: _.get(detailData, 'detailLoading')\n    }\n    const currentDetail = _.find(_.get(listData, 'data'), {'id': _.toInteger(detailId)})\n    const confirmMessage = 'Валюта: ' + _.get(currentDetail, 'name')\n    const listLoading = _.get(listData, 'listLoading')\n    const detail = <div>a</div>\n\n    return (\n        <Container>\n            <SubMenu url={ROUTES.CURRENCY_LIST_URL}/>\n            <div className={classes.addButtonWrapper}>\n                <Tooltip position=\"left\" text=\"Добавить валюту\">\n                    <FloatingActionButton\n                        mini={true}\n                        className={classes.addButton}\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\n                        <ContentAdd />\n                    </FloatingActionButton>\n                </Tooltip>\n            </div>\n            <Paper zDepth={1}>\n                <div className={classes.editContent}>\n                    <div className={classes.semibold}>Основная валюта: <b>{currentCurrency}</b><i style={{fontWeight: '400', color: '#999'}}>\n                        &nbsp;(используется при формировании стоимости продукта / заказа)</i></div>\n                </div>\n            </Paper>\n            <div className={classes.wrap}>\n                <div className={classes.leftSide}>\n                    <div className={classes.outerTitle} style={{paddingLeft: '30px'}}>\n                        <div>Валюты</div>\n                    </div>\n                    <Paper zDepth={1} style={{height: 'calc(100% - 18px)'}}>\n                        {listLoading\n                            ? <div className={classes.loader}>\n                                <CircularProgress size={40} thickness={4}/>\n                            </div>\n                            : <div className={classes.listWrapper}>\n                            {currencyList}\n                        </div>\n                        }\n                    </Paper>\n                </div>\n                <div className={classes.rightSide}>\n                    <div className={classes.rightTitle}>\n                        <div className={classes.outerTitle}>История</div>\n                        <div className={classes.outerTitle}>\n                            <div className={classes.buttons}>\n                                <a onClick={confirmDialog.handleOpenConfirmDialog} className={classes.btnRemove}>Удалить валюту</a>\n                                <a onClick={updateDialog.handleOpenUpdateDialog} className={classes.btnSend}>Изменить валюту</a>\n                                <a onClick={courseDialog.handleOpenCourseDialog} className={classes.btnAdd}>Установить курс</a>\n                            </div>\n                        </div>\n                    </div>\n                    <GridList\n                        filter={detailFilter}\n                        list={list}\n                        detail={detail}\n                        actionsDialog={actions}\n                    />\n\n                    <CurrencyCreateDialog\n                        initialValues={createDialog.initialValues}\n                        open={createDialog.openCreateDialog}\n                        loading={createDialog.createLoading}\n                        onClose={createDialog.handleCloseCreateDialog}\n                        onSubmit={createDialog.handleSubmitCreateDialog}\n                    />\n\n                    <CurrencyCreateDialog\n                        isUpdate={true}\n                        initialValues={updateDialog.initialValues}\n                        open={updateDialog.openUpdateDialog}\n                        loading={updateDialog.updateLoading}\n                        onClose={updateDialog.handleCloseUpdateDialog}\n                        onSubmit={updateDialog.handleSubmitUpdateDialog}\n                    />\n\n                    <AddCourseDialog\n                        initialValues={courseDialog.initialValues}\n                        open={courseDialog.openCourseDialog}\n                        onClose={courseDialog.handleCloseCourseDialog}\n                        onSubmit={courseDialog.handleSubmitCourseDialog}\n                    />\n\n                    {detailId !== MINUS_ONE && <ConfirmDialog\n                        type=\"delete\"\n                        message={confirmMessage}\n                        onClose={confirmDialog.handleCloseConfirmDialog}\n                        onSubmit={confirmDialog.handleSendConfirmDialog}\n                        open={confirmDialog.openConfirmDialog}\n                    />}\n                </div>\n            </div>\n        </Container>\n    )\n})\n\nCurrencyGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    createDialog: PropTypes.shape({\n        createLoading: PropTypes.bool.isRequired,\n        openCreateDialog: PropTypes.bool.isRequired,\n        handleOpenCreateDialog: PropTypes.func.isRequired,\n        handleCloseCreateDialog: PropTypes.func.isRequired,\n        handleSubmitCreateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    setCurrencyUpdateDialog: PropTypes.shape({\n        setCurrencyLoading: PropTypes.bool.isRequired,\n        openSetCurrencyDialog: PropTypes.bool.isRequired,\n        handleOpenSetCurrencyDialog: PropTypes.func.isRequired,\n        handleCloseSetCurrencyDialog: PropTypes.func.isRequired,\n        handleSubmitSetCurrencyDialog: PropTypes.func.isRequired\n    }),\n    confirmDialog: PropTypes.shape({\n        openConfirmDialog: PropTypes.bool.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleSendConfirmDialog: PropTypes.func.isRequired\n    }).isRequired,\n    updateDialog: PropTypes.shape({\n        updateLoading: PropTypes.bool.isRequired,\n        openUpdateDialog: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    courseDialog: PropTypes.shape({\n        openCourseDialog: PropTypes.bool.isRequired,\n        handleOpenCourseDialog: PropTypes.func.isRequired,\n        handleCloseCourseDialog: PropTypes.func.isRequired,\n        handleSubmitCourseDialog: PropTypes.func.isRequired\n    }).isRequired,\n    actionsDialog: PropTypes.shape({\n        handleActionEdit: PropTypes.func.isRequired,\n        handleActionDelete: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default CurrencyGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Currency/CurrencyGridList.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {CurrencySearchField} from '../ReduxForm'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport MainStyles from '../Styles/MainStyles'\n\nexport const PRIMARY_CURRENCY_DIALOG_OPEN = 'openPrimaryDialog'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\n\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n\n        fields: {\n            display: ({loading}) => !loading ? 'flex' : 'none'\n        }\n    })),\n    reduxForm({\n        form: 'BaseCurrencyCreateForm',\n        enableReinitialize: true\n    })\n)\n\nconst PrimaryCurrencyDialog = enhance((props) => {\n    const {classes, open, onClose, handleSubmit, loading} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '400px'} : {width: '400px'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>Выбрать основную валюту</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} className={classes.form}>\n                    <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4}/>\n                    </div>\n                    <div className={classes.inContent} style={{minHeight: '100px', paddingTop: '25px'}}>\n                        <div className={classes.fields}>\n                            <Field\n                                name=\"currency\"\n                                component={CurrencySearchField}\n                                className={classes.inputFieldCustom}\n                                label=\"Валюта\"\n                                fullWidth={true}\n                            />\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\n\nPrimaryCurrencyDialog.propTypes = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired,\n    onSubmit: PropTypes.func.isRequired\n}\n\nPrimaryCurrencyDialog.defaultProps = {\n    isUpdate: false\n}\n\nexport default PrimaryCurrencyDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Currency/PrimaryCurrencyDialog.js","import CurrencyGridList from './CurrencyGridList'\nimport {CURRENCY_CREATE_DIALOG_OPEN} from './CurrencyCreateDialog'\nimport {PRIMARY_CURRENCY_DIALOG_OPEN} from './PrimaryCurrencyDialog'\nconst CURRENCY_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nconst ADD_COURSE_DIALOG_OPEN = 'openAddCourseDialog'\n\nexport {\n    CURRENCY_CREATE_DIALOG_OPEN,\n    CURRENCY_UPDATE_DIALOG_OPEN,\n    PRIMARY_CURRENCY_DIALOG_OPEN,\n    ADD_COURSE_DIALOG_OPEN,\n    CurrencyGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Currency/index.js","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport {reduxForm} from 'redux-form'\n\nexport const DELETE_DIALOG_OPEN = 'openDeleteDialog'\n\nconst enhance = compose(\n    injectSheet({\n        dialog: {\n            '& div:last-child': {\n                textAlign: 'left !important',\n                '& button': {\n                    marginLeft: '50px !important',\n                    marginBottom: '5px !important',\n                    color: '#12aaeb !important'\n                }\n            }\n        },\n\n        body: {\n            maxHeight: '600px !important',\n            padding: '0 0 0 15px !important',\n            overflow: 'hidden !important'\n        },\n\n        title: {\n            width: '220px',\n            margin: '0 auto',\n            padding: '10px 0',\n            textAlign: 'center',\n            background: '#12aaeb',\n            color: '#fff',\n            position: 'relative'\n        },\n\n        form: {\n            display: 'flex'\n        },\n\n        map: {\n            height: '600px',\n            paddingRight: '0'\n        }\n    }),\n    reduxForm({\n        form: 'ShopCreateForm'\n    })\n)\n\nconst DeleteDialog = enhance((props) => {\n    const {open, onClose, classes, filter} = props\n\n    const selects = filter.getSelects()\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            bodyClassName={classes.body}>\n                    <div>\n                        <h4 className={classes.title}>ПОДТВЕРЖДЕНИЕ УДАЛЕНИЯ</h4>\n                    </div>\n                        IDS: {selects}\n                    <div>\n                        <div>\n                            <FlatButton\n                                label=\"СВЕРНУТЬ\"\n                                primary={true}\n                                onTouchTap={onClose}\n                            />\n\n                            <FlatButton\n                                label=\"УДАЛИТЬ\"\n                                primary={true}\n                                type=\"submit\"\n                            />\n                        </div>\n                    </div>\n        </Dialog>\n    )\n})\n\nDeleteDialog.propTyeps = {\n    filter: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    loading: PropTypes.bool.isRequired\n}\n\nexport default DeleteDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/DeleteDialog/DeleteDialog.js","import React from 'react'\nimport SvgIcon from 'material-ui/SvgIcon'\nconst DeleteIcon = (props) => {\n    return (\n        <SvgIcon {...props} height=\"18\" viewBox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n            <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\" fill=\"rgb(158,158,158)\"/>\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n        </SvgIcon>\n    )\n}\nexport default DeleteIcon\n\n\n\n// WEBPACK FOOTER //\n// src/components/DeleteIcon/DeleteIcon.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Row, Col} from 'react-flexbox-grid'\nimport IconButton from 'material-ui/IconButton'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\nimport * as ROUTES from '../../constants/routes'\nimport GridList from '../GridList'\nimport Container from '../Container'\nimport EquipmentCreateDialog from './EquipmentCreateDialog'\nimport ConfirmDialog from '../ConfirmDialog'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport Tooltip from '../ToolTip'\nimport IconMenu from 'material-ui/IconMenu'\nimport MenuItem from 'material-ui/MenuItem'\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\nimport Edit from 'material-ui/svg-icons/image/edit'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'id',\n        xs: 2,\n        title: 'Id'\n    },\n    {\n        sorting: true,\n        name: 'name',\n        xs: 6,\n        title: 'Наименование'\n    },\n    {\n        sorting: true,\n        name: 'manufacture',\n        title: 'Производство',\n        xs: 3\n    },\n    {\n        sorting: false,\n        name: 'actions',\n        title: '',\n        xs: 1\n    }\n]\n\nconst enhance = compose(\n    injectSheet({\n        addButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        addButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px'\n        }\n    })\n)\n\nconst EquipmentGridList = enhance((props) => {\n    const {\n        filter,\n        createDialog,\n        updateDialog,\n        confirmDialog,\n        listData,\n        detailData,\n        classes\n    } = props\n\n    const actions = (\n        <div></div>\n    )\n\n    const equipmentDetail = (\n        <span>a</span>\n    )\n\n    const equipmentList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        const manufacture = _.get(item, ['manufacture', 'name'])\n        const iconButton = (\n            <IconButton style={{padding: '0 12px'}}>\n                <MoreVertIcon />\n            </IconButton>\n        )\n        return (\n            <Row key={id}>\n                <Col xs={2}>{id}</Col>\n                <Col xs={6}>{name}</Col>\n                <Col xs={3}>{manufacture}</Col>\n                <Col xs={1} style={{textAlign: 'right'}}>\n                    <IconMenu\n                        iconButtonElement={iconButton}\n                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\n                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\n                        <MenuItem\n                            primaryText=\"Изменить\"\n                            leftIcon={<Edit />}\n                            onTouchTap={() => { updateDialog.handleOpenUpdateDialog(id) }}\n                        />\n                        <MenuItem\n                            primaryText=\"Удалить \"\n                            leftIcon={<DeleteIcon />}\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(id) }}\n                        />\n                    </IconMenu>\n                </Col>\n            </Row>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: equipmentList,\n        loading: _.get(listData, 'listLoading')\n    }\n\n    return (\n        <Container>\n            <SubMenu url={ROUTES.EQUIPMENT_LIST_URL}/>\n            <div className={classes.addButtonWrapper}>\n                <Tooltip position=\"left\" text=\"Добавить оборудование\">\n                    <FloatingActionButton\n                        mini={true}\n                        className={classes.addButton}\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\n                        <ContentAdd />\n                    </FloatingActionButton>\n                </Tooltip>\n            </div>\n\n            <GridList\n                filter={filter}\n                list={list}\n                detail={equipmentDetail}\n                actionsDialog={actions}\n            />\n            <EquipmentCreateDialog\n                isUpdate={true}\n                initialValues={updateDialog.initialValues}\n                open={updateDialog.openUpdateDialog}\n                loading={updateDialog.updateLoading}\n                onClose={updateDialog.handleCloseUpdateDialog}\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\n            />\n\n            <EquipmentCreateDialog\n                open={createDialog.openCreateDialog}\n                loading={createDialog.createLoading}\n                onClose={createDialog.handleCloseCreateDialog}\n                onSubmit={createDialog.handleSubmitCreateDialog}\n            />\n\n            {detailData.data && <ConfirmDialog\n                type=\"delete\"\n                message={_.get(detailData, ['data', 'name'])}\n                loading={confirmDialog.confirmLoading}\n                onClose={confirmDialog.handleCloseConfirmDialog}\n                onSubmit={confirmDialog.handleSendConfirmDialog}\n                open={confirmDialog.openConfirmDialog}\n            />}\n        </Container>\n    )\n})\n\nEquipmentGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    createDialog: PropTypes.shape({\n        createLoading: PropTypes.bool.isRequired,\n        openCreateDialog: PropTypes.bool.isRequired,\n        handleOpenCreateDialog: PropTypes.func.isRequired,\n        handleCloseCreateDialog: PropTypes.func.isRequired,\n        handleSubmitCreateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    confirmDialog: PropTypes.shape({\n        confirmLoading: PropTypes.bool.isRequired,\n        openConfirmDialog: PropTypes.bool.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleSendConfirmDialog: PropTypes.func.isRequired\n    }).isRequired,\n    updateDialog: PropTypes.shape({\n        updateLoading: PropTypes.bool.isRequired,\n        openUpdateDialog: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default EquipmentGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Equipment/EquipmentGridList.js","import EquipmentGridList from './EquipmentGridList'\nimport {EQUIPMENT_CREATE_DIALOG_OPEN} from './EquipmentCreateDialog'\n\nconst EQUIPMENT_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nconst EQUIPMENT_DELETE_DIALOG_OPEN = 'openDeleteDialog'\n\nexport {\n    EQUIPMENT_CREATE_DIALOG_OPEN,\n    EQUIPMENT_UPDATE_DIALOG_OPEN,\n    EQUIPMENT_DELETE_DIALOG_OPEN,\n    EquipmentGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Equipment/index.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport {connect} from 'react-redux'\nimport Dialog from 'material-ui/Dialog'\nimport IconButton from 'material-ui/IconButton'\nimport CloseIcon2 from '../CloseIcon2'\nimport Error from 'material-ui/svg-icons/alert/error-outline'\nimport {closeErrorAction} from '../../actions/error'\n\nconst enhance = compose(\n    injectSheet({\n        popUp: {\n            overflowY: 'hidden !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            overflowX: 'hidden',\n            height: '100%'\n        },\n        inContent: {\n            background: '#ff6663',\n            padding: '40px 0',\n            width: '100%',\n            color: '#fff',\n            textAlign: 'center',\n            '& svg': {\n                margin: 'auto'\n            },\n            '& > div': {\n                margin: '25px 0 20px',\n                fontWeight: '600'\n            },\n            '& > button': {\n                '& > div': {\n                    lineHeight: 'normal !important'\n                }\n            }\n        },\n        bodyContent: {\n            position: 'relative',\n            '& > button': {\n                top: '3px',\n                right: '3px',\n                padding: '0 !important',\n                position: 'absolute !important'\n            }\n        }\n    }),\n    connect((state) => {\n        const open = _.get(state, ['error', 'open'])\n        const message = _.get(state, ['error', 'message'])\n\n        return {\n            open,\n            message\n        }\n    })\n)\n\nconst ErrorDialog = ({dispatch, message, open, classes, ...defaultProps}) => {\n    const close = () => dispatch(closeErrorAction())\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={close}\n            contentStyle={{width: '350px'}}\n            className={classes.dialog}\n            bodyClassName={classes.popUp}\n            overlayStyle={{background: 'rgba(0,0,0,0.45)'}}\n            style={{zIndex: '9999999999'}}\n            paperClassName=\"ffff\"\n            {...defaultProps}>\n            <div className={classes.bodyContent}>\n                <IconButton onTouchTap={close}>\n                    <CloseIcon2 color=\"#fff\"/>\n                </IconButton>\n                <div className={classes.inContent}>\n                    <Error color=\"#fff\" style={{width: '55px', height: '55px'}}/>\n                    <div>{message}</div>\n                </div>\n            </div>\n        </Dialog>\n    )\n}\n\nexport default enhance(ErrorDialog)\n\n\n\n// WEBPACK FOOTER //\n// src/components/ErrorDialog/ErrorDialog.js","import ErrorDialog from './ErrorDialog'\n\nexport default ErrorDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/ErrorDialog/index.js","import _ from 'lodash'\nimport moment from 'moment'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Row, Col} from 'react-flexbox-grid'\nimport IconButton from 'material-ui/IconButton'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\nimport * as ROUTES from '../../constants/routes'\nimport GridList from '../GridList'\nimport Container from '../Container'\nimport ExpensiveCategoryCreateDialog from './ExpensiveCategoryCreateDialog'\nimport ConfirmDialog from '../ConfirmDialog'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport Tooltip from '../ToolTip'\nimport IconMenu from 'material-ui/IconMenu'\nimport MenuItem from 'material-ui/MenuItem'\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\nimport Edit from 'material-ui/svg-icons/image/edit'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'id',\n        xs: 2,\n        title: 'Id'\n    },\n    {\n        sorting: true,\n        name: 'name',\n        xs: 6,\n        title: 'Наименование'\n    },\n    {\n        sorting: true,\n        xs: 3,\n        name: 'created_date',\n        title: 'Дата создания'\n    },\n    {\n        sorting: false,\n        xs: 1,\n        name: 'actions',\n        title: ''\n    }\n]\n\nconst enhance = compose(\n    injectSheet({\n        addButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        addButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px'\n        }\n    })\n)\n\nconst ExpensiveCategoryGridList = enhance((props) => {\n    const {\n        filter,\n        createDialog,\n        updateDialog,\n        confirmDialog,\n        listData,\n        detailData,\n        classes\n    } = props\n\n    const expensiveCategoryDetail = (\n        <span>a</span>\n    )\n\n    const expensiveCategoryList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\n        const iconButton = (\n            <IconButton style={{padding: '0 12px'}}>\n                <MoreVertIcon />\n            </IconButton>\n        )\n        return (\n            <Row key={id}>\n                <Col xs={2}>{id}</Col>\n                <Col xs={6}>{name}</Col>\n                <Col xs={3}>{createdDate}</Col>\n                <Col xs={1} style={{textAlign: 'right'}}>\n                    <IconMenu\n                        iconButtonElement={iconButton}\n                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\n                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\n                        <MenuItem\n                            primaryText=\"Изменить\"\n                            leftIcon={<Edit />}\n                            onTouchTap={() => { updateDialog.handleOpenUpdateDialog(id) }}\n                        />\n                        <MenuItem\n                            primaryText=\"Удалить \"\n                            leftIcon={<DeleteIcon />}\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(id) }}\n                        />\n                    </IconMenu>\n                </Col>\n            </Row>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: expensiveCategoryList,\n        loading: _.get(listData, 'listLoading')\n    }\n\n    return (\n        <Container>\n            <SubMenu url={ROUTES.EXPENSIVE_CATEGORY_LIST_URL}/>\n            <div className={classes.addButtonWrapper}>\n                <Tooltip position=\"left\" text=\"Добавить категорию\">\n                    <FloatingActionButton\n                        mini={true}\n                        className={classes.addButton}\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\n                        <ContentAdd />\n                    </FloatingActionButton>\n                </Tooltip>\n            </div>\n\n            <GridList\n                filter={filter}\n                list={list}\n                detail={expensiveCategoryDetail}\n            />\n\n            <ExpensiveCategoryCreateDialog\n                open={createDialog.openCreateDialog}\n                loading={createDialog.createLoading}\n                onClose={createDialog.handleCloseCreateDialog}\n                onSubmit={createDialog.handleSubmitCreateDialog}\n            />\n\n            <ExpensiveCategoryCreateDialog\n                isUpdate={true}\n                initialValues={updateDialog.initialValues}\n                open={updateDialog.openUpdateDialog}\n                loading={updateDialog.updateLoading}\n                onClose={updateDialog.handleCloseUpdateDialog}\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\n            />\n\n            {detailData.data && <ConfirmDialog\n                type=\"delete\"\n                message={_.get(detailData, ['data', 'name'])}\n                loading={confirmDialog.confirmLoading}\n                onClose={confirmDialog.handleCloseConfirmDialog}\n                onSubmit={confirmDialog.handleSendConfirmDialog}\n                open={confirmDialog.openConfirmDialog}\n            />}\n        </Container>\n    )\n})\n\nExpensiveCategoryGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    createDialog: PropTypes.shape({\n        createLoading: PropTypes.bool.isRequired,\n        openCreateDialog: PropTypes.bool.isRequired,\n        handleOpenCreateDialog: PropTypes.func.isRequired,\n        handleCloseCreateDialog: PropTypes.func.isRequired,\n        handleSubmitCreateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    confirmDialog: PropTypes.shape({\n        confirmLoading: PropTypes.bool.isRequired,\n        openConfirmDialog: PropTypes.bool.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleSendConfirmDialog: PropTypes.func.isRequired\n    }).isRequired,\n    updateDialog: PropTypes.shape({\n        updateLoading: PropTypes.bool.isRequired,\n        openUpdateDialog: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default ExpensiveCategoryGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/ExpensiveCategory/ExpensiveCategoryGridList.js","import ExpensiveCategoryGridList from './ExpensiveCategoryGridList'\nimport {EXPENSIVE_CATEGORY_CREATE_DIALOG_OPEN} from './ExpensiveCategoryCreateDialog'\n\nconst EXPENSIVE_CATEGORY_DELETE_DIALOG_OPEN = 'openDeleteDialog'\nconst EXPENSIVE_CATEGORY_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\n\nexport {\n    EXPENSIVE_CATEGORY_CREATE_DIALOG_OPEN,\n    EXPENSIVE_CATEGORY_DELETE_DIALOG_OPEN,\n    EXPENSIVE_CATEGORY_UPDATE_DIALOG_OPEN,\n    ExpensiveCategoryGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/ExpensiveCategory/index.js","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport {withGoogleMap, GoogleMap as DefaultGoogleMap} from 'react-google-maps'\nimport withScriptjs from 'react-google-maps/lib/async/withScriptjs'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport * as GOOGLE_MAP from '../../constants/googleMaps'\nimport {googleMapStyle} from '../../constants/googleMapsStyle'\n\nconst enhance = compose(\n    withScriptjs,\n    withGoogleMap\n)\n\nconst GoogleMapWrapper = enhance(({onMapLoad, ...props}) => {\n    return (\n        <DefaultGoogleMap ref={onMapLoad} {...props}>\n            {props.children}\n        </DefaultGoogleMap>\n    )\n})\n\nconst Loader = () =>\n    <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%'}}>\n        <CircularProgress size={40} thickness={4} />\n    </div>\n\nconst GoogleMap = (props) => {\n    const {center, ...defaultProps} = props\n    const defaultCenter = {\n        lat: 41.311141,\n        lng: 69.279716\n    }\n    return (\n        <GoogleMapWrapper\n            defaultCenter={center || defaultCenter}\n            googleMapURL={GOOGLE_MAP.GOOGLE_API_URL}\n            loadingElement={<Loader />}\n            containerElement={<div style={{height: '100%'}} />}\n            mapElement={<div style={{height: '100%'}} />}\n            defaultZoom={15}\n            radius=\"500\"\n            defaultOptions={{styles: googleMapStyle}}\n            {...defaultProps}>\n            {props.children}\n        </GoogleMapWrapper>\n    )\n}\n\nGoogleMap.propTypes = {\n    center: PropTypes.object.isRequired,\n    onMapLoad: PropTypes.func\n}\n\nexport default GoogleMap\n\n\n\n// WEBPACK FOOTER //\n// src/components/GoogleMap/GoogleMap.js","import _ from 'lodash'\nimport {compose} from 'recompose'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport Paper from 'material-ui/Paper'\nimport GridListNav from '../GridListNav'\nimport GridListHeader from '../GridListHeader'\nimport GridListBody from '../GridListBody'\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            position: 'relative',\n            width: '100%'\n        },\n        header: {\n            height: '100px'\n        },\n\n        loader: {\n            background: '#fff',\n            height: '400px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n        }\n    })\n)\n\nconst GridList = enhance((props) => {\n    const {\n        classes,\n        list,\n        customData,\n        detail,\n        filter,\n        filterDialog,\n        actionsDialog,\n        withoutCheckboxes,\n        withoutRow,\n        withInvoice,\n        withoutSearch,\n        printDialog,\n        flexibleRow,\n        withoutPagination,\n        refreshAction\n    } = props\n\n    const header = _.get(list, 'header')\n    const listItems = _.get(list, 'list')\n    const loading = _.get(list, 'loading')\n    const listIds = _.map(listItems, item => _.toInteger(_.get(item, 'key')))\n    const loaderOrList = (listLoading) => {\n        if (listLoading) {\n            return (\n                <Paper zDepth={1} className={classes.loader}>\n                    <CircularProgress size={40} thickness={4} />\n                </Paper>\n            )\n        }\n\n        return (\n            <GridListBody\n                filter={filter}\n                list={listItems}\n                detail={detail}\n                flexibleRow={flexibleRow}\n                withoutCheckboxes={withoutCheckboxes}\n            />\n        )\n    }\n\n    return (\n        <div className={classes.wrapper}>\n            <Paper zDepth={1} className={classes.header}>\n                <GridListNav\n                    filter={filter}\n                    customData={customData}\n                    filterDialog={filterDialog}\n                    actions={actionsDialog}\n                    withoutSearch={withoutSearch}\n                    withInvoice={withInvoice}\n                    printDialog={printDialog}\n                    withoutPagination={withoutPagination}\n                    refreshAction={refreshAction}\n                />\n                <GridListHeader\n                    filter={filter}\n                    listIds={listIds}\n                    withoutCheckboxes={withoutCheckboxes}\n                    withoutRow={withoutRow}\n                    column={header}\n                />\n            </Paper>\n            {loaderOrList(loading)}\n        </div>\n    )\n})\n\nGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    withoutCheckboxes: PropTypes.bool,\n    withoutSearch: PropTypes.bool,\n    withoutRow: PropTypes.bool,\n    withInvoice: PropTypes.bool,\n    list: PropTypes.shape({\n        header: PropTypes.array.isRequired,\n        list: PropTypes.array.isRequired,\n        loading: PropTypes.bool.isRequired\n    }),\n    customData: PropTypes.shape({\n        dialog: PropTypes.node.isRequired,\n        listData: PropTypes.array.isRequired\n    }),\n    detail: PropTypes.node.isRequired,\n    actionsDialog: PropTypes.node,\n    filterDialog: PropTypes.node,\n    printDialog: PropTypes.shape({\n        openPrint: PropTypes.bool,\n        handleOpenPrintDialog: PropTypes.func,\n        handleClosePrintDialog: PropTypes.func\n    }),\n    refreshAction: PropTypes.func\n}\n\nGridList.defaultProps = {\n    withoutCheckboxes: false,\n    withoutSearch: false,\n    withInvoice: false,\n    withRefreshBtn: false,\n    flexibleRow: false,\n    withoutPagination: false,\n    actionsDialog: (<div>no</div>)\n}\n\nexport default GridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridList/GridList.js","import GridList from './GridList'\n\nexport default GridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridList/index.js","import _ from 'lodash'\nimport React from 'react'\nimport {hashHistory} from 'react-router'\nimport {compose, withHandlers} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Checkbox from 'material-ui/Checkbox'\nimport Dot from '../../Images/dot.png'\nimport NotFound from '../../Images/not-found.png'\nimport Paper from 'material-ui/Paper'\n\nconst enhance = compose(\n    injectSheet({\n        item: {\n            height: '50px',\n            padding: '0 30px',\n            background: '#fff',\n            boxShadow: 'rgba(0, 0, 0, 0.12) 0px 3px 6px, rgba(0, 0, 0, 0.12) 0px 3px 4px !important',\n            '& .row': {\n                width: '100%',\n                alignItems: 'center',\n                height: '100%',\n                margin: '0',\n                '&>div:first-child': {\n                    paddingLeft: '0'\n                },\n                '&>div:last-child': {\n                    paddingRight: '0'\n                }\n            },\n            '&:after': {\n                content: '\"\"',\n                backgroundImage: 'url(' + Dot + ')',\n                position: 'absolute',\n                height: '2px',\n                left: '0',\n                right: '0',\n                marginTop: '-1px'\n            },\n            '&:last-child:after': {\n                content: '\"\"',\n                backgroundImage: 'none'\n            },\n            '& a': {\n                color: '#333',\n                fontWeight: '600'\n            }\n\n        },\n        flexibleItem: {\n            extend: 'item',\n            height: 'auto',\n            minHeight: '50px'\n        },\n        detail: {\n            margin: '20px -15px !important',\n            background: '#fff',\n            display: 'flex',\n            borderBottom: '1px dotted #eee',\n            alignItems: 'center',\n            position: 'relative',\n            minHeight: '150px',\n            transition: 'all 400ms ease-out !important'\n        },\n        emptyQuery: {\n            background: 'url(' + NotFound + ') no-repeat center center',\n            backgroundSize: '225px',\n            padding: '260px 0 50px',\n            textAlign: 'center',\n            fontSize: '13px',\n            color: '#999',\n            '& svg': {\n                width: '50px !important',\n                height: '50px !important',\n                color: '#999 !important'\n            }\n        }\n    }),\n    withHandlers({\n        onChecked: props => (id) => {\n            return (event, isChecked) => {\n                const {filter} = props\n                const selects = filter.getSelects()\n                const selectsInChecked = _\n                    .chain(selects)\n                    .union([id])\n                    .uniq()\n                    .value()\n                const selectsUnChecked = _\n                    .chain(selects)\n                    .filter(item => id !== item)\n                    .value()\n                const newSelects = isChecked ? selectsInChecked : selectsUnChecked\n                const url = filter.createURL({select: _.join(newSelects, ',')})\n\n                hashHistory.push(url)\n            }\n        }\n    })\n)\n\nconst GridListBody = enhance((props) => {\n    const {classes, filter, list, onChecked, detail, withoutCheckboxes, flexibleRow} = props\n\n    const items = _.map(list, (item, index) => {\n        const id = (_.get(item, 'key'))\n        const detailId = (_.get(detail, 'key'))\n        const selects = filter.getSelects()\n        const checkboxChecked = _\n            .chain(selects)\n            .find(selectId => selectId === id)\n            .isNumber()\n            .value()\n\n        if (id === detailId) {\n            return (\n                <Paper zDepth={2} className={classes.detail} key={index}>\n                    {detail}\n                </Paper>\n            )\n        }\n\n        return (\n            <Paper zDepth={1} className={flexibleRow ? classes.flexibleItem : classes.item} key={index} style={{zIndex: index}}>\n                    <div className={classes.checkbox}>\n                        {withoutCheckboxes &&\n                        <Checkbox onCheck={onChecked(id)} checked={checkboxChecked}/>\n                        }\n                    </div>\n                {item}\n            </Paper>\n        )\n    })\n    return (\n        <div>\n            {!_.isEmpty(items)\n                ? <div>{items}</div>\n                : <Paper zDepth={1} className={classes.emptyQuery}>\n                    <div>По вашему запросу ничего не найдено</div>\n                  </Paper>}\n        </div>\n    )\n})\n\nexport default GridListBody\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridListBody/GridListBody.js","import GridListBody from './GridListBody'\n\nexport default GridListBody\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridListBody/index.js","import React from 'react'\nimport SvgIcon from 'material-ui/SvgIcon'\n\nconst ArrowDownIcon = (props) => (\n    <SvgIcon {...props}>\n        <path d=\"M11,4H13V16L18.5,10.5L19.92,11.92L12,19.84L4.08,11.92L5.5,10.5L11,16V4Z\" />\n    </SvgIcon>\n)\n\nexport default ArrowDownIcon\n\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridListHeader/ArrowDownIcon.js","import React from 'react'\nimport SvgIcon from 'material-ui/SvgIcon'\n\nconst ArrowUpIcon = (props) => (\n    <SvgIcon {...props}>\n        <path d=\"M13,20H11V8L5.5,13.5L4.08,12.08L12,4.16L19.92,12.08L18.5,13.5L13,8V20Z\" />\n    </SvgIcon>\n)\n\nexport default ArrowUpIcon\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridListHeader/ArrowUpIcon.js","import _ from 'lodash'\nimport React from 'react'\nimport injectSheet from 'react-jss'\nimport {Row, Col} from 'react-flexbox-grid'\nimport {Link, hashHistory} from 'react-router'\nimport {compose, withHandlers} from 'recompose'\nimport ArrowUpIcon from './ArrowUpIcon'\nimport ArrowDownIcon from './ArrowDownIcon'\nimport Checkbox from 'material-ui/Checkbox'\nimport FlatButton from 'material-ui/FlatButton'\n\nconst enhance = compose(\n    injectSheet({\n        header: {\n            position: 'absolute',\n            top: '50px',\n            width: '100%',\n            height: '50px',\n            alignItems: 'center',\n            background: '#5d6474',\n            overflow: 'hidden',\n            fontWeight: '600',\n            color: '#fff',\n            display: 'flex',\n            '& .row': {\n                width: '100%',\n                alignItems: 'center',\n                '& span': {\n                    lineHeight: 'normal !important'\n                },\n                '& button': {\n                    lineHeight: 'normal !important'\n                }\n            }\n        },\n        sortingButton: {\n            color: '#ffffff',\n            cursor: 'pointer',\n            '& hover': {\n                color: '#ffffff',\n                cursor: 'pointer'\n            }\n        },\n        icon: {\n            height: '15px !important',\n            position: 'absolute !important',\n            top: '10px',\n            right: '0px',\n            color: '#fff !important'\n        },\n        button: {\n            color: '#fff !important',\n            minWidth: 'auto !important',\n            position: 'relative !important',\n            lineHeight: 'normal !important',\n            '&:hover': {\n                backgroundColor: 'transparent !important'\n            },\n            '& span': {\n                fontWeight: '600'\n            }\n        },\n        headerPadding: {\n            padding: '0 30px',\n            width: '100%',\n            '& .row': {\n                margin: '0'\n            },\n            '& .row > div:first-child': {\n                paddingLeft: '0'\n            }\n        },\n        withoutRowDiv: {\n            width: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            '& > div': {\n                padding: '0 0.5rem !important'\n            },\n            '& div:last-child': {\n                textAlign: 'right'\n            },\n            '& button': {\n                textAlign: 'left !important'\n            }\n        }\n    }),\n    withHandlers({\n        onChecked: props => (event, isChecked) => {\n            const {filter, listIds} = props\n            const selects = filter.getSelects()\n            const selectsInChecked = _\n                .chain(selects)\n                .union(listIds)\n                .uniq()\n                .value()\n            const selectsUnChecked = _\n                .chain(selects)\n                .filter(itemId => !_.includes(listIds, itemId))\n                .value()\n\n            const newSelects = isChecked ? selectsInChecked : selectsUnChecked\n            const url = filter.createURL({select: _.join(newSelects, ',')})\n\n            hashHistory.push(url)\n        }\n    })\n)\n\nconst GridListHeader = enhance((props) => {\n    const {classes, filter, column, listIds, onChecked, withoutCheckboxes, withoutRow} = props\n\n    // Calculate row size for correct showing grid list\n    const rowSize = 12\n    const defaultColumnSize = Math.floor(rowSize / column.length)\n    const fullSize = (defaultColumnSize * column.length)\n    const firstColumnSize = rowSize !== fullSize ? rowSize - fullSize + defaultColumnSize : defaultColumnSize\n\n    const checkboxChecked = _\n        .chain(filter.getSelects())\n        .filter(itemId => _.includes(listIds, itemId))\n        .sortBy(itemId => itemId)\n        .isEqual(_.sortBy(listIds, itemId => itemId))\n        .value()\n\n    const firstIndex = 0\n    const items = _.map(column, (item, index) => {\n        const xs = (!_.isNil(item.xs)) ? item.xs : (index === firstIndex ? firstColumnSize : defaultColumnSize)\n        const alignRight = _.get(item, 'alignRight')\n\n        if (_.get(item, 'sorting')) {\n            const name = _.get(item, 'name')\n            const sortingType = filter.getSortingType(name)\n            const Icon = !_.isNull(sortingType) ? sortingType ? (\n                        <ArrowUpIcon style={alignRight && {right: 'auto', left: '0'}} className={classes.icon}/>\n                    ) : (<ArrowDownIcon style={alignRight && {right: 'auto', left: '0'}} className={classes.icon}/>) : null\n\n            if (withoutRow) {\n                return (<Col style={alignRight ? {textAlign: 'right', width: xs} : {width: xs}} key={index}>\n                    <Link\n                        className={classes.sortingButton}\n                        onTouchTap={() => hashHistory.push(filter.sortingURL(name))}>\n                        <FlatButton\n                            className={classes.button}\n                            style={alignRight ? {paddingRight: '0', paddingLeft: '30px'} : {paddingRight: '30px'}}\n                            disableTouchRipple={true}>\n                            <span>{_.get(item, 'title')}</span> {Icon}\n                        </FlatButton>\n                    </Link>\n                </Col>)\n            }\n            return (<Col xs={xs} key={index} style={alignRight && {textAlign: 'right'}}>\n                        <Link\n                            className={classes.sortingButton}\n                            onTouchTap={() => hashHistory.push(filter.sortingURL(name))}>\n                            <FlatButton\n                                className={classes.button}\n                                style={alignRight ? {paddingRight: '0', paddingLeft: '30px'} : {paddingRight: '30px'}}\n                                disableTouchRipple={true}>\n                                {alignRight && Icon} <span>{_.get(item, 'title')}</span> {!alignRight && Icon}\n                            </FlatButton>\n                        </Link>\n                    </Col>)\n        }\n\n        return (\n            <Col xs={xs} key={index}>\n                {_.get(item, 'title')}\n            </Col>\n        )\n    })\n\n    return (\n        <div className={classes.header}>\n            <div className={classes.checkbox}>\n                {withoutCheckboxes &&\n                <Checkbox onCheck={onChecked} checked={checkboxChecked}/>\n                }\n            </div>\n            <div className={classes.headerPadding}>\n                {!withoutRow && <Row>\n                    {items}\n                </Row>}\n                {withoutRow && <div className={classes.withoutRowDiv}>\n                    {items}\n                </div>}\n            </div>\n        </div>\n    )\n})\n\nexport default GridListHeader\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridListHeader/GridListHeader.js","import GridListHeader from './GridListHeader'\n\nexport default GridListHeader\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridListHeader/index.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Row, Col} from 'react-flexbox-grid'\nimport injectSheet from 'react-jss'\nimport GridListNavPagination from '../GridListNavPagination'\nimport GridListNavSearch from '../GridListNavSearch'\nimport IconButton from 'material-ui/IconButton'\nimport Print from 'material-ui/svg-icons/action/print'\nimport RefreshIcon from 'material-ui/svg-icons/action/cached'\nimport Tooltip from '../../ToolTip'\n\nconst GridListNav = ({classes, filter, filterDialog, actions, withoutSearch, customData, withInvoice, printDialog, refreshAction, withoutPagination}) => {\n    const selectIsEmpty = _.isEmpty(filter.getSelects())\n    const filterIsEmpty = _.isEmpty(filterDialog)\n    const listData = _.get(customData, ['listData', 'data'])\n    const handleUpdateDialog = _.get(customData, ['dialog', 'handleOpenSetCurrencyDialog'])\n    const gridDataId = _.get(customData, 'id')\n    const currentCurrency = _.get(_.find(listData, {'id': gridDataId}), 'name')\n    const listCount = filter.getCounts()\n    const MAX_COUNT = 300\n    return (\n        <div className={classes.wrapper}>\n            <div style={{padding: '0 30px'}}>\n                {(selectIsEmpty && filterIsEmpty) && <Row>\n                    <Col xs={6} style={withoutPagination ? {} : {display: 'flex', alignItems: 'center'}}>\n                        {!withoutSearch && <GridListNavSearch filter={filter} filterIsEmpty={filterIsEmpty}/>}\n                        {withoutSearch &&\n                        <div className={classes.currencyName}>\n                            <span>{currentCurrency}</span>\n                            <a onClick={() => {\n                                handleUpdateDialog(gridDataId)\n                            }} className={classes.link}>Установить курс</a>\n                        </div>}\n                    </Col>\n                    {!withoutPagination && <Col xs={6}>\n                         <GridListNavPagination filter={filter}/>\n                    </Col>}\n                </Row>}\n\n                {(selectIsEmpty && !filterIsEmpty) && <Row>\n                    <Col xs={3}>\n                        {filterDialog}\n                    </Col>\n                    <Col xs={4}>\n                        {!withoutSearch && <GridListNavSearch filter={filter} filterIsEmpty={filterIsEmpty}/>}\n                    </Col>\n                    <Col xs={5} className={classes.flex}>\n                        {!withoutPagination && <GridListNavPagination filter={filter}/>}\n                        {withInvoice &&\n                        <Tooltip position=\"left\" text={(listCount > MAX_COUNT) ? 'Превышено количество данных' : 'Распечатать накладные'}>\n                            <IconButton\n                                disabled={(listCount > MAX_COUNT) && true}\n                                onTouchTap={printDialog.handleOpenPrintDialog}>\n                                <Print color=\"#666\"/>\n                            </IconButton>\n                        </Tooltip>}\n                        {withInvoice &&\n                        <Tooltip position=\"left\" text={'Обновить'}>\n                            <IconButton\n                                disabled={(listCount > MAX_COUNT) && true}\n                                onTouchTap={refreshAction}>\n                                <RefreshIcon color=\"#666\"/>\n                            </IconButton>\n                        </Tooltip>}\n                    </Col>\n                </Row>}\n\n                {!selectIsEmpty && <Row className={classes.action}>\n                    <Col xs={1}>\n                        {filter.getSelects().length} selected\n                    </Col>\n                    <Col xs={11} className={classes.actionButtons}>\n                        {actions}\n                    </Col>\n                </Row>}\n            </div>\n        </div>\n    )\n}\n\nGridListNav.propTypes = {\n    filter: PropTypes.object.isRequired,\n    actions: PropTypes.node,\n    withoutSearch: PropTypes.bool.isRequired,\n    withoutPagination: PropTypes.bool,\n    withInvoice: PropTypes.bool,\n    customData: PropTypes.shape({\n        dialog: PropTypes.node.isRequired,\n        listData: PropTypes.array.isRequired\n    }),\n    setCurrencyUpdateDialog: PropTypes.shape({\n        setCurrencyLoading: PropTypes.bool.isRequired,\n        openSetCurrencyDialog: PropTypes.bool.isRequired,\n        handleOpenSetCurrencyDialog: PropTypes.func.isRequired,\n        handleCloseSetCurrencyDialog: PropTypes.func.isRequired,\n        handleSubmitSetCurrencyDialog: PropTypes.func.isRequired\n    }),\n    printDialog: PropTypes.shape({\n        openPrint: PropTypes.bool,\n        handleOpenPrintDialog: PropTypes.func,\n        handleClosePrintDialog: PropTypes.func\n    }),\n    refreshAction: PropTypes.func\n}\n\nexport default injectSheet({\n    wrapper: {\n        '& .row': {\n            height: '100%'\n        },\n        '& > div': {\n            marginLeft: '0 !important',\n            marginRight: '0 !important',\n            height: '50px',\n            background: '#fff',\n            alignItems: 'center',\n            padding: '0 5px',\n            marginBottom: '50px'\n        }\n    },\n    currencyName: {\n        fontWeight: '600',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        width: '100%'\n    },\n    link: {\n        color: '#12aaeb !important',\n        fontWeight: '600 !important'\n    },\n    action: {\n        background: '#ccc !important'\n    },\n    actionButtons: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n    },\n    flex: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n        '& > div:nth-child(2)': {\n            marginLeft: '20px'\n        }\n    }\n})(GridListNav)\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridListNav/GridListNav.js","import GridListBody from './GridListNav'\n\nexport default GridListBody\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridListNav/index.js","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {hashHistory} from 'react-router'\nimport {compose, withHandlers} from 'recompose'\nimport injectSheet from 'react-jss'\nimport IconButton from 'material-ui/IconButton'\nimport SelectField from 'material-ui/SelectField'\nimport MenuItem from 'material-ui/MenuItem'\nimport ArrowLeftIcon from './ArrowLeftIcon'\nimport ArrowRightIcon from './ArrowRightIcon'\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            color: '#5d6474'\n        },\n        customWrapper: {\n            extend: 'wrapper',\n            position: 'absolute',\n            right: '30px',\n            top: '-52px',\n            height: '52px'\n        },\n\n        count: {\n            marginRight: '15px',\n            height: '50px !important',\n            '& > div': {\n                fontSize: '13px !important',\n                marginTop: '0 !important',\n                height: '100% !important'\n            }\n        },\n\n        nav: {\n            display: 'flex',\n            alignItems: 'center'\n        },\n        gridPagination: {\n            '& button': {\n                padding: '0 !important',\n                width: 'inherit !important',\n                height: 'inherit !important',\n                top: '2px'\n            },\n            '& button:first-child': {\n                padding: '0 5px 0 10px !important'\n            }\n        }\n    }),\n    withHandlers({\n        onChange: props => (event, index, value) => {\n            const {filter} = props\n            event.preventDefault()\n\n            hashHistory.push(filter.createURL({pageSize: value, page: 1}))\n        }\n    })\n)\nconst GridListNavPagination = enhance(({classes, onChange, filter, customPagination}) => {\n    const prev = filter.prevPage()\n    const next = filter.nextPage()\n    const firstPage = 1\n    const startPage = (filter.getPageRange() * (filter.getCurrentPage() - firstPage)) + firstPage\n    const startEnd = filter.getCounts() < (filter.getPageRange() * filter.getCurrentPage()) ? filter.getCounts() : filter.getPageRange() * filter.getCurrentPage()\n\n    return (\n        <div className={customPagination ? classes.customWrapper : classes.wrapper}>\n            <div className={classes.count}>\n                <SelectField\n                    value={filter.getPageRange()}\n                    style={{width: '60px', marginTop: '10px'}}\n                    underlineStyle={{border: '0px solid'}}\n                    onChange={onChange}>\n                    <MenuItem value={10} primaryText=\"10\" />\n                    <MenuItem value={50} primaryText=\"50\" />\n                    <MenuItem value={100} primaryText=\"100\" />\n                </SelectField>\n            </div>\n            <div className={classes.nav}>\n                <div>{startPage} - {startEnd} из {filter.getCounts()}</div>\n                <div className={classes.gridPagination}>\n                    <IconButton\n                        disabled={Boolean(!prev)}\n                        disableTouchRipple={true}\n                        iconStyle={{color: 'rgba(0, 0, 0, 0.56)'}}\n                        onTouchTap={() => prev && hashHistory.push(prev)}>\n                        <ArrowLeftIcon />\n                    </IconButton>\n\n                    <IconButton\n                        disabled={Boolean(!next)}\n                        disableTouchRipple={true}\n                        iconStyle={{color: 'rgba(0, 0, 0, 0.56)'}}\n                        onTouchTap={() => next && hashHistory.push(next)}>\n                        <ArrowRightIcon />\n                    </IconButton>\n                </div>\n            </div>\n        </div>\n    )\n})\n\nGridListNavPagination.propTypes = {\n    filter: PropTypes.object.isRequired\n}\nGridListNavPagination.defaultProps = {\n    customPagination: false\n}\n\nexport default GridListNavPagination\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridListNavPagination/GridListNavPagination.js","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose, withState, withHandlers} from 'recompose'\nimport {hashHistory} from 'react-router'\nimport injectSheet from 'react-jss'\nimport TextField from 'material-ui/TextField'\nimport SearchIcon from 'material-ui/svg-icons/action/search'\nimport IconButton from 'material-ui/IconButton'\n\nconst enhance = compose(\n    injectSheet({\n        search: {\n            position: 'relative',\n            display: 'flex',\n            maxWidth: '300px',\n            margin: '0 auto',\n\n            '& > div': {\n                paddingRight: '35px'\n            }\n        },\n        searchField: {\n            fontSize: '13px !important'\n        },\n        filterEmptySearch: {\n            extend: 'search',\n            margin: '0 0 0 10px'\n        },\n\n        searchButton: {\n            position: 'absolute !important',\n            right: '-10px'\n        }\n    }),\n    withState('search', 'setSearch', ({filter}) => filter.getParam('search')),\n    withHandlers({\n        onSubmit: props => (event) => {\n            const {search, filter} = props\n            event.preventDefault()\n\n            hashHistory.push(filter.createURL({search}))\n        }\n    })\n)\n\nconst GridListNavSearch = enhance(({classes, search, setSearch, onSubmit, filterIsEmpty}) => {\n    return (\n        <form onSubmit={onSubmit}>\n            <div className={filterIsEmpty ? classes.filterEmptySearch : classes.search}>\n                <TextField\n                    fullWidth={true}\n                    hintText=\"Поиск\"\n                    className={classes.searchField}\n                    value={search}\n                    onChange={(event) => setSearch(event.target.value)}\n                />\n                <IconButton\n                    iconStyle={{color: '#ccc'}}\n                    className={classes.searchButton}\n                    onClick={onSubmit}>\n                    <SearchIcon />\n                </IconButton>\n            </div>\n        </form>\n    )\n})\n\nGridListNavSearch.propTypes = {\n    filter: PropTypes.object.isRequired,\n    filterIsEmpty: PropTypes.bool.isRequired\n}\n\nexport default GridListNavSearch\n\n\n\n// WEBPACK FOOTER //\n// src/components/GridList/GridListNavSearch/GridListNavSearch.js","import _ from 'lodash'\nimport moment from 'moment'\nimport filterHelper from '../../helpers/filter'\nimport {compose, withState, withHandlers} from 'recompose'\nimport React from 'react'\nimport injectSheet from 'react-jss'\nimport SideBarMenu from '../SidebarMenu'\nimport SnakeBar from '../Snackbar'\nimport {connect} from 'react-redux'\nimport ConfirmDialog from '../ConfirmDialog'\nimport ErrorDialog from '../ErrorDialog'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport Paper from 'material-ui/Paper'\nimport Money from 'material-ui/svg-icons/editor/attach-money'\nimport Clear from 'material-ui/svg-icons/action/delete'\nimport Storehouse from 'material-ui/svg-icons/action/home'\nimport Balance from 'material-ui/svg-icons/action/account-balance-wallet'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {\n    notificationListFetchAction,\n    notificationDeleteAction,\n    notificationGetNotViewed\n} from '../../actions/notifications'\nimport {openSnackbarAction} from '../../actions/snackbar'\nimport Notifications from '../Images/Notification.png'\n\nconst iconStyle = {\n    icon: {\n        color: '#fff',\n        width: 22,\n        height: 22\n    },\n    button: {\n        width: 48,\n        height: 48,\n        padding: 0\n    }\n}\nconst moneyIcon = '#64b5f6'\nconst balanceIcon = '#4db6ac'\nconst storeIcon = '#f06292'\nconst ZERO = 0\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const filter = filterHelper(pathname, query)\n        const notificationsList = _.get(state, ['notifications', 'list', 'data', 'results'])\n        const notificationsLoading = _.get(state, ['notifications', 'list', 'loading'])\n\n        return {\n            filter,\n            notificationsList,\n            notificationsLoading\n        }\n    }),\n    withState('openConfirmDialog', 'setOpenConfirmDialog', false),\n    withState('notificationId', 'setNotificationId', null),\n    withState('openNotifications', 'setOpenNotifications', false),\n    withState('clickNotifications', 'setClickNotifications', false),\n\n    withHandlers({\n        handleOpenConfirmDialog: props => (id) => {\n            const {setOpenConfirmDialog, setNotificationId} = props\n            setOpenConfirmDialog(true)\n            setNotificationId(id)\n        },\n\n        handleCloseConfirmDialog: props => () => {\n            const {setOpenConfirmDialog} = props\n            setOpenConfirmDialog(false)\n        },\n        handleSendConfirmDialog: props => () => {\n            const {dispatch, setOpenConfirmDialog, notificationId} = props\n            dispatch(notificationDeleteAction(notificationId))\n                .catch(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\n                })\n                .then(() => {\n                    setOpenConfirmDialog(false)\n                    dispatch(notificationListFetchAction())\n                })\n        },\n\n        handleOpenNotificationBar: props => (status) => {\n            const {setOpenNotifications, dispatch} = props\n            setOpenNotifications(status)\n            if (status) {\n                dispatch(notificationListFetchAction())\n            } else {\n                dispatch(notificationGetNotViewed())\n            }\n        }\n\n    }),\n    injectSheet({\n        wrapper: {\n            height: '100%',\n            width: '100%',\n            display: 'flex'\n        },\n        sidenav: {\n            width: '84px',\n            zIndex: '6'\n        },\n        content: {\n            background: '#f2f5f8',\n            width: 'calc(100% - 84px)',\n            padding: '0 28px 28px',\n            overflow: 'auto'\n        },\n        notifications: {\n            background: 'rgba(0,0,0,0.3)',\n            position: 'fixed',\n            top: '0',\n            left: '0',\n            width: '100%',\n            height: '100%',\n            transition: 'all 300ms ease'\n        },\n        notificationsWrapper: {\n            background: '#fff',\n            color: '#333 !important',\n            position: 'absolute',\n            left: '84px',\n            top: '0',\n            bottom: '0',\n            width: '400px'\n        },\n        header: {\n            background: '#495061',\n            color: '#fff',\n            fontSize: '15px',\n            fontWeight: '600',\n            padding: '0 20px',\n            height: '70px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n        },\n        notifBody: {\n            overflowY: 'auto',\n            height: 'calc(100% - 70px)'\n        },\n        notif: {\n            padding: '10px 20px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            borderBottom: '1px #efefef solid',\n            cursor: 'pointer',\n            '& .notifIcon': {\n                display: 'flex',\n                position: 'relative',\n                alignItems: 'center',\n                justifyContent: 'center',\n                width: '36px',\n                height: '20.78px',\n                backgroundColor: '#dadada',\n                margin: '10.39px 0',\n                '&:before': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    width: '0',\n                    borderLeft: '18px solid transparent',\n                    borderRight: '18px solid transparent',\n                    bottom: '100%',\n                    left: '0',\n                    borderBottom: '10.39px solid #dadada'\n                },\n                '&:after': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    width: '0',\n                    borderLeft: '18px solid transparent',\n                    borderRight: '18px solid transparent',\n                    top: '100%',\n                    left: '0',\n                    borderTop: '10.39px solid #dadada'\n                },\n                '& svg': {\n                    width: '17px !important',\n                    height: '17px !important',\n                    color: '#fff !important'\n                }\n            },\n            '& .notifIcon.money': {\n                backgroundColor: moneyIcon,\n                '&:before': {\n                    borderBottomColor: moneyIcon\n                },\n                '&:after': {\n                    borderTopColor: moneyIcon\n                }\n            },\n            '& .notifIcon.balance': {\n                backgroundColor: balanceIcon,\n                '&:before': {\n                    borderBottomColor: balanceIcon\n                },\n                '&:after': {\n                    borderTopColor: balanceIcon\n                }\n            },\n            '& .notifIcon.store': {\n                backgroundColor: storeIcon,\n                '&:before': {\n                    borderBottomColor: storeIcon\n                },\n                '&:after': {\n                    borderTopColor: storeIcon\n                }\n            }\n        },\n        notifContent: {\n            flexBasis: '250px'\n        },\n        notifTitle: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            fontWeight: '600',\n            marginBottom: '5px',\n            '& span': {\n                fontSize: '11px !important',\n                fontWeight: 'normal',\n                color: '#999'\n            }\n        },\n        loading: {\n            textAlign: 'center !important',\n            top: '40% !important',\n            position: 'relative !important'\n        },\n        emptyQuery: {\n            background: 'url(' + Notifications + ') no-repeat center center',\n            backgroundSize: '115px',\n            padding: '200px 0 20px',\n            textAlign: 'center',\n            color: '#999',\n            fontWeight: 'bold'\n        }\n    })\n)\nconst Layout = enhance((props) => {\n    const {\n        classes,\n        handleSignOut,\n        children,\n        notificationId,\n        openNotifications,\n        setClickNotifications,\n        notificationsList,\n        notificationsLoading\n    } = props\n\n    const notificationData = {\n        open: props.openConfirmDialog,\n        notificationsId: props.notificationsId,\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\n        handleSendConfirmDialog: props.handleSendConfirmDialog,\n        handleOpenNotificationBar: props.handleOpenNotificationBar\n    }\n    const notificationListExp = _.map(notificationsList, (item) => {\n        const id = _.get(item, 'id')\n        const title = _.get(item, 'title')\n        const text = _.get(item, 'text')\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\n        const viewed = _.get(item, 'viewed')\n        const template = _.get(item, ['template', 'name']) === 'accountant'\n            ? <div className=\"notifIcon balance\"><Balance/></div>\n            : (_.get(item, ['template', 'name']) === 'order'\n                    ? <div className=\"notifIcon money\"><Money/></div>\n                    : (_.get(item, ['template', 'name']) === 'supply'\n                        ? <div className=\"notifIcon store\"><Storehouse/></div>\n                        : <div className=\"notifIcon store\"><Storehouse/></div>)\n            )\n\n        return (\n            <div key={id} className={classes.notif} onClick={() => {\n                setClickNotifications(true)\n            }} style={viewed ? {opacity: '0.5'} : {opacity: '1'}}>\n                {template}\n                <div className={classes.notifContent}>\n                    <div className={classes.notifTitle}>\n                        <div>{title}</div>\n                        <span>{createdDate}</span>\n                    </div>\n                    <div className=\"notificationText\">\n                        {text}\n                    </div>\n                </div>\n                <IconButton\n                    iconStyle={iconStyle.icon}\n                    style={iconStyle.button}\n                    onTouchTap={ () => {\n                        notificationData.handleOpenConfirmDialog(id)\n                    }}\n                >\n                    <Clear color=\"#dadada\"/>\n                </IconButton>\n            </div>\n        )\n    })\n    return (\n        <div className={classes.wrapper}>\n            <div className={classes.notifications} style={openNotifications ? {opacity: '1', zIndex: '4'} : {opacity: '0', zIndex: '-99'}}>\n                <Paper className={classes.notificationsWrapper} zDepth={4}>\n                    <div className={classes.header}>\n                        <div>Уведомления</div>\n                        <div>\n                            <IconButton\n                                iconStyle={iconStyle.icon}\n                                style={iconStyle.button}\n                                onTouchTap={() => {\n                                    notificationData.handleOpenNotificationBar(false)\n                                }}>\n                                <CloseIcon2 color=\"#fff\"/>\n                            </IconButton>\n                        </div>\n                    </div>\n                    <div className={classes.notifBody}>\n                        {\n                            notificationsLoading ? <div className={classes.loading}>\n                                <CircularProgress size={40} thickness={4}/>\n                            </div>\n                                : (notificationListExp.length > ZERO ? notificationListExp\n                                : <div className={classes.emptyQuery}>\n                                    <div>Нет уведомлений</div>\n                                </div>)\n                        }\n                    </div>\n                </Paper>\n            </div>\n            <div className={classes.sidenav}>\n                <SideBarMenu handleSignOut={handleSignOut}\n                             handleOpenNotificationBar={notificationData.handleOpenNotificationBar}/>\n            </div>\n            <div className={classes.content}>\n                {children}\n            </div>\n\n            <SnakeBar />\n            <ErrorDialog />\n            {notificationsList && <ConfirmDialog\n                type=\"delete\"\n                message={_.get(_.find(notificationsList, {'id': notificationId}), 'title')}\n                onClose={notificationData.handleCloseConfirmDialog}\n                onSubmit={notificationData.handleSendConfirmDialog}\n                open={notificationData.open}\n            />}\n        </div>\n    )\n})\n\nexport default Layout\n\n\n\n// WEBPACK FOOTER //\n// src/components/Layout/Layout.js","import React from 'react'\n\nconst LinearProgress = (props) => {\n    return (\n        <div {...props} className=\"progress\">\n            <div className=\"indeterminate\"></div>\n        </div>\n\n    )\n}\n\nexport default LinearProgress\n\n\n\n// WEBPACK FOOTER //\n// src/components/LinearProgress/LinearProgress.js","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport {Field, reduxForm} from 'redux-form'\nimport {ManufactureSearchField} from '../ReduxForm'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport validate from '../../helpers/validate'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        titleContent: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '20px 30px',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                padding: '0 !important',\n                position: 'absolute !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'ChangeManufactureForm',\n        enableReinitialize: true\n    })\n)\n\nconst ManufactureChange = enhance((props) => {\n    const {open, handleSubmit, loading, onClose, classes, error} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '135px'} : {width: '600px'}}\n            bodyClassName={classes.popUp}>\n            <form onSubmit={onSubmit} className={classes.form}>\n                <div className={classes.titleContent}>\n                    <span>Изменение производитель</span>\n                    <IconButton onTouchTap={onClose}>\n                        <CloseIcon2 color=\"#666666\"/>\n                    </IconButton>\n                </div>\n                {error && <div className={classes.error}>Ошибка: {error}</div>}\n                <div>\n                    <Field\n                        name=\"manufacture\"\n                        label=\"Производство\"\n                        className={classes.inputFieldCustom}\n                        component={ManufactureSearchField}\n                        fullWidth={true}/>\n                </div>\n                <div className={classes.bottomButton}>\n                    <FlatButton\n                        label=\"Сохранить\"\n                        className={classes.actionButton}\n                        primary={true}\n                        type=\"submit\"\n                    />\n                </div>\n            </form>\n        </Dialog>\n    )\n})\n\nManufactureChange.propTypes = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func,\n    loading: PropTypes.bool\n}\n\nManufactureChange.defaultProps = {\n    isUpdate: false\n}\n\nexport default ManufactureChange\n\n\n\n// WEBPACK FOOTER //\n// src/components/Manufacture/ManufactureChangeDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport {Col} from 'react-flexbox-grid'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\nimport IconButton from 'material-ui/IconButton'\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport Map from 'material-ui/svg-icons/maps/map'\nimport Tooltip from '../ToolTip'\nimport NotFound from '../Images/not-found.png'\n\nconst ZERO = 0\nconst iconStyle = {\n    icon: {\n        color: '#666',\n        width: 20,\n        height: 20\n    },\n    addButton: {\n        borderRadius: '50%',\n        background: '#666666',\n        height: 24,\n        width: 24,\n        padding: '2px 0 0 0'\n    },\n    button: {\n        width: 48,\n        height: 48,\n        padding: 0\n    }\n}\n\nconst enhance = compose(\n    injectSheet({\n        dottedList: {\n            padding: '20px 0'\n        },\n        wrapper: {\n            width: '100%'\n        },\n        loader: {\n            width: '100%',\n            background: '#fff',\n            height: '200px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n        },\n        title: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            height: '65px',\n            padding: '0 30px',\n            borderBottom: '1px #efefef solid'\n        },\n        titleLabel: {\n            fontSize: '18px',\n            color: '#333',\n            fontWeight: '700',\n            cursor: 'pointer'\n        },\n        materialsList: {\n            padding: '0 30px'\n        },\n        rawMaterials: {\n            '& .dottedList': {\n                padding: '10px 0'\n            },\n            '& .dottedList:last-child:after': {\n                backgroundImage: 'none'\n            }\n        },\n        titleButtons: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            '& svg': {\n                color: '#fff !important'\n            }\n        },\n        listButtons: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            '& button': {\n                height: '20px !important',\n                width: '25px !important'\n            }\n        },\n        emptyQuery: {\n            background: 'url(' + NotFound + ') no-repeat center center',\n            backgroundSize: '285px',\n            padding: '260px 0 0',\n            textAlign: 'center',\n            fontSize: '15px',\n            color: '#666',\n            '& svg': {\n                width: '50px !important',\n                height: '50px !important',\n                color: '#999 !important'\n            }\n        }\n    }),\n)\n\nconst ManufactureDetails = enhance((props) => {\n    const {\n        classes,\n        loading,\n        data,\n        handleOpenEditMaterials,\n        handleOpenConfirmDialog,\n        productTitle,\n        createMaterials,\n        handleDeleteAllIngredient,\n        handleOpenChangeManufacture,\n        handleCloseDetail\n    } = props\n\n    const id = _.get(data, 'id')\n    if (loading) {\n        return (\n            <div className={classes.loader}>\n                <div>\n                    <CircularProgress size={40} thickness={4}/>\n                </div>\n            </div>\n        )\n    }\n    const ingredientList = _.map(_.get(data, 'ingredient'), (item) => {\n        const itemId = _.get(item, 'id')\n        const ingredient = _.get(item, ['ingredient', 'name'])\n        const amount = _.get(item, 'amount')\n        const measurement = _.get(item, ['ingredient', 'measurement', 'name'])\n        return (\n            <li key={itemId} className=\"dottedList\">\n                <Col xs={7}>{ingredient}</Col>\n                <Col xs={3}>{amount} {measurement}</Col>\n                <Col xs={2}>\n                    <div className={classes.listButtons}>\n                        <Tooltip position=\"bottom\" text=\"Изменить\">\n                            <IconButton\n                                iconStyle={iconStyle.icon}\n                                style={iconStyle.button}\n                                touch={true}\n                                onClick={() => {\n                                    handleOpenEditMaterials(itemId)\n                                }}>\n                                <ModEditorIcon />\n                            </IconButton>\n                        </Tooltip>\n                        <Tooltip position=\"bottom\" text=\"Удалить\">\n                            <IconButton\n                                iconStyle={iconStyle.icon}\n                                style={iconStyle.button}\n                                touch={true}\n                                onClick={() => {\n                                    handleOpenConfirmDialog(itemId)\n                                }}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </div>\n                </Col>\n            </li>\n        )\n    })\n\n    return (\n        <div key={id} className={classes.wrapper}>\n            <div className={classes.title}>\n                <div className={classes.titleLabel}\n                     onTouchTap={handleCloseDetail}>{productTitle}</div>\n                <div className={classes.titleButtons}>\n                    <Tooltip position=\"bottom\" text=\"Изменение производитель\">\n                        <IconButton\n                            iconStyle={iconStyle.icon}\n                            style={iconStyle.addButton}\n                            onClick={handleOpenChangeManufacture}>\n                            <Map />\n                        </IconButton>\n                    </Tooltip>\n                    <Tooltip position=\"bottom\" text=\"Удалить продукт\">\n                        <IconButton\n                            iconStyle={iconStyle.icon}\n                            style={iconStyle.addButton}\n                            onClick={() => { handleDeleteAllIngredient(id) }}>\n                            <DeleteIcon />\n                        </IconButton>\n                    </Tooltip>\n                    <Tooltip position=\"bottom\" text=\"Добавить сырье\">\n                        <IconButton\n                            iconStyle={iconStyle.icon}\n                            style={iconStyle.addButton} onClick={ createMaterials.handleOpen }>\n                            <ContentAdd />\n                        </IconButton>\n                    </Tooltip>\n                </div>\n            </div>\n            <div className={classes.materialsList}>\n                {ingredientList.length > ZERO\n                    ? <div>\n                        <ul className={classes.rawMaterials}>\n                            <li key={id} className=\"dottedList\">\n                                <Col xs={7}>\n                                    <strong>Сырье</strong>\n                                </Col>\n                                <Col xs={3}>\n                                    <strong>Обьем</strong>\n                                </Col>\n                            </li>\n                            {ingredientList}\n                        </ul>\n                    </div>\n                    : <div className={classes.emptyQuery}>\n                        <div>По вашему запросу ничего не найдено</div>\n                    </div>}\n            </div>\n        </div>\n    )\n})\n\nManufactureDetails.propTypes = {\n    handleOpenEditMaterials: PropTypes.func.isRequired,\n    handleOpenConfirmDialog: PropTypes.func.isRequired,\n    handleOpenChangeManufacture: PropTypes.func.isRequired\n}\n\nexport default ManufactureDetails\n\n\n\n// WEBPACK FOOTER //\n// src/components/Manufacture/ManufactureDetails.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Row} from 'react-flexbox-grid'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport ManufactureAddStaffDialog from './ManufactureAddStaffDialog'\nimport ManufactureShowBom from './ManufactureShowBom'\nimport ManufactureChangeDialog from './ManufactureChangeDialog'\nimport ManufactureAddProductDialog from './ManufactureAddProductDialog'\nimport ManufactureEditProductDialog from './ManufactureEditProductDialog'\nimport * as ROUTES from '../../constants/routes'\nimport Container from '../Container'\nimport Paper from 'material-ui/Paper'\nimport SubMenu from '../SubMenu'\nimport ManufactureTab from './ManufactureTab'\nimport ConfirmDialog from '../ConfirmDialog'\nimport Glue from '../Images/glue.png'\nimport Cylindrical from '../Images/cylindrical.png'\nimport Press from '../Images/press.png'\nimport Cut from '../Images/cut.png'\nimport Badge from '../Images/badge.png'\n\nconst enhance = compose(\n    injectSheet({\n        addButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        addButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px'\n        },\n        productionMainRow: {\n            margin: '0 -28px',\n            height: 'calc(100vh - 60px)'\n        },\n        productionLeftSide: {\n            padding: '0',\n            flexBasis: '25%',\n            maxWidth: '25%'\n        },\n        productionRightSide: {\n            background: '#fff',\n            padding: '0 30px',\n            '& .row:first-child img': {\n                width: '18px',\n                height: '18px',\n                marginRight: '10px'\n            }\n        },\n        productionUl: {\n            listStyle: 'none',\n            margin: '0',\n            padding: '0',\n            minHeight: 'calc(100% - 59px)',\n            borderRight: '1px #efefef solid'\n        },\n        productionStaffUl: {\n            extend: 'productionUl',\n            '& .dottedList': {\n                margin: '0',\n                padding: '10px 0 10px 0',\n                display: 'flex',\n                alignItems: 'center',\n                position: 'relative',\n                '& div:first-child': {\n                    width: '30px',\n                    height: '30px',\n                    display: 'inline-block',\n                    borderRadius: '50%',\n                    marginRight: '10px',\n                    overflow: 'hidden'\n                },\n                '& div:first-child img': {\n                    width: '30px'\n                },\n                '& div:last-child': {\n                    display: 'inline-block',\n                    verticalAlign: 'top'\n                },\n                '& div:last-child span': {\n                    color: '#666'\n                }\n            },\n            '& .dottedList:last-child:after': {\n                content: '\"\"',\n                backgroundImage: 'none'\n            }\n        },\n        productionTypeLi: {\n            background: '#f2f5f8',\n            margin: '0',\n            padding: '15px 30px',\n            borderBottom: '1px solid #efefef',\n            display: 'flex',\n            position: 'relative',\n            alignItems: 'center',\n            cursor: 'pointer',\n            transition: 'all 0.3s ease',\n            '& img': {\n                width: '24px',\n                height: '24px',\n                marginRight: '10px'\n            }\n        },\n        productionH2: {\n            fontSize: '13px',\n            fontWeight: 'bold',\n            margin: '0',\n            padding: '20px 30px'\n        },\n        productionRightH2: {\n            fontSize: '13px',\n            fontWeight: '800',\n            margin: '0',\n            borderBottom: '1px solid #efefef',\n            padding: '20px 0',\n            display: 'flex',\n            alignItems: 'center'\n        },\n\n        productionStaffGroupTitle: {\n            margin: '0',\n            '& .dottedList': {\n                padding: '20px 0 10px',\n                display: 'flex',\n                justifyContent: 'space-between',\n                '& p': {\n                    margin: '0',\n                    fontWeight: '600 !important'\n                },\n                '& span': {\n                    color: '#999',\n                    fontSize: '12px !important'\n                }\n            }\n        },\n        productList: {\n            width: '100%',\n            '& li': {\n                width: '100%',\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center',\n                padding: '10px 0'\n            },\n            '& .dottedList:last-child:after': {\n                content: '\"\"',\n                backgroundImage: 'none'\n            },\n            '& .dottedList:after': {\n                left: '0.7em',\n                right: '0.7em'\n            }\n        },\n        deleteHideIco: {\n            display: 'none',\n            position: 'absolute',\n            right: '0'\n        },\n        productionEquipment: {\n            padding: '20px 0',\n            borderBottom: '1px solid #efefef'\n        },\n        productionEquipmentElement: {\n            background: '#f2f5f8',\n            textAlign: 'center',\n            padding: '20px 30px'\n        },\n        workerWrap: {\n            display: 'flex',\n            alignItems: 'center',\n            padding: '10px 0',\n            position: 'relative',\n            '&:hover > div:last-child': {\n                display: 'flex'\n            }\n        },\n        workerAvatar: {\n            width: '30px',\n            height: '30px',\n            borderRadius: '50%',\n            marginRight: '10px',\n            overflow: 'hidden',\n            '& img': {\n                width: '100%',\n                height: '100%'\n            }\n        },\n        workerPosition: {\n            '& span': {\n                display: 'block',\n                color: '#666',\n                fontSize: '11px !important'\n            }\n        },\n        tabNav: {\n            padding: '15px 0',\n            borderBottom: '1px #f2f5f8 solid',\n            '& a': {\n                margin: '-15px 0',\n                padding: '15px 0',\n                marginRight: '40px',\n                color: '#9b9b9b',\n                '&.active': {\n                    color: '#12aaeb',\n                    borderBottom: '1px solid'\n                }\n            }\n        },\n        tabContent: {\n            '& .row:first-child': {\n                fontWeight: '600'\n            },\n            '& .row': {\n                '& > div:first-child': {\n                    textAlign: 'left'\n                }\n            }\n        },\n        tabWrapper: {\n            overflowY: 'auto',\n            overflowX: 'hidden',\n            height: 'calc(100vh - 120px)'\n        },\n        tableHeaderPN: {\n            width: '100%',\n            display: 'flex',\n            borderBottom: '1px solid #efefef',\n            height: '60px',\n            alignItems: 'center'\n        }\n    })\n)\n\nconst ManufactureGridList = enhance((props) => {\n    const {\n        listData,\n        detailData,\n        showBom,\n        classes,\n        equipmentData,\n        editMaterials,\n        createMaterials,\n        productData,\n        tabData,\n        productFilterDialog,\n        personData,\n        shipmentData,\n        deleteMaterials\n    } = props\n\n    const detailId = _.get(detailData, 'id')\n    const glue = 3\n    const cylindrical = 4\n    const press = 6\n    const cut = 7\n    const badge = 8\n    const manufactureList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        return (\n            <li key={id} className={classes.productionTypeLi}\n                onClick={() => {\n                    listData.handleClickItem(id)\n                }}\n                style={ detailId === id ? {backgroundColor: 'white'} : {}}>\n                { id === glue ? <img src={Glue}/> : (\n                    id === cylindrical ? <img src={Cylindrical}/> : (\n                        id === press ? <img src={Press}/> : (\n                            id === cut ? <img src={Cut}/> : (\n                                id === badge ? <img src={Badge}/> : '')\n                        )\n                    )\n                )}\n\n                {name}\n            </li>\n        )\n    })\n    const ZERO = 0\n\n    const productConfirm = _.get(productData, 'confirmDialog')\n    const productCreate = _.get(productData, 'createDialog')\n    const userCreate = _.get(personData, 'createDialog')\n    const userUpdate = _.get(personData, 'updateDialog')\n    const userConfirm = _.get(personData, 'confirmDialog')\n    const productName = _.get(_.find(_.get(productData, 'productList'), {'id': _.toInteger(_.get(productData, ['detailData', 'id']))}), 'name')\n    return (\n        <Container>\n            <SubMenu url={ROUTES.MANUFACTURE_CUSTOM_URL}/>\n            <ManufactureAddStaffDialog\n                open={userCreate.open}\n                onClose={userCreate.handleCloseDialog}\n                onSubmit={userCreate.handleSubmitDialog}\n            />\n            <ManufactureAddStaffDialog\n                isUpdate={true}\n                initialValues={userUpdate.initialValues}\n                open={userUpdate.open}\n                onClose={userUpdate.handleCloseUpdateDialog}\n                onSubmit={userUpdate.handleSubmitUpdateDialog}\n            />\n            <ManufactureShowBom\n                open={showBom.open}\n                onClose={showBom.handleClose}\n\n            />\n            <ManufactureAddProductDialog\n                open={productCreate.open}\n                onClose={productCreate.handleCloseCreateDialog}\n                onSubmit={productCreate.handleSubmitCreateDialog}\n            />\n            <ManufactureEditProductDialog\n                open={createMaterials.open}\n                onClose={createMaterials.handleClose}\n                onSubmit={createMaterials.handleSubmit}\n            />\n            <ManufactureEditProductDialog\n                isUpdate={true}\n                initialValues={editMaterials.initialValues}\n                measurement={editMaterials.measurement}\n                open={editMaterials.open}\n                onClose={editMaterials.handleClose}\n                onSubmit={editMaterials.handleSubmit}\n            />\n            <ManufactureChangeDialog\n                open={_.get(productData, ['changeManufacture', 'open'])}\n                onClose={_.get(productData, ['changeManufacture', 'handleCloseChangeManufacture'])}\n                onSubmit={_.get(productData, ['changeManufacture', 'handleSubmitChangeManufacture'])}\n            />\n\n            <Row className={classes.productionMainRow}>\n                <div className={classes.productionLeftSide}>\n                    <h2 className={classes.productionH2}>Этапы производства</h2>\n                    <Paper zDepth={2} style={{height: 'calc(100% - 59px)'}}>\n                        <ul className={classes.productionUl}>\n                            {\n                                _.get(listData, 'listLoading')\n                                    ? <div style={{textAlign: 'center'}}>\n                                    <CircularProgress size={40} thickness={4}/>\n                                </div>\n                                    : manufactureList\n                            }\n                        </ul>\n                    </Paper>\n                </div>\n\n                <ManufactureTab\n                    tabData={tabData}\n                    editMaterials={editMaterials}\n                    createMaterials={createMaterials}\n                    deleteMaterials={deleteMaterials}\n                    productData={productData}\n                    personData={personData}\n                    equipmentData={equipmentData}\n                    shipmentData={shipmentData}\n                    productFilterDialog={productFilterDialog}\n                    handleCloseDetail={_.get(detailData, 'handleCloseDetail')}/>\n            </Row>\n\n            {_.get(deleteMaterials, 'open') !== false && <ConfirmDialog\n                type=\"delete\"\n                open={deleteMaterials.open}\n                message={_.get(deleteMaterials, 'name')}\n                onClose={deleteMaterials.handleCloseConfirmDialog}\n                onSubmit={deleteMaterials.handleSendConfirmDialog}\n            />}\n            {_.get(productData, ['detailData', 'id']) > ZERO && <ConfirmDialog\n                type=\"delete\"\n                message={productName}\n                onClose={productConfirm.handleCloseConfirmDialog}\n                onSubmit={productConfirm.handleSendConfirmDialog}\n                open={productConfirm.openConfirmDialog}\n            />}\n            {_.get(personData, 'userShiftItem') && <ConfirmDialog\n                type=\"delete\"\n                message={_.get(_.get(personData, ['userShiftItem', 'user']), 'firstName') +\n                ' ' + _.get(_.get(personData, ['userShiftItem', 'user']), 'secondName')}\n                onClose={userConfirm.handleCloseConfirmDialog}\n                onSubmit={userConfirm.handleSendConfirmDialog}\n                open={userConfirm.open}\n            />}\n        </Container>\n    )\n})\n\nManufactureGridList.propTypes = {\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    showBom: PropTypes.shape({\n        open: PropTypes.bool.isRequired,\n        handleOpen: PropTypes.func.isRequired,\n        handleClose: PropTypes.func.isRequired\n    }).isRequired,\n    productData: PropTypes.object.isRequired,\n    personData: PropTypes.object.isRequired,\n    equipmentData: PropTypes.object,\n    tabData: PropTypes.object.isRequired,\n    productFilterDialog: PropTypes.shape({\n        initialValues: PropTypes.object,\n        filterLoading: PropTypes.bool,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    }).isRequired,\n    createMaterials: PropTypes.shape({\n        open: PropTypes.bool.isRequired,\n        handleOpen: PropTypes.func.isRequired,\n        handleClose: PropTypes.func.isRequired,\n        handleSubmit: PropTypes.func.isRequired\n    }),\n    updateProductDialog: PropTypes.object\n}\n\nexport default ManufactureGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Manufacture/ManufactureGridList.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport {Col} from 'react-flexbox-grid'\nimport Paper from 'material-ui/Paper'\nimport * as TAB from '../../constants/manufactureTab'\nimport {Tabs, Tab} from 'material-ui/Tabs'\nimport ManufactureProduct from './Tab/ManufactureProduct'\nimport ManufacturePerson from './Tab/ManufacturePerson'\nimport ManufactureEquipment from './Tab/ManufactureEquipment'\nimport ManufactureShipment from './Tab/ManufactureShipment'\nconst enhance = compose(\n    injectSheet({\n        ManufactRightSide: {\n            padding: '0px 25px',\n            zIndex: '2'\n        },\n        colorCat: {\n            marginBottom: '0',\n            width: '100%',\n            '& > div': {\n                paddingRight: 'calc(100% - 450px)',\n                background: '#fff !important'\n            },\n            '& > div:first-child': {\n                borderBottom: '1px #transparent solid'\n            },\n            '& > div:last-child': {\n                width: '100% !important',\n                padding: '0'\n            },\n            '& > div:nth-child(2) > div': {\n                marginTop: '0px !important',\n                marginBottom: '-1px',\n                backgroundColor: '#12aaeb !important',\n                height: '1px !important'\n            },\n            '& button': {\n                color: '#333 !important',\n                backgroundColor: '#fefefe !important',\n                '& > div > div': {\n                    height: '57px !important'\n                }\n            },\n            '& button > span:first-line': {\n                color: '#a6dff7'\n            },\n            '& button div div': {\n                textTransform: 'initial'\n            }\n        }\n    })\n)\n\nconst ManufactureTab = enhance((props) => {\n    const {classes,\n        tabData,\n        productFilterDialog,\n        productData,\n        personData,\n        equipmentData,\n        editMaterials,\n        createMaterials,\n        deleteMaterials,\n        shipmentData,\n        handleCloseDetail\n    } = props\n    const tab = _.get(tabData, 'tab')\n    return (\n        <Col className={classes.ManufactRightSide} xs={9} md={9}>\n            <div>\n                <Paper zDepth={1}>\n                    <Tabs\n                        className={classes.colorCat}\n                        value={tab}\n                        onChange={(value) => tabData.handleTabChange(value)}>\n                        <Tab label=\"Продукция\" value={TAB.MANUFACTURE_TAB_PRODUCT}/>\n                        <Tab label=\"Персонал\" value={TAB.MANUFACTURE_TAB_PERSON} />\n                        <Tab label=\"Оборудование\" value={TAB.MANUFACTURE_TAB_EQUIPMENT} />\n                        <Tab label=\"Партия товара\" value={TAB.MANUFACTURE_TAB_SHIPMENT} />\n                    </Tabs>\n                </Paper>\n                {TAB.MANUFACTURE_TAB_PRODUCT === tab && <ManufactureProduct\n                    productData={productData}\n                    editMaterials={editMaterials}\n                    filter={tabData.filter}\n                    filterDialog={productFilterDialog}\n                    createMaterials={createMaterials}\n                    deleteMaterials={deleteMaterials}\n                    handleCloseDetail={handleCloseDetail}/>}\n                {TAB.MANUFACTURE_TAB_PERSON === tab && <ManufacturePerson\n                    personData={personData}\n                    />}\n                {TAB.MANUFACTURE_TAB_EQUIPMENT === tab && <ManufactureEquipment\n                    equipmentData={equipmentData}/>}\n                {TAB.MANUFACTURE_TAB_SHIPMENT === tab && <ManufactureShipment\n                    shipmentData={shipmentData}/>}\n            </div>\n        </Col>\n    )\n})\nManufactureTab.propTypes = {\n    tabData: PropTypes.shape({\n        tab: PropTypes.string.isRequired,\n        handleTabChange: PropTypes.func.isRequired\n    }),\n    productData: PropTypes.object.isRequired,\n    personData: PropTypes.object.isRequired,\n    equipmentData: PropTypes.object.isRequired,\n    shipmentData: PropTypes.object.isRequired\n}\n\nexport default ManufactureTab\n\n\n\n// WEBPACK FOOTER //\n// src/components/Manufacture/ManufactureTab.js","import _ from 'lodash'\nimport React from 'react'\nimport {Row, Col} from 'react-flexbox-grid'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport IconButton from 'material-ui/IconButton'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\nimport GridList from '../../GridList'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'name',\n        title: 'Наименование',\n        xs: 4\n    },\n    {\n        sorting: true,\n        name: 'type',\n        title: 'Последняя отгрузка №',\n        xs: 4\n    },\n    {\n        sorting: true,\n        name: 'brand',\n        title: 'Состояние',\n        xs: 4\n    }\n]\nconst enhance = compose(\n    injectSheet({\n\n        imgContent: {\n            '& img': {\n                width: '33%',\n                margin: '1px'\n            },\n            height: '390px',\n            overflowY: 'scroll'\n        },\n        equipmentContent: {\n            marginTop: '56px'\n        }\n    })\n)\n\nconst ManufactureEquipment = enhance((props) => {\n    const {equipmentData, classes} = props\n\n    const filter = _.get(equipmentData, 'filter')\n    const detail = (\n        <span>a</span>\n    )\n\n    const equipmentList = _.map(_.get(equipmentData, 'equipmentList'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        const lastShipment = _.get(item, 'lastShipment')\n        const status = _.get(item, 'status') === '0' ? 'не работает'\n            : (_.get(item, 'status') === '1' ? 'рабочий'\n            : 'получить продукт')\n        return (\n            <Row key={id}>\n                <Col xs={4}>{name}</Col>\n                <Col xs={4}>{lastShipment}</Col>\n                <Col xs={4}>{status}</Col>\n            </Row>\n        )\n    })\n    const equipmentListExp = {\n        header: listHeader,\n        list: equipmentList,\n        loading: _.get(equipmentData, 'listLoading')\n    }\n    const actions = (\n        <div>\n            <IconButton>\n                <ModEditorIcon />\n            </IconButton>\n\n            <IconButton>\n                <DeleteIcon />\n            </IconButton>\n        </div>\n    )\n    return (\n        <Row className={classes.equipmentContent}>\n            <Col xs={12}>\n                <GridList\n                    filter={filter}\n                    list={equipmentListExp}\n                    detail={detail}\n                    actionsDialog={actions}/>\n            </Col>\n        </Row>\n    )\n})\n\nexport default ManufactureEquipment\n\n\n\n// WEBPACK FOOTER //\n// src/components/Manufacture/Tab/ManufactureEquipment.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Row, Col} from 'react-flexbox-grid'\nimport IconButton from 'material-ui/IconButton'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\nimport FloatButton from 'material-ui/FlatButton'\nimport IconMenu from 'material-ui/IconMenu'\nimport MenuItem from 'material-ui/MenuItem'\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport Edit from 'material-ui/svg-icons/image/edit'\nimport PersonFilterForm from '../PersonFilterForm'\nimport GridList from '../../GridList'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'name',\n        title: 'Сотрудник',\n        xs: 4\n    },\n    {\n        sorting: true,\n        name: 'position',\n        title: 'Должность',\n        xs: 3\n    },\n    {\n        sorting: true,\n        name: 'shift',\n        title: 'Смена',\n        xs: 3\n    },\n    {\n        sorting: true,\n        name: 'action',\n        title: '',\n        xs: 2\n    }\n]\n\nconst ManufacturePerson = (props) => {\n    const {personData} = props\n\n    const filter = _.get(personData, 'filter')\n    const filterDialog = _.get(personData, 'filterDialog')\n\n    const personFilterDialog = (\n        <PersonFilterForm\n            initialValues={filterDialog.initialValues}\n            filter={filter}\n            filterDialog={filterDialog}\n        />\n    )\n\n    const actions = (\n        <div>\n            <IconButton>\n                <ModEditorIcon />\n            </IconButton>\n\n            <IconButton>\n                <DeleteIcon />\n            </IconButton>\n        </div>\n    )\n\n    const detail = (\n        <span>a</span>\n    )\n    const updateDialog = _.get(personData, 'updateDialog')\n    const confirmDialog = _.get(personData, 'confirmDialog')\n\n    const personList = _.map(_.get(personData, ['list', 'results']), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, ['user', 'firstName']) + ' ' + _.get(item, ['user', 'secondName'])\n        const shift = _.get(item, 'name')\n        const beginTime = _.get(item, 'beginTime')\n        const iconButton = (\n            <IconButton style={{padding: '0 12px'}}>\n                <MoreVertIcon />\n            </IconButton>\n        )\n        return (\n            <Row key={id}>\n                <Col xs={4}>{name}</Col>\n                <Col xs={3}>{shift}</Col>\n                <Col xs={3}>{beginTime}</Col>\n                <Col xs={2} style={{textAlign: 'right'}}>\n                    <IconMenu\n                        iconButtonElement={iconButton}\n                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\n                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\n                        <MenuItem\n                            primaryText=\"Изменить\"\n                            leftIcon={<Edit />}\n                            onTouchTap={() => {\n                                updateDialog.handleOpenUpdateDialog(id)\n                            }}\n                        />\n                        <MenuItem\n                            primaryText=\"Удалить \"\n                            leftIcon={<DeleteIcon />}\n                            onTouchTap={() => {\n                                confirmDialog.handleOpenConfirmDialog(id)\n                            }}\n                        />\n                    </IconMenu>\n                </Col>\n            </Row>\n        )\n    })\n\n    const personListExp = {\n        header: listHeader,\n        list: personList,\n        loading: _.get(personData, 'listLoading')\n    }\n\n    const createDialog = _.get(personData, 'createDialog')\n\n    return (\n        <Row>\n            <Col xs={12}>\n                <div style={{padding: '10px 0', textAlign: 'right'}}>\n                    <FloatButton onClick={createDialog.handleOpenDialog} style={{color: '#12aaeb'}}>\n                        <ContentAdd style={{height: '13px', width: '13px', color: 'rgb(18, 170, 235)'}}\n                                    viewBox=\"0 0 24 15\"/>\n                        добавить сотрудников\n                    </FloatButton>\n                </div>\n                <GridList\n                    filter={filter}\n                    list={personListExp}\n                    detail={detail}\n                    actionsDialog={actions}\n                    filterDialog={personFilterDialog}\n                />\n            </Col>\n        </Row>\n    )\n}\n\nManufacturePerson.propTypes = {\n    personData: PropTypes.object.isRequired\n}\n\nexport default ManufacturePerson\n\n\n\n\n// WEBPACK FOOTER //\n// src/components/Manufacture/Tab/ManufacturePerson.js","import _ from 'lodash'\nimport React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport {Row, Col} from 'react-flexbox-grid'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport ProductFilterForm from '../../Product/ProductFilterForm'\nimport IconButton from 'material-ui/IconButton'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\nimport FloatButton from 'material-ui/FlatButton'\nimport ManufactureDetails from '../ManufactureDetails'\n\nimport GridList from '../../GridList'\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'name',\n        title: 'Наименование',\n        xs: 5\n    },\n    {\n        sorting: true,\n        name: 'description',\n        title: 'Описание',\n        xs: 4\n    },\n    {\n        sorting: true,\n        name: 'bom',\n        title: 'BoM',\n        xs: 3\n    }\n]\nconst enhance = compose(\n    injectSheet({\n\n        imgContent: {\n            '& img': {\n                width: '33%',\n                margin: '1px'\n            },\n            height: '390px',\n            overflowY: 'scroll'\n        },\n        cursor: {\n            cursor: 'pointer'\n        }\n    })\n)\n\nconst ManufactureProduct = enhance((props) => {\n    const {classes, filter, filterDialog, productData, editMaterials, createMaterials, deleteMaterials, handleCloseDetail} = props\n\n    const productFilterDialog = (\n        <ProductFilterForm\n            initialValues={filterDialog.initialValues}\n            filter={filter}\n            filterDialog={filterDialog}\n        />\n    )\n\n    const actions = (\n        <div>\n            <IconButton>\n                <ModEditorIcon />\n            </IconButton>\n\n            <IconButton>\n                <DeleteIcon />\n            </IconButton>\n        </div>\n    )\n\n    const detailData = _.get(productData, 'detailData')\n    const productTitle = _.get(_.find(_.get(productData, 'productList'), {'id': _.toInteger(_.get(productData, ['detailData', 'id']))}), 'name')\n    const detail = (\n        <ManufactureDetails\n            createMaterials={createMaterials}\n            productTitle={productTitle}\n            key={_.get(detailData, 'id')}\n            id={_.get(detailData, 'id')}\n            data={_.get(detailData, 'data')}\n            handleDeleteAllIngredient={_.get(productData, ['confirmDialog', 'handleOpenConfirmDialog'])}\n            handleOpenConfirmDialog={_.get(deleteMaterials, ['handleOpenConfirmDialog'])}\n            handleOpenEditMaterials={_.get(editMaterials, ['handleOpen'])}\n            handleOpenChangeManufacture={_.get(productData, ['changeManufacture', 'handleOpenChangeManufacture'])}\n            loading={_.get(detailData, 'detailLoading')}\n            handleCloseDetail={handleCloseDetail}\n        />\n    )\n    const productList = _.map(_.get(productData, 'productList'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        const type = _.get(item, ['type', 'name']) || 'N/A'\n        const brand = _.get(item, ['brand', 'name']) || 'N/A'\n        return (\n            <Row key={id}>\n                <Col xs={5}>\n                    <span\n                        className={classes.cursor}\n                        onTouchTap={ () => {\n                            productData.handleItemClick(id)\n                        }}>\n                        {name}\n                    </span>\n                </Col>\n                <Col xs={4}>{type}</Col>\n                <Col xs={3}>{brand}</Col>\n            </Row>\n        )\n    })\n    const productListExp = {\n        header: listHeader,\n        list: productList,\n        loading: _.get(productData, 'listLoading')\n    }\n    const createDialog = _.get(productData, 'createDialog')\n    return (\n        <Row>\n            <Col xs={12}>\n                <div style={{padding: '10px 0', textAlign: 'right'}}>\n                    <FloatButton onClick={createDialog.handleOpenCreateDialog} style={{color: '#12aaeb'}}>\n                        <ContentAdd style={{height: '13px', width: '13px', color: 'rgb(18, 170, 235)'}}\n                                    viewBox=\"0 0 24 15\"/>\n                        добавить продукцию\n                    </FloatButton>\n                </div>\n            </Col>\n            <Col xs={12}>\n                <GridList\n                    filter={filter}\n                    list={productListExp}\n                    detail={detail}\n                    actionsDialog={actions}\n                    filterDialog={productFilterDialog}\n                />\n            </Col>\n        </Row>\n    )\n})\nManufactureProduct.propTypes = {\n    productData: PropTypes.object.isRequired\n}\n\nexport default ManufactureProduct\n\n\n\n// WEBPACK FOOTER //\n// src/components/Manufacture/Tab/ManufactureProduct.js","import _ from 'lodash'\nimport moment from 'moment'\nimport React from 'react'\nimport {Row, Col} from 'react-flexbox-grid'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport IconButton from 'material-ui/IconButton'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\nimport ManufactureShipmentDetail from './ManufactureShipmentDetail'\nimport GridList from '../../GridList'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'name',\n        title: 'Производство',\n        xs: 3\n    },\n    {\n        sorting: true,\n        name: 'type',\n        title: 'Время начала',\n        xs: 3\n    },\n    {\n        sorting: true,\n        name: 'brand',\n        title: 'Время окончания',\n        xs: 3\n    },\n    {\n        sorting: true,\n        name: 'brand',\n        title: 'Произведенный',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'brand',\n        title: 'Проводить',\n        xs: 1\n    }\n]\nconst enhance = compose(\n    injectSheet({\n\n        imgContent: {\n            '& img': {\n                width: '33%',\n                margin: '1px'\n            },\n            height: '390px',\n            overflowY: 'scroll'\n        },\n        equipmentContent: {\n            marginTop: '56px'\n        }\n    })\n)\n\nconst ManufactureShipment = enhance((props) => {\n    const {shipmentData, classes} = props\n\n    const filter = _.get(shipmentData, 'filter')\n    const detail = (\n        <ManufactureShipmentDetail\n            key={_.get(shipmentData, ['detailData', 'id'])}\n            detailData={_.get(shipmentData, 'detailData')}\n            filter={_.get(shipmentData, 'filter')}\n        />\n    )\n    const handleClick = _.get(shipmentData, 'handleShipmentClick')\n    const shipment = _.map(_.get(shipmentData, 'shipmentList'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, ['equipment', 'name'])\n        const closedTime = moment(_.get(item, 'closedTime')).format('DD.MM.YYYY')\n        const openedTime = moment(_.get(item, 'openedTime')).format('DD.MM.YYYY')\n        const produced = _.get(item, 'produced')\n        const spend = _.get(item, 'spend')\n        return (\n            <Row key={id}>\n                <Col xs={3}><span onClick={() => { handleClick(id) }}>{name}</span></Col>\n                <Col xs={3}>{openedTime}</Col>\n                <Col xs={3}>{closedTime}</Col>\n                <Col xs={2}>{produced}</Col>\n                <Col xs={1}>{spend}</Col>\n            </Row>\n        )\n    })\n    const shipmentExp = {\n        header: listHeader,\n        list: shipment,\n        loading: _.get(shipmentData, 'listLoading')\n    }\n    const actions = (\n        <div>\n            <IconButton>\n                <ModEditorIcon />\n            </IconButton>\n\n            <IconButton>\n                <DeleteIcon />\n            </IconButton>\n        </div>\n    )\n    return (\n        <Row className={classes.equipmentContent}>\n            <Col xs={12}>\n                <GridList\n                    filter={filter}\n                    list={shipmentExp}\n                    detail={detail}\n                    actionsDialog={actions}/>\n            </Col>\n        </Row>\n    )\n})\n\nexport default ManufactureShipment\n\n\n\n// WEBPACK FOOTER //\n// src/components/Manufacture/Tab/ManufactureShipment.js","import _ from 'lodash'\nimport moment from 'moment'\nimport React from 'react'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport {Row, Col} from 'react-flexbox-grid'\nimport GridList from '../../GridList'\nimport NotFound from '../../Images/not-found.png'\nimport numberFormat from '../../../helpers/numberFormat'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'barcode',\n        title: 'Штрих-код',\n        xs: 3\n    },\n    {\n        sorting: true,\n        name: 'productName',\n        title: 'Наименование товара',\n        xs: 3\n    },\n    {\n        sorting: true,\n        name: 'amount',\n        title: 'Количество',\n        xs: 3\n    },\n    {\n        sorting: true,\n        name: 'date',\n        title: 'Время',\n        xs: 3\n    }\n]\n\nconst enhance = compose(\n    injectSheet({\n        dottedList: {\n            padding: '20px 0'\n        },\n        wrapper: {\n            width: '100%'\n        },\n        loader: {\n            width: '100%',\n            background: '#fff',\n            height: '200px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n        },\n        title: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            height: '65px',\n            padding: '0 30px',\n            borderBottom: '1px #efefef solid'\n        },\n        titleLabel: {\n            fontSize: '18px',\n            color: '#333',\n            fontWeight: '700'\n        },\n        materialsList: {\n            padding: '0 30px'\n        },\n        rawMaterials: {\n            '& .dottedList': {\n                padding: '10px 0'\n            },\n            '& .dottedList:last-child:after': {\n                backgroundImage: 'none'\n            }\n        },\n        titleButtons: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            '& svg': {\n                color: '#fff !important'\n            }\n        },\n        listButtons: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            '& button': {\n                height: '20px !important',\n                width: '25px !important'\n            }\n        },\n        emptyQuery: {\n            background: 'url(' + NotFound + ') no-repeat center center',\n            backgroundSize: '285px',\n            padding: '260px 0 0',\n            textAlign: 'center',\n            fontSize: '15px',\n            color: '#666',\n            '& svg': {\n                width: '50px !important',\n                height: '50px !important',\n                color: '#999 !important'\n            }\n        }\n    }),\n)\nconst actions = (<div></div>)\n\nconst ManufactureShipmentDetail = enhance((props) => {\n    const {\n        filter,\n        detailData\n    } = props\n\n    const loading = _.get(detailData, 'loading')\n    const detailList = _.map(_.get(detailData, ['data', 'results']), (item) => {\n        const id = _.get(item, 'id')\n        const barcode = _.get(item, 'barcode')\n        const amount = numberFormat(_.get(item, 'amount'))\n        const productName = _.get(item, ['product', 'name'])\n        const measurement = _.get(item, ['product', 'measurement', 'name'])\n        const createdDate = moment(_.get(item, 'createDate')).format('DD.MM.YYYY HH.mm')\n\n        return (\n            <Row key={id}>\n                <Col xs={3}>{barcode}</Col>\n                <Col xs={3}>{productName}</Col>\n                <Col xs={3}>{amount} {measurement}</Col>\n                <Col xs={2}>{createdDate}</Col>\n            </Row>\n        )\n    })\n\n    const detailDialog = <span></span>\n\n    const list = {\n        header: listHeader,\n        list: detailList,\n        loading: loading\n    }\n\n    return (\n        <GridList\n            filter={filter}\n            list={list}\n            detail={detailDialog}\n            actionsDialog={actions}\n        />\n    )\n})\n\nManufactureShipmentDetail.propTypes = {\n}\n\nexport default ManufactureShipmentDetail\n\n\n\n// WEBPACK FOOTER //\n// src/components/Manufacture/Tab/ManufactureShipmentDetail.js","import ManufactureGridList from './ManufactureGridList'\nimport {OPEN_USER_CREATE_DIALOG} from './ManufactureAddStaffDialog'\nimport {MANUFACTURE_SHOW_BOM_DIALOG_OPEN} from './ManufactureShowBom'\nimport {MANUFACTURE_ADD_PRODUCT_DIALOG_OPEN} from './ManufactureAddProductDialog'\nimport {MANUFACTURE_EDIT_PRODUCT_DIALOG_OPEN} from './ManufactureEditProductDialog'\n\nconst SHIFT_DELETE_DIALOG_OPEN = 'openDeleteDialog'\nconst USER_SHIFT_DELETE_DIALOG_OPEN = 'openUserStaffDeleteDialog'\nconst INGREDIENT_DELETE_DIALOG_OPEN = 'openIngredientDeleteDialog'\nconst OPEN_UPDATE_PRODUCT_DIALOG = 'openUpdateProductDialog'\nconst OPEN_DELETE_PRODUCT_DIALOG = 'openDeleteProductDialog'\nconst OPEN_USER_UPDATE_DIALOG = 'openUserUpdateDialog'\nconst MANUFACTURE_CREATE_PRODUCT_DIALOG_OPEN = 'createMaterials'\nconst OPEN_DELETE_MATERIALS_DIALOG = 'openDeleteIngredient'\nconst OPEN_USER_CONFIRM_DIALOG = 'openUserDeleteDialog'\nconst MANUFACTURE_CHANGE = 'openChangeManufacture'\nconst TAB = 'tab'\n\nexport {\n    OPEN_USER_CREATE_DIALOG,\n    MANUFACTURE_SHOW_BOM_DIALOG_OPEN,\n    MANUFACTURE_ADD_PRODUCT_DIALOG_OPEN,\n    MANUFACTURE_CREATE_PRODUCT_DIALOG_OPEN,\n    MANUFACTURE_EDIT_PRODUCT_DIALOG_OPEN,\n    SHIFT_DELETE_DIALOG_OPEN,\n    USER_SHIFT_DELETE_DIALOG_OPEN,\n    INGREDIENT_DELETE_DIALOG_OPEN,\n    OPEN_UPDATE_PRODUCT_DIALOG,\n    OPEN_DELETE_PRODUCT_DIALOG,\n    OPEN_USER_CONFIRM_DIALOG,\n    OPEN_USER_UPDATE_DIALOG,\n    OPEN_DELETE_MATERIALS_DIALOG,\n    MANUFACTURE_CHANGE,\n    TAB,\n    ManufactureGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Manufacture/index.js","import _ from 'lodash'\nimport moment from 'moment'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport {Row, Col} from 'react-flexbox-grid'\nimport IconButton from 'material-ui/IconButton'\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport Edit from 'material-ui/svg-icons/image/edit'\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\nimport IconMenu from 'material-ui/IconMenu'\nimport MenuItem from 'material-ui/MenuItem'\nimport * as ROUTES from '../../constants/routes'\nimport GridList from '../GridList'\nimport Container from '../Container'\nimport MarketTypeCreateDialog from './MarketTypeCreateDialog'\nimport ConfirmDialog from '../ConfirmDialog'\nimport SubMenu from '../SubMenu'\nimport Tooltip from '../ToolTip'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'id',\n        xs: 2,\n        title: 'Id'\n    },\n    {\n        sorting: true,\n        name: 'name',\n        xs: 5,\n        title: 'Наименование'\n    },\n    {\n        sorting: true,\n        xs: 4,\n        name: 'created_date',\n        title: 'Дата создания'\n    },\n    {\n        sorting: true,\n        xs: 1,\n        name: 'actions',\n        title: ''\n    }\n\n]\n\nconst enhance = compose(\n    injectSheet({\n        addButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        addButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px'\n        },\n        marginLeft: {\n            marginLeft: '20px !important'\n        },\n        right: {\n            textAlign: 'right'\n        }\n    })\n)\n\nconst MarketTypeGridList = enhance((props) => {\n    const {\n        filter,\n        createDialog,\n        updateDialog,\n        actionsDialog,\n        confirmDialog,\n        listData,\n        detailData,\n        classes\n    } = props\n\n    const actions = (\n        <div>\n            <IconButton onTouchTap={actionsDialog.handleActionEdit}>\n                <ModEditorIcon />\n            </IconButton>\n\n            <IconButton onTouchTap={actionsDialog.handleActionDelete}>\n                <DeleteIcon />\n            </IconButton>\n        </div>\n    )\n\n    const marketTypeDetail = (\n        <span>a</span>\n    )\n\n    const marketTypeList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\n        const iconButton = (\n            <IconButton style={{padding: '0 12px'}}>\n                <MoreVertIcon />\n            </IconButton>\n        )\n        return (\n            <Row key={id}>\n                <Col xs={2}>{id}</Col>\n                <Col xs={5}>{name}</Col>\n                <Col xs={4}>{createdDate}</Col>\n                <Col xs={1} className={classes.right}>\n                    <IconMenu\n                        iconButtonElement={iconButton}\n                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\n                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\n                        <MenuItem\n                            primaryText=\"Изменить\"\n                            leftIcon={<Edit />}\n                            onTouchTap={() => { updateDialog.handleOpenUpdateDialog(id) }}\n                        />\n                        <MenuItem\n                            primaryText=\"Удалить \"\n                            leftIcon={<DeleteIcon />}\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(id) }}\n                        />\n                    </IconMenu>\n                </Col>\n            </Row>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: marketTypeList,\n        loading: _.get(listData, 'listLoading')\n    }\n\n    return (\n        <Container>\n            <SubMenu url={ROUTES.MARKET_TYPE_LIST_URL}/>\n            <div className={classes.addButtonWrapper}>\n                <Tooltip position=\"left\" text=\"Добавить тип магазина\">\n                    <FloatingActionButton\n                        mini={true}\n                        className={classes.addButton}\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\n                        <ContentAdd />\n                    </FloatingActionButton>\n                </Tooltip>\n            </div>\n\n            <GridList\n                filter={filter}\n                list={list}\n                detail={marketTypeDetail}\n                actionsDialog={actions}\n            />\n\n            <MarketTypeCreateDialog\n                open={createDialog.openCreateDialog}\n                loading={createDialog.createLoading}\n                onClose={createDialog.handleCloseCreateDialog}\n                onSubmit={createDialog.handleSubmitCreateDialog}\n            />\n\n            <MarketTypeCreateDialog\n                isUpdate={true}\n                initialValues={updateDialog.initialValues}\n                open={updateDialog.openUpdateDialog}\n                loading={updateDialog.updateLoading}\n                onClose={updateDialog.handleCloseUpdateDialog}\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\n            />\n\n            {detailData.data && <ConfirmDialog\n                type=\"delete\"\n                message={_.get(detailData, ['data', 'name'])}\n                loading={confirmDialog.confirmLoading}\n                onClose={confirmDialog.handleCloseConfirmDialog}\n                onSubmit={confirmDialog.handleSendConfirmDialog}\n                open={confirmDialog.openConfirmDialog}\n            />}\n        </Container>\n    )\n})\n\nMarketTypeGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    createDialog: PropTypes.shape({\n        createLoading: PropTypes.bool,\n        openCreateDialog: PropTypes.bool.isRequired,\n        handleOpenCreateDialog: PropTypes.func.isRequired,\n        handleCloseCreateDialog: PropTypes.func.isRequired,\n        handleSubmitCreateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    confirmDialog: PropTypes.shape({\n        confirmLoading: PropTypes.bool.isRequired,\n        openConfirmDialog: PropTypes.bool.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleSendConfirmDialog: PropTypes.func.isRequired\n    }).isRequired,\n    updateDialog: PropTypes.shape({\n        updateLoading: PropTypes.bool,\n        openUpdateDialog: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    actionsDialog: PropTypes.shape({\n        handleActionEdit: PropTypes.func.isRequired,\n        handleActionDelete: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default MarketTypeGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/MarketType/MarketTypeGridList.js","import MarketTypeGridList from './MarketTypeGridList'\nimport {MARKET_TYPE_CREATE_DIALOG_OPEN} from './MarketTypeCreateDialog'\n\nconst MARKET_TYPE_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nconst MARKET_TYPE_DELETE_DIALOG_OPEN = 'openDeleteDialog'\n\nexport {\n    MARKET_TYPE_UPDATE_DIALOG_OPEN,\n    MARKET_TYPE_CREATE_DIALOG_OPEN,\n    MARKET_TYPE_DELETE_DIALOG_OPEN,\n    MarketTypeGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/MarketType/index.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Row, Col} from 'react-flexbox-grid'\nimport IconButton from 'material-ui/IconButton'\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\nimport * as ROUTES from '../../constants/routes'\nimport GridList from '../GridList'\nimport Container from '../Container'\nimport MeasurementCreateDialog from './MeasurementCreateDialog'\nimport ConfirmDialog from '../ConfirmDialog'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport Tooltip from '../ToolTip'\nimport IconMenu from 'material-ui/IconMenu'\nimport MenuItem from 'material-ui/MenuItem'\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\nimport Edit from 'material-ui/svg-icons/image/edit'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'id',\n        xs: 2,\n        title: 'Id'\n    },\n    {\n        sorting: true,\n        name: 'name',\n        xs: 9,\n        title: 'Наименование'\n    },\n    {\n        sorting: false,\n        xs: 1,\n        name: 'actions',\n        title: ''\n    }\n]\n\nconst enhance = compose(\n    injectSheet({\n        addButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        addButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px'\n        }\n    })\n)\n\nconst MeasurementGridList = enhance((props) => {\n    const {\n        filter,\n        createDialog,\n        updateDialog,\n        actionsDialog,\n        confirmDialog,\n        listData,\n        detailData,\n        classes\n    } = props\n\n    const actions = (\n        <div>\n            <IconButton onTouchTap={actionsDialog.handleActionEdit}>\n                <ModEditorIcon />\n            </IconButton>\n\n            <IconButton onTouchTap={actionsDialog.handleActionDelete}>\n                <DeleteIcon />\n            </IconButton>\n        </div>\n    )\n\n    const measurementDetail = (\n        <span>a</span>\n    )\n\n    const measurementList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        const iconButton = (\n            <IconButton style={{padding: '0 12px'}}>\n                <MoreVertIcon />\n            </IconButton>\n        )\n        return (\n            <Row key={id}>\n                <Col xs={2}>{id}</Col>\n                <Col xs={9}>{name}</Col>\n                <Col xs={1} style={{textAlign: 'right'}}>\n                    <IconMenu\n                        iconButtonElement={iconButton}\n                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\n                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\n                        <MenuItem\n                            primaryText=\"Изменить\"\n                            leftIcon={<Edit />}\n                            onTouchTap={() => { updateDialog.handleOpenUpdateDialog(id) }}\n                        />\n                        <MenuItem\n                            primaryText=\"Удалить \"\n                            leftIcon={<DeleteIcon />}\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(id) }}\n                        />\n                    </IconMenu>\n                </Col>\n            </Row>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: measurementList,\n        loading: _.get(listData, 'listLoading')\n    }\n\n    return (\n        <Container>\n            <SubMenu url={ROUTES.MEASUREMENT_LIST_URL}/>\n            <div className={classes.addButtonWrapper}>\n                <Tooltip position=\"left\" text=\"Добавить измерение\">\n                    <FloatingActionButton\n                        mini={true}\n                        className={classes.addButton}\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\n                        <ContentAdd />\n                    </FloatingActionButton>\n                </Tooltip>\n            </div>\n\n            <GridList\n                filter={filter}\n                list={list}\n                detail={measurementDetail}\n                actionsDialog={actions}\n            />\n\n            <MeasurementCreateDialog\n                initialValues={{}}\n                open={createDialog.openCreateDialog}\n                loading={createDialog.createLoading}\n                onClose={createDialog.handleCloseCreateDialog}\n                onSubmit={createDialog.handleSubmitCreateDialog}\n            />\n\n            <MeasurementCreateDialog\n                isUpdate={true}\n                initialValues={updateDialog.initialValues}\n                open={updateDialog.openUpdateDialog}\n                loading={updateDialog.updateLoading}\n                onClose={updateDialog.handleCloseUpdateDialog}\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\n            />\n\n            {detailData.data && <ConfirmDialog\n                type=\"delete\"\n                message={_.get(detailData, ['data', 'name'])}\n                loading={confirmDialog.confirmLoading}\n                onClose={confirmDialog.handleCloseConfirmDialog}\n                onSubmit={confirmDialog.handleSendConfirmDialog}\n                open={confirmDialog.openConfirmDialog}\n            />}\n        </Container>\n    )\n})\n\nMeasurementGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    createDialog: PropTypes.shape({\n        createLoading: PropTypes.bool.isRequired,\n        openCreateDialog: PropTypes.bool.isRequired,\n        handleOpenCreateDialog: PropTypes.func.isRequired,\n        handleCloseCreateDialog: PropTypes.func.isRequired,\n        handleSubmitCreateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    confirmDialog: PropTypes.shape({\n        confirmLoading: PropTypes.bool.isRequired,\n        openConfirmDialog: PropTypes.bool.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleSendConfirmDialog: PropTypes.func.isRequired\n    }).isRequired,\n    updateDialog: PropTypes.shape({\n        updateLoading: PropTypes.bool.isRequired,\n        openUpdateDialog: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    actionsDialog: PropTypes.shape({\n        handleActionEdit: PropTypes.func.isRequired,\n        handleActionDelete: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default MeasurementGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Measurement/MeasurementGridList.js","import MeasurementGridList from './MeasurementGridList'\nimport {MEASUREMENT_CREATE_DIALOG_OPEN} from './MeasurementCreateDialog'\nconst MEASUREMENT_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nconst MEASUREMENT_DELETE_DIALOG_OPEN = 'openDeleteDialog'\nexport {\n    MEASUREMENT_CREATE_DIALOG_OPEN,\n    MEASUREMENT_UPDATE_DIALOG_OPEN,\n    MEASUREMENT_DELETE_DIALOG_OPEN,\n    MeasurementGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Measurement/index.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Row, Col} from 'react-flexbox-grid'\nimport moment from 'moment'\nimport numberFormat from '../../helpers/numberFormat'\nimport {Tabs, Tab} from 'material-ui/Tabs'\nimport * as TAB from '../../constants/orderTab'\nimport NotFound from '../Images/not-found.png'\nimport getConfig from '../../helpers/getConfig'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\nimport InProcess from 'material-ui/svg-icons/action/cached'\nimport IconButton from 'material-ui/IconButton'\nimport DoneIcon from 'material-ui/svg-icons/action/done-all'\nimport Canceled from 'material-ui/svg-icons/notification/do-not-disturb-alt'\n\nimport Tooltip from '../ToolTip'\n\nconst PENDING = 0\nconst IN_PROGRESS = 1\nconst COMPLETED = 2\nconst CANCELLED = 3\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            width: '100%',\n            background: '#fff',\n            height: '400px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n        },\n        rightSide: {\n            width: 'calc(100% - 320px)',\n            padding: '0 30px 20px'\n        },\n        tabContent: {\n            '& .row:first-child': {\n                fontWeight: '600'\n            },\n            '& .row': {\n                '& > div': {\n                    textAlign: 'right'\n                },\n                '& > div:first-child': {\n                    textAlign: 'left'\n                }\n            }\n        },\n        tabWrapper: {\n            maxHeight: '441px',\n            overflowY: 'auto',\n            overflowX: 'hidden',\n            paddingRight: '30px'\n        },\n        summary: {\n            fontWeight: '600',\n            marginTop: '20px',\n            paddingRight: '30px',\n            textTransform: 'uppercase',\n            textAlign: 'right'\n        },\n        tab: {\n            marginBottom: '0',\n            width: '100%',\n            '& > div': {\n                paddingRight: 'calc(100% - 250px)',\n                background: 'transparent !important'\n            },\n            '& > div:first-child': {\n                borderBottom: '1px #f2f5f8 solid'\n            },\n            '& > div:last-child': {\n                width: '100% !important',\n                padding: '0'\n            },\n            '& > div:nth-child(2) > div': {\n                marginTop: '0px !important',\n                marginBottom: '-1px',\n                backgroundColor: '#12aaeb !important',\n                height: '1px !important'\n            },\n            '& button': {\n                color: '#333 !important',\n                backgroundColor: '#fefefe !important'\n            },\n            '& button > span:first-line': {\n                color: '#a6dff7'\n            },\n            '& button div div': {\n                textTransform: 'initial'\n            }\n        },\n        emptyQuery: {\n            background: 'url(' + NotFound + ') no-repeat center center',\n            backgroundSize: '215px',\n            padding: '215px 0 0',\n            textAlign: 'center',\n            color: '#999'\n        },\n        buttons: {\n            display: 'flex',\n            justifyContent: 'space-around'\n        }\n    })\n)\n\nconst OrderDetailsRightSideTabs = enhance((props) => {\n    const {classes,\n        data,\n        returnDataLoading,\n        itemReturnDialog,\n        tabData,\n        returnData,\n        cancelOrderReturnOpen\n    } = props\n\n    const iconStyle = {\n        icon: {\n            color: '#666',\n            width: 20,\n            height: 20\n        },\n        button: {\n            width: 30,\n            height: 30,\n            padding: 0,\n            zIndex: 0\n        }\n    }\n    const tab = _.get(tabData, 'tab')\n    const id = _.get(data, 'id')\n    const products = _.get(data, 'products')\n    const primaryCurrency = getConfig('PRIMARY_CURRENCY')\n    let totalProductPrice = _.toNumber('0')\n    let totalDiscount = _.toNumber('0')\n    return (\n        <div className={classes.rightSide}>\n            <Tabs\n                value={tab}\n                className={classes.tab}\n                onChange={(value) => tabData.handleTabChange(value, id)}>\n                <Tab label=\"Список товаров\" value={TAB.ORDER_TAB_PRODUCT_LIST}>\n                    <div className={classes.tabContent}>\n                        <div className={classes.tabWrapper}>\n                            <Row className=\"dottedList\">\n                                <Col xs={4}>Товар</Col>\n                                <Col xs={2}>Количество</Col>\n                                <Col xs={2}>Цена ({primaryCurrency})</Col>\n                                <Col xs={2}>Сумма ({primaryCurrency})</Col>\n                                <Col xs={2}>Скидка ({primaryCurrency})</Col>\n                            </Row>\n\n                            {_.map(products, (item, index) => {\n                                const product = _.get(item, 'product')\n                                const productName = _.get(product, 'name')\n                                const price = _.get(item, 'price')\n                                const productTotal = _.get(item, 'totalPrice')\n                                const amount = _.get(item, 'amount')\n                                const isBonus = _.get(item, 'isBonus')\n                                const measurement = _.get(product, ['measurement', 'name'])\n                                const discount = numberFormat(_.get(product, 'discountPrice'))\n                                totalProductPrice += _.toNumber(productTotal)\n                                totalDiscount += _.toNumber(discount)\n\n                                return (\n                                    <Row className=\"dottedList\" key={index}>\n                                        <Col xs={4}>{productName} {isBonus && <strong className=\"greenFont\">(бонус)</strong>}</Col>\n                                        <Col xs={2}>{numberFormat(amount)} {measurement}</Col>\n                                        <Col xs={2}>{numberFormat(price)}</Col>\n                                        <Col xs={2}>{numberFormat(productTotal)}</Col>\n                                        <Col xs={2}>{discount}</Col>\n                                    </Row>\n                                )\n                            })}\n                        </div>\n                        <Row className={classes.summary}>\n                            <Col xs={4}>ОБЩАЯ СУММА (SUM):</Col>\n                            <Col xs={4}> </Col>\n                            <Col xs={2}>{numberFormat(totalProductPrice)}</Col>\n                            <Col xs={2}>{numberFormat(totalDiscount)}</Col>\n                        </Row>\n                    </div>\n                </Tab>\n\n                <Tab label=\"Возврат\" value={TAB.ORDER_TAB_RETURN}>\n                    {!_.isEmpty(returnData)\n                    ? <div className={classes.tabContent}>\n                        {!returnDataLoading ? <div className={classes.tabWrapper}>\n                            <Row className=\"dottedList\">\n                                <Col xs={1}>Код</Col>\n                                <Col xs={6} style={{textAlign: 'left'}}>Причина возврата</Col>\n                                <Col xs={2}>Дата возврата</Col>\n                                <Col xs={2}>Сумма {primaryCurrency}</Col>\n\n                            </Row>\n                            {_.map(returnData, (item, index) => {\n                                const returnId = _.get(item, 'id')\n                                const comment = _.get(item, 'comment')\n                                const status = _.toNumber(_.get(item, 'status'))\n                                const dateReturn = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\n                                const totalSum = numberFormat(_.get(item, 'totalPrice'))\n                                return (\n                                    <Row className=\"dottedList\" key={index}>\n                                        <Col xs={1}><a\n                                            onClick={() => { itemReturnDialog.handleOpenItemReturnDialog(returnId) }}\n                                            className={classes.link}>\n                                            {returnId}\n                                        </a>\n                                        </Col>\n                                        <Col style={{textAlign: 'left'}} xs={6}>{comment}</Col>\n                                        <Col xs={2}>{dateReturn}</Col>\n                                        <Col xs={2}>{totalSum}</Col>\n                                        <Col xs={1}>\n                                            <div className={classes.buttons}>\n                                                {(status === PENDING || status === IN_PROGRESS)\n                                                    ? <div className={classes.buttons}>\n                                                        <Tooltip position=\"bottom\" text=\"Ожидаеть\">\n                                                            <IconButton\n                                                                disableTouchRipple={true}\n                                                                iconStyle={iconStyle.icon}\n                                                                style={iconStyle.button}\n                                                                touch={true}>\n                                                                <InProcess color=\"#f0ad4e\"/>\n                                                            </IconButton>\n                                                        </Tooltip>\n                                                        <Tooltip position=\"bottom\" text=\"отменит\">\n                                                            <IconButton\n                                                                disableTouchRipple={true}\n                                                                iconStyle={iconStyle.icon}\n                                                                style={iconStyle.button}\n                                                                touch={true}\n                                                                onClick={() => { cancelOrderReturnOpen(returnId) }} >\n                                                                <DeleteIcon/>\n                                                            </IconButton>\n                                                        </Tooltip>\n                                                        </div>\n                                                        : (status === COMPLETED)\n                                                            ? <Tooltip position=\"bottom\" text=\"В процессе\">\n                                                                <IconButton\n                                                                    disableTouchRipple={true}\n                                                                    iconStyle={iconStyle.icon}\n                                                                    style={iconStyle.button}\n                                                                    touch={true}>\n                                                                    <DoneIcon color=\"#81c784\"/>\n                                                                </IconButton>\n                                                              </Tooltip>\n                                                        : (status === CANCELLED)\n                                                            ? <Tooltip position=\"bottom\" text=\"Отменено\">\n                                                                <IconButton\n                                                                    disableTouchRipple={true}\n                                                                    iconStyle={iconStyle.icon}\n                                                                    style={iconStyle.button}\n                                                                    touch={true}>\n                                                                    <Canceled color='#e57373'/>\n                                                                </IconButton>\n                                                              </Tooltip> : null}\n                                            </div>\n                                        </Col>\n\n                                    </Row>\n                                )\n                            })}\n                        </div>\n                            : <div className={classes.loader} style={{height: '265px', marginTop: '1px'}}>\n                                <div>\n                                    <CircularProgress size={40} thickness={4}/>\n                                </div>\n                            </div>\n                        }\n                    </div>\n                        : <div className={classes.emptyQuery}>\n                            <div>В данном заказе нет возвратов</div>\n                        </div>}\n                </Tab>\n            </Tabs>\n        </div>\n    )\n})\n\nOrderDetailsRightSideTabs.propTypes = {\n    returnListData: PropTypes.object,\n    tabData: PropTypes.shape({\n        tab: PropTypes.string.isRequired,\n        handleTabChange: PropTypes.func.isRequired\n    }).isRequired,\n    data: PropTypes.object.isRequired,\n    returnData: PropTypes.array,\n    itemReturnDialog: PropTypes.shape({\n        returnDialogLoading: PropTypes.bool.isRequired,\n        openOrderItemReturnDialog: PropTypes.bool.isRequired,\n        handleOpenItemReturnDialog: PropTypes.func.isRequired,\n        handleCloseItemReturnDialog: PropTypes.func.isRequired\n    }).isRequired,\n    returnDataLoading: PropTypes.bool,\n    cancelOrderReturnOpen: PropTypes.func.isRequired\n}\n\nexport default OrderDetailsRightSideTabs\n\n\n\n// WEBPACK FOOTER //\n// src/components/Order/OrderDetailsRightSideTabs.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router'\nimport IconButton from 'material-ui/IconButton'\nimport * as ROUTES from '../../constants/routes'\nimport GridList from '../GridList'\nimport Container from '../Container'\nimport OrderFilterForm from './OrderFilterForm'\nimport OrderDetails from './OrderDetails'\nimport OrderCreateDialog from './OrderCreateDialog'\nimport OrderShortageDialog from './OrderShortage'\nimport ConfirmDialog from '../ConfirmDialog'\nimport ClientCreateDialog from '../Client/ClientCreateDialog'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport moment from 'moment'\nimport getConfig from '../../helpers/getConfig'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport Tooltip from '../ToolTip'\nimport numberFormat from '../../helpers/numberFormat'\nimport Delivered from 'material-ui/svg-icons/action/done-all'\nimport Available from 'material-ui/svg-icons/av/playlist-add-check'\nimport Canceled from 'material-ui/svg-icons/notification/do-not-disturb-alt'\nimport Transfered from 'material-ui/svg-icons/action/motorcycle'\nimport Payment from 'material-ui/svg-icons/action/credit-card'\nimport InProcess from 'material-ui/svg-icons/action/cached'\nimport dateFormat from '../../helpers/dateFormat'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'id',\n        title: 'Заказ №',\n        xs: '10%'\n    },\n    {\n        sorting: true,\n        name: 'client',\n        title: 'Клиент',\n        xs: '15%'\n    },\n    {\n        sorting: true,\n        name: 'market',\n        title: 'Магазин',\n        xs: '15%'\n    },\n    {\n        sorting: true,\n        name: 'user',\n        title: 'Инициатор',\n        xs: '15%'\n    },\n    {\n        sorting: true,\n        name: 'totalCost',\n        alignRight: true,\n        title: 'Сумма заказа',\n        xs: '15%'\n    },\n    {\n        sorting: true,\n        name: 'dateDelivery',\n        title: 'Дата доставки',\n        xs: '15%'\n    },\n    {\n        sorting: true,\n        name: 'createdDate',\n        title: 'Дата создания',\n        xs: '15%'\n    },\n    {\n        sorting: true,\n        name: 'acceptedCost',\n        title: 'Статус',\n        xs: '5%'\n    }\n]\n\nconst enhance = compose(\n    injectSheet({\n        addButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        addButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px'\n        },\n        listWrapper: {\n            height: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            margin: '0 -30px',\n            padding: '0 30px',\n            position: 'relative',\n            '& > div': {\n                padding: '0 0.5rem',\n                '&:last-child': {\n                    padding: '0'\n                }\n            }\n        },\n        listWrapperNew: {\n            extend: 'listWrapper',\n            fontWeight: '600',\n            '&:before': {\n                content: '\"\"',\n                position: 'absolute',\n                left: '0',\n                bottom: '0',\n                top: '0',\n                width: '3px',\n                background: '#12aaeb'\n            }\n        },\n        dot: {\n            display: 'inline-block',\n            height: '7px',\n            width: '7px',\n            borderRadius: '50%',\n            marginRight: '6px'\n        },\n        success: {\n            extend: 'dot',\n            backgroundColor: '#81c784'\n        },\n        error: {\n            extend: 'dot',\n            backgroundColor: '#e57373'\n        },\n        buttons: {\n            display: 'flex',\n            justifyContent: 'space-around'\n        },\n        openDetails: {\n            position: 'absolute',\n            top: '0',\n            bottom: '0',\n            right: '0',\n            left: '0',\n            cursor: 'pointer'\n        }\n    })\n)\n\nconst OrderGridList = enhance((props) => {\n    const {\n        filter,\n        createDialog,\n        updateDialog,\n        filterDialog,\n        getDocument,\n        transactionsDialog,\n        returnDialog,\n        shortageDialog,\n        products,\n        confirmDialog,\n        itemReturnDialog,\n        listData,\n        detailData,\n        returnListData,\n        paymentData,\n        tabData,\n        classes,\n        createClientDialog,\n        returnDataLoading,\n        printDialog,\n        type,\n        cancelOrderReturnDialog,\n        refreshAction\n    } = props\n\n    const orderFilterDialog = (\n        <OrderFilterForm\n            initialValues={filterDialog.initialValues}\n            filter={filter}\n            filterDialog={filterDialog}\n        />\n    )\n    const iconStyle = {\n        icon: {\n            color: '#666',\n            width: 20,\n            height: 20\n        },\n        button: {\n            width: 30,\n            height: 30,\n            padding: 0,\n            zIndex: 0\n        }\n    }\n    const orderDetail = (\n        <OrderDetails\n            key={_.get(detailData, 'id')}\n            data={_.get(detailData, 'data') || {}}\n            returnData={_.get(detailData, 'return')}\n            transactionsDialog={transactionsDialog}\n            tabData={tabData}\n            getDocument={getDocument}\n            paymentData={paymentData}\n            returnListData={returnListData}\n            returnDialog={returnDialog}\n            itemReturnDialog={itemReturnDialog}\n            confirmDialog={confirmDialog}\n            loading={_.get(detailData, 'detailLoading')}\n            returnDataLoading={returnDataLoading}\n            handleOpenUpdateDialog={updateDialog.handleOpenUpdateDialog}\n            handleCloseDetail={_.get(detailData, 'handleCloseDetail')}\n            cancelOrderReturnDialog={cancelOrderReturnDialog}\n            type={type}\n        />\n    )\n    const orderList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const currentCurrency = getConfig('PRIMARY_CURRENCY')\n        const client = _.get(item, ['client', 'name'])\n        const market = _.get(item, ['market', 'name'])\n        const paymentDate = moment(_.get(item, 'paymentDate'))\n        const now = moment()\n        const user = _.get(item, ['user', 'firstName']) + ' ' + _.get(item, ['user', 'secondName']) || 'N/A'\n        const dateDelivery = dateFormat((_.get(item, 'dateDelivery')), '')\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY HH:MM')\n        const totalBalance = _.toInteger(_.get(item, 'totalBalance'))\n        const balanceTooltip = numberFormat(totalBalance, currentCurrency)\n        const totalPrice = numberFormat(_.get(item, 'totalPrice'), currentCurrency)\n        const status = _.toInteger(_.get(item, 'status'))\n        const isNew = _.get(item, 'isNew')\n        const REQUESTED = 0\n        const PAY_PENDING = 'Оплата ожидается: ' +\n                            paymentDate.locale('ru').format('DD MMM YYYY') +\n                            '<br/>Ожидаемый платеж: ' + balanceTooltip\n\n        const PAY_DELAY = 'Оплата ожидалась: ' +\n                            paymentDate.locale('ru').format('DD MMM YYYY') +\n                            '<br/>Долг: ' + balanceTooltip\n\n        const READY = 1\n        const GIVEN = 2\n        const DELIVERED = 3\n        const CANCELED = 4\n        const ZERO = 0\n        return (\n            <div className={isNew ? classes.listWrapperNew : classes.listWrapper} key={id}>\n                <Link className={classes.openDetails} to={{\n                    pathname: sprintf(ROUTES.ORDER_ITEM_PATH, id),\n                    query: filter.getParams()\n                }}>\n                </Link>\n                <div style={{width: '10%'}}>{id}</div>\n                <div style={{width: '15%'}}>{client}</div>\n                <div style={{width: '15%'}}>{market}</div>\n                <div style={{width: '15%'}}>{user}</div>\n                <div style={{width: '15%', textAlign: 'right'}}>{totalPrice}</div>\n                <div style={{width: '15%'}}>{dateDelivery}</div>\n                <div style={{width: '15%'}}>{createdDate}</div>\n                <div style={{width: '5%'}} className={classes.buttons}>\n                    {(status === REQUESTED) ? <Tooltip position=\"bottom\" text=\"В процессе\">\n                        <IconButton\n                            disableTouchRipple={true}\n                            iconStyle={iconStyle.icon}\n                            style={iconStyle.button}\n                            touch={true}>\n                            <InProcess color=\"#f0ad4e\"/>\n                        </IconButton>\n                    </Tooltip>\n                        : (status === READY) ? <Tooltip position=\"bottom\" text=\"Есть на складе\">\n                            <IconButton\n                                disableTouchRipple={true}\n                                iconStyle={iconStyle.icon}\n                                style={iconStyle.button}\n                                touch={true}>\n                                <Available color=\"#f0ad4e\"/>\n                            </IconButton>\n                        </Tooltip>\n\n                            : (status === DELIVERED) ? <Tooltip position=\"bottom\" text=\"Доставлен\">\n                                <IconButton\n                                    disableTouchRipple={true}\n                                    iconStyle={iconStyle.icon}\n                                    style={iconStyle.button}\n                                    touch={true}>\n                                    <Delivered color=\"#81c784\"/>\n                                </IconButton>\n                            </Tooltip>\n                                : (status === GIVEN) ? <Tooltip position=\"bottom\" text=\"Передан доставщику\">\n                                    <IconButton\n                                        disableTouchRipple={true}\n                                        iconStyle={iconStyle.icon}\n                                        style={iconStyle.button}\n                                        touch={true}>\n                                        <Transfered color=\"#f0ad4e\"/>\n                                    </IconButton>\n                                </Tooltip>\n                                    : <Tooltip position=\"bottom\" text=\"Заказ отменен\">\n                                        <IconButton\n                                            disableTouchRipple={true}\n                                            iconStyle={iconStyle.icon}\n                                            style={iconStyle.button}\n                                            touch={true}>\n                                            <Canceled color='#e57373'/>\n                                        </IconButton>\n                                    </Tooltip>\n                    }\n                    {!(status === CANCELED) &&\n                    <Tooltip position=\"bottom\" text={(totalBalance > ZERO) && ((paymentDate.diff(now, 'days') <= ZERO))\n                        ? PAY_DELAY\n                        : (totalBalance > ZERO) && ((paymentDate.diff(now, 'days') > ZERO))\n                            ? PAY_PENDING\n                            : 'Оплачено'}>\n                        <IconButton\n                            disableTouchRipple={true}\n                            iconStyle={iconStyle.icon}\n                            style={iconStyle.button}\n                            touch={true}>\n                            <Payment color={(totalBalance > ZERO) && ((paymentDate.diff(now, 'days') <= ZERO))\n                                ? '#e57373'\n                                : (totalBalance > ZERO) && ((paymentDate.diff(now, 'days') > ZERO))\n                                    ? '#B7BBB7'\n                                    : '#81c784'\n                            }/>\n                        </IconButton>\n                    </Tooltip>\n                    }\n                </div>\n            </div>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: orderList,\n        loading: _.get(listData, 'listLoading')\n    }\n\n    return (\n        <Container>\n            <SubMenu url={ROUTES.ORDER_LIST_URL}/>\n\n            <div className={classes.addButtonWrapper}>\n                <Tooltip position=\"left\" text=\"Добавить заказ\">\n                    <FloatingActionButton\n                        mini={true}\n                        className={classes.addButton}\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\n                        <ContentAdd />\n                    </FloatingActionButton>\n                </Tooltip>\n            </div>\n\n            <GridList\n                filter={filter}\n                list={list}\n                detail={orderDetail}\n                withoutRow={true}\n                withInvoice={true}\n                filterDialog={orderFilterDialog}\n                printDialog={printDialog}\n                refreshAction={refreshAction}\n            />\n\n            <OrderCreateDialog\n                open={createDialog.openCreateDialog}\n                loading={createDialog.createLoading}\n                createClientDialog={createClientDialog}\n                onClose={createDialog.handleCloseCreateDialog}\n                onSubmit={createDialog.handleSubmitCreateDialog}\n                shortageDialog={shortageDialog}\n                products={products}\n            />\n\n            <OrderShortageDialog\n                products={products}\n                open={shortageDialog.openShortageDialog}\n                loading={shortageDialog.shortageLoading}\n                onClose={shortageDialog.handleCloseShortageDialog}\n                onSubmit={shortageDialog.handleSubmitShortageDialog}\n            />\n\n            <OrderCreateDialog\n                isUpdate={true}\n                initialValues={updateDialog.initialValues}\n                open={updateDialog.openUpdateDialog}\n                loading={updateDialog.updateLoading}\n                onClose={updateDialog.handleCloseUpdateDialog}\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\n            />\n\n            <ClientCreateDialog\n                open={createClientDialog.openCreateClientDialog}\n                initialValues={createClientDialog.initialValues}\n                loading={createClientDialog.createClientLoading}\n                onClose={createClientDialog.handleCloseCreateClientDialog}\n                onSubmit={createClientDialog.handleSubmitCreateClientDialog}\n            />\n\n            {detailData.data && <ConfirmDialog\n                type=\"cancel\"\n                message={'Заказ № ' + _.get(detailData, ['data', 'id'])}\n                onClose={confirmDialog.handleCloseConfirmDialog}\n                onSubmit={confirmDialog.handleSendConfirmDialog}\n                open={confirmDialog.openConfirmDialog}\n            />}\n        </Container>\n    )\n})\n\nOrderGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    paymentData: PropTypes.object,\n    returnListData: PropTypes.object,\n    products: PropTypes.array,\n    tabData: PropTypes.shape({\n        tab: PropTypes.string.isRequired,\n        handleTabChange: PropTypes.func.isRequired\n    }),\n    detailData: PropTypes.object,\n    createDialog: PropTypes.shape({\n        createLoading: PropTypes.bool.isRequired,\n        openCreateDialog: PropTypes.bool.isRequired,\n        handleOpenCreateDialog: PropTypes.func.isRequired,\n        handleCloseCreateDialog: PropTypes.func.isRequired,\n        handleSubmitCreateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    confirmDialog: PropTypes.shape({\n        openConfirmDialog: PropTypes.bool.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleSendConfirmDialog: PropTypes.func.isRequired\n    }).isRequired,\n    updateDialog: PropTypes.shape({\n        updateLoading: PropTypes.bool.isRequired,\n        openUpdateDialog: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    transactionsDialog: PropTypes.shape({\n        openTransactionsDialog: PropTypes.bool.isRequired,\n        handleOpenTransactionsDialog: PropTypes.func.isRequired,\n        handleCloseTransactionsDialog: PropTypes.func.isRequired\n    }).isRequired,\n    itemReturnDialog: PropTypes.shape({\n        returnDialogLoading: PropTypes.bool.isRequired,\n        openOrderItemReturnDialog: PropTypes.bool.isRequired,\n        handleOpenItemReturnDialog: PropTypes.func.isRequired,\n        handleCloseItemReturnDialog: PropTypes.func.isRequired\n    }).isRequired,\n    returnDialog: PropTypes.shape({\n        returnLoading: PropTypes.bool.isRequired,\n        openReturnDialog: PropTypes.bool.isRequired,\n        handleOpenReturnDialog: PropTypes.func.isRequired,\n        handleCloseReturnDialog: PropTypes.func.isRequired\n    }).isRequired,\n    shortageDialog: PropTypes.shape({\n        shortageLoading: PropTypes.bool.isRequired,\n        openShortageDialog: PropTypes.bool.isRequired,\n        handleOpenShortageDialog: PropTypes.func.isRequired,\n        handleCloseShortageDialog: PropTypes.func.isRequired\n    }).isRequired,\n    filterDialog: PropTypes.shape({\n        initialValues: PropTypes.object,\n        filterLoading: PropTypes.bool,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    }).isRequired,\n    createClientDialog: PropTypes.shape({\n        createClientLoading: PropTypes.bool.isRequired,\n        openCreateClientDialog: PropTypes.bool.isRequired,\n        handleOpenCreateClientDialog: PropTypes.func.isRequired,\n        handleCloseCreateClientDialog: PropTypes.func.isRequired,\n        handleSubmitCreateClientDialog: PropTypes.func.isRequired\n    }).isRequired,\n    getDocument: PropTypes.shape({\n        handleGetDocument: PropTypes.func.isRequired\n    }),\n    returnDataLoading: PropTypes.bool,\n    printDialog: PropTypes.shape({\n        openPrint: PropTypes.bool.isRequired,\n        handleOpenPrintDialog: PropTypes.func.isRequired,\n        handleClosePrintDialog: PropTypes.func.isRequired\n    }).isRequired,\n    cancelOrderReturnDialog: PropTypes.shape({\n        handleOpenCancelOrderReturnDialog: PropTypes.func.isRequired,\n        handleCloseCancelOrderReturnDialog: PropTypes.func.isRequired,\n        handleSubmitCancelOrderReturnDialog: PropTypes.func.isRequired,\n        openCancelOrderReturnDialog: PropTypes.number.isRequired\n    }).isRequired\n}\n\nexport default OrderGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Order/OrderGridList.js","import React from 'react'\nimport {Row, Col} from 'react-flexbox-grid'\nimport IconButton from 'material-ui/IconButton'\nimport injectSheet from 'react-jss'\nimport _ from 'lodash'\nimport {compose} from 'recompose'\nimport Close from 'material-ui/svg-icons/navigation/close'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport numberFormat from '../../helpers/numberFormat'\nimport dateFormat from '../../helpers/dateFormat'\nimport paymentTypeFormat from '../../helpers/paymentTypeFormat'\nimport dealTypeFormat from '../../helpers/dealTypeFormat'\nimport getConfig from '../../helpers/getConfig'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            width: '100vw',\n            height: '100vh',\n            background: '#fff',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        wrapper: {\n            background: '#fff',\n            width: '100%',\n            height: '100%',\n            zIndex: '999',\n            overflowY: 'auto'\n        },\n        closeBtn: {\n            position: 'absolute !important',\n            top: '5px',\n            right: '5px',\n            opacity: '0'\n        },\n        item: {\n            width: '100%',\n            marginBottom: '30px',\n            borderBottom: 'dashed 1px',\n            '&:last-child': {\n                borderBottom: 'none',\n                marginBottom: '0'\n\n            }\n        },\n        title: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            '& span': {\n                fontWeight: 'bold',\n                fontSize: '18px !important',\n                marginBottom: '10px'\n            },\n            '& div': {\n                fontSize: '11px',\n                color: '#999',\n                marginRight: '30px'\n            }\n        },\n        info: {\n            display: 'flex',\n            justifyContent: 'space-between'\n        },\n        block: {\n            display: 'flex',\n            '& ul': {\n                marginLeft: '40px',\n                '&:first-child': {\n                    marginLeft: '0',\n                    fontWeight: '600'\n                },\n                '& li': {\n                    lineHeight: '25px'\n                }\n            }\n        },\n        products: {\n            marginTop: '10px',\n            '& .row': {\n                padding: '10px 0',\n                borderBottom: '1px #efefef solid',\n                '&:first-child': {\n                    fontWeight: '600'\n                },\n                '& > div:last-child': {\n                    textAlign: 'right'\n                },\n                '&:after': {\n                    left: '0.5rem',\n                    right: '0.5rem'\n                }\n            }\n        },\n        summary: {\n            fontWeight: 'bold',\n            padding: '10px 0 0',\n            textAlign: 'right'\n        }\n    })\n)\n\nconst OrderPrint = enhance((props) => {\n    const {classes, printDialog, listPrintData} = props\n    const loading = _.get(listPrintData, 'listPrintLoading')\n    if (loading) {\n        return (\n            <div className={classes.loader}>\n                <div>\n                    <CircularProgress size={40} thickness={4}/>\n                </div>\n            </div>\n        )\n    }\n    return (\n        <div className={classes.wrapper}>\n            {_.map(_.get(listPrintData, 'data'), (item) => {\n                const id = _.get(item, 'id')\n                const marketName = _.get(item, ['market', 'name'])\n                const marketAddress = _.get(item, ['market', 'address'])\n                const marketGuide = _.get(item, ['market', 'guide'])\n                const marketPhone = _.get(item, ['market', 'phone'])\n                const agent = _.get(item, ['user', 'firstName']) + ' ' + _.get(item, ['user', 'secondName'])\n                const totalPrice = _.get(item, ['totalPrice'])\n                const paymentDate = dateFormat(_.get(item, 'paymentDate'))\n                const createdDate = dateFormat(_.get(item, 'createdDate'))\n                const dateDelivery = dateFormat(_.get(item, 'dateDelivery'))\n                const paymentType = paymentTypeFormat(_.get(item, 'paymentType'))\n                const dealType = dealTypeFormat(_.get(item, 'dealType'))\n                const currentCurrency = getConfig('PRIMARY_CURRENCY')\n\n                return (\n                    <div key={id} className=\"printItem\">\n                        <div className={classes.title}>\n                            <span>Заказ № {id}</span>\n                            <div>Добавлено: {createdDate}</div>\n                        </div>\n                        <div className={classes.info}>\n                            <div className={classes.block}>\n                                <ul>\n                                    <li>Название магазина:</li>\n                                    <li>Адрес:</li>\n                                    <li>Ориентир:</li>\n                                    <li>Телефон:</li>\n                                    <li>Агент:</li>\n                                </ul>\n                                <ul>\n                                    <li>{marketName}</li>\n                                    <li>{marketAddress}</li>\n                                    <li>{marketGuide}</li>\n                                    <li>{marketPhone}</li>\n                                    <li>{agent}</li>\n                                </ul>\n                            </div>\n                            <div className={classes.block}>\n                                <ul>\n                                    <li>Тип сделки:</li>\n                                    <li>Дата ожидаемой оплаты:</li>\n                                    <li>Дата доставки:</li>\n                                    <li>Тип оплаты:</li>\n                                </ul>\n                                <ul>\n                                    <li>{dealType}</li>\n                                    <li>{paymentDate}</li>\n                                    <li>{dateDelivery}</li>\n                                    <li>{paymentType}</li>\n                                </ul>\n                            </div>\n                        </div>\n\n                        <div className={classes.products}>\n                            <Row>\n                                <Col xs={1}>№</Col>\n                                <Col xs={5}>Наименование</Col>\n                                <Col xs={2}>Цена ({currentCurrency})</Col>\n                                <Col xs={2}>Кол-во</Col>\n                                <Col xs={2}>Сумма ({currentCurrency})</Col>\n                            </Row>\n                            {_.map(_.get(item, 'products'), (product) => {\n                                const totalProductPrice = numberFormat(_.get(product, 'totalPrice'))\n                                const productId = _.get(product, 'id')\n                                const measurment = _.get(product, ['product', 'measurement', 'name'])\n                                const name = _.get(product, ['product', 'name'])\n                                const price = numberFormat(_.get(product, 'price'))\n                                const amount = numberFormat(_.get(product, 'amount'), measurment)\n                                return (\n                                    <Row key={productId}>\n                                        <Col xs={1}>{productId}</Col>\n                                        <Col xs={5}>{name}</Col>\n                                        <Col xs={2}>{price}</Col>\n                                        <Col xs={2}>{amount}</Col>\n                                        <Col xs={2}>{totalProductPrice}</Col>\n                                    </Row>\n                                )\n                            })}\n                            <div className={classes.summary}>Итого: {numberFormat(totalPrice)}</div>\n                        </div>\n                    </div>\n                )\n            })}\n            <IconButton onTouchTap={printDialog.handleClosePrintDialog} className=\"printCloseBtn\">\n                <Close color=\"#666\"/>\n            </IconButton>\n        </div>\n    )\n})\n\nexport default OrderPrint\n\n\n\n// WEBPACK FOOTER //\n// src/components/Order/OrderPrint.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport {Row, Col} from 'react-flexbox-grid'\nimport numberFormat from '../../helpers/numberFormat'\nimport NotFound from '../Images/not-found.png'\nimport getConfig from '../../helpers/getConfig'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            width: '100%',\n            background: '#fff',\n            height: '400px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n        },\n        rightSide: {\n            width: 'calc(100% - 320px)',\n            padding: '0 30px 20px'\n        },\n        tabContent: {\n            '& .row:first-child': {\n                fontWeight: '600'\n            },\n            '& .row': {\n                '& > div': {\n                    textAlign: 'right'\n                },\n                '& > div:first-child': {\n                    textAlign: 'left'\n                }\n            }\n        },\n        tabWrapper: {\n\n        },\n        summary: {\n            fontWeight: '600',\n            marginTop: '20px',\n            paddingRight: '30px',\n            textTransform: 'uppercase',\n            textAlign: 'right'\n        },\n        tab: {\n            marginBottom: '0',\n            width: '100%',\n            '& > div': {\n                paddingRight: 'calc(100% - 400px)',\n                background: 'transparent !important'\n            },\n            '& > div:first-child': {\n                borderBottom: '1px #f2f5f8 solid'\n            },\n            '& > div:last-child': {\n                width: '100% !important',\n                padding: '0'\n            },\n            '& > div:nth-child(2) > div': {\n                marginTop: '0px !important',\n                marginBottom: '-1px',\n                backgroundColor: '#12aaeb !important',\n                height: '1px !important'\n            },\n            '& button': {\n                color: '#333 !important',\n                backgroundColor: '#fefefe !important'\n            },\n            '& button > span:first-line': {\n                color: '#a6dff7'\n            },\n            '& button div div': {\n                textTransform: 'initial'\n            }\n        },\n        emptyQuery: {\n            background: 'url(' + NotFound + ') no-repeat center center',\n            backgroundSize: '215px',\n            padding: '215px 0 0',\n            textAlign: 'center',\n            color: '#999'\n        }\n    })\n)\n\nconst OrderStatDetailsRightSide = enhance((props) => {\n    const {classes,\n        data\n    } = props\n\n    const products = _.get(data, 'products')\n    const primaryCurrency = getConfig('PRIMARY_CURRENCY')\n    let totalProductPrice = _.toNumber('0')\n    return (\n        <div className={classes.rightSide}>\n            <div className={classes.tabContent}>\n                <div className={classes.tabWrapper}>\n                    <Row className=\"dottedList\">\n                        <Col xs={6}>Товар</Col>\n                        <Col xs={2}>Количество</Col>\n                        <Col xs={2}>Цена {primaryCurrency}</Col>\n                        <Col xs={2}>Сумма {primaryCurrency}</Col>\n                    </Row>\n\n                    {_.map(products, (item, index) => {\n                        const product = _.get(item, 'product')\n                        const productName = _.get(product, 'name')\n                        const price = _.get(item, 'price')\n                        const productTotal = _.get(item, 'totalPrice')\n                        const amount = _.get(item, 'amount')\n                        const measurement = _.get(product, ['measurement', 'name'])\n                        totalProductPrice += _.toNumber(productTotal)\n\n                        return (\n                            <Row className=\"dottedList\" key={index}>\n                                <Col xs={6}>{productName}</Col>\n                                <Col xs={2}>{numberFormat(amount)} {measurement}</Col>\n                                <Col xs={2}>{numberFormat(price)}</Col>\n                                <Col xs={2}>{numberFormat(productTotal)}</Col>\n                            </Row>\n                        )\n                    })}\n                </div>\n                <div className={classes.summary}>ОБЩАЯ СУММА ТОВАРОВ: {numberFormat(totalProductPrice)} {primaryCurrency}</div>\n            </div>\n        </div>\n    )\n})\n\nOrderStatDetailsRightSide.propTypes = {\n    data: PropTypes.object.isRequired\n\n}\n\nexport default OrderStatDetailsRightSide\n\n\n\n// WEBPACK FOOTER //\n// src/components/Order/OrderStatDetailsRightSide.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport numberFormat from '../../helpers/numberFormat'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {CashboxSearchField, ExpensiveCategorySearchField} from '../ReduxForm'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport MainStyles from '../Styles/MainStyles'\n\nexport const PENDING_EXPENSES_CREATE_DIALOG_OPEN = 'openCreateDialog'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        info: {\n            padding: '20px 0'\n        },\n        infoHeader: {\n            fontWeight: '600',\n            lineHeight: '20px'\n        },\n        infoSummary: {\n            color: '#666',\n            marginTop: '10px'\n        },\n        cashbox: {\n            padding: '5px 30px 15px',\n            margin: '0 -30px',\n            background: '#f1f5f8'\n        }\n    })),\n    reduxForm({\n        form: 'PendingExpensesCreateForm',\n        enableReinitialize: true\n    })\n)\n\nconst PendingExpensesCreateDialog = enhance((props) => {\n    const {open, loading, handleSubmit, onClose, detailData, classes} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n\n    const supply = _.get(detailData, ['data', 'supply'])\n    const currency = _.get(detailData, ['data', 'currency'])\n    const currencyName = _.get(currency, 'name')\n    const summary = numberFormat(_.get(detailData, ['data', 'amount']))\n    const supplyId = _.get(supply, 'id')\n    const supplier = _.get(supply, ['provider', 'name'])\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '300px'} : {width: '350px'}}\n            bodyStyle={{minHeight: 'auto'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>Расход</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} className={classes.form}>\n                    <div className={classes.inContent} style={{minHeight: '220px'}}>\n                        <div className={classes.loader}>\n                            <CircularProgress size={40} thickness={4}/>\n                        </div>\n                        <div className={classes.field}>\n                            <div className={classes.info}>\n                                <div className={classes.infoHeader}>\n                                    <div>{supplier}</div>\n                                    <div>Поставка №{supplyId}</div>\n                                </div>\n                                <div className={classes.infoSummary}>\n                                    <div>Сумма заказа: <span style={{marginLeft: '10px'}}>{summary} {currencyName}</span></div>\n                                </div>\n                            </div>\n                            <div className={classes.cashbox}>\n                                <Field\n                                    name=\"categoryId\"\n                                    component={ExpensiveCategorySearchField}\n                                    label=\"Категория расхода\"\n                                    className={classes.inputFieldCustom}\n                                    fullWidth={true}/>\n                                <Field\n                                    name=\"cashbox\"\n                                    className={classes.inputFieldCustom}\n                                    component={CashboxSearchField}\n                                    label=\"Касса получатель\"\n                                    fullWidth={true}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\n\nPendingExpensesCreateDialog.propTyeps = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\n\nexport default PendingExpensesCreateDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/PendingExpenses/PendingExpensesCreateDialog.js","import _ from 'lodash'\nimport moment from 'moment'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Row, Col} from 'react-flexbox-grid'\nimport IconButton from 'material-ui/IconButton'\nimport * as ROUTES from '../../constants/routes'\nimport GridList from '../GridList'\nimport Container from '../Container'\nimport PendingExpensesFilterForm from './PendingExpensesFilterForm'\nimport PendingExpensesCreateDialog from './PendingExpensesCreateDialog'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport AddPayment from 'material-ui/svg-icons/av/playlist-add-check'\nimport numberFormat from '../../helpers/numberFormat'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'supply',\n        title: '№ заказа',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'type',\n        title: 'Описание',\n        xs: 4\n    },\n    {\n        sorting: true,\n        name: 'brand',\n        title: 'Дата',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'measurement',\n        alignRight: true,\n        title: 'Сумма',\n        xs: 3\n    }\n]\n\nconst enhance = compose(\n    injectSheet({\n        addButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        addButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px'\n        }\n    })\n)\n\nconst iconStyle = {\n    icon: {\n        color: '#12aaeb',\n        width: 24,\n        height: 24\n    },\n    button: {\n        width: 48,\n        height: 48,\n        padding: 0\n    }\n}\n\nconst PendingExpensesGridList = enhance((props) => {\n    const {\n        filter,\n        updateDialog,\n        filterDialog,\n        listData,\n        detailData\n    } = props\n\n    const pendingExpensesFilterDialog = (\n        <PendingExpensesFilterForm\n            initialValues={filterDialog.initialValues}\n            filter={filter}\n            filterDialog={filterDialog}\n        />\n    )\n\n    const pendingExpensesDetail = (\n        <span>a</span>\n    )\n\n    const pendingExpensesList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const supplyNo = _.get(item, 'supply')\n        const comment = _.get(item, 'comment')\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\n        const summary = numberFormat(_.get(item, 'amount'))\n        const currency = _.get(item, ['currency', 'name'])\n        return (\n            <Row key={id}>\n                <Col xs={2}>{supplyNo}</Col>\n                <Col xs={4}>{comment}</Col>\n                <Col xs={2}>{createdDate}</Col>\n                <Col xs={3} style={{textAlign: 'right'}}>{summary} {currency}</Col>\n                <Col xs={1} style={{textAlign: 'right', padding: '0'}}>\n                    <IconButton\n                        iconStyle={iconStyle.icon}\n                        style={iconStyle.button}\n                        touch={true}\n                        onTouchTap={() => { updateDialog.handleOpenUpdateDialog(id) }}>\n                        <AddPayment />\n                    </IconButton>\n                </Col>\n            </Row>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: pendingExpensesList,\n        loading: _.get(listData, 'listLoading')\n    }\n\n    return (\n        <Container>\n            <SubMenu url={ROUTES.PENDING_EXPENSES_LIST_URL}/>\n\n            <GridList\n                filter={filter}\n                list={list}\n                detail={pendingExpensesDetail}\n                filterDialog={pendingExpensesFilterDialog}\n            />\n\n            <PendingExpensesCreateDialog\n                initialValues={updateDialog.initialValues}\n                open={updateDialog.openUpdateDialog}\n                detailData={detailData}\n                loading={updateDialog.updateLoading}\n                onClose={updateDialog.handleCloseUpdateDialog}\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\n            />\n        </Container>\n    )\n})\n\nPendingExpensesGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    updateDialog: PropTypes.shape({\n        updateLoading: PropTypes.bool.isRequired,\n        openUpdateDialog: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    filterDialog: PropTypes.shape({\n        initialValues: PropTypes.object,\n        filterLoading: PropTypes.bool,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default PendingExpensesGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/PendingExpenses/PendingExpensesGridList.js","import PendingExpensesGridList from './PendingExpensesGridList'\nimport {PENDING_EXPENSES_FILTER_KEY, PENDING_EXPENSES_FILTER_OPEN} from './PendingExpensesFilterForm'\nconst PENDING_EXPENSES_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\n\nexport {\n    PENDING_EXPENSES_UPDATE_DIALOG_OPEN,\n    PENDING_EXPENSES_FILTER_KEY,\n    PENDING_EXPENSES_FILTER_OPEN,\n    PendingExpensesGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/PendingExpenses/index.js","import _ from 'lodash'\nimport moment from 'moment'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Row, Col} from 'react-flexbox-grid'\nimport IconButton from 'material-ui/IconButton'\nimport * as ROUTES from '../../constants/routes'\nimport GridList from '../GridList'\nimport Container from '../Container'\nimport PendingPaymentsFilterForm from './PendingPaymentsFilterForm'\nimport PendingPaymentsCreateDialog from './PendingPaymentsCreateDialog'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport AddPayment from 'material-ui/svg-icons/av/playlist-add-check'\nimport numberFormat from '../../helpers/numberFormat'\nimport getConfig from '../../helpers/getConfig'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'id',\n        title: '№ заказа',\n        xs: 1\n    },\n    {\n        sorting: false,\n        name: 'clientName',\n        title: 'Клиент',\n        xs: 2\n    },\n    {\n        sorting: false,\n        name: 'marketName',\n        title: 'Магазин',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'created_date',\n        title: 'Дата создания',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'total_price',\n        alignRight: true,\n        title: 'Сумма заказа',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'total_balance',\n        alignRight: true,\n        title: 'Остаток',\n        xs: 2\n    }\n]\n\nconst enhance = compose(\n    injectSheet({\n        addButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        addButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px'\n        }\n    })\n)\n\nconst iconStyle = {\n    icon: {\n        color: '#12aaeb',\n        width: 24,\n        height: 24\n    },\n    button: {\n        width: 48,\n        height: 48,\n        padding: 0\n    }\n}\nconst PendingPaymentsGridList = enhance((props) => {\n    const {\n        filter,\n        updateDialog,\n        filterDialog,\n        listData,\n        detailData\n    } = props\n\n    const pendingPaymentsFilterDialog = (\n        <PendingPaymentsFilterForm\n            initialValues={filterDialog.initialValues}\n            filter={filter}\n            filterDialog={filterDialog}\n        />\n    )\n    const pendingPaymentsDetail = (\n        <span>a</span>\n    )\n    const pendingPaymentsList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const client = _.get(item, 'client')\n        const market = _.get(item, ['market', 'name'])\n        const clientName = _.get(client, 'name')\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\n        const totalPrice = numberFormat(_.get(item, 'totalPrice'), getConfig('PRIMARY_CURRENCY'))\n        const totalBalance = numberFormat(_.get(item, 'totalBalance'), getConfig('PRIMARY_CURRENCY'))\n        return (\n            <Row key={id}>\n                <Col xs={1}>{id}</Col>\n                <Col xs={2}>{clientName}</Col>\n                <Col xs={2}>{market}</Col>\n                <Col xs={2}>{createdDate}</Col>\n                <Col xs={2} style={{textAlign: 'right'}}>{totalPrice}</Col>\n                <Col xs={2} style={{textAlign: 'right'}}>{totalBalance}</Col>\n                <Col xs={1} style={{textAlign: 'right', padding: '0'}}>\n                    <IconButton\n                        iconStyle={iconStyle.icon}\n                        style={iconStyle.button}\n                        touch={true}\n                        onTouchTap={() => { updateDialog.handleOpenUpdateDialog(id) }}>\n                        <AddPayment />\n                    </IconButton>\n                </Col>\n            </Row>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: pendingPaymentsList,\n        loading: _.get(listData, 'listLoading')\n    }\n\n    return (\n        <Container>\n            <SubMenu url={ROUTES.PENDING_PAYMENTS_LIST_URL}/>\n\n            <GridList\n                filter={filter}\n                list={list}\n                detail={pendingPaymentsDetail}\n                filterDialog={pendingPaymentsFilterDialog}\n            />\n\n            <PendingPaymentsCreateDialog\n                initialValues={updateDialog.initialValues}\n                open={updateDialog.openUpdateDialog}\n                detailData={detailData}\n                loading={updateDialog.updateLoading}\n                onClose={updateDialog.handleCloseUpdateDialog}\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\n            />\n        </Container>\n    )\n})\n\nPendingPaymentsGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    updateDialog: PropTypes.shape({\n        updateLoading: PropTypes.bool.isRequired,\n        openUpdateDialog: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    filterDialog: PropTypes.shape({\n        initialValues: PropTypes.object,\n        filterLoading: PropTypes.bool,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default PendingPaymentsGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/PendingPayments/PendingPaymentsGridList.js","import PendingPaymentsGridList from './PendingPaymentsGridList'\nimport {PENDING_PAYMENTS_CREATE_DIALOG_OPEN} from './PendingPaymentsCreateDialog'\nimport {PENDING_PAYMENTS_FILTER_KEY, PENDING_PAYMENTS_FILTER_OPEN} from './PendingPaymentsFilterForm'\nconst PENDING_PAYMENTS_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\n\nexport {\n    PENDING_PAYMENTS_CREATE_DIALOG_OPEN,\n    PENDING_PAYMENTS_UPDATE_DIALOG_OPEN,\n    PENDING_PAYMENTS_FILTER_KEY,\n    PENDING_PAYMENTS_FILTER_OPEN,\n    PendingPaymentsGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/PendingPayments/index.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose, withReducer, withState} from 'recompose'\nimport injectSheet from 'react-jss'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport Dialog from 'material-ui/Dialog'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport Paper from 'material-ui/Paper'\nimport IconButton from 'material-ui/IconButton'\nimport CloseIcon2 from '../CloseIcon2'\nimport Person from 'material-ui/svg-icons/social/person'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport DateToDate from '../ReduxForm/Basic/DateToDateFieldCustom'\nimport GoogleMap from '../GoogleMap'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    throw new SubmissionError({\n        ...errors,\n        _error: nonFieldErrors\n    })\n}\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            width: '100%',\n            height: '250px',\n            background: '#fff',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        podlojkaScroll: {\n            overflowY: 'auto !important',\n            padding: '0 !important',\n            '& > div:first-child > div:first-child': {\n                transform: 'translate(0px, 0px) !important'\n            },\n            '& > div': {\n                height: '100% !important',\n                '& > div': {\n                    height: '100% !important',\n                    padding: '0',\n                    '& > div': {\n                        height: '100%'\n                    }\n                }\n            }\n        },\n        popUp: {\n            background: '#fff',\n            overflowY: 'hidden !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            overflowX: 'hidden',\n            height: '100%',\n            minHeight: '700px',\n            maxHeight: 'inherit !important'\n        },\n        titleContent: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '0 10px 0 30px',\n            minHeight: '59px',\n            zIndex: '999',\n            '& button': {\n                padding: '0 !important',\n                '& > div': {\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center'\n                }\n            }\n        },\n        inContent: {\n            display: 'flex',\n            color: '#333',\n            height: '100%'\n        },\n        bodyContent: {\n            color: '#333',\n            width: '100%',\n            height: '100%'\n        },\n        form: {\n            position: 'relative',\n            display: 'flex',\n            flexDirection: 'column',\n            height: '100%',\n            justifyContent: 'space-between'\n        },\n        field: {\n            width: '100%'\n        },\n        leftSide: {\n            width: '300px',\n            borderRight: '1px #efefef solid',\n            display: 'flex',\n            flexDirection: 'column',\n            zIndex: '10'\n        },\n        dateBlock: {\n            padding: '20px 30px'\n        },\n        week: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            marginTop: '12px'\n        },\n        weekItem: {\n            background: '#eaeaea',\n            color: '#666',\n            cursor: 'pointer',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            height: '26px',\n            width: '32px'\n        },\n        weekItemActive: {\n            extend: 'weekItem',\n            background: '#8de2b3',\n            color: '#fff'\n        },\n        scroll: {\n            height: '100%'\n        },\n        zone: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            cursor: 'pointer',\n            padding: '0 30px',\n            height: '40px',\n            borderTop: '1px #efefef solid'\n        },\n        activeZone: {\n            extend: 'zone',\n            background: '#f2f5f8',\n            position: 'relative',\n            '&:before': {\n                content: '\"\"',\n                position: 'absolute',\n                right: '-13px',\n                borderTop: '10px solid transparent',\n                borderLeft: '12px solid #efefef',\n                borderBottom: '10px solid transparent',\n                zIndex: '10'\n            },\n            '&:after': {\n                content: '\"\"',\n                position: 'absolute',\n                right: '-12px',\n                borderTop: '10px solid transparent',\n                borderLeft: '12px solid #f2f5f8',\n                borderBottom: '10px solid transparent',\n                zIndex: '10'\n            }\n        },\n        rightSide: {\n            width: 'calc(100% - 300px)',\n            position: 'relative'\n        },\n        agents: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            position: 'absolute',\n            top: '0',\n            bottom: '0',\n            left: '0',\n            right: '0',\n            zIndex: '8',\n            transition: 'all 300ms ease-out'\n        },\n        agentsActive: {\n            extend: 'agents',\n            top: 'calc(100% - 66px)',\n            '& > div': {\n                minWidth: '100%',\n                maxWidth: '100%'\n            }\n        },\n        agentsWrapper: {\n            display: 'flex',\n            padding: '0 40px',\n            lineHeight: '1.2',\n            alignItems: 'center',\n            height: '66px',\n            transition: 'all 300ms ease-out !important',\n            minWidth: '0'\n        },\n        chooseAgent: {\n            fontWeight: 'bold',\n            paddingRight: '15px',\n            borderRight: '1px #efefef solid'\n        },\n        agentItem: {\n            background: '#fff',\n            height: '45px',\n            display: 'flex',\n            alignItems: 'center',\n            margin: '0 15px',\n            cursor: 'pointer',\n            '& span': {\n                color: '#333',\n                display: 'block',\n                lineHeight: '1.2',\n                '&:first-child': {\n                    fontWeight: '600'\n                },\n                '&:last-child': {\n                    color: '#666'\n                }\n            },\n            '& > div': {\n                zIndex: '8',\n                display: 'flex',\n                borderBottom: '3px solid',\n                padding: '8px 0'\n            }\n        },\n        imgPlace: {\n            display: 'flex',\n            alignItems: 'center',\n            width: '30px',\n            minWidth: '30px',\n            height: '30px',\n            borderRadius: '50%',\n            background: '#9aa6b3',\n            overflow: 'hidden',\n            marginRight: '5px',\n            '& svg': {\n                margin: 'auto'\n            }\n        },\n        agentItemActive: {\n            extend: 'agentItem',\n            position: 'relative',\n            '&:after': {\n                content: '\"\"',\n                position: 'absolute',\n                top: '-11px',\n                bottom: '-10px',\n                left: '-15px',\n                right: '-15px',\n                background: '#f3f6f9',\n                zIndex: '2'\n            }\n        },\n        map: {\n            height: '100%',\n            filter: 'blur(0px)',\n            transition: 'all 200ms ease'\n        },\n        mapBlurred: {\n            extend: 'map',\n            filter: 'blur(3px)'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        inputDateCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            },\n            '& div:first-child': {\n                height: '45px !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'PlanCreateForm',\n        enableReinitialize: true\n    }),\n    withReducer('state', 'dispatch', (state, action) => {\n        return {...state, ...action}\n    }, {open: false}),\n    withState('isActiveAgent', 'setActiveAgent', false)\n)\n\nconst customContentStyle = {\n    width: '100%',\n    maxWidth: 'none'\n}\nconst PlanCreateDialog = enhance((props) => {\n    const {\n        open,\n        handleSubmit,\n        onClose,\n        classes,\n        isUpdate,\n        zonesList,\n        zonesLoading,\n        isActiveAgent,\n        setActiveAgent\n    } = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n    const agentIcon = {\n        color: '#fff',\n        width: 20,\n        height: 20\n    }\n    const zones = _.map(zonesList, (item) => {\n        const id = _.get(item, 'id')\n        const title = _.get(item, 'title')\n\n        return (\n            <div key={id} className={classes.zone}>\n                <span>{title}</span>\n                <span>50 / 100</span>\n            </div>\n        )\n    })\n    return (\n        <Dialog\n            modal={true}\n            className={classes.podlojkaScroll}\n            contentStyle={customContentStyle}\n            open={open}\n            onRequestClose={onClose}\n            bodyClassName={classes.popUp}\n            autoScrollBodyContent={true}>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} scrolling=\"auto\" className={classes.form}>\n                    <div className={classes.inContent}>\n                        <Paper zDepth={2} className={classes.leftSide}>\n                            <div className={classes.titleContent}>\n                                <span>{isUpdate ? 'Изменение плана' : 'Составление плана'}</span>\n                                <IconButton onTouchTap={onClose}>\n                                    <CloseIcon2 color=\"#666666\"/>\n                                </IconButton>\n                            </div>\n                            <div className={classes.scroll}>\n                                <div className={classes.dateBlock}>\n                                    <Field\n                                        name=\"date\"\n                                        component={DateToDate}\n                                        className={classes.inputFieldCustom}\n                                        label=\"Дата\"\n                                        fullWidth={true}\n                                    />\n                                    <div className={classes.week}>\n                                        <div className={classes.weekItemActive}>Пн</div>\n                                        <div className={classes.weekItem}>Вт</div>\n                                        <div className={classes.weekItem}>Ср</div>\n                                        <div className={classes.weekItem}>Чт</div>\n                                        <div className={classes.weekItem}>Пт</div>\n                                        <div className={classes.weekItem}>Сб</div>\n                                        <div className={classes.weekItem}>Вс</div>\n                                    </div>\n                                </div>\n                                <div className={classes.zonesList}>\n                                    {zonesLoading\n                                        ? <div className={classes.loader}>\n                                            <CircularProgress size={40} thickness={4}/>\n                                        </div>\n                                        : zones}\n                                </div>\n                            </div>\n                        </Paper>\n                        <div className={classes.rightSide}>\n                            <div onClick={() => { isActiveAgent ? setActiveAgent(false) : setActiveAgent(true) }} className={isActiveAgent ? classes.agentsActive : classes.agents}>\n                                <Paper zDepth={2} className={classes.agentsWrapper}>\n                                    <div className={classes.chooseAgent}>\n                                        <span>Выберите <br/>агента</span>\n                                    </div>\n                                    <div className={classes.agentItem} style={{color: '#62d6a0'}}>\n                                        <div>\n                                            <div className={classes.imgPlace}>\n                                                <Person style={agentIcon}/>\n                                            </div>\n                                            <div>\n                                                <span>Бекзод Азизжанов</span>\n                                                <span>15 магазинов</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className={classes.agentItemActive} style={{color: '#eeab21'}}>\n                                        <div>\n                                            <div className={classes.imgPlace}>\n                                                <Person style={agentIcon}/>\n                                            </div>\n                                            <div>\n                                                <span>Бекзод Азизжанов</span>\n                                                <span>15 магазинов</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Paper>\n                            </div>\n                            <div className={isActiveAgent ? classes.map : classes.mapBlurred}>\n                                <GoogleMap/>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\nPlanCreateDialog.propTyeps = {\n    isUpdate: PropTypes.bool,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\nPlanCreateDialog.defaultProps = {\n    isUpdate: false\n}\nexport default PlanCreateDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Plan/PlanCreateDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport Paper from 'material-ui/Paper'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport Person from '../Images/person.png'\nimport Place from 'material-ui/svg-icons/maps/place'\nimport Assignment from 'material-ui/svg-icons/action/assignment'\nimport Money from 'material-ui/svg-icons/editor/attach-money'\nimport Checked from 'material-ui/svg-icons/toggle/check-box'\nimport Indeterminate from 'material-ui/svg-icons/toggle/indeterminate-check-box'\nimport CheckOutline from 'material-ui/svg-icons/toggle/check-box-outline-blank'\nimport Agent from '../Images/agent.png'\n\nconst timelineColor = '#22a6c6'\nconst enhance = compose(\n    injectSheet({\n        padding: {\n            padding: '20px 30px'\n        },\n        link: {\n            fontWeight: '600',\n            borderBottom: '1px dashed'\n        },\n        loader: {\n            width: '100%',\n            height: '100%',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        wrapper: {\n            background: '#f4f4f4 !important',\n            width: 'calc(100% - 330px)',\n            extend: 'padding',\n            zIndex: '2',\n            boxShadow: '-3px -2px 12px 0px rgba(0, 0, 0, 0.07), -4px -4px 16px 0px rgba(0, 0, 0, 0.08)',\n            '& > div': {\n                height: '100%'\n            }\n        },\n        agentInfo: {\n            border: '1px #e9e9e9 solid',\n            position: 'relative',\n            '&:after': {\n                content: '\"\"',\n                position: 'absolute',\n                background: 'linear-gradient(to bottom, rgba(244,244,244,1) 0%,rgba(244,244,244,0.75)' +\n                ' 50%,rgba(244,244,244,0) 100%)',\n                bottom: '-32px',\n                left: '0',\n                right: '0',\n                height: '31px',\n                zIndex: '10'\n            },\n            '& > div': {\n                padding: '15px 20px'\n            }\n        },\n        header: {\n            background: '#e3e3e3',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            '& button > div': {\n                display: 'flex',\n                alignItems: 'center'\n            }\n        },\n        info: {\n            '& > span': {\n                display: 'block',\n                lineHeight: '1.2',\n                '&:last-child': {\n                    fontWeight: '600'\n                }\n            }\n        },\n        infoAgent: {\n            '& > span': {\n                lineHeight: '1.2',\n                display: 'block',\n                textAlign: 'right'\n            }\n        },\n        agent: {\n            display: 'flex',\n            alignItems: 'center',\n            fontWeight: '600',\n            '& img': {\n                borderRadius: '50%',\n                width: '32px',\n                minWidth: '32px',\n                height: '32px',\n                marginRight: '10px'\n            }\n        },\n        salesSummary: {\n            '& span': {\n                display: 'inline-block',\n                lineHeight: '1.2',\n                '&:last-child': {\n                    marginLeft: '10px',\n                    textAlign: 'right'\n                }\n            }\n        },\n        achieves: {\n            extend: 'header',\n            background: '#fff'\n        },\n        done: {\n            display: 'flex',\n            alignItems: 'center',\n            '& > div': {\n                display: 'flex',\n                alignItems: 'center',\n                marginRight: '50px',\n                '& span': {\n                    display: 'block',\n                    lineHeight: '1',\n                    color: '#666',\n                    fontWeight: '600',\n                    '&:first-child': {\n                        fontSize: '18px !important'\n                    }\n                },\n                '&:last-child': {\n                    margin: '0'\n                }\n            }\n        },\n        warning: {\n            display: 'flex',\n            alignItems: 'center',\n            '& > div': {\n                display: 'flex',\n                alignItems: 'center',\n                '&:last-child': {\n                    display: 'block'\n                },\n                '& span': {\n                    display: 'block',\n                    lineHeight: '1',\n                    color: '#666',\n                    fontWeight: '600',\n                    '&:first-child': {\n                        fontWeight: 'normal !important'\n                    },\n                    '& big': {\n                        fontSize: '18px',\n                        fontWeight: '600'\n                    }\n                },\n                '& a': {\n                    lineHeight: '1'\n                }\n            }\n        },\n        slash: {\n            margin: '0 15px',\n            '& > div': {\n                width: '2px',\n                height: '35px',\n                background: '#666',\n                transform: 'rotate(15deg)'\n            }\n        },\n        timelineWrapper: {\n            margin: '0 -30px',\n            padding: ' 20px 30px 0',\n            height: 'calc(100% - 130px)',\n            overflowY: 'auto',\n            position: 'relative',\n            '&:after': {\n                background: 'linear-gradient(to bottom, rgba(255,255,255,0) 0%,rgba(244,244,244,1)' +\n                ' 80%,rgba(244,244,244,1) 100%)',\n                content: '\"\"',\n                position: 'fixed',\n                bottom: '0',\n                right: '0',\n                left: '415px',\n                height: '50px',\n                zIndex: '6'\n            },\n            '&::-webkit-scrollbar': {\n                width: '0'\n            }\n        },\n        timeline: {\n            position: 'relative',\n            marginTop: '10px',\n            padding: '0 25px 20px'\n        },\n        timelineBlockWrapper: {\n            '& > div:first-child': {\n                '&:before': {\n                    height: 'calc(100% + 43px)',\n                    bottom: '-23px',\n                    top: 'auto'\n                }\n            },\n            '& > div:last-child': {\n                '&:before': {\n                    height: 'calc(100% + 5px)'\n                }\n            }\n        },\n        timelineDate: {\n            background: timelineColor,\n            color: '#fff',\n            fontWeight: '600',\n            borderRadius: '2px',\n            margin: '0 auto 30px',\n            width: '110px',\n            textAlign: 'center',\n            padding: '6px 0'\n        },\n        timelineDatePassive: {\n            extend: 'timelineDate',\n            background: '#ccc',\n            color: '#fff'\n        },\n        timelineBlock: {\n            position: 'relative',\n            marginBottom: '10px',\n            '&:before': {\n                content: '\"\"',\n                position: 'absolute',\n                left: 'calc(50% - 2px)',\n                top: '15px',\n                width: '4px',\n                height: 'calc(100% + 8px)',\n                background: timelineColor\n            },\n            '&:nth-child(even)': {\n                '& > div:last-child': {\n                    float: 'right',\n                    textAlign: 'left',\n                    '&:before': {\n                        content: '\"\"',\n                        position: 'absolute',\n                        top: '15px',\n                        left: '-13px',\n                        right: 'auto',\n                        borderTop: '8px solid transparent',\n                        borderLeft: 'none',\n                        borderRight: '11px solid rgba(0, 0, 0, 0.12)',\n                        borderBottom: '8px solid transparent',\n                        filter: 'blur(1px)',\n                        zIndex: '1'\n                    },\n                    '&:after': {\n                        content: '\"\"',\n                        position: 'absolute',\n                        top: '13px',\n                        right: 'auto',\n                        left: '-12px',\n                        borderTop: '10px solid transparent',\n                        borderRight: '12px solid #fff',\n                        borderLeft: 'none',\n                        borderBottom: '10px solid transparent',\n                        zIndex: '3'\n                    },\n                    '& li': {\n                        justifyContent: 'flex-end',\n                        flexDirection: 'row-reverse',\n                        '& svg': {\n                            marginLeft: '0',\n                            marginRight: '10px'\n                        }\n                    },\n                    '& > span': {\n                        right: 'auto',\n                        left: '-95px'\n                    }\n                },\n                '&:after': {\n                    content: '\"\"',\n                    display: 'table',\n                    clear: 'both'\n                }\n            },\n            '&:last-child': {\n                marginBottom: '0'\n            }\n        },\n        timelineBlockPassive: {\n            extend: 'timelineBlock',\n            '&:before': {\n                background: '#ccc'\n            },\n            '& > div:first-child': {\n                background: '#ccc'\n            }\n        },\n        timelineDot: {\n            background: timelineColor,\n            width: '16px',\n            height: '16px',\n            top: '15px',\n            left: 'calc(50% - 8px)',\n            position: 'absolute',\n            borderRadius: '50%',\n            outline: '2px #f4f4f4 solid'\n        },\n        timelineContent: {\n            borderRadius: '2px',\n            background: '#fff',\n            color: '#666 !important',\n            padding: '15px 20px',\n            position: 'relative',\n            width: 'calc(50% - 30px)',\n            zIndex: '3',\n            textAlign: 'right',\n            '&:before': {\n                content: '\"\"',\n                position: 'absolute',\n                top: '15px',\n                right: '-13px',\n                borderTop: '8px solid transparent',\n                borderLeft: '11px solid rgba(0, 0, 0, 0.12)',\n                borderBottom: '8px solid transparent',\n                filter: 'blur(1px)',\n                zIndex: '1'\n            },\n            '&:after': {\n                content: '\"\"',\n                position: 'absolute',\n                top: '13px',\n                right: '-12px',\n                borderTop: '10px solid transparent',\n                borderLeft: '12px solid #fff',\n                borderBottom: '10px solid transparent',\n                zIndex: '3'\n            },\n            '& h2': {\n                fontSize: '16px',\n                lineHeight: '14px',\n                marginBottom: '10px'\n            },\n            '& li': {\n                lineHeight: '25px',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'flex-end',\n                '& svg': {\n                    width: '20px !important',\n                    height: '20px !important',\n                    marginLeft: '10px'\n                }\n            },\n            '& > span': {\n                position: 'absolute',\n                top: '12px',\n                right: '-95px',\n                fontSize: '16px !important',\n                fontWeight: 'bold'\n            }\n        },\n        noAgent: {\n            backgroundSize: '150px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            width: '100%',\n            textAlign: 'center',\n            color: '#999',\n            position: 'relative',\n            '&:after': {\n                content: '\"\"',\n                position: 'absolute',\n                top: '0',\n                left: '0',\n                right: '0',\n                bottom: '0',\n                zIndex: '10'\n            },\n            '& img': {\n                width: '180px',\n                opacity: '0.8',\n                margin: 'auto'\n            },\n            '& span': {\n                display: 'block',\n                fontSize: '17px !important',\n                lineHeight: '1',\n                marginTop: '10px'\n            }\n        }\n    })\n)\n\nconst PlanDetails = enhance((props) => {\n    const {classes, detailData} = props\n    const loading = _.get(detailData, 'detailLoading')\n    const isOpenDetails = _.get(detailData, 'openDetail')\n    const firstName = _.get(detailData, ['data', 'firstName'])\n    const secondName = _.get(detailData, ['data', 'secondName'])\n\n    const achieveIcon = {\n        basic: {\n            color: '#999',\n            width: 32,\n            minWidth: 32,\n            height: 32,\n            marginRight: 5\n        },\n        error: {\n            width: 32,\n            minWidth: 32,\n            height: 32,\n            marginRight: 5,\n            color: '#ef5350'\n        }\n    }\n\n    return (\n        <div className={classes.wrapper}>\n            {loading\n                ? <div className={classes.loader}>\n                    <CircularProgress size={40} thickness={4}/>\n                </div>\n                : (isOpenDetails\n                    ? <div>\n                        <div className={classes.agentInfo}>\n                            <div className={classes.header}>\n                                <div className={classes.info}>\n                                    <span>Данные за</span>\n                                    <span>Август 2017 г.</span>\n                                </div>\n                                <div className={classes.agent}>\n                                    <img src={Person} alt=\"\"/>\n                                    <div>{secondName} <br/> {firstName}</div>\n                                </div>\n                                <div className={classes.infoAgent}>\n                                    <span>Агент</span>\n                                    <span>Наименование зоны</span>\n                                </div>\n                            </div>\n                            <div className={classes.achieves}>\n                                <div className={classes.done}>\n                                    <div>\n                                        <Place style={achieveIcon.basic}/>\n                                        <div>\n                                            <span>10 / 20</span>\n                                            <span>посещено</span>\n                                        </div>\n                                    </div>\n                                    <div>\n                                        <Assignment style={achieveIcon.basic}/>\n                                        <div>\n                                            <span>3 / 3</span>\n                                            <span>отчеты</span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className={classes.warning}>\n                                    <div>\n                                        <Money style={achieveIcon.basic}/>\n                                        <div>\n                                            <span>сумма от продаж</span>\n                                            <span><big>2 000 000</big> UZS</span>\n                                        </div>\n                                    </div>\n                                    <div className={classes.slash}>\n                                        <div></div>\n                                    </div>\n                                    <div>\n                                        <span>план продаж</span>\n                                        <a className={classes.link}><big>2 000 000</big> UZS</a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className={classes.timelineWrapper}>\n                            <div className={classes.timeline}>\n                                <div className={classes.timelineDate}>22 Апр, 2017</div>\n                                <div className={classes.timelineBlockWrapper}>\n                                    <div className={classes.timelineBlock}>\n                                        <div className={classes.timelineDot}>\n                                        </div>\n\n                                        <Paper className={classes.timelineContent}>\n                                            <h2>Title of section 1</h2>\n                                            <ul>\n                                                <li>Посещение магазина <Checked color=\"#92ce95\"/></li>\n                                                <li>Заключение сделки <Checked color=\"#92ce95\"/></li>\n                                                <li>Посещение магазина <Checked color=\"#92ce95\"/></li>\n\n                                            </ul>\n                                            <span className={classes.date}>10:56</span>\n                                        </Paper>\n                                    </div>\n\n                                    <div className={classes.timelineBlock}>\n                                        <div className={classes.timelineDot}>\n                                        </div>\n\n                                        <Paper className={classes.timelineContent}>\n                                            <h2>Title of section 2</h2>\n                                            <ul>\n                                                <li>Посещение магазина <Checked color=\"#92ce95\"/></li>\n                                                <li>Заключение сделки <Indeterminate color=\"#e57373\"/></li>\n                                                <li>Посещение магазина <CheckOutline color=\"#999\"/></li>\n                                            </ul>\n                                            <span className={classes.date}>11:42</span>\n                                        </Paper>\n                                    </div>\n\n                                    <div className={classes.timelineBlockPassive}>\n                                        <div className={classes.timelineDot}>\n                                        </div>\n\n                                        <Paper className={classes.timelineContent}>\n                                            <h2>Title of section 1</h2>\n                                            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Iusto, optio,\n                                                dolorum provident rerum aut hic quasi placeat iure tempora\n                                                laudantium ipsa ad debitis unde? Iste voluptatibus minus veritatis qui\n                                                ut.</p>\n                                        </Paper>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className={classes.timeline}>\n                                <div className={classes.timelineDatePassive}>22 Апр, 2017</div>\n                                <div className={classes.timelineBlockWrapper}>\n                                    <div className={classes.timelineBlockPassive}>\n                                        <div className={classes.timelineDot}>\n                                        </div>\n\n                                        <Paper className={classes.timelineContent}>\n                                            <h2>Title of section 1</h2>\n                                            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Iusto, optio,\n                                                dolorum provident rerum aut hic quasi placeat iure tempora\n                                                laudantium ipsa ad debitis unde? Iste voluptatibus minus veritatis qui\n                                                ut.</p>\n                                            <span className={classes.date}>10:56</span>\n                                        </Paper>\n                                    </div>\n\n                                    <div className={classes.timelineBlockPassive}>\n                                        <div className={classes.timelineDot}>\n                                        </div>\n\n                                        <Paper className={classes.timelineContent}>\n                                            <h2>Title of section 2</h2>\n                                            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Iusto, optio,\n                                                dolorum provident rerum aut?</p>\n                                            <span className={classes.date}>11:42</span>\n                                        </Paper>\n                                    </div>\n\n                                    <div className={classes.timelineBlockPassive}>\n                                        <div className={classes.timelineDot}>\n                                        </div>\n\n                                        <Paper className={classes.timelineContent}>\n                                            <h2>Title of section 1</h2>\n                                            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Iusto, optio,\n                                                dolorum provident rerum aut hic quasi placeat iure tempora\n                                                laudantium ipsa ad debitis unde? Iste voluptatibus minus veritatis qui\n                                                ut.</p>\n                                        </Paper>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    : <div className={classes.noAgent}>\n                        <div>\n                            <img src={Agent} alt=\"\"/>\n                            <span>Для отображения статистики <br/> выберите агента</span>\n                        </div>\n                    </div>)}\n        </div>\n    )\n})\n\nPlanDetails.PropTypes = {\n    filter: PropTypes.object,\n    detailData: PropTypes.object\n}\n\nexport default PlanDetails\n\n\n\n// WEBPACK FOOTER //\n// src/components/Plan/PlanDetails.js","import React from 'react'\nimport {hashHistory} from 'react-router'\nimport IconButton from 'material-ui/IconButton'\nimport PropTypes from 'prop-types'\nimport TextFieldSearch from 'material-ui/TextField'\nimport SearchIcon from 'material-ui/svg-icons/action/search'\nimport injectSheet from 'react-jss'\nimport {compose, withState, withHandlers} from 'recompose'\n\nconst enhance = compose(\n    injectSheet({\n        searchWrapper: {\n            padding: '10px 30px'\n        },\n        search: {\n            border: '2px #efefef dashed',\n            position: 'relative',\n            display: 'flex',\n            alignItems: 'center',\n            width: '100%',\n            '& > div': {\n                height: '40px !important',\n                padding: '0 35px 0 10px'\n            }\n        },\n        searchField: {\n            fontSize: '13px !important',\n            width: '100%',\n            '& > div:first-child': {\n                bottom: '8px !important'\n            },\n            '& hr': {\n                display: 'none'\n            }\n        },\n        searchButton: {\n            position: 'absolute !important',\n            alignItems: 'center',\n            justifyContent: 'center',\n            right: '0'\n        }\n    }),\n    withState('search', 'setSearch', ({filter}) => filter.getParam('search')),\n    withHandlers({\n        onSubmit: props => (event) => {\n            const {search, filter} = props\n            event.preventDefault()\n\n            hashHistory.push(filter.createURL({search}))\n        }\n    })\n)\n\nconst iconStyle = {\n    icon: {\n        color: '#5d6474',\n        width: 22,\n        height: 22\n    },\n    button: {\n        width: 40,\n        height: 40,\n        padding: 0,\n        display: 'flex'\n    }\n}\n\nconst PlanSearch = enhance((props) => {\n    const {\n        classes,\n        search,\n        setSearch,\n        onSubmit\n    } = props\n\n    return (\n        <div className={classes.searchWrapper}>\n            <form onSubmit={onSubmit}>\n                <div className={classes.search}>\n                    <TextFieldSearch\n                        fullWidth={true}\n                        hintText=\"Поиск агентов...\"\n                        className={classes.searchField}\n                        value={search}\n                        onChange={(event) => setSearch(event.target.value)}\n                    />\n                    <IconButton\n                        iconStyle={iconStyle.icon}\n                        style={iconStyle.button}\n                        className={classes.searchButton}\n                        disableTouchRipple={true}>\n                        <SearchIcon />\n                    </IconButton>\n                </div>\n            </form>\n        </div>\n    )\n})\n\nPlanSearch.PropTypes = {\n    filter: PropTypes.object\n}\n\nexport default PlanSearch\n\n\n\n// WEBPACK FOOTER //\n// src/components/Plan/PlanSearch.js","import _ from 'lodash'\nimport React from 'react'\nimport IconButton from 'material-ui/IconButton'\nimport PropTypes from 'prop-types'\nimport * as ROUTES from '../../constants/routes'\nimport Container from '../Container'\nimport SubMenu from '../SubMenu'\nimport {Link} from 'react-router'\nimport sprintf from 'sprintf'\nimport Tooltip from '../ToolTip'\nimport Search from './PlanSearch'\nimport Details from './PlanDetails'\nimport PlanCreateDialog from './PlanCreateDialog'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport Calendar from 'material-ui/svg-icons/action/today'\nimport Bike from 'material-ui/svg-icons/maps/directions-bike'\nimport Man from 'material-ui/svg-icons/maps/transfer-within-a-station'\nimport Van from 'material-ui/svg-icons/maps/local-shipping'\nimport Money from 'material-ui/svg-icons/maps/local-atm'\nimport NotFound from '../Images/not-found.png'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            width: '100%',\n            height: '250px',\n            background: '#fff',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        wrapper: {\n            display: 'flex',\n            height: 'calc(100% - 32px)',\n            margin: '0 -28px'\n        },\n        padding: {\n            padding: '20px 30px'\n        },\n        leftSide: {\n            background: '#fff',\n            width: '330px',\n            minWidth: '330px',\n            display: 'flex',\n            flexDirection: 'column'\n        },\n        titleDate: {\n            display: 'flex',\n            alignItems: 'center',\n            extend: 'padding',\n            '& svg': {\n                width: '32px !important',\n                height: '32px !important',\n                marginRight: '10px'\n            },\n            '& a': {\n                fontWeight: '600'\n            }\n        },\n        titleTabs: {\n            background: '#ccc',\n            display: 'flex',\n            justifyContent: 'center',\n            minHeight: '40px',\n            '& button': {\n                justifyContent: 'center',\n                alignItems: 'center'\n            }\n        },\n        activeTab: {\n            '& svg': {\n                color: '#666 !important'\n            },\n            '&:after': {\n                content: '\"\"',\n                position: 'absolute',\n                bottom: '0',\n                borderBottom: '6px solid #fff',\n                borderLeft: '4px solid transparent',\n                borderRight: '4px solid transparent'\n            }\n        },\n        link: {\n            position: 'relative',\n            paddingRight: '12px',\n            '&:after': {\n                top: '7px',\n                right: '0',\n                content: '\"\"',\n                position: 'absolute',\n                borderTop: '4px solid',\n                borderLeft: '4px solid transparent',\n                borderRight: '4px solid transparent'\n            }\n        },\n        agentsList: {\n            height: '100%',\n            overflowY: 'auto',\n            position: 'relative',\n            '&:after': {\n                background: 'linear-gradient(to bottom, rgba(255,255,255,0) 0%,rgba(255,255,255,1)' +\n                ' 90%,rgba(255,255,255,1) 100%)',\n                content: '\"\"',\n                position: 'fixed',\n                bottom: '0',\n                left: '84px',\n                width: '330px',\n                height: '40px'\n            },\n            '&::-webkit-scrollbar': {\n                width: '0'\n            }\n        },\n        agent: {\n            borderTop: '1px #efefef solid',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            height: '45px',\n            position: 'relative',\n            padding: '0 30px 0 45px',\n            cursor: 'pointer',\n            '& a': {\n                position: 'absolute',\n                top: '0',\n                left: '0',\n                right: '0',\n                bottom: '0'\n            }\n        },\n        activeAgent: {\n            extend: 'agent',\n            background: '#f2f5f8',\n            '&:before': {\n                content: '\"\"',\n                background: 'rgba(0,0,0, 0.45)',\n                position: 'absolute',\n                right: '0',\n                height: '14px',\n                width: '7px',\n                filter: 'blur(6px)'\n            },\n            '&:after': {\n                content: '\"\"',\n                position: 'absolute',\n                right: '0',\n                borderTop: '10px solid transparent',\n                borderRight: '12px solid #f4f4f4',\n                borderBottom: '10px solid transparent',\n                zIndex: '3'\n            }\n        },\n        line: {\n            background: '#999',\n            position: 'absolute',\n            left: '30px',\n            top: '50%',\n            marginTop: '-15px',\n            height: '30px',\n            width: '3px'\n        },\n        addButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        addButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px'\n        },\n        emptyQuery: {\n            background: 'url(' + NotFound + ') no-repeat center center',\n            backgroundSize: '150px',\n            padding: '165px 0 0',\n            width: '170px',\n            margin: 'auto',\n            textAlign: 'center',\n            fontSize: '13px',\n            color: '#666',\n            '& svg': {\n                width: '50px !important',\n                height: '50px !important',\n                color: '#999 !important'\n            }\n        }\n    })\n)\n\nconst iconStyle = {\n    icon: {\n        color: '#fff',\n        width: 22,\n        height: 22\n    },\n    button: {\n        width: 40,\n        height: 40,\n        padding: 0,\n        display: 'flex',\n        margin: '0 10px'\n    }\n}\n\nconst PlanWrapper = enhance((props) => {\n    const {\n        filter,\n        usersList,\n        detailData,\n        classes,\n        addPlan,\n        handleClickTab,\n        groupId\n    } = props\n\n    const detailId = _.get(detailData, 'id')\n    const agentsList = _.map(_.get(usersList, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const username = _.get(item, 'firstName') + ' ' + _.get(item, 'secondName')\n        const agentTooltip = '2 000 000 / 3 000 000 UZS'\n\n        return (\n            <Tooltip key={id} position=\"bottom\" text={agentTooltip}>\n                <div className={(id === detailId) ? classes.activeAgent : classes.agent}>\n                    <Link to={{\n                        pathname: sprintf(ROUTES.PLAN_ITEM_PATH, id),\n                        query: filter.getParams()\n                    }}>\n                    </Link>\n                    <div className={classes.line}>\n                    </div>\n                    <span>{username}</span>\n                    <span>70 / 100</span>\n                </div>\n            </Tooltip>\n        )\n    })\n\n    const listLoading = _.get(usersList, 'usersListLoading')\n\n    const buttons = [\n        {\n            group: 1,\n            icon: <Bike/>\n        },\n        {\n            group: 2,\n            icon: <Man/>\n        },\n        {\n            group: 3,\n            icon: <Van/>\n        },\n        {\n            group: 4,\n            icon: <Money/>\n        }\n    ]\n\n    const leftSide = (\n        <div className={classes.leftSide}>\n            <div className={classes.titleDate}>\n                <Calendar color=\"#666\"/>\n                <a className={classes.link}>21 Апр, 2017 - 27 Апр, 2017</a>\n            </div>\n            <div className={classes.titleTabs}>\n                {_.map(buttons, (item) => {\n                    const group = _.get(item, 'group')\n                    const icon = _.get(item, 'icon')\n\n                    return (\n                        <IconButton\n                            key={group}\n                            disableTouchRipple={true}\n                            className={(group === groupId) && classes.activeTab}\n                            onTouchTap={() => { handleClickTab(group) }}\n                            iconStyle={iconStyle.icon}\n                            style={iconStyle.button}>\n                            {icon}\n                        </IconButton>\n                    )\n                })}\n            </div>\n            <Search filter={filter}/>\n            <div className={classes.agentsList}>\n                {listLoading ? <div className={classes.loader}>\n                    <CircularProgress size={40} thickness={4}/>\n                </div>\n                    : (_.isEmpty(agentsList)\n                        ? <div className={classes.emptyQuery}>\n                            <div>По вашему запросу ничего не найдено</div>\n                        </div>\n                        : agentsList)}\n            </div>\n        </div>\n    )\n\n    return (\n        <Container>\n            <SubMenu url={ROUTES.PLAN_LIST_URL}/>\n\n            <div className={classes.addButtonWrapper}>\n                <Tooltip position=\"left\" text=\"Составить план\">\n                    <FloatingActionButton\n                        mini={true}\n                        className={classes.addButton}\n                        onTouchTap={addPlan.handleOpenAddPlan}>\n                        <ContentAdd />\n                    </FloatingActionButton>\n                </Tooltip>\n            </div>\n\n            <div className={classes.wrapper}>\n                {leftSide}\n                <Details\n                    detailData={detailData}\n                    filter={filter}/>\n            </div>\n\n            <PlanCreateDialog\n                open={addPlan.openAddPlan}\n                onClose={addPlan.handleCloseAddPlan}\n                onSubmit={addPlan.handleSubmitAddPlan}\n                zonesList={addPlan.zonesList}\n                zonesLoading={addPlan.zonesLoading}\n            />\n        </Container>\n    )\n})\n\nPlanWrapper.PropTypes = {\n    filter: PropTypes.object,\n    usersList: PropTypes.object,\n    detailData: PropTypes.object,\n    addPlan: PropTypes.shape({\n        openAddPlan: PropTypes.bool.isRequired,\n        handleOpenAddPlan: PropTypes.func.isRequired,\n        handleCloseAddPlan: PropTypes.func.isRequired,\n        handleSubmitAddPlan: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default PlanWrapper\n\n\n\n// WEBPACK FOOTER //\n// src/components/Plan/PlanWrapper.js","import PlanWrapper from './PlanWrapper'\nconst ADD_PLAN = 'openAddPlan'\nconst USER_GROUP = 'group'\n\nexport {\n    ADD_PLAN,\n    USER_GROUP,\n    PlanWrapper\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Plan/index.js","import _ from 'lodash'\nimport moment from 'moment'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Row, Col} from 'react-flexbox-grid'\nimport IconButton from 'material-ui/IconButton'\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\nimport Delete from 'material-ui/svg-icons/action/delete'\nimport * as ROUTES from '../../constants/routes'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport Paper from 'material-ui/Paper'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport PositionCreateDialog from './PositionCreateDialog'\nimport SubMenu from '../SubMenu'\nimport ConfirmDialog from '../ConfirmDialog'\nimport GridList from '../GridList'\nimport Tooltip from '../ToolTip'\nimport Container from '../Container'\nimport {CheckBox} from '../ReduxForm'\nimport {Field, reduxForm} from 'redux-form'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'name',\n        xs: 2,\n        title: ''\n    },\n    {\n        sorting: true,\n        name: 'name',\n        xs: 4,\n        title: 'Курс'\n    },\n    {\n        sorting: true,\n        xs: 4,\n        name: 'created_date',\n        title: 'Дата обновления'\n    }\n]\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        addButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        addButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px'\n        },\n        semibold: {\n            fontWeight: '600'\n        },\n        editContent: {\n            width: '100%',\n            backgroundColor: '#fff',\n            color: '#333',\n            padding: '20px 30px',\n            boxSizing: 'border-box',\n            marginBottom: '15px',\n            '&>div': {\n                marginBottom: '10px',\n                '&:last-child': {\n                    margin: '0'\n                }\n            }\n        },\n        wrap: {\n            display: 'flex',\n            margin: '0 -28px',\n            padding: '0 28px 0 0',\n            minHeight: 'calc(100% - 120px)'\n        },\n        leftSide: {\n            flexBasis: '25%'\n        },\n        list: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            padding: '15px 30px',\n            borderBottom: '1px #efefef solid',\n            cursor: 'pointer',\n            '& > div:first-child': {\n                fontWeight: '600'\n            },\n            '& > div:last-child': {\n                textAlign: 'right'\n            }\n        },\n        rightSide: {\n            flexBasis: '75%',\n            marginLeft: '28px'\n        },\n        rightTitle: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n        },\n        btnSend: {\n            color: '#12aaeb !important'\n        },\n        btnAdd: {\n            color: '#8acb8d !important'\n        },\n        btnRemove: {\n            color: '#e57373 !important'\n        },\n        outerTitle: {\n            extend: 'flex',\n            justifyContent: 'space-between',\n            fontWeight: '600',\n            paddingBottom: '10px',\n            paddingTop: '5px',\n            '& a': {\n                padding: '2px 10px',\n                border: '1px solid',\n                borderRadius: '2px',\n                marginLeft: '12px'\n            }\n        },\n        buttons: {\n            float: 'right',\n            textAlign: 'right'\n        }\n    }),\n\n    reduxForm({\n        form: 'PositionPermissionForm'\n    })\n)\nconst MINUS_ONE = -1\n\nconst PositionGridList = enhance((props) => {\n    const {\n        createDialog,\n        updateDialog,\n        actionsDialog,\n        confirmDialog,\n        listData,\n        detailData,\n        classes,\n        detailId,\n        detailFilter\n    } = props\n\n    const actions = (\n        <div>\n            <IconButton onTouchTap={actionsDialog.handleActionEdit}>\n                <ModEditorIcon />\n            </IconButton>\n\n            <IconButton onTouchTap={actionsDialog.handleActionDelete}>\n                <Delete />\n            </IconButton>\n        </div>\n    )\n\n    const positionList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        const isActive = _.get(detailData, 'id') === id\n\n        if (name) {\n            return (\n                <div key={id} className={classes.list}\n                     style={isActive ? {backgroundColor: '#ffffff', display: 'relative'}\n                         : {backgroundColor: '#f2f5f8', display: 'relative'}}\n                     onClick={() => { listData.handlePositionClick(id) }}>\n                    <div className={classes.title}>{name}</div>\n                </div>\n            )\n        }\n        return null\n    })\n    const permissionList = _.map(_.get(detailData, ['data']), (item, index) => {\n        const name = _.get(item, 'name')\n        const codename = _.get(item, 'codename')\n\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\n        return (\n            <Row key={index}>\n                <Col xs={2}>\n                    <Field\n                    component={CheckBox}\n                    name={codename}/>\n                </Col>\n                <Col xs={4}>{name}</Col>\n                <Col xs={6}>{createdDate}</Col>\n            </Row>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: permissionList,\n        loading: _.get(detailData, 'detailLoading')\n    }\n    const currentDetail = _.find(_.get(listData, 'data'), {'id': _.toInteger(detailId)})\n    const confirmMessage = 'Валюта: ' + _.get(currentDetail, 'name')\n    const listLoading = _.get(listData, 'listLoading')\n    const detail = <div>a</div>\n\n    return (\n        <Container>\n            <SubMenu url={ROUTES.POSITION_LIST_URL}/>\n            <div className={classes.addButtonWrapper}>\n                <Tooltip position=\"left\" text=\"Добавить группу\">\n                    <FloatingActionButton\n                        mini={true}\n                        className={classes.addButton}\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\n                        <ContentAdd />\n                    </FloatingActionButton>\n                </Tooltip>\n            </div>\n            <div className={classes.wrap}>\n                <div className={classes.leftSide}>\n                    <div className={classes.outerTitle} style={{paddingLeft: '30px'}}>\n                        <div>Группы</div>\n                    </div>\n                    <Paper zDepth={1} style={{height: 'calc(100% - 18px)'}}>\n                        {listLoading\n                            ? <div className={classes.loader}>\n                                <CircularProgress size={40} thickness={4}/>\n                            </div>\n                            : <div className={classes.listWrapper}>\n                            {positionList}\n                        </div>\n                        }\n                    </Paper>\n                </div>\n                <div className={classes.rightSide}>\n                    <div className={classes.rightTitle}>\n                        <div className={classes.outerTitle}>Доступы</div>\n                        <div className={classes.outerTitle}>\n                            <div className={classes.buttons}>\n                                <a onClick={confirmDialog.handleOpenConfirmDialog} className={classes.btnRemove}>Удалить группу</a>\n                                <a onClick={updateDialog.handleOpenUpdateDialog} className={classes.btnSend}>Изменить группу</a>\n                            </div>\n                        </div>\n                    </div>\n                    <GridList\n                        filter={detailFilter}\n                        list={list}\n                        detail={detail}\n                        withoutPagination={true}\n                        actionsDialog={actions}\n                    />\n\n                    <PositionCreateDialog\n                        initialValues={createDialog.initialValues}\n                        open={createDialog.openCreateDialog}\n                        loading={createDialog.createLoading}\n                        onClose={createDialog.handleCloseCreateDialog}\n                        onSubmit={createDialog.handleSubmitCreateDialog}\n                    />\n\n                    <PositionCreateDialog\n                        isUpdate={true}\n                        initialValues={updateDialog.initialValues}\n                        open={updateDialog.openUpdateDialog}\n                        loading={updateDialog.updateLoading}\n                        onClose={updateDialog.handleCloseUpdateDialog}\n                        onSubmit={updateDialog.handleSubmitUpdateDialog}\n                    />\n                    {detailId !== MINUS_ONE && <ConfirmDialog\n                        type=\"delete\"\n                        message={confirmMessage}\n                        onClose={confirmDialog.handleCloseConfirmDialog}\n                        onSubmit={confirmDialog.handleSendConfirmDialog}\n                        open={confirmDialog.openConfirmDialog}\n                    />}\n                </div>\n            </div>\n        </Container>\n    )\n})\n\nPositionGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    createDialog: PropTypes.shape({\n        createLoading: PropTypes.bool.isRequired,\n        openCreateDialog: PropTypes.bool.isRequired,\n        handleOpenCreateDialog: PropTypes.func.isRequired,\n        handleCloseCreateDialog: PropTypes.func.isRequired,\n        handleSubmitCreateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    setPositionUpdateDialog: PropTypes.shape({\n        setPositionLoading: PropTypes.bool.isRequired,\n        openSetPositionDialog: PropTypes.bool.isRequired,\n        handleOpenSetPositionDialog: PropTypes.func.isRequired,\n        handleCloseSetPositionDialog: PropTypes.func.isRequired,\n        handleSubmitSetPositionDialog: PropTypes.func.isRequired\n    }),\n    confirmDialog: PropTypes.shape({\n        openConfirmDialog: PropTypes.bool.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleSendConfirmDialog: PropTypes.func.isRequired\n    }).isRequired,\n    updateDialog: PropTypes.shape({\n        updateLoading: PropTypes.bool.isRequired,\n        openUpdateDialog: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    actionsDialog: PropTypes.shape({\n        handleActionEdit: PropTypes.func.isRequired,\n        handleActionDelete: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default PositionGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Position/PositionGridList.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {PositionSearchField} from '../ReduxForm'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport MainStyles from '../Styles/MainStyles'\n\nexport const PRIMARY_POSITION_DIALOG_OPEN = 'openPrimaryDialog'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\n\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n\n        fields: {\n            display: ({loading}) => !loading ? 'flex' : 'none'\n        }\n    })),\n    reduxForm({\n        form: 'BasePositionCreateForm',\n        enableReinitialize: true\n    })\n)\n\nconst PrimaryPositionDialog = enhance((props) => {\n    const {classes, open, onClose, handleSubmit, loading} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '400px'} : {width: '400px'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>Выбрать основную валюту</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} className={classes.form}>\n                    <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4}/>\n                    </div>\n                    <div className={classes.inContent} style={{minHeight: '100px', paddingTop: '25px'}}>\n                        <div className={classes.fields}>\n                            <Field\n                                name=\"position\"\n                                component={PositionSearchField}\n                                className={classes.inputFieldCustom}\n                                label=\"Валюта\"\n                                fullWidth={true}\n                            />\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\n\nPrimaryPositionDialog.propTypes = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired,\n    onSubmit: PropTypes.func.isRequired\n}\n\nPrimaryPositionDialog.defaultProps = {\n    isUpdate: false\n}\n\nexport default PrimaryPositionDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Position/PrimaryPositionDialog.js","import PositionGridList from './PositionGridList'\nimport {POSITION_CREATE_DIALOG_OPEN} from './PositionCreateDialog'\nimport {PRIMARY_POSITION_DIALOG_OPEN} from './PrimaryPositionDialog'\nconst POSITION_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nconst ADD_COURSE_DIALOG_OPEN = 'openAddCourseDialog'\n\nexport {\n    POSITION_CREATE_DIALOG_OPEN,\n    POSITION_UPDATE_DIALOG_OPEN,\n    PRIMARY_POSITION_DIALOG_OPEN,\n    ADD_COURSE_DIALOG_OPEN,\n    PositionGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Position/index.js","import React from 'react'\nimport _ from 'lodash'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport Edit from 'material-ui/svg-icons/image/edit'\nimport IconButton from 'material-ui/IconButton'\nimport CloseIcon2 from '../CloseIcon2'\nimport {Row, Col} from 'react-flexbox-grid'\nimport Tooltip from '../ToolTip'\nimport PriceSetForm from './PriceSetForm'\nimport getConfig from '../../helpers/getConfig'\nimport moment from 'moment'\nimport numberFormat from '../../helpers/numberFormat'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            display: 'flex',\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            alignItems: 'center',\n            background: '#fff',\n            justifyContent: 'space-around'\n        },\n        wrapper: {\n            color: '#333 !important',\n            width: '100%',\n            display: 'flex',\n            flexWrap: 'wrap'\n        },\n        title: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            width: '100%',\n            height: '60px',\n            padding: '0 30px',\n            borderBottom: '1px #efefef solid',\n            position: 'relative'\n        },\n        titleLabel: {\n            fontSize: '18px',\n            color: '#333',\n            fontWeight: '600',\n            cursor: 'pointer'\n        },\n        titleButtons: {\n            display: 'flex'\n        },\n        bodyTitle: {\n            display: 'flex',\n            fontWeight: '600',\n            marginBottom: '25px',\n            fontSize: '14px',\n            justifyContent: 'space-between',\n            height: '25px',\n            alignItems: 'center !important'\n        },\n        content: {\n            display: 'flex',\n            width: '100%'\n        },\n        subBlock: {\n            padding: '20px 30px',\n            '&:last-child': {\n                border: 'none'\n            }\n        },\n        leftSide: {\n            position: 'relative',\n            extend: 'subBlock',\n            flexBasis: '45%',\n            maxWidth: '45%',\n            borderRight: '1px #efefef solid'\n        },\n        rightSide: {\n            position: 'relative',\n            extend: 'subBlock',\n            flexBasis: '55%',\n            maxWidth: '55%'\n        },\n        rightSideTitleDate: {\n            fontWeight: '600',\n            fontSize: '12px!important',\n            color: '#a5a1a0'\n        },\n        tableContent: {\n            '& .row:first-child': {\n                fontWeight: '600',\n                '&:after': {\n                    display: 'none'\n                }\n            },\n            '& .row': {\n                margin: '0',\n                padding: '0 !important',\n                alignItems: 'center',\n                height: '40px',\n                '& > div': {\n                    textAlign: 'right'\n                },\n                '& > div:first-child': {\n                    textAlign: 'left',\n                    padding: '0!important'\n                },\n                '& > div:last-child': {\n                    padding: '0!important'\n                }\n            },\n            overflowY: 'auto',\n            overflowX: 'hidden'\n        },\n        average: {\n            fontWeight: '600',\n            marginTop: '20px',\n            marginBottom: '20px',\n            textAlign: 'right'\n        },\n        averagePrice: {\n            fontWeight: '600',\n            paddingLeft: '20px'\n        },\n        closeDetail: {\n            position: 'absolute',\n            left: '0',\n            top: '0',\n            right: '0',\n            bottom: '0',\n            cursor: 'pointer',\n            zIndex: '1'\n        }\n    })\n)\nconst PriceDetails = enhance((props) => {\n    const {\n        classes,\n        priceSupplyDialog,\n        priceSetForm,\n        detailData,\n        handleCloseDetail,\n        mergedList,\n        listDetailData\n    } = props\n    const loading = _.get(detailData, 'detailLoading')\n    const marketTypeIsLoading = _.get(detailData, 'marketTypeLoading')\n    const priceListItemsIsLoading = _.get(detailData, 'priceListItemsLoading')\n    const priceHistoryList = _.get(detailData, 'priceItemHistoryList')\n    const priceHistoryLoading = _.get(detailData, 'priceItemHistoryLoading')\n    const name = _.get(detailData, ['data', 'name'])\n    const measurement = _.get(detailData, ['data', 'measurement', 'name'])\n    const priceUpdated = _.get(listDetailData, ['0', 'priceUpdated']) ? moment(_.get(listDetailData, ['0', 'priceUpdated'])).format('DD.MM.YYYY') : 'Не установлено'\n    const averageCost = _.get(listDetailData, ['0', 'netCost'])\n\n    const iconStyle = {\n        icon: {\n            color: '#666',\n            width: 20,\n            height: 20\n        },\n        button: {\n            width: 20,\n            height: 20,\n            padding: 0\n        }\n    }\n    if (loading) {\n        return (\n            <div className={classes.loader}>\n                <div>\n                    <CircularProgress size={40} thickness={4}/>\n                </div>\n            </div>\n        )\n    }\n    return (\n        <div className={classes.wrapper}>\n            <div className={classes.title}>\n                <div className={classes.titleLabel}>{name}</div>\n                <div className={classes.closeDetail}\n                     onClick={handleCloseDetail}>\n                </div>\n                <div className={classes.titleButtons}>\n                    {!priceSetForm.openPriceSetForm && <Tooltip position=\"bottom\" text=\"Закрыть\">\n                        <IconButton\n                            iconStyle={iconStyle.icon}\n                            style={iconStyle.button}\n                            disableTouchRipple={true}\n                            touch={true}\n                            onTouchTap={handleCloseDetail}>\n                            <CloseIcon2 />\n                        </IconButton>\n                    </Tooltip>}\n                </div>\n            </div>\n            <div className={classes.content}>\n\n                <div className={classes.leftSide}>\n                    <div className={classes.bodyTitle}>Поставки</div>\n                    {priceHistoryLoading && <div className={classes.loader}>\n                                                <div>\n                                                    <CircularProgress size={40} thickness={4}/>\n                                                </div>\n                                            </div>}\n                    {!priceHistoryLoading &&\n                        <div className={classes.tableContent}>\n                            <Row>\n                                <Col xs={2} style={{fontSize: '15px'}}>&#8470;</Col>\n                                <Col style={{textAlign: 'left'}} xs={3}>Дата</Col>\n                                <Col style={{textAlign: 'left'}} xs={3}>Количество</Col>\n                                <Col xs={4}>Себестоимость</Col>\n                            </Row>\n\n                            {_.map(priceHistoryList, (item) => {\n                                const amount = _.get(item, 'amount')\n                                const netCost = _.get(item, 'netCost')\n                                const id = _.get(item, 'id')\n                                return (\n                                    <Row key={id} className=\"dottedList\">\n                                        <Col xs={2}>\n                                            <a onClick={ () => { priceSupplyDialog.handleOpenSupplyDialog(id) }} className={classes.link}>\n                                                {id}\n                                            </a>\n                                        </Col>\n                                        <Col style={{textAlign: 'left'}} xs={3}>23 апр, 2017</Col>\n                                        <Col style={{textAlign: 'left'}} xs={3}>{numberFormat(amount, measurement)}</Col>\n                                        <Col xs={4}>{numberFormat(netCost, getConfig('PRIMARY_CURRENCY'))}</Col>\n                                    </Row>\n                                )\n                            })}\n\n                            <div className={classes.average}> Усредненная себестоимость:\n                                <span className={classes.averagePrice}>{numberFormat(averageCost, getConfig('PRIMARY_CURRENCY'))}</span>\n                            </div>\n                        </div>\n                    }\n\n                </div>\n\n                <div className={classes.rightSide}>\n                    {(marketTypeIsLoading || priceListItemsIsLoading) && <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4} />\n                    </div>}\n                    {!marketTypeIsLoading && !priceListItemsIsLoading && priceSetForm.openPriceSetForm &&\n                        <PriceSetForm\n                            initialValues={priceSetForm.initialValues}\n                            onClose={priceSetForm.handleClosePriceSetForm}\n                            onSubmit={priceSetForm.handleSubmitPriceSetForm}\n                            mergedList={mergedList}\n                            priceUpdatedDate={priceUpdated}\n                        />\n                    }\n                    {(!marketTypeIsLoading && !priceListItemsIsLoading && !priceSetForm.openPriceSetForm) && <div>\n                        <div className={classes.bodyTitle}>\n                            <div>Цены на товар\n                                <span className={classes.rightSideTitleDate}> ({priceUpdated})</span>\n                            </div>\n                            <div className={classes.titleButtons}>\n                                <Tooltip position=\"bottom\" text=\"Изменить\">\n                                    <IconButton\n                                        iconStyle={iconStyle.icon}\n                                        style={iconStyle.button}\n                                        touch={true}\n                                        disableTouchRipple={true}\n                                        onTouchTap={priceSetForm.handleOpenPriceSetForm}\n                                    >\n                                        <Edit />\n                                    </IconButton>\n                                </Tooltip>\n                            </div>\n                        </div>\n                        <div className={classes.tableContent}>\n                            <Row className=\"dottedList\">\n                                <Col xs={6}>Тип обьекта</Col>\n                                <Col style={{textAlign: 'left'}} xs={3}>Нал</Col>\n                                <Col style={{textAlign: 'left'}} xs={3}>Безнал</Col>\n                            </Row>\n                            {_.map(mergedList, (item) => {\n                                const id = _.get(item, 'marketTypeId')\n                                const marketName = _.get(item, 'marketTypeName')\n                                const currency = _.get(item, ['currency', 'name']) || ' '\n                                const cashPrice = _.get(item, 'cash_price') + ' ' + currency\n                                const transferPrice = _.get(item, 'transfer_price') + ' ' + currency\n                                return (\n                                    <Row className=\"dottedList\" key={id}>\n                                        <Col xs={6}> {marketName}</Col>\n                                        <Col style={{textAlign: 'left'}} xs={3}>{cashPrice}</Col>\n                                        <Col style={{textAlign: 'left'}} xs={3}>{transferPrice}</Col>\n                                    </Row>\n                                )\n                            })}\n                        </div>\n                    </div> }\n                </div>\n            </div>\n        </div>)\n})\nPriceDetails.PropTypes = {\n    mergedList: PropTypes.func.isRequired,\n    priceSupplyDialog: PropTypes.shape({\n        openPriceSupplyDialog: PropTypes.number.isRequired,\n        handleOpenSupplyDialog: PropTypes.func.isRequired,\n        handleCloseSupplyDialog: PropTypes.func.isRequired\n    }).isRequired,\n    priceSetForm: PropTypes.shape({\n        openPriceSetForm: PropTypes.bool.isRequired,\n        handleOpenPriceSetForm: PropTypes.func.isRequired,\n        handleClosePriceSetForm: PropTypes.func.isRequired,\n        handleSubmitPriceSetForm: PropTypes.func.isRequired\n    })\n}\nexport default PriceDetails\n\n\n\n// WEBPACK FOOTER //\n// src/components/Price/PriceDetails.js","import _ from 'lodash'\nimport moment from 'moment'\nimport sprintf from 'sprintf'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router'\nimport React from 'react'\nimport {Row, Col} from 'react-flexbox-grid'\nimport * as ROUTES from '../../constants/routes'\nimport GridList from '../GridList'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport {TextField} from '../ReduxForm'\nimport Tooltip from '../ToolTip'\nimport Container from '../Container'\nimport PriceFilterForm from './PriceFilterForm'\nimport PriceSupplyDialog from './PriceSupplyDialog'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport {compose, withState} from 'recompose'\nimport PriceDetails from './PriceDetails'\nimport getConfig from '../../helpers/getConfig'\nimport numberFormat from '../../helpers/numberFormat'\nimport DoneIcon from 'material-ui/svg-icons/action/done'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport toCamelCase from '../../helpers/toCamelCase'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'name',\n        title: 'Названия',\n        xs: 5\n    },\n    {\n        sorting: true,\n        name: 'type',\n        title: 'Себестоимость',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'price',\n        title: 'Цена',\n        xs: 3\n    },\n    {\n        sorting: true,\n        name: 'created_date',\n        title: 'Дата обновления',\n        xs: 2\n    }\n]\nconst enhance = compose(\n    injectSheet({\n        addButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        addButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            marginTop: '0px!important',\n            height: '20px!important',\n            width: '50px!important',\n            '& hr': {\n                bottom: '0!important'\n            },\n            '& input': {\n                top: '-2px',\n                textAlign: 'right'\n            }\n        },\n        priceImg: {\n            width: '30px',\n            height: '30px',\n            overflow: 'hidden',\n            marginRight: '5px',\n            display: 'inline-block',\n            borderRadius: '4px',\n            textAlign: 'center',\n            '& img': {\n                height: '30px'\n            }\n        },\n        pricePercent: {\n            position: 'absolute',\n            top: '0',\n            right: 0,\n            display: 'flex',\n            alignItems: 'center',\n            height: '60px',\n            '& > div:first-child': {\n                padding: '0 10px',\n                '& > div': {\n                    textAlign: 'right'\n                }\n            },\n            '& span': {\n                fontSize: '12px !important',\n                fontWeight: '600'\n            }\n        },\n        listRow: {\n            position: 'relative',\n            '& > a': {\n                width: '100%',\n                display: 'flex',\n                alignItems: 'center',\n                position: 'absolute',\n                top: '0',\n                left: '-30px',\n                right: '-30px',\n                bottom: '0',\n                padding: '0 30px',\n                '& > div:first-child': {\n                    fontWeight: '600'\n                },\n                '& > div': {\n                    fontWeight: '500'\n                }\n            }\n        }\n    }),\n    withState('globalPrice', 'setGlobalPrice', true),\n\nreduxForm({\n    form: 'PriceGlobalForm',\n    enableReinitialize: true\n})\n)\nconst PriceGridList = enhance((props) => {\n    const {\n        classes,\n        filter,\n        globalPrice,\n        setGlobalPrice,\n        filterDialog,\n        priceSupplyDialog,\n        priceSetForm,\n        listData,\n        detailData,\n        handleSubmit\n    } = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n    const expenseList = _.get(detailData, 'priceItemExpenseList')\n    const expenseLoading = _.get(detailData, 'priceItemExpenseLoading')\n    const priceFilterDialog = (\n        <PriceFilterForm\n            initialValues={filterDialog.initialValues}\n            filter={filter}\n            filterDialog={filterDialog}\n        />\n    )\n    const listDetailData = _.filter(_.get(listData, 'data'), (o) => {\n        return o.id === _.get(detailData, 'id')\n    })\n\n    const priceDetail = (\n        <PriceDetails\n            key={_.get(detailData, 'id')}\n            detailData={detailData}\n            listDetailData={listDetailData}\n            priceSupplyDialog={priceSupplyDialog}\n            priceSetForm = {priceSetForm}\n            handleCloseDetail={_.get(detailData, 'handleCloseDetail')}\n            mergedList={(detailData.mergedList())}>\n        </PriceDetails>\n    )\n\n    const pricePercent = (\n        <form onSubmit={onSubmit} className={classes.pricePercent}>\n            <div>\n                <span>Наценка за безнал</span>\n                <div>\n                    {globalPrice && <Field\n                        name='globalPrice'\n                        className={classes.inputFieldCustom}\n                        component={TextField}\n                        fullWidth={true}\n                    />}\n                    {!globalPrice && <Link onClick={() => { setGlobalPrice(true) }} >10 %</Link>}\n                </div>\n            </div>\n            <div>\n                {globalPrice &&\n                <Tooltip position=\"bottom\" text=\"\">\n                    <FloatingActionButton\n                        mini={true}\n                        type=\"submit\"\n                        className={classes.addButton}\n                        onTouchTap={() => {\n                            onSubmit().then(() => {\n                                setGlobalPrice(false)\n                            })\n                        }}>\n\n                        <DoneIcon/>\n                    </FloatingActionButton>\n                </Tooltip>}\n            </div>\n        </form>\n    )\n    const priceList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        const netCost = _.get(item, 'netCost') ? numberFormat(_.get(item, 'netCost'), getConfig('PRIMARY_CURRENCY')) : 'Не установлено'\n        const minPrice = _.get(item, 'minPrice')\n        const maxPrice = _.get(item, 'maxPrice')\n        const price = (minPrice && maxPrice) ? numberFormat(minPrice) + ' - ' + numberFormat(maxPrice, getConfig('PRIMARY_CURRENCY')) : 'Не установлено'\n        const priceUpdate = _.get(item, 'priceUpdated') ? moment(_.get(item, 'priceUpdated')).format('DD.MM.YYYY') : 'Не установлено'\n        return (\n            <Row key={id} className={classes.listRow}>\n                <Link to={{\n                    pathname: sprintf(ROUTES.PRICE_ITEM_PATH, id),\n                    query: filter.getParams()\n                }}>\n                    <Col xs={5}>{name}</Col>\n                    <Col xs={2}>{netCost}</Col>\n                    <Col xs={3}>{price}</Col>\n                    <Col xs={2}>{priceUpdate}</Col>\n                </Link>\n            </Row>\n        )\n    })\n    const list = {\n        header: listHeader,\n        list: priceList,\n        loading: _.get(listData, 'listLoading')\n    }\n\n    return (\n        <Container>\n            <SubMenu url={ROUTES.PRICE_LIST_URL}/>\n            {pricePercent}\n            <GridList\n                filter={filter}\n                list={list}\n                detail={priceDetail}\n                filterDialog={priceFilterDialog}\n            />\n            <PriceSupplyDialog\n                open={priceSupplyDialog.openPriceSupplyDialog}\n                onClose={priceSupplyDialog.handleCloseSupplyDialog}\n                list={expenseList}\n                loading={expenseLoading}\n            />\n        </Container>\n    )\n})\nPriceGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    filterDialog: PropTypes.shape({\n        initialValues: PropTypes.object,\n        filterLoading: PropTypes.bool,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    }).isRequired,\n    priceSupplyDialog: PropTypes.shape({\n        openPriceSupplyDialog: PropTypes.number.isRequired,\n        handleOpenSupplyDialog: PropTypes.func.isRequired,\n        handleCloseSupplyDialog: PropTypes.func.isRequired\n    }).isRequired,\n    priceSetForm: PropTypes.shape({\n        openPriceSetForm: PropTypes.bool.isRequired,\n        handleOpenPriceSetForm: PropTypes.func.isRequired,\n        handleClosePriceSetForm: PropTypes.func.isRequired,\n        handleSubmitPriceSetForm: PropTypes.func.isRequired\n    }).isRequired\n}\nexport default PriceGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Price/PriceGridList.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport FlatButton from 'material-ui/FlatButton'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {TextField, PriceMainRadioButton, CurrencySearchField} from '../ReduxForm'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport {Row, Col} from 'react-flexbox-grid'\nimport Tooltip from '../ToolTip'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\nconst enhance = compose(\n\n    injectSheet({\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        bodyTitle: {\n            display: 'flex',\n            fontWeight: '600',\n            marginBottom: '25px',\n            fontSize: '14px',\n            justifyContent: 'space-between',\n            height: '25px',\n            alignItems: 'center !important'\n        },\n        rightSide: {\n            position: 'relative',\n            flexBasis: '100%',\n            maxWidth: '100%'\n        },\n        rightSideTitleDate: {\n            fontWeight: '600',\n            fontSize: '12px!important',\n            color: '#a5a1a0'\n        },\n        tableContent: {\n            '& .row:first-child': {\n                fontWeight: '600'\n            },\n            '& .row': {\n                padding: '0 !important',\n                '& > div:last-child': {\n                    '& > div > div:last-child': {\n                        top: '10px'\n                    }\n                },\n                '& > div:first-child': {\n                    textAlign: 'left'\n                },\n                '& .dottedList': {\n                    padding: '0px!important',\n                    '& > div:last-child': {\n                        padding: '100px'\n                    }\n                }\n            },\n            overflowY: 'hidden',\n            overflowX: 'hidden'\n        },\n        actionButton: {\n            display: 'flex',\n            alignItems: 'center',\n            bottom: '0',\n            left: '0',\n            right: '0',\n            padding: '0',\n            zIndex: '999',\n            background: '#fff',\n            textAlign: 'right',\n            '& span': {\n                fontSize: '13px !important',\n                fontWeight: '600 !important',\n                color: '#129fdd',\n                verticalAlign: 'inherit !important'\n            }\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            marginTop: '0px!important',\n            height: '40px!important'\n        },\n        priceRow: {\n            display: 'flex',\n            alignItems: 'center',\n            height: '40px'\n        },\n        radios: {\n            '& > div': {\n                '&:first-child': {\n                    fontWeight: '600'\n                },\n                lineHeight: '40px',\n                paddingRight: '20px'\n            },\n            '& .dottedList': {\n                padding: '8px 20px 8px 0px !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'PriceCreateForm',\n        enableReinitialize: true\n    })\n)\nconst PriceSetForm = enhance((props) => {\n    const {\n        handleSubmit,\n        classes,\n        mergedList,\n        onClose,\n        priceUpdatedDate\n    } = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n    const iconStyle = {\n        icon: {\n            color: '#666',\n            width: 20,\n            height: 20\n        },\n        button: {\n            width: 20,\n            height: 20,\n            padding: '0',\n            top: '2px',\n            marginLeft: '10px'\n        }\n    }\n    return (\n        <div>\n            <form onSubmit={onSubmit} className={classes.form}>\n                <div className={classes.bodyTitle}>\n                    <div>Цены на товар\n                        <span className={classes.rightSideTitleDate}> ({priceUpdatedDate})</span>\n                    </div>\n                    <div className={classes.actionButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            primary={true}\n                            type=\"submit\"\n                            onTouchTap={onSubmit}\n                        />\n                        <Tooltip position=\"bottom\" text=\"Закрыть\">\n                            <IconButton\n                                className={classes.closeBtn}\n                                iconStyle={iconStyle.icon}\n                                disableTouchRipple={true}\n                                style={iconStyle.button}\n                                touch={true}\n                                onTouchTap={onClose}>\n                                <CloseIcon2 color=\"#666666\"/>\n                            </IconButton>\n                        </Tooltip>\n                    </div>\n                </div>\n                <div style={{display: 'flex'}} >\n                    <div className={classes.radios}>\n                        <div>Основной</div>\n                        <div>\n                            <Field\n                                name='isPrimary'\n                                component={PriceMainRadioButton}\n                                mergedList={mergedList}\n                                fullWidth={true}>\n                            </Field>\n                        </div>\n                    </div>\n                <div className={classes.tableContent}>\n                    <Row className={classes.priceRow}>\n                        <Col xs={6}>Тип обьекта</Col>\n                        <Col style={{textAlign: 'left'}} xs={2}>Нал</Col>\n                        <Col style={{textAlign: 'left'}} xs={2}>Безнал</Col>\n                        <Col style={{textAlign: 'left'}} xs={2}>Валюта</Col>\n                    </Row>\n                        {_.map(mergedList, (item, index) => {\n                            const marketName = _.get(item, 'marketTypeName')\n                            return (\n                                <Row className='dottedList' key={index}>\n                                    <Col xs={6}> {marketName}</Col>\n                                    <Col style={{textAlign: 'left'}} xs={2}>\n                                        <Field\n                                            name={'prices[' + index + '][cash_price]'}\n                                            className={classes.inputFieldCustom}\n                                            component={TextField}\n                                            fullWidth={true}\n                                        />\n                                    </Col>\n                                    <Col style={{textAlign: 'left'}} xs={2}>\n                                        <Field\n                                            name={'prices[' + index + '][transfer_price]'}\n                                            className={classes.inputFieldCustom}\n                                            component={TextField}\n                                            fullWidth={true}\n                                        />\n                                    </Col>\n                                    <Col xs={2}>\n                                        <Field\n                                            name={'prices[' + index + '][currency]'}\n                                            className={classes.inputFieldCustom}\n                                            component={CurrencySearchField}\n                                            fullWidth={true}/>\n                                    </Col>\n                                </Row>\n                            )\n                        })}\n                </div>\n                </div>\n            </form>\n        </div>\n    )\n})\nPriceSetForm.propTyeps = {\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    mergedList: PropTypes.object.isRequired,\n    priceUpdatedDate: PropTypes.string.isRequired\n}\nexport default PriceSetForm\n\n\n\n// WEBPACK FOOTER //\n// src/components/Price/PriceSetForm.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport {reduxForm} from 'redux-form'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport {Row} from 'react-flexbox-grid'\nimport getConfig from '../../helpers/getConfig'\nimport numberFormat from '../../helpers/numberFormat'\nimport CircularProgress from 'material-ui/CircularProgress'\n\nconst ZERO = 0\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            width: '100%',\n            height: '300px',\n            background: '#fff',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        popUp: {\n            color: '#333 !important',\n            overflowY: 'hidden !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            overflowX: 'hidden',\n            height: '100%'\n        },\n        titleContent: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '20px 30px',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                padding: '0 !important',\n                position: 'absolute !important'\n            }\n        },\n        content: {\n            width: '100%',\n            display: 'block'\n        },\n        topBlock: {\n            padding: '10px 30px 0px',\n            '&:last-child': {\n                border: 'none'\n            },\n            '& .row': {\n                lineHeight: '30px',\n                padding: '0 10px',\n                '& > div:first-child': {\n                    flexBasis: '25%',\n                    maxWidth: '25%'\n                },\n                '& > div:last-child': {\n                    fontWeight: '600',\n                    flexBasis: '75%',\n                    maxWidth: '75%'\n                }\n            }\n        },\n        downBlock: {\n            padding: '20px 30px',\n            '& .row': {\n                lineHeight: '40px',\n                padding: '0 10px',\n                display: 'flex',\n                justifyContent: 'space-between',\n                '& > div:last-child': {\n                    textAlign: 'right',\n                    fontWeight: '600'\n                }\n            },\n            '& .row:last-child': {\n                fontWeight: '600',\n                borderTop: '1px #efefef solid',\n                lineHeight: 'normal',\n                paddingTop: '8px'\n            }\n        },\n        subTitle: {\n            fontStyle: 'italic',\n            fontWeight: '400'\n        }\n    }),\n    reduxForm({\n        form: 'PriceCreateForm',\n        enableReinitialize: true\n    })\n)\nconst PriceSupplyDialog = enhance((props) => {\n    const {open, loading, onClose, classes, list} = props\n    const dateDelivery = _.get(list, 'dateDelivery')\n    const product = _.get(list, 'product')\n    const provider = _.get(list, 'provider')\n    let price = ZERO\n    return (\n        <Dialog\n            modal={true}\n            open={open > ZERO}\n            onRequestClose={onClose}\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\n            bodyStyle={{minHeight: 'auto'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <div>Поставка №{open}</div>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            {loading ? <div className={classes.loader}>\n                <div>\n                    <CircularProgress size={40} thickness={4}/>\n                </div>\n            </div>\n                : <div className={classes.content}>\n                    <div className={classes.topBlock}>\n                        <Row>\n                            <div>Товар</div>\n                            <div>{product}</div>\n                        </Row>\n                        <Row>\n                            <div>Поставщик:</div>\n                            <div>{provider}</div>\n                        </Row>\n                        <Row className=\"dottedList\" style={{paddingBottom: '10px'}}>\n                            <div>Дата поставки:</div>\n                            <div>{dateDelivery}</div>\n                        </Row>\n                    </div>\n                    <div className={classes.downBlock}>\n                        <div className={classes.subTitle}>Расчет себестоимости за еденицу товара:</div>\n                        {_.map(_.get(list, 'expenses'), (item, index) => {\n                            const interalCost = _.get(item, 'internalCost')\n                            price = Number(price) + Number(interalCost)\n                            const comment = _.get(item, 'comment')\n                            return (\n                                <Row key={index}>\n                                    <div>{comment}</div>\n                                    <div>{numberFormat(interalCost, getConfig('PRIMARY_CURRENCY'))}</div>\n                                </Row>\n                            )\n                        })}\n                        <Row>\n                            <div>Себестоимость</div>\n                            <div>{numberFormat(price, getConfig('PRIMARY_CURRENCY'))}</div>\n                        </Row>\n                    </div>\n                </div>}\n        </Dialog>\n    )\n})\nPriceSupplyDialog.propTyeps = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\nexport default PriceSupplyDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Price/PriceSupplyDialog.js","import PriceGridList from './PriceGridList'\nimport {PRICE_FILTER_KEY, PRICE_FILTER_OPEN} from './PriceFilterForm'\nconst PRICE_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nconst PRICE_DELETE_DIALOG_OPEN = 'openDeleteDialog'\nconst PRICE_SUPPLY_DIALOG_OPEN = 'openPriceSupplyDialog'\nconst PRICE_SET_FORM_OPEN = 'openPriceSetFrom'\nexport {\n    PRICE_UPDATE_DIALOG_OPEN,\n    PRICE_DELETE_DIALOG_OPEN,\n    PRICE_FILTER_KEY,\n    PRICE_FILTER_OPEN,\n    PRICE_SUPPLY_DIALOG_OPEN,\n    PRICE_SET_FORM_OPEN,\n    PriceGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Price/index.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport IconButton from 'material-ui/IconButton'\nimport Edit from 'material-ui/svg-icons/image/edit'\nimport Delete from 'material-ui/svg-icons/action/delete'\nimport {Row, Col} from 'react-flexbox-grid'\nimport Dot from '../Images/dot.png'\nimport numberFormat from '../../helpers/numberFormat'\nimport getConfig from '../../helpers/getConfig'\nimport Tooltip from '../ToolTip'\nimport dateFormat from '../../helpers/dateFormat'\n\nconst colorBlue = '#12aaeb'\nconst enhance = compose(\n    injectSheet({\n        dottedList: {\n            padding: '20px 0'\n        },\n        wrapper: {\n            color: '#333 !important',\n            width: '100%',\n            display: 'flex',\n            flexWrap: 'wrap',\n            padding: '20px 30px',\n            '& a': {\n                color: colorBlue\n            }\n        },\n        link: {\n            borderBottom: '1px dashed',\n            fontWeight: '600'\n        },\n        defect: {\n            extend: 'link',\n            color: '#e57373 !important'\n        },\n        loader: {\n            width: '100%',\n            background: '#fff',\n            height: '400px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n        },\n        expenseLoader: {\n            extend: 'loader',\n            height: 'auto',\n            padding: '20px 0'\n        },\n        title: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            width: '100%',\n            height: '65px',\n            margin: '-20px 0 0',\n            position: 'relative'\n        },\n        titleLabel: {\n            fontSize: '18px',\n            color: '#333',\n            fontWeight: 'bold',\n            cursor: 'pointer'\n        },\n        titleButtons: {\n            display: 'flex',\n            justifyContent: 'flex-end'\n        },\n        titleSupplier: {\n            fontSize: '18px',\n            position: 'relative',\n            '& .supplierDetails': {\n                background: '#fff',\n                boxShadow: '0 2px 5px 0px rgba(0, 0, 0, 0.16)',\n                fontSize: '13px',\n                position: 'absolute',\n                padding: '64px 28px 20px',\n                top: '-21px',\n                left: '50%',\n                zIndex: '9',\n                minWidth: '300px',\n                transform: 'translate(-50%, 0)',\n                '& .detailsWrap': {\n                    position: 'relative',\n                    paddingTop: '10px',\n                    '&:before': {\n                        content: '\"\"',\n                        background: 'url(' + Dot + ')',\n                        position: 'absolute',\n                        top: '0',\n                        left: '0',\n                        right: '0',\n                        height: '2px'\n                    }\n                },\n                '& .detailsList': {\n                    padding: '10px 0',\n                    '&:last-child': {\n                        paddingBottom: '0'\n                    },\n                    '& div:first-child': {\n                        color: '#666'\n                    }\n                }\n            }\n        },\n        dropdown: {\n            position: 'relative',\n            paddingRight: '18px',\n            zIndex: '10',\n            '&:after': {\n                top: '10px',\n                right: '0',\n                content: '\"\"',\n                position: 'absolute',\n                borderTop: '5px solid',\n                borderLeft: '5px solid transparent',\n                borderRight: '5px solid transparent'\n            }\n        },\n        details: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            boxSizing: 'content-box',\n            alignItems: 'center',\n            width: '100%',\n            background: '#f2f5f8',\n            padding: '0 30px',\n            margin: '0 -30px',\n            minHeight: '60px'\n        },\n        payInfo: {\n            display: 'flex'\n        },\n        storeInfo: {\n            display: 'flex'\n        },\n        dateInfo: {\n            textAlign: 'right',\n            display: 'flex',\n            '& span': {\n                fontWeight: 'bold',\n                color: '#999'\n            }\n        },\n        data: {\n            width: '100%',\n            '& .dataHeader': {\n                fontWeight: 'bold',\n                padding: '20px 0',\n                width: '100%',\n                borderBottom: '1px solid #efefef',\n                '& .row': {\n                    alignItems: 'center',\n                    '& div': {\n                        whiteSpace: 'nowrap',\n                        overflow: 'hidden',\n                        textOverflow: 'ellipsis'\n                    }\n                }\n            },\n            '& .summary': {\n                fontWeight: 'bold',\n                textTransform: 'uppercase',\n                textAlign: 'right',\n                padding: '20px 30px',\n                margin: '0 -30px',\n                borderBottom: '1px #efefef solid'\n            },\n            '& .dottedList': {\n                '&:last-child:after': {\n                    display: 'none'\n                },\n                '&:after': {\n                    left: '0.5rem',\n                    right: '0.5rem'\n                }\n            },\n            '& .addExpenses': {\n                padding: '20px 30px 0',\n                margin: '0 -30px',\n                borderBottom: '1px #efefef solid',\n                '& .addExpense': {\n                    display: 'flex',\n                    alignItems: 'center',\n                    paddingBottom: '20px',\n                    width: '100%',\n                    justifyContent: 'space-between',\n                    fontWeight: 'bold',\n                    '& .expenseButton > div > span ': {\n                        color: '#12aaeb !important',\n                        textTransform: 'inherit !important'\n                    }\n                }\n            },\n            '& .expenseInfo': {\n                padding: '0 !important',\n                display: 'block',\n                '&:last-child': {\n                    position: 'static'\n                },\n                '& .row': {\n                    alignItems: 'center'\n                }\n            },\n            '& .dataInfo': {\n                height: '50px',\n                padding: '0',\n                '& > div': {\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                    whiteSpace: 'nowrap'\n                }\n            },\n            '& .comment': {\n                display: 'flex',\n                padding: '20px 0 0',\n                alignItems: 'center',\n                '& .personImage': {\n                    borderRadius: '50%',\n                    overflow: 'hidden',\n                    flexBasis: '35px',\n                    flexGrow: '1',\n                    height: '35px',\n                    width: '35px',\n                    '& img': {\n                        display: 'block',\n                        height: '100%',\n                        width: '100%'\n                    }\n                },\n                '& .personText': {\n                    background: '#f2f5f8',\n                    borderRadius: '2px',\n                    marginLeft: '15px',\n                    padding: '15px',\n                    position: 'relative',\n                    width: 'calc(100% - 50px)',\n                    '&:after': {\n                        content: '\"\"',\n                        position: 'absolute',\n                        borderRightColor: '#f2f5f8',\n                        borderRightStyle: 'solid',\n                        borderRightWidth: '7px',\n                        borderTop: '7px solid transparent',\n                        borderBottom: '7px solid transparent',\n                        left: '-7px',\n                        top: '50%',\n                        marginTop: '-7px'\n                    }\n                }\n            }\n        },\n        expenseSum: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end'\n        },\n        closeDetail: {\n            position: 'absolute',\n            left: '0',\n            top: '0',\n            right: '0',\n            bottom: '0',\n            cursor: 'pointer',\n            zIndex: '1',\n            margin: '0 -30px'\n        }\n    }),\n)\n\nconst iconStyle = {\n    icon: {\n        color: '#666',\n        width: 20,\n        height: 20\n    },\n    button: {\n        width: 48,\n        height: 48,\n        padding: 0\n    }\n}\n\nconst PricesDetails = enhance((props) => {\n    const {\n        classes,\n        loading,\n        data,\n        updateDialog,\n        confirmDialog,\n        handleCloseDetail\n    } = props\n    const id = _.get(data, 'id')\n    const name = _.get(data, 'name')\n    const products = _.get(data, 'products')\n    const beginDate = dateFormat(_.get(data, 'beginDate'))\n    const tillDate = dateFormat(_.get(data, 'tillDate'))\n    const discount = _.toNumber(_.get(data, 'discount'))\n    const type = _.get(data, 'type')\n\n    if (loading) {\n        return (\n            <div className={classes.loader}>\n                <div>\n                    <CircularProgress size={40} thickness={4}/>\n                </div>\n            </div>\n        )\n    }\n    const currency = getConfig('PRIMARY_CURRENCY')\n    return (\n        <div className={classes.wrapper}>\n            <div className={classes.title}>\n                <div className={classes.titleLabel}>№ {id} | {name}</div>\n                <div className={classes.closeDetail}\n                     onClick={() => { handleCloseDetail() }}>\n                </div>\n                <div className={classes.titleButtons}>\n                    <Tooltip position=\"bottom\" text=\"Изменить\">\n                        <IconButton\n                            iconStyle={iconStyle.icon}\n                            style={iconStyle.button}\n                            touch={true}\n                            onTouchTap={() => { updateDialog.handleOpenUpdateDialog() }}>\n                            <Edit />\n                        </IconButton>\n                    </Tooltip>\n                    <Tooltip position=\"bottom\" text=\"Отменить\">\n                        <IconButton\n                            iconStyle={iconStyle.icon}\n                            style={iconStyle.button}\n                            touch={true}\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(id) }}>\n                            <Delete />\n                        </IconButton>\n                    </Tooltip>\n                </div>\n            </div>\n\n            <div className={classes.details}>\n                <div className={classes.storeInfo}>\n                    <div className={classes.store}>\n                        {(type === 'discount') ? <span>Размер <b>акции - {discount}%</b></span>\n                            : <span><b>Бонусная акция</b></span>}\n                    </div>\n                </div>\n                <div className={classes.dateInfo}>\n                    <div>Начало акции: <span style={{marginRight: '30px'}}>{beginDate}</span></div>\n                    <div>Завершение акции: <span>{tillDate}</span></div>\n                </div>\n            </div>\n\n            {(type === 'bonus')\n                ? <div className={classes.data}>\n                    <div className=\"dataHeader\">\n                        <Row>\n                            <Col xs={4}>Товар</Col>\n                            <Col xs={1}>Кол-во</Col>\n                            <Col xs={4}>Подарок</Col>\n                            <Col xs={1}>Кол-во</Col>\n                        </Row>\n                    </div>\n                    <div>\n                        {_.map(products, (item, index) => {\n                            const product = _.get(item, ['product', 'name'])\n                            const productMeasurement = _.get(item, ['product', 'measurement', 'name'])\n                            const amount = _.toNumber(_.get(item, 'amount'))\n                            const bonusProduct = _.get(item, ['bonusProduct', 'name']) || 'Не выбран'\n                            const bonusProductMeasurement = _.get(item, ['bonusProduct', 'measurement', 'name'])\n                            const bonusAmount = _.toNumber(_.get(item, 'bonusAmount'))\n                            return (\n                                <Row className=\"dataInfo dottedList\" key={index}>\n                                    <Col xs={4}>{product}</Col>\n                                    <Col xs={1}>{amount ? numberFormat(amount, productMeasurement) : 'Не определено'}</Col>\n                                    <Col xs={4}>{bonusProduct}</Col>\n                                    <Col xs={1}>{bonusAmount ? numberFormat(bonusAmount, bonusProductMeasurement) : 'Не определено'}</Col>\n                                    <Col xs={2} style={{textAlign: 'right'}}>\n                                        <IconButton\n                                            iconStyle={iconStyle.icon}\n                                            style={iconStyle.button}\n                                            touch={true}>\n                                            <Delete />\n                                        </IconButton>\n                                    </Col>\n                                </Row>\n                            )\n                        })}\n                    </div>\n                </div>\n                : <div className={classes.data}>\n                    <div className=\"dataHeader\">\n                        <Row>\n                            <Col xs={5}>Товар</Col>\n                            <Col xs={2}>Кол-во</Col>\n                            <Col xs={2}>Реальная стоимость</Col>\n                            <Col xs={2}>Стоимость по акции</Col>\n                        </Row>\n                    </div>\n                    <div>\n                        {_.map(products, (item) => {\n                            const productId = _.get(item, ['product', 'id'])\n                            const productName = _.get(item, ['product', 'name'])\n                            const amount = _.get(item, 'amount')\n                            const measurement = _.get(item, ['product', 'measurement', 'name'])\n                            return (\n                                <Row className=\"dataInfo dottedList\" key={productId}>\n                                    <Col xs={5}>{productName}</Col>\n                                    <Col xs={2}>{numberFormat(amount, measurement)}</Col>\n                                    <Col xs={2}>10 000 / 20 000 {currency}</Col>\n                                    <Col xs={2}>7 000 / 14 000 {currency}</Col>\n                                    <Col xs={1} style={{textAlign: 'right'}}>\n                                        <IconButton\n                                            iconStyle={iconStyle.icon}\n                                            style={iconStyle.button}\n                                            touch={true}>\n                                            <Delete />\n                                        </IconButton>\n                                    </Col>\n                                </Row>\n                            )\n                        })}\n                    </div>\n                </div>}\n        </div>\n    )\n})\n\nexport default PricesDetails\n\n\n\n// WEBPACK FOOTER //\n// src/components/Prices/PricesDetails.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Row, Col} from 'react-flexbox-grid'\nimport * as ROUTES from '../../constants/routes'\nimport GridList from '../GridList'\nimport Container from '../Container'\nimport PricesFilterForm from './PricesFilterForm'\nimport PricesDetails from './PricesDetails'\nimport PricesCreateDialog from './PricesCreateDialog'\nimport ConfirmDialog from '../ConfirmDialog'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport Tooltip from '../ToolTip'\nimport dateFormat from '../../helpers/dateFormat'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'id',\n        title: '№ акции',\n        xs: 1\n    },\n    {\n        sorting: true,\n        name: 'name',\n        title: 'Наименование',\n        xs: 5\n    },\n    {\n        sorting: true,\n        name: 'beginDate',\n        title: 'Дата начала',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'tillDate',\n        title: 'Дата завершения',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'discount',\n        title: 'Мар. акция',\n        xs: 2\n    }\n]\n\nconst enhance = compose(\n    injectSheet({\n        addButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        addButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px'\n        },\n        dot: {\n            display: 'inline-block',\n            height: '7px',\n            width: '7px',\n            borderRadius: '50%',\n            marginRight: '6px'\n        },\n        success: {\n            extend: 'dot',\n            backgroundColor: '#81c784'\n        },\n        begin: {\n            extend: 'dot',\n            backgroundColor: '#f0ad4e'\n        },\n        error: {\n            extend: 'dot',\n            backgroundColor: '#e57373'\n        },\n        waiting: {\n            extend: 'dot',\n            backgroundColor: '#64b5f6'\n        }\n    })\n)\n\nconst PricesGridList = enhance((props) => {\n    const {\n        filter,\n        createDialog,\n        updateDialog,\n        filterDialog,\n        confirmDialog,\n        listData,\n        detailData,\n        classes\n    } = props\n\n    const pricesFilterDialog = (\n        <PricesFilterForm\n            initialValues={filterDialog.initialValues}\n            filter={filter}\n            filterDialog={filterDialog}\n        />\n    )\n\n    const pricesDetail = (\n        <PricesDetails\n            key={_.get(detailData, 'id')}\n            data={_.get(detailData, 'data') || {}}\n            confirmDialog={confirmDialog}\n            updateDialog={updateDialog}\n            loading={_.get(detailData, 'detailLoading')}\n            handleCloseDetail={_.get(detailData, 'handleCloseDetail')}\n        />\n    )\n\n    const pricesList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        const beginDate = dateFormat(_.get(item, 'beginDate'))\n        const tillDate = dateFormat(_.get(item, 'tillDate'))\n        const type = _.get(item, 'type')\n        const discount = _.toNumber(_.get(item, 'discount'))\n\n        return (\n            <Row key={id} style={{cursor: 'pointer'}} onTouchTap = {() => { listData.handleClickDetail(id) }}>\n                <Col xs={1}>{id}</Col>\n                <Col xs={5} >{name}</Col>\n                <Col xs={2}>{beginDate}</Col>\n                <Col xs={2}>{tillDate}</Col>\n                <Col xs={2}>\n                    {(type === 'bonus') ? <span>Бонус</span> : <span>Скидка - {discount}%</span>}\n                </Col>\n            </Row>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: pricesList,\n        loading: _.get(listData, 'listLoading')\n    }\n\n    return (\n        <Container>\n            <SubMenu url={ROUTES.PRICES_LIST_URL}/>\n\n            <div className={classes.addButtonWrapper}>\n                <Tooltip position=\"left\" text=\"Добавить акцию\">\n                    <FloatingActionButton\n                        mini={true}\n                        className={classes.addButton}\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\n                        <ContentAdd />\n                    </FloatingActionButton>\n                </Tooltip>\n            </div>\n\n            <GridList\n                filter={filter}\n                list={list}\n                detail={pricesDetail}\n                filterDialog={pricesFilterDialog}\n            />\n\n            <PricesCreateDialog\n                openDialog={createDialog.openCreateDialog}\n                loading={createDialog.createLoading}\n                onClose={createDialog.handleCloseCreateDialog}\n                onSubmit={createDialog.handleSubmitCreateDialog}\n            />\n\n            <PricesCreateDialog\n                isUpdate={true}\n                initialValues={updateDialog.initialValues}\n                openDialog={updateDialog.openUpdateDialog}\n                loading={updateDialog.updateLoading}\n                onClose={updateDialog.handleCloseUpdateDialog}\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\n            />\n\n            {detailData.id && <ConfirmDialog\n                type=\"delete\"\n                message={_.get(detailData, ['data', 'name'])}\n                onClose={confirmDialog.handleCloseConfirmDialog}\n                onSubmit={confirmDialog.handleSendConfirmDialog}\n                open={confirmDialog.openConfirmDialog}\n            />}\n\n        </Container>\n    )\n})\n\nPricesGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    createDialog: PropTypes.shape({\n        createLoading: PropTypes.bool.isRequired,\n        openCreateDialog: PropTypes.bool.isRequired,\n        handleOpenCreateDialog: PropTypes.func.isRequired,\n        handleCloseCreateDialog: PropTypes.func.isRequired,\n        handleSubmitCreateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    confirmDialog: PropTypes.shape({\n        openConfirmDialog: PropTypes.bool.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleSendConfirmDialog: PropTypes.func.isRequired\n    }).isRequired,\n    updateDialog: PropTypes.shape({\n        updateLoading: PropTypes.bool.isRequired,\n        openUpdateDialog: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    filterDialog: PropTypes.shape({\n        initialValues: PropTypes.object,\n        filterLoading: PropTypes.bool,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default PricesGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Prices/PricesGridList.js","import PricesGridList from './PricesGridList'\nimport {PRICES_CREATE_DIALOG_OPEN} from './PricesCreateDialog'\nimport {PRICES_FILTER_KEY, PRICES_FILTER_OPEN} from './PricesFilterForm'\nconst PRICES_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nconst PRICES_DELETE_DIALOG_OPEN = 'openDeleteDialog'\nexport {\n    PRICES_CREATE_DIALOG_OPEN,\n    PRICES_UPDATE_DIALOG_OPEN,\n    PRICES_FILTER_KEY,\n    PRICES_FILTER_OPEN,\n    PRICES_DELETE_DIALOG_OPEN,\n    PricesGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Prices/index.js","import _ from 'lodash'\nimport moment from 'moment'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport {Row, Col} from 'react-flexbox-grid'\nimport IconButton from 'material-ui/IconButton'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\nimport Edit from 'material-ui/svg-icons/image/edit'\nimport * as ROUTES from '../../constants/routes'\nimport GridList from '../GridList'\nimport Container from '../Container'\nimport ProductFilterForm from './ProductFilterForm'\nimport ProductCreateDialog from './ProductCreateDialog'\nimport ProductShowPhotoDialog from './ProductShowPhotoDialog'\nimport ConfirmDialog from '../ConfirmDialog'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport Tooltip from '../ToolTip'\nimport IconMenu from 'material-ui/IconMenu'\nimport MenuItem from 'material-ui/MenuItem'\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\nimport Landscape from 'material-ui/svg-icons/image/landscape'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'name',\n        title: 'Наименование',\n        xs: 3\n    },\n    {\n        sorting: true,\n        name: 'code',\n        title: 'Код товара',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'type',\n        title: 'Тип товара',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'measurement',\n        title: 'Мера',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'created_date',\n        title: 'Дата создания',\n        xs: 2\n    }\n]\n\nconst enhance = compose(\n    injectSheet({\n        addButton: {\n            '& button': {\n                backgroundColor: '#12aaeb !important'\n            }\n        },\n        addButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px'\n        },\n        productImg: {\n            width: '30px',\n            minWidth: '30px',\n            height: '30px',\n            overflow: 'hidden',\n            marginRight: '15px',\n            display: 'inline-block',\n            borderRadius: '4px',\n            textAlign: 'center',\n            '& img': {\n                height: '30px'\n            }\n        }\n    })\n)\n\nconst ProductGridList = enhance((props) => {\n    const {\n        filter,\n        createDialog,\n        updateDialog,\n        filterDialog,\n        showBigImg,\n        confirmDialog,\n        listData,\n        detailData,\n        classes\n    } = props\n\n    const productFilterDialog = (\n        <ProductFilterForm\n            initialValues={filterDialog.initialValues}\n            filter={filter}\n            filterDialog={filterDialog}\n        />\n    )\n\n    const productDetail = (\n        <span>a</span>\n    )\n\n    const productList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        const codeProduct = _.get(item, 'code') || 'не установлено'\n        const type = _.get(item, ['type', 'name']) || 'N/A'\n        const image = _.get(item, ['image', 'file'])\n        const measurement = _.get(item, ['measurement', 'name']) || ''\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\n        const iconButton = (\n            <IconButton style={{padding: '0 12px'}}>\n                <MoreVertIcon />\n            </IconButton>\n        )\n        return (\n            <Row key={id}>\n                <Col xs={3} style={{display: 'flex', alignItems: 'center'}}>\n                    <div className={classes.productImg}>\n                        {_.isEmpty(image) ? <Landscape style={{color: '#999', paddingTop: '2px'}} />\n                            : <a onClick={() => showBigImg.handleOpenShowBigImg(id)}><img src={image} /> </a>}\n                    </div>\n                    <div style={{display: 'inline-block'}}>{name}</div>\n                </Col>\n                <Col xs={2}>{codeProduct}</Col>\n                <Col xs={2}>{type}</Col>\n                <Col xs={2}>{measurement}</Col>\n                <Col xs={2}>{createdDate}</Col>\n                <Col xs={1} style={{textAlign: 'right'}}>\n                    <IconMenu\n                        iconButtonElement={iconButton}\n                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\n                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\n                        <MenuItem\n                            primaryText=\"Изменить\"\n                            leftIcon={<Edit />}\n                            onTouchTap={() => { updateDialog.handleOpenUpdateDialog(id) }}\n                        />\n                        <MenuItem\n                            primaryText=\"Удалить \"\n                            leftIcon={<DeleteIcon />}\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(id) }}\n                        />\n                    </IconMenu>\n                </Col>\n            </Row>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: productList,\n        loading: _.get(listData, 'listLoading')\n    }\n\n    const currentDetail = _.find(_.get(listData, 'data'), {'id': _.toInteger(_.get(detailData, 'id'))})\n    return (\n        <Container>\n            <SubMenu url={ROUTES.PRODUCT_LIST_URL}/>\n            <div className={classes.addButtonWrapper}>\n                <Tooltip position=\"left\" text=\"Добавить продукт\">\n                    <FloatingActionButton\n                        mini={true}\n                        zDepth={1}\n                        className={classes.addButton}\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\n                        <ContentAdd />\n                    </FloatingActionButton>\n                </Tooltip>\n            </div>\n\n            <GridList\n                filter={filter}\n                list={list}\n                detail={productDetail}\n                filterDialog={productFilterDialog}\n            />\n\n            <ProductCreateDialog\n                open={createDialog.openCreateDialog}\n                loading={createDialog.createLoading}\n                onClose={createDialog.handleCloseCreateDialog}\n                onSubmit={createDialog.handleSubmitCreateDialog}\n            />\n\n            <ProductCreateDialog\n                isUpdate={true}\n                initialValues={updateDialog.initialValues}\n                open={updateDialog.openUpdateDialog}\n                loading={updateDialog.updateLoading}\n                onClose={updateDialog.handleCloseUpdateDialog}\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\n            />\n\n            <ProductShowPhotoDialog\n                initialValues={showBigImg.initialValues}\n                open={showBigImg.openShowBigImg}\n                loading={_.get(showBigImg, 'showBigImgLoading')}\n                onClose={showBigImg.handleCloseShowBigImg}\n                detailData={detailData}\n            />\n\n            {currentDetail && <ConfirmDialog\n                type=\"delete\"\n                message={_.get(currentDetail, 'name')}\n                loading={confirmDialog.confirmLoading}\n                onClose={confirmDialog.handleCloseConfirmDialog}\n                onSubmit={confirmDialog.handleSendConfirmDialog}\n                open={confirmDialog.openConfirmDialog}\n            />}\n        </Container>\n    )\n})\n\nProductGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    createDialog: PropTypes.shape({\n        createLoading: PropTypes.bool.isRequired,\n        openCreateDialog: PropTypes.bool.isRequired,\n        handleOpenCreateDialog: PropTypes.func.isRequired,\n        handleCloseCreateDialog: PropTypes.func.isRequired,\n        handleSubmitCreateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    confirmDialog: PropTypes.shape({\n        confirmLoading: PropTypes.bool.isRequired,\n        openConfirmDialog: PropTypes.bool.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleSendConfirmDialog: PropTypes.func.isRequired\n    }).isRequired,\n    updateDialog: PropTypes.shape({\n        updateLoading: PropTypes.bool.isRequired,\n        openUpdateDialog: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    filterDialog: PropTypes.shape({\n        initialValues: PropTypes.object,\n        filterLoading: PropTypes.bool,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default ProductGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Product/ProductGridList.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {TextField} from '../ReduxForm'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport MainStyles from '../Styles/MainStyles'\nimport normalizeNumber from '../ReduxForm/normalizers/normalizeNumber'\n\nexport const PRODUCT_PRICE_CREATE_DIALOG_OPEN = 'openCreateDialog'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        }\n    })),\n    reduxForm({\n        form: 'ProductPriceCreateForm',\n        enableReinitialize: true\n    })\n)\n\nconst ProductPriceCreateDialog = enhance((props) => {\n    const {open, loading, handleSubmit, onClose, classes} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '300px'} : {width: '400px'}}\n            bodyStyle={{minHeight: 'auto'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>Изменить стоимость</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} className={classes.form}>\n                    <div className={classes.inContent} style={{minHeight: '100px', paddingTop: '25px'}}>\n                        <div className={classes.loader}>\n                            <CircularProgress size={40} thickness={4}/>\n                        </div>\n                        <div className={classes.field}>\n                            <Field\n                                name=\"price\"\n                                className={classes.inputFieldCustom}\n                                component={TextField}\n                                label=\"Стоимость\"\n                                fullWidth={true}\n                                normalize={normalizeNumber}\n                            />\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\n\nProductPriceCreateDialog.propTyeps = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\n\nexport default ProductPriceCreateDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/ProductPrice/ProductPriceCreateDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose, withState} from 'recompose'\nimport injectSheet from 'react-jss'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Col} from 'react-flexbox-grid'\nimport Popover from 'material-ui/Popover'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            position: 'absolute',\n            display: 'flex',\n            justifyContent: 'center',\n            width: '100%'\n        },\n        dottedList: {\n            padding: '20px 0'\n        },\n        wrapper: {\n            width: '100%'\n        },\n        title: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            height: '65px',\n            padding: '0 30px',\n            borderBottom: '1px #efefef solid',\n            position: 'relative'\n        },\n        titleLabel: {\n            fontSize: '18px',\n            color: '#333',\n            fontWeight: '600',\n            cursor: 'pointer'\n        },\n        buttons: {\n            display: 'flex',\n            justifyContent: 'flex-end'\n        },\n        bodyTitle: {\n            fontWeight: '600',\n            marginBottom: '10px'\n        },\n        containerPrice: {\n            display: 'flex'\n        },\n        leftPrSide: {\n            padding: '20px 30px',\n            flexBasis: '30%',\n            borderRight: '1px solid #efefef'\n        },\n        aboutPrice: {\n            padding: '20px 0',\n            '& span': {\n                color: '#999'\n            },\n            '& p': {\n                display: 'inline-block',\n                '& span': {\n                    fontSize: '11px !important'\n                }\n            },\n            '& p:last-child': {\n                fontWeight: '600',\n                paddingLeft: '15px'\n            }\n        },\n        rightPrSide: {\n            padding: '20px 30px',\n            flexBasis: '70%'\n        },\n        rawMaterials: {\n            '& .dottedList': {\n                padding: '10px 0'\n            },\n            '& li:last-child:after': {\n                backgroundImage: 'none'\n            },\n            '& li div:last-child': {\n                textAlign: 'right',\n                paddingRight: '10px'\n            },\n            '& a': {\n                borderBottom: '1px dashed'\n            }\n        },\n        changePrice: {\n            background: '#f1f5f8',\n            margin: '0 -30px 0',\n            padding: '20px 30px'\n        },\n        addPrice: {\n            display: 'flex',\n            alignItems: 'baseline',\n            justifyContent: 'space-between'\n        },\n        popoverMode: {\n            padding: '10px 30px',\n            boxShadow: 'none !important',\n            '& h4': {\n                padding: '10px 0'\n            },\n            '& div p': {\n                display: 'inline-block'\n            },\n            '& div p:first-child': {\n                width: '120px'\n            }\n        },\n        closeDetail: {\n            position: 'absolute',\n            left: '0',\n            top: '0',\n            right: '0',\n            bottom: '0',\n            cursor: 'pointer',\n            zIndex: '1'\n        }\n    }),\n    withState('openDetails', 'setOpenDetails', false),\n    withState('showAddPrice', 'setShowAddPrice', false),\n    withState('priceDetailsOpen', 'setPriceDetailsOpen', false),\n    withState('anchorEl', 'setAnchorEl', (<div></div>)),\n)\n\nconst ProductPriceDetails = enhance((props) => {\n    const {classes,\n        loading,\n        data,\n        updateDialog,\n        anchorEl,\n        handleOpenDetails,\n        handleCloseDetails,\n        priceDetailsOpen,\n        handleCloseDetail\n    } = props\n    const detId = _.get(data, 'id')\n    const detnName = _.get(data, 'name')\n    if (loading) {\n        return (\n            <div className={classes.loader}>\n                <div>\n                    <CircularProgress size={40} thickness={4}/>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className={classes.wrapper}>\n            <div className={classes.title}>\n                <div className={classes.titleLabel}\n                >{detnName}</div>\n                <div className={classes.closeDetail}\n                     onClick={handleCloseDetail}>\n                </div>\n            </div>\n            <div className={classes.containerPrice}>\n                <div className={classes.leftPrSide}>\n                    <div>Расчет произведен на 1 еденицу продукта</div>\n                    <div className={classes.aboutPrice}>\n                        <p className={classes.priceLabel}>Cебестоимость:</p>\n                        <p className={classes.priceCost}>20 000 UZS <span>(22 Апр, 2017)</span></p>\n                    </div>\n                    <hr className=\"lineDote\"/>\n                    <div className={classes.aboutPrice}>\n                        <p className={classes.priceLabel}>Рыночная цена:</p>\n                        <p className={classes.priceCost}>30 000 UZS <span>(22 Апр, 2017)</span></p>\n                    </div>\n                    <div className={classes.changePrice}>\n                        <a onClick={() => { updateDialog.handleOpenUpdateDialog(detId) }}>Изменить рыночную стоимость</a>\n                    </div>\n                </div>\n                <div className={classes.rightPrSide}>\n                    <ul className={classes.rawMaterials}>\n                        <li className=\"dottedList\">\n                            <Col xs={7}><b>Сырье</b></Col>\n                            <Col xs={2}><b>Обьем</b></Col>\n                            <Col xs={3}><b>Стоимость</b></Col>\n                        </li>\n                        <li className=\"dottedList\">\n                            <Col xs={7}>Дистилированная вода</Col>\n                            <Col xs={2}>100 л</Col>\n                            <Col xs={3}>\n                                <a onClick={handleOpenDetails}>1 000 000 UZS</a>\n                            </Col>\n                        </li>\n                        <li className=\"dottedList\">\n                            <Col xs={7}>Дистилированная вода</Col>\n                            <Col xs={2}>100 л</Col>\n                            <Col xs={3}>\n                                <a onClick={handleOpenDetails}>1 000 000 UZS</a>\n                            </Col>\n                        </li>\n                        <li className=\"dottedList\">\n                            <Col xs={7}>Дистилированная вода</Col>\n                            <Col xs={2}>100 л</Col>\n                            <Col xs={3}>\n                                <a onClick={handleOpenDetails}>1 000 000 UZS</a>\n                            </Col>\n                        </li>\n                        <li className=\"dottedList\">\n                            <Col xs={7}>Дистилированная вода</Col>\n                            <Col xs={2}>100 л</Col>\n                            <Col xs={3}>\n                                <a onClick={handleOpenDetails}>1 000 000 UZS</a>\n                            </Col>\n                        </li>\n                        <li className=\"dottedList\">\n                            <Col xs={7}>Дистилированная вода</Col>\n                            <Col xs={2}>100 л</Col>\n                            <Col xs={3}>\n                                <a onClick={handleOpenDetails}>1 000 000 UZS</a>\n                            </Col>\n                        </li>\n                        <li className=\"dottedList\">\n                            <Col xs={7}>Дистилированная вода</Col>\n                            <Col xs={2}>100 л</Col>\n                            <Col xs={3}>\n                                <a onClick={handleOpenDetails}>1 000 000 UZS</a>\n                            </Col>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <Popover\n                open={priceDetailsOpen}\n                anchorEl={anchorEl}\n                anchorOrigin={{horizontal: 'right', vertical: 'bottom'}}\n                targetOrigin={{horizontal: 'right', vertical: 'top'}}\n                onRequestClose={handleCloseDetails}>\n                <div className={classes.popoverMode}>\n                    <h4>Дистилированая вода</h4>\n                    <div>\n                        <p>Объем:</p>\n                        <p>100 л</p>\n                    </div>\n                    <div>\n                        <p>Стоимость:</p>\n                        <p>500 000 UZS</p>\n                    </div>\n                    <div>\n                        <p>Доп. расход:</p>\n                        <p>100 000 UZS</p>\n                    </div>\n                    <h4><i>Примерная стоимость 1 л = 6 000 UZS</i></h4>\n                </div>\n            </Popover>\n        </div>\n    )\n})\n\nProductPriceDetails.propTypes = {\n    data: PropTypes.object.isRequired,\n    loading: PropTypes.bool.isRequired,\n    detailData: PropTypes.object,\n    updateDialog: PropTypes.shape({\n        updateLoading: PropTypes.bool.isRequired,\n        openUpdateDialog: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default ProductPriceDetails\n\n\n\n// WEBPACK FOOTER //\n// src/components/ProductPrice/ProductPriceDetails.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Row, Col} from 'react-flexbox-grid'\nimport {reduxForm} from 'redux-form'\nimport {compose} from 'recompose'\nimport sprintf from 'sprintf'\nimport IconButton from 'material-ui/IconButton'\nimport Edit from 'material-ui/svg-icons/image/edit'\nimport * as ROUTES from '../../constants/routes'\nimport GridList from '../GridList'\nimport Container from '../Container'\nimport ProductPriceFilterForm from './ProductPriceFilterForm'\nimport ProductPriceCreateDialog from './ProductPriceCreateDialog'\nimport ProductPriceDetails from './ProductPriceDetails'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport {Link} from 'react-router'\nimport Tooltip from '../ToolTip'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'name',\n        title: 'Наименование',\n        xs: 3\n    },\n    {\n        sorting: true,\n        name: 'type',\n        title: 'Тип товара',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'brand',\n        title: 'Бренд',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'measurement',\n        title: 'Мера',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'price',\n        title: 'Цена',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'action',\n        title: '',\n        xs: 1\n    }\n]\n\nconst enhance = compose(\n    injectSheet({\n        addButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        addButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px'\n        },\n        buttons: {\n            display: 'flex',\n            justifyContent: 'flex-end'\n        },\n        openDetails: {\n            position: 'absolute',\n            top: '0',\n            bottom: '0',\n            right: '0',\n            left: '0',\n            margin: '0 -30px',\n            cursor: 'pointer'\n        }\n    }),\n\n    reduxForm({\n        form: 'ProductPriceCreateForm',\n        enableReinitialize: true\n    })\n)\n\nconst iconStyle = {\n    icon: {\n        color: '#666',\n        width: 20,\n        height: 20\n    },\n    button: {\n        width: 48,\n        height: 48,\n        padding: 0\n    }\n}\n\nconst ProductPriceGridList = enhance((props) => {\n    const {\n        filter,\n        updateDialog,\n        filterDialog,\n        handleOpenDetails,\n        handleCloseDetails,\n        priceDetailsOpen,\n        listData,\n        detailData,\n        classes\n    } = props\n    const productPriceDetail = (\n        <ProductPriceDetails\n            key={_.get(detailData, 'id')}\n            data={_.get(detailData, 'data') || {}}\n            priceDetailsOpen={priceDetailsOpen}\n            loading={_.get(detailData, 'detailLoading')}\n            updateDialog={updateDialog}\n            handleOpenDetails={handleOpenDetails}\n            handleCloseDetails={handleCloseDetails}\n            handleCloseDetail={_.get(detailData, 'handleCloseDetail')}\n        />\n    )\n\n    const productPriceFilterDialog = (\n        <ProductPriceFilterForm\n            initialValues={filterDialog.initialValues}\n            filter={filter}\n            filterDialog={filterDialog}\n        />\n    )\n\n    const productPriceList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        const type = _.get(item, ['type', 'name']) || 'N/A'\n        const brand = _.get(item, ['brand', 'name']) || 'N/A'\n        const measurement = _.get(item, ['measurement', 'name']) || ''\n        const price = _.get(item, 'price') || 'N/A'\n        return (\n            <Row key={id} style={{position: 'relative'}}>\n                    <Link className={classes.openDetails} to={{\n                        pathname: sprintf(ROUTES.PRODUCT_PRICE_ITEM_PATH, id),\n                        query: ''\n                    }}>\n                    </Link>\n                <Col xs={3}>\n                    {name}\n                </Col>\n                <Col xs={2}>{type}</Col>\n                <Col xs={2}>{brand}</Col>\n                <Col xs={2}>{measurement}</Col>\n                <Col xs={2}>{price}</Col>\n                <Col xs={1} className={classes.buttons}>\n                    <Tooltip position=\"bottom\" text=\"Изменить\">\n                        <IconButton\n                            onTouchTap={() => { updateDialog.handleOpenUpdateDialog(id) }}\n                            touch={true}\n                            iconStyle={iconStyle.icon}\n                            style={iconStyle.button}>\n                            <Edit />\n                        </IconButton>\n                    </Tooltip>\n                </Col>\n            </Row>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: productPriceList,\n        loading: _.get(listData, 'listLoading')\n    }\n\n    return (\n        <Container>\n            <SubMenu url={ROUTES.PRODUCT_PRICE_LIST_URL}/>\n\n            <GridList\n                filter={filter}\n                list={list}\n                detail={productPriceDetail}\n                filterDialog={productPriceFilterDialog}\n            />\n\n            <ProductPriceCreateDialog\n                initialValues={updateDialog.initialValues}\n                open={updateDialog.openUpdateDialog}\n                loading={updateDialog.updateLoading}\n                onClose={updateDialog.handleCloseUpdateDialog}\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\n            />\n        </Container>\n    )\n})\n\nProductPriceGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    updateDialog: PropTypes.shape({\n        updateLoading: PropTypes.bool.isRequired,\n        openUpdateDialog: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    filterDialog: PropTypes.shape({\n        initialValues: PropTypes.object,\n        filterLoading: PropTypes.bool,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default ProductPriceGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/ProductPrice/ProductPriceGridList.js","import ProductPriceGridList from './ProductPriceGridList'\nimport {PRODUCT_PRICE_FILTER_KEY, PRODUCT_PRICE_FILTER_OPEN} from './ProductPriceFilterForm'\n\nconst PRODUCT_PRICE_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\n\nexport {\n    PRODUCT_PRICE_UPDATE_DIALOG_OPEN,\n    PRODUCT_PRICE_FILTER_KEY,\n    PRODUCT_PRICE_FILTER_OPEN,\n    ProductPriceGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/ProductPrice/index.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport {Row, Col} from 'react-flexbox-grid'\nimport IconButton from 'material-ui/IconButton'\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport Edit from 'material-ui/svg-icons/image/edit'\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\nimport IconMenu from 'material-ui/IconMenu'\nimport MenuItem from 'material-ui/MenuItem'\nimport * as ROUTES from '../../constants/routes'\nimport dateFormat from '../../helpers/dateFormat'\nimport GridList from '../GridList'\nimport Container from '../Container'\nimport ProductTypeCreateDialog from './ProductTypeCreateDialog'\nimport ConfirmDialog from '../ConfirmDialog'\nimport SubMenu from '../SubMenu'\nimport Tooltip from '../ToolTip'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'name',\n        xs: 8,\n        title: 'Категории'\n    },\n    {\n        sorting: true,\n        xs: 3,\n        name: 'created_date',\n        title: 'Дата создания'\n    },\n    {\n        sorting: true,\n        xs: 1,\n        name: 'actions',\n        title: ''\n    }\n\n]\n\nconst enhance = compose(\n    injectSheet({\n        addButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        addButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px'\n        },\n        rowWithParent: {\n            flexWrap: 'wrap',\n            '& > div:first-child': {\n                fontWeight: '600'\n            }\n        },\n        rowWithoutParent: {\n            '& > div:first-child': {\n                fontWeight: '600'\n            }\n        },\n        subCategory: {\n            width: '100%',\n            borderTop: '1px #efefef solid',\n            display: 'flex',\n            alignItems: 'center',\n            '& > div:first-child': {\n                paddingLeft: '50px'\n            },\n            '& > div:last-child': {\n                paddingRight: '0'\n            }\n        },\n        marginLeft: {\n            marginLeft: '20px !important'\n        },\n        right: {\n            textAlign: 'right',\n            paddingRight: '0'\n        }\n    })\n)\n\nconst ProductTypeGridList = enhance((props) => {\n    const {\n        filter,\n        createDialog,\n        updateDialog,\n        actionsDialog,\n        confirmDialog,\n        listData,\n        detailData,\n        classes\n    } = props\n\n    const actions = (\n        <div>\n            <IconButton onTouchTap={actionsDialog.handleActionEdit}>\n                <ModEditorIcon />\n            </IconButton>\n\n            <IconButton onTouchTap={actionsDialog.handleActionDelete}>\n                <DeleteIcon />\n            </IconButton>\n        </div>\n    )\n\n    const productTypeDetail = (\n        <span>a</span>\n    )\n    const productTypeList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        const createdDate = dateFormat(_.get(item, 'createdDate'))\n        const hasChild = !_.isEmpty(_.get(item, 'children'))\n        const iconButton = (\n            <IconButton style={{padding: '0 12px'}}>\n                <MoreVertIcon />\n            </IconButton>\n        )\n        if (hasChild) {\n            return (\n                <Row key={id} className={classes.rowWithParent}>\n                    <Col xs={8}>{name}</Col>\n                    <Col xs={3}>{createdDate}</Col>\n                    <Col xs={1} className={classes.right}>\n                        <IconMenu\n                            iconButtonElement={iconButton}\n                            anchorOrigin={{horizontal: 'right', vertical: 'top'}}\n                            targetOrigin={{horizontal: 'right', vertical: 'top'}}>\n                            <MenuItem\n                                primaryText=\"Изменить\"\n                                leftIcon={<Edit />}\n                                onTouchTap={() => { updateDialog.handleOpenUpdateDialog(id) }}\n                            />\n                            <MenuItem\n                                primaryText=\"Удалить \"\n                                leftIcon={<DeleteIcon />}\n                                onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(id) }}\n                            />\n                        </IconMenu>\n                    </Col>\n                    {_.map(_.get(item, 'children'), (child) => {\n                        const childName = _.get(child, 'name')\n                        const childId = _.get(child, 'id')\n                        const childCreatedDate = dateFormat(_.get(child, 'createdDate'))\n                        return (\n                            <div key={childId} className={classes.subCategory}>\n                                <Col xs={8}>{childName}</Col>\n                                <Col xs={3}>{childCreatedDate}</Col>\n                                <Col xs={1} className={classes.right}>\n                                    <IconMenu\n                                        iconButtonElement={iconButton}\n                                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\n                                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\n                                        <MenuItem\n                                            primaryText=\"Изменить\"\n                                            leftIcon={<Edit />}\n                                            onTouchTap={() => { updateDialog.handleOpenUpdateDialog(childId) }}\n                                        />\n                                        <MenuItem\n                                            primaryText=\"Удалить \"\n                                            leftIcon={<DeleteIcon />}\n                                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(childId) }}\n                                        />\n                                    </IconMenu>\n                                </Col>\n                            </div>\n                        )\n                    })}\n                </Row>\n            )\n        }\n        return (\n            <Row key={id} className={classes.rowWithoutParent}>\n                <Col xs={8}>{name}</Col>\n                <Col xs={3}>{createdDate}</Col>\n                <Col xs={1} className={classes.right}>\n                    <IconMenu\n                        iconButtonElement={iconButton}\n                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\n                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\n                        <MenuItem\n                            primaryText=\"Изменить\"\n                            leftIcon={<Edit />}\n                            onTouchTap={() => { updateDialog.handleOpenUpdateDialog(id) }}\n                        />\n                        <MenuItem\n                            primaryText=\"Удалить \"\n                            leftIcon={<DeleteIcon />}\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(id) }}\n                        />\n                    </IconMenu>\n                </Col>\n            </Row>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: productTypeList,\n        loading: _.get(listData, 'listLoading')\n    }\n\n    return (\n        <Container>\n            <SubMenu url={ROUTES.PRODUCT_TYPE_LIST_URL}/>\n            <div className={classes.addButtonWrapper}>\n                <Tooltip position=\"left\" text=\"Добавить тип продукта\">\n                    <FloatingActionButton\n                        mini={true}\n                        className={classes.addButton}\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\n                        <ContentAdd />\n                    </FloatingActionButton>\n                </Tooltip>\n            </div>\n\n            <GridList\n                filter={filter}\n                list={list}\n                detail={productTypeDetail}\n                actionsDialog={actions}\n                withoutPagination={true}\n                flexibleRow={true}\n            />\n\n            <ProductTypeCreateDialog\n                open={createDialog.openCreateDialog}\n                loading={createDialog.createLoading}\n                onClose={createDialog.handleCloseCreateDialog}\n                onSubmit={createDialog.handleSubmitCreateDialog}\n            />\n\n            <ProductTypeCreateDialog\n                isUpdate={true}\n                initialValues={updateDialog.initialValues}\n                open={updateDialog.openUpdateDialog}\n                loading={updateDialog.updateLoading}\n                onClose={updateDialog.handleCloseUpdateDialog}\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\n            />\n\n            {detailData.data && <ConfirmDialog\n                type=\"delete\"\n                message={_.get(detailData, ['data', 'name'])}\n                loading={confirmDialog.confirmLoading}\n                onClose={confirmDialog.handleCloseConfirmDialog}\n                onSubmit={confirmDialog.handleSendConfirmDialog}\n                open={confirmDialog.openConfirmDialog}\n            />}\n        </Container>\n    )\n})\n\nProductTypeGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    createDialog: PropTypes.shape({\n        createLoading: PropTypes.bool.isRequired,\n        openCreateDialog: PropTypes.bool.isRequired,\n        handleOpenCreateDialog: PropTypes.func.isRequired,\n        handleCloseCreateDialog: PropTypes.func.isRequired,\n        handleSubmitCreateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    confirmDialog: PropTypes.shape({\n        confirmLoading: PropTypes.bool.isRequired,\n        openConfirmDialog: PropTypes.bool.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleSendConfirmDialog: PropTypes.func.isRequired\n    }).isRequired,\n    updateDialog: PropTypes.shape({\n        updateLoading: PropTypes.bool.isRequired,\n        openUpdateDialog: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    actionsDialog: PropTypes.shape({\n        handleActionEdit: PropTypes.func.isRequired,\n        handleActionDelete: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default ProductTypeGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/ProductType/ProductTypeGridList.js","import ProductTypeGridList from './ProductTypeGridList'\nimport {PRODUCT_TYPE_CREATE_DIALOG_OPEN} from './ProductTypeCreateDialog'\n\nconst PRODUCT_TYPE_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nconst PRODUCT_TYPE_DELETE_DIALOG_OPEN = 'openDeleteDialog'\n\nexport {\n    PRODUCT_TYPE_UPDATE_DIALOG_OPEN,\n    PRODUCT_TYPE_CREATE_DIALOG_OPEN,\n    PRODUCT_TYPE_DELETE_DIALOG_OPEN,\n    ProductTypeGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/ProductType/index.js","import _ from 'lodash'\nimport moment from 'moment'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose, withState} from 'recompose'\nimport injectSheet from 'react-jss'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport Edit from 'material-ui/svg-icons/image/edit'\nimport IconButton from 'material-ui/IconButton'\nimport {Row, Col} from 'react-flexbox-grid'\nimport Delete from 'material-ui/svg-icons/action/delete'\nimport Tooltip from '../ToolTip'\n\nconst colorBlue = '#12aaeb !important'\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            width: '100%',\n            background: '#fff',\n            height: '150px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n        },\n        wrapper: {\n            color: '#333 !important',\n            width: '100%',\n            display: 'flex',\n            flexWrap: 'wrap',\n            '& a': {\n                color: colorBlue\n            }\n        },\n        title: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            width: '100%',\n            height: '65px',\n            padding: '0 30px',\n            borderBottom: '1px #efefef solid',\n            position: 'relative'\n        },\n        container: {\n            display: 'flex',\n            width: '100%'\n        },\n        sides: {\n            flexBasis: '27%'\n        },\n        leftSide: {\n            extend: 'sides',\n            borderRight: '1px #efefef solid',\n            padding: '20px 30px'\n        },\n        rightSide: {\n            extend: 'sides',\n            borderLeft: '1px #efefef solid',\n            padding: '20px 30px'\n        },\n        body: {\n            flexBasis: '66%',\n            padding: '20px 30px',\n            '& .dottedList': {\n                padding: '10px 0',\n                '&:after': {\n                    left: '0.5rem',\n                    right: '0.5rem'\n                },\n                '&:first-child': {\n                    padding: '0 0 10px'\n                },\n                '&:last-child': {\n                    padding: '10px 0 0',\n                    '&:after': {\n                        display: 'none'\n                    }\n                }\n            }\n        },\n        titleLabel: {\n            fontSize: '18px',\n            color: '#333',\n            fontWeight: '600',\n            cursor: 'pointer'\n        },\n        titleButtons: {\n            display: 'flex',\n            justifyContent: 'flex-end'\n        },\n        bodyTitle: {\n            fontWeight: '600',\n            marginBottom: '10px'\n        },\n        closeDetail: {\n            position: 'absolute',\n            left: '0',\n            top: '0',\n            right: '0',\n            bottom: '0',\n            cursor: 'pointer',\n            zIndex: '1'\n        }\n    }),\n    withState('openDetails', 'setOpenDetails', false)\n)\n\nconst iconStyle = {\n    icon: {\n        color: '#666',\n        width: 20,\n        height: 20\n    },\n    button: {\n        width: 48,\n        height: 48,\n        padding: 0\n    }\n}\nwithState('openDetails', 'setOpenDetails', false)\n\nconst ProviderDetails = enhance((props) => {\n    const {classes,\n        loading,\n        data,\n        confirmDialog,\n        handleOpenUpdateDialog,\n        handleCloseDetail\n    } = props\n\n    const providerId = _.get(data, 'id')\n    const contacts = _.get(data, 'contacts')\n    const date = moment(_.get(data, ['data', 'createdDate'])).format('DD.MM.YYYY')\n    const address = _.get(data, 'address') || 'N/A'\n    const providerName = _.get(data, 'name')\n\n    if (loading) {\n        return (\n            <div className={classes.loader}>\n                <div>\n                    <CircularProgress size={40} thickness={4}/>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className={classes.wrapper} key={_.get(data, 'id')}>\n            <div className={classes.title}>\n                <div className={classes.titleLabel}>{providerName}</div>\n                <div className={classes.closeDetail}\n                     onClick={handleCloseDetail}>\n                </div>\n                <div className={classes.titleButtons}>\n                    <Tooltip position=\"bottom\" text=\"Изменить\">\n                        <IconButton\n                            iconStyle={iconStyle.icon}\n                            style={iconStyle.button}\n                            touch={true}\n                            onTouchTap={() => { handleOpenUpdateDialog(providerId) }}>\n                            <Edit />\n                        </IconButton>\n                    </Tooltip>\n                    <Tooltip position=\"bottom\" text=\"Удалить\">\n                        <IconButton\n                            iconStyle={iconStyle.icon}\n                            style={iconStyle.button}\n                            touch={true}\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(providerId) }}>\n                            <Delete />\n                        </IconButton>\n                    </Tooltip>\n                </div>\n            </div>\n            <div className={classes.container}>\n                <div className={classes.leftSide}>\n                    <div className={classes.bodyTitle}>Адрес</div>\n                    <div>{address}</div>\n                </div>\n                <div className={classes.body}>\n                    <div className={classes.bodyTitle}>Контакты</div>\n                    <div>\n                        {_.map(contacts, (item) => {\n                            const name = _.get(item, 'name')\n                            const phone = _.get(item, 'phone')\n                            const email = _.get(item, 'email')\n                            return (\n                                <Row key={item.id} className=\"dottedList\">\n                                    <Col xs={4}>{name}</Col>\n                                    <Col xs={4}>{email}</Col>\n                                    <Col xs={4}>{phone}</Col>\n                                </Row>\n                            )\n                        })}\n                    </div>\n                </div>\n                <div className={classes.rightSide}>\n                    <div className={classes.bodyTitle}>Дата добавления</div>\n                    <div>{date}</div>\n                </div>\n            </div>\n        </div>\n    )\n})\n\nProviderDetails.propTypes = {\n    data: PropTypes.object.isRequired,\n    loading: PropTypes.bool.isRequired,\n    confirmDialog: PropTypes.shape({\n        openConfirmDialog: PropTypes.bool.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleSendConfirmDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default ProviderDetails\n\n\n\n// WEBPACK FOOTER //\n// src/components/Provider/ProviderDetails.js","import _ from 'lodash'\nimport moment from 'moment'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Row, Col} from 'react-flexbox-grid'\nimport * as ROUTES from '../../constants/routes'\nimport sprintf from 'sprintf'\nimport GridList from '../GridList'\nimport Container from '../Container'\nimport ProviderCreateDialog from './ProviderCreateDialog'\nimport ConfirmDialog from '../ConfirmDialog'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport Tooltip from '../ToolTip'\nimport {Link} from 'react-router'\nimport ProviderDetail from './ProviderDetails'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'id',\n        xs: 2,\n        title: 'Id'\n    },\n    {\n        sorting: true,\n        name: 'name',\n        xs: 7,\n        title: 'Наименование'\n    },\n    {\n        sorting: true,\n        xs: 3,\n        name: 'created_date',\n        title: 'Дата создания'\n    }\n]\n\nconst enhance = compose(\n    injectSheet({\n        addButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        addButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px'\n        },\n        actionBtn: {\n            height: '48px'\n        },\n        listRow: {\n            position: 'relative',\n            '& > a': {\n                display: 'flex',\n                alignItems: 'center',\n                position: 'absolute',\n                top: '0',\n                left: '-30px',\n                right: '-30px',\n                bottom: '0',\n                padding: '0 30px',\n                '& > div:first-child': {\n                    paddingLeft: '0'\n                },\n                '& > div:last-child': {\n                    paddingRight: '0'\n                },\n                '& > div': {\n                    fontWeight: '600'\n                }\n            }\n        }\n    })\n)\n\nconst ProviderGridList = enhance((props) => {\n    const {\n        filter,\n        createDialog,\n        updateDialog,\n        confirmDialog,\n        listData,\n        detailData,\n        classes\n    } = props\n\n    const providerDetail = (\n        <ProviderDetail\n            key={_.get(detailData, 'id')}\n            data={_.get(detailData, 'data') || {}}\n            loading={_.get(detailData, 'detailLoading')}\n            handleOpenUpdateDialog={updateDialog.handleOpenUpdateDialog}\n            confirmDialog={confirmDialog}\n            handleCloseDetail={_.get(detailData, 'handleCloseDetail')}/>\n    )\n\n    const providerList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\n        return (\n            <Row key={id} className={classes.listRow} style={{alignItems: 'center'}}>\n                <Link to={{\n                    pathname: sprintf(ROUTES.PROVIDER_ITEM_PATH, id),\n                    query: filter.getParams()\n                }}>\n                    <Col xs={2}>{id}</Col>\n                    <Col xs={7}>{name}</Col>\n                    <Col xs={3}>{createdDate}</Col>\n                </Link>\n            </Row>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: providerList,\n        loading: _.get(listData, 'listLoading')\n    }\n\n    return (\n        <Container>\n            <SubMenu url={ROUTES.PROVIDER_LIST_URL}/>\n            <div className={classes.addButtonWrapper}>\n                <Tooltip position=\"left\" text=\"Добавить поставщика\">\n                    <FloatingActionButton\n                        mini={true}\n                        className={classes.addButton}\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\n                        <ContentAdd />\n                    </FloatingActionButton>\n                </Tooltip>\n            </div>\n\n            <GridList\n                filter={filter}\n                list={list}\n                detail={providerDetail}\n            />\n\n            <ProviderCreateDialog\n                open={createDialog.openCreateDialog}\n                loading={createDialog.createLoading}\n                onClose={createDialog.handleCloseCreateDialog}\n                onSubmit={createDialog.handleSubmitCreateDialog}\n            />\n\n            <ProviderCreateDialog\n                isUpdate={true}\n                initialValues={updateDialog.initialValues}\n                open={updateDialog.openUpdateDialog}\n                loading={updateDialog.updateLoading}\n                onClose={updateDialog.handleCloseUpdateDialog}\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\n            />\n\n            {detailData.data && <ConfirmDialog\n                type=\"delete\"\n                message={_.get(detailData, ['data', 'name'])}\n                onClose={confirmDialog.handleCloseConfirmDialog}\n                onSubmit={confirmDialog.handleSendConfirmDialog}\n                open={confirmDialog.openConfirmDialog}\n            />}\n        </Container>\n    )\n})\n\nProviderGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    createDialog: PropTypes.shape({\n        createLoading: PropTypes.bool.isRequired,\n        openCreateDialog: PropTypes.bool.isRequired,\n        handleOpenCreateDialog: PropTypes.func.isRequired,\n        handleCloseCreateDialog: PropTypes.func.isRequired,\n        handleSubmitCreateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    confirmDialog: PropTypes.shape({\n        openConfirmDialog: PropTypes.bool.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleSendConfirmDialog: PropTypes.func.isRequired\n    }).isRequired,\n    updateDialog: PropTypes.shape({\n        updateLoading: PropTypes.bool.isRequired,\n        openUpdateDialog: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default ProviderGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Provider/ProviderGridList.js","import ProviderGridList from './ProviderGridList'\nimport {PROVIDER_CREATE_DIALOG_OPEN, PROVIDER_UPDATE_DIALOG_OPEN} from './ProviderCreateDialog'\n\nconst PROVIDER_DELETE_DIALOG_OPEN = 'openDeleteDialog'\nexport {\n    PROVIDER_CREATE_DIALOG_OPEN,\n    PROVIDER_UPDATE_DIALOG_OPEN,\n    PROVIDER_DELETE_DIALOG_OPEN,\n    ProviderGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Provider/index.js","/* eslint no-invalid-this: 0 */\n/* eslint no-undefined: 0 */\n\nimport _ from 'lodash'\nimport moment from 'moment'\nimport React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\nimport DatePickerDialog from 'material-ui/DatePicker/DatePickerDialog'\nimport MUITextField from 'material-ui/TextField'\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\n\nconst DELAY = 300\n\nclass DateToDateField extends React.Component {\n    datePicker = null\n\n    constructor (props) {\n        super(props)\n        this.state = {\n            starting: false\n        }\n    }\n\n    handleOnFocus = () => {\n        _.delay(() => this.datePicker.show(), DELAY)\n    }\n\n    handleOnAccept = (value) => {\n        const {input} = this.props\n        const fromDate = _.get(input, ['value', 'fromDate'])\n\n        if (!fromDate || !this.state.starting) {\n            input.onChange({fromDate: moment(value)})\n            this.setState({starting: true})\n            _.delay(() => this.datePicker.show(), DELAY)\n        } else {\n            input.onChange({\n                fromDate: _.get(input, ['value', 'fromDate']),\n                toDate: moment(value)\n            })\n            this.setState({starting: false})\n        }\n    }\n\n    textField = () => {\n        const {input, format} = this.props\n        const fromDate = _.get(input, ['value', 'fromDate'])\n        const toDate = _.get(input, ['value', 'toDate'])\n\n        if (fromDate && !toDate) {\n            return moment(fromDate).format(format)\n        }\n\n        if (fromDate && toDate) {\n            return moment(fromDate).format(format) + ' - ' + moment(toDate).format(format)\n        }\n\n        return ''\n    }\n\n    getMinDate = () => {\n        const {input} = this.props\n        const fromDate = _.get(input, ['value', 'fromDate'])\n        const toDate = _.get(input, ['value', 'toDate'])\n\n        if (fromDate && !toDate) {\n            return fromDate.toDate()\n        }\n\n        return undefined\n    }\n\n    render () {\n        const {label, classes, meta: {error}} = this.props\n\n        return (\n            <div className={classes.wrapper}>\n                <div style={{position: 'relative'}}>\n                    <DatePickerDialog\n                        ref={(element) => {\n                            this.datePicker = element\n                        }}\n                        minDate={this.getMinDate()}\n                        onAccept={this.handleOnAccept}\n                        firstDayOfWeek={0}\n                    />\n                    <div className={classes.icon}>\n                        <KeyboardArrowDown />\n                    </div>\n                    <MUITextField\n                        errorText={error}\n                        floatingLabelText={label}\n                        onFocus={this.handleOnFocus}\n                        value={this.textField()}\n                        className={classes.inputDateCustom}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nDateToDateField.defaultProps = {\n    format: 'DD.MM.YYYY'\n}\n\nDateToDateField.propTypes = {\n    format: PropTypes.string\n}\n\nexport default injectSheet({\n    icon: {\n        position: 'absolute',\n        right: '0',\n        top: '19px',\n        '& svg': {\n            color: '#ccc !important',\n            height: '20px !important',\n            width: '20px !important'\n        }\n    },\n    inputDateCustom: {\n        fontSize: '13px !important',\n        height: '45px !important',\n        marginTop: '7px',\n        width: '100% !important',\n        '& div': {\n            fontSize: '13px !important'\n        },\n        '& label': {\n            top: '20px !important',\n            lineHeight: '5px !important'\n        },\n        '& input': {\n            marginTop: '0 !important'\n        },\n        '& div:first-child': {\n            height: '45px !important'\n        },\n        '& div:first-child div:first-child': {\n            transform: 'translate(0px, 0px) !important'\n        }\n    }\n})(DateToDateField)\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Basic/DateToDateFieldCustom.js","/* global FormData */\nimport React from 'react'\nimport _ from 'lodash'\nimport {compose, withState} from 'recompose'\nimport injectSheet from 'react-jss'\nimport * as PATH from '../../../constants/api'\nimport Dropzone from 'react-dropzone'\nimport axios from '../../../helpers/axios'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport ImageImage from 'material-ui/svg-icons/image/image'\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            position: 'relative',\n            width: '100%',\n            '& .imageDropZone': {\n                border: '2px #ccc dashed',\n                cursor: 'pointer',\n                width: '200px',\n                height: '200px',\n                display: 'flex',\n                margin: '20px 0 0 auto',\n                justifyContent: 'space-around',\n                alignItems: 'center',\n                overflow: 'hidden',\n                '& img': {\n                    width: '100%',\n                    display: 'block'\n                },\n                '& p': {\n                    textAlign: 'center'\n                }\n            }\n        },\n        error: {\n            textAlign: 'center',\n            fontWeight: '600',\n            color: '#f44336'\n        }\n    }),\n    withState('fileUploadLoading', 'setFileUploadLoading', false),\n    withState('fileUploadErrors', 'setFileUploadErrors', null)\n)\n\nconst ImageUploadField = ({classes, setFileUploadLoading, fileUploadLoading, setFileUploadErrors,\n    fileUploadErrors, input, meta: {error}}) => {\n    const inputFile = _.get(input, ['value', 'file'])\n    const onDrop = (files) => {\n        const formData = new FormData()\n        const firstElement = 0\n        setFileUploadLoading(true)\n        formData.append('file', files[firstElement])\n        return axios().post(PATH.FILE_UPLOAD, formData)\n            .then((response) => {\n                setFileUploadLoading(false)\n                setFileUploadErrors(null)\n                input.onChange(response.data.id)\n            }).catch((newError) => {\n                const errorData = _.get(newError, ['response', 'data'])\n                setFileUploadErrors(errorData.file[firstElement])\n                setFileUploadLoading(false)\n                input.onChange(null)\n            })\n    }\n\n    const dropZoneView = ({acceptedFiles, rejectedFiles}) => {\n        const zero = 0\n        if (fileUploadLoading) {\n            return (<CircularProgress size={40} thickness={4}/>)\n        }\n\n        if (fileUploadErrors !== null) {\n            return (<div className={classes.error}>Ошибка: {fileUploadErrors}</div>)\n        }\n\n        if (error) {\n            return (<div className={classes.error}>Ошибка: {error}</div>)\n        }\n\n        if (acceptedFiles.length === zero) {\n            if (inputFile) {\n                return (\n                    <img src={inputFile} />\n                )\n            }\n            return (\n                <p>\n                    <ImageImage style={{color: '#b9b9b9', width: '50px', height: '50px', display: 'block', margin: 'auto'}}/>\n                    Добавьте фото\n                </p>)\n        }\n        const url = acceptedFiles[zero].preview\n        return (<img src={url}/>)\n    }\n\n    return (\n        <div className={classes.wrapper}>\n            <Dropzone\n                onDrop={onDrop}\n                className=\"imageDropZone\"\n                accept=\"image/jpeg, image/png\">\n                {dropZoneView}\n            </Dropzone>\n        </div>\n    )\n}\n\nexport default enhance(ImageUploadField)\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Basic/ImageUploadField.js","import _ from 'lodash'\nimport React from 'react'\nimport {Marker} from 'react-google-maps'\nimport {compose, withState} from 'recompose'\nimport injectSheet from 'react-jss'\nimport GoogleMap from '../../GoogleMap/index'\nimport {DEFAULT_LOCATION} from '../../../constants/googleMaps'\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            position: 'relative',\n            width: '100%',\n            height: '100%'\n        },\n        error: {\n            position: 'absolute',\n            zIndex: '99',\n            left: 0,\n            textAlign: 'center',\n            background: '#fff',\n            border: '1px solid',\n            fontSize: '14px',\n            bottom: '2px',\n            marginLeft: '40px',\n            marginRight: '40px',\n            right: '0',\n            color: 'red'\n        }\n    }),\n    withState('location', 'setLocation', DEFAULT_LOCATION)\n)\n\nconst LocationField = (props) => {\n    const {classes, location, setLocation, input, meta: {error}} = props\n    const value = _.get(input, 'value') || location\n    const handleClick = (pointer) => {\n        input.onChange({lat: pointer.latLng.lat(), lng: pointer.latLng.lng()})\n        setLocation({lat: pointer.latLng.lat(), lng: pointer.latLng.lng()})\n    }\n\n    return (\n        <div className={classes.wrapper}>\n            {error && <div className={classes.error}>{error}</div>}\n            <GoogleMap onClick={handleClick} center={value}>\n                <Marker position={value} />\n            </GoogleMap>\n        </div>\n    )\n}\n\nexport default enhance(LocationField)\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Basic/LocationField.js","import React from 'react'\nimport injectSheet from 'react-jss'\nimport TimePicker from 'material-ui/TimePicker'\n\nconst errorStyle = {\n    textAlign: 'left'\n}\n\nconst TimeField = ({classes, input, label, meta: {error}, ...defaultProps}) => {\n    return (\n        <div className={classes.wrapper}>\n            <div>\n                <TimePicker\n                    format=\"24hr\"\n                    errorText={error}\n                    errorStyle={errorStyle}\n                    floatingLabelText={label}\n                    {...input}\n                    onChange={(event, value) => input.onChange(value)}\n                    {...defaultProps}\n                />\n            </div>\n            {error && <span>{error}</span>}\n        </div>\n    )\n}\n\nexport default injectSheet({\n})(TimeField)\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Basic/TimeField.js","import sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from './Basic/SearchField'\nimport axios from '../../helpers/axios'\nimport * as PATH from '../../constants/api'\nimport toCamelCase from '../../helpers/toCamelCase'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.BRAND_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst getItem = (id) => {\n    return axios().get(sprintf(PATH.BRAND_ITEM, id))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst BrandSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default BrandSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/BrandSearchField.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose} from 'recompose'\nimport {connect} from 'react-redux'\nimport CircularProgress from 'material-ui/CircularProgress'\n\nconst enhance = compose(\n    connect((state) => {\n        const currency = _.get(state, ['form', 'PendingPaymentsCreateForm', 'values', 'cashbox', 'value', 'currency', 'name'])\n        const extraLoading = _.get(state, ['product', 'extra', 'loading'])\n        return {\n            currency,\n            extraLoading\n        }\n    })\n)\n\nconst CashboxCurrencyField = enhance((props) => {\n    const {currency, extraLoading} = props\n    return (\n        <div style={{margin: '6px 0 0 10px', display: 'flex', alignItems: 'center'}}>\n            { extraLoading && <div><CircularProgress size={20} thickness={2} /></div> }\n            {!extraLoading && <div>{currency}</div>}\n        </div>\n    )\n})\n\nexport default CashboxCurrencyField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/CashboxCurrencyField.js","import sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from './Basic/SearchField'\nimport axios from '../../helpers/axios'\nimport * as PATH from '../../constants/api'\nimport toCamelCase from '../../helpers/toCamelCase'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.CASHBOX_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst getItem = (id) => {\n    return axios().get(sprintf(PATH.CASHBOX_ITEM, id))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst StockSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default StockSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/CashboxSearchField.js","import sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from './Basic/SearchField'\nimport axios from '../../helpers/axios'\nimport * as PATH from '../../constants/api'\nimport toCamelCase from '../../helpers/toCamelCase'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.CATEGORY_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst getItem = (id) => {\n    return axios().get(sprintf(PATH.CATEGORY_ITEM, id))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst CategorySearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default CategorySearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/CategorySearchField.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport {RadioButton, RadioButtonGroup} from 'material-ui/RadioButton'\nimport {connect} from 'react-redux'\n\nconst enhance = compose(\n    injectSheet({\n        radioButton: {\n            marginTop: '10px',\n            '&>div': {\n                marginBottom: '10px'\n            },\n            '& svg': {\n                width: '20px !important',\n                height: '20px !important'\n            },\n            '& label': {\n                top: '-2px',\n                marginLeft: '-7px'\n            }\n        }\n    })\n    ,\n    connect((state) => {\n        const contacts = _.get(state, ['client', 'contacts', 'data'])\n        const contactsLoading = _.get(state, ['client', 'contacts', 'loading'])\n        return {\n            contacts,\n            contactsLoading\n        }\n    })\n)\n\nconst ClientContactsField = enhance((props) => {\n    const {classes, contacts, contactsLoading, input, meta: {error}} = props\n    return (\n        <div>\n            { contactsLoading && <div>Загрузка  ...</div> }\n            {error && <div className={classes.error}>{error}</div>}\n            {!contactsLoading && <RadioButtonGroup name=\"contact\" className={classes.radioButton}\n                                                   onChange={input.onChange} defaultSelected={input.value} >\n                {_.map(contacts, (item) => {\n                    const id = _.get(item, 'id')\n                    const value = _.get(item, 'name') + ' ' + _.get(item, 'telephone') + ' ' + _.get(item, 'email')\n                    return (\n                        <RadioButton\n                            key={id}\n                            value={id}\n                            label={value}\n                        />\n                    )\n                })}\n            </RadioButtonGroup>}\n        </div>\n    )\n})\n\nexport default ClientContactsField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Client/ClientContactsField.js","import React from 'react'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport ContentRemove from 'material-ui/svg-icons/content/remove'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport {Field} from 'redux-form'\nimport TextField from '../Basic/TextField'\n\n/**\n * {['contacts', 'contactName', 'email', 'phoneNumber']}\n */\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            marginTop: '20px',\n            display: 'flex',\n            flexDirection: 'column'\n        },\n        title: {\n            paddingTop: '15px',\n            fontWeight: 'bold',\n            color: 'black !important'\n        },\n        headers: {\n            height: '0',\n            position: 'relative',\n            top: '-30px',\n            '& button': {\n                position: 'absolute !important',\n                right: '0 !important'\n            }\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        flex: {\n            display: 'flex',\n            '& div:first-child': {\n                marginRight: '10px'\n            }\n        },\n        contactBlock: {\n            marginTop: '10px',\n            marginBottom: '15px',\n            paddingBottom: '15px',\n            '&:last-child': {\n                margin: '0'\n            }\n        }\n    })\n)\n\nconst ClientContactsListField = (props) => {\n    const {classes, fields} = props\n    const ONE = 1\n    const handleTouchTap = (index) => {\n        const LAST_INDEX = index + ONE\n\n        if (fields.length === LAST_INDEX) {\n            return fields.push({})\n        }\n\n        return fields.remove(index)\n    }\n    return (\n        <div>\n            {fields.map((contact, index) => {\n                return (\n                    <div className={classes.contactBlock}>\n                        <div className={classes.headers}>\n                            <FloatingActionButton\n                                backgroundColor=\"#12aaeb\"\n                                onTouchTap={() => handleTouchTap(index)}\n                                mini={true}>\n                                {fields.length !== index + ONE ? <ContentRemove/> : <ContentAdd />}\n                            </FloatingActionButton>\n                        </div>\n                        <div key={index}>\n                            <Field\n                                label=\"Контактное лицо\"\n                                name={`${contact}.name`}\n                                component={TextField}\n                                className={classes.inputFieldCustom}\n                                fullWidth={true}\n                            />\n                            <div className={classes.flex}>\n                                <Field\n                                    label=\"Email\"\n                                    name={`${contact}.email`}\n                                    component={TextField}\n                                    className={classes.inputFieldCustom}\n                                    fullWidth={true}\n                                />\n\n                                <Field\n                                    label=\"Телефон номер\"\n                                    name={`${contact}.telephone`}\n                                    component={TextField}\n                                    className={classes.inputFieldCustom}\n                                    fullWidth={true}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default enhance(ClientContactsListField)\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Client/ClientContactsListField.js","import sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from './Basic/SearchField'\nimport axios from '../../helpers/axios'\nimport * as PATH from '../../constants/api'\nimport toCamelCase from '../../helpers/toCamelCase'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.CURRENCY_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst getItem = (id) => {\n    return axios().get(sprintf(PATH.CURRENCY_ITEM, id))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst CurrencySearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default CurrencySearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/CurrencySearchField.js","import _ from 'lodash'\nimport React from 'react'\nimport SearchField from './Basic/SearchField'\n\nconst Items = [\n    {id: 0, name: 'Стандартная'},\n    {id: 1, name: 'Консигнация'}\n]\n\nconst getOptions = (search) => {\n    return Promise.resolve(Items)\n}\n\nconst getItem = (id) => {\n    return Promise.resolve(\n        _.find(Items, (o) => { return o.id === _.toInteger(id) }))\n}\n\nconst DealTypeSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default DealTypeSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/DealTypeSearchField.js","import _ from 'lodash'\nimport React from 'react'\nimport SearchField from './Basic/SearchField'\n\nconst Items = [\n    {id: 0, name: 'Самовывоз'},\n    {id: 1, name: 'Доставка'}\n]\n\nconst getOptions = (search) => {\n    return Promise.resolve(Items)\n}\n\nconst getItem = (id) => {\n    return Promise.resolve(\n        _.find(Items, (o) => { return o.id === _.toInteger(id) }))\n}\n\nconst DeliveryTypeSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default DeliveryTypeSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/DeliveryTypeSearchField.js","import _ from 'lodash'\nimport React from 'react'\nimport SearchField from './Basic/SearchField'\n\nconst Items = [\n    {id: 1, name: 'Не оплачен'},\n    {id: 2, name: 'Оплачен'}\n]\n\nconst getOptions = (search) => {\n    return Promise.resolve(Items)\n}\n\nconst getItem = (id) => {\n    return Promise.resolve(\n        _.find(Items, (o) => { return o.id === _.toInteger(id) }))\n}\n\nconst CurrencySearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default CurrencySearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/DeptTypeSearchField.js","import sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from './Basic/SearchField'\nimport axios from '../../helpers/axios'\nimport * as PATH from '../../constants/api'\nimport toCamelCase from '../../helpers/toCamelCase'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.EXPENSIVE_CATEGORY_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst getItem = (id) => {\n    return axios().get(sprintf(PATH.EXPENSIVE_CATEGORY_ITEM, id))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst ExpensiveCategorySearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default ExpensiveCategorySearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/ExpensiveCategorySearchField.js","import _ from 'lodash'\nimport React from 'react'\nimport SearchField from './Basic/SearchField'\n\nconst Items = [\n    {id: 1, name: 'Каждый день'},\n    {id: 2, name: 'Раз в неделю'},\n    {id: 2, name: 'Два раза в неделю'},\n    {id: 2, name: 'Иногда'}\n]\n\nconst getOptions = (search) => {\n    return Promise.resolve(Items)\n}\n\nconst getItem = (id) => {\n    return Promise.resolve(\n        _.find(Items, (o) => { return o.id === _.toInteger(id) }))\n}\n\nconst FrequencySearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default FrequencySearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/FrequencySearchField.js","import _ from 'lodash'\nimport React from 'react'\nimport SearchField from './Basic/SearchField'\n\nconst Items = [\n    {id: 1, name: 'Возврат'},\n    {id: 2, name: 'Передача'},\n    {id: 3, name: 'Постака'}\n]\n\nconst getOptions = (search) => {\n    return Promise.resolve(Items)\n}\n\nconst getItem = (id) => {\n    return Promise.resolve(\n        _.find(Items, (o) => { return o.id === _.toInteger(id) }))\n}\n\nconst InOutTypeSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default InOutTypeSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/InOutTypeSearchFiled.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose, withReducer, withState, withHandlers} from 'recompose'\nimport injectSheet from 'react-jss'\nimport {Row, Col} from 'react-flexbox-grid'\nimport IconButton from 'material-ui/IconButton'\nimport {\n    Table,\n    TableBody,\n    TableHeader,\n    TableHeaderColumn,\n    TableRow,\n    TableRowColumn\n} from 'material-ui/Table'\nimport ImageCheck from '../../Icons/check'\nimport DeleteIcon from '../../DeleteIcon/index'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport ProductSearchField from '../Product/ProductSearchField'\nimport TextField from '../Basic/TextField'\nimport {ProductMeasurementField} from '../index'\nimport {connect} from 'react-redux'\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            display: 'flex',\n            flexDirection: 'column'\n        },\n        table: {\n            margin: '20px 0 10px',\n            maxHeight: '300px',\n            overflow: 'auto'\n        },\n        tableTitle: {\n            fontWeight: '600',\n            color: '#333 !important',\n            textAlign: 'left'\n        },\n        tableRow: {\n            height: '40px !important',\n            border: 'none !important',\n            '& td:first-child': {\n                width: '250px'\n            },\n            '& tr': {\n                border: 'none !important'\n            },\n            '& td': {\n                height: '40px !important',\n                padding: '0 5px !important'\n            },\n            '& th:first-child': {\n                width: '250px',\n                textAlign: 'left !important',\n                fontWeight: '600 !important'\n            },\n            '& th': {\n                textAlign: 'left !important',\n                border: 'none !important',\n                height: '40px !important',\n                padding: '0 5px !important',\n                fontWeight: '600 !important'\n            }\n        },\n        title: {\n            fontWeight: '600',\n            border: 'none !important'\n        },\n        headers: {\n            display: 'flex',\n            alignItems: 'center',\n            height: '40px',\n            justifyContent: 'space-between',\n            '& span': {\n                textTransform: 'lowercase !important'\n            }\n        },\n        background: {\n            backgroundColor: '#f1f5f8',\n            display: 'flex',\n            padding: '10px',\n            marginTop: '20px',\n            '& > div': {\n                marginTop: '-20px !important',\n                marginRight: '20px',\n                height: '72px !important',\n                '& input': {\n                    height: '75px !important'\n                }\n            },\n            '& > button > div > span': {\n                padding: '0 !important'\n            },\n            '& > div:last-child': {\n                width: '100% !important'\n            },\n            '& button': {\n                marginTop: '10px !important'\n            }\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        titleAdd: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: '20px'\n        },\n        addRaw: {\n            alignItems: 'flex-end',\n            justifyContent: 'space-between',\n            margin: '5px -7px'\n        }\n    }),\n    withState('openAddMaterials', 'setOpenAddMaterials', false),\n    withReducer('state', 'dispatch', (state, action) => {\n        return {...state, ...action}\n    }, {open: false}),\n    connect((state) => {\n        const measurementName = _.get(state, ['product', 'measurement', 'data'])\n        return {\n            measurementName\n        }\n    }),\n    withHandlers({\n        handleAdd: props => (measurementName) => {\n            const ingredient = _.get(props, ['ingredient', 'input', 'value'])\n            const amount = _.get(props, ['amount', 'input', 'value'])\n            const measurement = measurementName\n            const onChange = _.get(props, ['ingredients', 'input', 'onChange'])\n            const ingredients = _.get(props, ['ingredients', 'input', 'value'])\n\n            if (!_.isEmpty(ingredient) && amount) {\n                onChange(_.union(ingredients, [{ingredient, amount, measurement}]))\n            }\n        },\n\n        handleRemove: props => (listIndex) => {\n            const onChange = _.get(props, ['ingredients', 'input', 'onChange'])\n            const ingredients = _(props)\n                .get(['ingredients', 'input', 'value'])\n                .filter((item, index) => index !== listIndex)\n\n            onChange(ingredients)\n        }\n    })\n)\n\nconst ManufactureListMaterialField = ({classes, state, measurementName, handleAdd, handleRemove, openAddMaterials, setOpenAddMaterials, ...defaultProps}) => {\n    const ingredients = _.get(defaultProps, ['ingredients', 'input', 'value']) || []\n\n    return (\n        <div className={classes.wrapper}>\n            <div className={classes.titleAdd}>\n                <h3>Сырье</h3>\n                <a onClick={() => {\n                    setOpenAddMaterials(!openAddMaterials)\n                }}>\n                    <ContentAdd style={{height: '13px', width: '13px', color: 'rgb(18, 170, 235)'}}\n                                viewBox=\"0 0 24 15\"/>\n                    добавить сырье\n                </a>\n            </div>\n            {openAddMaterials && <div className={classes.addMaterials}>\n                <Row className={classes.addRaw}>\n                    <Col xs={7}>\n                        <ProductSearchField\n                            label=\"Наименование товара\"\n                            className={classes.inputFieldCustom}\n                            fullWidth={true}\n                            {..._.get(defaultProps, 'ingredient')}\n                        />\n                    </Col>\n                    <Col xs={2}>\n                        <TextField\n                            label=\"Кол-во\"\n                            fullWidth={true}\n                            className={classes.inputFieldCustom}\n                            {..._.get(defaultProps, 'amount')}\n                        />\n                    </Col>\n                    <Col xs={1} style={{height: '32px'}}>\n                        <ProductMeasurementField />\n                    </Col>\n                    <IconButton\n                        onTouchTap={() => { handleAdd(measurementName) }}>\n                        <div>\n                            <ImageCheck color=\"#129fdd\"/>\n                        </div>\n                    </IconButton>\n                </Row>\n            </div>}\n            {!_.isEmpty(ingredients) ? <div className={classes.table}>\n                <Table\n                    fixedHeader={true}\n                    fixedFooter={false}\n                    multiSelectable={false}>\n                    <TableHeader\n                        displaySelectAll={false}\n                        adjustForCheckbox={false}\n                        enableSelectAll={false}\n                        className={classes.title}>\n                        <TableRow className={classes.tableRow}>\n                            <TableHeaderColumn\n                                className={classes.tableTitle}>Наименование</TableHeaderColumn>\n                            <TableHeaderColumn className={classes.tableTitle}>Кол-во</TableHeaderColumn>\n                            <TableHeaderColumn className={classes.tableTitle}>Ед</TableHeaderColumn>\n                            <TableHeaderColumn></TableHeaderColumn>\n                        </TableRow>\n                    </TableHeader>\n                    <TableBody\n                        displayRowCheckbox={false}\n                        deselectOnClickaway={false}\n                        showRowHover={false}\n                        stripedRows={false}>\n                        {_.map(ingredients, (item, index) => (\n                            <TableRow key={index} className={classes.tableRow}>\n                                <TableRowColumn>{_.get(item, ['ingredient', 'text'])}</TableRowColumn>\n                                <TableRowColumn>{_.get(item, 'amount')}</TableRowColumn>\n                                <TableRowColumn>{_.get(item, 'measurement')}</TableRowColumn>\n                                <TableRowColumn style={{textAlign: 'right'}}>\n                                    <IconButton onTouchTap={() => handleRemove(index)}>\n                                        <DeleteIcon color=\"#666666\"/>\n                                    </IconButton>\n                                </TableRowColumn>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </div>\n                : <div></div>\n            }\n        </div>\n    )\n}\n\nexport default enhance(ManufactureListMaterialField)\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Manufacture/ManufactureListMaterialField.js","import sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\nimport axios from '../../../helpers/axios'\nimport * as PATH from '../../../constants/api'\nimport toCamelCase from '../../../helpers/toCamelCase'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.MANUFACTURE_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst getItem = (id) => {\n    return axios().get(sprintf(PATH.MANUFACTURE_ITEM, id))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst ManufactureSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default ManufactureSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Manufacture/ManufactureSearchField.js","import sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from './Basic/SearchField'\nimport axios from '../../helpers/axios'\nimport * as PATH from '../../constants/api'\nimport toCamelCase from '../../helpers/toCamelCase'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.MEASUREMENT_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst getItem = (id) => {\n    return axios().get(sprintf(PATH.MEASUREMENT_ITEM, id))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst MeasurementSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default MeasurementSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/MeasurementSearchField.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose, withHandlers, withReducer, withState} from 'recompose'\nimport {Field} from 'redux-form'\nimport injectSheet from 'react-jss'\nimport {Row, Col} from 'react-flexbox-grid'\nimport IconButton from 'material-ui/IconButton'\nimport FlatButton from 'material-ui/FlatButton'\nimport Groceries from '../../Images/groceries.svg'\nimport {connect} from 'react-redux'\nimport {\n    Table,\n    TableBody,\n    TableHeader,\n    TableHeaderColumn,\n    TableRow,\n    TableRowColumn\n} from 'material-ui/Table'\nimport DeleteIcon from '../../DeleteIcon/index'\n\nimport OrderProductSearchField from './OrderProductSearchField'\nimport TextField from '../Basic/TextField'\nimport ProductCostField from '../Product/ProductCostField'\nimport OrderProductMeasurementField from './OrderProductMeasurementField'\nimport {ProductTypeSearchField} from '../../ReduxForm'\nimport getConfig from '../../../helpers/getConfig'\nimport numberFormat from '../../../helpers/numberFormat'\nimport Done from 'material-ui/svg-icons/action/done'\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            display: 'flex',\n            flexDirection: 'column',\n            height: '100%',\n            position: 'relative'\n        },\n        error: {\n            textAlign: 'center',\n            fontSize: '14px',\n            color: 'red'\n        },\n        imagePlaceholder: {\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            '& img': {\n                width: '70px',\n                marginBottom: '20px'\n            }\n        },\n        table: {\n            marginTop: '20px'\n        },\n        tableTitle: {\n            fontWeight: '600',\n            color: '#333 !important',\n            textAlign: 'left'\n        },\n        tableRow: {\n            height: '40px !important',\n            border: 'none !important',\n            '& td:first-child': {\n                width: '250px'\n            },\n            '& tr': {\n                border: 'none !important'\n            },\n            '& td': {\n                height: '40px !important',\n                padding: '0 5px !important'\n            },\n            '& th:first-child': {\n                width: '250px',\n                textAlign: 'left !important',\n                fontWeight: '600 !important'\n            },\n            '& th': {\n                textAlign: 'left !important',\n                border: 'none !important',\n                height: '40px !important',\n                padding: '0 5px !important',\n                fontWeight: '600 !important'\n            }\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            width: '100% !important',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        title: {\n            fontWeight: '600',\n            border: 'none !important'\n        },\n        headers: {\n            display: 'flex',\n            alignItems: 'center',\n            height: '40px',\n            justifyContent: 'space-between',\n            '& span': {\n                textTransform: 'lowercase !important'\n            }\n        },\n        background: {\n            alignItems: 'baseline',\n            padding: '10px 30px',\n            margin: '0 -30px',\n            marginTop: '5px',\n            backgroundColor: '#f1f5f8',\n            position: 'relative',\n            zIndex: '2',\n            justifyContent: 'space-between',\n            '& > button div': {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center'\n            }\n        }\n    }),\n    withState('openAddProducts', 'setOpenAddProducts', false),\n    connect((state) => {\n        const extra = _.get(state, ['product', 'extra', 'data'])\n        return {\n            extra\n        }\n    }),\n    withReducer('state', 'dispatch', (state, action) => {\n        return {...state, ...action}\n    }, {open: false}),\n\n    withHandlers({\n        handleAdd: props => () => {\n            const product = _.get(props, ['product', 'input', 'value'])\n            const amount = _.get(props, ['amount', 'input', 'value'])\n            const onChange = _.get(props, ['products', 'input', 'onChange'])\n            const products = _.get(props, ['products', 'input', 'value'])\n            const extra = _.get(props, ['extra'])\n            const measurement = _.get(extra, ['product', 'measurement', 'name'])\n            const ZERO = 0\n\n            if (!_.isEmpty(product) && amount) {\n                const cost = _.toNumber(_.get(extra, ['product', 'price']) || ZERO) * _.toNumber(amount)\n                const foundIndex = _.findIndex(products,\n                    (item) => {\n                        return _.get(item, ['product', 'value']) === _.get(product, ['value'])\n                    })\n                const NOT_FOUND = -1\n\n                if (foundIndex === NOT_FOUND) {\n                    onChange(_.union(products, [{product, amount, cost, measurement, extra}]))\n                }\n            }\n        },\n\n        handleRemove: props => (listIndex) => {\n            const onChange = _.get(props, ['products', 'input', 'onChange'])\n            const products = _(props)\n                .get(['products', 'input', 'value'])\n                .filter((item, index) => index !== listIndex)\n\n            onChange(products)\n        }\n    })\n)\n\nconst iconStyle = {\n    icon: {\n        color: '#12aaeb',\n        width: 20,\n        height: 20\n    },\n    button: {\n        width: 48,\n        height: 48,\n        padding: 0\n    }\n}\n\nconst OrderListProductField = ({classes, handleAdd, handleRemove, openAddProducts, setOpenAddProducts, ...defaultProps}) => {\n    const products = _.get(defaultProps, ['products', 'input', 'value']) || []\n    const error = _.get(defaultProps, ['products', 'meta', 'error'])\n    const tableProducts = _.map(products, (item, index) => {\n        const cost = _.get(item, 'cost')\n        const balance = _.toNumber(_.get(item, ['extra', 'balance']))\n        const amount = _.toNumber(_.get(item, 'amount'))\n        const measurement = _.get(item, 'measurement')\n        return (\n            <TableRow key={index} className={classes.tableRow}\n                      style={{background: (balance < amount) ? '#ffecec' : 'transparent'}}>\n                <TableRowColumn>{_.get(item, ['product', 'text'])}</TableRowColumn>\n                <TableRowColumn>{numberFormat(balance)}</TableRowColumn>\n                <TableRowColumn>{numberFormat(amount)} {measurement}</TableRowColumn>\n                <TableRowColumn>{numberFormat(cost)} {getConfig('PRIMARY_CURRENCY')}</TableRowColumn>\n                <TableRowColumn style={{textAlign: 'right'}}>\n                    <IconButton onTouchTap={() => handleRemove(index)}>\n                        <DeleteIcon color=\"#666666\"/>\n                    </IconButton>\n                </TableRowColumn>\n            </TableRow>\n        )\n    })\n    return (\n        <div className={classes.wrapper}>\n            <div>\n                <div className={classes.headers} style={{marginTop: '-10px'}}>\n                    <div className={classes.title}>Список товаров</div>\n                    <FlatButton\n                        label=\"+ добавить товар\"\n                        style={{color: '#12aaeb'}}\n                        className={classes.span}\n                        onTouchTap={() => setOpenAddProducts(!openAddProducts)}\n                    />\n                </div>\n                {openAddProducts &&\n                <Row className={classes.background}>\n                    <Col xs={3}>\n                        <Field\n                            label=\"Тип товара\"\n                            name=\"type\"\n                            component={ProductTypeSearchField}\n                            className={classes.inputFieldCustom}\n                            fullWidth={true}\n                        />\n                    </Col>\n                    <Col xs={3}>\n                        <Field\n                            label=\"Наименование\"\n                            name=\"product\"\n                            component={OrderProductSearchField}\n                            className={classes.inputFieldCustom}\n                            fullWidth={true}\n                        />\n                    </Col>\n                    <Col xs={2}>\n                        <Field\n                            label=\"Кол-во\"\n                            name=\"amount\"\n                            component={TextField}\n                            className={classes.inputFieldCustom}\n                            fullWidth={true}\n                        />\n                    </Col>\n                    <Col xs={1}>\n                        <OrderProductMeasurementField/>\n                    </Col>\n                    <div className=\"summa\" style={{width: '10%', textAlign: 'right', paddingRight: '20px'}}>\n                        <ProductCostField />\n                    </div>\n                    <IconButton\n                        iconStyle={iconStyle.icon}\n                        style={iconStyle.button}\n                        onTouchTap={handleAdd}>\n                        <Done/>\n                    </IconButton>\n                </Row>}\n            </div>\n            {error && <div className={classes.error}>{error}</div>}\n            {!_.isEmpty(products) ? <div className={classes.table}>\n                <Table\n                    fixedHeader={true}\n                    fixedFooter={false}\n                    multiSelectable={false}>\n\n                        <TableHeader\n                            displaySelectAll={false}\n                            adjustForCheckbox={false}\n                            enableSelectAll={false}\n                            className={classes.title}>\n                            <TableRow className={classes.tableRow}>\n                                <TableHeaderColumn\n                                    className={classes.tableTitle}>Наименование</TableHeaderColumn>\n                                <TableHeaderColumn className={classes.tableTitle}>На складе</TableHeaderColumn>\n                                <TableHeaderColumn className={classes.tableTitle}>Кол-во</TableHeaderColumn>\n                                <TableHeaderColumn className={classes.tableTitle}>Сумма</TableHeaderColumn>\n                                <TableHeaderColumn></TableHeaderColumn>\n                            </TableRow>\n                        </TableHeader>\n                    <TableBody\n                        displayRowCheckbox={false}\n                        deselectOnClickaway={false}\n                        showRowHover={false}\n                        stripedRows={false}>\n                        {tableProducts}\n                    </TableBody>\n                </Table>\n            </div>\n                : <div className={classes.imagePlaceholder}>\n                    <div style={{textAlign: 'center', color: '#adadad'}}>\n                        <img src={Groceries} alt=\"\"/>\n                        <div>Вы еще не выбрали ни одного товара. <br/> <a onClick={() => setOpenAddProducts(!openAddProducts)}>Добавить</a> товар?</div>\n                    </div>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default enhance(OrderListProductField)\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Order/OrderListProductField.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose, withReducer, withHandlers} from 'recompose'\nimport injectSheet from 'react-jss'\nimport IconButton from 'material-ui/IconButton'\nimport FlatButton from 'material-ui/FlatButton'\nimport Groceries from '../../Images/groceries.svg'\nimport {connect} from 'react-redux'\nimport getConfig from '../../../helpers/getConfig'\nimport numberFormat from '../../../helpers/numberFormat'\nimport {\n    Table,\n    TableBody,\n    TableHeader,\n    TableHeaderColumn,\n    TableRow,\n    TableRowColumn\n} from 'material-ui/Table'\nimport DeleteIcon from '../../DeleteIcon/index'\n\nimport OrderReturnMeasurementField from './OrderReturnMeasurementField'\nimport ReturnProductsSearchField from './ReturnProductsSearchField'\nimport ProductReturnCostField from './ProductReturnCostField'\nimport TextField from '../Basic/TextField'\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            display: 'flex',\n            flexDirection: 'column',\n            minHeight: '360px',\n            position: 'relative',\n            height: '100%'\n        },\n        imagePlaceholder: {\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            '& img': {\n                width: '100px',\n                marginBottom: '20px'\n            }\n        },\n        table: {\n            marginTop: '20px',\n            overflow: 'auto'\n        },\n        tableTitle: {\n            fontWeight: '600',\n            color: '#333 !important',\n            textAlign: 'left'\n        },\n        tableRow: {\n            height: '40px !important',\n            border: 'none !important',\n            '& td:first-child': {\n                width: '250px'\n            },\n            '& tr': {\n                border: 'none !important'\n            },\n            '& td': {\n                height: '40px !important',\n                padding: '0 5px !important'\n            },\n            '& th:first-child': {\n                width: '250px',\n                textAlign: 'left !important',\n                fontWeight: '600 !important'\n            },\n            '& th': {\n                textAlign: 'left !important',\n                border: 'none !important',\n                height: '40px !important',\n                padding: '0 5px !important',\n                fontWeight: '600 !important'\n            }\n        },\n        title: {\n            fontWeight: '600',\n            border: 'none !important'\n        },\n        headers: {\n            display: 'flex',\n            alignItems: 'center',\n            height: '40px',\n            justifyContent: 'space-between',\n            '& span': {\n                textTransform: 'lowercase !important'\n            }\n        },\n        background: {\n            display: 'flex',\n            padding: '10px 30px',\n            margin: '0 -30px',\n            marginTop: '5px',\n            backgroundColor: '#f1f5f8',\n            position: 'relative',\n            zIndex: '2'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            width: '100% !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important',\n                width: '100% !important'\n            }\n        }\n    }),\n    connect((state) => {\n        const extra = _.get(state, ['product', 'extra', 'data'])\n        return {\n            extra\n        }\n    }),\n    withReducer('state', 'dispatch', (state, action) => {\n        return {...state, ...action}\n    }, {open: false}),\n    withHandlers({\n        handleAdd: props => () => {\n            const ZERO = 0\n            const product = _.get(props, ['product', 'input', 'value'])\n            const amount = _.get(props, ['amount', 'input', 'value'])\n            const extra = _.get(props, ['extra'])\n            const onChange = _.get(props, ['returned_products', 'input', 'onChange'])\n            const products = _.get(props, ['returned_products', 'input', 'value'])\n\n            if (!_.isEmpty(product) && amount) {\n                let has = false\n                _.map(products, (item) => {\n                    if (_.get(item, 'product') === product) {\n                        has = true\n                    }\n                })\n                const cost = _.toNumber(_.get(extra, ['product', 'price']) || ZERO) * _.toNumber(amount)\n                if (!has) {\n                    onChange(_.union(products, [{product, amount, cost}]))\n                }\n            }\n        },\n\n        handleRemove: props => (listIndex) => {\n            const onChange = _.get(props, ['returned_products', 'input', 'onChange'])\n            const products = _(props)\n                .get(['returned_products', 'input', 'value'])\n                .filter((item, index) => index !== listIndex)\n\n            onChange(products)\n        }\n    })\n)\n\nconst OrderListReturnField = ({classes, state, dispatch, handleAdd, handleRemove, orderData, ...defaultProps}) => {\n    const products = _.get(defaultProps, ['returned_products', 'input', 'value']) || []\n    return (\n        <div className={classes.wrapper}>\n            <div>\n                <div className={classes.headers}>\n                    <div className={classes.title}>Список товаров</div>\n                    <FlatButton\n                        label=\"+ добавить товар\"\n                        style={{color: '#12aaeb'}}\n                        className={classes.span}\n                        onTouchTap={() => dispatch({open: !state.open})}\n                    />\n                </div>\n                {state.open && <div className={classes.background}>\n                    <div style={{width: '35%', paddingRight: '20px'}}>\n                        <ReturnProductsSearchField\n                            label=\"Наименование товара\"\n                            className={classes.inputFieldCustom}\n                            style={{width: '100%'}}\n                            {..._.get(defaultProps, 'product')}\n                        />\n                    </div>\n                    <div style={{width: '20%', paddingRight: '20px'}}>\n                        <TextField\n                            label=\"Кол-во\"\n                            className={classes.inputFieldCustom}\n                            style={{width: '100%'}}\n                            {..._.get(defaultProps, 'amount')}\n                        />\n                    </div>\n                    <div>\n                        <OrderReturnMeasurementField/>\n                    </div>\n                    <div className=\"summa\" style={{width: '25%', textAlign: 'right', paddingRight: '20px'}}>\n                        <ProductReturnCostField />\n                    </div>\n                    <div style={{width: '20%', textAlign: 'right', paddingTop: '9px'}}>\n                        <FlatButton label=\"Применить\" onTouchTap={handleAdd} style={{color: '#12aaeb'}}/>\n                    </div>\n                </div>}\n            </div>\n            {!_.isEmpty(products) ? <div className={classes.table}>\n                <Table\n                    fixedHeader={true}\n                    fixedFooter={false}\n                    multiSelectable={false}>\n\n                        <TableHeader\n                            displaySelectAll={false}\n                            adjustForCheckbox={false}\n                            enableSelectAll={false}\n                            className={classes.title}>\n                            <TableRow className={classes.tableRow}>\n                                <TableHeaderColumn\n                                    className={classes.tableTitle}>Наименование</TableHeaderColumn>\n                                <TableHeaderColumn className={classes.tableTitle}>Кол-во</TableHeaderColumn>\n                                <TableHeaderColumn className={classes.tableTitle}>Сумма</TableHeaderColumn>\n                                <TableHeaderColumn></TableHeaderColumn>\n                            </TableRow>\n                        </TableHeader>\n                    <TableBody\n                        displayRowCheckbox={false}\n                        deselectOnClickaway={false}\n                        showRowHover={false}\n                        stripedRows={false}>\n                        {_.map(products, (item, index) => (\n                            <TableRow key={index} className={classes.tableRow}>\n                                <TableRowColumn>{_.get(item, ['product', 'text'])}</TableRowColumn>\n                                <TableRowColumn>{_.get(item, 'amount')} {_.get(item, ['product', 'value', 'product', 'measurement', 'name'])}</TableRowColumn>\n                                <TableRowColumn>{\n                                    numberFormat((_.get(item, ['product', 'value', 'price']) * (_.get(item, 'amount'))), getConfig('PRIMARY_CURRENCY'))\n                                }</TableRowColumn>\n                                <TableRowColumn style={{textAlign: 'right'}}>\n                                    <IconButton onTouchTap={() => handleRemove(index)}>\n                                        <DeleteIcon color=\"#666666\"/>\n                                    </IconButton>\n                                </TableRowColumn>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </div>\n                : <div className={classes.imagePlaceholder}>\n                    <div style={{textAlign: 'center', color: '#adadad'}}>\n                        <img src={Groceries} alt=\"\"/>\n                        <div>Вы еще не выбрали ни одного товара. <br/> <a onClick={() => dispatch({open: !state.open})}>Добавить</a> товар?</div>\n                    </div>\n                </div>\n            }\n        </div>\n    )\n}\nOrderListReturnField.propTyeps = {\n    orderData: PropTypes.object.isRequired\n}\nexport default enhance(OrderListReturnField)\n\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Order/OrderListReturnField.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose} from 'recompose'\nimport {connect} from 'react-redux'\nimport CircularProgress from 'material-ui/CircularProgress'\n\nconst enhance = compose(\n    connect((state) => {\n        const ONE = 1\n        const extra = _.get(state, ['product', 'extra', 'data'])\n        const extraLoading = _.get(state, ['product', 'extra', 'loading'])\n        const count = _.get(state, ['form', 'OrderReturnForm', 'values', 'amount']) || ONE\n        return {\n            extra,\n            count,\n            extraLoading\n        }\n    })\n)\n\nconst OrderProductMeasurementField = enhance((props) => {\n    const {extra, extraLoading} = props\n    const measurement = _.get(extra, ['product', 'measurement', 'name'])\n    return (\n        <div style={{marginTop: '20px'}}>\n            { extraLoading && <div><CircularProgress size={20} thickness={2} /></div> }\n            {!extraLoading && <div>{measurement}</div>}\n        </div>\n    )\n})\n\nexport default OrderProductMeasurementField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Order/OrderProductMeasurementField.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose} from 'recompose'\nimport SearchField from '../Basic/SearchField'\nimport axios from '../../../helpers/axios'\nimport * as PATH from '../../../constants/api'\nimport toCamelCase from '../../../helpers/toCamelCase'\nimport * as actionTypes from '../../../constants/actionTypes'\nimport {connect} from 'react-redux'\n\nconst getOptions = (search, ikkinchi) => {\n    return axios().get(`${PATH.PRODUCT_LIST}?ikkinchi=${ikkinchi || ''}&search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst setExtraAction = (data, loading) => {\n    return {\n        type: actionTypes.PRODUCT_EXTRA,\n        data: data,\n        loading: loading\n    }\n}\n\nconst FIRST_ITEM = 0\nconst getItem = (id, dispatch) => {\n    dispatch(setExtraAction(null, true))\n    return axios().post(PATH.PRODUCT_EXTRA, {'products': [id]})\n        .then(({data}) => {\n            dispatch(setExtraAction(_.get(data, FIRST_ITEM), false))\n            return Promise.resolve(toCamelCase(_.get(data, [FIRST_ITEM, 'product'])))\n        })\n}\nconst enhance = compose(\n    connect((state, props) => {\n        const dispatch = _.get(props, 'dispatch')\n\n        return {\n            dispatch,\n            state\n        }\n    })\n)\nconst OrderProductSearchField = enhance((props) => {\n    const {dispatch, state} = props\n    const test = (id) => {\n        return getItem(id, dispatch)\n    }\n    const type = _.get(state, ['form', 'OrderCreateForm', 'values', 'type', 'value'])\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={(search) => { return getOptions(search, type) }}\n            getItem={test}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n})\n\nexport default OrderProductSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Order/OrderProductSearchField.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose} from 'recompose'\nimport {connect} from 'react-redux'\nimport CircularProgress from 'material-ui/CircularProgress'\n\nconst enhance = compose(\n    connect((state) => {\n        const ONE = 1\n        const values = _.get(state, ['form', 'OrderReturnForm', 'values'])\n        const extraLoading = _.get(state, ['product', 'extra', 'loading'])\n        const count = _.get(state, ['form', 'OrderReturnForm', 'values', 'amount']) || ONE\n        return {\n            values,\n            count,\n            extraLoading\n        }\n    })\n)\n\nconst OrderReturnMeasurementField = enhance((props) => {\n    const {values, extraLoading} = props\n    const measurement = _.get(values, ['product', 'value', 'product', 'measurement', 'name'])\n    return (\n        <div style={{marginTop: '20px'}}>\n            { extraLoading && <div><CircularProgress size={20} thickness={2} /></div> }\n            {!extraLoading && <div>{measurement}</div>}\n        </div>\n    )\n})\n\nexport default OrderReturnMeasurementField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Order/OrderReturnMeasurementField.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose} from 'recompose'\nimport {connect} from 'react-redux'\nimport getConfig from '../../../helpers/getConfig'\nimport numberFormat from '../../../helpers/numberFormat'\n\nconst ZERO = 0\n\nconst enhance = compose(\n    connect((state) => {\n        const ONE = 1\n        const extra = _.get(state, ['product', 'extra', 'data'])\n        const extraLoading = _.get(state, ['product', 'extra', 'loading'])\n        const count = _.get(state, ['form', 'OrderReturnForm', 'values', 'amount']) || ONE\n        const products = _.get(state, ['form', 'OrderReturnForm', 'values', 'returned_products'])\n        return {\n            extra,\n            count,\n            products,\n            extraLoading\n        }\n    })\n)\nconst OrderReturnTotalSum = enhance((props) => {\n    const {products} = props\n    let totalCost = ZERO\n    _.map(products, (item) => {\n        const itemCost = _.toNumber(_.get(item, ['product', 'value', 'price']))\n        const itemAmount = _.toNumber(_.get(item, 'amount'))\n        totalCost += (itemAmount * itemCost)\n    })\n    return (\n        <b>{numberFormat(totalCost, getConfig('PRIMARY_CURRENCY'))}</b>\n    )\n})\n\nexport default OrderReturnTotalSum\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Order/OrderReturnTotalSum.js","import _ from 'lodash'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\n\nconst Items = [\n    {id: 0, name: 'Запрос отправлен'},\n    {id: 1, name: 'Есть на складе'},\n    {id: 2, name: 'Передан доставщику'},\n    {id: 3, name: 'Доставлен'},\n    {id: 4, name: 'Отменен'}\n\n]\nconst getOptions = () => {\n    return Promise.resolve(Items)\n}\n\nconst getItem = (id) => {\n    return Promise.resolve(\n        _.find(Items, (o) => { return o.id === _.toInteger(id) }))\n}\n\nconst CurrencySearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default CurrencySearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Order/OrderStatusSearchField.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose} from 'recompose'\nimport {connect} from 'react-redux'\nimport getConfig from '../../../helpers/getConfig'\nimport numberFormat from '../../../helpers/numberFormat'\nimport numberWithoutSpaces from '../../../helpers/numberWithoutSpaces'\n\nconst ZERO = 0\n\nconst enhance = compose(\n    connect((state) => {\n        const ONE = 1\n        const extra = _.get(state, ['product', 'extra', 'data'])\n        const extraLoading = _.get(state, ['product', 'extra', 'loading'])\n        const count = _.get(state, ['form', 'OrderCreateForm', 'values', 'amount']) || ONE\n        const products = _.get(state, ['form', 'OrderCreateForm', 'values', 'products'])\n        const deliveryPrice = _.get(state, ['form', 'OrderCreateForm', 'values', 'deliveryPrice'])\n        const discountPercent = _.get(state, ['form', 'OrderCreateForm', 'values', 'discountPrice']) || ZERO\n        return {\n            extra,\n            count,\n            products,\n            deliveryPrice,\n            discountPercent,\n            extraLoading\n        }\n    })\n)\nconst OrderTotalSum = enhance((props) => {\n    const {products, deliveryPrice, discountPercent} = props\n    const HUNDRED = 100\n    let totalCost = ZERO\n    _.map(products, (item) => {\n        totalCost += _.toNumber(_.get(item, 'cost'))\n    })\n    const orderTotal = (totalCost + numberWithoutSpaces(deliveryPrice)) * ((HUNDRED - _.toNumber(discountPercent)) / HUNDRED)\n    return (\n        <b>{numberFormat(orderTotal, getConfig('PRIMARY_CURRENCY'))}</b>\n    )\n})\n\nexport default OrderTotalSum\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Order/OrderTotalSum.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose} from 'recompose'\nimport {connect} from 'react-redux'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport getConfig from '../../../helpers/getConfig'\nimport numberFormat from '../../../helpers/numberFormat'\n\nconst enhance = compose(\n    connect((state) => {\n        const ONE = 1\n        const values = _.get(state, ['form', 'OrderReturnForm', 'values'])\n        const extraLoading = _.get(state, ['product', 'extra', 'loading'])\n        const count = _.get(state, ['form', 'OrderReturnForm', 'values', 'amount']) || ONE\n        return {\n            values,\n            count,\n            extraLoading\n        }\n    })\n)\n\nconst ProductReturnCostField = enhance((props) => {\n    const {values, extraLoading, count} = props\n    const ZERO = 0\n    const cost = _.toNumber(_.get(values, ['product', 'value', 'price']) || ZERO) * _.toNumber(count)\n    return (\n        <div style={{marginTop: '20px'}}>\n            { extraLoading && <div><CircularProgress size={20} thickness={2} /></div> }\n            {!extraLoading && <div>{numberFormat(cost, getConfig('PRIMARY_CURRENCY'))}</div>}\n        </div>\n    )\n})\n\nexport default ProductReturnCostField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Order/ProductReturnCostField.js","import _ from 'lodash'\nimport React from 'react'\nimport {connect} from 'react-redux'\nimport SearchField from '../Basic/SearchField'\nimport {compose} from 'recompose'\nimport PropTypes from 'prop-types'\n\nconst enhance = compose(\n    connect((state) => {\n        const products = _.get(state, ['order', 'item', 'data', 'products'])\n        return {\n            products\n        }\n    })\n)\n\nconst ReturnProductsSearchField = enhance((props) => {\n    const productItems = _.get(props, 'products')\n\n    return (\n        <SearchField\n            getValue={(value) => { return value }}\n            getText={(value) => { return _.get(value, ['product', 'name']) }}\n            getOptions={() => { return Promise.resolve(productItems) }}\n            getItem={(value) => {\n                return Promise.resolve(\n                    _.find(productItems, (o) => { return _.toInteger(_.get(o, ['product', 'id'])) === _.toInteger(_.get(value, ['product', 'id'])) }))\n            }}\n                getItemText={(value) => { return _.get(value, ['product', 'name']) }}\n            {...props}\n        />\n    )\n})\nReturnProductsSearchField.propTyeps = {\n    orderData: PropTypes.object.isRequired\n}\nexport default ReturnProductsSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Order/ReturnProductsSearchField.js","import _ from 'lodash'\nimport React from 'react'\nimport SearchField from './Basic/SearchField'\n\nconst Items = [\n    {id: 1, name: 'банковский счет'},\n    {id: 2, name: 'наличный'}\n]\n\nconst getOptions = (search) => {\n    return Promise.resolve(Items)\n}\n\nconst getItem = (id) => {\n    return Promise.resolve(\n        _.find(Items, (o) => { return o.id === _.toInteger(id) }))\n}\n\nconst CurrencySearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default CurrencySearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/PaymentTypeSearchField.js","import React from 'react'\nimport {compose, withState} from 'recompose'\nimport _ from 'lodash'\nimport {connect} from 'react-redux'\nimport {RadioButton, RadioButtonGroup} from 'material-ui/RadioButton'\nimport getConfig from '../../helpers/getConfig'\n\nconst enhance = compose(\n    connect((state) => {\n        const currency = _.get(state, ['form', 'PendingPaymentsCreateForm', 'values', 'cashbox', 'value', 'currency', 'name'])\n        return {\n            currency\n        }\n    }),\n    withState('course', 'setCourse', false)\n)\n\nconst PendingPaymentRadioButton = enhance((props) => {\n    const {input, currency} = props\n    if (currency === getConfig('PRIMARY_CURRENCY') || !currency) {\n        return null\n    }\n    return (\n        <div>\n            <div>Использовать</div>\n        <RadioButtonGroup name=\"now\" onChange={input.onChange} defaultSelected={true}>\n            <RadioButton\n                value={true}\n                label=\"Текущий курс\"\n            />\n            <RadioButton\n                value={false}\n                label=\"Курс при оформлении\"\n            />\n        </RadioButtonGroup>\n        </div>\n    )\n})\n\nexport default PendingPaymentRadioButton\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/PendingPaymentRadioButton.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\nimport axios from '../../../helpers/axios'\nimport * as PATH from '../../../constants/api'\nimport toCamelCase from '../../../helpers/toCamelCase'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.CASHBOX_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            const cashbox = _.get(data, 'results')\n            return Promise.resolve(toCamelCase(cashbox))\n        })\n}\n\nconst getItem = (value) => {\n    return axios().get(sprintf(PATH.CASHBOX_ITEM, _.get(value, 'id')))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst CashboxCustomField = (props) => {\n    return (\n        <SearchField\n            getValue={(value) => {\n                return value\n            }}\n            getText={(value) => { return _.get(value, ['name']) }}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={(value) => { return _.get(value, ['name']) }}\n            {...props}\n        />\n    )\n}\n\nexport default CashboxCustomField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/PendingPayments/CashboxCustomField.js","import React from 'react'\nimport _ from 'lodash'\nimport {compose, withState} from 'recompose'\nimport {RadioButton, RadioButtonGroup} from 'material-ui/RadioButton'\n\nconst enhance = compose(\n    withState('course', 'setCourse', false)\n)\n\nconst PriceMainRadionButton = enhance((props) => {\n    const {input, mergedList} = props\n\n    return (\n        <RadioButtonGroup name=\"isPrimary\" onChange={input.onChange} defaultSelected={true}>\n            {_.map(mergedList, (item, index) => {\n                return (\n                    <RadioButton\n                        className='dottedList'\n                        key={index}\n                        value={_.get(item, 'marketTypeId')}/>\n                )\n            })}\n        </RadioButtonGroup>\n    )\n})\n\nexport default PriceMainRadionButton\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/PriceMainRadioButton.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose} from 'recompose'\nimport {connect} from 'react-redux'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport getConfig from '../../../helpers/getConfig'\nimport numberFormat from '../../../helpers/numberFormat'\n\nconst enhance = compose(\n    connect((state) => {\n        const ONE = 1\n        const extra = _.get(state, ['product', 'extra', 'data'])\n        const extraLoading = _.get(state, ['product', 'extra', 'loading'])\n        const count = _.get(state, ['form', 'OrderCreateForm', 'values', 'amount']) || ONE\n        return {\n            extra,\n            count,\n            extraLoading\n        }\n    })\n)\n\nconst ProductCostField = enhance((props) => {\n    const {extra, extraLoading, count} = props\n    const ZERO = 0\n    const cost = _.toNumber(_.get(extra, ['product', 'price']) || ZERO) * _.toNumber(count)\n    return (\n        <div style={{marginTop: '20px', whiteSpace: 'nowrap'}}>\n            { extraLoading && <div><CircularProgress size={20} thickness={2} /></div> }\n            {!extraLoading && <div>{numberFormat(cost, getConfig('PRIMARY_CURRENCY'))}</div>}\n        </div>\n    )\n})\n\nexport default ProductCostField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Product/ProductCostField.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose} from 'recompose'\nimport {connect} from 'react-redux'\n\nconst enhance = compose(\n    connect((state) => {\n        const measurement = _.get(state, ['product', 'measurement', 'data'])\n        const measurementLoading = _.get(state, ['product', 'measurement', 'loading'])\n        return {\n            measurement,\n            measurementLoading\n        }\n    })\n)\n\nconst ProductMeasurementField = enhance((props) => {\n    const {measurement, measurementLoading} = props\n    return (\n        <div>\n            { measurementLoading && <div>...</div> }\n            {!measurementLoading && <div>{measurement}</div>}\n        </div>\n    )\n})\n\nexport default ProductMeasurementField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Product/ProductMeasurementField.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\nimport axios from '../../../helpers/axios'\nimport * as PATH from '../../../constants/api'\nimport toCamelCase from '../../../helpers/toCamelCase'\n\nconst getOptions = (search, parentType) => {\n    return axios().get(`${PATH.PRODUCT_TYPE_LIST}?search=${search || ''}`, {'params': {'parent': parentType}})\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\nconst custom = (parentType) => {\n    return (search) => {\n        return getOptions(search, parentType)\n    }\n}\n\nconst getItem = (id) => {\n    return axios().get(sprintf(PATH.PRODUCT_TYPE_ITEM, id))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\nconst ProductTypeChildSearchField = (props) => {\n    const parentType = _.get(props, 'parentType')\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={custom(parentType)}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default ProductTypeChildSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Product/ProductTypeChildSearchField.js","import sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\nimport axios from '../../../helpers/axios'\nimport * as PATH from '../../../constants/api'\nimport toCamelCase from '../../../helpers/toCamelCase'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.PRODUCT_TYPE_LIST}?search=${search || ''}`, {'params': {'parent': 0}})\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst getItem = (id) => {\n    return axios().get(sprintf(PATH.PRODUCT_TYPE_ITEM, id))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\nconst ProductTypeParentSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default ProductTypeParentSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Product/ProductTypeParentSearchField.js","import _ from 'lodash'\nimport React from 'react'\nimport {Row, Col} from 'react-flexbox-grid'\nimport {compose, withReducer, withHandlers} from 'recompose'\nimport injectSheet from 'react-jss'\nimport IconButton from 'material-ui/IconButton'\nimport FlatButton from 'material-ui/FlatButton'\nimport Groceries from '../../Images/groceries.svg'\nimport {connect} from 'react-redux'\nimport {Field} from 'redux-form'\nimport DeleteIcon from '../../DeleteIcon/index'\nimport ProductTypeSearchField from '../Product/ProductTypeSearchField'\nimport ProductCustomSearchField from '../Supply/ProductCustomSearchField'\nimport TextField from '../Basic/TextField'\nimport numberFormat from '../../../helpers/numberFormat'\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            display: 'flex',\n            flexDirection: 'column',\n            height: '100%',\n            position: 'relative'\n        },\n        error: {\n            textAlign: 'center',\n            fontSize: '14px',\n            color: 'red'\n        },\n        imagePlaceholder: {\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            '& img': {\n                width: '70px',\n                marginBottom: '20px',\n                marginTop: '25px'\n            }\n        },\n        table: {\n            marginTop: '20px',\n            '& .row': {\n                margin: '0',\n                height: '40px',\n                '&:first-child': {\n                    fontWeight: '600'\n                },\n                '&:last-child:after': {\n                    display: 'none'\n                },\n                '& > div': {\n                    textOverflow: 'ellipsis',\n                    whiteSpace: 'nowrap',\n                    padding: '0 8px',\n                    overflow: 'hidden',\n                    '&:first-child': {\n                        paddingLeft: '0'\n                    },\n                    '&:last-child': {\n                        paddingRight: '0'\n                    }\n                }\n            }\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        title: {\n            fontWeight: '600',\n            border: 'none !important'\n        },\n        headers: {\n            display: 'flex',\n            alignItems: 'center',\n            height: '40px',\n            justifyContent: 'space-between',\n            '& span': {\n                textTransform: 'lowercase !important'\n            }\n        },\n        background: {\n            display: 'flex',\n            padding: '20px 0',\n            margin: '-20px -30px 0',\n            backgroundColor: '#f1f5f8',\n            position: 'relative',\n            '& > div:last-child': {\n                alignSelf: 'center',\n                textAlign: 'center',\n                width: '20%'\n            }\n        },\n        bonusProduct: {\n            borderRight: '1px #ccc solid',\n            padding: '0 30px',\n            width: '40%'\n        },\n        giftProduct: {\n            extend: 'bonusProduct'\n        },\n        subTitle: {\n            fontWeight: 'bold',\n            marginBottom: '5px'\n        },\n        productAmount: {\n            display: 'flex',\n            justifyContent: 'space-between'\n        }\n    }),\n    connect((state) => {\n        const currency = _.get(state, ['form', 'PricesCreateForm', 'values', 'currency', 'text'])\n        return {\n            currency\n        }\n    }),\n    withReducer('state', 'dispatch', (state, action) => {\n        return {...state, ...action}\n    }, {open: false}),\n\n    withHandlers({\n        handleAdd: props => () => {\n            const bonusProduct = _.get(props, ['bonusProduct', 'input', 'value'])\n            const bonusAmount = _.get(props, ['bonusAmount', 'input', 'value'])\n            const giftProduct = _.get(props, ['giftProduct', 'input', 'value'])\n            const giftAmount = _.get(props, ['giftAmount', 'input', 'value'])\n            const onChange = _.get(props, ['bonusProducts', 'input', 'onChange'])\n            const bonusProducts = _.get(props, ['bonusProducts', 'input', 'value'])\n\n            if (!_.isEmpty(bonusProduct) && bonusAmount) {\n                let has = false\n                _.map(bonusProducts, (item) => {\n                    if (_.get(item, 'bonusProduct') === bonusProduct && _.get(item, 'giftProduct') === giftProduct) {\n                        item.bonusAmount = _.toInteger(item.bonusAmount) + _.toInteger(bonusAmount)\n                        item.giftAmount = _.toInteger(item.giftAmount) + _.toInteger(giftAmount)\n                        has = true\n                    }\n                })\n                if (!has) {\n                    onChange(_.union(bonusProducts, [{bonusProduct, bonusAmount, giftProduct, giftAmount}]))\n                    has = false\n                }\n            }\n        },\n\n        handleRemove: props => (listIndex) => {\n            const onChange = _.get(props, ['bonusProducts', 'input', 'onChange'])\n            const bonusProducts = _(props)\n                .get(['bonusProducts', 'input', 'value'])\n                .filter((item, index) => index !== listIndex)\n\n            onChange(bonusProducts)\n        }\n    })\n)\n\nconst PricesBonusProductField = ({classes, state, dispatch, handleAdd, handleRemove, ...defaultProps}) => {\n    const bonusProducts = _.get(defaultProps, ['bonusProducts', 'input', 'value']) || []\n    const error = _.get(defaultProps, ['bonusProducts', 'meta', 'error'])\n    return (\n        <div className={classes.wrapper}>\n            <div>\n                {!state.open && <div className={classes.headers} style={{marginTop: '-10px'}}>\n                    <div className={classes.title}>Список товаров</div>\n                    <FlatButton\n                        label=\"+ добавить товар\"\n                        style={{color: '#12aaeb'}}\n                        className={classes.span}\n                        onTouchTap={() => dispatch({open: !state.open})}\n                    />\n                </div>}\n                {state.open && <Row className={classes.background}>\n                    <div className={classes.bonusProduct}>\n                        <div className={classes.subTitle}>Бонусный товар</div>\n                        <Field\n                            label=\"Тип товара\"\n                            name=\"bonusProductType\"\n                            component={ProductTypeSearchField}\n                            className={classes.inputFieldCustom}\n                            fullWidth={true}\n                        />\n                        <div className={classes.productAmount}>\n                            <div style={{width: '70%'}}>\n                                <Field\n                                    label=\"Наименование\"\n                                    name=\"bonusProduct\"\n                                    component={ProductCustomSearchField}\n                                    className={classes.inputFieldCustom}\n                                    fullWidth={true}\n                                />\n                            </div>\n                            <div style={{width: '25%'}}>\n                                <Field\n                                    label=\"Кол-во\"\n                                    name=\"bonusAmount\"\n                                    component={TextField}\n                                    className={classes.inputFieldCustom}\n                                    fullWidth={true}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.giftProduct}>\n                        <div className={classes.subTitle}>Товар в подарок</div>\n                        <Field\n                            label=\"Тип товара\"\n                            name=\"giftProductType\"\n                            component={ProductTypeSearchField}\n                            className={classes.inputFieldCustom}\n                            fullWidth={true}\n                        />\n                        <div className={classes.productAmount}>\n                            <div style={{width: '70%'}}>\n                                <Field\n                                    label=\"Наименование\"\n                                    name=\"giftProduct\"\n                                    component={ProductCustomSearchField}\n                                    className={classes.inputFieldCustom}\n                                    fullWidth={true}\n                                />\n                            </div>\n                            <div style={{width: '25%'}}>\n                                <Field\n                                    label=\"Кол-во\"\n                                    name=\"giftAmount\"\n                                    component={TextField}\n                                    className={classes.inputFieldCustom}\n                                    fullWidth={true}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <FlatButton\n                            label=\"Добавить\"\n                            labelStyle={{color: '#12aaeb'}}\n                            onTouchTap={handleAdd}/>\n                    </div>\n                </Row>}\n            </div>\n            {error && <div className={classes.error}>{error}</div>}\n            {!_.isEmpty(bonusProducts)\n                ? <div className={classes.table}>\n                    <div className={classes.subTitle}>Список бонусных товаров</div>\n                    <div>\n                        <Row className=\"dottedList\">\n                            <Col style={{width: '34%'}}>Бонусный товар</Col>\n                            <Col style={{width: '11%'}}>Кол-во</Col>\n                            <Col style={{width: '34%'}}>Подарок</Col>\n                            <Col style={{width: '11%'}}>Кол-во</Col>\n                        </Row>\n                        {_.map(bonusProducts, (item, index) => {\n                            const bonusProduct = _.get(item, ['bonusProduct', 'value', 'name'])\n                            const bonusMeasurement = _.get(item, ['bonusProduct', 'value', 'measurement', 'name'])\n                            const bonusAmount = numberFormat(_.get(item, 'bonusAmount'), bonusMeasurement)\n                            const giftProduct = _.get(item, ['giftProduct', 'value', 'name'])\n                            const giftMeasurement = _.get(item, ['giftProduct', 'value', 'measurement', 'name'])\n                            const giftAmount = numberFormat(_.get(item, 'giftAmount'), giftMeasurement)\n\n                            return (\n                                <Row key={index} className=\"dottedList\">\n                                    <Col style={{width: '34%'}}>{bonusProduct}</Col>\n                                    <Col style={{width: '11%'}}>{bonusAmount}</Col>\n                                    <Col style={{width: '34%'}}>{giftProduct}</Col>\n                                    <Col style={{width: '11%'}}>{giftAmount}</Col>\n                                    <Col style={{width: '10%'}}>\n                                        <IconButton onTouchTap={() => handleRemove(index)}>\n                                            <DeleteIcon color=\"#666666\"/>\n                                        </IconButton>\n                                    </Col>\n                                </Row>\n                            )\n                        })}\n                    </div>\n                </div>\n                : <div className={classes.imagePlaceholder}>\n                    <div style={{textAlign: 'center', color: '#adadad'}}>\n                        <img src={Groceries} alt=\"\"/>\n                        <div>Вы еще не выбрали ни одного товара. <br/> <a onClick={() => dispatch({open: !state.open})}>Добавить</a>\n                            товар?\n                        </div>\n                    </div>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default enhance(PricesBonusProductField)\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Promotions/PricesBonusProductField.js","import _ from 'lodash'\nimport React from 'react'\nimport {Row, Col} from 'react-flexbox-grid'\nimport {compose, withReducer, withHandlers} from 'recompose'\nimport injectSheet from 'react-jss'\nimport IconButton from 'material-ui/IconButton'\nimport FlatButton from 'material-ui/FlatButton'\nimport Groceries from '../../Images/groceries.svg'\nimport {connect} from 'react-redux'\nimport {Field} from 'redux-form'\nimport DeleteIcon from '../../DeleteIcon/index'\nimport ProductTypeSearchField from '../Product/ProductTypeSearchField'\nimport ProductCustomSearchField from '../Supply/ProductCustomSearchField'\nimport TextField from '../Basic/TextField'\nimport Check from 'material-ui/svg-icons/navigation/check'\nimport numberFormat from '../../../helpers/numberFormat'\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            display: 'flex',\n            flexDirection: 'column',\n            height: '100%',\n            position: 'relative'\n        },\n        error: {\n            textAlign: 'center',\n            fontSize: '14px',\n            color: 'red'\n        },\n        imagePlaceholder: {\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            '& img': {\n                width: '70px',\n                marginBottom: '20px',\n                marginTop: '25px'\n            }\n        },\n        table: {\n            marginTop: '20px',\n            '& .row': {\n                margin: '0',\n                height: '40px',\n                '&:first-child': {\n                    fontWeight: '600'\n                },\n                '&:last-child:after': {\n                    display: 'none'\n                },\n                '& > div': {\n                    textOverflow: 'ellipsis',\n                    whiteSpace: 'nowrap',\n                    padding: '0 8px',\n                    overflow: 'hidden',\n                    '&:first-child': {\n                        paddingLeft: '0'\n                    },\n                    '&:last-child': {\n                        paddingRight: '0'\n                    }\n                }\n            }\n        },\n        subTitle: {\n            fontWeight: 'bold',\n            marginBottom: '5px'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        title: {\n            fontWeight: '600',\n            border: 'none !important'\n        },\n        headers: {\n            display: 'flex',\n            alignItems: 'center',\n            height: '40px',\n            justifyContent: 'space-between',\n            '& span': {\n                textTransform: 'lowercase !important'\n            }\n        },\n        background: {\n            display: 'flex',\n            padding: '10px',\n            margin: '-20px -30px 0',\n            backgroundColor: '#f1f5f8',\n            position: 'relative',\n            zIndex: '2',\n            '& > div': {\n                marginTop: '-2px !important',\n                width: '30%'\n            },\n            '& > button > div > span': {\n                padding: '0 !important'\n            },\n            '& > div:last-child': {\n                width: '100% !important'\n            },\n            '& button': {\n                marginTop: '10px !important'\n            }\n        }\n    }),\n    connect((state) => {\n        const currency = _.get(state, ['form', 'PricesCreateForm', 'values', 'currency', 'text'])\n        return {\n            currency\n        }\n    }),\n    withReducer('state', 'dispatch', (state, action) => {\n        return {...state, ...action}\n    }, {open: false}),\n\n    withHandlers({\n        handleAdd: props => () => {\n            const product = _.get(props, ['product', 'input', 'value'])\n            const amount = _.get(props, ['amount', 'input', 'value'])\n            const currency = _.get(props, ['currency'])\n            const onChange = _.get(props, ['products', 'input', 'onChange'])\n            const products = _.get(props, ['products', 'input', 'value'])\n\n            if (!_.isEmpty(product) && amount) {\n                let has = false\n                _.map(products, (item) => {\n                    if (_.get(item, 'product') === product) {\n                        item.amount = _.toInteger(item.amount) + _.toInteger(amount)\n                        has = true\n                    }\n                })\n                if (!has) {\n                    onChange(_.union(products, [{product, amount, currency}]))\n                    has = false\n                }\n            }\n        },\n\n        handleRemove: props => (listIndex) => {\n            const onChange = _.get(props, ['products', 'input', 'onChange'])\n            const products = _(props)\n                .get(['products', 'input', 'value'])\n                .filter((item, index) => index !== listIndex)\n\n            onChange(products)\n        }\n    })\n)\n\nconst PricesListProductField = ({classes, state, dispatch, handleAdd, handleRemove, ...defaultProps}) => {\n    const products = _.get(defaultProps, ['products', 'input', 'value']) || []\n    const error = _.get(defaultProps, ['products', 'meta', 'error'])\n    return (\n        <div className={classes.wrapper}>\n            <div>\n                {!state.open && <div className={classes.headers} style={{marginTop: '-10px'}}>\n                    <div className={classes.title}>Список товаров</div>\n                    <FlatButton\n                        label=\"+ добавить товар\"\n                        style={{color: '#12aaeb'}}\n                        className={classes.span}\n                        onTouchTap={() => dispatch({open: !state.open})}\n                    />\n                </div>}\n                {state.open && <Row className={classes.background}>\n                    <Col xs={4}>\n                        <Field\n                            label=\"Тип товара\"\n                            name=\"type\"\n                            component={ProductTypeSearchField}\n                            className={classes.inputFieldCustom}\n                            fullWidth={true}\n                        />\n                    </Col>\n                    <Col xs={5}>\n                        <Field\n                            label=\"Наименование\"\n                            name=\"product\"\n                            component={ProductCustomSearchField}\n                            className={classes.inputFieldCustom}\n                            fullWidth={true}\n                        />\n                    </Col>\n                    <Col xs={2}>\n                        <Field\n                            label=\"Кол-во\"\n                            name=\"amount\"\n                            component={TextField}\n                            className={classes.inputFieldCustom}\n                            fullWidth={true}\n                        />\n                    </Col>\n                    <Col xs={1}>\n                        <IconButton onTouchTap={handleAdd} disableTouchRipple={true}>\n                            <Check color=\"#12aaeb\"/>\n                        </IconButton>\n                    </Col>\n                </Row>}\n            </div>\n            {error && <div className={classes.error}>{error}</div>}\n            {!_.isEmpty(products)\n                ? <div className={classes.table}>\n                    <div className={classes.subTitle}>Список бонусных товаров</div>\n                    <div>\n                        <Row className=\"dottedList\">\n                            <Col style={{width: '70%'}}>Бонусный товар</Col>\n                            <Col style={{width: '20%'}}>Кол-во</Col>\n                        </Row>\n                        {_.map(products, (item, index) => {\n                            const product = _.get(item, ['product', 'value', 'name'])\n                            const measurement = _.get(item, ['product', 'value', 'measurement', 'name'])\n                            const amount = numberFormat(_.get(item, 'amount'), measurement)\n\n                            return (\n                                <Row key={index} className=\"dottedList\">\n                                    <Col style={{width: '70%'}}>{product}</Col>\n                                    <Col style={{width: '20%'}}>{amount}</Col>\n                                    <Col style={{width: '10%'}}>\n                                        <IconButton onTouchTap={() => handleRemove(index)}>\n                                            <DeleteIcon color=\"#666666\"/>\n                                        </IconButton>\n                                    </Col>\n                                </Row>\n                            )\n                        })}\n                    </div>\n                </div>\n                : <div className={classes.imagePlaceholder}>\n                    <div style={{textAlign: 'center', color: '#adadad'}}>\n                        <img src={Groceries} alt=\"\"/>\n                        <div>Вы еще не выбрали ни одного товара. <br/> <a onClick={() => dispatch({open: !state.open})}>Добавить</a>\n                            товар?\n                        </div>\n                    </div>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default enhance(PricesListProductField)\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Promotions/PricesListProductField.js","import React from 'react'\nimport {RadioButton, RadioButtonGroup} from 'material-ui/RadioButton'\n\nconst PromotionsRadioButton = (props) => {\n    const {input, selectedType} = props\n    return (\n        <div>\n            <RadioButtonGroup name=\"promotionType\" onChange={input.onChange} defaultSelected={selectedType}>\n                <RadioButton\n                    value=\"discount\"\n                    label=\"Скидочная акция\"\n                    disableTouchRipple={true}\n                />\n                <RadioButton\n                    value=\"bonus\"\n                    label=\"Бонусная акция\"\n                    disableTouchRipple={true}\n                />\n            </RadioButtonGroup>\n        </div>\n    )\n}\n\nexport default PromotionsRadioButton\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Promotions/PromotionsRadioButton.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport {RadioButton, RadioButtonGroup} from 'material-ui/RadioButton'\nimport {connect} from 'react-redux'\n\nconst enhance = compose(\n    injectSheet({\n        radioButton: {\n            marginTop: '10px',\n            '&>div': {\n                marginBottom: '10px'\n            },\n            '& svg': {\n                width: '20px !important',\n                height: '20px !important'\n            },\n            '& label': {\n                top: '-2px',\n                marginLeft: '-7px'\n            }\n        },\n        error: {\n            textAlign: 'center',\n            fontSize: '14px',\n            color: 'red'\n        }\n    })\n    ,\n    connect((state) => {\n        const contacts = _.get(state, ['provider', 'contacts', 'data'])\n        const contactsLoading = _.get(state, ['provider', 'contacts', 'loading'])\n        const detail = _.get(state, ['supply', 'item', 'data'])\n        return {\n            contacts,\n            contactsLoading,\n            detail\n        }\n    })\n)\n\nconst ProviderContactsField = enhance((props) => {\n    const {classes, contacts, contactsLoading, input, meta: {error}, detail} = props\n    return (\n        <div>\n            { contactsLoading && <div>Загрузка ...</div> }\n            {error && <div className={classes.error}>{error}</div>}\n            {!contactsLoading && <RadioButtonGroup name=\"contact\" className={classes.radioButton}\n                                                   onChange={input.onChange} defaultSelected={input.value}>\n                {_.map(contacts, (item) => {\n                    const id = _.get(item, 'id')\n                    const forLabel = _.get(item, 'name') + ' ' + _.get(item, 'phone') + ' ' + _.get(item, 'email')\n                    return (\n                        <RadioButton key={id}\n                                     value={id}\n                                     label={forLabel}\n                                     checked={!_.get(detail, ['contact', 'id']) === _.get(item, 'id')}\n                        />\n                    )\n                })}\n            </RadioButtonGroup>}\n        </div>\n    )\n})\n\nexport default ProviderContactsField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Provider/ProviderContactsField.js","import React from 'react'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport ContentRemove from 'material-ui/svg-icons/content/remove'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport {Field} from 'redux-form'\nimport TextField from '../Basic/TextField'\n\n/**\n * {['contacts', 'contactName', 'email', 'phoneNumber']}\n */\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            marginTop: '20px',\n            display: 'flex',\n            flexDirection: 'column'\n        },\n        title: {\n            paddingTop: '15px',\n            fontWeight: 'bold',\n            color: 'black !important'\n        },\n        headers: {\n            height: '0',\n            position: 'relative',\n            top: '-30px',\n            '& button': {\n                position: 'absolute !important',\n                right: '0 !important'\n            }\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        flex: {\n            display: 'flex',\n            '& div:first-child': {\n                marginRight: '10px'\n            }\n        },\n        contactBlock: {\n            marginBottom: '15px',\n            paddingBottom: '15px',\n            '&:last-child': {\n                margin: '0'\n            }\n        }\n    })\n)\n\nconst ProviderContactsListField = ({classes, fields}) => {\n    const ONE = 1\n    const handleTouchTap = (index) => {\n        const LAST_INDEX = index + ONE\n\n        if (fields.length === LAST_INDEX) {\n            return fields.push({})\n        }\n\n        return fields.remove(index)\n    }\n\n    return (\n        <div>\n            {fields.map((contact, index) => {\n                return (\n                    <div className={classes.contactBlock} key={index}>\n                        <div className={classes.headers}>\n                            <FloatingActionButton\n                                backgroundColor=\"#12aaeb\"\n                                onTouchTap={() => handleTouchTap(index)}\n                                mini={true}>\n                                {fields.length !== index + ONE ? <ContentRemove/> : <ContentAdd />}\n                            </FloatingActionButton>\n                        </div>\n                        <div >\n                            <Field\n                                label=\"Контактное лицо\"\n                                name={`${contact}.name`}\n                                component={TextField}\n                                className={classes.inputFieldCustom}\n                                fullWidth={true}\n                            />\n\n                            <div className={classes.flex}>\n                                <Field\n                                    label=\"Email\"\n                                    name={`${contact}.email`}\n                                    component={TextField}\n                                    className={classes.inputFieldCustom}\n                                    fullWidth={true}\n                                />\n\n                                <Field\n                                    label=\"Телефон номер\"\n                                    name={`${contact}.phone`}\n                                    component={TextField}\n                                    className={classes.inputFieldCustom}\n                                    fullWidth={true}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default enhance(ProviderContactsListField)\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Provider/ProviderContactsListField.js","import sprintf from 'sprintf'\nimport _ from 'lodash'\nimport React from 'react'\nimport {compose} from 'recompose'\nimport SearchField from '../Basic/SearchField'\nimport axios from '../../../helpers/axios'\nimport * as PATH from '../../../constants/api'\nimport toCamelCase from '../../../helpers/toCamelCase'\nimport * as actionTypes from '../../../constants/actionTypes'\nimport {connect} from 'react-redux'\n\nconst getOptions = (search, type) => {\n    return axios().get(`${PATH.PRODUCT_LIST}?type=${type || ''}&search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst setMeasurementAction = (data, loading) => {\n    return {\n        type: actionTypes.PRODUCT_MEASUREMENT,\n        data: data,\n        loading: loading\n    }\n}\n\nconst getItem = (id, dispatch) => {\n    dispatch(setMeasurementAction(null, true))\n    return axios().get(sprintf(PATH.PRODUCT_ITEM, _.get(id, 'id')))\n        .then(({data}) => {\n            dispatch(setMeasurementAction(_.get(data, ['measurement', 'name']), false))\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst enhance = compose(\n    connect((state, props) => {\n        const dispatch = _.get(props, 'dispatch')\n        return {\n            state,\n            dispatch\n        }\n    })\n)\n\nconst ProductCustomSearchField = enhance((props) => {\n    const {dispatch, state, ...defaultProps} = props\n    const test = (id) => {\n        return getItem(id, dispatch)\n    }\n    const type = _.get(state, ['form', 'RemainderTransferForm', 'values', 'productType', 'value'])\n    return (\n        <SearchField\n            getValue={(value) => {\n                return value\n            }}\n            getText={(value) => {\n                return _.get(value, ['name'])\n            }}\n            getOptions={ (search) => { return getOptions(search, type) }}\n            getItem={test}\n            getItemText={(value) => {\n                return _.get(value, ['name'])\n            }}\n            {...defaultProps}\n        />\n    )\n})\n\nexport default ProductCustomSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Remainder/ProductCustomSearchField.js","import sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from './Basic/SearchField'\nimport axios from '../../helpers/axios'\nimport * as PATH from '../../constants/api'\nimport toCamelCase from '../../helpers/toCamelCase'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.SHIFT_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst getItem = (id) => {\n    return axios().get(sprintf(PATH.SHIFT_ITEM, id))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst ShiftSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default ShiftSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/ShiftSearchField.js","import sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\nimport axios from '../../../helpers/axios'\nimport * as PATH from '../../../constants/api'\nimport toCamelCase from '../../../helpers/toCamelCase'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.SHOP_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst getItem = (id) => {\n    return axios().get(sprintf(PATH.SHOP_ITEM, id))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst MarketSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default MarketSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Shop/MarketSearchField.js","import _ from 'lodash'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\n\nconst Items = [\n    {id: 1, name: 'Активен'},\n    {id: 2, name: 'Неактивен'}\n]\n\nconst getOptions = (search) => {\n    return Promise.resolve(Items)\n}\n\nconst getItem = (id) => {\n    return Promise.resolve(\n        _.find(Items, (o) => { return o.id === _.toInteger(id) }))\n}\n\nconst ShopStatusSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default ShopStatusSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Shop/ShopStatusSearchField.js","import _ from 'lodash'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\n\nconst Items = [\n    {id: 1, name: 'Ежедневно'},\n    {id: 2, name: 'Раз в неделю'},\n    {id: 3, name: '2 раза в неделю'},\n    {id: 4, name: 'Через день'}\n]\n\nconst getOptions = (search) => {\n    return Promise.resolve(Items)\n}\n\nconst getItem = (id) => {\n    return Promise.resolve(\n        _.find(Items, (o) => { return o.id === _.toInteger(id) }))\n}\n\nconst VisitFrequencySearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default VisitFrequencySearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Shop/VisitFrequencySearchField.js","import _ from 'lodash'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\n\nconst Items = [\n    {id: 0, name: 'Основной'},\n    {id: 1, name: 'Производственный'}\n]\n\nconst getOptions = (search) => {\n    return Promise.resolve(Items)\n}\n\nconst getItem = (id) => {\n    return Promise.resolve(\n        _.find(Items, (o) => { return o.id === _.toInteger(id) }))\n}\n\nconst CurrencySearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default CurrencySearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Stock/StockTypeSearchField.js","import _ from 'lodash'\nimport React from 'react'\nimport {connect} from 'react-redux'\nimport SearchField from '../Basic/SearchField'\nimport {compose} from 'recompose'\n\nconst enhance = compose(\n    connect((state) => {\n        const products = _.get(state, ['stockReceive', 'item', 'data', 'products'])\n        return {\n            products\n        }\n    })\n)\n\nconst StockReceiveProductSearchField = enhance((props) => {\n    const productItems = _.get(props, 'products')\n\n    return (\n        <SearchField\n            getValue={(value) => { return value }}\n            getText={(value) => { return _.get(value, ['product', 'name']) }}\n            getOptions={() => { return Promise.resolve(productItems) }}\n            getItem={(value) => {\n                return Promise.resolve(\n                    _.find(productItems, (o) => { return _.toInteger(_.get(o, ['product', 'id'])) === _.toInteger(_.get(value, ['product', 'id'])) }))\n            }}\n                getItemText={(value) => { return _.get(value, ['product', 'name']) }}\n            {...props}\n        />\n    )\n})\n\nexport default StockReceiveProductSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/StockReceive/StockReceiveProductSearchField.js","import _ from 'lodash'\nimport React from 'react'\nimport SearchField from './Basic/SearchField'\n\nconst Items = [\n    {id: 1, name: 'In'},\n    {id: 2, name: 'Out'}\n]\nconst getOptions = () => {\n    return Promise.resolve(Items)\n}\n\nconst getItem = (id) => {\n    return Promise.resolve(\n        _.find(Items, (o) => { return o.id === _.toInteger(id) }))\n}\n\nconst StockStatusSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default StockStatusSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/StockStatusSearchField.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose, withReducer, withHandlers} from 'recompose'\nimport injectSheet from 'react-jss'\nimport IconButton from 'material-ui/IconButton'\nimport FlatButton from 'material-ui/FlatButton'\nimport Groceries from '../../Images/groceries.svg'\nimport {connect} from 'react-redux'\nimport numberFormat from '../../../helpers/numberFormat'\nimport {\n    Table,\n    TableBody,\n    TableHeader,\n    TableHeaderColumn,\n    TableRow,\n    TableRowColumn\n} from 'material-ui/Table'\nimport DeleteIcon from '../../DeleteIcon/index'\nimport normalizeNumber from '../normalizers/normalizeNumber'\nimport ProductCustomSearchField from '../Supply/ProductCustomSearchField'\nimport TextField from '../Basic/TextField'\nimport Check from 'material-ui/svg-icons/navigation/check'\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            display: 'flex',\n            flexDirection: 'column',\n            height: '100%',\n            position: 'relative'\n        },\n        error: {\n            textAlign: 'center',\n            fontSize: '14px',\n            color: 'red'\n        },\n        imagePlaceholder: {\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            '& img': {\n                width: '70px',\n                marginBottom: '20px',\n                marginTop: '25px'\n            }\n        },\n        table: {\n            marginTop: '20px'\n        },\n        tableTitle: {\n            fontWeight: '600',\n            color: '#333 !important',\n            textAlign: 'left'\n        },\n        tableRow: {\n            height: '40px !important',\n            border: 'none !important',\n            '& td:first-child': {\n                width: '250px'\n            },\n            '& tr': {\n                border: 'none !important'\n            },\n            '& td': {\n                height: '40px !important',\n                padding: '0 5px !important'\n            },\n            '& th:first-child': {\n                width: '250px',\n                textAlign: 'left !important',\n                fontWeight: '600 !important'\n            },\n            '& th': {\n                textAlign: 'left !important',\n                border: 'none !important',\n                height: '40px !important',\n                padding: '0 5px !important',\n                fontWeight: '600 !important'\n            }\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        inputFieldCustom2: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '5px !important'\n            }\n        },\n        title: {\n            fontWeight: '600',\n            border: 'none !important'\n        },\n        headers: {\n            display: 'flex',\n            alignItems: 'center',\n            height: '40px',\n            justifyContent: 'space-between',\n            '& span': {\n                textTransform: 'lowercase !important'\n            }\n        },\n        background: {\n            display: 'flex',\n            alignItems: 'flex-end',\n            padding: '10px',\n            marginTop: '5px',\n            backgroundColor: '#f1f5f8',\n            position: 'relative',\n            zIndex: '2',\n            '& > div': {\n                marginTop: '-2px !important',\n                marginRight: '20px'\n            },\n            '& > button > div > span': {\n                padding: '0 !important'\n            },\n            '& > div:last-child': {\n                width: '100% !important'\n            },\n            '& button': {\n                alignSelf: 'center'\n            }\n        }\n    }),\n    connect((state) => {\n        const currency = _.get(state, ['form', 'SupplyCreateForm', 'values', 'currency', 'text'])\n        const measurement = _.get(state, ['form', 'SupplyCreateForm', 'values', 'product', 'value', 'measurement', 'name'])\n        return {\n            currency,\n            measurement\n        }\n    }),\n    withReducer('state', 'dispatch', (state, action) => {\n        return {...state, ...action}\n    }, {open: false}),\n\n    withHandlers({\n        handleAdd: props => () => {\n            const product = _.get(props, ['product', 'input', 'value'])\n            const amount = _.get(props, ['amount', 'input', 'value'])\n            const cost = _.get(props, ['cost', 'input', 'value'])\n            const currency = _.get(props, ['currency'])\n            const measurement = _.get(props, ['measurement'])\n            const onChange = _.get(props, ['products', 'input', 'onChange'])\n            const products = _.get(props, ['products', 'input', 'value'])\n\n            if (!_.isEmpty(product) && amount && cost) {\n                let has = false\n                _.map(products, (item) => {\n                    if (_.get(item, 'product') === product) {\n                        item.amount = _.toInteger(item.amount) + _.toInteger(amount)\n                        item.cost = _.toInteger(item.cost) + _.toInteger(cost)\n                        has = true\n                    }\n                })\n                const fields = ['product', 'amount', 'cost']\n                for (let i = 0; i < fields.length; i++) {\n                    let newChange = _.get(props, [fields[i], 'input', 'onChange'])\n                    props.dispatch(newChange(null))\n                }\n\n                if (!has) {\n                    onChange(_.union(products, [{product, amount, cost, currency, measurement}]))\n                    has = false\n                }\n            }\n        },\n\n        handleRemove: props => (listIndex) => {\n            const onChange = _.get(props, ['products', 'input', 'onChange'])\n            const products = _(props)\n                .get(['products', 'input', 'value'])\n                .filter((item, index) => index !== listIndex)\n\n            onChange(products)\n        }\n    })\n)\n\nconst SupplyListProductField = ({classes, state, dispatch, handleAdd, handleRemove, currency, measurement, ...defaultProps}) => {\n    const products = _.get(defaultProps, ['products', 'input', 'value']) || []\n    const error = _.get(defaultProps, ['products', 'meta', 'error'])\n    return (\n        <div className={classes.wrapper}>\n            <div>\n                <div className={classes.headers} style={{marginTop: '-10px'}}>\n                    <div className={classes.title}>Список товаров</div>\n                    <FlatButton\n                        label=\"+ добавить товар\"\n                        style={{color: '#12aaeb'}}\n                        className={classes.span}\n                        onTouchTap={() => dispatch({open: !state.open})}\n                    />\n                </div>\n                {state.open && <div className={classes.background}>\n                    <ProductCustomSearchField\n                        label=\"Наименование товара\"\n                        className={classes.inputFieldCustom}\n                        {..._.get(defaultProps, 'product')}\n                    />\n                    <TextField\n                        label=\"Кол-во\"\n                        className={classes.inputFieldCustom2}\n                        {..._.get(defaultProps, 'amount')}\n                    />\n                    <div style={{paddingBottom: '15px'}}>\n                        {measurement}\n                    </div>\n                    <TextField\n                        label=\"Сумма за ед\"\n                        className={classes.inputFieldCustom2}\n                        normalize={normalizeNumber}\n                        {..._.get(defaultProps, 'cost')}\n                    />\n                    <IconButton\n                        label=\"Применить\"\n                        onTouchTap={handleAdd}>\n                        <Check color=\"#12aaeb\"/>\n                    </IconButton>\n                </div>}\n            </div>\n            {error && <div className={classes.error}>{error}</div>}\n            {!_.isEmpty(products) ? <div className={classes.table}>\n                <Table\n                    fixedHeader={true}\n                    fixedFooter={false}\n                    multiSelectable={false}>\n                    <TableHeader\n                        displaySelectAll={false}\n                        adjustForCheckbox={false}\n                        enableSelectAll={false}\n                        className={classes.title}>\n                        <TableRow className={classes.tableRow}>\n                            <TableHeaderColumn\n                                className={classes.tableTitle}>Наименование</TableHeaderColumn>\n                            <TableHeaderColumn className={classes.tableTitle}>Кол-во</TableHeaderColumn>\n                            <TableHeaderColumn className={classes.tableTitle}>Сумма (ед.)</TableHeaderColumn>\n                            <TableHeaderColumn className={classes.tableTitle}>Всего</TableHeaderColumn>\n                            <TableHeaderColumn></TableHeaderColumn>\n                        </TableRow>\n                    </TableHeader>\n                    <TableBody\n                        displayRowCheckbox={false}\n                        deselectOnClickaway={false}\n                        showRowHover={false}\n                        stripedRows={false}>\n                        {_.map(products, (item, index) => (\n                            <TableRow key={index} className={classes.tableRow}>\n                                <TableRowColumn>{_.get(item, ['product', 'value', 'name'])}</TableRowColumn>\n                                <TableRowColumn>\n                                    {_.get(item, 'amount')} {_.get(item, ['product', 'value', 'measurement', 'name'])}</TableRowColumn>\n                                <TableRowColumn>{numberFormat(_.get(item, 'cost'), currency)}</TableRowColumn>\n                                <TableRowColumn>{numberFormat(_.get(item, 'cost') * _.get(item, 'amount'), currency)}</TableRowColumn>\n                                <TableRowColumn style={{textAlign: 'right'}}>\n                                    <IconButton onTouchTap={() => handleRemove(index)}>\n                                        <DeleteIcon color=\"#666666\"/>\n                                    </IconButton>\n                                </TableRowColumn>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </div>\n                : <div className={classes.imagePlaceholder}>\n                    <div style={{textAlign: 'center', color: '#adadad'}}>\n                        <img src={Groceries} alt=\"\"/>\n                        <div>Вы еще не выбрали ни одного товара. <br/> <a onClick={() => dispatch({open: !state.open})}>Добавить</a>\n                            товар?\n                        </div>\n                    </div>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default enhance(SupplyListProductField)\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Supply/SupplyListProductField.js","import _ from 'lodash'\nimport React from 'react'\nimport SearchField from './Basic/SearchField'\n\nconst Items = [\n    {id: 1, name: 'расход'},\n    {id: 2, name: 'доход'}\n]\n\nconst getOptions = (search) => {\n    return Promise.resolve(Items)\n}\n\nconst getItem = (id) => {\n    return Promise.resolve(\n        _.find(Items, (o) => { return o.id === _.toInteger(id) }))\n}\n\nconst TransactionTypeSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default TransactionTypeSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/TransactionTypeSearchField.js","import sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\nimport axios from '../../../helpers/axios'\nimport * as PATH from '../../../constants/api'\nimport toCamelCase from '../../../helpers/toCamelCase'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.USERS_GROUP}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst getItem = (id) => {\n    return axios().get(sprintf(PATH.USERS_GROUP_ITEM, id))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst UsersGroupSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('name')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={SearchField.defaultGetText('name')}\n            {...props}\n        />\n    )\n}\n\nexport default UsersGroupSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Users/UsersGroupSearchField.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport React from 'react'\nimport SearchField from '../Basic/SearchField'\nimport axios from '../../../helpers/axios'\nimport * as PATH from '../../../constants/api'\nimport toCamelCase from '../../../helpers/toCamelCase'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.USERS_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst getItem = (id) => {\n    return axios().get(sprintf(PATH.USERS_ITEM, id))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst getText = (obj) => {\n    return _.get(obj, 'firstName') + ' ' + _.get(obj, 'secondName')\n}\n\nconst UsersSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={getText}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={getText}\n            {...props}\n        />\n    )\n}\n\nexport default UsersSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/Users/UsersSearchField.js","import sprintf from 'sprintf'\nimport _ from 'lodash'\nimport React from 'react'\nimport SearchField from './Basic/SearchField'\nimport axios from '../../helpers/axios'\nimport * as PATH from '../../constants/api'\nimport toCamelCase from '../../helpers/toCamelCase'\n\nconst getOptions = (search) => {\n    return axios().get(`${PATH.ZONE_LIST}?search=${search || ''}`)\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data.results))\n        })\n}\n\nconst getItem = (id) => {\n    return axios().get(sprintf(PATH.ZONE_ITEM, id))\n        .then(({data}) => {\n            return Promise.resolve(toCamelCase(data))\n        })\n}\n\nconst itemText = (obj) => {\n    return _.get(obj, ['properties', 'title'])\n}\nconst ZoneSearchField = (props) => {\n    return (\n        <SearchField\n            getValue={SearchField.defaultGetValue('id')}\n            getText={SearchField.defaultGetText('title')}\n            getOptions={getOptions}\n            getItem={getItem}\n            getItemText={itemText}\n            {...props}\n        />\n    )\n}\n\nexport default ZoneSearchField\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/ZoneSearchField.js","const normalizeDiscount = value => {\n    const MAX = 100\n    if (!value) {\n        return value\n    }\n\n    return value > MAX ? MAX : value\n}\n\nexport default normalizeDiscount\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm/normalizers/normalizeDiscount.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose, withState} from 'recompose'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\nimport {Row, Col} from 'react-flexbox-grid'\nimport Pagination from '../GridList/GridListNavPagination'\nimport numberFormat from '../../helpers/numberFormat'\nimport moment from 'moment'\nimport LinearProgress from '../LinearProgress'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            display: 'flex',\n            justifyContent: 'center',\n            width: '100%',\n            background: '#fff'\n        },\n        wrapper: {\n            height: 'auto',\n            transition: 'max-height 500ms ease !important',\n            overflowY: 'auto',\n            '& .progress': {\n                background: 'transparent'\n            }\n        },\n        title: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            width: '100%',\n            height: '48px',\n            fontWeight: '600',\n            borderBottom: '1px #efefef solid'\n\n        },\n        content: {\n            width: '100%',\n            overflow: 'hidden',\n            '& > .row': {\n                overflowY: 'auto',\n                overflowX: 'hidden',\n                margin: '0 -0.5rem',\n                padding: '0'\n            },\n            '& > .row:first-child': {\n                fontWeight: '600',\n                lineHeight: '20px'\n            },\n            '& .dottedList:last-child:after': {\n                content: '\"\"',\n                backgroundImage: 'none'\n            }\n        },\n        error: {\n            color: '#e57373'\n        },\n        success: {\n            color: '#81c784'\n        }\n\n    }),\n    withState('openDetails', 'setOpenDetails', false)\n)\n\nconst RemainderDetails = enhance((props) => {\n    const {classes, filterItem, detailData} = props\n    const isLoading = _.get(detailData, 'detailLoading')\n    const measurement = _.get(detailData, ['currentRow', '0', 'measurement', 'name'])\n\n    return (\n        <div className={classes.wrapper}>\n            {isLoading ? <LinearProgress />\n            : <div className={classes.content}>\n                    <div className={classes.title}>\n                        <div className={classes.titleLabel}>Парти товаров</div>\n                        <Pagination filter={filterItem}/>\n                    </div>\n                    <Row className='dottedList'>\n                        <Col xs={4}>Код</Col>\n                        <Col xs={4}>Дата приемки</Col>\n                        <Col xs={3}>Кол-во</Col>\n                        <Col xs={1}>Статус</Col>\n                    </Row>\n                    {_.map(_.get(detailData, ['data', 'results']), (item) => {\n                        const barcode = _.get(item, 'barcode')\n                        const balance = numberFormat(_.get(item, 'balance'), measurement)\n                        const createdDate = moment(_.get(item, 'createdDate')).format(('DD.MM.YYYY'))\n                        const isDefect = _.get(item, 'isDefect') ? 'Брак' : 'OK'\n                        return (\n                            <Row key={barcode} className='dottedList'>\n                                <Col xs={4}>{barcode}</Col>\n                                <Col xs={4}>{createdDate}</Col>\n                                <Col xs={3}>{balance} </Col>\n                                <Col xs={1}> <span className={_.get(item, 'isDefect') ? classes.error : classes.success }>{isDefect}</span></Col>\n                            </Row>\n                        )\n                    })}\n                </div>\n            }\n        </div>\n    )\n})\n\nRemainderDetails.propTypes = {\n    filterItem: PropTypes.object.isRequired,\n    detailData: PropTypes.object.isRequired,\n    handleCloseDetail: PropTypes.func.isRequired\n}\n\nexport default RemainderDetails\n\n\n\n// WEBPACK FOOTER //\n// src/components/Remainder/RemainderDetails.js","import _ from 'lodash'\nimport React from 'react'\nimport sprintf from 'sprintf'\nimport PropTypes from 'prop-types'\nimport {Row, Col} from 'react-flexbox-grid'\nimport IconButton from 'material-ui/IconButton'\nimport * as ROUTES from '../../constants/routes'\nimport Container from '../Container'\nimport {Link, hashHistory} from 'react-router'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport ArrowDown from 'material-ui/svg-icons/navigation/arrow-drop-down-circle'\nimport Paper from 'material-ui/Paper'\nimport RemainderDetails from './RemainderDetails'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport numberFormat from '../../helpers/numberFormat'\nimport RemainderTransferDialog from './RemainderTransferDialog'\nimport RemainderFilterForm from './RemainderFilterForm'\nimport RemainderDiscardDialog from './RemainderDiscardDialog'\nimport MoreHortIcon from 'material-ui/svg-icons/navigation/more-horiz'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport RemoveIcon from 'material-ui/svg-icons/content/remove'\nimport SwapHorizIcon from 'material-ui/svg-icons/action/swap-horiz'\nimport {TextField} from '../ReduxForm'\nimport Search from 'material-ui/svg-icons/action/search'\nimport Tooltip from '../ToolTip'\nimport Pagination from '../GridList/GridListNavPagination'\nimport {reduxForm, Field} from 'redux-form'\nimport NotFound from '../Images/not-found.png'\n\nconst enhance = compose(\n    injectSheet({\n        listWrapper: {\n            '& > div:first-child': {\n                marginTop: '0 !important'\n            }\n        },\n        wrapper: {\n            position: 'relative',\n            padding: '0 30px',\n            marginBottom: '5px',\n            transition: 'all 400ms ease-out !important',\n            '& > a': {\n                color: 'inherit'\n            },\n            '& .row': {\n                alignItems: 'center',\n                '& div': {\n                    lineHeight: '48px'\n                }\n            }\n        },\n        wrapperBold: {\n            extend: 'wrapper',\n            margin: '20px -15px !important',\n            transition: 'all 400ms ease-out !important',\n            '& .row:first-child': {\n                fontWeight: '600'\n            }\n        },\n        headers: {\n            padding: '20px 30px 10px',\n            '& .row': {\n                alignItems: 'center'\n            }\n        },\n        productList: {\n            padding: '20px 30px',\n            display: 'flex',\n            justifyContent: 'space-between'\n        },\n        search: {\n            display: 'flex',\n            alignItems: 'center',\n            position: 'absolute',\n            width: '220px',\n            left: 'calc(50% - 110px)'\n        },\n        products: {\n            display: 'flex',\n            '& > div': {\n                marginRight: '60px',\n                '&:last-child': {\n                    margin: '0'\n                }\n            }\n        },\n        itemData: {\n            textAlign: 'left',\n            fontWeight: '700',\n            fontSize: '16px'\n        },\n        dropDown: {\n            position: 'absolute !important',\n            right: '0',\n            top: '2px',\n            '& > div': {\n                height: '45px',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center'\n            }\n        },\n        dropUp: {\n            extend: 'dropDown',\n            transform: 'rotate(180deg)'\n        },\n        loader: {\n            display: 'flex',\n            height: '328px',\n            alignItems: 'center',\n            justifyContent: 'center'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        clearBtn: {\n            padding: '20px 30px',\n            display: 'flex',\n            alignItems: 'center',\n            color: '#909090',\n            '& button': {\n                '& > div': {\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center'\n                }\n            }\n\n        },\n        nav: {\n            height: '48px',\n            position: 'relative',\n            display: 'flex',\n            justifyContent: 'space-between',\n            padding: '0 30px'\n        },\n        sendButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        filterHolder: {\n            width: '260px',\n            display: 'flex',\n            alignItems: 'center',\n            position: 'relative'\n        },\n        sendButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px',\n            zIndex: '999'\n        },\n        closeDetail: {\n            position: 'absolute',\n            left: '0',\n            top: '0',\n            right: '0',\n            bottom: '0',\n            cursor: 'pointer',\n            zIndex: '1',\n            margin: '0 -22px',\n            borderBottom: 'solid 1px #efefef'\n        },\n        emptyQuery: {\n            background: 'url(' + NotFound + ') no-repeat center center',\n            backgroundSize: '225px',\n            padding: '260px 0 50px',\n            textAlign: 'center',\n            fontSize: '13px',\n            color: '#666'\n        }\n    }),\n    reduxForm({\n        form: 'RemainderSearchForm',\n        enableReinitialize: true\n    }),\n)\n\nconst iconStyle = {\n    icon: {\n        color: '#61a8e8',\n        width: 25,\n        height: 25\n    },\n    button: {\n        width: 45,\n        height: 45,\n        padding: 0\n    }\n}\nconst iconSearchStyle = {\n    icon: {\n        color: '#333',\n        width: 25,\n        height: 25\n    },\n    button: {\n        width: 40,\n        height: 40,\n        padding: 0\n    }\n}\nconst actionIconStyle = {\n    icon: {\n        width: 30,\n        height: 30,\n        backgroundColor: 'transparent'\n    },\n    button: {\n        width: 30,\n        height: 30,\n        padding: 0,\n        backgroundColor: '#275482'\n\n    }\n}\n\nconst headerItems = [\n    {\n        name: 'product',\n        sorting: true,\n        title: 'Товар',\n        xs: 3\n    },\n    {\n        name: 'productType',\n        sorting: true,\n        title: 'Тип товара',\n        xs: 3\n    },\n    {\n        sorting: false,\n        title: 'Всего товаров',\n        xs: 3\n    },\n    {\n        sorting: false,\n        title: 'Бракованные товары',\n        xs: 2\n    }\n]\n\nconst RemainderGridList = enhance((props) => {\n    const {\n        detailData,\n        classes,\n        filter,\n        listData,\n        transferDialog,\n        discardDialog,\n        handleCloseDetail,\n        filterItem,\n        filterDialog,\n        handleSubmit,\n        searchSubmit\n    } = props\n\n    const listLoading = _.get(listData, 'listLoading')\n    const detailId = _.get(detailData, 'id')\n\n    const listHeader = _.map(headerItems, (item, index) => {\n        const name = _.get(item, 'name')\n        const title = _.get(item, 'title')\n        const size = _.get(item, 'xs')\n        const sorting = _.get(item, 'sorting')\n\n        if (sorting) {\n            return (\n                <Col\n                    key={index}\n                    xs={size}\n                    style={{cursor: 'pointer'}}\n                    onClick={() => hashHistory.push(filter.sortingURL(name))}>\n                    {title}\n                </Col>\n            )\n        }\n\n        return (\n            <Col key={index} xs={size}>\n                {title}\n            </Col>\n        )\n    })\n    const search = (\n            <form onSubmit={handleSubmit(searchSubmit)} className={classes.search}>\n                <Field\n                    className={classes.inputFieldCustom}\n                    name=\"search\"\n                    fullWidth={true}\n                    component={TextField}\n                    hintText=\"Товар\"/>\n                <IconButton\n                    iconStyle={iconSearchStyle.icon}\n                    style={iconSearchStyle.button}\n                    type=\"submit\">\n                    <Search/>\n                </IconButton>\n            </form>\n    )\n    const listLoader = (\n        <Paper className={classes.loader}>\n            <CircularProgress size={40} thickness={4}/>\n        </Paper>\n    )\n    const list = (\n        <div className={classes.listWrapper}>\n            {_.map(_.get(listData, 'data'), (item) => {\n                const id = _.get(item, 'id')\n                const product = _.get(item, 'title')\n                const balance = Number(_.get(item, 'balance')) + Number(_.get(item, 'defects'))\n                const defects = _.get(item, 'defects')\n                const measurement = _.get(item, ['measurement', 'name'])\n                const type = _.get(item, ['type', 'name'])\n                if (id === detailId) {\n                    return (\n                        <Paper key={id} className={classes.wrapperBold}>\n                            <Row key={id} style={{position: 'relative'}}>\n                                <div className={classes.closeDetail}\n                                    onClick={handleCloseDetail}>\n                                </div>\n                                <Col xs={3}>{product}</Col>\n                                <Col xs={3}>{type}</Col>\n                                <Col xs={3} className={classes.itemData}>{numberFormat(balance, measurement)}</Col>\n                                <Col xs={2} className={classes.itemData}>{numberFormat(defects, measurement)}</Col>\n                                <Col xs={1} style={{textAlign: 'right'}}>\n                                    <IconButton\n                                        className={classes.dropUp}\n                                        iconStyle={iconStyle.icon}\n                                        style={iconStyle.button}\n                                        onTouchTap={handleCloseDetail}>\n                                        <ArrowDown/>\n                                    </IconButton>\n                                </Col>\n                            </Row>\n                            <RemainderDetails\n                                filterItem={filterItem}\n                                detailData={detailData}\n                                handleCloseDetail={handleCloseDetail}\n                            />\n                        </Paper>\n                    )\n                }\n                return (\n                <Paper key={id} className={classes.wrapper}>\n                    <Link key={id} to={{\n                        pathname: sprintf(ROUTES.REMAINDER_ITEM_PATH, id),\n                        query: filter.getParams()\n                    }}>\n                        <Row style={{position: 'relative'}}>\n                            <Col xs={3}>{product}</Col>\n                            <Col xs={3}>{type}</Col>\n                            <Col xs={3} className={classes.itemData}>{numberFormat(balance, measurement)}</Col>\n                            <Col xs={2} className={classes.itemData}>{numberFormat(defects, measurement)}</Col>\n                            <Col xs={1} style={{textAlign: 'right'}}>\n                                <Link to={{\n                                    pathname: sprintf(ROUTES.REMAINDER_ITEM_PATH, id),\n                                    query: filter.getParams()\n                                }}>\n                                    <IconButton\n                                        className={classes.dropDown}\n                                        iconStyle={iconStyle.icon}\n                                        style={iconStyle.button}>\n                                        <ArrowDown/>\n                                    </IconButton>\n                                </Link>\n                            </Col>\n                        </Row>\n                    </Link>\n                </Paper>\n                )\n            })}\n\n        </div>\n    )\n\n    return (\n        <Container>\n            <SubMenu url={ROUTES.REMAINDER_LIST_URL}/>\n\n            <div className=\"sendButtonWrapper\">\n                <FloatingActionButton\n                    className={classes.sendButton}\n                    mini={true}>\n                    <MoreHortIcon />\n                </FloatingActionButton>\n\n                <ul>\n                    <li style={{left: '60px'}}>\n                        <Tooltip position=\"bottom\" text=\"Списание товара\">\n                            <FloatingActionButton\n                                iconStyle={actionIconStyle.icon}\n                                style={actionIconStyle.button}\n                            onTouchTap={discardDialog.handleOpenDiscardDialog}>\n                            <RemoveIcon\n                                style={{width: '20px', height: '30px', margin: 'auto'}}/>\n                            </FloatingActionButton>\n                        </Tooltip>\n                    </li>\n                    <li style={{left: '70px'}}>\n                        <Tooltip position=\"bottom\" text=\"Передача товаров\" >\n                            <FloatingActionButton\n                                iconStyle={actionIconStyle.icon}\n                                style={actionIconStyle.button}\n                                onTouchTap={transferDialog.handleOpenTransferDialog}>\n                                <SwapHorizIcon style={{width: '20px', height: '30px', margin: 'auto'}}/>\n                            </FloatingActionButton>\n                        </Tooltip>\n                    </li>\n                </ul>\n            </div>\n            <Paper zDepth={1} className={classes.nav}>\n                <div className={classes.filterHolder}>\n                    <RemainderFilterForm\n                        filterDialog={filterDialog}\n                        filter={filter}\n                        initialValues={filterDialog.initialValues}/>\n                </div>\n                {search}\n                <div>\n                    <Pagination filter={filter}/>\n                </div>\n            </Paper>\n            <div className={classes.headers}>\n                <Row>\n                    {listHeader}\n                </Row>\n            </div>\n            {listLoading ? listLoader\n                : (_.isEmpty(_.get(listData, 'data')) && !listLoading) ? <Paper className={classes.emptyQuery}>\n                    <div>По вашему запросу ничего не найдено</div>\n                </Paper> : list}\n\n            <RemainderTransferDialog\n                open={transferDialog.openTransferDialog}\n                onClose={transferDialog.handleCloseTransferDialog}\n                onSubmit={transferDialog.handleSubmitTransferDialog}/>\n            <RemainderDiscardDialog\n                open={discardDialog.openDiscardDialog}\n                onClose={discardDialog.handleCloseDiscardDialog}\n                onSubmit={discardDialog.handleSubmitDiscardDialog}/>\n        </Container>\n    )\n})\n\nRemainderGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    filterItem: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    filterDialog: PropTypes.shape({\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired,\n        handleClearFilterDialog: PropTypes.func.isRequired\n    }).isRequired,\n    transferDialog: PropTypes.shape({\n        openTransferDialog: PropTypes.bool.isRequired,\n        handleOpenTransferDialog: PropTypes.func.isRequired,\n        handleCloseTransferDialog: PropTypes.func.isRequired,\n        handleSubmitTransferDialog: PropTypes.func.isRequired\n    }).isRequired,\n    discardDialog: PropTypes.shape({\n        openDiscardDialog: PropTypes.bool.isRequired,\n        handleOpenDiscardDialog: PropTypes.func.isRequired,\n        handleCloseDiscardDialog: PropTypes.func.isRequired,\n        handleSubmitDiscardDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default RemainderGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Remainder/RemainderGridList.js","import RemainderGridList from './RemainderGridList'\nimport {REMAINDER_TRANSFER_DIALOG_OPEN} from './RemainderTransferDialog'\nimport {REMAINDER_FILTER_OPEN, REMAINDER_FILTER_KEY} from './RemainderFilterForm'\nimport {REMAINDER_DISCARD_DIALOG_OPEN} from './RemainderDiscardDialog'\n\nexport {\n    REMAINDER_FILTER_OPEN,\n    REMAINDER_FILTER_KEY,\n    RemainderGridList,\n    REMAINDER_TRANSFER_DIALOG_OPEN,\n    REMAINDER_DISCARD_DIALOG_OPEN\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Remainder/index.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Row, Col} from 'react-flexbox-grid'\nimport IconButton from 'material-ui/IconButton'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\nimport * as ROUTES from '../../constants/routes'\nimport GridList from '../GridList'\nimport Container from '../Container'\nimport ShiftCreateDialog from './ShiftCreateDialog'\nimport ConfirmDialog from '../ConfirmDialog'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport Tooltip from '../ToolTip'\nimport IconMenu from 'material-ui/IconMenu'\nimport MenuItem from 'material-ui/MenuItem'\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\nimport Edit from 'material-ui/svg-icons/image/edit'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'id',\n        xs: 1,\n        title: 'Id'\n    },\n    {\n        sorting: true,\n        name: 'name',\n        xs: 4,\n        title: 'Наименование'\n    },\n    {\n        sorting: true,\n        xs: 3,\n        name: 'beginTime',\n        title: 'Время начала'\n    },\n    {\n        sorting: true,\n        xs: 3,\n        name: 'endTime',\n        title: 'Время окончания'\n    },\n    {\n        sorting: false,\n        xs: 1,\n        name: 'actions',\n        title: ''\n    }\n]\n\nconst enhance = compose(\n    injectSheet({\n        addButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        addButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px'\n        }\n    })\n)\n\nconst ShiftGridList = enhance((props) => {\n    const {\n        filter,\n        createDialog,\n        updateDialog,\n        confirmDialog,\n        listData,\n        detailData,\n        classes\n    } = props\n\n    const actions = (\n        <div>\n\n        </div>\n    )\n\n    const shiftDetail = (\n        <span>a</span>\n    )\n\n    const shiftList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        const beginTime = _.get(item, 'beginTime')\n        const endTime = _.get(item, 'endTime')\n        const iconButton = (\n            <IconButton style={{padding: '0 12px'}}>\n                <MoreVertIcon />\n            </IconButton>\n        )\n        return (\n            <Row key={id} style={{alignItems: 'center'}}>\n                <Col xs={1}>{id}</Col>\n                <Col xs={4}>{name}</Col>\n                <Col xs={3}>{beginTime}</Col>\n                <Col xs={3}>{endTime}</Col>\n                <Col xs={1} style={{textAlign: 'right'}}>\n                    <IconMenu\n                        iconButtonElement={iconButton}\n                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\n                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\n                        <MenuItem\n                            primaryText=\"Изменить\"\n                            leftIcon={<Edit />}\n                            onTouchTap={() => { updateDialog.handleOpenUpdateDialog(id) }}\n                        />\n                        <MenuItem\n                            primaryText=\"Удалить \"\n                            leftIcon={<DeleteIcon />}\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(id) }}\n                        />\n                    </IconMenu>\n                </Col>\n            </Row>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: shiftList,\n        loading: _.get(listData, 'listLoading')\n    }\n\n    return (\n        <Container>\n            <SubMenu url={ROUTES.SHIFT_LIST_URL}/>\n            <div className={classes.addButtonWrapper}>\n                <Tooltip position=\"left\" text=\"Добавить смену\">\n                    <FloatingActionButton\n                        mini={true}\n                        className={classes.addButton}\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\n                        <ContentAdd />\n                    </FloatingActionButton>\n                </Tooltip>\n            </div>\n\n            <GridList\n                filter={filter}\n                list={list}\n                detail={shiftDetail}\n                actionsDialog={actions}\n            />\n            <ShiftCreateDialog\n                isUpdate={true}\n                initialValues={updateDialog.initialValues}\n                open={updateDialog.openUpdateDialog}\n                loading={updateDialog.updateLoading}\n                onClose={updateDialog.handleCloseUpdateDialog}\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\n            />\n\n            <ShiftCreateDialog\n                open={createDialog.openCreateDialog}\n                loading={createDialog.createLoading}\n                onClose={createDialog.handleCloseCreateDialog}\n                onSubmit={createDialog.handleSubmitCreateDialog}\n            />\n\n            {detailData.data && <ConfirmDialog\n                type=\"delete\"\n                message={_.get(detailData, ['data', 'name'])}\n                loading={confirmDialog.confirmLoading}\n                onClose={confirmDialog.handleCloseConfirmDialog}\n                onSubmit={confirmDialog.handleSendConfirmDialog}\n                open={confirmDialog.openConfirmDialog}\n            />}\n        </Container>\n    )\n})\n\nShiftGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    createDialog: PropTypes.shape({\n        createLoading: PropTypes.bool.isRequired,\n        openCreateDialog: PropTypes.bool.isRequired,\n        handleOpenCreateDialog: PropTypes.func.isRequired,\n        handleCloseCreateDialog: PropTypes.func.isRequired,\n        handleSubmitCreateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    confirmDialog: PropTypes.shape({\n        confirmLoading: PropTypes.bool.isRequired,\n        openConfirmDialog: PropTypes.bool.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleSendConfirmDialog: PropTypes.func.isRequired\n    }).isRequired,\n    updateDialog: PropTypes.shape({\n        updateLoading: PropTypes.bool.isRequired,\n        openUpdateDialog: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default ShiftGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Shift/ShiftGridList.js","import ShiftGridList from './ShiftGridList'\nimport {SHIFT_CREATE_DIALOG_OPEN} from './ShiftCreateDialog'\n\nconst SHIFT_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nconst SHIFT_DELETE_DIALOG_OPEN = 'openDeleteDialog'\n\nexport {\n    SHIFT_CREATE_DIALOG_OPEN,\n    SHIFT_UPDATE_DIALOG_OPEN,\n    SHIFT_DELETE_DIALOG_OPEN,\n    ShiftGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Shift/index.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {ImageUploadField} from '../ReduxForm'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport MainStyles from '../Styles/MainStyles'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n\n    throw new SubmissionError({\n        ...errors,\n        _error: nonFieldErrors\n    })\n}\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        shopAddPhoto: {\n            width: '100%',\n            '& .imageDropZone': {\n                margin: '20px auto !important',\n                width: '330px !important',\n                height: '330px !important'\n            }\n        }\n    })),\n    reduxForm({\n        form: 'ShopAddPhotoForm',\n        enableReinitialize: true\n    })\n)\n\nconst AddPhotoDialog = enhance((props) => {\n    const {open, handleSubmit, onClose, classes} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={{width: '440px'}}\n            bodyStyle={{minHeight: 'auto'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>Добавить фото</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} className={classes.form}>\n                    <div className={classes.inContent} style={{minHeight: '250px'}}>\n                        <div className={classes.loader}>\n                            <CircularProgress size={40} thickness={4}/>\n                        </div>\n                        <div className={classes.shopAddPhoto}>\n                            <Field\n                                name=\"image\"\n                                component={ImageUploadField}\n                                label=\"Изображения\"\n                                fullWidth={true}\n                            />\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\n\nAddPhotoDialog.propTyeps = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\n\nexport default AddPhotoDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Shop/AddPhotoDialog.js","import React from 'react'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport Tooltip from '../ToolTip'\nimport IconButton from 'material-ui/IconButton'\nimport Edit from 'material-ui/svg-icons/image/edit'\nimport Delete from 'material-ui/svg-icons/action/delete'\nimport Add from 'material-ui/svg-icons/content/add'\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        wrapper: {\n            width: '100%',\n            display: 'flex',\n            alignSelf: 'baseline',\n            color: '#333 !important',\n            flexWrap: 'wrap',\n            padding: '0 30px'\n        },\n        title: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            borderBottom: '1px #efefef solid',\n            alignItems: 'center',\n            width: '100%',\n            height: '65px',\n            margin: '0 -30px',\n            padding: '0 30px',\n            position: 'relative'\n        },\n        titleLabel: {\n            fontSize: '18px',\n            color: '#333',\n            fontWeight: 'bold',\n            cursor: 'pointer'\n        },\n        titleButtons: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            alignItems: 'center',\n            height: '100%'\n        },\n        frequency: {\n            textAlign: 'right',\n            lineHeight: '1',\n            '& span': {\n                display: 'block'\n            }\n        },\n        status: {\n            alignSelf: 'baseline',\n            margin: '0 30px',\n            color: '#fff',\n            fontWeight: '600',\n            padding: '20px 17px',\n            lineHeight: '1',\n            textAlign: 'center'\n        },\n        content: {\n            padding: '20px 0',\n            display: 'flex',\n            width: '100%',\n            '& > div': {\n                marginRight: '7%',\n                '&:last-child': {\n                    margin: '0'\n                }\n            }\n        },\n        info: {\n            display: 'flex'\n        },\n        infoTitle: {\n            fontWeight: 'bold'\n        },\n        details: {\n            display: 'inline-block',\n            lineHeight: '25px',\n            marginRight: '30px',\n            marginTop: '10px',\n            '&:last-child': {\n                marginRight: '0'\n            }\n        },\n        image: {\n            width: '230px',\n            height: '165px',\n            marginRight: 'calc(7% + 36px) !important',\n            position: 'relative',\n            '& span:nth-child(4)': {\n                position: 'relative',\n                zIndex: '1'\n            },\n            '& span:nth-child(4):after': {\n                background: 'rgba(0,0,0,0.35)',\n                content: '\"\"',\n                position: 'absolute',\n                top: '0',\n                left: '0',\n                right: '0',\n                bottom: '0'\n            }\n        },\n        imageWrapper: {\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            flexWrap: 'wrap',\n            '& img': {\n                width: '100%',\n                height: '100%',\n                cursor: 'pointer'\n            }\n        },\n        otherImages: {\n            order: '2',\n            '& div': {\n                cursor: 'pointer',\n                width: '36px',\n                height: '36px',\n                marginBottom: '7px',\n                position: 'relative',\n                zIndex: '1',\n                '&:last-child strong': {\n                    display: 'flex !important'\n                },\n                '& strong': {\n                    background: 'rgba(0,0,0, 0.35)',\n                    display: 'none',\n                    color: '#fff',\n                    position: 'absolute',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    top: '0',\n                    left: '0',\n                    right: '0',\n                    bottom: '0',\n                    zIndex: '99'\n                }\n            }\n        },\n        firstImage: {\n            width: '230px !important',\n            height: '165px !important',\n            display: 'block',\n            marginRight: '7px',\n            marginBottom: '0 !important',\n            order: '1 !important'\n        },\n        addImg: {\n            background: '#999',\n            cursor: 'pointer',\n            width: '36px',\n            height: '36px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            marginBottom: '0 !important',\n            order: '3'\n        },\n        noImage: {\n            background: '#efefef',\n            border: '1px #ccc dashed',\n            color: '#999',\n            fontSize: '11px !important',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            textAlign: 'center',\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            '& span': {\n                fontSize: '11px !important',\n                display: 'block',\n                position: 'relative',\n                height: 'auto !important',\n                width: 'auto !important',\n                margin: '0 0 20px !important',\n                '&:after': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    top: '40px',\n                    left: '50%',\n                    background: '#999',\n                    width: '64px',\n                    height: '1px',\n                    marginLeft: '-32px'\n                }\n            }\n        },\n        closeDetail: {\n            position: 'absolute',\n            left: '0',\n            top: '0',\n            right: '0',\n            bottom: '0',\n            cursor: 'pointer',\n            zIndex: '1'\n        }\n    })\n)\nconst iconStyle = {\n    icon: {\n        color: '#666',\n        width: 20,\n        height: 20\n    },\n    button: {\n        width: 48,\n        height: 48,\n        padding: 0\n    }\n}\nconst ShopDetails = enhance((props) => {\n    const {\n        classes,\n        loading,\n        data,\n        confirmDialog,\n        updateDialog,\n        addPhotoDialog,\n        slideShowDialog,\n        handleCloseDetail\n    } = props\n\n    const ZERO = 0\n    const MAX_IMAGE_COUNT = 4\n    const THREE = 3\n\n    const EVERY_DAY = '1'\n    const ONCE_IN_A_WEEK = '2'\n    const TWICE_IN_A_WEEK = '3'\n    const IN_A_DAY = '4'\n\n    const id = _.get(data, 'id')\n    const name = _.get(data, 'name')\n    const client = _.get(data, ['client', 'name'])\n    const createdBy = _.get(data, ['createdBy', 'firstName']) + ' ' + _.get(data, ['createdBy', 'secondName'])\n    const shopType = _.get(data, ['marketType', 'name'])\n    const address = _.get(data, 'address')\n    const guide = _.get(data, 'guide')\n    const zone = _.get(data, 'border')\n    const contactName = _.get(data, 'contactName')\n    const phone = _.get(data, 'phone')\n    const images = _.get(data, 'images') || {}\n    const freq = _.get(data, 'visitFrequency')\n    const isActive = _.get(data, 'isActive')\n    let slicedImages = images\n    if (images.length > MAX_IMAGE_COUNT) {\n        slicedImages = _.slice(images, ZERO, MAX_IMAGE_COUNT)\n    }\n    const moreImages = images.length - slicedImages.length\n\n    if (loading) {\n        return (\n            <div className={classes.loader}>\n                <div>\n                    <CircularProgress size={40} thickness={4} />\n                </div>\n            </div>\n        )\n    }\n\n    const primaryImage = _.map(images, (item, index) => {\n        const src = _.get(item, 'file')\n        const isPrimary = _.get(item, 'isPrimary')\n        if (isPrimary) {\n            return (\n                <span key={index} className={classes.firstImage}>\n                    <img src={src} alt=\"\" onClick={() => { slideShowDialog.handleOpenSlideShowDialog(index) }}/>\n                </span>\n            )\n        }\n        return false\n    })\n    let count = 0\n    const otherImages = _.map(images, (item, index) => {\n        const src = _.get(item, 'file')\n        const isPrimary = _.get(item, 'isPrimary')\n        if (!isPrimary && (count++) < THREE) {\n            return (\n                <div key={index} className=\"smallImages\">\n                    {moreImages > ZERO && <strong onClick={() => { slideShowDialog.handleOpenSlideShowDialog(index) }}>{moreImages}+</strong>}\n                    <img src={src} alt=\"\" onClick={() => { slideShowDialog.handleOpenSlideShowDialog(index) }}/>\n                </div>\n            )\n        }\n        return false\n    })\n\n    return (\n        <div className={classes.wrapper}>\n            <div className={classes.title}>\n                <div className={classes.titleLabel}>{name}</div>\n                <div className={classes.closeDetail}\n                    onClick={handleCloseDetail}>\n                </div>\n                <div className={classes.titleButtons}>\n                    <div className={classes.frequency}>\n                        <span>Частота посещений:</span>\n                        <b>{ freq === EVERY_DAY ? 'Каждый день' : (\n                            freq === ONCE_IN_A_WEEK ? 'Раз в неделю' : (\n                                freq === TWICE_IN_A_WEEK ? '2 раза в неделю' : (\n                                    freq === IN_A_DAY ? 'Через день' : ''\n                                )\n                            )\n                        )}</b>\n                    </div>\n                    {isActive ? <div className={classes.status} style={{background: '#81c784'}}>Магазин <br/> активен</div>\n                        : <div className={classes.status} style={{background: '#ff717e'}}>Магазин <br/> неактивен</div>\n                    }\n                    <Tooltip position=\"bottom\" text=\"Изменить\">\n                        <IconButton\n                            iconStyle={iconStyle.icon}\n                            style={iconStyle.button}\n                            touch={true}\n                            onTouchTap={() => { updateDialog.handleOpenUpdateDialog(id) }}>\n                            <Edit />\n                        </IconButton>\n                    </Tooltip>\n                    <Tooltip position=\"bottom\" text=\"Удалить\">\n                        <IconButton\n                            iconStyle={iconStyle.icon}\n                            style={iconStyle.button}\n                            touch={true}\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(id) }}>\n                            <Delete />\n                        </IconButton>\n                    </Tooltip>\n                </div>\n            </div>\n            <div className={classes.content}>\n                <div className={classes.image}>\n                    {(images.length === ZERO) ? <div className={classes.noImage}>\n                        <div>\n                            <span>Фото <br/> отсутствует</span>\n                            <a onClick={addPhotoDialog.handleOpenAddPhotoDialog}>добавить фото</a>\n                        </div>\n                    </div>\n                        : <div className={classes.imageWrapper}>\n                            {primaryImage}\n                            <div className={classes.otherImages}>\n                                {otherImages}\n                            </div>\n                            <div onClick={addPhotoDialog.handleOpenAddPhotoDialog} className={classes.addImg}>\n                                <Add color=\"#fff\"/>\n                            </div>\n                        </div>}\n                </div>\n                <div className={classes.infoBlock}>\n                    <div className={classes.infoTitle}>Детали</div>\n                    <ul className={classes.details}>\n                        <li>Клиент</li>\n                        <li>Создал</li>\n                        <li>Тип заведения</li>\n                        <li>Зона</li>\n                    </ul>\n                    <ul className={classes.details}>\n                        <li>{client}</li>\n                        <li>{createdBy}</li>\n                        <li>{shopType}</li>\n                        <li>{!zone ? <span className=\"redFont\">Не определена</span> : {zone}}</li>\n                    </ul>\n                </div>\n                <div className={classes.infoBlock}>\n                    <div className={classes.infoTitle}>Контакты</div>\n                    <ul className={classes.details}>\n                        <li>{contactName}</li>\n                        <li>Адрес</li>\n                        <li>Ориентир</li>\n                    </ul>\n                    <ul className={classes.details}>\n                        <li>{phone}</li>\n                        <li>{address}</li>\n                        <li>{guide}</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n})\nShopDetails.propTypes = {\n    data: PropTypes.object.isRequired,\n    loading: PropTypes.bool.isRequired,\n    confirmDialog: PropTypes.shape({\n        openConfirmDialog: PropTypes.bool.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleSendConfirmDialog: PropTypes.func.isRequired\n    }).isRequired,\n    tabData: PropTypes.shape({\n        tab: PropTypes.string.isRequired,\n        handleTabChange: PropTypes.func.isRequired\n    }),\n    updateDialog: PropTypes.shape({\n        updateLoading: PropTypes.bool.isRequired,\n        openUpdateDialog: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    addPhotoDialog: PropTypes.shape({\n        openAddPhotoDialog: PropTypes.bool.isRequired,\n        handleOpenAddPhotoDialog: PropTypes.func.isRequired,\n        handleCloseAddPhotoDialog: PropTypes.func.isRequired,\n        handleSubmitAddPhotoDialog: PropTypes.func.isRequired\n    }).isRequired,\n    slideShowDialog: PropTypes.shape({\n        openSlideShowDialog: PropTypes.bool.isRequired,\n        gallery: PropTypes.object,\n        galleryLoading: PropTypes.bool.isRequired,\n        handleOpenSlideShowDialog: PropTypes.func.isRequired,\n        handleCloseSlideShowDialog: PropTypes.func.isRequired\n    }).isRequired\n}\nexport default ShopDetails\n\n\n\n// WEBPACK FOOTER //\n// src/components/Shop/ShopDetails.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router'\nimport {Row, Col} from 'react-flexbox-grid'\nimport * as ROUTES from '../../constants/routes'\nimport GridList from '../GridList'\nimport Container from '../Container'\nimport ShopFilterForm from './ShopFilterForm'\nimport ShopDetails from './ShopDetails'\nimport ShopCreateDialog from './ShopCreateDialog'\nimport MapDialog from './ShopMapDialog'\nimport AddPhotoDialog from './AddPhotoDialog'\nimport SlideShowDialog from './SlideShowDialog'\nimport DeleteDialog from '../DeleteDialog'\nimport ConfirmDialog from '../ConfirmDialog'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport Tooltip from '../ToolTip'\nconst listHeader = [\n    {\n        xs: 3,\n        sorting: true,\n        name: 'name',\n        title: 'Название'\n    },\n    {\n        xs: 3,\n        sorting: true,\n        name: 'client',\n        title: 'Клиент'\n    },\n    {\n        xs: 2,\n        sorting: true,\n        name: 'market_type',\n        title: 'Тип'\n    },\n    {\n        xs: 2,\n        sorting: true,\n        name: 'border',\n        title: 'Зона'\n    },\n    {\n        xs: 2,\n        sorting: true,\n        name: 'is_active',\n        title: 'Статус'\n    }\n]\nconst enhance = compose(\n    injectSheet({\n        addButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        addButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px'\n        },\n        listRow: {\n            position: 'relative',\n            '& > a': {\n                display: 'flex',\n                alignItems: 'center',\n                position: 'absolute',\n                top: '0',\n                left: '-30px',\n                right: '-30px',\n                bottom: '0',\n                padding: '0 30px',\n                '& > div': {\n                    fontWeight: '600',\n                    '&:first-child': {\n                        paddingLeft: '0'\n                    },\n                    '&:last-child': {\n                        paddingRight: '0'\n                    }\n                }\n            }\n        }\n    })\n)\nconst ShopGridList = enhance((props) => {\n    const {\n        filter,\n        createDialog,\n        mapDialog,\n        updateDialog,\n        updateMapDialog,\n        addPhotoDialog,\n        filterDialog,\n        slideShowDialog,\n        confirmDialog,\n        imageDeleteDialog,\n        deleteDialog,\n        listData,\n        detailData,\n        mapLocation,\n        navigationButtons,\n        classes\n    } = props\n\n    const shopFilterDialog = (\n        <ShopFilterForm\n            initialValues={filterDialog.initialValues}\n            filter={filter}\n            filterDialog={filterDialog}\n        />\n    )\n    const shopDetail = (\n        <ShopDetails\n            key={_.get(detailData, 'id')}\n            data={_.get(detailData, 'data') || {}}\n            deleteDialog={deleteDialog}\n            confirmDialog={confirmDialog}\n            imageDeleteDialog={imageDeleteDialog}\n            loading={_.get(detailData, 'detailLoading')}\n            updateDialog={updateDialog}\n            addPhotoDialog={addPhotoDialog}\n            slideShowDialog={slideShowDialog}\n            handleCloseDetail={_.get(detailData, 'handleCloseDetail')}\n        />\n    )\n    const shopList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        const client = _.get(item, ['client', 'name'])\n        const marketType = _.get(item, ['marketType', 'name'])\n        const zone = _.get(item, 'border') || 'Не определена'\n        const isActive = _.get(item, 'isActive')\n        return (\n            <Row key={id} className={classes.listRow}>\n                <Link to={{\n                    pathname: sprintf(ROUTES.SHOP_ITEM_PATH, id),\n                    query: filter.getParams()\n                }}>\n                    <Col xs={3}>{name}</Col>\n                    <Col xs={3}>{client}</Col>\n                    <Col xs={2}>{marketType}</Col>\n                    <Col xs={2}>{zone}</Col>\n                    <Col xs={2}>\n                        {isActive ? <span className=\"greenFont\">Активен</span>\n                            : <span className=\"redFont\">Не активен</span>}\n                    </Col>\n                </Link>\n            </Row>\n        )\n    })\n    const list = {\n        header: listHeader,\n        list: shopList,\n        loading: _.get(listData, 'listLoading')\n    }\n    return (\n        <Container>\n            <SubMenu url={ROUTES.SHOP_LIST_URL}/>\n            <div className={classes.addButtonWrapper}>\n                <Tooltip position=\"left\" text=\"Добавить магазин\">\n                    <FloatingActionButton\n                        mini={true}\n                        className={classes.addButton}\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\n                        <ContentAdd />\n                    </FloatingActionButton>\n                </Tooltip>\n            </div>\n            <GridList\n                filter={filter}\n                list={list}\n                detail={shopDetail}\n                filterDialog={shopFilterDialog}\n            />\n            <ShopCreateDialog\n                mapDialog={mapDialog}\n                updateMapDialog={updateMapDialog}\n                mapLocation={mapLocation}\n                open={createDialog.openCreateDialog}\n                loading={createDialog.createLoading}\n                onClose={createDialog.handleCloseCreateDialog}\n                onSubmit={createDialog.handleSubmitCreateDialog}\n            />\n            <MapDialog\n                initialValues={mapDialog.initialValues}\n                open={mapDialog.openMapDialog}\n                onClose={mapDialog.handleCloseMapDialog}\n                onSubmit={mapDialog.handleSubmitMapDialog}\n            />\n            <AddPhotoDialog\n                open={addPhotoDialog.openAddPhotoDialog}\n                onClose={addPhotoDialog.handleCloseAddPhotoDialog}\n                onSubmit={addPhotoDialog.handleSubmitAddPhotoDialog}\n            />\n            <SlideShowDialog\n                images={_.get(detailData, ['data', 'images'])}\n                loading={slideShowDialog.galleryLoading}\n                open={slideShowDialog.openSlideShowDialog}\n                image={slideShowDialog.gallery}\n                onClose={slideShowDialog.handleCloseSlideShowDialog}\n                prevBtn={navigationButtons.handlePrevImage}\n                nextBtn={navigationButtons.handleNextImage}\n                handleSetPrimaryImage={_.get(detailData, 'handleSetPrimaryImage')}\n            />\n            <MapDialog\n                isUpdate={true}\n                initialValues={updateMapDialog.initialValues}\n                open={updateMapDialog.openUpdateMapDialog}\n                onClose={updateMapDialog.handleCloseMapUpdateDialog}\n                onSubmit={updateMapDialog.handleSubmitMapUpdateDialog}\n            />\n            <ShopCreateDialog\n                isUpdate={true}\n                mapDialog={mapDialog}\n                mapLocation={mapLocation}\n                updateMapDialog={updateMapDialog}\n                initialValues={updateDialog.initialValues}\n                open={updateDialog.openUpdateDialog}\n                loading={updateDialog.updateLoading}\n                onClose={updateDialog.handleCloseUpdateDialog}\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\n            />\n            <DeleteDialog\n                filter={filter}\n                open={deleteDialog.openDeleteDialog}\n                onClose={deleteDialog.handleCloseDeleteDialog}\n            />\n            {detailData.data && <ConfirmDialog\n                type=\"delete\"\n                message={_.get(detailData, ['data', 'name'])}\n                onClose={confirmDialog.handleCloseConfirmDialog}\n                onSubmit={confirmDialog.handleSendConfirmDialog}\n                open={confirmDialog.openConfirmDialog}\n            />}\n            {detailData.data && <ConfirmDialog\n                type=\"delete\"\n                message=\"\"\n                onClose={imageDeleteDialog.handleCloseDeleteImageDialog}\n                onSubmit={imageDeleteDialog.handleSendDeleteImageDialog}\n                open={imageDeleteDialog.openDeleteImage}\n            />}\n        </Container>\n    )\n})\nShopGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    mapLocation: PropTypes.object,\n    createDialog: PropTypes.shape({\n        createLoading: PropTypes.bool.isRequired,\n        openCreateDialog: PropTypes.bool.isRequired,\n        handleOpenCreateDialog: PropTypes.func.isRequired,\n        handleCloseCreateDialog: PropTypes.func.isRequired,\n        handleSubmitCreateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    mapDialog: PropTypes.shape({\n        openMapDialog: PropTypes.bool.isRequired,\n        handleOpenMapDialog: PropTypes.func.isRequired,\n        handleCloseMapDialog: PropTypes.func.isRequired,\n        handleSubmitMapDialog: PropTypes.func.isRequired\n    }).isRequired,\n    addPhotoDialog: PropTypes.shape({\n        openAddPhotoDialog: PropTypes.bool.isRequired,\n        handleOpenAddPhotoDialog: PropTypes.func.isRequired,\n        handleCloseAddPhotoDialog: PropTypes.func.isRequired,\n        handleSubmitAddPhotoDialog: PropTypes.func.isRequired\n    }).isRequired,\n    slideShowDialog: PropTypes.shape({\n        openSlideShowDialog: PropTypes.bool.isRequired,\n        gallery: PropTypes.object,\n        galleryLoading: PropTypes.bool.isRequired,\n        handleOpenSlideShowDialog: PropTypes.func.isRequired,\n        handleCloseSlideShowDialog: PropTypes.func.isRequired\n    }).isRequired,\n    updateMapDialog: PropTypes.shape({\n        openUpdateMapDialog: PropTypes.bool.isRequired,\n        handleOpenMapUpdateDialog: PropTypes.func.isRequired,\n        handleCloseMapUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitMapUpdateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    confirmDialog: PropTypes.shape({\n        openConfirmDialog: PropTypes.bool.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleSendConfirmDialog: PropTypes.func.isRequired\n    }).isRequired,\n    imageDeleteDialog: PropTypes.shape({\n        openDeleteImage: PropTypes.bool.isRequired,\n        handleOpenDeleteImageDialog: PropTypes.func.isRequired,\n        handleCloseDeleteImageDialog: PropTypes.func.isRequired,\n        handleSendDeleteImageDialog: PropTypes.func.isRequired\n    }).isRequired,\n    deleteDialog: PropTypes.shape({\n        openDeleteDialog: PropTypes.bool.isRequired,\n        handleOpenDeleteDialog: PropTypes.func.isRequired,\n        handleCloseDeleteDialog: PropTypes.func.isRequired\n    }).isRequired,\n    updateDialog: PropTypes.shape({\n        updateLoading: PropTypes.bool.isRequired,\n        openUpdateDialog: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    filterDialog: PropTypes.shape({\n        initialValues: PropTypes.object,\n        filterLoading: PropTypes.bool,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    }).isRequired,\n    navigationButtons: PropTypes.shape({\n        handlePrevImage: PropTypes.func.isRequired,\n        handleNextImage: PropTypes.func.isRequired\n    })\n}\nexport default ShopGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Shop/ShopGridList.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {LocationField} from '../ReduxForm'\nimport IconButton from 'material-ui/IconButton'\nimport CloseIcon2 from '../CloseIcon2'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            justifyContent: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        popUp: {\n            overflowY: 'hidden !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            overflowX: 'hidden',\n            height: '100%',\n            maxHeight: 'inherit !important'\n        },\n        titleContent: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            padding: '30px',\n            zIndex: '999',\n            '& button': {\n                top: '8px',\n                right: '8px',\n                padding: '0 !important',\n                position: 'absolute !important'\n            }\n        },\n        inContent: {\n            display: 'flex',\n            flexDirection: 'column',\n            color: '#333',\n            position: 'relative',\n            height: '600px',\n            '& > div:nth-child(2)': {\n                position: 'absolute'\n            }\n        },\n        bottomButton: {\n            background: '#454545',\n            color: '#fff',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            padding: '10px 10px 10px 30px',\n            zIndex: '999',\n            textAlign: 'right',\n            '& span': {\n                fontSize: '13px !important',\n                fontWeight: '600 !important',\n                color: '#fff',\n                verticalAlign: 'inherit !important'\n            }\n        },\n        actionButton: {\n            fontSize: '13px !important',\n            margin: '0 !important'\n        },\n        podlojkaScroll: {\n            padding: '0 !important',\n            overflowY: 'auto !important',\n            zIndex: '2000 !important',\n            '& > div > div': {\n                width: 'auto !important',\n                maxWidth: '1000px !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'ShopMapForm',\n        enableReinitialize: true\n    }),\n)\nconst ShopMapDialog = enhance((props) => {\n    const {open, loading, handleSubmit, onClose, classes} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.podlojkaScroll}\n            contentStyle={loading ? {width: '500px'} : {width: '100%'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} className={classes.form}>\n                    <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4}/>\n                    </div>\n                    <div className={classes.inContent}>\n                        <div className={classes.titleContent}>\n                            <IconButton onTouchTap={onClose}>\n                                <CloseIcon2 color=\"#333\"/>\n                            </IconButton>\n                        </div>\n                        <Field\n                            name=\"latLng\"\n                            component={LocationField}\n                            className={classes.map}\n                            location={{lat: 41.3076492,\n                                lng: 70.2705497}}\n                            fullWidth={true}\n                        />\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <span>Кликните по карте, чтобы обозначить локацию</span>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"/>\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\n\nShopMapDialog.propTyeps = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired\n}\nShopMapDialog.defaultProps = {\n    isUpdate: false\n}\n\nexport default ShopMapDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Shop/ShopMapDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport IconButton from 'material-ui/IconButton'\nimport Star from 'material-ui/svg-icons/toggle/star'\nimport StarBorder from 'material-ui/svg-icons/toggle/star-border'\nimport ArrowLeft from 'material-ui/svg-icons/navigation/chevron-left'\nimport ArrowRight from 'material-ui/svg-icons/navigation/chevron-right'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        dialog: {\n            cursor: 'pointer'\n        },\n        popUp: {\n            cursor: 'default',\n            overflowY: 'hidden !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            overflowX: 'hidden',\n            height: '100%'\n        },\n        titleContent: {\n            position: 'absolute',\n            left: '0',\n            right: '0',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            padding: '30px',\n            zIndex: '999',\n            '& button': {\n                right: '7px',\n                top: '7px',\n                padding: '0 !important',\n                position: 'absolute !important'\n            }\n        },\n        inContent: {\n            display: 'flex',\n            width: '500px',\n            height: '500px',\n            position: 'relative',\n            backgroundRepeat: 'no-repeat',\n            backgroundSize: 'cover',\n            zIndex: '1',\n            '&:after': {\n                content: '\"\"',\n                backgroundColor: 'transparent',\n                position: 'absolute',\n                top: '0',\n                left: '0',\n                right: '0',\n                bottom: '0',\n                zIndex: '2'\n            },\n            '& img': {\n                width: '100%',\n                height: '100%'\n            }\n        },\n        bodyContent: {\n            width: '100%'\n        },\n        arrows: {\n            position: 'absolute',\n            top: '50%',\n            transform: 'translate(0, -50%)',\n            zIndex: '10'\n        },\n        navLeft: {\n            extend: 'arrows',\n            left: '0'\n        },\n        navRight: {\n            extend: 'arrows',\n            right: '0'\n        }\n    })\n)\nconst iconStyle = {\n    icon: {\n        color: '#f0f0f0',\n        width: 65,\n        height: 65\n    },\n    button: {\n        width: 70,\n        height: 70,\n        padding: 0\n    }\n}\nconst SlideShowDialog = enhance((props) => {\n    const {loading, open, onClose, classes, image, images, prevBtn, nextBtn, handleSetPrimaryImage} = props\n    const imgURL = _.get(image, 'file')\n    const lastIndex = _.get(images, 'length')\n    const currentIndex = _.findIndex(images, (o) => {\n        const fileId = _.get(o, 'fileId')\n        return fileId === _.get(image, 'id')\n    })\n    const isPrimary = _.get(_.find(images, {'fileId': _.get(image, 'id')}), 'isPrimary')\n    return (\n        <Dialog\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={{width: '500px'}}\n            bodyStyle={{minHeight: 'auto'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <IconButton>\n                    {isPrimary ? <Star color=\"#ffad36\"/>\n                        : <StarBorder color=\"#e9e9e9\" onTouchTap={handleSetPrimaryImage}/>}\n                </IconButton>\n            </div>\n            <div className={classes.inContent}>\n                {loading ? <div className={classes.loader}>\n                    <CircularProgress size={40} thickness={4}/>\n                </div>\n                : <img src={imgURL} alt=\"\"/>}\n                <div className={classes.navLeft}>\n                    <IconButton\n                        iconStyle={iconStyle.icon}\n                        style={iconStyle.button}\n                        disableTouchRipple={true}\n                        onTouchTap={() => { prevBtn(currentIndex, lastIndex) }}>\n                        <ArrowLeft/>\n                    </IconButton>\n                </div>\n                <div className={classes.navRight}>\n                    <IconButton\n                        iconStyle={iconStyle.icon}\n                        style={iconStyle.button}\n                        disableTouchRipple={true}\n                        onTouchTap={() => { nextBtn(currentIndex, lastIndex) }}>\n                        <ArrowRight/>\n                    </IconButton>\n                </div>\n            </div>\n        </Dialog>\n    )\n})\nSlideShowDialog.propTyeps = {\n    images: PropTypes.array.isRequired,\n    loading: PropTypes.bool.isRequired,\n    open: PropTypes.bool.isRequired,\n    image: PropTypes.object.isRequired,\n    onClose: PropTypes.func.isRequired,\n    prevBtn: PropTypes.func.isRequired,\n    nextBtn: PropTypes.func.isRequired,\n    handleSetPrimaryImage: PropTypes.func\n}\nexport default SlideShowDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Shop/SlideShowDialog.js","import ShopGridList from './ShopGridList'\nimport {SHOP_CREATE_DIALOG_OPEN} from './ShopCreateDialog'\nimport {SHOP_FILTER_KEY, SHOP_FILTER_OPEN} from './ShopFilterForm'\nconst SHOP_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nconst SHOP_MAP_DIALOG_OPEN = 'openMapDialog'\nconst SHOP_UPDATE_MAP_DIALOG_OPEN = 'openUpdateMapDialog'\nconst ADD_PHOTO_DIALOG_OPEN = 'openAddPhoto'\nconst SHOP_SLIDESHOW_DIALOG_OPEN = 'openImagesDialog'\nconst DELETE_IMAGE_OPEN = 'openDeleteImageDialog'\n\nexport {\n    SHOP_CREATE_DIALOG_OPEN,\n    SHOP_UPDATE_DIALOG_OPEN,\n    SHOP_FILTER_KEY,\n    SHOP_FILTER_OPEN,\n    SHOP_MAP_DIALOG_OPEN,\n    SHOP_UPDATE_MAP_DIALOG_OPEN,\n    ADD_PHOTO_DIALOG_OPEN,\n    SHOP_SLIDESHOW_DIALOG_OPEN,\n    DELETE_IMAGE_OPEN,\n    ShopGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Shop/index.js","import React from 'react'\nimport {Link} from 'react-router'\nimport _ from 'lodash'\nimport {connect} from 'react-redux'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport FlatButton from 'material-ui/FlatButton'\nimport SettingsPower from 'material-ui/svg-icons/action/settings-power'\nimport ToolTip from '../ToolTip'\nimport {MenuItems} from './MenuItems'\nimport Notification from 'material-ui/svg-icons/social/notifications'\nimport Badge from 'material-ui/Badge'\nimport Logo from '../Images/logo.png'\n\nconst style = {\n    style: {\n        width: 84,\n        height: 60,\n        minWidth: 'none'\n    }\n}\n\nconst enhance = compose(\n    connect((state) => {\n        const count = _.get(state, ['notifications', 'timeInterval', 'data'])\n        return count\n    })\n)\n\nconst SideBarMenu = enhance((props) => {\n    const {classes, handleSignOut, handleOpenNotificationBar, count} = props\n    const items = _.map(MenuItems, (item, index) => {\n        const atBottom = _.get(item, 'bottom')\n        if (atBottom) {\n            return false\n        }\n        return (\n            <Link to={item.url} key={index}>\n                <ToolTip position=\"right\" text={item.name}>\n                    <FlatButton\n                        rippleColor=\"#fff\"\n                        style={style.style}>\n                        {item.icon}\n                    </FlatButton>\n                </ToolTip>\n            </Link>\n        )\n    })\n    const bottomItems = _.map(MenuItems, (item, index) => {\n        const atBottom = _.get(item, 'bottom')\n        if (!atBottom) {\n            return false\n        }\n        return (\n            <Link to={item.url} key={index}>\n                <ToolTip position=\"right\" text={item.name}>\n                    <FlatButton\n                        rippleColor=\"#fff\"\n                        style={style.style}>\n                        {item.icon}\n                    </FlatButton>\n                </ToolTip>\n            </Link>\n        )\n    })\n\n    return (\n        <div className={classes.wrapper}>\n            <div className={classes.items}>\n                <div className={classes.logo}>\n                    <img src={Logo}/>\n                </div>\n                <div className={classes.notifications}>\n                    {count ? <Badge\n                        className={classes.badge}\n                        badgeContent={count}\n                        badgeStyle={{top: 8, right: 10}}>\n                        <ToolTip position=\"right\" text=\"Уведомления\">\n                            <FlatButton\n                                rippleColor=\"#fff\"\n                                style={style.style}\n                                onTouchTap={() => {\n                                    handleOpenNotificationBar(true)\n                                }}>\n                                <Notification />\n                            </FlatButton>\n                        </ToolTip>\n                    </Badge>\n                        : <ToolTip position=\"right\" text=\"Уведомления\">\n                            <FlatButton\n                                rippleColor=\"#fff\"\n                                style={style.style}\n                                onTouchTap={() => {\n                                    handleOpenNotificationBar(true)\n                                }}>\n                                <Notification />\n                            </FlatButton>\n                        </ToolTip>\n                    }\n                </div>\n                {items}\n                <div className={classes.bottom}>\n                    {bottomItems}\n                </div>\n\n                <div className={classes.logout}>\n                    <ToolTip position=\"right\" text=\"Выйти\">\n                        <FlatButton\n                            rippleColor=\"#fff\"\n                            style={style.style}\n                            onClick={handleSignOut}>\n                            <SettingsPower />\n                        </FlatButton>\n                    </ToolTip>\n                </div>\n            </div>\n        </div>\n    )\n})\n\nexport default injectSheet({\n    wrapper: {\n        height: '100%',\n        display: 'flex',\n        backgroundColor: '#2d3037',\n        boxShadow: '0 2px 2px 0 rgba(0,0,0,.14), 0 3px 1px -2px rgba(0,0,0,.2), 0 1px 5px 0 rgba(0,0,0,.12)'\n    },\n\n    logo: {\n        padding: '20px 10px 30px',\n        '& img': {\n            width: '100%'\n        }\n    },\n\n    items: {\n        position: 'relative',\n        width: '100%',\n        '& button': {\n            opacity: '0.5',\n            '& > div': {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                height: '100%',\n                width: '100%'\n            },\n            '&:hover': {\n                opacity: '1'\n            }\n        },\n        '& svg': {\n            color: '#fff !important',\n            width: '25px !important',\n            height: '25px !important'\n        }\n    },\n\n    bottom: {\n        marginTop: '10px',\n        paddingTop: '10px',\n        borderTop: '1px rgba(255,255,255, 0.1) solid',\n        position: 'relative',\n        '&:before': {\n            background: 'rgba(0,0,0, 0.25)',\n            content: '\"\"',\n            position: 'absolute',\n            height: '1px',\n            top: '-2px',\n            left: '0',\n            right: '0'\n        }\n    },\n\n    logout: {\n        position: 'absolute',\n        bottom: '0',\n        left: '0',\n        right: '0'\n    },\n    badge: {\n        padding: '0 !important',\n        width: '100%',\n        '& > span': {\n            fontSize: '11px !important',\n            backgroundColor: '#009688 !important',\n            color: '#fff !important',\n            alignItems: 'center',\n            justifyContent: 'center'\n        }\n    }\n})(SideBarMenu)\n\n\n\n// WEBPACK FOOTER //\n// src/components/SidebarMenu/SidebarMenu.js","import SidebarMenu from './SidebarMenu'\n\nexport default SidebarMenu\n\n\n\n// WEBPACK FOOTER //\n// src/components/SidebarMenu/index.js","import React from 'react'\nimport {compose} from 'recompose'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport Paper from 'material-ui/Paper'\nimport {Field, reduxForm} from 'redux-form'\nimport injectSheet from 'react-jss'\nimport validate from '../../helpers/validate'\nimport {CheckBox, TextField} from '../ReduxForm'\nimport Dot from '../Images/dot.png'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            width: '120px',\n            height: '120px',\n            margin: '0 auto',\n            padding: '15px',\n            justifyContent: 'center',\n            display: 'flex',\n            alignItems: 'center'\n        },\n\n        wrapper: {\n            width: '320px',\n            margin: '0 auto',\n            padding: '25px 55px 25px 45px',\n            textAlign: 'center',\n            display: 'inline-block'\n        },\n\n        title: {\n            paddingTop: '5px',\n            paddingBottom: '22px',\n            fontSize: '14px',\n            fontWeight: '600',\n            textTransform: 'uppercase',\n            textAlign: 'center',\n            color: '#647994',\n            position: 'relative',\n            '&:after': {\n                content: '\"\"',\n                backgroundImage: 'url(' + Dot + ')',\n                position: 'absolute',\n                bottom: '0',\n                height: '2px',\n                left: '0',\n                right: '0'\n            }\n        },\n\n        loginForm: {\n            fontSize: '13px !important'\n        },\n\n        rememberMe: {\n            marginBottom: '20px !important',\n            marginTop: '20px !important'\n        },\n\n        error: {\n            color: 'red',\n            fontSize: '12px',\n            marginTop: '12px'\n        }\n    }),\n\n    reduxForm({\n        form: 'SignInForm'\n    })\n)\n\nconst SignInForm = enhance((props) => {\n    const {classes, handleSubmit, loading, error} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n\n    if (loading) {\n        return (\n            <Paper className={classes.loader} zDepth={2}>\n                <CircularProgress size={40} thickness={4}/>\n            </Paper>\n        )\n    }\n\n    return (\n        <Paper className={classes.wrapper} zDepth={2}>\n            <form onSubmit={onSubmit}>\n                <div>\n                    <div className={classes.title}>\n                        Вход в систему\n                    </div>\n                </div>\n                <div>\n                    <div className={classes.error}>{error}</div>\n\n                    <Field className={classes.loginForm} name=\"username\" component={TextField} label=\"Логин\" fullWidth={true} />\n                    <Field className={classes.loginForm} name=\"password\" component={TextField} label=\"Пароль\" type=\"password\" fullWidth={true} />\n                    <Field name=\"rememberMe\" component={CheckBox} label=\"Запомнить меня\" className={classes.rememberMe} />\n\n                    <RaisedButton\n                        type=\"submit\"\n                        label=\"Войти\"\n                        primary={true}\n                        fullWidth={true}\n                    />\n                </div>\n            </form>\n        </Paper>\n    )\n})\n\nexport default SignInForm\n\n\n\n// WEBPACK FOOTER //\n// src/components/SignInForm/SignInForm.js","import SingInForm from './SignInForm'\n\nexport default SingInForm\n\n\n\n// WEBPACK FOOTER //\n// src/components/SignInForm/index.js","import React from 'react'\nimport Container from '../Container'\n\nconst DashboardLayout = (props) => {\n    return (\n        <Container>\n            {props.children}\n        </Container>\n    )\n}\n\nexport default DashboardLayout\n\n\n\n// WEBPACK FOOTER //\n// src/components/SingInLayout/SingInLayout.js","import SingInLayout from './SingInLayout'\n\nexport default SingInLayout\n\n\n\n// WEBPACK FOOTER //\n// src/components/SingInLayout/index.js","import _ from 'lodash'\nimport React from 'react'\nimport {connect} from 'react-redux'\nimport {compose} from 'recompose'\nimport MUISnackbar from 'material-ui/Snackbar'\nimport {closeSnackbarAction} from '../../actions/snackbar'\n\nconst enhance = compose(\n    connect((state) => {\n        const open = _.get(state, ['snackbar', 'open'])\n        const message = _.get(state, ['snackbar', 'message'])\n        const autoHideDuration = _.get(state, ['snackbar', 'autoHideDuration'])\n\n        return {\n            open,\n            message,\n            autoHideDuration\n        }\n    })\n)\n\nconst Snackbar = ({dispatch, open, message, autoHideDuration, ...defaultProps}) => {\n    return (\n        <MUISnackbar\n            open={open}\n            message={message}\n            autoHideDuration={autoHideDuration}\n            onRequestClose={() => dispatch(closeSnackbarAction())}\n            {...defaultProps}\n        />\n    )\n}\n\nexport default enhance(Snackbar)\n\n\n\n// WEBPACK FOOTER //\n// src/components/Snackbar/Snackbar.js","import Snackbar from './Snackbar'\n\nexport default Snackbar\n\n\n\n// WEBPACK FOOTER //\n// src/components/Snackbar/index.js","import _ from 'lodash'\nimport injectSheet from 'react-jss'\nimport React from 'react'\nimport sprintf from 'sprintf'\nimport {compose} from 'recompose'\nimport PropTypes from 'prop-types'\nimport Dialog from 'material-ui/Dialog'\nimport ReactHighcharts from 'react-highcharts'\nimport Paper from 'material-ui/Paper'\nimport {Link} from 'react-router'\nimport numberFormat from '../../helpers/numberFormat'\nimport {Row, Col} from 'react-flexbox-grid'\nimport Container from '../Container'\nimport StatCashboxOrderDetails from './StatCashboxOrderDetails'\nimport SubMenu from '../SubMenu'\nimport * as ROUTES from '../../constants/routes'\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\nimport FiberManualRecord from 'material-ui/svg-icons/av/fiber-manual-record'\n\nconst enhance = compose(\n    injectSheet({\n        infoBlock: {\n            width: '25%',\n            display: 'inline-block',\n            color: '#999',\n            fontWeight: '400',\n            fontSize: '13px',\n            lineHeight: '1.3',\n            borderLeft: '1px solid #efefef',\n            padding: '12px 15px 12px 15px',\n            alignItems: 'center',\n            '& span': {\n                color: '#333',\n                fontWeight: '600',\n                fontSize: '24px !important'\n            },\n            '&:first-child': {\n                border: 'none'\n            }\n        },\n        typeListStock: {\n            width: '100px',\n            height: 'calc(100% + 16px)',\n            marginTop: '-8px',\n            float: 'left',\n            display: 'flex',\n            alignItems: 'center',\n            textAlign: 'center',\n            borderRight: '1px solid #fff',\n            backgroundColor: '#eceff5',\n            '& a': {\n                display: 'block',\n                width: '100%',\n                fontWeight: '600'\n            },\n            '& a.active': {\n                color: '#333',\n                cursor: 'text'\n            },\n            '&:last-child': {\n                border: 'none'\n            },\n            '&:first-child': {\n\n                marginLeft: '-38px'\n            }\n        },\n        titleLabel: {\n            fontSize: '18px',\n            color: '#333',\n            fontWeight: '600'\n        },\n        bodyTitle: {\n            fontWeight: '600',\n            marginBottom: '10px'\n        },\n        link: {\n            color: '#12aaeb !important',\n            borderBottom: '1px dashed',\n            fontWeight: '400 !important'\n        },\n        loader: {\n            background: '#fff',\n            height: '400px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n        },\n        manufactures: {\n            margin: '0 -28px',\n            padding: '0 28px'\n        },\n        tabWrapper: {\n            display: 'flex',\n            width: '100%'\n        },\n        tab: {\n            cursor: 'pointer',\n            padding: '20px',\n            height: '100%',\n            display: 'flex',\n            alignItems: 'center'\n        },\n        activeTab: {\n            paddingBottom: '20px',\n            flexBasis: '20%',\n            marginRight: '15px',\n            '&:last-child': {\n                margin: '0'\n            },\n            '& a': {\n                color: 'inherit !important'\n            }\n        },\n        tabTitle: {\n            fontWeight: '600',\n            marginBottom: '10px',\n            '& span': {\n                color: '#999',\n                display: 'block',\n                fontWeight: 'normal'\n            }\n        },\n        tabText: {\n            fontSize: '10px',\n            color: '#666',\n            fontWeight: '600',\n            '& span': {\n                display: 'block',\n                fontSize: '18px !important',\n                color: '#333'\n            }\n        },\n        stats: {\n            margin: '0 -28px',\n            padding: '0 28px',\n            background: '#fff',\n            minHeight: 'calc(100% - 148px)'\n        },\n        statTitle: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            fontWeight: 'bold',\n            padding: '25px 28px',\n            margin: '0 -28px',\n            '& a': {\n                fontWeight: '600'\n            }\n        },\n        diagram: {\n            padding: '20px 28px',\n            margin: '0 -28px',\n            borderBottom: '1px #f0f0f0 solid',\n            borderTop: '1px #f0f0f0 solid',\n            '& > div': {\n                margin: '-20px 0',\n                padding: '20px 0',\n                '&:first-child': {\n                    paddingRight: '10px'\n                },\n                '&:last-child': {\n                    paddingLeft: '10px'\n                }\n            }\n        },\n        balanceInfo: {\n            borderLeft: '1px #f0f0f0 solid'\n        },\n        balance: {\n            padding: '15px 0',\n            borderBottom: '1px #f0f0f0 solid',\n            '&:last-child': {\n                border: 'none'\n            },\n            '& div:last-child': {\n                fontSize: '24px',\n                fontWeight: '600'\n            }\n        },\n        categoryExpens: {\n            display: 'flex',\n            width: '100%',\n            margin: '20px 0',\n            alignItems: 'center'\n        },\n        bulletProof: {\n            columnCount: '3',\n            columnGap: '20px',\n            margin: '0',\n            padding: '0',\n            '& li': {\n                display: 'flex',\n                alignItems: 'center',\n                padding: '10px',\n                '& div:first-child': {\n                    marginRight: '5px'\n                }\n            }\n        }\n    }),\n)\n\nconst StatCashboxGridList = enhance((props) => {\n    const {\n        filter,\n        listData,\n        detailData,\n        classes,\n        orderData\n    } = props\n\n    const detailId = _.get(detailData, 'id')\n    const manufactureList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const cashbox = _.get(item, 'name')\n        const type = _.toInteger(_.get(item, 'type'))\n        const balance = numberFormat((_.get(item, 'balance')))\n        const currency = _.get(item, ['currency', 'name'])\n        const BANK_ID = 1\n        return (\n        <div key={id} className={classes.activeTab} style={ detailId === id ? {backgroundColor: '#f2f5f8'} : {}}>\n            <Paper key={id} zDepth={1} className={classes.tab}>\n                <Link\n                    to={{\n                        pathname: sprintf(ROUTES.TRANSACTION_ITEM_PATH, id),\n                        query: filter.getParams({'cashboxId': id})\n                    }}>\n                    <div className={classes.tabContent}>\n                        <div className={classes.tabTitle}>\n                            {cashbox}\n                            {type === BANK_ID\n                                ? <span>банковский счет</span>\n                                : <span>наличные</span>\n                            }\n                        </div>\n                        <div className={classes.tabText}>\n                            <div>БАЛАНС</div>\n                            <span>{balance} {currency}</span>\n                        </div>\n                    </div>\n                </Link>\n            </Paper>\n        </div>\n        )\n    })\n\n    const sempl = 1\n\n    const configCercle = {\n        chart: {\n            type: 'pie',\n            backgroundColor: 'transparent',\n            height: 180,\n            width: 200,\n            margin: 0\n        },\n        legend: {\n            enabled: false\n        },\n        credits: {\n            enabled: false\n        },\n\n        plotOptions: {\n            pie: {\n                slicedOffset: 0,\n                innerSize: '60%',\n                size: '100%',\n                dataLabels: {\n                    enabled: false\n                },\n                states: {\n                    hover: {\n                        enabled: false\n                    }\n                }\n            }\n        },\n        tooltip: {\n            enabled: false\n        },\n        title: {\n            style: {\n                display: 'none'\n            }\n        },\n\n        series: [{\n            data: [{\n                data: 'Производство',\n                y: 10,\n                color: '#466d7c'\n            }, {\n                data: 'Производство',\n                y: 15,\n                color: '#8dbc2e'\n            }, {\n                data: 'Производство',\n                y: 20,\n                color: '#00bfdb'\n            }, {\n                data: 'Производство',\n                y: 25,\n                color: '#a16cb4'\n            }, {\n                data: 'Производство',\n                y: 10,\n                color: '#ff8500'\n            }, {\n                data: 'Производство',\n                y: 20,\n                color: '#ff6d65'\n            }]\n        }]\n    }\n\n    const config = {\n        chart: {\n            type: 'areaspline',\n            height: 145\n        },\n        title: {\n            text: '',\n            style: {\n                display: 'none'\n            }\n        },\n        legend: {\n            enabled: false\n        },\n        credits: {\n            enabled: false\n        },\n        xAxis: {\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            tickmarkPlacement: 'on',\n            title: {\n                text: '',\n                style: {\n                    display: 'none'\n                }\n            }\n        },\n        yAxis: {\n            title: {\n                text: '',\n                style: {\n                    display: 'none'\n                }\n            },\n            gridLineColor: '#efefef',\n            plotLines: [{\n                value: 0,\n                width: 1,\n                color: '#808080'\n            }]\n        },\n        plotOptions: {\n            series: {\n                lineWidth: 0,\n                pointPlacement: 'on'\n            },\n            areaspline: {\n                fillOpacity: 0.7\n            }\n        },\n        tooltip: {\n            shared: true,\n            valueSuffix: ' %',\n            backgroundColor: '#363636',\n            style: {\n                color: '#fff'\n            },\n            borderRadius: 2,\n            borderWidth: 0,\n            enabled: true,\n            shadow: false,\n            useHTML: true,\n            crosshairs: true,\n            pointFormat: '{series.name}: <b>{point.y}</b><br/>в отношении к BoM<br/>'\n        },\n        series: [{\n            marker: {\n                enabled: false,\n                symbol: 'circle'\n            },\n            name: 'Эффективность',\n            data: [sempl + sempl + sempl + sempl, sempl + sempl + sempl, sempl + sempl + sempl + sempl],\n            color: '#7560a5'\n\n        }, {\n            marker: {\n                enabled: false,\n                symbol: 'circle'\n            },\n            name: 'BoM',\n            data: [sempl + sempl + sempl, sempl + sempl + sempl + sempl, sempl + sempl + sempl],\n            color: '#43d0e3'\n        }]\n    }\n\n    return (\n        <Container>\n            <SubMenu url={ROUTES.STAT_CASHBOX_LIST_URL}/>\n            <div className={classes.manufactures}>\n                <div className={classes.tabWrapper}>\n                    {manufactureList}\n                </div>\n            </div>\n\n            <div className={classes.stats}>\n                <div className={classes.statTitle}>\n                    <div>Доходы / Расходы</div>\n                    <div><a>6 мая 2017 г. - 12 мая 2017 г. <KeyboardArrowDown color=\"#12aaeb\" style={{width: '13px', height: '13px'}}/></a></div>\n                </div>\n                <Row className={classes.diagram}>\n                    <Col xs={9}>\n                        <ReactHighcharts config ={config} />\n                    </Col>\n                    <Col xs={3} className={classes.balanceInfo}>\n                        <div className={classes.balance}>\n                            <div>Доходы</div>\n                            <div>1 000 000 <span>UZS</span></div>\n                        </div>\n                        <div className={classes.balance}>\n                            <div>Расходы</div>\n                            <div>- 1 000 000 <span>UZS</span></div>\n                        </div>\n                        <div className={classes.balance}>\n                            <div>Прибыль</div>\n                            <div>1 000 000 <span>UZS</span></div>\n                        </div>\n                    </Col>\n                </Row>\n                <div className={classes.statTitle}>\n                    <div>Расходы по категории</div>\n                </div>\n                <div className={classes.categoryExpens}>\n                    <div style={{width: '250px'}}>\n                        <ReactHighcharts config ={configCercle} />\n                    </div>\n                    <ul className={classes.bulletProof}>\n                        <li>\n                            <div>\n                                <FiberManualRecord />\n                            </div>\n                            <div>\n                                10% (1 000 000 UZS)<br />Категория\n                            </div>\n                        </li>\n                        <li>\n                            <div>\n                                <FiberManualRecord color=\"#ff6d65\"/>\n                            </div>\n                            <div>\n                                10% (1 000 000 UZS)<br />Категория\n                            </div>\n                        </li>\n                        <li>\n                            <div>\n                                <FiberManualRecord />\n                            </div>\n                            <div>\n                                10% (1 000 000 UZS)<br />Категория\n                            </div>\n                        </li>\n                        <li>\n                            <div>\n                                <FiberManualRecord color=\"#ff6d65\"/>\n                            </div>\n                            <div>\n                                10% (1 000 000 UZS)<br />Категория\n                            </div>\n                        </li>\n                        <li>\n                            <div>\n                                <FiberManualRecord />\n                            </div>\n                            <div>\n                                10% (1 000 000 UZS)<br />Категория\n                            </div>\n                        </li>\n                        <li>\n                            <div>\n                                <FiberManualRecord color=\"#ff6d65\"/>\n                            </div>\n                            <div>\n                                10% (1 000 000 UZS)<br />Категория\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <Dialog\n                open={_.get(orderData, 'orderDetailOpen')}\n                modal={true}\n                onRequestClose={orderData.handleOrderDetailClose}\n                bodyClassName={classes.popUp}\n                autoScrollBodyContent={true}>\n                <StatCashboxOrderDetails\n                    key={_.get(orderData, 'id')}\n                    data={_.get(orderData, 'orderDetail') || {}}\n                    loading={_.get(orderData, 'detailLoading')}\n                    handleOrderClick={orderData.handleOrderClick}\n                    close={orderData.handleOrderDetailClose}\n                />\n            </Dialog>\n        </Container>\n    )\n})\n\nStatCashboxGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    orderData: PropTypes.object\n}\n\nexport default StatCashboxGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/StatCashbox/StatCashboxGridList.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose, withState} from 'recompose'\nimport injectSheet from 'react-jss'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Row, Col} from 'react-flexbox-grid'\nimport Dot from '../Images/dot.png'\n\nconst enhance = compose(\n    injectSheet({\n        dottedList: {\n            padding: '20px 0'\n        },\n        wrapper: {\n            color: '#333 !important',\n            width: '100%',\n            display: 'flex',\n            flexWrap: 'wrap'\n        },\n        dropdown: {\n            position: 'relative',\n            paddingRight: '18px',\n            zIndex: '10',\n            '&:after': {\n                top: '10px',\n                right: '0',\n                content: '\"\"',\n                position: 'absolute',\n                borderTop: '5px solid',\n                borderLeft: '5px solid transparent',\n                borderRight: '5px solid transparent'\n            }\n        },\n        link: {\n            extend: 'blue',\n            borderBottom: '1px dashed',\n            fontWeight: '600'\n        },\n        red: {\n            color: '#e57373 !important'\n        },\n        blue: {\n            color: '#12aaeb !important'\n        },\n        green: {\n            color: '#81c784 !important'\n        },\n        loader: {\n            width: '100%',\n            background: '#fff',\n            height: '400px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n        },\n        title: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            borderBottom: '1px #efefef solid',\n            alignItems: 'center',\n            width: '100%',\n            height: '65px',\n            padding: '0 30px'\n        },\n        titleLabel: {\n            fontSize: '18px',\n            color: '#333',\n            fontWeight: '600'\n        },\n        titleSupplier: {\n            fontSize: '18px',\n            position: 'relative',\n            '& .supplierDetails': {\n                background: '#fff',\n                boxShadow: '0 2px 5px 0px rgba(0, 0, 0, 0.16)',\n                fontSize: '13px',\n                position: 'absolute',\n                padding: '64px 28px 20px',\n                top: '-21px',\n                left: '50%',\n                zIndex: '9',\n                minWidth: '300px',\n                transform: 'translate(-50%, 0)',\n                '& .detailsWrap': {\n                    position: 'relative',\n                    paddingTop: '10px',\n                    '&:before': {\n                        content: '\"\"',\n                        background: 'url(' + Dot + ')',\n                        position: 'absolute',\n                        top: '0',\n                        left: '0',\n                        right: '0',\n                        height: '2px'\n                    }\n                },\n                '& .detailsList': {\n                    padding: '10px 0',\n                    '&:last-child': {\n                        paddingBottom: '0'\n                    },\n                    '& div:first-child': {\n                        color: '#666'\n                    }\n                }\n            }\n        },\n        titleClient: {\n            '& span': {\n                fontWeight: '600'\n            }\n        },\n        content: {\n            display: 'flex',\n            width: '100%'\n        },\n        padding: {\n            padding: '20px 30px'\n        },\n        leftSide: {\n            flexBasis: '30%',\n            borderRight: '1px #efefef solid'\n        },\n        subBlock: {\n            extend: 'padding',\n            borderBottom: '1px #efefef solid',\n            '&:last-child': {\n                border: 'none'\n            }\n        },\n        rightSide: {\n            flexBasis: '70%',\n            padding: '0 30px 20px'\n        },\n        subtitle: {\n            fontWeight: '600',\n            textTransform: 'uppercase',\n            marginBottom: '10px'\n        },\n        dataBox: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            '& ul:last-child': {\n                fontWeight: '600',\n                marginLeft: '30px',\n                textAlign: 'right'\n            },\n            '& li': {\n                lineHeight: '25px'\n            }\n        },\n        tabNav: {\n            padding: '15px 0',\n            borderBottom: '1px #f2f5f8 solid',\n            '& a': {\n                margin: '-15px 0',\n                padding: '15px 0',\n                marginRight: '40px',\n                color: '#9b9b9b',\n                '&.active': {\n                    color: '#12aaeb',\n                    borderBottom: '1px solid'\n                }\n            }\n        },\n        tabContent: {\n            '& .row:first-child': {\n                fontWeight: '600'\n            },\n            '& .row': {\n                '& > div': {\n                    textAlign: 'right'\n                },\n                '& > div:first-child': {\n                    textAlign: 'left'\n                }\n            }\n        },\n        tabWrapper: {\n            maxHeight: '232px',\n            overflowY: 'auto',\n            overflowX: 'hidden',\n            paddingRight: '30px'\n        },\n        summary: {\n            fontWeight: '600',\n            marginTop: '20px',\n            paddingRight: '30px',\n            textTransform: 'uppercase',\n            textAlign: 'right'\n        }\n    }),\n    withState('openDetails', 'setOpenDetails', false)\n)\n\nwithState('openDetails', 'setOpenDetails', false)\n\nconst StatCashboxOrderDetails = enhance((props) => {\n    const {classes,\n        loading,\n        data,\n        setOpenDetails,\n        openDetails,\n        close\n    } = props\n\n    const id = _.get(data, 'id')\n    const products = _.get(data, 'products')\n    const contact = _.get(data, 'contact')\n    const contactName = _.get(contact, 'name')\n    const contactEmail = _.get(contact, 'email') || 'N/A'\n    const contactPhone = _.get(contact, 'telephone') || 'N/A'\n\n    const client = _.get(data, 'client')\n    const clientPerson = _.get(client, 'name')\n    const deliveryType = _.get(data, 'deliveryType')\n\n    const percent = 100\n    const zero = 0\n    const deliveryPrice = _.get(data, 'deliveryPrice')\n    const discount = _.get(data, 'discountPrice')\n    const totalPrice = _.get(data, 'totalPrice')\n    const totalBalance = _.get(data, 'totalBalance')\n    const discountPrice = deliveryPrice * (discount / percent)\n\n    if (loading) {\n        return (\n            <div className={classes.loader}>\n                <div>\n                    <CircularProgress size={40} thickness={4}/>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className={classes.wrapper}>\n            <div className={classes.title}>\n                <div className={classes.titleLabel}>Заказ №{id}</div>\n                <div className={classes.titleSupplier}>\n                    <a className={classes.dropdown} onMouseEnter={() => {\n                        setOpenDetails(true)\n                    }}>{clientPerson}</a>\n                    {openDetails &&\n                    <div className=\"supplierDetails\" onMouseLeave={() => {\n                        setOpenDetails(false)\n                    }}>\n                        <div className=\"detailsWrap\">\n                            <Row className=\"detailsList\">\n                                <Col xs={6}>Контактное лицо</Col>\n                                <Col xs={6}>{contactName}</Col>\n                            </Row>\n                            <Row className=\"detailsList\">\n                                <Col xs={6}>Телефон</Col>\n                                <Col xs={6}>{contactPhone}</Col>\n                            </Row>\n                            <Row className=\"detailsList\">\n                                <Col xs={6}>Email</Col>\n                                <Col xs={6}>{contactEmail}</Col>\n                            </Row>\n                        </div>\n                    </div>\n                    }\n                </div>\n            </div>\n\n            <div className={classes.content}>\n                <div className={classes.leftSide}>\n                    <div className={classes.subBlock}>\n                        <div className={classes.subtitle}>Баланс</div>\n                        <div className={classes.dataBox}>\n                            <ul>\n                                <li>Тип оплаты:</li>\n                                <li>Дата оплаты:</li>\n                                <li>Стоимость доставки:</li>\n                                <li>Скидка({discount}%):</li>\n                                <li>Оплачено:</li>\n                                <li>Остаток:</li>\n                            </ul>\n                            <ul>\n                                <li>Перечисление</li>\n                                <li>22.05.2017</li>\n                                <li>{deliveryPrice}</li>\n                                <li>{discountPrice}</li>\n                                <li>\n                                    <span className={classes.link}>500 000 UZS</span>\n                                </li>\n                                <li className={totalBalance > zero ? classes.red : classes.green}>{totalBalance}</li>\n                            </ul>\n                        </div>\n                    </div>\n\n                    <div className={classes.subBlock}>\n                        <div className={classes.subtitle}>Передача</div>\n                        <div className={classes.dataBox}>\n                            <ul>\n                                <li>Тип передачи:</li>\n                                <li>Статус передачи:</li>\n                            </ul>\n                            <ul>\n                                <li>{deliveryType > zero ? 'Доставка' : 'Самовывоз'}</li>\n                                <li className={classes.red}>не доставлен</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n                <div className={classes.rightSide}>\n                    <div className={classes.tab}>\n                        <div className={classes.tabNav}>\n                            <a className=\"active\">Список товаров</a>\n                            <a>Возврат</a>\n                        </div>\n                        <div className={classes.tabContent}>\n                            <div className={classes.tabWrapper}>\n                                <Row className=\"dottedList\">\n                                    <Col xs={6}>Товар</Col>\n                                    <Col xs={2}>Количество</Col>\n                                    <Col xs={2}>Цена (UZS)</Col>\n                                    <Col xs={2}>Сумма (UZS)</Col>\n                                </Row>\n\n                                {_.map(products, (item) => {\n                                    const product = _.get(item, 'product')\n                                    const productId = _.get(product, 'id')\n                                    const productName = _.get(product, 'name')\n                                    const price = _.get(item, 'price')\n                                    const cost = _.get(item, 'cost')\n                                    const amount = _.get(item, 'amount')\n                                    const measurement = _.get(product, ['measurement', 'name'])\n                                    return (\n                                        <Row className=\"dottedList\" key={productId}>\n                                            <Col xs={6}>{productName}</Col>\n                                            <Col xs={2}>{amount} {measurement}</Col>\n                                            <Col xs={2}>{price}</Col>\n                                            <Col xs={2}>{cost}</Col>\n                                        </Row>\n                                    )\n                                })}\n                            </div>\n\n                            <div className={classes.summary}>Итого: {totalPrice} UZS</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <button onTouchTap={close}>Close</button>\n        </div>\n    )\n})\n\nStatCashboxOrderDetails.propTypes = {\n    data: PropTypes.object.isRequired,\n    loading: PropTypes.bool.isRequired,\n    orderListData: PropTypes.object,\n    close: PropTypes.func.isRequired\n}\n\nexport default StatCashboxOrderDetails\n\n\n\n// WEBPACK FOOTER //\n// src/components/StatCashbox/StatCashboxOrderDetails.js","import StatCashboxGridList from './StatCashboxGridList'\nconst ORDER_DETAIL_OPEN = 'openOrderDetail'\n\nexport {\n    ORDER_DETAIL_OPEN,\n    StatCashboxGridList\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/components/StatCashbox/index.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport injectSheet from 'react-jss'\nimport React from 'react'\nimport {compose} from 'recompose'\nimport PropTypes from 'prop-types'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport Paper from 'material-ui/Paper'\nimport {Row, Col} from 'react-flexbox-grid'\nimport StatDebtorsFilterForm from './StatDebtorsFilterForm'\nimport GridList from '../GridList'\nimport Container from '../Container'\nimport StatDebtorsOrderDetails from './StatDebtorsOrderDetails'\nimport SubMenu from '../SubMenu'\nimport * as ROUTES from '../../constants/routes'\nimport MainStyles from '../Styles/MainStyles'\nimport {Link} from 'react-router'\nimport numberFormat from '../../helpers/numberFormat'\nimport getConfig from '../../helpers/getConfig'\nconst ONE = 1\nconst TWO = 2\nconst listHeaderClient = [\n    {\n        sorting: true,\n        name: 'name',\n        xs: 5,\n        title: 'Клиент'\n    },\n    {\n        sorting: true,\n        name: 'щквукы',\n        xs: 2,\n        title: 'Заказы'\n    },\n    {\n        sorting: true,\n        name: 'sum',\n        xs: 3,\n        title: 'Сумма долга'\n    },\n    {\n        sorting: true,\n        xs: 2,\n        name: 'time',\n        title: 'Прошло дней'\n    }\n]\n\nconst listHeaderOrder = [\n    {\n        sorting: true,\n        name: 'orderNumber',\n        xs: 1,\n        title: 'Заказ №'\n    },\n    {\n        sorting: true,\n        name: 'name',\n        xs: 4,\n        title: 'Наименование'\n    },\n    {\n        sorting: true,\n        name: 'sum1',\n        xs: 2,\n        title: 'Дата доставки'\n    },\n    {\n        sorting: true,\n        name: 'sum1',\n        xs: 2,\n        title: 'Сумма заказа'\n    },\n    {\n        sorting: true,\n        name: 'sum2',\n        xs: 3,\n        title: 'Сумма долга'\n    }\n]\n\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        infoBlock: {\n            width: '25%',\n            display: 'inline-block',\n            color: '#999',\n            fontWeight: '400',\n            fontSize: '13px',\n            lineHeight: '1.3',\n            borderLeft: '1px solid #efefef',\n            padding: '12px 15px 12px 15px',\n            alignItems: 'center',\n            '& span': {\n                color: '#333',\n                fontWeight: '600',\n                fontSize: '20px !important'\n            },\n            '&:first-child': {\n                border: 'none'\n            }\n        },\n        typeListStock: {\n            width: '100px',\n            height: 'calc(100% + 16px)',\n            marginTop: '-8px',\n            float: 'left',\n            display: 'flex',\n            alignItems: 'center',\n            textAlign: 'center',\n            borderRight: '1px solid #fff',\n            backgroundColor: '#eceff5',\n            '& a': {\n                display: 'block',\n                width: '100%',\n                fontWeight: '600'\n            },\n            '& a.active': {\n                color: '#333',\n                cursor: 'text'\n            },\n            '&:last-child': {\n                border: 'none'\n            },\n            '&:first-child': {\n\n                marginLeft: '-38px'\n            }\n        },\n        titleLabel: {\n            fontSize: '18px',\n            color: '#333',\n            fontWeight: '700',\n            cursor: 'pointer'\n        },\n        bodyTitle: {\n            fontWeight: '600',\n            marginBottom: '10px'\n        },\n        loader: {\n            background: '#fff',\n            height: '400px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n        },\n        subTitle: {\n            fontWeight: '600',\n            '& div': {\n                display: 'inline-block'\n            },\n            '& div:last-child': {\n                marginLeft: '30px'\n            },\n            '& span': {\n                fontWeight: '800'\n            }\n        }\n    })),\n)\n\nconst StatDebtorsGridList = enhance((props) => {\n    const {\n        filter,\n        sumData,\n        filterDialog,\n        listData,\n        detailData,\n        classes,\n        orderData,\n        tabData,\n        getDocument\n    } = props\n\n    const actions = (\n        <div>\n\n        </div>\n    )\n\n    const orderListHeader = (\n        <Row style={{padding: '20px 30px 10px', fontWeight: '600'}}>\n            <Col xs={2}>Заказ №</Col>\n            <Col xs={2}>Кол-во товаров</Col>\n            <Col xs={2}>Дата доставки</Col>\n            <Col xs={3}>Сумма заказа</Col>\n            <Col xs={3}>Долг</Col>\n        </Row>\n    )\n\n    const orderList = _.map(_.get(orderData, ['orderList', 'results']), (item) => {\n        const id = _.get(item, 'id')\n        const dateDelivery = _.get(item, 'dateDelivery') || 'N/A'\n        const status = _.get(item, 'status') || 'N/A'\n        const totalPrice = numberFormat(_.get(item, 'totalPrice'), getConfig('PRIMARY_CURRENCY'))\n        const totalBalance = numberFormat(_.get(item, 'totalBalance'), getConfig('PRIMARY_CURRENCY'))\n        return (\n            <div className=\"dottedListSpec\">\n                <Row key={id} style={{padding: '0 30px'}}>\n                    <Col xs={2}><a onClick={ () => {\n                        orderData.handleOrderClick(id)\n                    }}>{id}</a></Col>\n                    <Col xs={2}>{status}</Col>\n                    <Col xs={2}>{dateDelivery}</Col>\n                    <Col xs={3}>{totalPrice}</Col>\n                    <Col xs={3}>{totalBalance}</Col>\n                </Row>\n            </div>\n        )\n    })\n\n    const statDebtorsFilterDialog = (\n        <StatDebtorsFilterForm\n            getDocument={getDocument}\n            initialValues={filterDialog.initialValues}\n            filter={filter}\n            filterDialog={filterDialog}\n        />\n    )\n    const statDebtorsList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, ['client', 'id'])\n        const name = _.get(item, ['client', 'name'])\n        const order = numberFormat(_.get(item, ['orders']), 'заказа')\n        const debt = numberFormat(_.get(item, ['totalBalance']), getConfig('PRIMARY_CURRENCY'))\n        const time = numberFormat(_.get(item, ['expiredDays']), 'дней')\n        return (\n            <Row key={id}>\n                <Col xs={5}>\n                    <Link to={{\n                        pathname: sprintf(ROUTES.STATDEBTORS_ITEM_PATH, id),\n                        query: filter.getParams()\n                    }}>{name}</Link>\n                </Col>\n                <Col xs={2}>{order}</Col>\n                <Col xs={3}>{debt}</Col>\n                <Col xs={2}>{time}</Col>\n            </Row>\n        )\n    })\n    const statDebtorsListByOrder = _.map(_.get(orderData, ['orderList', 'results']), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, ['client', 'name'])\n        const date = _.get(item, 'dateDelivery')\n        const orderSum = _.get(item, 'totalPrice')\n        const debt = _.get(item, 'totalBalance')\n        return (\n            <Row key={id}>\n                <Col xs={1}>{id}</Col>\n                <Col xs={4}><a\n                    onClick={ () => {\n                        orderData.handleOrderClick(id)\n                    }}>{name}</a>\n                </Col>\n                <Col xs={2}>{date}</Col>\n                <Col xs={2}>{orderSum}</Col>\n                <Col xs={3}>{debt}</Col>\n            </Row>\n        )\n    })\n\n    const statDebtorsItem = _.find(_.get(listData, 'data'), (o) => {\n        return _.get(o, ['client', 'id']) === _.toInteger(_.get(detailData, 'id'))\n    })\n\n    const statDebtorsDetail = (\n        <div key={_.get(detailData, 'id')} style={{width: '100%'}}>\n            {_.get(detailData, 'detailLoading')\n                ? <div style={{textAlign: 'center'}}>\n                    <CircularProgress/>\n                </div>\n                : <div>\n                    <div className={classes.title} style={{width: 'initial'}}>\n                        <div className={classes.titleLabel}\n                            onClick={detailData.handleCloseDetail}>{_.get(statDebtorsItem, ['client', 'name'])}</div>\n                        <div className={classes.subTitle}>\n                            <div>\n                                Прошло: <span>{_.get(statDebtorsItem, 'expiredDays')} дней</span>\n                            </div>\n                            <div>\n                                Сумма долга:\n                                <span>{_.get(statDebtorsItem, 'totalBalance')} {getConfig('PRIMARY_CURRENCY')}</span>\n                            </div>\n                        </div>\n                    </div>\n                    { _.get(orderData, 'orderLoading')\n                        ? <CircularProgress size={40} thickness={4}\n                                            style={{marginLeft: 'calc(50% - 50px)', padding: '30px 0'}}/>\n                        : <div style={{paddingBottom: '20px'}}>\n                            <div>{orderListHeader}</div>\n                            {orderList}\n                        </div>\n                    }\n                </div>}\n        </div>\n    )\n\n    const list = (_.get(tabData, 'tab') === ONE) ? {\n        header: listHeaderClient,\n        list: statDebtorsList,\n        loading: _.get(listData, 'listLoading')\n    } : {\n        header: listHeaderOrder,\n        list: statDebtorsListByOrder,\n        loading: _.get(listData, 'listLoading')\n    }\n\n    const totalDebtors = numberFormat(_.get(sumData, ['data', 'debtors']))\n    const totalOrders = numberFormat(_.get(sumData, ['data', 'orders']))\n    const totalBalance = numberFormat(_.get(sumData, ['data', 'totalBalance']), getConfig('PRIMARY_CURRENCY'))\n    return (\n        <Container>\n            <SubMenu url={ROUTES.STATDEBTORS_LIST_URL}/>\n            <Paper zDepth={1} style={{\n                margin: '0 0 20px',\n                padding: '8px 30px',\n                display: 'flex'\n            }}>\n                <Col xs={3}>\n                    <div className={classes.typeListStock}\n                         style={_.get(tabData, 'tab') === ONE ? {background: '#eceff5'} : {background: '#fff'}}>\n                        <a onClick={() => {\n                            tabData.handleClick(ONE)\n                        }} className={ _.get(tabData, 'tab') === ONE && 'active'}>Вид<br/>по клиенту</a>\n                    </div>\n                    <div className={classes.typeListStock}\n                         style={_.get(tabData, 'tab') === TWO ? {background: '#eceff5'} : {background: '#fff'}}>\n                        <a onClick={() => {\n                            tabData.handleClick(TWO)\n                        }} className={ _.get(tabData, 'tab') === TWO && 'active'}>Вид<br/>по заказу</a>\n                    </div>\n                </Col>\n                <Col xs={9} style={{textAlign: 'right'}}>\n                    {_.get(sumData, 'sumLoading')\n                        ? <div>\n                            <CircularProgress size={40} thickness={4}\n                                              style={{marginLeft: 'calc(50% - 50px)', padding: '30px 0'}}/>\n                        </div>\n                        : <div>\n                            <div className={classes.infoBlock}>\n                                Всего должников:<br />\n                                <span>{totalDebtors}</span>\n                            </div>\n                            <div className={classes.infoBlock}>\n                                Всего заказов:<br />\n                                <span>{totalOrders}</span>\n                            </div>\n                            <div className={classes.infoBlock}>\n                                Общий долг:<br />\n                                <span>{totalBalance}</span>\n                            </div>\n                        </div>}\n                </Col>\n            </Paper>\n\n            <GridList\n                filter={filter}\n                filterDialog={statDebtorsFilterDialog}\n                list={list}\n                detail={statDebtorsDetail}\n                actionsDialog={actions}\n            />\n\n            <StatDebtorsOrderDetails\n                open={_.get(orderData, 'orderDetailOpen')}\n                data={_.get(orderData, 'orderDetail') || {}}\n                loading={_.get(orderData, 'detailLoading')}\n                handleOrderClick={orderData.handleOrderClick}\n                close={orderData.handleOrderDetailClose}\n            />\n        </Container>\n    )\n})\n\nStatDebtorsGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    tabData: PropTypes.object,\n    orderData: PropTypes.object\n}\n\nexport default StatDebtorsGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/StatDebtors/StatDebtorsGridList.js","import StatDebtorsGridList from './StatDebtorsGridList'\n\nimport {STATDEBTORS_FILTER_KEY, STATDEBTORS_FILTER_OPEN} from './StatDebtorsFilterForm'\nimport {STAT_DEBTORS_ORDER_D} from './StatDebtorsOrderDetails'\n\nconst ORDER_DETAIL_OPEN = 'openOrderDetail'\n\nexport {\n    STAT_DEBTORS_ORDER_D,\n    STATDEBTORS_FILTER_KEY,\n    STATDEBTORS_FILTER_OPEN,\n    ORDER_DETAIL_OPEN,\n    StatDebtorsGridList\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/components/StatDebtors/index.js","import _ from 'lodash'\nimport injectSheet from 'react-jss'\nimport React from 'react'\nimport {compose} from 'recompose'\nimport PropTypes from 'prop-types'\nimport Paper from 'material-ui/Paper'\nimport {Row, Col} from 'react-flexbox-grid'\nimport ReactHighcharts from 'react-highcharts'\nimport GridList from '../GridList'\nimport Container from '../Container'\nimport SubMenu from '../SubMenu'\nimport * as ROUTES from '../../constants/routes'\nimport StatManufactureCreateDialog from './StatManufactureCreateDialog'\nimport Glue from '../Images/glue.png'\nimport Cylindrical from '../Images/cylindrical.png'\nimport Press from '../Images/press.png'\nimport Cut from '../Images/cut.png'\nimport Badge from '../Images/badge.png'\nimport KeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'name',\n        xs: 8,\n        title: 'Наименование'\n    },\n    {\n        sorting: true,\n        name: 'sum',\n        xs: 2,\n        title: 'Количество'\n    },\n    {\n        sorting: true,\n        xs: 2,\n        name: 'time',\n        title: 'Эффективность'\n    }\n]\nconst enhance = compose(\n    injectSheet({\n        infoBlock: {\n            width: '25%',\n            display: 'inline-block',\n            color: '#999',\n            fontWeight: '400',\n            fontSize: '13px',\n            lineHeight: '1.3',\n            borderLeft: '1px solid #efefef',\n            padding: '12px 15px 12px 15px',\n            alignItems: 'center',\n            '& span': {\n                color: '#333',\n                fontWeight: '700',\n                fontSize: '24px !important'\n            },\n            '&:first-child': {\n                border: 'none'\n            }\n        },\n        typeListStock: {\n            width: '100px',\n            height: 'calc(100% + 16px)',\n            marginTop: '-8px',\n            float: 'left',\n            display: 'flex',\n            alignItems: 'center',\n            textAlign: 'center',\n            borderRight: '1px solid #fff',\n            backgroundColor: '#eceff5',\n            '& a': {\n                display: 'block',\n                width: '100%',\n                fontWeight: '600'\n            },\n            '& a.active': {\n                color: '#333',\n                cursor: 'text'\n            },\n            '&:last-child': {\n                border: 'none'\n            },\n            '&:first-child': {\n\n                marginLeft: '-38px'\n            }\n        },\n        titleLabel: {\n            fontSize: '18px',\n            color: '#333',\n            fontWeight: '700'\n        },\n        bodyTitle: {\n            fontWeight: '600',\n            marginBottom: '10px'\n        },\n        link: {\n            color: '#12aaeb !important',\n            borderBottom: '1px dashed',\n            fontWeight: '400 !important'\n        },\n        loader: {\n            background: '#fff',\n            height: '400px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n        },\n        manufactures: {\n            margin: '0 -28px',\n            padding: '20px 28px 0',\n            borderBottom: '1px #e0e0e0 solid'\n        },\n        tabWrapper: {\n            display: 'flex',\n            width: '100%',\n            justifyContent: 'space-between'\n        },\n        tab: {\n            cursor: 'pointer',\n            padding: '20px',\n            height: '100%',\n            display: 'flex',\n            alignItems: 'center'\n        },\n        activeTab: {\n            paddingBottom: '20px',\n            flexBasis: '20%',\n            marginRight: '15px',\n            borderBottom: '3px transparent solid',\n            '&:last-child': {\n                margin: '0'\n            }\n        },\n        tabTitle: {\n            fontWeight: '600',\n            display: 'flex',\n            alignItems: 'center',\n            marginBottom: '0',\n            '& img': {\n                width: '24px',\n                marginRight: '10px'\n            }\n        },\n        statTitle: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            fontWeight: 'bold',\n            padding: '20px 0',\n            borderBottom: '1px #e0e0e0 solid',\n            '& a': {\n                fontWeight: '600'\n            }\n        },\n        diagram: {\n            padding: '20px 0'\n        },\n        divEffectBlock: {\n            display: 'flex',\n            alignItems: 'center',\n            width: '100%',\n            margin: '20px 0',\n            '& div': {\n                width: '50%',\n                fontSize: '13px',\n                fontWeight: 600,\n                color: '#666'\n            },\n            '& h3': {\n                fontSize: '36px',\n                color: '#333',\n                textAlign: 'center'\n            },\n            '& h3 span': {\n                fontSize: '14px'\n            },\n            '& div div': {\n                width: '100%'\n            },\n            '& div div div': {\n                width: '100%'\n            }\n        }\n    }),\n)\n\nconst StatManufactureGridList = enhance((props) => {\n    const {\n        filter,\n        createDialog,\n        listData,\n        detailData,\n        classes\n    } = props\n\n    const detailId = _.get(detailData, 'id')\n    const glue = 3\n    const cylindrical = 4\n    const press = 6\n    const cut = 7\n    const badge = 8\n    const manufactureList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const manufName = _.get(item, 'name')\n        return (\n        <div key={id} className={classes.activeTab} style={ detailId === id ? {borderBottom: '3px #12aaeb solid'} : {}}>\n            <Paper key={id} zDepth={1} className={classes.tab}\n                   style={ detailId === id ? {backgroundColor: '#f2f5f8', cursor: 'auto'} : {}}\n                   onClick={() => {\n                       listData.handleClickItem(id)\n                   }}>\n                <div className={classes.tabContent}>\n                    <div className={classes.tabTitle}>\n                        { id === glue ? <img src={Glue}/> : (\n                            id === cylindrical ? <img src={Cylindrical}/> : (\n                                id === press ? <img src={Press}/> : (\n                                    id === cut ? <img src={Cut}/> : (\n                                        id === badge ? <img src={Badge}/> : '')\n                                )\n                            )\n                        )}\n                        {manufName}\n                    </div>\n\n                </div>\n            </Paper>\n        </div>\n        )\n    })\n\n    const statManufactureList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const name = 'Наименование продукта'\n        const amount = '1000 шт'\n        const efficency = '88%'\n        return (\n            <Row key={id}>\n                <Col xs={8}>{name}</Col>\n                <Col xs={2}>{amount}</Col>\n                <Col xs={2}>\n                    <a className={classes.link} onClick={createDialog.handleOpenCreateDialog}>{efficency}</a>\n                </Col>\n            </Row>\n        )\n    })\n    const manufName = _.get(detailData, ['data', 'name'])\n\n    const sempl = 1\n\n    const list = {\n        header: listHeader,\n        list: statManufactureList,\n        loading: _.get(listData, 'listLoading')\n    }\n    const configCercle = {\n        chart: {\n            type: 'pie',\n            backgroundColor: 'transparent',\n            height: 150,\n            margin: ['0', '30', '0', '0']\n        },\n        legend: {\n            enabled: false\n        },\n        credits: {\n            enabled: false\n        },\n\n        plotOptions: {\n            pie: {\n                slicedOffset: 0,\n                innerSize: '70%',\n                size: '100%',\n                dataLabels: {\n                    enabled: false\n                },\n                states: {\n                    hover: {\n                        enabled: false\n                    }\n                }\n            }\n        },\n        tooltip: {\n            enabled: false\n        },\n        title: {\n            style: {\n                display: 'none'\n            }\n        },\n\n        series: [{\n            data: [{\n                data: 'Эффективность',\n                y: 80,\n                color: '#028eff'\n            }, {\n                data: 'Отклонение',\n                y: 20,\n                color: '#ccc'\n            }]\n        }]\n    }\n\n    const config = {\n        chart: {\n            type: 'areaspline',\n            height: 350\n        },\n        title: {\n            text: '',\n            style: {\n                display: 'none'\n            }\n        },\n        legend: {\n            enabled: false\n        },\n        credits: {\n            enabled: false\n        },\n        xAxis: {\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            tickmarkPlacement: 'on',\n            title: {\n                text: '',\n                style: {\n                    display: 'none'\n                }\n            }\n        },\n        yAxis: {\n            title: {\n                text: '',\n                style: {\n                    display: 'none'\n                }\n            },\n            plotLines: [{\n                value: 0,\n                width: 1,\n                color: '#808080'\n            }]\n        },\n        plotOptions: {\n            areaspline: {\n                fillOpacity: 0.1,\n                pointPlacement: 'on',\n                marker: {\n                    enabled: true\n                }\n            }\n        },\n        tooltip: {\n            shared: true,\n            valueSuffix: ' %',\n            backgroundColor: '#363636',\n            style: {\n                color: '#fff'\n            },\n            borderRadius: 2,\n            borderWidth: 0,\n            enabled: true,\n            shadow: false,\n            useHTML: true,\n            crosshairs: true,\n            pointFormat: '{series.name}: <b>{point.y}</b><br/>в отношении к BoM<br/>'\n        },\n        series: [{\n            marker: {\n                symbol: 'circle'\n            },\n            name: 'Эффективность',\n            data: [sempl + sempl + sempl + sempl, sempl + sempl + sempl, sempl + sempl + sempl + sempl],\n            color: '#7560a5'\n\n        }, {\n            marker: {\n                symbol: 'circle'\n            },\n            name: 'BoM',\n            data: [sempl + sempl + sempl, sempl + sempl + sempl + sempl, sempl + sempl + sempl],\n            color: '#43d0e3'\n        }]\n    }\n    return (\n        <Container>\n            <SubMenu url={ROUTES.STAT_MANUFACTURE_LIST_URL}/>\n            <div className={classes.manufactures}>\n                <div className={classes.tabWrapper}>\n                    {manufactureList}\n                </div>\n            </div>\n\n            <div className={classes.stats}>\n                <div className={classes.statTitle}>\n                    <div>{manufName}</div>\n                    <div><a>6 мая 2017 г. - 12 мая 2017 г. <KeyboardArrowDown color=\"#12aaeb\" style={{width: '13px', height: '13px'}}/></a></div>\n                </div>\n                <Row className={classes.diagram}>\n                    <Col xs={9}>\n                        <ReactHighcharts config ={config} />\n                    </Col>\n                    <Col xs={3}>\n                        <div style={{background: '#f1f5f8', padding: '25px', height: '82%'}}>\n                            <h2>Эффективность</h2>\n                            <div className={classes.divEffectBlock}>\n                                <div><ReactHighcharts config ={configCercle} /></div>\n                                <div>% эффективности<br/>относительно BoM</div>\n                            </div>\n                            <div className={classes.divEffectBlock}>\n                                <div><h3>1000 <span>кг</span></h3></div>\n                                <div>Произведено<br/>за период</div>\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n            <GridList\n                key={_.get(detailData, 'id')}\n                filter={filter}\n                list={list}\n            />\n\n            <StatManufactureCreateDialog\n                open={createDialog.openCreateDialog}\n                loading={createDialog.createLoading}\n                onClose={createDialog.handleCloseCreateDialog}\n            />\n        </Container>\n    )\n})\n\nStatManufactureGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    orderData: PropTypes.object,\n    createDialog: PropTypes.shape({\n        createLoading: PropTypes.bool.isRequired,\n        openCreateDialog: PropTypes.bool.isRequired,\n        handleOpenCreateDialog: PropTypes.func.isRequired,\n        handleCloseCreateDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default StatManufactureGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/StatManufacture/StatManufactureGridList.js","import StatManufactureGridList from './StatManufactureGridList'\nimport {STAT_MANUFACTURE_CREATE_DIALOG_OPEN} from './StatManufactureCreateDialog'\n\nconst STAT_MANUFACTURE_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nconst STAT_MANUFACTURE_DELETE_DIALOG_OPEN = 'openDeleteDialog'\nconst ORDER_DETAIL_OPEN = 'openOrderDetail'\n\nexport {\n    STAT_MANUFACTURE_CREATE_DIALOG_OPEN,\n    STAT_MANUFACTURE_UPDATE_DIALOG_OPEN,\n    STAT_MANUFACTURE_DELETE_DIALOG_OPEN,\n    ORDER_DETAIL_OPEN,\n    StatManufactureGridList\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/components/StatManufacture/index.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport {Link} from 'react-router'\nimport moment from 'moment'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Row, Col} from 'react-flexbox-grid'\nimport * as ROUTES from '../../constants/routes'\nimport GridList from '../GridList'\nimport Container from '../Container'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport {compose, withState} from 'recompose'\nimport MainStyles from '../Styles/MainStyles'\nimport InComing from 'material-ui/svg-icons/navigation/arrow-upward'\nimport OutComing from 'material-ui/svg-icons/navigation/arrow-downward'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport Paper from 'material-ui/Paper'\nimport numberFormat from '../../helpers/numberFormat'\nimport StatStockFilterForm from './StatStockFilterForm'\nimport getConfig from '../../helpers/getConfig'\n\nconst remainderHeader = [\n    {\n        sorting: true,\n        name: 'name',\n        xs: 2,\n        title: '№'\n    },\n    {\n        sorting: true,\n        name: 'title',\n        xs: 5,\n        title: 'Наименование'\n    },\n    {\n        sorting: true,\n        xs: 3,\n        name: 'balance',\n        title: 'Остаток'\n    },\n    {\n        sorting: true,\n        xs: 2,\n        name: 'money',\n        title: 'На сумму'\n    }\n]\nconst transactionHeader = [\n    {\n        sorting: true,\n        name: 'name',\n        xs: 2,\n        title: 'Баркод'\n    },\n    {\n        sorting: true,\n        name: 'type',\n        xs: 5,\n        title: 'Наименование'\n    },\n    {\n        sorting: true,\n        xs: 3,\n        name: 'balance',\n        title: 'Транзакция'\n    },\n    {\n        sorting: true,\n        xs: 2,\n        name: 'money',\n        title: 'Обьем'\n    }\n]\n\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        stocksList: {\n            margin: '10px 0 0',\n            '& li': {\n                display: 'inline-block',\n                fontSize: '0',\n                padding: '10px 0px 15px',\n                marginRight: '30px',\n                borderBottom: '3px solid transparent',\n                cursor: 'pointer',\n                '& a': {\n                    fontSize: '13px',\n                    color: '#999',\n                    fontWeight: '600'\n                }\n            },\n            '& li.active': {\n                color: '#333',\n                borderBottom: '3px solid #129fdd',\n                '& a': {\n                    color: '#333',\n                    cursor: 'text'\n                }\n            }\n        },\n        infoBlock: {\n            width: '25%',\n            display: 'inline-block',\n            color: '#999',\n            fontWeight: '400',\n            fontSize: '13px',\n            lineHeight: '1.3',\n            borderLeft: '1px solid #efefef',\n            padding: '12px 15px 12px 15px',\n            alignItems: 'center',\n            '& span': {\n                color: '#333',\n                fontWeight: '700',\n                fontSize: '24px !important'\n            },\n            '&:first-child': {\n                border: 'none'\n            }\n        },\n        typeListStock: {\n            width: '100px',\n            height: 'calc(100% + 16px)',\n            marginTop: '-8px',\n            float: 'left',\n            display: 'flex',\n            alignItems: 'center',\n            textAlign: 'center',\n            borderRight: '1px solid #fff',\n            backgroundColor: '#eceff5',\n            '& a': {\n                display: 'block',\n                width: '100%',\n                fontWeight: '600'\n            },\n            '& a.active': {\n                color: '#333',\n                cursor: 'text'\n            },\n            '&:last-child': {\n                border: 'none'\n            },\n            '&:first-child': {\n\n                marginLeft: '-38px'\n            }\n        },\n        loader: {\n            background: '#fff',\n            height: '400px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n        },\n        statLoader: {\n            background: '#fff',\n            height: '66px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n        }\n    })),\n    withState('showTransaction', 'setShowTransaction', false)\n)\n\nconst StatStockGridList = enhance((props) => {\n    const {\n        filter,\n        filterDialog,\n        listData,\n        detailData,\n        classes,\n        statStockData,\n        getDocument\n    } = props\n\n    const handleClickTapChange = _.get(listData, 'handleClickTapChange')\n    const statStockFilterDialog = (\n        <StatStockFilterForm\n            getDocument={getDocument}\n            isBalance={_.get(listData, 'tab')}\n            initialValues={filterDialog.initialValues}\n            filter={filter}\n            filterDialog={filterDialog}\n        />\n    )\n\n    const statStockDetail = (\n        <span>a</span>\n    )\n    const remainderStockList = _.map(_.get(listData, 'remainderList'), (item) => {\n        const id = _.get(item, 'id')\n        const title = _.get(item, 'title')\n        const cost = numberFormat(_.get(item, ['totalPrice']), getConfig('PRIMARY_CURRENCY'))\n        const balance = numberFormat(_.get(item, 'balance'), _.get(item, ['measurement', 'name']))\n        return (\n            <Row key={id}>\n                <Col xs={2}>{id}</Col>\n                <Col xs={5}>{title}</Col>\n                <Col xs={3}>{balance}</Col>\n                <Col xs={2}>{cost}</Col>\n            </Row>\n        )\n    })\n\n    const ZERO = 0\n\n    const transactionStockList = _.map(_.get(listData, 'transactionList'), (item) => {\n        const id = _.get(item, 'id')\n        const barcode = _.get(item, 'barcode')\n        const amount = _.get(item, 'amount')\n        const name = _.get(item, ['product', 'name'])\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY - HH:mm:ss')\n        const balance = numberFormat(_.get(item, 'amount'), _.get(item, ['product', 'measurement', 'name']))\n\n        return (\n            <Row key={id}>\n                <Col xs={2}><strong>{barcode}</strong></Col>\n                <Col xs={5}>{name}</Col>\n                <Col xs={3}>{createdDate}\n                    <span className={(amount < ZERO) ? 'redFont' : 'greenFont'}\n                          style={{top: '2px', position: 'relative', left: '3px'}}>\n                        {(amount < ZERO) ? <OutComing style={{width: '14px', height: '14px'}}/>\n                            : <InComing style={{width: '14px', height: '14px'}}/>}\n                    </span>\n                </Col>\n                <Col xs={2}>{balance}</Col>\n            </Row>\n        )\n    })\n\n    const balanceTab = 1\n    const transactionTab = 2\n    const tab = _.get(listData, 'tab')\n\n    const list = (tab === transactionTab) ? {\n        header: transactionHeader,\n        list: transactionStockList,\n        loading: _.get(listData, 'transactionLoading')\n    } : {\n        header: remainderHeader,\n        list: remainderStockList,\n        loading: _.get(listData, 'remainderLoading')\n    }\n\n    const handleClick = _.get(listData, 'handleClickStatStock')\n\n    const stockList = _.map(_.get(listData, 'stockList'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        return (\n                <li key={id}\n                    className={_.get(detailData, 'id') === id ? 'active' : ''}>\n                    <span onClick={() => { handleClick(id) }}>{name}</span>\n                </li>\n        )\n    })\n    const amountProduct = _.get(statStockData, ['statStockData', 'productCount'])\n    const amountTypeProduct = _.get(statStockData, ['statStockData', 'productTypeCount'])\n    const totalPriceProduct = numberFormat(_.get(statStockData, ['statStockData', 'totalPrice']), getConfig('PRIMARY_CURRENCY'))\n\n    return (\n        <Container>\n            <SubMenu url={ROUTES.STATSTOCK_LIST_URL}/>\n            <Row>\n                <Col xs={12}>\n                    <div className={classes.stocksList}>\n                        <li className={ !_.get(detailData, 'id') ? 'active' : ''}>\n                            <Link to={{\n                                pathname: sprintf(ROUTES.STATSTOCK_ITEM_PATH, ZERO),\n                                query: filter.getParams()\n                            }}>Все склады</Link>\n                        </li>\n                        {stockList}\n                    </div>\n                </Col>\n            </Row>\n            <Paper zDepth={1} style={{\n                margin: '0 0 20px',\n                padding: '8px 30px',\n                display: 'flex'\n            }}>\n                <Col xs={3}>\n                    <div className={classes.typeListStock} style={tab === balanceTab ? {background: '#eceff5'} : {background: '#fff'}}>\n                        <a onClick={() => { handleClickTapChange(balanceTab) }}\n                           className={tab === balanceTab ? 'active' : ''}>Остаток<br/>товара</a>\n                    </div>\n                    <div className={classes.typeListStock} style={tab === transactionTab ? {background: '#eceff5'} : {background: '#fff'}}>\n                        <a onClick={() => { handleClickTapChange(transactionTab) }}\n                           className={tab === transactionTab ? 'active' : ''}>Движение<br/>товаров</a>\n                    </div>\n                </Col>\n                <Col xs={9} style={{textAlign: 'right'}}>\n                    {_.get(statStockData, 'statStockDataLoading')\n                        ? <div className={classes.statLoader}>\n                            <CircularProgress size={40} thickness={4}/>\n                        </div>\n                        : <div>\n                            <div className={classes.infoBlock}>\n                                Товара на складе<br />\n                                <span>{amountProduct}</span>\n                            </div>\n                            <div className={classes.infoBlock}>\n                                Видов продукции:<br />\n                                <span>{amountTypeProduct}</span>\n                            </div>\n                            <div className={classes.infoBlock}>\n                                Товаров на сумму:<br />\n                                <span>{totalPriceProduct}</span>\n                            </div>\n                        </div>\n                    }\n                </Col>\n            </Paper>\n\n            <GridList\n                filter={filter}\n                filterDialog={statStockFilterDialog}\n                list={list}\n                detail={statStockDetail}\n            />\n        </Container>\n    )\n})\n\nStatStockGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    statStockData: PropTypes.object.isRequired,\n    handleClickStock: PropTypes.object.isRequired\n}\n\nexport default StatStockGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/StatStock/StatStockGridList.js","import StatStockGridList from './StatStockGridList'\n\nimport {STATSTOCK_FILTER_KEY, STATSTOCK_FILTER_OPEN} from './StatStockFilterForm'\n\nexport {\n    STATSTOCK_FILTER_KEY,\n    STATSTOCK_FILTER_OPEN,\n    StatStockGridList\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/components/StatStock/index.js","import _ from 'lodash'\nimport moment from 'moment'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Row, Col} from 'react-flexbox-grid'\nimport Person from '../Images/person.png'\nimport Pagination from '../GridList/GridListNavPagination'\nimport getConfig from '../../helpers/getConfig'\nimport numberFormat from '../../helpers/numberFormat.js'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            width: '100%',\n            height: '400px',\n            background: '#fff',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        popUp: {\n            color: '#333 !important',\n            overflowY: 'hidden !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            overflowX: 'hidden',\n            height: '100%'\n        },\n        content: {\n            width: '100%',\n            display: 'block',\n            '& > div:last-child': {\n                padding: '0 30px',\n                borderTop: '1px #efefef solid'\n            }\n        },\n        titleSummary: {\n            padding: '20px 30px',\n            display: 'flex',\n            justifyContent: 'space-between'\n        },\n        downBlock: {\n            padding: '20px 30px',\n            '& .row': {\n                lineHeight: '35px',\n                padding: '0 10px',\n                display: 'flex',\n                justifyContent: 'space-between',\n                '& > div:last-child': {\n                    textAlign: 'right',\n                    fontWeight: '600'\n                }\n            },\n            '& .row:last-child': {\n                fontWeight: '600',\n                borderTop: '1px #efefef solid'\n            }\n        },\n        subTitle: {\n            paddingBottom: '8px',\n            fontStyle: 'italic',\n            fontWeight: '400'\n        },\n        titleContent: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '0 30px',\n            height: '59px',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                position: 'absolute !important'\n            },\n            '& div': {\n                display: 'flex',\n                alignItems: 'center'\n            },\n            '& .personImage': {\n                borderRadius: '50%',\n                overflow: 'hidden',\n                flexBasis: '35px',\n                height: '35px',\n                minWidth: '30px',\n                width: '35px',\n                marginRight: '10px',\n                '& img': {\n                    display: 'flex',\n                    height: '100%',\n                    width: '100%'\n                }\n            }\n        },\n        tableWrapper: {\n            padding: '0 30px',\n            maxHeight: '424px',\n            overflowY: 'auto',\n            '& .row': {\n                '&:first-child': {\n                    fontWeight: '600'\n                }\n            },\n            '& .dottedList': {\n                padding: '15px 0',\n                '& > div:last-child': {\n                    textAlign: 'right'\n                },\n                '&:last-child:after': {\n                    display: 'none'\n                }\n            }\n        }\n    }),\n)\n\nconst StatAgentDialog = enhance((props) => {\n    const {\n        open,\n        onClose,\n        classes,\n        detailData\n    } = props\n    const loading = _.get(detailData, 'detailLoading')\n    const primaryCurrency = getConfig('PRIMARY_CURRENCY')\n    const agentName = _.get(detailData, ['agentDetail', '0', 'name'])\n    const income = numberFormat(_.get(detailData, ['agentDetail', '0', 'income']), primaryCurrency)\n    const fromDate = _.get(detailData, ['filterDateRange', 'fromDate'])\n                                            ? _.get(detailData, ['filterDateRange', 'fromDate']).format('DD.MM.YYYY')\n                                            : null\n    const toDate = _.get(detailData, ['filterDateRange', 'toDate'])\n                                            ? _.get(detailData, ['filterDateRange', 'toDate']).format('DD.MM.YYYY')\n                                            : null\n    const dateRange = (fromDate && toDate) ? fromDate + ' - ' + toDate : 'Весь'\n\n    const orderList = _.map(_.get(detailData, ['data', 'results']), (item) => {\n        const id = _.get(item, 'id')\n        const market = _.get(item, ['market', 'name'])\n        const totalPrice = _.get(item, 'totalPrice')\n        const createdDate = moment(_.get(item, 'createdDate')).format('LL')\n\n        return (\n            <Row key={id} className=\"dottedList\">\n                <Col xs={2}>{id}</Col>\n                <Col xs={6}>{market}</Col>\n                <Col xs={2}>{createdDate}</Col>\n                <Col xs={2}>{totalPrice} {primaryCurrency}</Col>\n            </Row>\n        )\n    })\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '400px'} : {width: '700px'}}\n            bodyStyle={{minHeight: 'auto'}}\n            bodyClassName={classes.popUp}>\n            {loading ? <div className={classes.loader}>\n                <CircularProgress/>\n            </div>\n            : <div>\n                    <div className={classes.titleContent}>\n                        <div>\n                            <div className=\"personImage\">\n                                <img src={Person} alt=\"\"/>\n                            </div>\n                            <div>{agentName}</div>\n                        </div>\n                        <IconButton onTouchTap={onClose}>\n                            <CloseIcon2 color=\"#666666\"/>\n                        </IconButton>\n                    </div>\n                    <div className={classes.content}>\n                        <div className={classes.titleSummary}>\n                            <div>Период: <strong>{dateRange}</strong></div>\n                            <div>Сумма: <strong>{income}</strong></div>\n                        </div>\n                        <div className={classes.tableWrapper}>\n                            <Row className=\"dottedList\">\n                                <Col xs={2}>№ заказа</Col>\n                                <Col xs={6}>Магазин</Col>\n                                <Col xs={2}>Дата</Col>\n                                <Col xs={2}>Сумма</Col>\n                            </Row>\n                            {orderList}\n                        </div>\n                        <Pagination filter={_.get(detailData, 'filter')}/>\n                    </div>\n                </div>}\n        </Dialog>\n    )\n})\n\nStatAgentDialog.propTyeps = {\n    filter: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    loading: PropTypes.bool\n}\n\nexport default StatAgentDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Statistics/StatAgentDialog.js","import _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport {Row, Col} from 'react-flexbox-grid'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport {reduxForm, Field} from 'redux-form'\nimport DateToDateField from '../ReduxForm/Basic/DateToDateField'\nimport Search from 'material-ui/svg-icons/action/search'\nimport IconButton from 'material-ui/IconButton'\nimport Excel from 'material-ui/svg-icons/av/equalizer'\nimport Back from 'material-ui/svg-icons/content/reply'\nimport Pagination from '../GridList/GridListNavPagination'\nimport NotFound from '../Images/not-found.png'\nimport Person from '../Images/person.png'\nimport numberFormat from '../../helpers/numberFormat'\n\nexport const STAT_CASHBOX_FILTER_KEY = {\n    CASHBOX: 'cashbox',\n    TO_DATE: 'toDate',\n    FROM_DATE: 'fromDate'\n}\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        detailWrapper: {\n            background: '#fff',\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            zIndex: '20'\n        },\n        wrapper: {\n            height: 'calc(100% - 40px)',\n            overflowY: 'auto',\n            overflowX: 'hidden',\n            padding: '20px 30px',\n            '& > div:nth-child(2)': {\n                marginTop: '10px',\n                borderTop: '1px #efefef solid',\n                borderBottom: '1px #efefef solid'\n            },\n            '& .row': {\n                margin: '0 !important'\n            }\n        },\n        tableWrapper: {\n            '& .row': {\n                '&:after': {\n                    bottom: '-1px'\n                },\n                '& > div': {\n                    display: 'flex',\n                    height: '40px',\n                    alignItems: 'center',\n                    '&:last-child': {\n                        justifyContent: 'flex-end'\n                    }\n                }\n            },\n            '& .dottedList': {\n                padding: '0',\n                '&:last-child:after': {\n                    content: '\"\"',\n                    backgroundImage: 'none'\n                }\n            }\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        button: {\n            background: '#71ce87',\n            borderRadius: '2px',\n            color: '#fff',\n            fontWeight: '600',\n            display: 'inline-flex',\n            alignItems: 'center',\n            padding: '5px 15px',\n            '& svg': {\n                width: '18px !important'\n            }\n        },\n        closeDetail: {\n            extend: 'button',\n            background: '#12aaeb',\n            marginRight: '10px'\n        },\n        form: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n        },\n        filter: {\n            display: 'flex',\n            alignItems: 'center',\n            '& > div': {\n                width: '170px !important',\n                position: 'relative',\n                marginRight: '40px',\n                '&:after': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    right: '-20px',\n                    height: '30px',\n                    width: '1px',\n                    top: '50%',\n                    marginTop: '-15px',\n                    background: '#efefef'\n                },\n                '&:last-child': {\n                    '&:after': {\n                        display: 'none'\n                    }\n                }\n            }\n        },\n        balances: {\n            display: 'flex',\n            padding: '20px 0',\n            borderTop: '1px #efefef solid',\n            borderBottom: '1px #efefef solid'\n        },\n        balanceItem: {\n            marginRight: '50px',\n            '& span': {\n                color: '#666',\n                marginBottom: '5px'\n            },\n            '& div': {\n                fontSize: '24px',\n                fontWeight: '600'\n            },\n            '&:last-child': {\n                marginRight: '0'\n            }\n        },\n        searchButton: {\n            marginLeft: '-10px !important',\n            '& div': {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center'\n            }\n        },\n        navigation: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            borderBottom: '1px #efefef solid'\n        },\n        cashier: {\n            display: 'flex',\n            alignItems: 'center',\n            fontWeight: '600',\n            '& img': {\n                width: '30px',\n                height: '30px',\n                borderRadius: '50%',\n                marginRight: '10px'\n            },\n            '& span': {\n                lineHeight: '13px'\n            }\n        },\n        emptyQuery: {\n            background: 'url(' + NotFound + ') no-repeat center center',\n            backgroundSize: '200px',\n            padding: '200px 0 0',\n            textAlign: 'center',\n            fontSize: '13px',\n            color: '#666',\n            '& svg': {\n                width: '50px !important',\n                height: '50px !important',\n                color: '#999 !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'StatCashboxFilterForm',\n        enableReinitialize: true\n    }),\n)\n\nconst StatCashboxDetails = enhance((props) => {\n    const {\n        listData,\n        detailData,\n        classes,\n        filter,\n        handleSubmitFilterDialog,\n        getDocument\n    } = props\n\n    const listLoading = _.get(detailData, 'detailLoading')\n    const handleCloseDetail = _.get(detailData, 'handleCloseDetail')\n    const currency = _.get(_.find(_.get(listData, 'data'), {'id': _.get(detailData, 'id')}), ['currency', 'name'])\n\n    const headerStyle = {\n        backgroundColor: '#fff',\n        fontWeight: '600',\n        color: '#666'\n    }\n    const iconStyle = {\n        icon: {\n            color: '#5d6474',\n            width: 22,\n            height: 22\n        },\n        button: {\n            width: 40,\n            height: 40,\n            padding: 0\n        }\n    }\n\n    const headers = (\n        <Row style={headerStyle} className=\"dottedList\">\n            <Col xs={2}>№</Col>\n            <Col xs={3}>Категория</Col>\n            <Col xs={4}>Описание</Col>\n            <Col xs={3}>Сумма</Col>\n        </Row>\n    )\n    const list = _.map(_.get(detailData, 'transactionData'), (item) => {\n        const id = _.get(item, 'id')\n        const comment = _.get(item, 'comment') || '-'\n        const amount = numberFormat(_.get(item, 'amount'), currency)\n\n        return (\n            <Row key={id} className=\"dottedList\">\n                <Col xs={2}>{id}</Col>\n                <Col xs={3}>Категория</Col>\n                <Col xs={4}>{comment}</Col>\n                <Col xs={3}>{amount}</Col>\n            </Row>\n        )\n    })\n\n    return (\n        <div className={classes.detailWrapper}>\n            {listLoading\n                ? <div className={classes.loader}>\n                    <CircularProgress size={40} thickness={4}/>\n                </div>\n                : <div className={classes.wrapper}>\n                    <form className={classes.form} onSubmit={handleSubmitFilterDialog}>\n                        <div className={classes.filter}>\n                            <Field\n                                className={classes.inputFieldCustom}\n                                name=\"date\"\n                                component={DateToDateField}\n                                label=\"Диапазон дат\"\n                                fullWidth={true}/>\n                            <IconButton\n                                className={classes.searchButton}\n                                iconStyle={iconStyle.icon}\n                                style={iconStyle.button}\n                                type=\"submit\">\n                                <Search/>\n                            </IconButton>\n                        </div>\n                        <div>\n                            <a className={classes.closeDetail}\n                               onClick={handleCloseDetail}>\n                                <Back color=\"#fff\"/> <span>Вернуться</span>\n                            </a>\n                            <a className={classes.button}\n                               onClick={getDocument.handleGetDocument}>\n                                <Excel color=\"#fff\"/> <span>Excel</span>\n                            </a>\n                        </div>\n                    </form>\n                    <div className={classes.balances}>\n                        <div className={classes.balanceItem}>\n                            <span>Баланс на начало периода</span>\n                            <div>10 000 000 UZS</div>\n                        </div>\n                        <div className={classes.balanceItem}>\n                            <span>Расход за период</span>\n                            <div>-5 000 000 UZS</div>\n                        </div>\n                        <div className={classes.balanceItem}>\n                            <span>Доход за период</span>\n                            <div>25 000 000 UZS</div>\n                        </div>\n                        <div className={classes.balanceItem}>\n                            <span>Баланс на конец периода</span>\n                            <div>30 000 000 UZS</div>\n                        </div>\n                    </div>\n                    <div className={classes.navigation}>\n                        <div className={classes.cashier}>\n                            <img src={Person} alt=\"\"/>\n                            <span>Бамбамбиев <br/> Куркуда</span>\n                        </div>\n                        <Pagination filter={filter}/>\n                    </div>\n                    {(_.isEmpty(list) && !listLoading) ? <div className={classes.emptyQuery}>\n                        <div>По вашему запросу ничего не найдено</div>\n                    </div>\n                        : <div className={classes.tableWrapper}>\n                            {headers}\n                            {list}\n                        </div>}\n                </div>}\n\n        </div>\n    )\n})\n\nStatCashboxDetails.propTypes = {\n    filter: PropTypes.object,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    handleSubmitFilterDialog: PropTypes.func,\n    getDocument: PropTypes.object\n}\n\nexport default StatCashboxDetails\n\n\n\n// WEBPACK FOOTER //\n// src/components/Statistics/StatCashboxDetails.js","import React from 'react'\nimport _ from 'lodash'\nimport moment from 'moment'\nimport PropTypes from 'prop-types'\nimport {compose, withState} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport Paper from 'material-ui/Paper'\nimport {Row, Col} from 'react-flexbox-grid'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport getConfig from '../../helpers/getConfig'\nimport numberFormat from '../../helpers/numberFormat'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        popUp: {\n            color: '#333 !important',\n            overflowY: 'hidden !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            overflowX: 'hidden',\n            height: '100%'\n        },\n        titleContent: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '20px 30px',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                padding: '0 !important',\n                position: 'absolute !important'\n            }\n        },\n        content: {\n            width: '100%',\n            display: 'flex'\n        },\n        link: {\n            borderBottom: '1px dashed',\n            fontWeight: '600'\n        },\n        leftSide: {\n            maxWidth: '30%',\n            flexBasis: '30%',\n            padding: '20px 30px',\n            borderRight: '1px #efefef solid'\n        },\n        subtitle: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            fontWeight: '600',\n            marginBottom: '10px'\n        },\n        block: {\n            marginBottom: '20px',\n            '& ul': {\n                display: 'inline-block',\n                width: '50%',\n                '& li': {\n                    lineHeight: '25px'\n                }\n            }\n        },\n        rightSide: {\n            maxWidth: '70%',\n            flexBasis: '70%',\n            padding: '20px 30px'\n        },\n        tableWrapper: {\n            '& .row': {\n                padding: '0',\n                height: '40px',\n                '& > div': {\n                    textAlign: 'right',\n                    '&:first-child': {\n                        textAlign: 'left'\n                    }\n                },\n                '&:first-child': {\n                    fontWeight: '600'\n                },\n                '&:last-child:after': {\n                    display: 'none'\n                }\n            }\n        }\n    }),\n    withState('openInfo', 'setOpenInfo', false)\n)\n\nconst ONE = 1\nconst StatDebtorsDialog = enhance((props) => {\n    const {open, loading, onClose, classes, data, setOpenInfo, openInfo} = props\n\n    const primaryCurrency = getConfig('PRIMARY_CURRENCY')\n    const id = _.get(data, 'id')\n    const client = _.get(data, ['client', 'name'])\n    const paymentDate = moment(_.get(data, 'paymentDate')).format('LL')\n    const totalPrice = numberFormat(_.get(data, 'totalPrice'), primaryCurrency)\n    const totalPaid = numberFormat(_.get(data, 'totalPaid'), primaryCurrency)\n    const totalBalance = numberFormat(_.get(data, 'totalBalance'), primaryCurrency)\n    const discountPrice = numberFormat(_.get(data, 'discountPrice'), primaryCurrency)\n    const status = _.toInteger(_.get(data, 'status')) === ONE ? 'Доставлен' : 'Недоставлен'\n    const contactName = _.get(data, ['client', 'name'])\n    const contactEmail = _.get(data, ['client', 'email'])\n    const contactPhone = _.get(data, ['client', 'telephone'])\n\n    const productList = _.map(_.get(data, 'products'), (item, index) => {\n        const name = _.get(item, ['product', 'name'])\n        const amount = _.get(item, 'amount')\n        const price = numberFormat(_.get(item, 'price'), primaryCurrency)\n        const measurement = _.get(item, ['product', 'measurement', 'name'])\n\n        return (\n            <Row key={index} className=\"dottedList\">\n                <Col xs={7}>{name}</Col>\n                <Col xs={2}>{amount} {measurement}</Col>\n                <Col xs={3}>{price}</Col>\n            </Row>\n        )\n    })\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '400px'} : {width: '950px', maxWidth: 'none'}}\n            bodyStyle={{minHeight: 'auto'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>Детализация задолжности</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            {loading ? <div style={{textAlign: 'center'}}>\n                <CircularProgress size={40} thickness={4}/>\n            </div>\n                : <div className={classes.content}>\n                    <div className={classes.leftSide}>\n                        <div className={classes.block}>\n                            <div className={classes.subtitle}>\n                                <div>Клиент</div>\n                                <span className={classes.link}\n                                   onMouseEnter={() => { setOpenInfo(true) }}\n                                   onMouseLeave={() => {\n                                       if (openInfo) {\n                                           setOpenInfo(false)\n                                       }\n                                   }}>\n                                    <span>контакты</span>\n                                    <Paper zDepth={1} style={openInfo && {opacity: '1', zIndex: '2', top: '0'}}>\n                                        <li>\n                                            <span>Контактное лицо:</span>\n                                            <span>{contactName}</span>\n                                        </li>\n                                        <li>\n                                            <span>Телефон:</span>\n                                            <span>{contactPhone}</span>\n                                        </li>\n                                        <li>\n                                            <span>Email:</span>\n                                            <span>{contactEmail}</span>\n                                        </li>\n                                    </Paper>\n                                </span>\n                            </div>\n                            <div>{client}</div>\n                        </div>\n                        <div className={classes.block}>\n                            <div className={classes.subtitle}>\n                                <div>Заказ</div>\n                                <div>{id}</div>\n                            </div>\n                            <ul>\n                                <li>Тип оплаты</li>\n                                <li>Дата оплаты</li>\n                                <li>Стоимость</li>\n                                <li>Скидка (0%)</li>\n                                <li>Оплачено</li>\n                                <li>Остаток</li>\n                                <li>Статус</li>\n                            </ul>\n                            <ul>\n                                <li>Перечисление</li>\n                                <li>{paymentDate}</li>\n                                <li>{totalPrice}</li>\n                                <li>{discountPrice}</li>\n                                <li>{totalPaid}</li>\n                                <li>{totalBalance}</li>\n                                <li>{status}</li>\n                            </ul>\n                        </div>\n                    </div>\n                    <div className={classes.rightSide}>\n                        <div className={classes.tableWrapper}>\n                            <Row className=\"dottedList\">\n                                <Col xs={7}>Наименование</Col>\n                                <Col xs={2}>Кол-во</Col>\n                                <Col xs={3}>Сумма</Col>\n                            </Row>\n                            {productList}\n                        </div>\n                    </div>\n                </div>}\n        </Dialog>\n    )\n})\n\nStatDebtorsDialog.propTyeps = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    loading: PropTypes.bool\n}\n\nexport default StatDebtorsDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Statistics/StatDebtorsDialog.js","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport {Row, Col} from 'react-flexbox-grid'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        popUp: {\n            color: '#333 !important',\n            overflowY: 'hidden !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            overflowX: 'hidden',\n            height: '100%'\n        },\n        titleContent: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '20px 30px',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                padding: '0 !important',\n                position: 'absolute !important'\n            }\n        },\n        content: {\n            width: '100%',\n            display: 'block'\n        },\n        tableWrapper: {\n            padding: '0 30px',\n            '& .row': {\n                padding: '15px 0',\n                '& > div:last-child': {\n                    textAlign: 'right'\n                },\n                '&:first-child': {\n                    fontWeight: '600'\n                },\n                '&:last-child:after': {\n                    display: 'none'\n                }\n            }\n        },\n        summary: {\n            borderTop: '1px #efefef solid',\n            padding: '15px 0',\n            margin: '0 30px',\n            textAlign: 'right',\n            fontWeight: 'bold'\n        }\n    }),\n)\n\nconst StatIncomeDialog = enhance((props) => {\n    const {open, loading, onClose, classes} = props\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '400px'} : {width: '700px'}}\n            bodyStyle={{minHeight: 'auto'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>Заказ №221</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.content}>\n                <div className={classes.tableWrapper}>\n                    <Row className=\"dottedList\">\n                        <Col xs={8}>Товар</Col>\n                        <Col xs={2}>Кол-во</Col>\n                        <Col xs={2}>Сумма</Col>\n                    </Row>\n                    <Row className=\"dottedList\">\n                        <Col xs={8}>Миф морозная свежесть</Col>\n                        <Col xs={2}>50 шт</Col>\n                        <Col xs={2}>758 000 UZS</Col>\n                    </Row>\n                    <Row className=\"dottedList\">\n                        <Col xs={8}>Миф морозная свежесть</Col>\n                        <Col xs={2}>50 шт</Col>\n                        <Col xs={2}>758 000 UZS</Col>\n                    </Row>\n                </div>\n                <div className={classes.summary}>3 000 000 UZS</div>\n            </div>\n        </Dialog>\n    )\n})\n\nStatIncomeDialog.propTyeps = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    loading: PropTypes.bool\n}\n\nexport default StatIncomeDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Statistics/StatIncomeDialog.js","import _ from 'lodash'\nimport moment from 'moment'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport {Row, Col} from 'react-flexbox-grid'\nimport Pagination from '../ReduxForm/Pagination'\nimport getConfig from '../../helpers/getConfig'\nimport numberFormat from '../../helpers/numberFormat'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            width: '100%',\n            height: '400px',\n            background: '#fff',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        dialog: {\n            '& > div:first-child > div:first-child': {\n                transform: 'translate(0px, 0px) !important'\n            }\n        },\n        popUp: {\n            color: '#333 !important',\n            overflowY: 'hidden !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            overflowX: 'hidden',\n            maxHeight: 'none !important'\n        },\n        content: {\n            width: '100%',\n            display: 'block',\n            '& > div:last-child': {\n                padding: '0 30px',\n                borderTop: '1px #efefef solid'\n            }\n        },\n        titleSummary: {\n            padding: '20px 30px',\n            display: 'flex',\n            justifyContent: 'space-between'\n        },\n        downBlock: {\n            padding: '20px 30px',\n            '& .row': {\n                lineHeight: '35px',\n                padding: '0 10px',\n                display: 'flex',\n                justifyContent: 'space-between',\n                '& > div:last-child': {\n                    textAlign: 'right',\n                    fontWeight: '600'\n                }\n            },\n            '& .row:last-child': {\n                fontWeight: '600',\n                borderTop: '1px #efefef solid'\n            }\n        },\n        subTitle: {\n            paddingBottom: '8px',\n            fontStyle: 'italic',\n            fontWeight: '400'\n        },\n        titleContent: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '0 30px',\n            height: '59px',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                position: 'absolute !important'\n            },\n            '& div': {\n                display: 'flex',\n                alignItems: 'center'\n            }\n\n        },\n        tableWrapper: {\n            padding: '0 30px',\n            maxHeight: '380px',\n            overflow: 'auto',\n            '& .row': {\n                '&:first-child': {\n                    fontWeight: '600'\n                }\n            },\n            '& .dottedList': {\n                padding: '15px 0',\n                '& > div:last-child': {\n                    textAlign: 'right'\n                },\n                '&:last-child:after': {\n                    display: 'none'\n                }\n            }\n        }\n    }),\n)\n\nconst StatMarketDialog = enhance((props) => {\n    const {open, onClose, classes, detailData, filterItem} = props\n\n    const loading = _.get(detailData, 'detailLoading')\n    const primaryCurrency = getConfig('PRIMARY_CURRENCY')\n    const marketName = _.get(detailData, ['marketDetail', 'name'])\n    const income = numberFormat(_.get(detailData, ['marketDetail', 'income']), primaryCurrency)\n    const fromDate = _.get(detailData, ['filterDateRange', 'fromDate'])\n        ? _.get(detailData, ['filterDateRange', 'fromDate']).format('DD.MM.YYYY')\n        : null\n    const toDate = _.get(detailData, ['filterDateRange', 'toDate'])\n        ? _.get(detailData, ['filterDateRange', 'toDate']).format('DD.MM.YYYY')\n        : null\n    const dateRange = (fromDate && toDate) ? fromDate + ' - ' + toDate : 'Весь'\n\n    const orderList = _.map(_.get(detailData, ['data', 'results']), (item) => {\n        const id = _.get(item, 'id')\n        const client = _.get(item, ['client', 'name'])\n        const totalPrice = numberFormat(_.get(item, 'totalPrice'))\n        const createdDate = moment(_.get(item, 'createdDate')).format('LL')\n\n        return (\n            <Row key={id} className=\"dottedList\">\n                <Col xs={2}>{id}</Col>\n                <Col xs={4}>{client}</Col>\n                <Col xs={3}>{createdDate}</Col>\n                <Col xs={3}>{totalPrice} {primaryCurrency}</Col>\n            </Row>\n        )\n    })\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '400px'} : {width: '700px'}}\n            bodyStyle={{minHeight: 'auto'}}\n            bodyClassName={classes.popUp}>\n            {loading ? <div className={classes.loader}>\n                <CircularProgress/>\n            </div>\n            : <div>\n                    <div className={classes.titleContent} style={{textTransform: 'capitalize'}}>\n                        <span>{marketName}</span>\n                        <IconButton onTouchTap={onClose}>\n                            <CloseIcon2 color=\"#666666\"/>\n                        </IconButton>\n                    </div>\n                    <div className={classes.content}>\n                        <div className={classes.titleSummary}>\n                            <div>Период: <strong>{dateRange}</strong></div>\n                            <div>Сумма: <strong>{income}</strong></div>\n                        </div>\n                        <div className={classes.tableWrapper}>\n                            <Row className=\"dottedList\">\n                                <Col xs={2}>№ заказа</Col>\n                                <Col xs={4}>Агент</Col>\n                                <Col xs={3}>Дата</Col>\n                                <Col xs={3}>Сумма</Col>\n                            </Row>\n                            {orderList}\n                        </div>\n                        <Pagination filter={filterItem}/>\n                    </div>\n                </div>}\n        </Dialog>\n    )\n})\n\nStatMarketDialog.propTyeps = {\n    filter: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    loading: PropTypes.bool\n}\n\nexport default StatMarketDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Statistics/StatMarketDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Row, Col} from 'react-flexbox-grid'\nimport Pagination from '../GridList/GridListNavPagination'\nimport dateFormat from '../../helpers/dateFormat'\nimport numberFormat from '../../helpers/numberFormat'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            width: '100%',\n            height: '400px',\n            background: '#fff',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        popUp: {\n            color: '#333 !important',\n            overflowY: 'hidden !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            overflowX: 'hidden',\n            height: '100%'\n        },\n        content: {\n            width: '100%',\n            display: 'block',\n            '& > div:last-child': {\n                padding: '0 30px',\n                borderTop: '1px #efefef solid'\n            }\n        },\n        titleSummary: {\n            padding: '20px 30px',\n            display: 'flex',\n            justifyContent: 'space-between'\n        },\n        downBlock: {\n            padding: '20px 30px',\n            '& .row': {\n                lineHeight: '35px',\n                padding: '0 10px',\n                display: 'flex',\n                justifyContent: 'space-between',\n                '& > div:last-child': {\n                    textAlign: 'right',\n                    fontWeight: '600'\n                }\n            },\n            '& .row:last-child': {\n                fontWeight: '600',\n                borderTop: '1px #efefef solid'\n            }\n        },\n        subTitle: {\n            paddingBottom: '8px',\n            fontStyle: 'italic',\n            fontWeight: '400'\n        },\n        titleContent: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '0 30px',\n            height: '59px',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                position: 'absolute !important'\n            },\n            '& div': {\n                display: 'flex',\n                alignItems: 'center'\n            },\n            '& .personImage': {\n                borderRadius: '50%',\n                overflow: 'hidden',\n                flexBasis: '35px',\n                height: '35px',\n                minWidth: '30px',\n                width: '35px',\n                marginRight: '10px',\n                '& img': {\n                    display: 'flex',\n                    height: '100%',\n                    width: '100%'\n                }\n            }\n        },\n        tableWrapper: {\n            padding: '0 30px',\n            maxHeight: '424px',\n            overflowY: 'auto',\n            '& .row': {\n                '&:first-child': {\n                    fontWeight: '600'\n                }\n            },\n            '& .dottedList': {\n                padding: '15px 0',\n                '& > div:last-child': {\n                    textAlign: 'right'\n                },\n                '&:last-child:after': {\n                    display: 'none'\n                }\n            }\n        }\n    }),\n)\n\nconst StatRemainderDialog = enhance((props) => {\n    const {\n        open,\n        onClose,\n        classes,\n        detailData,\n        filterItem\n    } = props\n\n    const loading = _.get(detailData, 'detailLoading')\n    const agentName = _.get(detailData, ['rowDetail', '0', 'title'])\n    const measurement = _.get(detailData, ['rowDetail', '0', 'measurement', 'name'])\n\n    const remainderList = _.map(_.get(detailData, ['data', 'results']), (item) => {\n        const balance = numberFormat(_.get(item, ['balance']), measurement)\n        const barcode = _.get(item, 'barcode')\n        const createdDate = dateFormat(_.get(item, 'createdDate'))\n        const isDefect = _.get(item, 'isDefect') ? 'Брак' : 'OK'\n\n        return (\n            <Row key={barcode} className=\"dottedList\">\n                <Col xs={3}>{barcode}</Col>\n                <Col xs={4}>{createdDate}</Col>\n                <Col xs={3}>{balance}</Col>\n                <Col xs={2} style={{textAlign: 'left'}}>{isDefect}</Col>\n            </Row>\n        )\n    })\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '400px'} : {width: '700px'}}\n            bodyStyle={{minHeight: 'auto'}}\n            bodyClassName={classes.popUp}>\n            {loading ? <div className={classes.loader}>\n                <CircularProgress/>\n            </div>\n                : <div>\n                    <div className={classes.titleContent}>\n                        <div>{agentName}</div>\n                        <IconButton onTouchTap={onClose}>\n                            <CloseIcon2 color=\"#666666\"/>\n                        </IconButton>\n                    </div>\n                    <div className={classes.content}>\n                        <div className={classes.tableWrapper}>\n                            <Row className=\"dottedList\">\n                                <Col xs={3}>Код</Col>\n                                <Col xs={4}>Дата приемки</Col>\n                                <Col xs={3}>Кол-во</Col>\n                                <Col xs={2} style={{textAlign: 'left'}}>Статус</Col>\n                            </Row>\n                            {remainderList}\n                        </div>\n                        <Pagination filter={filterItem}/>\n                    </div>\n                </div>}\n        </Dialog>\n    )\n})\n\nStatRemainderDialog.propTyeps = {\n    filterItem: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    loading: PropTypes.bool\n}\n\nexport default StatRemainderDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Statistics/StatRemainderDialog.js","import _ from 'lodash'\nimport moment from 'moment'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Row, Col} from 'react-flexbox-grid'\nimport IconButton from 'material-ui/IconButton'\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\nimport * as ROUTES from '../../constants/routes'\nimport GridList from '../GridList'\nimport Container from '../Container'\nimport StockCreateDialog from './StockCreateDialog'\nimport ConfirmDialog from '../ConfirmDialog'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport Tooltip from '../ToolTip'\nimport IconMenu from 'material-ui/IconMenu'\nimport MenuItem from 'material-ui/MenuItem'\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\nimport Edit from 'material-ui/svg-icons/image/edit'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'id',\n        xs: 1,\n        title: 'Id'\n    },\n    {\n        sorting: true,\n        name: 'name',\n        xs: 3,\n        title: 'Наименование'\n    },\n    {\n        sorting: true,\n        name: 'manager',\n        xs: 3,\n        title: 'Завсклад'\n    },\n    {\n        sorting: true,\n        name: 'stockType',\n        xs: 2,\n        title: 'Тип склада'\n    },\n    {\n        sorting: true,\n        xs: 2,\n        name: 'created_date',\n        title: 'Дата создания'\n    },\n    {\n        sorting: false,\n        xs: 1,\n        name: 'actions',\n        title: ''\n    }\n]\n\nconst enhance = compose(\n    injectSheet({\n        addButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        addButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px'\n        }\n    })\n)\n\nconst StockGridList = enhance((props) => {\n    const {\n        filter,\n        createDialog,\n        updateDialog,\n        actionsDialog,\n        confirmDialog,\n        listData,\n        detailData,\n        classes\n    } = props\n\n    const actions = (\n        <div>\n            <IconButton onTouchTap={actionsDialog.handleActionEdit}>\n                <ModEditorIcon />\n            </IconButton>\n\n            <IconButton onTouchTap={actionsDialog.handleActionDelete}>\n                <DeleteIcon />\n            </IconButton>\n        </div>\n    )\n\n    const stockDetail = (\n        <span>a</span>\n    )\n\n    const main = 1\n\n    const stockList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        const manager = _.get(item, ['manager', 'firstName']) + ' ' + _.get(item, ['manager', 'secondName'])\n        const stockType = _.toInteger(_.get(item, 'stockType')) === main ? 'Производственный' : 'Основной'\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\n        const iconButton = (\n            <IconButton style={{padding: '0 12px'}}>\n                <MoreVertIcon />\n            </IconButton>\n        )\n        return (\n            <Row key={id}>\n                <Col xs={1}>{id}</Col>\n                <Col xs={3}>{name}</Col>\n                <Col xs={3}>{manager}</Col>\n                <Col xs={2}>{stockType}</Col>\n                <Col xs={2}>{createdDate}</Col>\n                <Col xs={1} style={{textAlign: 'right'}}>\n                    <IconMenu\n                        iconButtonElement={iconButton}\n                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\n                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\n                        <MenuItem\n                            primaryText=\"Изменить\"\n                            leftIcon={<Edit />}\n                            onTouchTap={() => {\n                                updateDialog.handleOpenUpdateDialog(id)\n                            }}\n                        />\n                        <MenuItem\n                            primaryText=\"Удалить \"\n                            leftIcon={<DeleteIcon />}\n                            onTouchTap={() => {\n                                confirmDialog.handleOpenConfirmDialog(id)\n                            }}\n                        />\n                    </IconMenu>\n                </Col>\n            </Row>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: stockList,\n        loading: _.get(listData, 'listLoading')\n    }\n\n    return (\n        <Container>\n            <SubMenu url={ROUTES.STOCK_LIST_URL}/>\n            <div className={classes.addButtonWrapper}>\n                <Tooltip position=\"left\" text=\"Добавить склад\">\n                    <FloatingActionButton\n                        mini={true}\n                        className={classes.addButton}\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\n                        <ContentAdd />\n                    </FloatingActionButton>\n                </Tooltip>\n            </div>\n\n            <GridList\n                filter={filter}\n                list={list}\n                detail={stockDetail}\n                actionsDialog={actions}\n            />\n\n            <StockCreateDialog\n                open={createDialog.openCreateDialog}\n                loading={createDialog.createLoading}\n                onClose={createDialog.handleCloseCreateDialog}\n                onSubmit={createDialog.handleSubmitCreateDialog}\n            />\n\n            <StockCreateDialog\n                isUpdate={true}\n                initialValues={updateDialog.initialValues}\n                open={updateDialog.openUpdateDialog}\n                loading={updateDialog.updateLoading}\n                onClose={updateDialog.handleCloseUpdateDialog}\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\n            />\n\n            {detailData.data && <ConfirmDialog\n                type=\"delete\"\n                message={_.get(detailData, ['data', 'name'])}\n                loading={confirmDialog.confirmLoading}\n                onClose={confirmDialog.handleCloseConfirmDialog}\n                onSubmit={confirmDialog.handleSendConfirmDialog}\n                open={confirmDialog.openConfirmDialog}\n            />}\n        </Container>\n    )\n})\n\nStockGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    createDialog: PropTypes.shape({\n        createLoading: PropTypes.bool.isRequired,\n        openCreateDialog: PropTypes.bool.isRequired,\n        handleOpenCreateDialog: PropTypes.func.isRequired,\n        handleCloseCreateDialog: PropTypes.func.isRequired,\n        handleSubmitCreateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    confirmDialog: PropTypes.shape({\n        confirmLoading: PropTypes.bool.isRequired,\n        openConfirmDialog: PropTypes.bool.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleSendConfirmDialog: PropTypes.func.isRequired\n    }).isRequired,\n    updateDialog: PropTypes.shape({\n        updateLoading: PropTypes.bool.isRequired,\n        openUpdateDialog: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    actionsDialog: PropTypes.shape({\n        handleActionEdit: PropTypes.func.isRequired,\n        handleActionDelete: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default StockGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Stock/StockGridList.js","import StockGridList from './StockGridList'\nimport {STOCK_CREATE_DIALOG_OPEN} from './StockCreateDialog'\nconst STOCK_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nconst STOCK_DELETE_DIALOG_OPEN = 'openDeleteDialog'\n\nexport {\n    STOCK_CREATE_DIALOG_OPEN,\n    STOCK_UPDATE_DIALOG_OPEN,\n    STOCK_DELETE_DIALOG_OPEN,\n    StockGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Stock/index.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport Dialog from 'material-ui/Dialog'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Row, Col} from 'react-flexbox-grid'\nimport IconButton from 'material-ui/IconButton'\nimport FlatButton from 'material-ui/FlatButton'\nimport CloseIcon2 from '../CloseIcon2'\nimport {TextField} from '../ReduxForm'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport numberFormat from '../../helpers/numberFormat'\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    throw new SubmissionError({\n        ...errors,\n        _error: nonFieldErrors\n    })\n}\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            justifyContent: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        listLoader: {\n            extend: 'loader',\n            display: 'flex'\n        },\n        popUp: {\n            overflowY: 'hidden !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            overflowX: 'hidden',\n            height: '100%',\n            maxHeight: 'inherit !important'\n        },\n        titleContent: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: 'bold',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '20px 30px',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                padding: '0 !important',\n                position: 'absolute !important'\n            }\n        },\n        inContent: {\n            display: 'flex',\n            color: '#333'\n        },\n        innerWrap: {\n            maxHeight: '100vh',\n            overflow: 'auto'\n        },\n        bodyContent: {\n            color: '#333',\n            width: '100%'\n        },\n        form: {\n            position: 'relative'\n        },\n        field: {\n            width: '100%'\n        },\n        half: {\n            display: 'flex',\n            alignItems: 'baseline',\n            width: '50%'\n        },\n        content: {\n            padding: '0 30px',\n            width: '100%',\n            position: 'relative'\n        },\n        amount: {\n            '& > div': {\n                display: 'inline-block',\n                marginLeft: '10px',\n                '& span': {\n                    display: 'block'\n                }\n            }\n        },\n        list: {\n            marginTop: '10px',\n            '& .dottedList': {\n                padding: '10px 0',\n                height: '50px',\n                margin: '0',\n                justifyContent: 'space-between',\n                '& > div': {\n                    display: 'flex',\n                    alignItems: 'baseline'\n                },\n                '&:first-child': {\n                    fontWeight: '600',\n                    whiteSpace: 'nowrap'\n                },\n                '&:last-child:after': {\n                    display: 'none'\n                }\n            }\n        },\n        inputFieldCustom: {\n            flexBasis: '200px',\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        bottomButton: {\n            bottom: '0',\n            left: '0',\n            right: '0',\n            padding: '10px',\n            zIndex: '999',\n            borderTop: '1px solid #efefef',\n            background: '#fff',\n            textAlign: 'right',\n            '& span': {\n                fontSize: '13px !important',\n                fontWeight: '600 !important',\n                color: '#129fdd',\n                verticalAlign: 'inherit !important'\n            }\n        },\n        actionButton: {\n            fontSize: '13px !important',\n            margin: '0 !important'\n        }\n    }),\n    reduxForm({\n        form: 'StockReceiveCreateForm',\n        enableReinitialize: true\n    })\n)\n\nconst customContentStyle = {\n    width: '1000px',\n    maxWidth: 'none'\n}\n\nconst OrderCreateDialog = enhance((props) => {\n    const {\n        open,\n        handleSubmit,\n        onClose,\n        classes,\n        detailProducts,\n        listLoading,\n        isUpdate\n    } = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n    const supplyId = _.get(detailProducts, 'id')\n    return (\n        <Dialog\n            modal={true}\n            className={classes.podlojkaScroll}\n            contentStyle={customContentStyle}\n            open={open}\n            onRequestClose={onClose}\n            bodyClassName={classes.popUp}\n            autoScrollBodyContent={true}>\n            <div className={classes.titleContent}>\n                <span>{isUpdate ? `ИЗМЕНИТЬ ПРИЕМКА ТОВАРА (Заказ № ${supplyId})` : `ПРИЕМКА ТОВАРА (Заказ № ${supplyId})`}</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} scrolling=\"auto\" className={classes.form}>\n                    <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4}/>\n                    </div>\n                    <div className={classes.inContent}>\n                        <div className={classes.content}>\n                            {listLoading && <div className={classes.listLoader}>\n                                <CircularProgress size={40} thickness={4}/>\n                            </div>}\n\n                            <div className={classes.list}>\n                                <Row className=\"dottedList\">\n                                    <Col xs={3}>Товар</Col>\n                                    <Col xs={3}>Тип товара</Col>\n                                    <Col xs={2}>Кол-во</Col>\n                                    <Col xs={2}>Принято</Col>\n                                    <Col xs={2}>Брак</Col>\n                                </Row>\n                                {_.map(_.get(detailProducts, 'products'), (item, index) => {\n                                    const id = _.get(item, 'id')\n                                    const name = _.get(item, ['product', 'name'])\n                                    const type = _.get(item, ['product', 'type', 'name'])\n                                    const amount = numberFormat(_.get(item, 'amount'))\n                                    const measurement = _.get(item, ['product', 'measurement', 'name'])\n\n                                    return (\n                                        <Row key={id} className=\"dottedList\">\n                                            <Col xs={3}>{name}</Col>\n                                            <Col xs={3}>{type}</Col>\n                                            <Col xs={2}>{amount} {measurement}</Col>\n                                            <Col xs={2}>\n                                                <Field\n                                                    name={'product[' + index + '][accepted]'}\n                                                    component={TextField}\n                                                    className={classes.inputFieldCustom}\n                                                    fullWidth={true}\n                                                />\n                                                {measurement}\n                                            </Col>\n                                            <Col xs={2}>\n                                                <Field\n                                                    name={'product[' + index + '][defected]'}\n                                                    component={TextField}\n                                                    className={classes.inputFieldCustom}\n                                                    fullWidth={true}\n                                                />\n                                                {measurement}\n                                            </Col>\n                                        </Row>\n                                    )\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Принять товар\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"/>\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\nOrderCreateDialog.propTyeps = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired,\n    detailProducts: PropTypes.object,\n    listLoading: PropTypes.bool\n}\nexport default OrderCreateDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/StockReceive/StockReceiveCreateDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose, withState} from 'recompose'\nimport injectSheet from 'react-jss'\nimport LinearProgress from '../LinearProgress'\nimport numberFormat from '../../helpers/numberFormat'\nimport {Row, Col} from 'react-flexbox-grid'\nimport NotFound from '../Images/not-found.png'\nimport stockTypeFormat from '../../helpers/stockTypeFormat'\nimport dateFormat from '../../helpers/dateFormat'\nimport Tooltip from '../ToolTip'\nimport IconButton from 'material-ui/IconButton'\nimport CheckCircleIcon from 'material-ui/svg-icons/action/check-circle'\nimport RemoveCircleIcon from 'material-ui/svg-icons/content/remove-circle'\nimport EditIcon from 'material-ui/svg-icons/image/edit'\n\nconst RETURN = 3\nconst APPROVE = 1\nconst CANCEL = 2\n\nconst colorBlue = '#12aaeb !important'\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            color: '#333 !important',\n            display: 'flex',\n            width: '100%',\n            flexWrap: 'wrap',\n            height: 'auto',\n            transition: 'max-height 500ms ease !important',\n            overflowY: 'auto',\n            '& a': {\n                color: colorBlue\n            }\n        },\n        content: {\n            width: '100%',\n            overflow: 'hidden',\n            display: 'flex',\n            borderTop: '1px #efefef solid'\n\n        },\n        leftSide: {\n            flexBasis: '70%',\n            maxWidth: '70%',\n            padding: '0 30px 5px',\n            '& > .row': {\n                padding: '15px 0',\n                '&:first-child': {\n                    fontWeight: '600'\n                },\n                '&:last-child:after': {\n                    display: 'none'\n                }\n            }\n        },\n        rightSide: {\n            flexBasis: '30%',\n            maxWidth: '30%',\n            padding: '20px 30px',\n            borderLeft: '1px #efefef solid',\n            '& > div:last-child': {\n                marginTop: '5px'\n            }\n        },\n        subtitle: {\n            fontWeight: '600'\n        },\n        titleButtons: {\n            display: 'flex',\n            zIndex: '3',\n            justifyContent: 'flex-end'\n        },\n        emptyQuery: {\n            background: 'url(' + NotFound + ') no-repeat center 25px',\n            backgroundSize: '200px',\n            padding: '170px 0 30px',\n            textAlign: 'center',\n            fontSize: '13px',\n            color: '#999',\n            width: '100%',\n            '& svg': {\n                width: '50px !important',\n                height: '50px !important',\n                color: '#999 !important'\n            }\n        },\n        header: {\n            position: 'relative',\n            height: '48px',\n            padding: '0 30px',\n            width: '100%',\n            '& .row': {\n                alignItems: 'center'\n            }\n        },\n        semibold: {\n            fontWeight: '600',\n            cursor: 'pointer',\n            position: 'relative'\n        },\n        closeDetail: {\n            position: 'absolute',\n            left: '0',\n            top: '0',\n            right: '0',\n            bottom: '0',\n            cursor: 'pointer',\n            zIndex: '1'\n        }\n    }),\n    withState('openDetails', 'setOpenDetails', false)\n)\n\nconst iconStyle = {\n    icon: {\n        color: '#666',\n        width: 25,\n        height: 25\n    },\n    button: {\n        width: 48,\n        height: 48,\n        padding: 0\n    }\n}\n\nconst StockReceiveDetails = enhance((props) => {\n    const {\n        classes,\n        detailData,\n        handleCloseDetail,\n        confirmDialog,\n        createDialog,\n        updateDialog,\n        history\n    } = props\n    const type = _.get(detailData, 'type')\n    const by = _.get(detailData, ['currentDetail', 'by'])\n    const formattedType = stockTypeFormat(type)\n    const date = _.get(detailData, ['currentDetail', 'date']) ? dateFormat(_.get(detailData, ['currentDetail', 'date'])) : 'Не указана'\n    const stockName = _.get(detailData, ['currentDetail', 'stock', 'name'])\n    const id = _.get(detailData, 'id')\n    const tooltipText = 'Подтвердить Запрос № ' + id\n    const tooltipCancelText = 'Отменить Запрос № ' + id\n    const tooltipUpdateText = 'Изменить Запрос № ' + id\n    const detailLoading = _.get(detailData, 'detailLoading')\n    const products = (type === 'order_return') ? _.get(detailData, ['data', 'returnedProducts']) : _.get(detailData, ['data', 'products'])\n    const comment = _.get(detailData, ['data', 'comment']) || 'Комментарий отсутствует'\n    if (_.isEmpty(products)) {\n        return (\n            <div className={classes.wrapper} style={detailLoading ? {padding: '0 30px', border: 'none', maxHeight: '2px'} : {maxHeight: '250px', overflowY: 'hidden'}}>\n                {detailLoading && <LinearProgress/>}\n                <div className={classes.emptyQuery}>\n                    <div>Товаров не найдено</div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className={classes.wrapper} style={detailLoading ? {padding: '0 30px', border: 'none', maxHeight: '2px'} : {maxHeight: 'unset'}}>\n            {detailLoading ? <LinearProgress/>\n            : <div style={{width: '100%'}}>\n                <div className={classes.header}>\n                    <div className={classes.closeDetail}\n                         onClick={handleCloseDetail}>\n                    </div>\n                    <Row\n                        className={classes.semibold}\n                        style={history ? {lineHeight: '48px'} : {}}>\n                        <Col xs={2}>{id}</Col>\n                        <Col xs={3}>{by}</Col>\n                        <Col xs={2}>{formattedType}</Col>\n                        <Col xs={2}>{date}</Col>\n                        <Col xs={2}>\n                            {stockName}\n                        </Col>\n                        <Col xs={1}>\n                            <div className={classes.titleButtons}>\n                                {!history && type === 'transfer'\n                                    ? <Tooltip position=\"right\" text={tooltipText}>\n                                            <IconButton\n                                                iconStyle={iconStyle.icon}\n                                                style={iconStyle.button}\n                                                touch={true}\n                                                onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(APPROVE) }}>\n                                                <CheckCircleIcon />\n                                            </IconButton>\n                                        </Tooltip>\n                                        : (!history && type === 'order_return')\n                                            ? <Tooltip position=\"right\" text={tooltipText}>\n                                                <IconButton\n                                                    iconStyle={iconStyle.icon}\n                                                    style={iconStyle.button}\n                                                    touch={true}\n                                                    onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(RETURN) }}>\n                                                    <CheckCircleIcon />\n                                                </IconButton>\n                                            </Tooltip>\n                                        : (type === 'supply')\n                                            ? (!history\n                                                ? <Tooltip position=\"right\" text={tooltipText}>\n                                                    <IconButton\n                                                        iconStyle={iconStyle.icon}\n                                                        style={iconStyle.button}\n                                                        touch={true}\n                                                        onTouchTap={() => { createDialog.handleOpenCreateDialog() }}>\n                                                        <CheckCircleIcon />\n                                                    </IconButton>\n                                                  </Tooltip>\n                                                : <Tooltip position=\"right\" text={tooltipUpdateText}>\n                                                    <IconButton\n                                                        iconStyle={iconStyle.icon}\n                                                        style={iconStyle.button}\n                                                        touch={true}\n                                                        onTouchTap={() => { updateDialog.handleOpenUpdateDialog() }}>\n                                                        <EditIcon />\n                                                    </IconButton>\n                                                  </Tooltip>)\n                                            : null\n                                }\n\n                                {!history && type === 'transfer' &&\n                                    <Tooltip position=\"right\" text={tooltipCancelText}>\n                                        <IconButton\n                                            iconStyle={iconStyle.icon}\n                                            style={iconStyle.button}\n                                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(CANCEL) }}\n                                            touch={true}>\n                                            <RemoveCircleIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                }\n                            </div>\n                        </Col>\n                    </Row>\n                </div>\n                <div className={classes.content}>\n                    <div className={classes.leftSide}>\n                        <Row className='dottedList'>\n                            <Col xs={6}>Товар</Col>\n                            <Col xs={4}>Тип товара</Col>\n                            <Col xs={2}>Кол-во</Col>\n                        </Row>\n                        {_.map(products, (item) => {\n                            const productId = _.get(item, 'id')\n                            const name = (type === 'order_return') ? _.get(item, ['product']) : _.get(item, ['product', 'name'])\n                            const measurement = _.get(item, ['product', 'measurement', 'name'])\n                            const amount = numberFormat(_.get(item, 'amount'), measurement)\n                            return (\n                                <Row key={productId} className='dottedList'>\n                                    <Col xs={6}>{name}</Col>\n                                    <Col xs={4}>Стиральный порошек</Col>\n                                    <Col xs={2}>{amount}</Col>\n                                </Row>\n                            )\n                        })}\n                    </div>\n                    <div className={classes.rightSide}>\n                        <div className={classes.subtitle}>Комментарий:</div>\n                        <div>{comment}</div>\n                    </div>\n                </div>\n            </div>\n            }\n        </div>\n    )\n})\n\nStockReceiveDetails.propTypes = {\n    detailData: PropTypes.object.isRequired\n}\n\nexport default StockReceiveDetails\n\n\n\n// WEBPACK FOOTER //\n// src/components/StockReceive/StockReceiveDetails.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport * as ROUTES from '../../constants/routes'\nimport Container from '../Container'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport {Tabs, Tab} from 'material-ui/Tabs'\nimport * as TAB from '../../constants/stockReceiveTab'\nimport TabReceive from './StockTabReceive'\nimport TabTransfer from './StockTabTransfer'\nimport TabHistory from './StockTabHistory'\nimport TabTransferHistory from './StockTabTransferHistory'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            position: 'absolute',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            width: '100%',\n            minHeight: '400px',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        list: {\n            marginBottom: '5px',\n            '& > a': {\n                color: 'inherit'\n            }\n        },\n        semibold: {\n            fontWeight: '600',\n            cursor: 'pointer'\n        },\n        wrapper: {\n            padding: '15px 30px',\n            '& .row': {\n                alignItems: 'center'\n            }\n        },\n        tabWrapper: {\n            position: 'relative'\n        },\n        tabs: {\n            marginBottom: '0',\n            width: '100%',\n            '& > div': {\n                boxSizing: 'content-box',\n                width: '100% !important',\n                '&:first-child': {\n                    boxShadow: 'rgba(0, 0, 0, 0.12) 0px 1px 6px, rgba(0, 0, 0, 0.12) 0px 1px 4px',\n                    borderRadius: '2px',\n                    height: '52px',\n                    alignItems: 'center',\n                    '& button': {\n                        color: '#333 !important'\n                    }\n                },\n                '&:nth-child(2)': {\n                    marginTop: '-3px'\n                },\n                '&:last-child': {\n                    width: '100% !important',\n                    padding: '0'\n                }\n            },\n            '& button div div': {\n                textTransform: 'initial',\n                height: '52px !important'\n            }\n        },\n        headers: {\n            color: '#666',\n            padding: '15px 30px',\n            '& .row': {\n                alignItems: 'center'\n            }\n        },\n        actionButton: {\n            background: '#12aaeb',\n            borderRadius: '2px',\n            color: '#fff',\n            padding: '5px 20px'\n        },\n        success: {\n            color: '#81c784'\n        },\n        begin: {\n            color: '#f0ad4e'\n        },\n        error: {\n            color: '#e57373'\n        },\n        waiting: {\n            color: '#64b5f6'\n        }\n    })\n)\n\nconst StockReceiveGridList = enhance((props) => {\n    const {\n        listData,\n        historyData,\n        transferData,\n        transferDetail,\n        filterDialog,\n        detailData,\n        updateDialog,\n        filter,\n        printDialog,\n        tabData,\n        classes,\n        handleCloseDetail,\n        confirmDialog,\n        createDialog\n    } = props\n    const tab = _.get(tabData, 'tab')\n\n    const tabList = (\n        <div className={classes.tabWrapper}>\n            <Tabs\n                inkBarStyle={{backgroundColor: '#12aaeb', height: '3px'}}\n                tabItemContainerStyle={{backgroundColor: '#fff', color: '#333'}}\n                value={tab}\n                className={classes.tabs}\n                onChange={(value) => tabData.handleTabChange(value)}>\n                <Tab label=\"Приемка\" value={TAB.STOCK_RECEIVE_TAB_RECEIVE}/>\n                <Tab label=\"Передача\" value={TAB.STOCK_RECEIVE_TAB_TRANSFER}/>\n                <Tab label=\"Движения товаров\" value={TAB.STOCK_RECEIVE_TAB_OUT_HISTORY}/>\n                <Tab label=\"История Приемки\" value={TAB.STOCK_RECEIVE_TAB_HISTORY}/>\n                <Tab label=\"История Передачи\" value={TAB.STOCK_RECEIVE_TAB_TRANSFER_HISTORY}/>\n            </Tabs>\n            {TAB.STOCK_RECEIVE_TAB_RECEIVE === tab && <TabReceive\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                confirmDialog={confirmDialog}\n                handleCloseDetail={handleCloseDetail}\n                updateDialog={updateDialog}\n                createDialog={createDialog}\n                filterDialog={filterDialog}\n                history={false}\n\n            />}\n            {TAB.STOCK_RECEIVE_TAB_TRANSFER === tab && <TabTransfer\n                filter={filter}\n                listData={transferData}\n                detailData={transferDetail}\n                handleCloseDetail={handleCloseDetail}\n                confirmDialog={confirmDialog}\n                filterDialog={filterDialog}\n                printDialog={printDialog}\n            />}\n            {TAB.STOCK_RECEIVE_TAB_OUT_HISTORY === tab && <TabHistory\n                filter={filter}\n                listData={historyData}\n                filterDialog={filterDialog}\n            />}\n            {TAB.STOCK_RECEIVE_TAB_TRANSFER_HISTORY === tab && <TabTransferHistory\n                filter={filter}\n                listData={transferData}\n                filterDialog={filterDialog}\n                detailData={transferDetail}\n                handleCloseDetail={handleCloseDetail}\n                printDialog={printDialog}\n            />}\n            {TAB.STOCK_RECEIVE_TAB_HISTORY === tab && <TabReceive\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                confirmDialog={confirmDialog}\n                updateDialog={updateDialog}\n                handleCloseDetail={handleCloseDetail}\n                createDialog={createDialog}\n                filterDialog={filterDialog}\n                history={true}\n\n            />}\n\n        </div>\n    )\n\n    return (\n        <Container>\n            <SubMenu url={ROUTES.STOCK_RECEIVE_LIST_URL}/>\n            {tabList}\n        </Container>\n    )\n})\n\nStockReceiveGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    historyData: PropTypes.object,\n    transferData: PropTypes.object,\n    detailData: PropTypes.object,\n    transferDetail: PropTypes.object,\n    tabData: PropTypes.shape({\n        tab: PropTypes.string.isRequired,\n        handleTabChange: PropTypes.func.isRequired\n    }),\n    handleCloseDetail: PropTypes.func.isRequired,\n    filterDialog: PropTypes.shape({\n        initialValues: PropTypes.object,\n        filterLoading: PropTypes.bool,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    }).isRequired,\n    createDialog: PropTypes.shape({\n        createLoading: PropTypes.bool.isRequired,\n        openCreateDialog: PropTypes.bool.isRequired,\n        isDefect: PropTypes.bool,\n        detailProducts: PropTypes.object,\n        detailLoading: PropTypes.bool,\n        handleOpenCreateDialog: PropTypes.func.isRequired,\n        handleCloseCreateDialog: PropTypes.func.isRequired,\n        handleSubmitCreateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    confirmDialog: PropTypes.shape({\n        openConfirmDialog: PropTypes.number.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleSubmitTransferAcceptDialog: PropTypes.func.isRequired,\n        handleSubmitReceiveConfirmDialog: PropTypes.func.isRequired,\n        handleSubmitOrderReturnDialog: PropTypes.func.isRequired\n    }).isRequired,\n    updateDialog: PropTypes.shape({\n        updateLoading: PropTypes.bool.isRequired,\n        openUpdateDialog: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default StockReceiveGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/StockReceive/StockReceiveGridList.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Row, Col} from 'react-flexbox-grid'\nimport GridList from '../GridList'\nimport HistoryFilterForm from './StockHistoryFilterForm'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport moment from 'moment'\nimport numberFormat from '../../helpers/numberFormat'\nimport ArrowUp from 'material-ui/svg-icons/navigation/arrow-upward'\nimport ArrowDown from 'material-ui/svg-icons/navigation/arrow-downward'\nimport stockTypeFormat from '../../helpers/stockTypeFormat'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'product',\n        title: 'Товар',\n        xs: 4\n    },\n    {\n        name: 'amount',\n        title: 'Кол-во',\n        xs: 1\n    },\n    {\n        sorting: true,\n        name: 'date',\n        title: 'Дата',\n        xs: 3\n    },\n    {\n        name: 'stock',\n        title: 'Склад',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'type',\n        title: 'Тип',\n        xs: 2\n    }\n]\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            position: 'absolute',\n            background: '#fff',\n            top: '72px',\n            left: '0',\n            width: '100%',\n            minHeight: '400px',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        wrapper: {\n            marginTop: '20px',\n            '& .row > div > svg': {\n                position: 'relative',\n                width: '16px !important',\n                height: '16px !important',\n                top: '3px',\n                marginRight: '5px'\n            }\n        }\n    })\n)\n\nconst StockTabHistory = enhance((props) => {\n    const {\n        filter,\n        filterDialog,\n        listData,\n        classes\n    } = props\n\n    const usersFilterDialog = (\n        <HistoryFilterForm\n            initialValues={filterDialog.initialValues}\n            filter={filter}\n            filterDialog={filterDialog}\n        />\n    )\n\n    const historyDetail = (\n        <span>a</span>\n    )\n    const historyList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const product = _.get(item, ['product', 'name'])\n        const stock = _.get(item, ['stock', 'name'])\n        const amount = numberFormat(_.get(item, 'amount'))\n        const measurement = _.get(item, ['product', 'measurement', 'name'])\n        const date = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY HH:mm')\n        const genericType = stockTypeFormat(_.get(item, ['generic', 'type']))\n        const type = _.get(item, 'type')\n        return (\n            <Row key={id}>\n                <Col xs={4}>\n                    {(type === 'Out') ? <ArrowUp color=\"#e57373\"/> : <ArrowDown color=\"#81c784\"/>} {product}\n                </Col>\n                <Col xs={1}>{amount} {measurement}</Col>\n                <Col xs={3}>{date}</Col>\n                <Col xs={2}>{stock}</Col>\n                <Col xs={2}>{genericType}</Col>\n            </Row>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: historyList,\n        loading: _.get(listData, 'historyListLoading')\n    }\n\n    return (\n        <div className={classes.wrapper}>\n            <GridList\n                filter={filter}\n                list={list}\n                detail={historyDetail}\n                filterDialog={usersFilterDialog}\n            />\n        </div>\n    )\n})\n\nStockTabHistory.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    filterDialog: PropTypes.shape({\n        initialValues: PropTypes.object,\n        filterLoading: PropTypes.bool,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default StockTabHistory\n\n\n\n// WEBPACK FOOTER //\n// src/components/StockReceive/StockTabHistory.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Row, Col} from 'react-flexbox-grid'\nimport injectSheet from 'react-jss'\nimport moment from 'moment'\nimport {compose} from 'recompose'\nimport StockReceiveDetails from './StockReceiveDetails'\nimport stockTypeFormat from '../../helpers/stockTypeFormat'\nimport ConfirmDialog from '../ConfirmDialog'\nimport CreateDialog from './StockReceiveCreateDialog'\nimport ReceiveFilterForm from './TabReceiveFilterForm'\nimport GridList from '../GridList'\n\nconst ZERO = 0\nconst RETURN = 3\nconst CANCEL = 2\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            marginTop: '20px',\n            '& .row > div > svg': {\n                position: 'relative',\n                width: '16px !important',\n                height: '16px !important',\n                top: '3px',\n                marginRight: '5px'\n            }\n        },\n        loader: {\n            position: 'absolute',\n            background: '#fff',\n            top: '100px',\n            left: '0',\n            width: '100%',\n            minHeight: '400px',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        listWrapper: {\n            position: 'relative',\n            '& > div:nth-child(2)': {\n                marginTop: '0 !important'\n            }\n        },\n        list: {\n            cursor: 'pointer',\n            marginBottom: '5px',\n            '& > a': {\n                color: 'inherit'\n            }\n        },\n        expandedList: {\n            margin: '20px -15px',\n            transition: 'all 400ms ease-out !important',\n            position: 'relative',\n            '& > a': {\n                color: 'inherit'\n            }\n        },\n        semibold: {\n            fontWeight: '600',\n            cursor: 'pointer'\n        },\n        headers: {\n            color: '#666',\n            fontWeight: '600',\n            padding: '15px 30px',\n            '& .row': {\n                alignItems: 'center'\n            }\n        },\n        actionButton: {\n            background: '#12aaeb',\n            borderRadius: '2px',\n            color: '#fff',\n            padding: '5px 10px'\n        },\n        success: {\n            color: '#81c784'\n        },\n        begin: {\n            color: '#f0ad4e'\n        },\n        error: {\n            color: '#e57373'\n        },\n        waiting: {\n            color: '#64b5f6'\n        }\n    })\n)\n\nconst listHeader = [\n    {\n        name: 'id',\n        sorting: true,\n        title: '№ заказа',\n        xs: 2\n    },\n    {\n        name: 'market',\n        sorting: true,\n        title: 'От кого',\n        xs: 3\n    },\n    {\n        name: 'type',\n        sorting: false,\n        title: 'Тип',\n        xs: 2\n    },\n    {\n        name: 'date',\n        sorting: true,\n        title: 'Дата приемки',\n        xs: 2\n    },\n    {\n        name: 'stock',\n        sorting: true,\n        title: 'Склад',\n        xs: 2\n    }\n]\n\nconst StockTabReceive = enhance((props) => {\n    const {\n        listData,\n        detailData,\n        filter,\n        classes,\n        confirmDialog,\n        updateDialog,\n        handleCloseDetail,\n        createDialog,\n        filterDialog,\n        history\n    } = props\n\n    const listLoading = _.get(listData, 'listLoading')\n    const stockReceiveFilterDialog = (\n        <ReceiveFilterForm\n            initialValues={filterDialog.initialValues}\n            filter={filter}\n            filterDialog={filterDialog}\n        />\n    )\n\n    const receiveDetails = (\n        <StockReceiveDetails\n            key={_.get(detailData, 'id') + '_' + _.get(detailData, 'type')}\n            detailData={detailData}\n            loading={_.get(detailData, 'detailLoading')}\n            confirmDialog={confirmDialog}\n            handleCloseDetail={handleCloseDetail}\n            createDialog={createDialog}\n            history={history}\n            updateDialog={updateDialog}\n    />\n    )\n\n    const stockReceiveList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const by = _.get(item, ['by'])\n        const type = _.get(item, ['type'])\n        const formattedType = stockTypeFormat(type)\n        const date = _.get(item, 'date') ? moment(_.get(item, 'date')).format('DD.MM.YYYY') : 'Не указана'\n        const stockName = _.get(item, ['stock', 'name'])\n\n        return (\n            <Row\n                key={id + '_' + type}\n                onClick={() => { listData.handleOpenDetail(id, type) }}\n                style={{cursor: 'pointer'}}>\n                <Col xs={2}>{id}</Col>\n                <Col xs={3}>{by}</Col>\n                <Col xs={2}>\n                    {formattedType}\n                </Col>\n                <Col xs={2}>{date}</Col>\n                <Col xs={2}>\n                    {stockName}\n                </Col>\n            </Row>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: stockReceiveList,\n        loading: listLoading\n    }\n\n    return (\n        <div className={classes.wrapper}>\n            <GridList\n                filter={filter}\n                filterDialog={stockReceiveFilterDialog}\n                list={list}\n                detail={receiveDetails}/>\n\n            <ConfirmDialog\n                type={confirmDialog.openConfirmDialog === CANCEL ? 'cancel' : 'submit' }\n                message={'Запрос № ' + _.get(detailData, ['currentDetail', 'id'])}\n                onClose={confirmDialog.handleCloseConfirmDialog}\n                onSubmit={confirmDialog.openConfirmDialog === RETURN ? confirmDialog.handleSubmitOrderReturnDialog : confirmDialog.handleSubmitReceiveConfirmDialog}\n                open={confirmDialog.openConfirmDialog > ZERO}\n            />\n            <CreateDialog\n                loading={createDialog.createLoading}\n                open={createDialog.openCreateDialog}\n                detailProducts={createDialog.detailProducts}\n                listLoading={createDialog.detailLoading}\n                onClose={createDialog.handleCloseCreateDialog}\n                onSubmit={createDialog.handleSubmitCreateDialog}\n            />\n            <CreateDialog\n                loading={updateDialog.updateLoading}\n                open={updateDialog.openUpdateDialog}\n                detailProducts={updateDialog.detailProducts}\n                listLoading={updateDialog.detailLoading}\n                onClose={updateDialog.handleCloseUpdateDialog}\n                onSubmit={updateDialog.handleSubmitCreateDialog}\n                isUpdate={true}\n                initialValues={updateDialog.initialValues}\n            />\n        </div>\n    )\n})\n\nStockTabReceive.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    handleCloseDetail: PropTypes.func.isRequired,\n    confirmDialog: PropTypes.shape({\n        openConfirmDialog: PropTypes.number.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleSubmitReceiveConfirmDialog: PropTypes.func.isRequired,\n        handleSubmitOrderReturnDialog: PropTypes.func.isRequired\n    }).isRequired,\n    createDialog: PropTypes.shape({\n        createLoading: PropTypes.bool.isRequired,\n        openCreateDialog: PropTypes.bool.isRequired,\n        detailProducts: PropTypes.object,\n        detailLoading: PropTypes.bool,\n        handleOpenCreateDialog: PropTypes.func.isRequired,\n        handleCloseCreateDialog: PropTypes.func.isRequired,\n        handleSubmitCreateDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default StockTabReceive\n\n\n\n// WEBPACK FOOTER //\n// src/components/StockReceive/StockTabReceive.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Row, Col} from 'react-flexbox-grid'\nimport GridList from '../GridList'\nimport ReceiveFilterForm from './TabReceiveFilterForm'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport moment from 'moment'\nimport Details from './StockTransferDetails'\nimport ConfirmDialog from '../ConfirmDialog'\n\nconst ZERO = 0\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'product',\n        title: '№ запроса',\n        xs: 2\n    },\n    {\n        name: 'amount',\n        title: 'Дата запроса',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'stock',\n        title: 'Склад',\n        xs: 2\n    },\n    {\n        name: 'stock',\n        title: 'Кому',\n        xs: 3\n    },\n    {\n        sorting: true,\n        name: 'type',\n        title: 'Дата передачи',\n        xs: 2\n    }\n]\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            position: 'absolute',\n            background: '#fff',\n            top: '72px',\n            left: '0',\n            width: '100%',\n            minHeight: '400px',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        wrapper: {\n            marginTop: '20px',\n            '& .row > div > svg': {\n                position: 'relative',\n                width: '16px !important',\n                height: '16px !important',\n                top: '3px',\n                marginRight: '5px'\n            }\n        }\n    })\n)\n\nconst StockTabTransfer = enhance((props) => {\n    const {\n        filter,\n        filterDialog,\n        listData,\n        detailData,\n        handleCloseDetail,\n        confirmDialog,\n        classes,\n        printDialog\n    } = props\n\n    const usersFilterDialog = (\n        <ReceiveFilterForm\n            initialValues={filterDialog.initialValues}\n            filter={filter}\n            filterDialog={filterDialog}\n        />\n    )\n\n    const historyDetail = (\n        <Details\n            detailData={detailData || {}}\n            key={_.get(detailData, 'id') + '_' + _.get(detailData, 'type')}\n            handleCloseDetail={handleCloseDetail}\n            loading={_.get(detailData, 'transferDetailLoading')}\n            printDialog={printDialog}\n            confirmDialog={confirmDialog}\n            confirm={true}\n        />\n\n    )\n    const historyList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const dateRequest = moment(_.get(item, 'dateRequest')).format('DD.MM.YYYY')\n        const dateDelivery = moment(_.get(item, 'dateDelivery')).format('DD.MM.YYYY')\n        const receiver = _.get(item, ['receiver'])\n        const stockId = _.get(item, ['stock', 'id'])\n        const stockName = _.get(item, ['stock', 'name'])\n\n        return (\n            <Row\n                key={id + '_' + stockId} style={{position: 'relative', cursor: 'pointer'}}\n                onClick={() => { listData.handleOpenDetail(id, stockId) }}>\n                <div className={classes.closeDetail}\n                     onClick={handleCloseDetail}>\n                </div>\n                <Col xs={2} >{id}</Col>\n                <Col xs={2}>{dateRequest}</Col>\n                <Col xs={2}>{stockName}</Col>\n                <Col xs={3}>{receiver}</Col>\n                <Col xs={2}>{dateDelivery}</Col>\n            </Row>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: historyList,\n        loading: _.get(listData, 'transferListLoading')\n    }\n\n    return (\n        <div className={classes.wrapper}>\n            <GridList\n                filter={filter}\n                list={list}\n                detail={historyDetail}\n                filterDialog={usersFilterDialog}\n            />\n            <ConfirmDialog\n                type=\"submit\"\n                message={'Запрос № ' + _.get(detailData, ['currentTransferDetail', 'id'])}\n                onClose={confirmDialog.handleCloseConfirmDialog}\n                onSubmit={confirmDialog.handleSubmitTransferAcceptDialog}\n                open={confirmDialog.openConfirmDialog > ZERO}\n            />\n        </div>\n    )\n})\n\nStockTabTransfer.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    filterDialog: PropTypes.shape({\n        initialValues: PropTypes.object,\n        filterLoading: PropTypes.bool,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default StockTabTransfer\n\n\n\n// WEBPACK FOOTER //\n// src/components/StockReceive/StockTabTransfer.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Row, Col} from 'react-flexbox-grid'\nimport GridList from '../GridList'\nimport ReceiveFilterForm from './TabReceiveFilterForm'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport moment from 'moment'\nimport Details from './StockTabTransferHistoryDetails'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'product',\n        title: '№ запроса',\n        xs: 2\n    },\n    {\n        name: 'amount',\n        title: 'Дата запроса',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'stock',\n        title: 'Склад',\n        xs: 2\n    },\n    {\n        name: 'stock',\n        title: 'Кому',\n        xs: 3\n    },\n    {\n        sorting: true,\n        name: 'type',\n        title: 'Дата передачи',\n        xs: 2\n    }\n]\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            position: 'absolute',\n            background: '#fff',\n            top: '72px',\n            left: '0',\n            width: '100%',\n            minHeight: '400px',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        wrapper: {\n            marginTop: '20px',\n            '& .row > div > svg': {\n                position: 'relative',\n                width: '16px !important',\n                height: '16px !important',\n                top: '3px',\n                marginRight: '5px'\n            }\n        }\n    })\n)\n\nconst StockTabTransferHistory = enhance((props) => {\n    const {\n        filter,\n        filterDialog,\n        listData,\n        detailData,\n        handleCloseDetail,\n        classes,\n        printDialog\n    } = props\n\n    const usersFilterDialog = (\n        <ReceiveFilterForm\n            initialValues={filterDialog.initialValues}\n            filter={filter}\n            filterDialog={filterDialog}\n        />\n    )\n\n    const historyDetail = (\n        <Details\n            detailData={detailData || {}}\n            key={_.get(detailData, 'id') + '_' + _.get(detailData, 'type')}\n            handleCloseDetail={handleCloseDetail}\n            loading={_.get(detailData, 'transferDetailLoading')}\n            handleOpenPrint={printDialog.handleOpenPrintDialog}\n            confirm={false}/>\n    )\n    const historyList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const dateRequest = moment(_.get(item, 'dateRequest')).format('DD.MM.YYYY')\n        const dateDelivery = moment(_.get(item, 'dateDelivery')).format('DD.MM.YYYY')\n        const receiver = _.get(item, ['receiver'])\n        const stockId = _.get(item, ['stock', 'id'])\n        const stockName = _.get(item, ['stock', 'name'])\n        return (\n            <Row\n                key={id + '_' + stockId}\n                style={{position: 'relative', cursor: 'pointer'}}\n                onClick={() => { listData.handleOpenDetail(id, stockId) }}>\n                <Col xs={2} >{id}</Col>\n                <Col xs={2}>{dateRequest}</Col>\n                <Col xs={2}>{stockName}</Col>\n                <Col xs={3}>{receiver}</Col>\n                <Col xs={2}>{dateDelivery}</Col>\n            </Row>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: historyList,\n        loading: _.get(listData, 'historyListLoading')\n    }\n\n    return (\n        <div className={classes.wrapper}>\n            <GridList\n                filter={filter}\n                list={list}\n                detail={historyDetail}\n                filterDialog={usersFilterDialog}\n            />\n        </div>\n    )\n})\n\nStockTabTransferHistory.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    filterDialog: PropTypes.shape({\n        initialValues: PropTypes.object,\n        filterLoading: PropTypes.bool,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default StockTabTransferHistory\n\n\n\n// WEBPACK FOOTER //\n// src/components/StockReceive/StockTabTransferHistory.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose, withState} from 'recompose'\nimport injectSheet from 'react-jss'\nimport LinearProgress from '../LinearProgress'\nimport numberformat from '../../helpers/numberFormat'\nimport dateFormat from '../../helpers/dateFormat'\nimport {Row, Col} from 'react-flexbox-grid'\nimport NotFound from '../Images/not-found.png'\nimport PrintIcon from 'material-ui/svg-icons/action/print'\nimport Tooltip from '../ToolTip'\nimport IconButton from 'material-ui/IconButton'\n\nconst colorBlue = '#12aaeb !important'\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            color: '#333 !important',\n            width: '100%',\n            maxHeight: 'unset',\n            position: 'relative',\n            borderTop: '1px #efefef solid',\n            display: 'flex',\n            flexWrap: 'wrap',\n            '& a': {\n                color: colorBlue\n            },\n            '& .row': {\n                alignItems: 'center'\n            }\n        },\n        loader: {\n            width: '100%',\n            height: '100px',\n            background: '#fff',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        content: {\n            width: '100%',\n            overflow: 'hidden',\n            display: 'flex',\n            borderTop: 'solid 1px #efefef'\n        },\n        leftSide: {\n            flexBasis: '70%',\n            maxWidth: '70%',\n            padding: '0 30px 5px',\n            '& > .row': {\n                padding: '15px 0',\n                '&:first-child': {\n                    fontWeight: '600'\n                },\n                '&:last-child:after': {\n                    display: 'none'\n                }\n            }\n        },\n        semibold: {\n            fontWeight: '600',\n            cursor: 'pointer',\n            position: 'relative'\n        },\n        header: {\n            position: 'relative',\n            padding: '15px 30px',\n            width: '100%',\n            '& .row': {\n                alignItems: 'center'\n            }\n        },\n        rightSide: {\n            flexBasis: '30%',\n            maxWidth: '30%',\n            padding: '20px 30px',\n            borderLeft: '1px #efefef solid',\n            '& > div:last-child': {\n                marginTop: '5px'\n            }\n        },\n        printer: {\n            position: 'absolute',\n            right: '0'\n        },\n        subtitle: {\n            fontWeight: '600'\n        },\n        emptyQuery: {\n            background: 'url(' + NotFound + ') no-repeat center 25px',\n            backgroundSize: '200px',\n            padding: '170px 0 30px',\n            textAlign: 'center',\n            fontSize: '13px',\n            color: '#999',\n            width: '100%',\n            '& svg': {\n                width: '50px !important',\n                height: '50px !important',\n                color: '#999 !important'\n            }\n        },\n        closeDetail: {\n            position: 'absolute',\n            left: '0',\n            top: '0',\n            right: '0',\n            bottom: '0',\n            cursor: 'pointer',\n            zIndex: '1'\n        }\n\n    }),\n    withState('openDetails', 'setOpenDetails', false)\n)\n\nconst iconStyle = {\n    icon: {\n        color: '#666',\n        width: 25,\n        height: 25\n    },\n    button: {\n        width: 48,\n        height: 48,\n        padding: 0\n    }\n}\n\nconst StockTransferDetails = enhance((props) => {\n    const {\n        classes,\n        detailData,\n        handleCloseDetail,\n        handleOpenPrint\n    } = props\n    const detailLoading = _.get(detailData, 'transferDetailLoading')\n    const products = _.get(detailData, ['data', 'products'])\n    const comment = _.get(detailData, ['data', 'comment']) || 'Комментарий отсутствует'\n    const id = _.get(detailData, 'id')\n    const dateRequest = dateFormat(_.get(detailData, ['currentTransferDetail', 'dateRequest']))\n    const dateDelivery = dateFormat(_.get(detailData, ['currentTransferDetail', 'dateDelivery']))\n    const receiver = _.get(detailData, ['currentTransferDetail', 'receiver'])\n    const detailType = _.toInteger(_.get(detailData, 'type'))\n    const stockName = _.get(detailData, ['currentTransferDetail', 'stock', 'name'])\n\n    if (_.isEmpty(products)) {\n        return (\n            <div className={classes.wrapper} style={detailLoading ? {padding: '0 30px', border: 'none', maxHeight: '2px'} : {maxHeight: '250px', overflowY: 'hidden'}}>\n                {detailLoading && <LinearProgress/>}\n                <div className={classes.emptyQuery}>\n                    <div>Товаров не найдено</div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className={classes.wrapper} style={detailLoading ? {padding: '0 30px', border: 'none', maxHeight: '2px'} : {maxHeight: 'unset'}}>\n            {detailLoading ? <LinearProgress/>\n                : <div style={{width: '100%'}}>\n                  <div className={classes.header}>\n                      <div className={classes.closeDetail}\n                           onClick={handleCloseDetail}>\n                      </div>\n                    <Row className={classes.semibold}>\n                        <Col xs={2}>{id}</Col>\n                        <Col xs={2}>{dateRequest}</Col>\n                        <Col xs={2}>{stockName}</Col>\n                        <Col xs={3}>{receiver}</Col>\n                        <Col xs={2}>{dateDelivery}</Col>\n                        <div className={classes.printer}>\n                            <Tooltip position=\"bottom\" text=\"Распечатать накладную\">\n                                <IconButton\n                                    iconStyle={iconStyle.icon}\n                                    style={iconStyle.button}\n                                    onTouchTap={() => { handleOpenPrint(id) }}\n                                    touch={true}>\n                                    <PrintIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </div>\n                    </Row>\n                </div>\n                    <div className={classes.content}>\n                        <div className={classes.leftSide}>\n                            <Row className='dottedList'>\n                                <Col xs={6}>Товар</Col>\n                                <Col xs={4}>Тип товара</Col>\n                                <Col xs={2}>Кол-во</Col>\n                            </Row>\n                            {_.map(products, (item) => {\n                                const productId = _.get(item, 'id')\n                                const name = _.get(item, ['product', 'name'])\n                                const measurement = _.get(item, ['product', 'measurement', 'name'])\n                                const amount = numberformat(_.get(item, 'amount'), measurement)\n                                const stock = _.toInteger(_.get(item, ['stock', 'id']))\n                                if (stock === detailType) {\n                                    return (\n                                        <Row key={productId} className='dottedList'>\n                                            <Col xs={6}>{name}</Col>\n                                            <Col xs={4}>Стиральный порошек</Col>\n                                            <Col xs={2}>{amount}</Col>\n                                        </Row>\n                                    )\n                                }\n                                return null\n                            })}\n                        </div>\n                        <div className={classes.rightSide}>\n                            <div className={classes.subtitle}>Комментарий:</div>\n                            <div>{comment}</div>\n                        </div>\n                    </div>\n                </div>\n            }\n        </div>\n    )\n})\n\nStockTransferDetails.propTypes = {\n    detailData: PropTypes.object.isRequired\n}\n\nexport default StockTransferDetails\n\n\n\n// WEBPACK FOOTER //\n// src/components/StockReceive/StockTabTransferHistoryDetails.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose, withState} from 'recompose'\nimport injectSheet from 'react-jss'\nimport LinearProgress from '../LinearProgress'\nimport numberformat from '../../helpers/numberFormat'\nimport dateFormat from '../../helpers/dateFormat'\nimport {Row, Col} from 'react-flexbox-grid'\nimport NotFound from '../Images/not-found.png'\nimport PrintIcon from 'material-ui/svg-icons/action/print'\nimport Tooltip from '../ToolTip'\nimport IconButton from 'material-ui/IconButton'\nimport CheckCircleIcon from 'material-ui/svg-icons/action/check-circle'\nconst ACCEPT = 1\n\nconst colorBlue = '#12aaeb !important'\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            color: '#333 !important',\n            width: '100%',\n            maxHeight: 'unset',\n            position: 'relative',\n            borderTop: '1px #efefef solid',\n            display: 'flex',\n            flexWrap: 'wrap',\n            '& a': {\n                color: colorBlue\n            },\n            '& .row': {\n                alignItems: 'center'\n            }\n        },\n        titleButtons: {\n            display: 'flex',\n            zIndex: '3',\n            justifyContent: 'flex-end'\n        },\n        loader: {\n            width: '100%',\n            height: '100px',\n            background: '#fff',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        content: {\n            width: '100%',\n            overflow: 'hidden',\n            display: 'flex',\n            borderTop: 'solid 1px #efefef'\n        },\n        leftSide: {\n            flexBasis: '70%',\n            maxWidth: '70%',\n            padding: '0 30px 5px',\n            '& > .row': {\n                padding: '15px 0',\n                '&:first-child': {\n                    fontWeight: '600'\n                },\n                '&:last-child:after': {\n                    display: 'none'\n                }\n            }\n        },\n        semibold: {\n            fontWeight: '600',\n            cursor: 'pointer',\n            position: 'relative'\n        },\n        header: {\n            position: 'relative',\n            padding: '0 30px',\n            width: '100%',\n            '& .row': {\n                alignItems: 'center'\n            }\n        },\n        rightSide: {\n            flexBasis: '30%',\n            maxWidth: '30%',\n            padding: '20px 30px',\n            borderLeft: '1px #efefef solid',\n            '& > div:last-child': {\n                marginTop: '5px'\n            }\n        },\n        printer: {\n            position: 'absolute',\n            right: '0'\n        },\n        subtitle: {\n            fontWeight: '600'\n        },\n        emptyQuery: {\n            background: 'url(' + NotFound + ') no-repeat center 25px',\n            backgroundSize: '200px',\n            padding: '170px 0 30px',\n            textAlign: 'center',\n            fontSize: '13px',\n            color: '#999',\n            width: '100%',\n            '& svg': {\n                width: '50px !important',\n                height: '50px !important',\n                color: '#999 !important'\n            }\n        },\n        closeDetail: {\n            position: 'absolute',\n            left: '0',\n            top: '0',\n            right: '0',\n            bottom: '0',\n            cursor: 'pointer',\n            zIndex: '1'\n        }\n\n    }),\n    withState('openDetails', 'setOpenDetails', false)\n)\n\nconst iconStyle = {\n    icon: {\n        color: '#666',\n        width: 25,\n        height: 25\n    },\n    button: {\n        width: 48,\n        height: 48,\n        padding: 0\n    }\n}\n\nconst StockTransferDetails = enhance((props) => {\n    const {\n        classes,\n        detailData,\n        handleCloseDetail,\n        confirmDialog,\n        printDialog\n    } = props\n\n    const detailLoading = _.get(detailData, 'transferDetailLoading')\n    const products = _.get(detailData, ['data', 'products'])\n    const comment = _.get(detailData, ['data', 'comment']) || 'Комментарий отсутствует'\n    const id = _.get(detailData, 'id')\n    const dateRequest = dateFormat(_.get(detailData, ['currentTransferDetail', 'dateRequest']))\n    const dateDelivery = dateFormat(_.get(detailData, ['currentTransferDetail', 'dateDelivery']))\n    const receiver = _.get(detailData, ['currentTransferDetail', 'receiver'])\n    const stockName = _.get(detailData, ['currentTransferDetail', 'stock', 'name'])\n    const detailType = _.toInteger(_.get(detailData, 'type'))\n    const tooltipText = 'Подтвердить Запрос № ' + id\n    if (_.isEmpty(products)) {\n        return (\n            <div className={classes.wrapper} style={detailLoading ? {padding: '0 30px', border: 'none', maxHeight: '2px'} : {maxHeight: '250px', overflowY: 'hidden'}}>\n                {detailLoading && <LinearProgress/>}\n                <div className={classes.emptyQuery}>\n                    <div>Товаров не найдено</div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className={classes.wrapper} style={detailLoading ? {padding: '0 30px', border: 'none', maxHeight: '2px'} : {maxHeight: 'unset'}}>\n            {detailLoading ? <LinearProgress/>\n                : <div style={{width: '100%'}}>\n                    <div className={classes.header}>\n                        <div className={classes.closeDetail}\n                             onClick={handleCloseDetail}>\n                        </div>\n                        <Row className={classes.semibold}>\n                            <Col xs={2}>{id}</Col>\n                            <Col xs={2}>{dateRequest}</Col>\n                            <Col xs={2}>{stockName}</Col>\n                            <Col xs={3}>{receiver}</Col>\n                            <Col xs={2}>{dateDelivery}</Col>\n                            <Col xs={1} style={{textAlign: 'right', display: 'flex'}}>\n                                <div className={classes.titleButtons}>\n                                    <Tooltip position=\"right\" text=\"Распечатать накладную\">\n                                        <IconButton\n                                            iconStyle={iconStyle.icon}\n                                            style={iconStyle.button}\n                                            onTouchTap={() => { printDialog.handleOpenPrintDialog(id) }}\n                                            touch={true}\n                                        >\n                                            <PrintIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                    <Tooltip position=\"right\" text={tooltipText}>\n                                        <IconButton\n                                            iconStyle={iconStyle.icon}\n                                            style={iconStyle.button}\n                                            touch={true}\n                                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(ACCEPT) }}>\n                                            <CheckCircleIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                </div>\n                            </Col>\n                        </Row>\n                    </div>\n                    <div className={classes.content}>\n                        <div className={classes.leftSide}>\n                            <Row className='dottedList'>\n                                <Col xs={6}>Товар</Col>\n                                <Col xs={4}>Тип товара</Col>\n                                <Col xs={2}>Кол-во</Col>\n                            </Row>\n                            {_.map(products, (item) => {\n                                const productId = _.get(item, 'id')\n                                const name = _.get(item, ['product', 'name'])\n                                const measurement = _.get(item, ['product', 'measurement', 'name'])\n                                const amount = numberformat(_.get(item, 'amount'), measurement)\n                                const stock = _.toInteger(_.get(item, ['stock', 'id']))\n                                if (stock === detailType) {\n                                    return (\n                                        <Row key={productId} className='dottedList'>\n                                            <Col xs={6}>{name}</Col>\n                                            <Col xs={4}>Стиральный порошек</Col>\n                                            <Col xs={2}>{amount}</Col>\n                                        </Row>\n                                    )\n                                }\n                                return null\n                            })}\n                        </div>\n                        <div className={classes.rightSide}>\n                            <div className={classes.subtitle}>Комментарий:</div>\n                            <div>{comment}</div>\n                        </div>\n                    </div>\n                </div>\n            }\n        </div>\n    )\n})\n\nStockTransferDetails.propTypes = {\n    detailData: PropTypes.object.isRequired\n}\n\nexport default StockTransferDetails\n\n\n\n// WEBPACK FOOTER //\n// src/components/StockReceive/StockTransferDetails.js","import StockReceiveGridList from './StockReceiveGridList'\nimport {HISTORY_FILTER_KEY} from './StockHistoryFilterForm'\nimport {TAB_RECEIVE_FILTER_KEY} from './TabReceiveFilterForm'\nconst STOCK_RECEIVE_CREATE_DIALOG_OPEN = 'openCreateDialog'\nconst STOCK_RECEIVE_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nconst TAB = 'tab'\nconst HISTORY_FILTER_OPEN = 'openFilterDialog'\nconst STOCK_CONFIRM_DIALOG_OPEN = 'openConfirmDialog'\n\nexport {\n    StockReceiveGridList,\n    STOCK_RECEIVE_CREATE_DIALOG_OPEN,\n    HISTORY_FILTER_OPEN,\n    TAB,\n    HISTORY_FILTER_KEY,\n    STOCK_CONFIRM_DIALOG_OPEN,\n    TAB_RECEIVE_FILTER_KEY,\n    STOCK_RECEIVE_UPDATE_DIALOG_OPEN\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/StockReceive/index.js","import _ from 'lodash'\nimport React from 'react'\nimport {Link} from 'react-router'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport HardwareKeyboardArrowRight from 'material-ui/svg-icons/hardware/keyboard-arrow-right'\nimport {MenuItems} from '../SidebarMenu/MenuItems'\nimport ToolTip from '../ToolTip'\n\nconst NOT_FOUND = -1\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            position: 'relative',\n            width: '100%',\n            height: '60px',\n            display: 'flex',\n            alignItems: 'center'\n        },\n        item: {\n            color: '#44637e',\n            fontWeight: 'bold',\n            marginRight: '25px',\n            '&:hover': {\n                cursor: 'pointer'\n            }\n        },\n        active: {\n            color: '#12aaeb !important',\n            extend: 'item',\n            borderBottom: '1px solid',\n            fontWeight: 'bold'\n        },\n        subParentIco: {\n            display: 'flex',\n            paddingRight: '10px',\n            paddingLeft: '2px',\n            '& svg path': {\n                fill: 'rgb(93, 100, 116) !important'\n            }\n        }\n    })\n)\n\nconst SubMenu = enhance((props) => {\n    const {classes, url} = props\n\n    const parent = _\n        .chain(MenuItems)\n        .find((item) => {\n            return (_.findIndex(item.childs, (ch) => ch.url === url) > NOT_FOUND)\n        })\n        .value()\n\n    const items = _.map(parent.childs, (item, index) => {\n        return (\n            <Link to={item.url} key={index}>\n                <span className={item.url === url ? classes.active : classes.item}> {item.name}</span>\n            </Link>\n        )\n    })\n\n    return (\n        <div className={classes.wrapper}>\n                <ToolTip position=\"right\" text={parent.name}>\n                    <div className={classes.subParentIco}>\n                        {parent.icon}\n                    </div>\n                </ToolTip>\n            <HardwareKeyboardArrowRight style={{color: '#66696f', height: '12px', marginRight: '15px', width: 'auto'}} />\n            {items}\n        </div>\n    )\n})\n\nSubMenu.propTypes = {\n    url: PropTypes.string.isRequired\n}\n\nexport default SubMenu\n\n\n\n// WEBPACK FOOTER //\n// src/components/SubMenu/SubMenu.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose, withReducer} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport {Row, Col} from 'react-flexbox-grid'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport IconButton from 'material-ui/IconButton'\nimport numberFormat from '../../helpers/numberFormat'\nimport CloseIcon2 from '../CloseIcon2'\nimport MainStyles from '../Styles/MainStyles'\n\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        defect: {\n            padding: '10px 0',\n            width: '100%',\n            '& .row:first-child': {\n                fontWeight: '600',\n                padding: '20px 0',\n                position: 'relative'\n            },\n            '& .row': {\n                padding: '10px 0',\n                position: 'static',\n                '& > div:last-child': {\n                    textAlign: 'right'\n                }\n            },\n            '& img': {\n                display: 'block',\n                marginLeft: 'auto',\n                width: '50px'\n            }\n        },\n        bigImage: {\n            background: '#eee',\n            position: 'absolute',\n            top: '-59px',\n            left: '0',\n            width: '100%',\n            height: '100%'\n        }\n    })),\n    withReducer('state', 'dispatch', (state, action) => {\n        return {...state, ...action}\n    }, {open: false}),\n)\n\nconst customContentStyle = {\n    width: '600px',\n    maxWidth: 'none'\n}\nconst SupplyDefectDialog = enhance((props) => {\n    const {open, onClose, classes, defectData} = props\n    const defectItems = _.map(defectData, (item) => {\n        const amount = numberFormat(_.get(item, 'amount'))\n        const barcode = _.get(item, 'barcode')\n        const comment = _.get(item, 'comment')\n        const imgURL = _.get(item, ['image', 'file'])\n        const measurement = _.get(item, ['measurement', 'name'])\n\n        return (\n            <Row key={barcode} className=\"dottedList\">\n                <Col xs={2}>{barcode}</Col>\n                <Col xs={2}>{amount} {measurement}</Col>\n                <Col xs={6}>{comment}</Col>\n                <Col xs={2}><img src={imgURL} alt=\"\"/></Col>\n            </Row>\n        )\n    })\n\n    return (\n        <Dialog\n            modal={true}\n            contentStyle={customContentStyle}\n            open={open}\n            onRequestClose={onClose}\n            bodyClassName={classes.popUp}\n            autoScrollBodyContent={true}>\n            <div className={classes.titleContent}>\n                <span>Бракованные товараы</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <div className={classes.loader}>\n                    <CircularProgress size={40} thickness={4}/>\n                </div>\n                <div className={classes.innerWrap}>\n                    <div className={classes.inContent} style={{minHeight: '350px', position: 'relative'}}>\n                        <div className={classes.defect}>\n                            <Row className=\"dottedList\">\n                                <Col xs={2}>Баркод</Col>\n                                <Col xs={2}>Кол-во</Col>\n                                <Col xs={6}>Комментарий</Col>\n                                <Col xs={2}></Col>\n                            </Row>\n                            {defectItems}\n                        </div>\n                        <div className={classes.bigImage}>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Dialog>\n    )\n})\nSupplyDefectDialog.propTyeps = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired,\n    defectData: PropTypes.object\n}\nexport default SupplyDefectDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Supply/SupplyDefectDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose, withState} from 'recompose'\nimport injectSheet from 'react-jss'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport IconButton from 'material-ui/IconButton'\nimport FlatButton from 'material-ui/FlatButton'\nimport Edit from 'material-ui/svg-icons/image/edit'\nimport Cancel from 'material-ui/svg-icons/content/remove-circle'\nimport {Row, Col} from 'react-flexbox-grid'\nimport Person from '../Images/person.png'\nimport Dot from '../Images/dot.png'\nimport CloseIcon from '../CloseIcon'\nimport numberFormat from '../../helpers/numberFormat'\nimport Tooltip from '../ToolTip'\nimport moment from 'moment'\n\nconst colorBlue = '#12aaeb'\nconst enhance = compose(\n    injectSheet({\n        dottedList: {\n            padding: '20px 0'\n        },\n        wrapper: {\n            color: '#333 !important',\n            width: '100%',\n            display: 'flex',\n            flexWrap: 'wrap',\n            padding: '20px 30px',\n            '& a': {\n                color: colorBlue\n            }\n        },\n        link: {\n            borderBottom: '1px dashed',\n            fontWeight: '600'\n        },\n        defect: {\n            color: '#e57373 !important'\n        },\n        loader: {\n            width: '100%',\n            background: '#fff',\n            height: '400px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n        },\n        expenseLoader: {\n            extend: 'loader',\n            height: 'auto',\n            padding: '20px 0'\n        },\n        title: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            width: '100%',\n            height: '65px',\n            margin: '-20px 0 0',\n            position: 'relative'\n        },\n        titleLabel: {\n            fontSize: '18px',\n            color: '#333',\n            fontWeight: '600',\n            cursor: 'pointer'\n        },\n        titleButtons: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            '& button > div': {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center'\n            }\n        },\n        titleSupplier: {\n            fontSize: '18px',\n            position: 'relative',\n            '& .supplierDetails': {\n                background: '#fff',\n                boxShadow: '0 2px 5px 0px rgba(0, 0, 0, 0.16)',\n                fontSize: '13px',\n                position: 'absolute',\n                padding: '64px 28px 20px',\n                top: '-21px',\n                left: '50%',\n                zIndex: '9',\n                minWidth: '300px',\n                transform: 'translate(-50%, 0)',\n                '& .detailsWrap': {\n                    position: 'relative',\n                    paddingTop: '10px',\n                    '&:before': {\n                        content: '\"\"',\n                        background: 'url(' + Dot + ')',\n                        position: 'absolute',\n                        top: '0',\n                        left: '0',\n                        right: '0',\n                        height: '2px'\n                    }\n                },\n                '& .detailsList': {\n                    padding: '10px 0',\n                    '&:last-child': {\n                        paddingBottom: '0'\n                    },\n                    '& div:first-child': {\n                        color: '#666'\n                    }\n                }\n            }\n        },\n        dropdown: {\n            position: 'relative',\n            paddingRight: '18px',\n            zIndex: '10',\n            '&:after': {\n                top: '10px',\n                right: '0',\n                content: '\"\"',\n                position: 'absolute',\n                borderTop: '5px solid',\n                borderLeft: '5px solid transparent',\n                borderRight: '5px solid transparent'\n            }\n        },\n        details: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            boxSizing: 'content-box',\n            alignItems: 'center',\n            width: '100%',\n            background: '#f2f5f8',\n            padding: '0 30px',\n            margin: '0 -30px',\n            minHeight: '60px'\n        },\n        payInfo: {\n            display: 'flex'\n        },\n        storeInfo: {\n            display: 'flex'\n        },\n        dateInfo: {\n            textAlign: 'right'\n        },\n        data: {\n            width: '100%',\n            '& .dataHeader': {\n                fontWeight: 'bold',\n                padding: '20px 0',\n                width: '100%',\n                borderBottom: '1px solid #efefef',\n                '& .row': {\n                    alignItems: 'center',\n                    '& div': {\n                        whiteSpace: 'nowrap',\n                        overflow: 'hidden',\n                        textOverflow: 'ellipsis'\n                    }\n                }\n            },\n            '& .summary': {\n                fontWeight: 'bold',\n                textTransform: 'uppercase',\n                textAlign: 'right',\n                padding: '20px 30px',\n                margin: '0 -30px',\n                borderBottom: '1px #efefef solid'\n            },\n            '& .dottedList': {\n                '&:after': {\n                    left: '0.5rem',\n                    right: '0.5rem'\n                }\n            },\n            '& .addExpenses': {\n                padding: '20px 30px 0',\n                margin: '0 -30px',\n                borderBottom: '1px #efefef solid',\n                '& .addExpense': {\n                    display: 'flex',\n                    alignItems: 'center',\n                    paddingBottom: '20px',\n                    width: '100%',\n                    justifyContent: 'space-between',\n                    fontWeight: 'bold',\n                    '& .expenseButton > div > span ': {\n                        color: '#12aaeb !important',\n                        textTransform: 'inherit !important'\n                    }\n                }\n            },\n            '& .expenseInfo': {\n                padding: '0 !important',\n                display: 'block',\n                '&:last-child': {\n                    position: 'static'\n                },\n                '& .row': {\n                    alignItems: 'center'\n                }\n            },\n            '& .comment': {\n                display: 'flex',\n                padding: '20px 0 0',\n                alignItems: 'center',\n                '& .personImage': {\n                    borderRadius: '50%',\n                    overflow: 'hidden',\n                    flexBasis: '35px',\n                    flexGrow: '1',\n                    height: '35px',\n                    width: '35px',\n                    '& img': {\n                        display: 'block',\n                        height: '100%',\n                        width: '100%'\n                    }\n                },\n                '& .personText': {\n                    background: '#f2f5f8',\n                    borderRadius: '2px',\n                    marginLeft: '15px',\n                    padding: '15px',\n                    position: 'relative',\n                    width: 'calc(100% - 50px)',\n                    '&:after': {\n                        content: '\"\"',\n                        position: 'absolute',\n                        borderRightColor: '#f2f5f8',\n                        borderRightStyle: 'solid',\n                        borderRightWidth: '7px',\n                        borderTop: '7px solid transparent',\n                        borderBottom: '7px solid transparent',\n                        left: '-7px',\n                        top: '50%',\n                        marginTop: '-7px'\n                    }\n                }\n            }\n        },\n        expenseSum: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end'\n        },\n        closeDetail: {\n            position: 'absolute',\n            left: '0',\n            top: '0',\n            right: '0',\n            bottom: '0',\n            cursor: 'pointer',\n            zIndex: '1',\n            margin: '0 -30px'\n        }\n    }),\n    withState('openDetails', 'setOpenDetails', false)\n)\n\nconst iconStyle = {\n    icon: {\n        color: '#666',\n        width: 20,\n        height: 20\n    },\n    button: {\n        width: 48,\n        height: 48,\n        padding: 0\n    }\n}\n\nconst SupplyDetails = enhance((props) => {\n    const {\n        classes,\n        loading,\n        data,\n        setOpenDetails,\n        openDetails,\n        handleSupplyExpenseOpenCreateDialog,\n        supplyListData,\n        updateDialog,\n        confirmDialog,\n        confirmExpenseDialog,\n        handleCloseDetail\n    } = props\n    const id = _.get(data, 'id')\n    const provider = _.get(data, ['provider', 'name'])\n    const products = _.get(data, 'products')\n    const stock = _.get(data, ['stock', 'name'])\n    const currency = _.get(data, ['currency', 'name']) || 'N/A'\n    const contact = _.get(data, 'contact')\n    const contactPerson = _.get(contact, 'name')\n    const contactEmail = _.get(contact, 'email')\n    const contactPhone = _.get(contact, 'phone')\n    const dateDelivery = _.get(data, 'dateDelivery') || 'Не указано'\n    const acceptedTime = (_.get(data, 'acceptedTime')) ? moment(_.get(data, 'acceptedTime')).format('DD.MM.YYYY HH:mm:ss') : 'Не началась'\n    const finishedTime = (_.get(data, 'finishedTime')) ? moment(_.get(data, 'finishedTime')).format('DD.MM.YYYY HH:mm:ss') : 'Не закончилась'\n    const totalCost = _.get(data, 'totalCost')\n    const comment = _.get(data, 'comment')\n    const isFinished = !_.isEmpty(_.get(data, 'finishedTime'))\n\n    const supplyExpenseList = _.get(supplyListData, 'data')\n    const supplyExpenseListLoading = _.get(supplyListData, 'supplyExpenseListLoading')\n\n    if (loading) {\n        return (\n            <div className={classes.loader}>\n                <div>\n                    <CircularProgress size={40} thickness={4}/>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className={classes.wrapper}>\n            <div className={classes.title}>\n                <div className={classes.titleLabel}>Поставка №{id}</div>\n                <div className={classes.closeDetail}\n                     onClick={handleCloseDetail}>\n                </div>\n                <div className={classes.titleSupplier}>\n                    <a className={classes.dropdown} onMouseEnter={() => {\n                        setOpenDetails(true)\n                    }}>{provider}</a>\n                    {openDetails &&\n                    <div className=\"supplierDetails\" onMouseLeave={() => {\n                        setOpenDetails(false)\n                    }}>\n                        <div className=\"detailsWrap\">\n                            <Row className=\"detailsList\">\n                                <Col xs={6}>Контактное лицо</Col>\n                                <Col xs={6}>{contactPerson}</Col>\n                            </Row>\n                            <Row className=\"detailsList\">\n                                <Col xs={6}>Телефон</Col>\n                                <Col xs={6}>{contactPhone}</Col>\n                            </Row>\n                            <Row className=\"detailsList\">\n                                <Col xs={6}>Email</Col>\n                                <Col xs={6}>{contactEmail}</Col>\n                            </Row>\n                        </div>\n                    </div>\n                    }\n                </div>\n                <div className={classes.titleButtons}>\n                    <Tooltip position=\"bottom\" text=\"Изменить\">\n                        <IconButton\n                            disabled={isFinished && true}\n                            iconStyle={iconStyle.icon}\n                            style={iconStyle.button}\n                            touch={true}\n                            onTouchTap={updateDialog.handleOpenUpdateDialog}>\n                            <Edit />\n                        </IconButton>\n                    </Tooltip>\n                    <Tooltip position=\"bottom\" text=\"Отменить\">\n                        <IconButton\n                            disabled={isFinished && true}\n                            iconStyle={iconStyle.icon}\n                            style={iconStyle.button}\n                            touch={true}\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(id) }}>\n                            <Cancel />\n                        </IconButton>\n                    </Tooltip>\n                </div>\n            </div>\n\n            <div className={classes.details}>\n                <div className={classes.storeInfo}>\n                    <div className={classes.store}>Склад: <span\n                        style={{color: '#999', fontWeight: 'bold'}}>{stock}</span></div>\n                    <div className={classes.supplyDate} style={{marginLeft: '45px'}}>Дата поставки: <span\n                        style={{color: '#e57373', fontWeight: 'bold'}}>{dateDelivery}</span></div>\n                </div>\n                <div className={classes.dateInfo}>\n                    <div>Начало приемки: <span style={{fontWeight: '600'}}>{acceptedTime}</span></div>\n                    <div>Конец приемки: <span style={{fontWeight: '600'}}>{finishedTime}</span></div>\n                </div>\n            </div>\n\n            <div className={classes.data}>\n                <div className=\"dataHeader\">\n                    <Row>\n                        <Col xs={4}>Товар</Col>\n                        <Col xs={1}>Кол-во</Col>\n                        <Col xs={1}>Принято</Col>\n                        <Col xs={1}>Брак</Col>\n                        <Col xs={1}>Недостача</Col>\n                        <Col xs={2}>\n                            <div style={{textAlign: 'right'}}>Стоимость</div>\n                        </Col>\n                        <Col xs={2}>\n                            <div style={{textAlign: 'right'}}>Итог</div>\n                        </Col>\n                    </Row>\n                </div>\n                <div>\n                    {_.map(products, (item) => {\n                        const ZERO = 0\n                        const product = _.get(item, 'product')\n                        const productId = _.get(product, 'id')\n                        const productName = _.get(product, 'name')\n                        const cost = _.toInteger(_.get(item, 'cost'))\n                        const amount = _.toInteger(_.get(item, 'amount'))\n                        const itemPrice = cost / amount\n                        const postedAmount = _.get(item, 'postedAmount')\n                        const measurement = _.get(product, ['measurement', 'name'])\n                        const defectAmount = _.toInteger(_.get(item, 'defectAmount'))\n                        const notAccepted = postedAmount + defectAmount < amount ? numberFormat(amount - defectAmount - postedAmount, measurement) : numberFormat(ZERO, measurement)\n                        return (\n                            <Row className=\"dataInfo dottedList\" key={productId}>\n                                <Col xs={4}>{productName}</Col>\n                                <Col xs={1}>{numberFormat(amount, measurement)}</Col>\n                                <Col xs={1}>{numberFormat(postedAmount, measurement)}</Col>\n                                <Col xs={1}>\n                                    {(defectAmount > ZERO) ? <span className={classes.defect}>{numberFormat(defectAmount, measurement)}</span>\n                                    : <span>{numberFormat(defectAmount, measurement)}</span>}\n                                    </Col>\n                                <Col xs={1}>{notAccepted}</Col>\n                                <Col xs={2}>\n                                    <div style={{textAlign: 'right'}}>{numberFormat(itemPrice, currency)}</div>\n                                </Col>\n                                <Col xs={2}>\n                                    <div style={{textAlign: 'right'}}>{numberFormat(cost, currency)}</div>\n                                </Col>\n                            </Row>\n                        )\n                    })}\n                </div>\n                <div className=\"summary\">\n                    <div>Сумма заказа <span style={{marginLeft: '40px'}}>{numberFormat(totalCost, currency)}</span></div>\n                </div>\n                <div className=\"addExpenses\">\n                    <div className=\"addExpense\">\n                        <div>Дополнительные расходы по заказу</div>\n                        <div>\n                            <FlatButton\n                                onTouchTap={() => { handleSupplyExpenseOpenCreateDialog(id) }}\n                                className=\"expenseButton\"\n                                label=\"+ добавить доп. расход\"/>\n                        </div>\n                    </div>\n                    {supplyExpenseListLoading && <div className={classes.expenseLoader}>\n                        <div>\n                            <CircularProgress size={40} thickness={4}/>\n                        </div>\n                    </div>}\n                    {!supplyExpenseListLoading && _.map(supplyExpenseList, (item) => {\n                        const expId = _.get(item, 'id')\n                        const expComment = _.get(item, 'comment')\n                        const expAmount = numberFormat(_.get(item, 'amount'))\n                        const expCurrency = _.get(item, ['currency', 'name'])\n                        return (\n                            <div className=\"expenseInfo dottedList\" key={expId}>\n                                <Row key={expId}>\n                                    <Col xs={9}>{expComment}</Col>\n                                    <Col xs={3} className={classes.expenseSum}>\n                                        <div style={{textAlign: 'right'}}>{expAmount} {expCurrency}</div>\n                                        <IconButton\n                                            iconStyle={{color: '#666'}}\n                                            onTouchTap={() => { confirmExpenseDialog.handleOpenConfirmExpenseDialog(expId) }}>\n                                            <CloseIcon/>\n                                        </IconButton>\n                                    </Col>\n                                </Row>\n                            </div>\n                        )\n                    })}\n                </div>\n                {comment && <div className=\"comment\">\n                    <div className=\"personImage\">\n                        <img src={Person} alt=\"\"/>\n                    </div>\n                    <div className=\"personText\">\n                        {comment}\n                    </div>\n                </div>\n                }\n\n            </div>\n        </div>\n    )\n})\n\nSupplyDetails.propTypes = {\n    defectDialog: PropTypes.shape({\n        openDefectDialog: PropTypes.bool.isRequired,\n        handleOpenDefectDialog: PropTypes.func.isRequired,\n        handleCloseDefectDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default SupplyDetails\n\n\n\n// WEBPACK FOOTER //\n// src/components/Supply/SupplyDetails.js","import _ from 'lodash'\nimport sprintf from 'sprintf'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router'\nimport {Row, Col} from 'react-flexbox-grid'\nimport IconButton from 'material-ui/IconButton'\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\nimport * as ROUTES from '../../constants/routes'\nimport GridList from '../GridList'\nimport Container from '../Container'\nimport SupplyFilterForm from './SupplyFilterForm'\nimport SupplyDetails from './SupplyDetails'\nimport SupplyCreateDialog from './SupplyCreateDialog'\nimport SupplyDefectDialog from './SupplyDefectDialog'\nimport ConfirmDialog from '../ConfirmDialog'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport SupplyExpenseCreateDialog from './SupplyExpenseCreateDialog'\nimport Tooltip from '../ToolTip'\nimport numberFormat from '../../helpers/numberFormat'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'id',\n        title: '№',\n        xs: 1\n    },\n    {\n        sorting: true,\n        name: 'name',\n        title: 'Поставщик',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'stock',\n        title: 'Склад',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'dateDelivery',\n        title: 'Дата поставки',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'totalCost',\n        title: 'Цена заказа',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'status',\n        title: 'Статус',\n        xs: 1\n    },\n    {\n        sorting: true,\n        name: 'acceptedCost',\n        title: 'Принято',\n        xs: 1\n    },\n    {\n        sorting: true,\n        name: 'defectedCost',\n        title: 'Браковано',\n        xs: 1\n    }\n]\n\nconst enhance = compose(\n    injectSheet({\n        addButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        addButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px'\n        },\n        dot: {\n            display: 'inline-block',\n            height: '7px',\n            width: '7px',\n            borderRadius: '50%',\n            marginRight: '6px'\n        },\n        success: {\n            extend: 'dot',\n            backgroundColor: '#81c784'\n        },\n        begin: {\n            extend: 'dot',\n            backgroundColor: '#f0ad4e'\n        },\n        error: {\n            extend: 'dot',\n            backgroundColor: '#e57373'\n        },\n        waiting: {\n            extend: 'dot',\n            backgroundColor: '#64b5f6'\n        },\n        listRow: {\n            position: 'relative',\n            '& > a': {\n                width: '100%',\n                display: 'flex',\n                alignItems: 'center',\n                boxSizing: 'content-box',\n                position: 'absolute',\n                top: '0',\n                left: '-30px',\n                right: '-30px',\n                bottom: '0',\n                padding: '0 30px',\n                '& > div:first-child': {\n                    fontWeight: '600'\n                },\n                '& > div': {\n                    fontWeight: '500'\n                }\n            }\n        }\n    })\n)\n\nconst SupplyGridList = enhance((props) => {\n    const {\n        filter,\n        createDialog,\n        defectDialog,\n        updateDialog,\n        filterDialog,\n        actionsDialog,\n        confirmDialog,\n        confirmExpenseDialog,\n        deleteDialog,\n        listData,\n        detailData,\n        classes,\n\n        supplyExpenseCreateDialog,\n        supplyListData\n    } = props\n\n    const actions = (\n        <div>\n            <IconButton onTouchTap={actionsDialog.handleActionEdit}>\n                <ModEditorIcon />\n            </IconButton>\n\n            <IconButton onTouchTap={actionsDialog.handleActionDelete}>\n                <DeleteIcon />\n            </IconButton>\n        </div>\n    )\n\n    const supplyFilterDialog = (\n        <SupplyFilterForm\n            initialValues={filterDialog.initialValues}\n            filter={filter}\n            filterDialog={filterDialog}\n        />\n    )\n\n    const supplyDetail = (\n        <SupplyDetails\n            key={_.get(detailData, 'id')}\n            data={_.get(detailData, 'data') || {}}\n            defectDialog={defectDialog}\n            deleteDialog={deleteDialog}\n            confirmDialog={confirmDialog}\n            confirmExpenseDialog={confirmExpenseDialog}\n            updateDialog={updateDialog}\n            loading={_.get(detailData, 'detailLoading')}\n            handleSupplyExpenseOpenCreateDialog={supplyExpenseCreateDialog.handleSupplyExpenseOpenCreateDialog}\n            supplyListData={supplyListData}\n            handleCloseDetail={_.get(detailData, 'handleCloseDetail')}\n        />\n    )\n\n    const PENDING = 0\n    const IN_PROGRESS = 1\n    const COMPLETED = 2\n    const supplyList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(_.get(item, 'provider'), 'name')\n        const stock = _.get(_.get(item, 'stock'), 'name') || 'N/A'\n        const dateDelivery = _.get(item, 'dateDelivery') || 'Не указано'\n        const totalCost = numberFormat(_.get(item, 'totalCost'), _.get(item, ['currency', 'name']))\n        const acceptedCost = numberFormat(_.get(item, 'acceptedCost'), _.get(item, ['currency', 'name']))\n        const defectedCost = numberFormat(_.get(item, 'defectedCost'), _.get(item, ['currency', 'name']))\n        const status = _.toNumber(_.get(item, 'status'))\n\n        return (\n            <Row key={id} className={classes.listRow}>\n                <Link to={{\n                    pathname: sprintf(ROUTES.SUPPLY_ITEM_PATH, id),\n                    query: filter.getParams()\n                }}>\n                    <Col xs={1}>{id}</Col>\n                    <Col xs={2}>{name}</Col>\n                    <Col xs={2}>{stock}</Col>\n                    <Col xs={2}>{dateDelivery}</Col>\n                    <Col xs={2}>{totalCost}</Col>\n                    <Col xs={1}>{status === PENDING ? (<span><i className={classes.waiting} /> ожидает</span>)\n                        : ((status === IN_PROGRESS) ? (<span><i className={classes.begin} /> начался</span>)\n                            : (status === COMPLETED) ? (<span><i className={classes.success} /> принято</span>)\n                                : (<span><i className={classes.error} /> отменен</span>))}</Col>\n                    <Col xs={1}>{acceptedCost}</Col>\n                    <Col xs={1}>{defectedCost}</Col>\n                </Link>\n            </Row>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: supplyList,\n        loading: _.get(listData, 'listLoading')\n    }\n\n    const expense = _.find(_.get(supplyListData, 'data'), {'id': confirmExpenseDialog.removeId})\n    const expComment = _.get(expense, 'comment')\n    return (\n        <Container>\n            <SubMenu url={ROUTES.SUPPLY_LIST_URL}/>\n\n            <div className={classes.addButtonWrapper}>\n                <Tooltip position=\"left\" text=\"Добавить поставку\">\n                    <FloatingActionButton\n                        mini={true}\n                        className={classes.addButton}\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\n                        <ContentAdd />\n                    </FloatingActionButton>\n                </Tooltip>\n            </div>\n\n            <GridList\n                filter={filter}\n                list={list}\n                detail={supplyDetail}\n                actionsDialog={actions}\n                filterDialog={supplyFilterDialog}\n            />\n\n            <SupplyCreateDialog\n                open={createDialog.openCreateDialog}\n                loading={createDialog.createLoading}\n                onClose={createDialog.handleCloseCreateDialog}\n                onSubmit={createDialog.handleSubmitCreateDialog}\n            />\n\n            <SupplyDefectDialog\n                open={defectDialog.openDefectDialog}\n                onClose={defectDialog.handleCloseDefectDialog}\n                defectData={_.get(detailData, 'defect')}\n            />\n\n            <SupplyCreateDialog\n                isUpdate={true}\n                initialValues={updateDialog.initialValues}\n                open={updateDialog.openUpdateDialog}\n                loading={updateDialog.updateLoading}\n                onClose={updateDialog.handleCloseUpdateDialog}\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\n            />\n\n            <SupplyExpenseCreateDialog\n                open={supplyExpenseCreateDialog.openSupplyExpenseCreateDialog}\n                loading={supplyExpenseCreateDialog.supplyExpenseLoading}\n                onClose={supplyExpenseCreateDialog.handleSupplyExpenseCloseCreateDialog}\n                onSubmit={supplyExpenseCreateDialog.handleSupplyExpenseSubmitCreateDialog}\n            />\n\n            {detailData.data && <ConfirmDialog\n                type=\"cancel\"\n                message={'Постака № ' + _.get(detailData, ['data', 'id'])}\n                onClose={confirmDialog.handleCloseConfirmDialog}\n                onSubmit={confirmDialog.handleSendConfirmDialog}\n                open={confirmDialog.openConfirmDialog}\n            />}\n\n            {confirmExpenseDialog.removeId && <ConfirmDialog\n                type=\"delete\"\n                message={'Дополнительный расход: ' + expComment}\n                onClose={confirmExpenseDialog.handleCloseConfirmExpenseDialog}\n                onSubmit={confirmExpenseDialog.handleSendConfirmExpenseDialog}\n                open={confirmExpenseDialog.openConfirmExpenseDialog}\n            />}\n        </Container>\n    )\n})\n\nSupplyGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    createDialog: PropTypes.shape({\n        createLoading: PropTypes.bool.isRequired,\n        openCreateDialog: PropTypes.bool.isRequired,\n        handleOpenCreateDialog: PropTypes.func.isRequired,\n        handleCloseCreateDialog: PropTypes.func.isRequired,\n        handleSubmitCreateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    defectDialog: PropTypes.shape({\n        openDefectDialog: PropTypes.bool.isRequired,\n        handleOpenDefectDialog: PropTypes.func.isRequired,\n        handleCloseDefectDialog: PropTypes.func.isRequired\n    }).isRequired,\n    confirmDialog: PropTypes.shape({\n        openConfirmDialog: PropTypes.bool.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleSendConfirmDialog: PropTypes.func.isRequired\n    }).isRequired,\n    confirmExpenseDialog: PropTypes.shape({\n        openConfirmExpenseDialog: PropTypes.bool.isRequired,\n        handleOpenConfirmExpenseDialog: PropTypes.func.isRequired,\n        handleCloseConfirmExpenseDialog: PropTypes.func.isRequired,\n        handleSendConfirmExpenseDialog: PropTypes.func.isRequired\n    }).isRequired,\n    deleteDialog: PropTypes.shape({\n        openDeleteDialog: PropTypes.bool.isRequired,\n        handleOpenDeleteDialog: PropTypes.func.isRequired,\n        handleCloseDeleteDialog: PropTypes.func.isRequired\n    }).isRequired,\n    updateDialog: PropTypes.shape({\n        updateLoading: PropTypes.bool.isRequired,\n        openUpdateDialog: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    actionsDialog: PropTypes.shape({\n        handleActionEdit: PropTypes.func.isRequired,\n        handleActionDelete: PropTypes.func.isRequired\n    }).isRequired,\n    filterDialog: PropTypes.shape({\n        initialValues: PropTypes.object,\n        filterLoading: PropTypes.bool,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    }).isRequired,\n\n    supplyExpenseCreateDialog: PropTypes.shape({\n        supplyExpenseLoading: PropTypes.bool.isRequired,\n        openSupplyExpenseCreateDialog: PropTypes.bool.isRequired,\n        handleSupplyExpenseOpenCreateDialog: PropTypes.func.isRequired,\n        handleSupplyExpenseCloseCreateDialog: PropTypes.func.isRequired,\n        handleSupplyExpenseSubmitCreateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    supplyListData: PropTypes.shape({\n        data: PropTypes.array,\n        supplyExpenseListLoading: PropTypes.bool.isRequired,\n        openSupplyExpenseConfirmDialog: PropTypes.bool.isRequired\n    })\n}\n\nexport default SupplyGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Supply/SupplyGridList.js","import SupplyGridList from './SupplyGridList'\nimport {SUPPLY_CREATE_DIALOG_OPEN} from './SupplyCreateDialog'\nimport {SUPPLY_EXPENSE_CREATE_DIALOG_OPEN} from './SupplyExpenseCreateDialog'\nimport {SUPPLY_FILTER_KEY, SUPPLY_FILTER_OPEN} from './SupplyFilterForm'\nconst SUPPLY_EXPENSE_DELETE_DIALOG_OPEN = 'delexpsup'\nconst SUPPLY_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nconst SUPPLY_DEFECT_DIALOG_OPEN = 'openDefectDialog'\nexport {\n    SUPPLY_EXPENSE_CREATE_DIALOG_OPEN,\n    SUPPLY_CREATE_DIALOG_OPEN,\n    SUPPLY_UPDATE_DIALOG_OPEN,\n    SUPPLY_FILTER_KEY,\n    SUPPLY_FILTER_OPEN,\n    SUPPLY_EXPENSE_DELETE_DIALOG_OPEN,\n    SUPPLY_DEFECT_DIALOG_OPEN,\n    SupplyGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Supply/index.js","import React from 'react'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport ReactTooltip from 'react-tooltip'\nimport {compose, withState} from 'recompose'\n\nconst enhance = compose(\n    injectSheet({\n        wrapper: {\n            position: 'relative'\n        },\n        tooltip: {\n            zIndex: '999999 !important',\n            '&.place-left': {\n                '&:after': {\n                    right: '-5px !important'\n                }\n            }\n        }\n    }),\n    withState('visible', 'setVisible', false)\n)\n\nconst ToolTip = enhance(({classes, text, children, position}) => {\n    const uniqId = _.uniqueId('tooltip_')\n    return (\n        <div>\n            <div data-tip data-for={uniqId}>\n                {children}\n            </div>\n            <ReactTooltip\n                place={position}\n                id={uniqId}\n                type=\"dark\"\n                effect=\"solid\"\n                className={classes.tooltip}\n                html={true}>\n                {text}\n            </ReactTooltip>\n        </div>\n    )\n})\n\nToolTip.propTypes = {\n    position: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired\n}\n\nexport default ToolTip\n\n\n\n// WEBPACK FOOTER //\n// src/components/ToolTip/ToolTip.js","import _ from 'lodash'\nimport React from 'react'\nimport IconButton from 'material-ui/IconButton'\nimport * as ROUTES from '../../constants/routes'\nimport {Link} from 'react-router'\nimport PropTypes from 'prop-types'\nimport sprintf from 'sprintf'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport CloseIcon2 from '../CloseIcon2'\nimport {reduxForm, Field} from 'redux-form'\nimport moment from 'moment'\nimport {DateField, TimeField} from '../ReduxForm'\nimport Checkbox from '../ReduxForm/Basic/CheckBox'\nimport RaisedButton from 'material-ui/RaisedButton'\n\nconst enhance = compose(\n    injectSheet({\n        detailWrap: {\n            background: '#fff',\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            zIndex: '2',\n            overflowY: 'auto'\n        },\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        title: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: '600',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '20px 30px',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                top: '5px',\n                padding: '0 !important',\n                position: 'absolute !important'\n            }\n        },\n        subtitle: {\n            fontWeight: '600',\n            marginBottom: '15px'\n        },\n        content: {\n            padding: '20px 30px',\n            overflowY: 'auto'\n        },\n        checkbox: {\n            margin: '15px 0 !important',\n            '& span': {\n                top: '-10px !important',\n                left: '-10px !important'\n            }\n        },\n        halfField: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            '& > div': {\n                width: '49%'\n            }\n        },\n        inputFieldCustom: {\n            flexBasis: '200px',\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        inputDateCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            },\n            '& div:first-child': {\n                height: '45px !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'TrackingFilterForm',\n        enableReinitialize: true\n    })\n)\n\nconst TrackingDetails = enhance((props) => {\n    const {\n        classes,\n        filter,\n        listData,\n        handleSubmit,\n        detailData,\n        filterForm,\n        agentLocation\n    } = props\n    const loading = _.get(detailData, 'detailLoading')\n    const id = _.get(detailData, 'id')\n    const agent = _.get(_.find(_.get(listData, 'data'), {'id': id}), 'agent')\n\n    return (\n        <div className={classes.detailWrap}>\n            {loading && <div className={classes.loader}>\n                <CircularProgress size={40} thickness={4}/>\n            </div>}\n            <div className={classes.title}>\n                <span>{agent}</span>\n                <Link to={{\n                    pathname: sprintf(ROUTES.TRACKING_LIST_URL),\n                    query: filter.getParams()\n                }}>\n                    <IconButton>\n                        <CloseIcon2 color=\"#666666\"/>\n                    </IconButton>\n                </Link>\n            </div>\n            <div className={classes.content}>\n                <div className={classes.filter}>\n                    <div className={classes.subtitle}>Фильтры</div>\n                    <form onSubmit={handleSubmit(filterForm.handleSubmitFilterDialog)}>\n                        <Field\n                            className={classes.inputDateCustom}\n                            name=\"date\"\n                            component={DateField}\n                            label=\"Посмотреть по дате\"\n                            fullWidth={true}/>\n                        <div className={classes.halfField}>\n                            <Field\n                                className={classes.inputDateCustom}\n                                name=\"fromTime\"\n                                component={TimeField}\n                                label=\"Время начала\"\n                                fullWidth={true}/>\n                            <Field\n                                className={classes.inputDateCustom}\n                                name=\"toTime\"\n                                component={TimeField}\n                                label=\"Время конца\"\n                                fullWidth={true}/>\n                        </div>\n                        <Field\n                            name=\"showMarkets\"\n                            className={classes.checkbox}\n                            component={Checkbox}\n                            label=\"Отображать магазины\"/>\n                        <Field\n                            name=\"showZones\"\n                            className={classes.checkbox}\n                            component={Checkbox}\n                            label=\"Отображать зоны\"/>\n                        <Field\n                            name=\"agentTrack\"\n                            className={classes.checkbox}\n                            component={Checkbox}\n                            label=\"Пройденный маршрут агента\"/>\n                        <RaisedButton\n                            label=\"Применить\"\n                            backgroundColor=\"#12aaeb\"\n                            labelColor=\"#fff\"\n                            type=\"submit\"/>\n                    </form>\n                </div>\n\n                {\n                    _.map(_.get(agentLocation, 'results'), (item, index) => {\n                        const registeredTime = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY, h:mm:ss')\n                        return (\n                            <div key={index}>{registeredTime}</div>\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n})\n\nTrackingDetails.PropTypes = {\n    filter: PropTypes.object,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    filterForm: PropTypes.shape({\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    }).isRequired,\n    agentLocation: PropTypes.object\n}\n\nexport default TrackingDetails\n\n\n\n// WEBPACK FOOTER //\n// src/components/Tracking/TrackingDetails.js","import _ from 'lodash'\nimport React from 'react'\nimport {compose, withState} from 'recompose'\nimport {withGoogleMap, GoogleMap as DefaultGoogleMap, Marker, Polyline, InfoWindow} from 'react-google-maps'\nimport MarkerClusterer from 'react-google-maps/lib/addons/MarkerClusterer'\nimport withScriptjs from 'react-google-maps/lib/async/withScriptjs'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport * as GOOGLE_MAP from '../../constants/googleMaps'\nimport moment from 'moment'\nimport PropTypes from 'prop-types'\nimport RedPin from '../Images/person-pin-red.png'\nimport GreenPin from '../Images/person-pin-green.png'\nimport MarketLocation from '../Images/market-location.png'\n\nconst ZERO = 0\nconst enhance = compose(\n    withScriptjs,\n    withGoogleMap,\n    withState('openMarketInfo', 'setOpenMarketInfo', ZERO)\n)\n\nconst GoogleMapWrapper = enhance(({\n        onMapLoad,\n        listData,\n        handleOpenDetails,\n        agentLocation,\n        marketsLocation,\n        isOpenTrack,\n        isOpenMarkets,\n        openMarketInfo,\n        setOpenMarketInfo,\n        shopDetails,\n        ...props\n    }) => {\n    const agentCoordinates = [\n        _.map(_.get(agentLocation, 'results'), (item) => {\n            const lat = _.get(item, ['point', 'lat'])\n            const lng = _.get(item, ['point', 'lon'])\n            return {lat: lat, lng: lng}\n        })\n    ]\n    const polyLineOptions = {\n        strokeColor: '#19677e',\n        strokeOpacity: 1,\n        strokeWeight: 3\n    }\n    return (\n        <DefaultGoogleMap ref={onMapLoad} {...props}>\n            <MarkerClusterer\n                averageCenter\n                enableRetinaIcons\n                maxZoom={16}>\n                {_.map(marketsLocation, (item) => {\n                    const id = _.get(item, 'id')\n                    const name = _.get(item, 'name')\n                    const lat = _.get(item, ['location', 'coordinates', '0'])\n                    const lng = _.get(item, ['location', 'coordinates', '1'])\n\n                    if (isOpenMarkets) {\n                        return (\n                            <Marker\n                                key={id}\n                                onClick={() => { shopDetails.handleOpenShopDetails(id) }}\n                                position={{lat: lat, lng: lng}}\n                                options={\n                                {icon:\n                                {url: MarketLocation,\n                                    size: {width: 15, height: 15},\n                                    scaledSize: {width: 15, height: 15}\n                                }}}>\n\n                                {(id === openMarketInfo) && <InfoWindow>\n                                    <div>{name}</div>\n                                </InfoWindow>}\n                            </Marker>\n                        )\n                    }\n                    return false\n                })}\n            </MarkerClusterer>\n            <MarkerClusterer>\n                {_.map(listData, (item) => {\n                    const id = _.get(item, 'id')\n                    const lat = _.get(item, ['location', 'lat'])\n                    const lng = _.get(item, ['location', 'lon'])\n\n                    const FIVE_MIN = 300000\n                    const dateNow = _.toInteger(moment().format('x'))\n                    const registeredDate = _.toInteger(moment(_.get(item, 'registeredDate')).format('x'))\n                    const difference = dateNow - registeredDate\n                    let isOnline = false\n                    if (difference <= FIVE_MIN) {\n                        isOnline = true\n                    }\n\n                    return (\n                        <Marker\n                            key={id}\n                            onClick={() => { handleOpenDetails(id) }}\n                            position={{lat: lat, lng: lng}}\n                            options={\n                            {icon:\n                            {url: isOnline ? GreenPin : RedPin,\n                                size: {width: 26, height: 30},\n                                scaledSize: {width: 26, height: 30}\n                            }}}>\n                        </Marker>\n                    )\n                })}\n            </MarkerClusterer>\n            {props.children}\n            <Polyline\n                path={isOpenTrack ? _.get(agentCoordinates, '0') : []}\n                geodesic={true}\n                options={polyLineOptions}\n            />\n\n        </DefaultGoogleMap>\n    )\n})\n\nconst Loader = () =>\n    <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%'}}>\n        <CircularProgress size={40} thickness={4} />\n    </div>\n\nconst GoogleMap = (props) => {\n    const {\n        listData,\n        handleOpenDetails,\n        agentLocation,\n        marketsLocation,\n        isOpenTrack,\n        isOpenMarkets,\n        shopDetails,\n        ...defaultProps\n    } = props\n\n    return (\n        <GoogleMapWrapper\n            defaultCenter={GOOGLE_MAP.DEFAULT_LOCATION}\n            googleMapURL={GOOGLE_MAP.GOOGLE_API_URL}\n            loadingElement={<Loader />}\n            containerElement={<div style={{height: '100%'}} />}\n            mapElement={<div style={{height: '100%'}} />}\n            defaultZoom={15}\n            radius=\"500\"\n            listData={listData}\n            handleOpenDetails={handleOpenDetails}\n            agentLocation={agentLocation}\n            marketsLocation={marketsLocation}\n            isOpenTrack={isOpenTrack}\n            isOpenMarkets={isOpenMarkets}\n            shopDetails={shopDetails}\n            {...defaultProps}>\n            {props.children}\n        </GoogleMapWrapper>\n    )\n}\n\nGoogleMap.PropTypes = {\n    listData: PropTypes.object,\n    handleOpenDetails: PropTypes.func,\n    agentLocation: PropTypes.object,\n    marketsLocation: PropTypes.object,\n    isOpenTrack: PropTypes.bool,\n    isOpenMarkets: PropTypes.bool,\n    shopDetails: PropTypes.shape({\n        openShopDetails: PropTypes.number.isRequired,\n        handleOpenShopDetails: PropTypes.func.isRequired,\n        handleCloseShopDetails: PropTypes.func.isRequired\n    })\n}\n\nexport default GoogleMap\n\n\n\n// WEBPACK FOOTER //\n// src/components/Tracking/TrackingMap.js","import _ from 'lodash'\nimport React from 'react'\nimport IconButton from 'material-ui/IconButton'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport CloseIcon2 from '../CloseIcon2'\nimport Dot from 'material-ui/svg-icons/av/fiber-manual-record'\nimport {Tabs, Tab} from 'material-ui/Tabs'\n\nconst enhance = compose(\n    injectSheet({\n        detailWrap: {\n            background: '#fff',\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            zIndex: '2',\n            overflowY: 'auto'\n        },\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        image: {\n            backgroundSize: 'cover !important',\n            height: '250px',\n            '& img': {\n                width: '100%'\n            }\n        },\n        tabs: {\n            '& > div': {\n                '&:first-child': {\n                    borderRadius: '2px',\n                    height: '52px',\n                    alignItems: 'center',\n                    '& button': {\n                        color: '#333 !important'\n                    }\n                },\n                '&:nth-child(2)': {\n                    marginTop: '-3px'\n                },\n                '&:last-child': {\n                    width: '100% !important'\n                }\n            },\n            '& button div div': {\n                textTransform: 'initial',\n                height: '52px !important'\n            }\n        },\n        tabContent: {\n            padding: '15px 30px'\n        },\n        title: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: '600',\n            textTransform: 'uppercase',\n            display: 'flex',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '20px 30px',\n            zIndex: '999',\n            '& > svg': {\n                marginRight: '10px',\n                width: '18px !important',\n                height: '18px !important'\n            },\n            '& button': {\n                right: '13px',\n                top: '5px',\n                padding: '0 !important',\n                position: 'absolute !important',\n                '& > div': {\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                }\n            }\n        },\n        block: {\n            lineHeight: '25px',\n            marginBottom: '10px',\n            '& > div': {\n                display: 'flex',\n                justifyContent: 'space-between'\n            }\n        },\n        subtitle: {\n            fontWeight: '600'\n        }\n    })\n)\n\nconst TrackingShopDetails = enhance((props) => {\n    const {\n        classes,\n        shopDetails\n    } = props\n    const loading = _.get(shopDetails, 'marketDataLoading')\n    const data = _.get(shopDetails, 'marketData')\n    const name = _.get(data, 'name')\n    const marketType = _.get(data, ['marketType', 'name'])\n    const isActive = _.get(data, 'isActive')\n    const client = _.get(data, ['client', 'name'])\n    const contactName = _.get(data, 'contactName')\n    const phone = _.get(data, 'phone')\n    const address = _.get(data, 'address')\n    const guide = _.get(data, 'guide')\n\n    const freq = _.get(data, 'visitFrequency')\n    const EVERY_DAY = '1'\n    const ONCE_IN_A_WEEK = '2'\n    const TWICE_IN_A_WEEK = '3'\n    const IN_A_DAY = '4'\n\n    const image = _.map(_.get(data, 'images'), (item) => {\n        const isPrimary = _.get(item, 'isPrimary')\n        const url = _.get(item, 'file')\n        const imageStyle = {\n            background: 'url(' + url + ') no-repeat center center'\n        }\n        if (isPrimary) {\n            return (\n                <div className={classes.image} style={imageStyle}>\n                </div>\n            )\n        }\n        return false\n    })\n    return (\n        <div className={classes.detailWrap}>\n            {loading && <div className={classes.loader}>\n                <CircularProgress size={40} thickness={4}/>\n            </div>}\n            <div className={classes.title}>\n                <Dot style={isActive ? {color: '#92ce95'} : {color: '#e57373'}}/>\n                <span>{name}</span>\n                <IconButton\n                    onTouchTap={shopDetails.handleCloseShopDetails}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.content}>\n                {image}\n                <Tabs\n                    inkBarStyle={{backgroundColor: '#12aaeb', height: '3px'}}\n                    tabItemContainerStyle={{backgroundColor: '#fff', color: '#333'}}\n                    className={classes.tabs}\n                    contentContainerClassName={classes.tabContent}>\n                    <Tab label=\"Детали\">\n                        <div className={classes.block}>\n                            <div className={classes.subtitle}>Детали</div>\n                            <div>\n                                <span>Клиент:</span>\n                                <span>{client}</span>\n                            </div>\n                            <div>\n                                <span>Тип заведения:</span>\n                                <span>{marketType}</span>\n                            </div>\n                            <div>\n                                <span>Частота посещений:</span>\n                                <span>{ freq === EVERY_DAY ? 'Каждый день' : (\n                                    freq === ONCE_IN_A_WEEK ? 'Раз в неделю' : (\n                                        freq === TWICE_IN_A_WEEK ? '2 раза в неделю' : (\n                                            freq === IN_A_DAY ? 'Через день' : ''\n                                        )\n                                    )\n                                )}</span>\n                            </div>\n                        </div>\n                        <div className={classes.block}>\n                            <div className={classes.subtitle}>Контакты</div>\n                            <div>\n                                <span>{contactName}</span>\n                                <span>{phone}</span>\n                            </div>\n                            <div>\n                                <span>Адрес:</span>\n                                <span>{address}</span>\n                            </div>\n                            <div>\n                                <span>Ориентир:</span>\n                                <span>{guide}</span>\n                            </div>\n                        </div>\n                    </Tab>\n                    <Tab label=\"Активность\">\n\n                    </Tab>\n                </Tabs>\n            </div>\n        </div>\n    )\n})\n\nTrackingShopDetails.PropTypes = {\n    shopDetails: PropTypes.shape({\n        openShopDetails: PropTypes.number.isRequired,\n        handleOpenShopDetails: PropTypes.func.isRequired,\n        handleCloseShopDetails: PropTypes.func.isRequired\n    })\n}\n\nexport default TrackingShopDetails\n\n\n\n// WEBPACK FOOTER //\n// src/components/Tracking/TrackingShopDetails.js","import TrackingWrapper from './TrackingWrapper'\nconst ADD_TRACKING = 'openAddTracking'\nconst TOGGLE_INFO = 'openInfo'\nconst OPEN_SHOP_DETAILS = 'openShop'\n\nexport {\n    ADD_TRACKING,\n    TOGGLE_INFO,\n    OPEN_SHOP_DETAILS,\n    TrackingWrapper\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Tracking/index.js","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose, withReducer} from 'recompose'\nimport injectSheet from 'react-jss'\nimport _ from 'lodash'\nimport {reduxForm, SubmissionError, Field} from 'redux-form'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport Dialog from 'material-ui/Dialog'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport IconButton from 'material-ui/IconButton'\nimport CloseIcon2 from '../CloseIcon2'\nimport {CashboxSearchField} from '../ReduxForm'\nimport FlatButton from 'material-ui/FlatButton'\nimport numberFormat from '../../helpers/numberFormat'\n\nconst ZERO = 0\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        popUp: {\n            color: '#333 !important',\n            overflowY: 'hidden !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            overflowX: 'hidden',\n            height: '100%'\n        },\n        titleContent: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '20px 30px',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                padding: '0 !important',\n                position: 'absolute !important'\n            }\n        },\n        bottomButton: {\n            bottom: '0',\n            left: '0',\n            right: '0',\n            padding: '10px',\n            zIndex: '999',\n            borderTop: '1px solid #efefef',\n            background: '#fff',\n            textAlign: 'right',\n            '& span': {\n                fontSize: '13px !important',\n                fontWeight: '600 !important',\n                color: '#129fdd',\n                verticalAlign: 'inherit !important'\n            }\n        },\n        inContent: {\n            maxHeight: '50vh',\n            minHeight: '184px',\n            padding: '0 30px',\n            color: '#333',\n            '& > div:first-child': {\n                padding: '20px 0 10px'\n            },\n            '& span': {\n                fontWeight: '600'\n            }\n        },\n        bodyContent: {\n            width: '100%'\n        },\n        returnInfo: {\n            padding: '25px 0',\n            borderBottom: '1px #efefef solid',\n            '& span': {\n                display: 'block',\n                '&:first-child': {\n                    fontWeight: '600'\n                }\n            }\n        },\n        flex: {\n            alignItems: 'initial',\n            '& > div:first-child': {\n                maxWidth: '60%'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'AcceptClientTransactionForm',\n        enableReinitialize: true\n    }),\n    withReducer('state', 'dispatch', (state, action) => {\n        return {...state, ...action}\n    }, {open: false}),\n)\n\nconst AcceptClientTransactionDialog = enhance((props) => {\n    const {open, onClose, classes, loading, handleSubmit, data} = props\n    const onSubmit = handleSubmit(() => props.onSubmit(_.get(data, ['sum'])).catch(validate))\n    const user = _.get(data, ['user', 'name'])\n    const currency = _.get(data, ['currency', 'name'])\n    const amount = numberFormat(_.get(data, ['sum']), currency)\n    return (\n        <Dialog\n            modal={true}\n            contentStyle={loading ? {width: '200px'} : {width: '400px', maxWidth: 'auto'}}\n            open={open > ZERO}\n            onRequestClose={onClose}\n            bodyClassName={classes.popUp}\n            autoScrollBodyContent={true}>\n            <div className={classes.titleContent}>\n                <span>Принять наличные {amount}</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                {loading\n                    ? <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4}/>\n                      </div>\n                    : <form onSubmit={onSubmit}>\n                        <div className={classes.inContent} style={{minHeight: 'initial'}}>\n                            <div>Агент: <span>{user}</span></div>\n                            <div className={classes.list}>\n                                <Field\n                                    name=\"cashBox\"\n                                    component={CashboxSearchField}\n                                    className={classes.inputFieldCustom}\n                                    fullWidth={true}\n                                    label=\"Кассы\"\n                                />\n                            </div>\n                        </div>\n                        <div className={classes.bottomButton}>\n                            <FlatButton\n                                label=\"Сохранить\"\n                                primary={true}\n                                type=\"submit\"\n                            />\n                        </div>\n                      </form>\n                }\n            </div>\n        </Dialog>\n    )\n})\nAcceptClientTransactionDialog.propTyeps = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired\n}\nexport default AcceptClientTransactionDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Transaction/AcceptClientTransactionDialog.js","import React from 'react'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport {compose, withReducer} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Row, Col} from 'react-flexbox-grid'\nimport IconButton from 'material-ui/IconButton'\nimport CloseIcon2 from '../CloseIcon2'\nimport LinearProgress from '../LinearProgress'\nimport numberFormat from '../../helpers/numberFormat'\nimport AcceptClientTransactionDialog from './AcceptClientTransactionDialog'\nimport PaymentIcon from 'material-ui/svg-icons/action/payment'\nimport Tooltip from '../ToolTip'\n\nconst enhance = compose(\n    injectSheet({\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        popUp: {\n            color: '#333 !important',\n            overflowY: 'hidden !important',\n            fontSize: '13px !important',\n            position: 'relative',\n            padding: '0 !important',\n            overflowX: 'hidden',\n            height: '100%'\n        },\n        titleContent: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '20px 30px',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                padding: '0 !important',\n                position: 'absolute !important'\n            }\n        },\n        inContent: {\n            display: 'flex',\n            maxHeight: '50vh',\n            minHeight: '184px',\n            overflow: 'auto',\n            padding: '0 30px',\n            color: '#333'\n        },\n        bodyContent: {\n            width: '100%'\n        },\n        returnInfo: {\n            padding: '25px 0',\n            borderBottom: '1px #efefef solid',\n            '& span': {\n                display: 'block',\n                '&:first-child': {\n                    fontWeight: '600'\n                }\n            }\n        },\n        flex: {\n            alignItems: 'initial',\n            '& > div:first-child': {\n                maxWidth: '60%'\n            }\n        },\n        list: {\n            width: '100%',\n            padding: '10px 0',\n            '& .row': {\n                padding: '0',\n                height: '45px',\n                alignItems: 'center',\n                '&:after': {\n                    left: '0.5rem',\n                    right: '0.5rem'\n                },\n                '&:first-child': {\n                    fontWeight: '600'\n                },\n                '&:last-child:after': {\n                    display: 'none'\n                },\n                '& > div:last-child': {\n                    textAlign: 'right'\n                }\n            }\n        },\n        details: {\n            background: '#f2f5f8',\n            margin: '0 -30px',\n            padding: '0 30px',\n            boxSizing: 'content-box',\n            '& .row': {\n                margin: '0',\n                '&:first-child': {\n                    color: '#333',\n                    borderBottom: '1px #dedede solid'\n                },\n                '& > div:first-child': {\n                    paddingLeft: '0'\n                },\n                '& > div:last-child': {\n                    paddingRight: '0'\n                }\n            }\n        },\n        semibold: {\n            fontWeight: '600'\n        },\n        detailsRow: {\n            margin: '0 10px !important',\n            color: '#666 !important',\n            '&:last-child': {\n                borderBottom: 'none'\n            },\n            '& > div:last-child': {\n                textAlign: 'right'\n            }\n        },\n        closeDetail: {\n            position: 'absolute',\n            left: '0',\n            top: '0',\n            right: '0',\n            bottom: '0',\n            cursor: 'pointer',\n            zIndex: '1'\n        }\n    }),\n    withReducer('state', 'dispatch', (state, action) => {\n        return {...state, ...action}\n    }, {open: false}),\n)\n\nconst TransactionCashDialog = enhance((props) => {\n    const {\n        open,\n        loading,\n        onClose,\n        classes,\n        paymentData,\n        cashBoxDialog,\n        acceptCashDialog\n    } = props\n\n    const detailRow = (\n        _.get(paymentData, 'paymentLoading') ? <LinearProgress/>\n            : _.map(_.get(paymentData, 'data'), (item) => {\n                const clientName = _.get(item, ['client', 'name'])\n                const marketName = _.get(item, ['market', 'name'])\n                const currency = _.get(item, ['currency', 'name'])\n                const order = _.get(item, ['order'])\n                const amount = numberFormat(_.get(item, ['amount']), currency)\n                return (\n                <Row key={_.get(item, 'id')} className={classes.detailsRow}>\n                    <Col xs={3}>{clientName}</Col>\n                    <Col xs={3}>{marketName}</Col>\n                    <Col xs={3}>{order}</Col>\n                    <Col xs={3}>{amount}</Col>\n                </Row>\n\n                )\n            })\n\n    )\n    return (\n        <Dialog\n            modal={true}\n            contentStyle={loading ? {width: '300px'} : {width: '900px', maxWidth: 'auto'}}\n            open={open}\n            onRequestClose={onClose}\n            bodyClassName={classes.popUp}\n            autoScrollBodyContent={true}>\n            <div className={classes.titleContent}>\n                <span>Принять наличные</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                {loading && <div className={classes.loader}>\n                    <CircularProgress size={40} thickness={4}/>\n                </div>}\n                <div className={classes.inContent} style={{minHeight: 'initial'}}>\n                    <div className={classes.list}>\n                        <Row className=\"dottedList\">\n                            <Col xs={3}>Агент</Col>\n                            <Col xs={3}>Клиент</Col>\n                            <Col xs={2}>Магазин</Col>\n                            <Col xs={1}>Заказ</Col>\n                            <Col xs={2}>Сумма</Col>\n                        </Row>\n                        {_.map(_.get(acceptCashDialog, ['data']), (item, index) => {\n                            const currency = _.get(item, ['currency', 'name'])\n                            const user = _.get(item, ['user', 'name'])\n                            const amount = numberFormat(_.get(item, ['sum']), currency)\n                            const userId = _.toNumber(_.get(item, ['user', 'id']))\n                            const currencyId = _.toNumber(_.get(item, ['currency', 'id']))\n                            if (acceptCashDialog.openAcceptCashDetail === userId + '_' + currencyId) {\n                                return (\n                                    <div key={index} className={classes.details}>\n                                        <Row style={{position: 'relative'}}>\n                                            <div\n                                                className={classes.closeDetail}\n                                                onClick={() => { acceptCashDialog.handleCloseAcceptCashDetail() }}>\n                                            </div>\n                                            <Col xs={6}>{user}</Col>\n                                            <Col xs={5} style={{textAlign: 'right'}}>{amount}</Col>\n                                            <Col xs={1}>\n                                                <div style={{marginRight: '-4px'}}>\n                                                    <Tooltip position=\"bottom\" text=\"Оплатить\">\n                                                        <IconButton\n                                                            onTouchTap={() => { cashBoxDialog.handleOpenCashBoxDialog(userId, currencyId) }}>\n                                                            <PaymentIcon color=\"#666666\"/>\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                        <div>\n                                            <Row className={classes.detailsRow}>\n                                                <Col xs={3}>Клиент</Col>\n                                                <Col xs={3}>Магазин</Col>\n                                                <Col xs={3}>№ заказа</Col>\n                                                <Col xs={3}>Сумма</Col>\n                                            </Row>\n                                            {detailRow}\n                                        </div>\n                                    </div>\n                                )\n                            }\n                            return (\n                                <Row\n                                    key={index}\n                                    className=\"dottedList\"\n                                    style={{position: 'relative'}}>\n                                    <div\n                                        className={classes.closeDetail}\n                                        onClick={() => { acceptCashDialog.handleOpenAcceptCashDetail(userId, currencyId) }}>\n                                    </div>\n                                    <Col xs={6}>{user}</Col>\n                                    <Col xs={5} style={{textAlign: 'right'}}>{amount}</Col>\n                                    <Col xs={1}>\n                                        <Tooltip position=\"bottom\" text=\"Оплатить\">\n                                            <IconButton\n                                                onTouchTap={() => { cashBoxDialog.handleOpenCashBoxDialog(userId, currencyId) }}>\n                                                <PaymentIcon color=\"#666666\"/>\n                                            </IconButton>\n                                        </Tooltip>\n                                    </Col>\n                                </Row>\n                            )\n                        })}\n                    </div>\n                </div>\n            </div>\n            <AcceptClientTransactionDialog\n                open={cashBoxDialog.openCashBoxDialog}\n                onClose={cashBoxDialog.handleCloseCashBoxDialog}\n                onSubmit={cashBoxDialog.handleSubmitCashBoxDialog}\n                data={paymentData.currentCashBoxDetails}\n                loading={paymentData.paymentLoading}/>\n\n        </Dialog>\n    )\n})\nTransactionCashDialog.propTyeps = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired,\n    returnListData: PropTypes.object,\n    cashBoxDialog: PropTypes.shape({\n        openCashBoxDialog: PropTypes.number.isRequired,\n        handleOpenCashBoxDialog: PropTypes.func.isRequired,\n        handleCloseCashBoxDialog: PropTypes.func.isRequired,\n        handleSubmitCashBoxDialog: PropTypes.func.isRequired\n    }).isRequired\n}\nexport default TransactionCashDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Transaction/TransactionCashDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport IconButton from 'material-ui/IconButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport {connect} from 'react-redux'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {TextField, ExpensiveCategorySearchField, CheckBox, ClientSearchField, normalizeNumber} from '../ReduxForm'\nimport CloseIcon2 from '../CloseIcon2'\nimport MainStyles from '../Styles/MainStyles'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\n\nconst validateForm = values => {\n    const errors = {}\n    if (values.showClients && values.amount && !values.client) {\n        errors.client = 'Клиент не выбран'\n    }\n\n    return errors\n}\n\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        inputFieldCustom: {\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        nav: {\n            fontSize: '18px',\n            fontWeight: 'bold',\n            padding: '20px',\n            color: 'black',\n            borderBottom: '1px solid #efefef',\n            '& button': {\n                float: 'right',\n                marginTop: '-5px !important'\n            }\n        },\n        flex: {\n            display: 'flex',\n            alignItems: 'center'\n        },\n        label: {\n            fontSize: '75%',\n            color: '#999'\n        },\n        itemList: {\n            marginTop: '20px'\n        }\n    })),\n    reduxForm({\n        form: 'TransactionCreateForm',\n        validate: validateForm,\n        enableReinitialize: true\n    }),\n    connect((state) => {\n        const showClients = _.get(state, ['form', 'TransactionCreateForm', 'values', 'showClients'])\n        const showIncomeClients = _.get(state, ['form', 'TransactionCreateForm', 'values', 'showIncomeClients'])\n        return {\n            showClients,\n            showIncomeClients\n        }\n    })\n)\n\nconst TransactionCreateDialog = enhance((props) => {\n    const {open, loading, handleSubmit, onClose, classes, cashboxData, isExpense, showClients, showIncomeClients} = props\n\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n    const cashbox = _.find(_.get(cashboxData, 'data'), {'id': _.get(cashboxData, 'cashboxId')})\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '300px'} : {width: '400px'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>{isExpense ? 'Расход' : 'Приход'}</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} className={classes.form}>\n                    <div className={classes.inContent} style={{minHeight: '230px'}}>\n                        <div className={classes.loader}>\n                            <CircularProgress size={40} thickness={4}/>\n                        </div>\n                        <div className={classes.field}>\n                            <div className={classes.itemList}>\n                                <div className={classes.label}>Касса:</div>\n                                <div style={{fontWeight: '600', marginBottom: '5px'}}>{_.get(cashbox, 'name')}</div>\n                            </div>\n                            {isExpense && <div>\n                            <Field\n                                name=\"showClients\"\n                                className={classes.checkbox}\n                                component={CheckBox}\n                                label=\"Снять со счета клиента\"/>\n                            {showClients && <Field\n                                name=\"client\"\n                                component={ClientSearchField}\n                                label=\"Клиент\"\n                                className={classes.inputFieldCustom}\n                                fullWidth={true}/>\n                            }\n                            <Field\n                                name=\"expanseCategory\"\n                                component={ExpensiveCategorySearchField}\n                                label=\"Категория расхода\"\n                                className={classes.inputFieldCustom}\n                                fullWidth={true}/>\n                            </div>\n                            }\n                            {!isExpense && <Field\n                                name=\"showIncomeClients\"\n                                className={classes.checkbox}\n                                component={CheckBox}\n                                label=\"Оплата с клиента\"/>\n                            }\n                            {showIncomeClients && <Field\n                                name=\"client\"\n                                component={ClientSearchField}\n                                label=\"Клиент\"\n                                className={classes.inputFieldCustom}\n                                fullWidth={true}/>\n                            }\n                            <div className={classes.flex} style={{alignItems: 'baseline'}}>\n                                <Field\n                                    name=\"amount\"\n                                    component={TextField}\n                                    label=\"Сумма\"\n                                    normalize={normalizeNumber}\n                                    className={classes.inputFieldCustom}\n                                    style={{width: '50%'}}\n                                    fullWidth={false}/>\n                                <div style={{marginLeft: '20px'}}>\n                                   {_.get(cashbox, ['currency', 'name'])}\n                                </div>\n                            </div>\n                            <Field\n                                name=\"comment\"\n                                style={{top: '-20px', lineHeight: '20px', fontSize: '13px'}}\n                                component={TextField}\n                                label=\"Комментарий...\"\n                                multiLine={true}\n                                rows={1}\n                                rowsMax={3}\n                                fullWidth={true}/>\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\n\nTransactionCreateDialog.propTyeps = {\n    isExpense: PropTypes.bool,\n    open: PropTypes.bool.isRequired,\n    cashboxData: PropTypes.object.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\nTransactionCreateDialog.defaultProps = {\n    isExpense: false\n}\n\nexport default TransactionCreateDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Transaction/TransactionCreateDialog.js","import _ from 'lodash'\nimport moment from 'moment'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Row, Col} from 'react-flexbox-grid'\nimport IconButton from 'material-ui/IconButton'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\nimport * as ROUTES from '../../constants/routes'\nimport GridList from '../GridList'\nimport Container from '../Container'\nimport TransactionFilterForm from './TransactionFilterForm'\nimport TransactionCreateDialog from './TransactionCreateDialog'\nimport TransactionSendDialog from './TransactionSendDialog'\nimport TransactionCashDialog from './TransactionCashDialog'\nimport ConfirmDialog from '../ConfirmDialog'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport Paper from 'material-ui/Paper'\nimport CashPayment from '../CashPayment'\nimport BankPayment from '../BankPayment'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport IconMenu from 'material-ui/IconMenu'\nimport MenuItem from 'material-ui/MenuItem'\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\nimport Edit from 'material-ui/svg-icons/image/edit'\nimport numberFormat from '../../helpers/numberFormat'\n\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'id',\n        title: 'Id',\n        xs: 1\n    },\n    {\n        sorting: true,\n        name: 'comment',\n        title: 'Описание',\n        xs: 5\n    },\n    {\n        sorting: true,\n        name: 'date',\n        title: 'Дата',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'amount',\n        alignRight: true,\n        title: 'Сумма',\n        xs: 3\n    }\n]\n\nconst enhance = compose(\n    injectSheet({\n        wrap: {\n            display: 'flex',\n            margin: '0 -28px',\n            padding: '0 28px 0 0',\n            minHeight: 'calc(100% - 41px)'\n        },\n        listWrapper: {\n            border: '1px solid #d9dde1',\n            borderBottom: 'none',\n            height: '100%'\n        },\n        leftSide: {\n            flexBasis: '25%'\n        },\n        rightSide: {\n            flexBasis: '75%',\n            marginLeft: '28px'\n        },\n        list: {\n            borderBottom: '1px solid #efefef',\n            display: 'flex',\n            padding: '20px 30px',\n            margin: '0',\n            cursor: 'pointer',\n            justifyContent: 'space-between',\n            position: 'relative'\n        },\n        flex: {\n            display: 'flex',\n            alignItems: 'center'\n        },\n        outerTitle: {\n            extend: 'flex',\n            justifyContent: 'space-between',\n            fontWeight: '600',\n            paddingBottom: '10px',\n            paddingTop: '5px',\n            '& a': {\n                padding: '2px 10px',\n                border: '1px solid',\n                borderRadius: '2px',\n                marginLeft: '12px'\n            }\n        },\n        balance: {\n            textAlign: 'right',\n            position: 'absolute',\n            right: '30px'\n        },\n        btnSend: {\n            color: '#12aaeb !important'\n        },\n        btnAdd: {\n            color: '#8acb8d !important'\n        },\n        btnRemove: {\n            color: '#e57373 !important'\n        },\n        buttons: {\n            display: 'flex',\n            alignItems: 'center'\n        },\n        title: {\n            fontWeight: '600',\n            '& span': {\n                fontSize: '11px !important',\n                display: 'block',\n                color: '#999'\n            }\n        },\n        rightTitle: {\n            extend: 'flex',\n            justifyContent: 'space-between'\n        },\n        green: {\n            color: '#92ce95 !important'\n        },\n        red: {\n            color: '#e57373 !important'\n        }\n    }),\n)\n\nconst TransactionGridList = enhance((props) => {\n    const {\n        filter,\n        createExpenseDialog,\n        createIncomeDialog,\n        updateExpenseDialog,\n        updateIncomeDialog,\n        createSendDialog,\n        filterDialog,\n        cashboxData,\n        cashboxListLoading,\n        confirmDialog,\n        listData,\n        acceptCashDialog,\n        detailData,\n        cashBoxDialog,\n        classes,\n        paymentData\n    } = props\n\n    const transactionFilterDialog = (\n        <TransactionFilterForm\n            initialValues={filterDialog.initialValues}\n            filter={filter}\n            filterDialog={filterDialog}\n        />\n    )\n\n    const transactionDetail = (\n        <span>a</span>\n    )\n\n    const transactionList = _.map(_.get(listData, 'data'), (item) => {\n        const zero = 0\n        const id = _.get(item, 'id')\n        const comment = _.get(item, 'comment')\n        const type = _.get(item, 'amount') || 'N/A'\n        const cashbox = _.get(item, 'cashbox') || 'N/A'\n        const amount = numberFormat(_.get(item, 'amount')) || 'N/A'\n        const createdDate = moment(_.get(item, 'createdDate')).format('DD.MM.YYYY')\n        const currentCurrency = _.get(_.find(_.get(cashboxData, 'data'), {'id': cashbox}), ['currency', 'name'])\n\n        const iconButton = (\n            <IconButton style={{padding: '0 12px'}}>\n                <MoreVertIcon />\n            </IconButton>\n        )\n        return (\n            <Row key={id}>\n                <Col xs={1}>{id}</Col>\n                <Col xs={5}>{comment}</Col>\n                <Col xs={2}>{createdDate}</Col>\n                <Col style={{textAlign: 'right'}} className={type >= zero ? classes.green : classes.red} xs={3}>{amount} {currentCurrency}</Col>\n                <Col xs={1} style={{textAlign: 'right'}}>\n                    <IconMenu\n                        iconButtonElement={iconButton}\n                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\n                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\n                        <MenuItem\n                            primaryText=\"Изменить\"\n                            leftIcon={<Edit />}\n                            onTouchTap={() => {\n                                updateExpenseDialog.handleOpenUpdateDialog(id, _.get(item, 'amount'))\n                            }}\n                        />\n                        <MenuItem\n                            primaryText=\"Удалить \"\n                            leftIcon={<DeleteIcon />}\n                            onTouchTap={() => {\n                                confirmDialog.handleOpenConfirmDialog(id)\n                            }}\n                        />\n                    </IconMenu>\n                </Col>\n            </Row>\n        )\n    })\n    const cashboxList = _.map(_.get(cashboxData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const name = _.get(item, 'name')\n        const currency = _.get(item, ['currency', 'name'])\n        const type = _.toInteger(_.get(item, 'type'))\n        const balance = _.toInteger(_.get(item, 'balance'))\n        const isActive = item.id === _.get(cashboxData, 'cashboxId')\n        const BANK_ID = 1\n        const ZERO_NUM = 0\n        return (\n            <div key={id} className={classes.list} onClick={() => {\n                cashboxData.handleClickCashbox(id)\n            } }\n                 style={isActive ? {backgroundColor: '#ffffff'} : {backgroundColor: '#f2f5f8'}}>\n                <div>\n                    <div className={classes.title}>{name}</div>\n                    <div className={item.id === cashboxData.cashboxId}>\n                        {type === BANK_ID\n                            ? <div className={classes.flex}>\n                                <BankPayment style={{height: '14px', width: '14px', color: '#6261b0'}}/>\n                                <span style={{marginLeft: '5px', color: '#6261b0'}}>банковский счет</span>\n                            </div>\n                            : <div className={classes.flex}>\n                                <CashPayment style={{height: '14px', width: '14px', color: '#12aaeb'}}/>\n                                <span style={{marginLeft: '5px', color: '#12aaeb'}}>наличные</span>\n                            </div>\n                        }\n                    </div>\n                </div>\n                <div className={classes.balance}>\n                    <div className={balance >= ZERO_NUM ? classes.green : classes.red}>{numberFormat(balance)}</div>\n                    <div>{currency}</div>\n                </div>\n            </div>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: transactionList,\n        loading: _.get(listData, 'listLoading')\n    }\n    const AllCashboxId = 0\n    const selectedCashbox = _.find(_.get(cashboxData, 'data'),\n        (o) => {\n            return _.toInteger(o.id) === _.toInteger(_.get(cashboxData, 'cashboxId'))\n        })\n    const cashboxName = _.get(cashboxData, 'cashboxId') === AllCashboxId ? 'Общий объем' : _.get(selectedCashbox, 'name')\n    return (\n        <Container>\n            <SubMenu url={ROUTES.TRANSACTION_LIST_URL}/>\n\n            <div className={classes.wrap}>\n                <div className={classes.leftSide}>\n                    <div className={classes.outerTitle} style={{paddingLeft: '30px'}}>\n                        <div>Кассы</div>\n                    </div>\n                    <Paper zDepth={2} style={{height: '100%'}}>\n                        <div className={classes.listWrapper}>\n                            <div className={classes.list}\n                                 onClick={() => {\n                                     cashboxData.handleClickCashbox(AllCashboxId)\n                                 } }\n                                 style={_.get(cashboxData, 'cashboxId') === AllCashboxId ? {backgroundColor: '#ffffff'} : {backgroundColor: '#f2f5f8'}}>\n                                <div className={classes.title}>\n                                    Общий объем\n                                    <span>во всех кассах</span>\n                                </div>\n                            </div>\n                            {cashboxListLoading\n                                ? <div style={{textAlign: 'center'}}>\n                                    <CircularProgress size={40} thickness={4}/>\n                                </div>\n                                : cashboxList\n                            }\n                        </div>\n                    </Paper>\n                </div>\n                <div className={classes.rightSide}>\n                    <div className={classes.rightTitle}>\n                        <div className={classes.outerTitle}>{cashboxName}</div>\n                        <div className={classes.outerTitle}>\n                            <div className={classes.buttons}>\n                                <a onClick={acceptCashDialog.handleOpenCashDialog} className={classes.btnSend}>Принять наличные</a>\n\n                                { _.get(cashboxData, 'cashboxId') !== AllCashboxId &&\n                                    <div>\n                                        <a onClick={createSendDialog.handleOpenDialog} className={classes.btnSend}>Перевод</a>\n                                        <a onClick={createIncomeDialog.handleOpenDialog} className={classes.btnAdd}>+ Доход</a>\n                                        <a onClick={createExpenseDialog.handleOpenDialog} className={classes.btnRemove}>- Расход</a>\n                                    </div>\n                                }\n                            </div>\n                        </div>\n                    </div>\n\n                    <GridList\n                        filter={filter}\n                        list={list}\n                        detail={transactionDetail}\n                        filterDialog={transactionFilterDialog}\n                    />\n\n                    <TransactionCreateDialog\n                        isExpense={true}\n                        cashboxData={cashboxData}\n                        open={createExpenseDialog.open}\n                        loading={createExpenseDialog.loading}\n                        onClose={createExpenseDialog.handleCloseDialog}\n                        onSubmit={createExpenseDialog.handleSubmitDialog}\n                    />\n\n                    <TransactionCreateDialog\n                        cashboxData={cashboxData}\n                        open={createIncomeDialog.open}\n                        loading={createIncomeDialog.loading}\n                        onClose={createIncomeDialog.handleCloseDialog}\n                        onSubmit={createIncomeDialog.handleSubmitDialog}\n                    />\n\n                    <TransactionCreateDialog\n                        initialValues={updateExpenseDialog.initialValues}\n                        isUpdate={true}\n                        isExpense={true}\n                        open={updateExpenseDialog.open}\n                        loading={updateExpenseDialog.loading}\n                        onClose={updateExpenseDialog.handleCloseUpdateDialog}\n                        onSubmit={updateExpenseDialog.handleSubmitUpdateDialog}\n                    />\n\n                    <TransactionCreateDialog\n                        initialValues={updateIncomeDialog.initialValues}\n                        isUpdate={true}\n                        open={updateIncomeDialog.open}\n                        loading={updateIncomeDialog.loading}\n                        onClose={updateIncomeDialog.handleCloseUpdateDialog}\n                        onSubmit={updateIncomeDialog.handleSubmitUpdateDialog}\n                    />\n\n                    <TransactionSendDialog\n                        cashboxData={cashboxData}\n                        open={createSendDialog.open}\n                        loading={createSendDialog.loading}\n                        onClose={createSendDialog.handleCloseDialog}\n                        onSubmit={createSendDialog.handleSubmitDialog}\n                    />\n\n                    {detailData.data && <ConfirmDialog\n                        type=\"delete\"\n                        message={_.get(detailData, ['data', 'comment'])}\n                        onClose={confirmDialog.handleCloseConfirmDialog}\n                        onSubmit={confirmDialog.handleExpenseConfirmDialog}\n                        open={confirmDialog.open}\n                    />}\n\n                    <TransactionCashDialog\n                        open={acceptCashDialog.open}\n                        onClose={acceptCashDialog.handleCloseCashDialog}\n                        paymentData={paymentData}\n                        loading={acceptCashDialog.loading}\n                        cashBoxDialog={cashBoxDialog}\n                        acceptCashDialog={acceptCashDialog}\n                    />\n                </div>\n            </div>\n        </Container>\n    )\n})\n\nTransactionGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    cashboxData: PropTypes.object,\n    paymentData: PropTypes.object,\n    cashboxListLoading: PropTypes.bool,\n    detailData: PropTypes.object,\n    createExpenseDialog: PropTypes.shape({\n        loading: PropTypes.bool.isRequired,\n        open: PropTypes.bool.isRequired,\n        handleOpenDialog: PropTypes.func.isRequired,\n        handleCloseDialog: PropTypes.func.isRequired,\n        handleSubmitDialog: PropTypes.func.isRequired\n    }).isRequired,\n    createIncomeDialog: PropTypes.shape({\n        loading: PropTypes.bool.isRequired,\n        open: PropTypes.bool.isRequired,\n        handleOpenDialog: PropTypes.func.isRequired,\n        handleCloseDialog: PropTypes.func.isRequired,\n        handleSubmitDialog: PropTypes.func.isRequired\n    }).isRequired,\n    updateExpenseDialog: PropTypes.shape({\n        loading: PropTypes.bool.isRequired,\n        open: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    updateIncomeDialog: PropTypes.shape({\n        loading: PropTypes.bool.isRequired,\n        open: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    createSendDialog: PropTypes.shape({\n        loading: PropTypes.bool.isRequired,\n        open: PropTypes.bool.isRequired,\n        handleOpenDialog: PropTypes.func.isRequired,\n        handleCloseDialog: PropTypes.func.isRequired,\n        handleSubmitDialog: PropTypes.func.isRequired\n    }).isRequired,\n    confirmDialog: PropTypes.shape({\n        open: PropTypes.bool.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleExpenseConfirmDialog: PropTypes.func.isRequired\n    }).isRequired,\n    filterDialog: PropTypes.shape({\n        initialValues: PropTypes.object,\n        filterLoading: PropTypes.bool,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    }).isRequired,\n    cashBoxDialog: PropTypes.shape({\n        openCashBoxDialog: PropTypes.bool.isRequired,\n        handleOpenCashBoxDialog: PropTypes.func.isRequired,\n        handleCloseCashBoxDialog: PropTypes.func.isRequired,\n        handleSubmitCashBoxDialog: PropTypes.func.isRequired\n    }).isRequired,\n    acceptCashDialog: PropTypes.shape({\n        open: PropTypes.bool.isRequired,\n        handleOpenCashDialog: PropTypes.func.isRequired,\n        handleCloseCashDialog: PropTypes.func.isRequired,\n        handleSubmitCashDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default TransactionGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Transaction/TransactionGridList.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport IconButton from 'material-ui/IconButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {TextField, CashboxSearchField} from '../ReduxForm'\nimport CloseIcon2 from '../CloseIcon2'\nimport MainStyles from '../Styles/MainStyles'\nimport normalizeNumber from '../ReduxForm/normalizers/normalizeNumber'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\n\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: ({loading}) => loading ? 'flex' : 'none'\n        },\n        nav: {\n            fontSize: '18px',\n            fontWeight: 'bold',\n            padding: '20px',\n            color: 'black',\n            borderBottom: '1px solid #efefef',\n            '& button': {\n                float: 'right',\n                marginTop: '-5px !important'\n            }\n        },\n        flex: {\n            display: 'flex',\n            alignItems: 'center'\n        },\n        label: {\n            fontSize: '75%',\n            color: '#999'\n        },\n        itemList: {\n            marginTop: '20px'\n        }\n    })),\n    reduxForm({\n        form: 'TransactionCreateForm',\n        enableReinitialize: true\n    })\n)\n\nconst TransactionSendDialog = enhance((props) => {\n    const {open, loading, handleSubmit, onClose, classes, cashboxData} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n    const cashbox = _.find(_.get(cashboxData, 'data'), {'id': _.get(cashboxData, 'cashboxId')})\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '300px'} : {width: '400px'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>Перевод</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} className={classes.form}>\n                    <div className={classes.inContent} style={{minHeight: '235px'}}>\n                        <div className={classes.loader}>\n                            <CircularProgress size={40} thickness={4}/>\n                        </div>\n                        <div className={classes.field}>\n                            <div className={classes.itemList}>\n                                <div className={classes.label}>Текущая касса:</div>\n                                <div style={{fontWeight: '600'}}>{_.get(cashbox, 'name')}</div>\n                            </div>\n                            <Field\n                                name=\"categoryId\"\n                                className={classes.inputFieldCustom}\n                                component={CashboxSearchField}\n                                label=\"Касса получатель\"\n                                fullWidth={true}/>\n                            <div className={classes.flex} style={{alignItems: 'baseline'}}>\n                                <Field\n                                    name=\"amount\"\n                                    className={classes.inputFieldCustom}\n                                    component={TextField}\n                                    label=\"Сумма\"\n                                    normalize={normalizeNumber}\n                                    style={{width: '50%'}}\n                                    fullWidth={false}/>\n                                <div style={{marginLeft: '20px'}}>\n                                   {_.get(cashbox, ['currency', 'name'])}\n                                </div>\n                            </div>\n                            <Field\n                                name=\"comment\"\n                                className={classes.inputFieldCustom}\n                                style={{lineHeight: '20px', fontSize: '13px'}}\n                                component={TextField}\n                                label=\"Комментарий...\"\n                                fullWidth={true}/>\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Отправить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\n\nTransactionSendDialog.propTyeps = {\n    open: PropTypes.bool.isRequired,\n    cashboxData: PropTypes.object.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\n\nexport default TransactionSendDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Transaction/TransactionSendDialog.js","import TransactionGridList from './TransactionGridList'\nimport {TRANSACTION_FILTER_KEY, TRANSACTION_FILTER_OPEN} from './TransactionFilterForm'\n\nconst TRANSACTION_CREATE_EXPENSE_DIALOG_OPEN = 'openCreateExpenseDialog'\nconst TRANSACTION_CREATE_INCOME_DIALOG_OPEN = 'openCreateIncomeDialog'\nconst TRANSACTION_UPDATE_EXPENSE_DIALOG_OPEN = 'openUpdateExpenseDialog'\nconst TRANSACTION_UPDATE_INCOME_DIALOG_OPEN = 'openUpdateIncomeDialog'\nconst TRANSACTION_CREATE_SEND_DIALOG_OPEN = 'openSendDialog'\nconst TRANSACTION_DELETE_DIALOG_OPEN = 'openDeleteDialog'\nconst TRANSACTION_CASH_DIALOG_OPEN = 'openAcceptCashDialog'\nconst TRANSACTION_ACCEPT_DIALOG_OPEN = 'openAcceptTransactionDialog'\nconst TRANSACTION_ACCEPT_CASH_DETAIL_OPEN = 'openAcceptCashDetail'\n\nexport {\n\n    TRANSACTION_CREATE_EXPENSE_DIALOG_OPEN,\n    TRANSACTION_CREATE_INCOME_DIALOG_OPEN,\n    TRANSACTION_UPDATE_EXPENSE_DIALOG_OPEN,\n    TRANSACTION_UPDATE_INCOME_DIALOG_OPEN,\n    TRANSACTION_CREATE_SEND_DIALOG_OPEN,\n    TRANSACTION_DELETE_DIALOG_OPEN,\n    TRANSACTION_FILTER_KEY,\n    TRANSACTION_FILTER_OPEN,\n    TRANSACTION_CASH_DIALOG_OPEN,\n    TRANSACTION_ACCEPT_DIALOG_OPEN,\n    TransactionGridList,\n    TRANSACTION_ACCEPT_CASH_DETAIL_OPEN\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Transaction/index.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Row, Col} from 'react-flexbox-grid'\nimport IconButton from 'material-ui/IconButton'\nimport ModEditorIcon from 'material-ui/svg-icons/editor/mode-edit'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\nimport * as ROUTES from '../../constants/routes'\nimport GridList from '../GridList'\nimport Container from '../Container'\nimport UsersFilterForm from './UsersFilterForm'\nimport UsersCreateDialog from './UsersCreateDialog'\nimport ConfirmDialog from '../ConfirmDialog'\nimport SubMenu from '../SubMenu'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport IconMenu from 'material-ui/IconMenu'\nimport MenuItem from 'material-ui/MenuItem'\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\nimport Edit from 'material-ui/svg-icons/image/edit'\nimport Tooltip from '../ToolTip'\nimport userGroupFormat from '../../helpers/userGroupFormat'\nconst ZERO = 0\nconst listHeader = [\n    {\n        sorting: true,\n        name: 'id',\n        title: '№',\n        xs: 1\n    },\n    {\n        sorting: true,\n        name: 'username',\n        title: 'Пользователь',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'login',\n        title: 'Логин',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'typeUser',\n        title: 'Должность',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'phoneNumber',\n        title: 'Телефон',\n        xs: 2\n    },\n    {\n        sorting: true,\n        name: 'status',\n        title: 'Статус',\n        xs: 1\n    }\n]\n\nconst enhance = compose(\n    injectSheet({\n        addButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        addButtonWrapper: {\n            position: 'absolute',\n            top: '10px',\n            right: '0',\n            marginBottom: '0px'\n        }\n    })\n)\n\nconst UsersGridList = enhance((props) => {\n    const {\n        filter,\n        createDialog,\n        updateDialog,\n        filterDialog,\n        actionsDialog,\n        confirmDialog,\n        groupListData,\n        stockListData,\n        listData,\n        detailData,\n        classes\n    } = props\n\n    const actions = (\n        <div>\n            <IconButton onTouchTap={actionsDialog.handleActionEdit}>\n                <ModEditorIcon />\n            </IconButton>\n\n            <IconButton onTouchTap={actionsDialog.handleActionDelete}>\n                <DeleteIcon />\n            </IconButton>\n        </div>\n    )\n\n    const usersFilterDialog = (\n        <UsersFilterForm\n            initialValues={filterDialog.initialValues}\n            filter={filter}\n            filterDialog={filterDialog}\n        />\n    )\n\n    const usersDetail = (\n        <span>a</span>\n    )\n    const usersList = _.map(_.get(listData, 'data'), (item) => {\n        const id = _.get(item, 'id')\n        const username = _.get(item, 'username')\n        const firstName = _.get(item, 'firstName')\n        const secondName = _.get(item, 'secondName')\n        const phoneNumber = _.get(item, 'phoneNumber') || 'N/A'\n        const groups = _.map(_.get(item, 'groups'), (val, index) => {\n            const group = _.get(val, 'name')\n            if (index === ZERO) {\n                return userGroupFormat(group)\n            }\n            return ', ' + userGroupFormat(group)\n        })\n        const isActive = _.get(item, 'isActive')\n\n        const iconButton = (\n            <IconButton style={{padding: '0 12px'}}>\n                <MoreVertIcon />\n            </IconButton>\n        )\n\n        return (\n            <Row key={id}>\n                <Col xs={1}>{id}</Col>\n                <Col xs={2}>{firstName} {secondName}</Col>\n                <Col xs={2}>{username}</Col>\n                <Col xs={2}>{(!_.isEmpty(groups)) ? groups : 'N/A'}</Col>\n                <Col xs={2}>{phoneNumber}</Col>\n                <Col xs={2}>{isActive ? 'Активный' : 'Неактивный'}</Col>\n                <Col xs={1} style={{textAlign: 'right'}}>\n                    <IconMenu\n                        iconButtonElement={iconButton}\n                        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\n                        targetOrigin={{horizontal: 'right', vertical: 'top'}}>\n                        <MenuItem\n                            primaryText=\"Изменить\"\n                            leftIcon={<Edit />}\n                            onTouchTap={() => { updateDialog.handleOpenUpdateDialog(id) }}\n                        />\n                        <MenuItem\n                            primaryText=\"Удалить \"\n                            leftIcon={<DeleteIcon />}\n                            onTouchTap={() => { confirmDialog.handleOpenConfirmDialog(id) }}\n                        />\n                    </IconMenu>\n                </Col>\n            </Row>\n        )\n    })\n\n    const list = {\n        header: listHeader,\n        list: usersList,\n        loading: _.get(listData, 'listLoading')\n    }\n\n    const currentDetail = _.find(_.get(listData, 'data'), {'id': _.toInteger(_.get(detailData, 'id'))})\n    const currentName = _.get(currentDetail, 'firstName') + ' ' + _.get(currentDetail, 'secondName')\n    return (\n        <Container>\n            <SubMenu url={ROUTES.USERS_LIST_URL}/>\n\n            <div className={classes.addButtonWrapper}>\n                <Tooltip position=\"left\" text=\"Добавить пользователя\">\n                    <FloatingActionButton\n                        mini={true}\n                        className={classes.addButton}\n                        onTouchTap={createDialog.handleOpenCreateDialog}>\n                        <ContentAdd />\n                    </FloatingActionButton>\n                </Tooltip>\n            </div>\n\n            <GridList\n                filter={filter}\n                list={list}\n                detail={usersDetail}\n                actionsDialog={actions}\n                filterDialog={usersFilterDialog}\n            />\n\n            <UsersCreateDialog\n                initialValues={createDialog.initialValues}\n                open={createDialog.openCreateDialog}\n                loading={createDialog.createLoading}\n                onClose={createDialog.handleCloseCreateDialog}\n                onSubmit={createDialog.handleSubmitCreateDialog}\n                errorData={createDialog.errorData}\n                groupListData={groupListData}\n                stockListData={stockListData}\n            />\n\n            <UsersCreateDialog\n                initialValues={updateDialog.initialValues}\n                isUpdate={true}\n                open={updateDialog.openUpdateDialog}\n                loading={updateDialog.updateLoading}\n                onClose={updateDialog.handleCloseUpdateDialog}\n                onSubmit={updateDialog.handleSubmitUpdateDialog}\n                groupListData={groupListData}\n                stockListData={stockListData}\n                errorData={updateDialog.errorData}\n            />\n\n            {detailData.data && <ConfirmDialog\n                type=\"delete\"\n                message={currentName}\n                loading={confirmDialog.confirmLoading}\n                onClose={confirmDialog.handleCloseConfirmDialog}\n                onSubmit={confirmDialog.handleSendConfirmDialog}\n                open={confirmDialog.openConfirmDialog}\n            />}\n        </Container>\n    )\n})\n\nUsersGridList.propTypes = {\n    filter: PropTypes.object.isRequired,\n    listData: PropTypes.object,\n    detailData: PropTypes.object,\n    createDialog: PropTypes.shape({\n        createLoading: PropTypes.bool.isRequired,\n        openCreateDialog: PropTypes.bool.isRequired,\n        handleOpenCreateDialog: PropTypes.func.isRequired,\n        handleCloseCreateDialog: PropTypes.func.isRequired,\n        handleSubmitCreateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    confirmDialog: PropTypes.shape({\n        confirmLoading: PropTypes.bool.isRequired,\n        openConfirmDialog: PropTypes.bool.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleSendConfirmDialog: PropTypes.func.isRequired\n    }).isRequired,\n    updateDialog: PropTypes.shape({\n        updateLoading: PropTypes.bool.isRequired,\n        openUpdateDialog: PropTypes.bool.isRequired,\n        handleOpenUpdateDialog: PropTypes.func.isRequired,\n        handleCloseUpdateDialog: PropTypes.func.isRequired,\n        handleSubmitUpdateDialog: PropTypes.func.isRequired\n    }).isRequired,\n    actionsDialog: PropTypes.shape({\n        handleActionEdit: PropTypes.func.isRequired,\n        handleActionDelete: PropTypes.func.isRequired\n    }).isRequired,\n    filterDialog: PropTypes.shape({\n        initialValues: PropTypes.object,\n        filterLoading: PropTypes.bool,\n        openFilterDialog: PropTypes.bool.isRequired,\n        handleOpenFilterDialog: PropTypes.func.isRequired,\n        handleCloseFilterDialog: PropTypes.func.isRequired,\n        handleSubmitFilterDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default UsersGridList\n\n\n\n// WEBPACK FOOTER //\n// src/components/Users/UsersGridList.js","import UsersGridList from './UsersGridList'\nimport {USERS_CREATE_DIALOG_OPEN} from './UsersCreateDialog'\nimport {USERS_FILTER_KEY, USERS_FILTER_OPEN} from './UsersFilterForm'\n\nconst USERS_DELETE_DIALOG_OPEN = 'openDeleteDialog'\nconst USERS_UPDATE_DIALOG_OPEN = 'openUpdateDialog'\nexport {\n    USERS_CREATE_DIALOG_OPEN,\n    USERS_UPDATE_DIALOG_OPEN,\n    USERS_DELETE_DIALOG_OPEN,\n    USERS_FILTER_KEY,\n    USERS_FILTER_OPEN,\n    UsersGridList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Users/index.js","import _ from 'lodash'\nimport React from 'react'\nimport IconButton from 'material-ui/IconButton'\nimport Paper from 'material-ui/Paper'\nimport PropTypes from 'prop-types'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport FlatButton from 'material-ui/FlatButton'\nimport {TextField} from '../ReduxForm'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport Tooltip from '../ToolTip'\nimport CloseIcon2 from '../CloseIcon2'\nimport Timeline from 'material-ui/svg-icons/action/timeline'\nimport Touch from 'material-ui/svg-icons/action/touch-app'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n\n    throw new SubmissionError({\n        ...errors,\n        _error: nonFieldErrors\n    })\n}\n\nconst enhance = compose(\n    injectSheet({\n        addZoneWrapper: {\n            position: 'absolute',\n            top: '10px',\n            left: '50%',\n            marginLeft: '-275px',\n            padding: '7px 20px',\n            width: '550px',\n            height: '60px',\n            '& form': {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                width: '100%',\n                height: '100%'\n            }\n        },\n        inputFieldCustom: {\n            flexBasis: '200px',\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        actionButton: {\n            '& span': {\n                color: '#129fdd !important',\n                fontWeight: '600 !important'\n            }\n        },\n        addZoneClose: {\n            position: 'absolute',\n            top: '18px',\n            right: '30px',\n            '& button': {\n                background: '#fff !important'\n            },\n            '& svg': {\n                fill: '#666 !important'\n            }\n        }\n    }),\n    reduxForm({\n        form: 'ZoneCreateForm',\n        enableReinitialize: true\n    })\n)\n\nconst AddZonePopup = enhance((props) => {\n    const {\n        classes,\n        onClose,\n        handleSubmit\n    } = props\n    const submitZone = handleSubmit(() => props.onSubmit().catch(validate))\n    return (\n        <div>\n            <Paper zDepth={1} className={classes.addZoneWrapper}>\n                <form onSubmit={submitZone}>\n                    <Field\n                        name=\"zoneName\"\n                        component={TextField}\n                        className={classes.inputFieldCustom}\n                        label=\"Наименование зоны\"\n                        fullWidth={true}/>\n                    <div className={classes.buttons}>\n                        <IconButton>\n                            <Timeline color=\"#666\"/>\n                        </IconButton>\n\n                        <IconButton>\n                            <Touch color=\"#666\"/>\n                        </IconButton>\n\n                        <IconButton>\n                            <DeleteIcon color=\"#666\"/>\n                        </IconButton>\n                    </div>\n                    <FlatButton\n                        label=\"Сохранить\"\n                        className={classes.actionButton}\n                        primary={true}\n                        type=\"submit\"\n                    />\n                </form>\n            </Paper>\n\n            <div className={classes.addZoneClose}>\n                <Tooltip position=\"left\" text=\"Закрыть\">\n                    <FloatingActionButton\n                        mini={true}\n                        onTouchTap={onClose}>\n                        <CloseIcon2/>\n                    </FloatingActionButton>\n                </Tooltip>\n            </div>\n        </div>\n    )\n})\n\nAddZonePopup.PropTypes = {\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired\n}\n\nexport default AddZonePopup\n\n\n\n// WEBPACK FOOTER //\n// src/components/Zones/AddZonePopup.js","import _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport injectSheet from 'react-jss'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport {Field, reduxForm, SubmissionError} from 'redux-form'\nimport toCamelCase from '../../helpers/toCamelCase'\nimport {UsersSearchField} from '../ReduxForm'\nimport CloseIcon2 from '../CloseIcon2'\nimport IconButton from 'material-ui/IconButton'\nimport MainStyles from '../Styles/MainStyles'\n\nconst validate = (data) => {\n    const errors = toCamelCase(data)\n    const nonFieldErrors = _.get(errors, 'nonFieldErrors')\n    const latLng = (_.get(errors, 'lat') || _.get(errors, 'lon')) && 'Location is required.'\n\n    throw new SubmissionError({\n        ...errors,\n        latLng,\n        _error: nonFieldErrors\n    })\n}\n\nconst enhance = compose(\n    injectSheet(_.merge(MainStyles, {\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            textAlign: 'center',\n            display: 'flex'\n        }\n    })),\n    reduxForm({\n        form: 'ZoneBindAgentForm',\n        enableReinitialize: true\n    })\n)\n\nconst ZoneBindAgentDialog = enhance((props) => {\n    const {open, loading, handleSubmit, onClose, classes} = props\n    const onSubmit = handleSubmit(() => props.onSubmit().catch(validate))\n\n    return (\n        <Dialog\n            modal={true}\n            open={open}\n            onRequestClose={onClose}\n            className={classes.dialog}\n            contentStyle={loading ? {width: '300px'} : {width: '500px'}}\n            bodyStyle={{minHeight: 'auto'}}\n            bodyClassName={classes.popUp}>\n            <div className={classes.titleContent}>\n                <span>Привязать агента</span>\n                <IconButton onTouchTap={onClose}>\n                    <CloseIcon2 color=\"#666666\"/>\n                </IconButton>\n            </div>\n            <div className={classes.bodyContent}>\n                <form onSubmit={onSubmit} className={classes.form} style={{minHeight: 'auto'}}>\n                    <div className={classes.loader}>\n                        <CircularProgress size={40} thickness={4}/>\n                    </div>\n                    <div className={classes.inContent} style={{minHeight: '100px', paddingTop: '15px'}}>\n                        <div className={classes.field}>\n                            <Field\n                                name=\"user\"\n                                component={UsersSearchField}\n                                className={classes.inputFieldCustom}\n                                label=\"Агент\"\n                                fullWidth={true}\n                            />\n                        </div>\n                    </div>\n                    <div className={classes.bottomButton}>\n                        <FlatButton\n                            label=\"Сохранить\"\n                            className={classes.actionButton}\n                            primary={true}\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </Dialog>\n    )\n})\n\nZoneBindAgentDialog.propTyeps = {\n    isUpdate: PropTypes.bool,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\n\nexport default ZoneBindAgentDialog\n\n\n\n// WEBPACK FOOTER //\n// src/components/Zones/ZoneBindAgentDialog.js","import _ from 'lodash'\nimport React from 'react'\nimport IconButton from 'material-ui/IconButton'\nimport * as ROUTES from '../../constants/routes'\nimport {Link} from 'react-router'\nimport PropTypes from 'prop-types'\nimport sprintf from 'sprintf'\nimport injectSheet from 'react-jss'\nimport {compose} from 'recompose'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport Tooltip from '../ToolTip'\nimport CloseIcon2 from '../CloseIcon2'\nimport Person from '../Images/person.png'\n\nconst enhance = compose(\n    injectSheet({\n        detailWrap: {\n            height: '100%',\n            position: 'relative'\n        },\n        loader: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: '#fff',\n            top: '0',\n            left: '0',\n            alignItems: 'center',\n            zIndex: '999',\n            justifyContent: 'center',\n            display: 'flex'\n        },\n        addButton: {\n            '& button': {\n                backgroundColor: '#275482 !important'\n            }\n        },\n        addPerson: {\n            boxShadow: 'none !important',\n            '& button': {\n                background: '#199ee0 !important',\n                width: '30px !important',\n                height: '30px !important',\n                '& svg': {\n                    width: '20px !important',\n                    height: '30px !important'\n                }\n            }\n        },\n        zonesInfo: {\n            background: '#fff',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-between',\n            position: 'absolute',\n            width: '450px',\n            top: '0',\n            bottom: '0',\n            transition: 'all 0.3s ease',\n            zIndex: '2'\n        },\n        zonesInfoTitle: {\n            display: 'flex',\n            padding: '20px 30px',\n            borderBottom: '1px #efefef solid',\n            position: 'relative',\n            '& > div': {\n                display: 'flex',\n                marginRight: '50px',\n                '& big': {\n                    fontSize: '28px',\n                    lineHeight: '28px',\n                    marginRight: '10px'\n                },\n                '& span': {\n                    fontSize: '12px !important',\n                    lineHeight: '14px'\n                }\n            },\n            '& > div:last-child': {\n                margin: '0'\n            }\n        },\n        zoneInfoName: {\n            extend: 'zonesInfo',\n            justifyContent: 'flex-start',\n            right: '0',\n            width: '450px',\n            zIndex: '4'\n        },\n        zoneInfoTitle: {\n            extend: 'zonesInfoTitle',\n            padding: '20px 0',\n            justifyContent: 'space-between',\n            '& > div': {\n                marginRight: '0'\n            }\n        },\n        zoneInfoNameTitle: {\n            background: '#fff',\n            color: '#333',\n            fontWeight: '600',\n            textTransform: 'uppercase',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderBottom: '1px solid #efefef',\n            padding: '20px 30px',\n            zIndex: '999',\n            '& button': {\n                right: '13px',\n                top: '5px',\n                padding: '0 !important',\n                position: 'absolute !important'\n            }\n        },\n        zoneInfoContent: {\n            padding: '0 30px',\n            overflowY: 'auto'\n        },\n        personal: {\n            padding: '20px 0 15px',\n            borderBottom: '1px  #efefef solid',\n            '& > span': {\n                fontWeight: '600',\n                display: 'block',\n                marginBottom: '12px'\n            }\n        },\n        personalWrap: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            '& > div': {\n                width: '30px',\n                height: '30px',\n                display: 'inline-block',\n                marginRight: '10px',\n                marginBottom: '5px',\n                position: 'relative',\n                '& img': {\n                    height: '100%',\n                    width: '100%',\n                    borderRadius: '50%'\n                },\n                '&:hover > div > div > div': {\n                    display: 'flex'\n                },\n                '&:nth-child(10n)': {\n                    margin: '0 !important'\n                }\n            }\n        },\n        deletePers: {\n            cursor: 'pointer',\n            width: '15px',\n            height: '15px',\n            display: 'none',\n            position: 'absolute',\n            top: '-5px',\n            right: '-5px',\n            borderRadius: '50%',\n            alignItems: 'center',\n            justifyContent: 'center',\n            background: '#999',\n            '& svg': {\n                width: '13px !important',\n                height: '15px !important'\n            }\n        },\n        stores: {\n            '& span': {\n                fontWeight: '600'\n            },\n            '& .dottedList': {\n                padding: '15px 0',\n                justifyContent: 'space-between',\n                '&:last-child:after': {\n                    display: 'none'\n                }\n            }\n        },\n        addZoneWrapper: {\n            position: 'absolute',\n            top: '10px',\n            left: '50%',\n            marginLeft: '-275px',\n            padding: '7px 20px',\n            width: '550px',\n            height: '60px',\n            '& form': {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                width: '100%',\n                height: '100%'\n            }\n        },\n        inputFieldCustom: {\n            flexBasis: '200px',\n            fontSize: '13px !important',\n            height: '45px !important',\n            marginTop: '7px',\n            '& div': {\n                fontSize: '13px !important'\n            },\n            '& label': {\n                top: '20px !important',\n                lineHeight: '5px !important'\n            },\n            '& input': {\n                marginTop: '0 !important'\n            }\n        },\n        actionButton: {\n            '& span': {\n                color: '#129fdd !important',\n                fontWeight: '600 !important'\n            }\n        },\n        addZoneClose: {\n            position: 'absolute',\n            right: '30px',\n            '& button': {\n                background: '#fff !important'\n            },\n            '& svg': {\n                fill: '#666 !important'\n            }\n        }\n    })\n)\n\nconst ZoneDetails = enhance((props) => {\n    const {\n        classes,\n        filter,\n        detailData,\n        bindAgent,\n        unbindAgent\n    } = props\n\n    const loading = _.get(detailData, 'detailLoading')\n    const id = _.get(detailData, ['data', 'id'])\n    const name = _.get(detailData, ['data', 'properties', 'title'])\n    return (\n        <div className={classes.detailWrap}>\n            {loading && <div className={classes.loader}>\n                <CircularProgress size={40} thickness={4}/>\n            </div>}\n            <div className={classes.zoneInfoNameTitle}>\n                <span>{name} (Z-{id})</span>\n                <Link to={{\n                    pathname: sprintf(ROUTES.ZONES_LIST_URL),\n                    query: filter.getParams()\n                }}>\n                    <IconButton>\n                        <CloseIcon2 color=\"#666666\"/>\n                    </IconButton>\n                </Link>\n            </div>\n            <div className={classes.zoneInfoContent}>\n                <div className={classes.zoneInfoTitle}>\n                    <div>\n                        <big>24</big>\n                        <span>всего магазинов <br/> в зоне</span>\n                    </div>\n                    <div>\n                        <big>4</big>\n                        <span>закреплено <br/> агентов</span>\n                    </div>\n                    <div>\n                        <big>2</big>\n                        <span>закреплено <br/> инкассаторов</span>\n                    </div>\n                </div>\n                <div className={classes.personal}>\n                    <span>Ответственный персонал:</span>\n                    <div className={classes.personalWrap}>\n                        {_.map(_.get(detailData, ['data', 'properties', 'agents']), (item) => {\n                            const agentId = _.get(item, 'id')\n                            const username = _.get(item, 'username')\n\n                            return (\n                                <Tooltip key={agentId} position=\"top\" text={username}>\n                                    <div className={classes.person}>\n                                        <img src={Person} alt=\"\"/>\n                                        <div className={classes.deletePers}>\n                                            <CloseIcon2\n                                                onClick={() => { unbindAgent.handleOpenConfirmDialog(agentId) }}\n                                                color=\"#fff\"/>\n                                        </div>\n                                    </div>\n                                </Tooltip>\n                            )\n                        })}\n                        <div className={classes.person} style={{overflow: 'hidden'}}>\n                            <Tooltip position=\"bottom\" text=\"Добавить\">\n                                <FloatingActionButton\n                                    mini={true}\n                                    className={classes.addPerson}\n                                    onTouchTap={bindAgent.handleOpenBindAgent}>\n                                    <ContentAdd />\n                                </FloatingActionButton>\n                            </Tooltip>\n                        </div>\n                    </div>\n                </div>\n                <div className={classes.stores}>\n                    <div className=\"dottedList\">\n                        <span>Магазины в зоне</span>\n                        <a>+ добавить</a>\n                    </div>\n                    <div className=\"dottedList\">OOO Angels Food</div>\n                    <div className=\"dottedList\">OOO Angels Food</div>\n                    <div className=\"dottedList\">OOO Angels Food</div>\n                    <div className=\"dottedList\">OOO Angels Food</div>\n                    <div className=\"dottedList\">OOO Angels Food</div>\n                    <div className=\"dottedList\">OOO Angels Food</div>\n                    <div className=\"dottedList\">OOO Angels Food</div>\n                    <div className=\"dottedList\">OOO Angels Food</div>\n                </div>\n            </div>\n        </div>\n    )\n})\n\nZoneDetails.PropTypes = {\n    filter: PropTypes.object,\n    detailData: PropTypes.object,\n    bindAgent: PropTypes.shape({\n        openBindAgent: PropTypes.bool.isRequired,\n        bindAgentLoading: PropTypes.bool.isRequired,\n        handleOpenBindAgent: PropTypes.func.isRequired,\n        handleCloseBindAgent: PropTypes.func.isRequired,\n        handleSubmitBindAgent: PropTypes.func.isRequired\n    }).isRequired,\n    unbindAgent: PropTypes.shape({\n        openConfirmDialog: PropTypes.bool.isRequired,\n        handleOpenConfirmDialog: PropTypes.func.isRequired,\n        handleCloseConfirmDialog: PropTypes.func.isRequired,\n        handleSendConfirmDialog: PropTypes.func.isRequired\n    }).isRequired\n}\n\nexport default ZoneDetails\n\n\n\n// WEBPACK FOOTER //\n// src/components/Zones/ZoneDetails.js","import {\n    default as React,\n    Component\n} from 'react'\n\nimport * as GOOGLE_MAP from '../../constants/googleMaps'\n\nimport withScriptjs from 'react-google-maps/lib/async/withScriptjs'\nimport CircularProgress from 'material-ui/CircularProgress'\n\nimport {\n    withGoogleMap,\n    GoogleMap\n} from 'react-google-maps'\n\n/*\n * This is the modify version of:\n * https://developers.google.com/maps/documentation/javascript/examples/event-arguments\n *\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\n */\nconst Loader = () =>\n    <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%'}}>\n        <CircularProgress size={40} thickness={4} />\n    </div>\n\nconst GettingStartedGoogleMap = withScriptjs(withGoogleMap(({...props}) => (\n    <GoogleMap\n        {...props}\n    >\n    </GoogleMap>\n)))\n\nclass GettingStartedExample extends Component {\n\n    state = {\n        markers: [{\n            position: {\n                lat: 25.0112183,\n                lng: 121.52067570000001\n            },\n            key: 'Taiwan',\n            defaultAnimation: 2\n        }]\n    }\n\n    render () {\n        return (\n            <div style={{height: '100%'}}>\n                <GettingStartedGoogleMap\n                    defaultCenter={GOOGLE_MAP.DEFAULT_LOCATION}\n                    googleMapURL={GOOGLE_MAP.GOOGLE_API_URL}\n                    loadingElement={<Loader />}\n                    containerElement={\n                        <div style={{height: '100%'}} />\n                    }\n                    mapElement={\n                        <div style={{height: '100%'}}/>\n                    }\n                    defaultZoom={15}\n                    radius=\"500\"\n                    markers={this.state.markers}\n                />\n            </div>\n        )\n    }\n}\nexport default GettingStartedExample\n\n\n\n// WEBPACK FOOTER //\n// src/components/Zones/ZoneMapCustom.js","import ZonesWrapper from './ZonesWrapper'\nconst ADD_ZONE = 'openAddZone'\nconst BIND_AGENT = 'openBindAgent'\nconst TOGGLE_INFO = 'openInfo'\nconst CONFIRM_DIALOG = 'confirmDialog'\n\nexport {\n    ADD_ZONE,\n    TOGGLE_INFO,\n    BIND_AGENT,\n    CONFIRM_DIALOG,\n    ZonesWrapper\n}\n\n\n\n// WEBPACK FOOTER //\n// src/components/Zones/index.js","export const googleMapStyle = [\n    {\n        'elementType': 'geometry',\n        'stylers': [\n            {\n                'color': '#f5f5f5'\n            }\n        ]\n    },\n    {\n        'elementType': 'labels.icon',\n        'stylers': [\n            {\n                'visibility': 'off'\n            }\n        ]\n    },\n    {\n        'elementType': 'labels.text.fill',\n        'stylers': [\n            {\n                'color': '#616161'\n            }\n        ]\n    },\n    {\n        'elementType': 'labels.text.stroke',\n        'stylers': [\n            {\n                'color': '#f5f5f5'\n            }\n        ]\n    },\n    {\n        'featureType': 'administrative.land_parcel',\n        'elementType': 'labels.text.fill',\n        'stylers': [\n            {\n                'color': '#bdbdbd'\n            }\n        ]\n    },\n    {\n        'featureType': 'poi',\n        'elementType': 'geometry',\n        'stylers': [\n            {\n                'color': '#eeeeee'\n            }\n        ]\n    },\n    {\n        'featureType': 'poi',\n        'elementType': 'labels.text.fill',\n        'stylers': [\n            {\n                'color': '#757575'\n            }\n        ]\n    },\n    {\n        'featureType': 'poi.park',\n        'elementType': 'geometry',\n        'stylers': [\n            {\n                'color': '#e5e5e5'\n            }\n        ]\n    },\n    {\n        'featureType': 'poi.park',\n        'elementType': 'labels.text.fill',\n        'stylers': [\n            {\n                'color': '#9e9e9e'\n            }\n        ]\n    },\n    {\n        'featureType': 'road',\n        'elementType': 'geometry',\n        'stylers': [\n            {\n                'color': '#ffffff'\n            }\n        ]\n    },\n    {\n        'featureType': 'road.arterial',\n        'elementType': 'labels.text.fill',\n        'stylers': [\n            {\n                'color': '#757575'\n            }\n        ]\n    },\n    {\n        'featureType': 'road.highway',\n        'elementType': 'geometry',\n        'stylers': [\n            {\n                'color': '#dadada'\n            }\n        ]\n    },\n    {\n        'featureType': 'road.highway',\n        'elementType': 'labels.text.fill',\n        'stylers': [\n            {\n                'color': '#616161'\n            }\n        ]\n    },\n    {\n        'featureType': 'road.local',\n        'elementType': 'labels.text.fill',\n        'stylers': [\n            {\n                'color': '#9e9e9e'\n            }\n        ]\n    },\n    {\n        'featureType': 'transit.line',\n        'elementType': 'geometry',\n        'stylers': [\n            {\n                'color': '#e5e5e5'\n            }\n        ]\n    },\n    {\n        'featureType': 'transit.station',\n        'elementType': 'geometry',\n        'stylers': [\n            {\n                'color': '#eeeeee'\n            }\n        ]\n    },\n    {\n        'featureType': 'water',\n        'elementType': 'geometry',\n        'stylers': [\n            {\n                'color': '#c9c9c9'\n            }\n        ]\n    },\n    {\n        'featureType': 'water',\n        'elementType': 'labels.text.fill',\n        'stylers': [\n            {\n                'color': '#9e9e9e'\n            }\n        ]\n    }\n]\n\n\n\n// WEBPACK FOOTER //\n// src/constants/googleMapsStyle.js","import React from 'react'\nimport _ from 'lodash'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport moment from 'moment'\nimport {connect} from 'react-redux'\nimport Layout from '../../components/Layout'\nimport {hashHistory} from 'react-router'\nimport filterHelper from '../../helpers/filter'\nimport {ORDER_DETAILS, ActivityWrapper, DAY, DATE, IMAGE} from '../../components/Activity'\nimport {\n    activityOrderListFetchAction,\n    activityOrderItemFetchAction,\n    activityVisitListFetchAction,\n    activityReportListFetchAction,\n    activityReturnListFetchAction,\n    activityPaymentListFetchAction,\n    activityDeliveryListFetchAction,\n    activityReportShowImageAction\n} from '../../actions/activity'\n\nconst ZERO = 0\nconst ONE = 1\nconst currentDate = moment().format('YYYY-MM')\nconst today = _.toInteger(moment().format('D'))\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const orderList = _.get(state, ['activity', 'orderList', 'data'])\n        const orderListLoading = _.get(state, ['activity', 'orderList', 'loading'])\n        const visitList = _.get(state, ['activity', 'visitList', 'data'])\n        const visitListLoading = _.get(state, ['activity', 'visitList', 'loading'])\n        const reportList = _.get(state, ['activity', 'reportList', 'data'])\n        const reportListLoading = _.get(state, ['activity', 'reportList', 'loading'])\n        const reportImage = _.get(state, ['activity', 'reportImage', 'data'])\n        const reportImageLoading = _.get(state, ['activity', 'reportImage', 'loading'])\n        const returnList = _.get(state, ['activity', 'returnList', 'data'])\n        const returnListLoading = _.get(state, ['activity', 'returnList', 'loading'])\n        const paymentList = _.get(state, ['activity', 'paymentList', 'data'])\n        const paymentListLoading = _.get(state, ['activity', 'paymentList', 'loading'])\n        const deliveryList = _.get(state, ['activity', 'deliveryList', 'data'])\n        const deliveryListLoading = _.get(state, ['activity', 'deliveryList', 'loading'])\n        const orderItem = _.get(state, ['activity', 'orderItem', 'data'])\n        const orderItemLoading = _.get(state, ['activity', 'orderItem', 'loading'])\n        const createForm = _.get(state, ['form', 'ActivityCreateForm', 'values'])\n        const curDate = _.get(query, 'date') || currentDate\n        const filter = filterHelper(orderList, pathname, query)\n        return {\n            filter,\n            query,\n            pathname,\n            orderList,\n            orderListLoading,\n            orderItem,\n            orderItemLoading,\n            visitList,\n            visitListLoading,\n            reportList,\n            reportListLoading,\n            reportImage,\n            reportImageLoading,\n            returnList,\n            returnListLoading,\n            paymentList,\n            paymentListLoading,\n            deliveryList,\n            deliveryListLoading,\n            createForm,\n            curDate\n        }\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const prevDay = _.get(props, ['location', 'query', DAY])\n        const nextDay = _.get(nextProps, ['location', 'query', DAY])\n        return (props.curDate !== nextProps.curDate) || (prevDay !== nextDay)\n    }, ({dispatch, filter}) => {\n        dispatch(activityOrderListFetchAction(filter))\n        dispatch(activityVisitListFetchAction(filter))\n        dispatch(activityReportListFetchAction(filter))\n        dispatch(activityReturnListFetchAction(filter))\n        dispatch(activityPaymentListFetchAction(filter))\n        dispatch(activityDeliveryListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const prevDetail = _.get(props, ['location', 'query', ORDER_DETAILS])\n        const nextDetail = _.get(nextProps, ['location', 'query', ORDER_DETAILS])\n        return prevDetail !== nextDetail && nextDetail > ZERO\n    }, ({dispatch, location}) => {\n        const orderId = _.toInteger(_.get(location, ['query', ORDER_DETAILS]))\n        if (orderId > ZERO) {\n            dispatch(activityOrderItemFetchAction(orderId))\n        }\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const prevImage = _.get(props, ['location', 'query', IMAGE])\n        const nextImage = _.get(nextProps, ['location', 'query', IMAGE])\n        return prevImage !== nextImage && nextImage > ZERO\n    }, ({dispatch, location}) => {\n        const imageId = _.toInteger(_.get(location, ['query', IMAGE]))\n        if (imageId > ZERO) {\n            dispatch(activityReportShowImageAction(imageId))\n        }\n    }),\n\n    withHandlers({\n        handlePrevMonth: props => () => {\n            const {location: {pathname}, filter, curDate} = props\n            const prevMonth = moment(curDate).subtract(ONE, 'month')\n            const dateForURL = prevMonth.format('YYYY-MM')\n            hashHistory.push({pathname, query: filter.getParams({[DATE]: dateForURL})})\n        },\n\n        handleNextMonth: props => () => {\n            const {location: {pathname}, filter, curDate} = props\n            const nextMonth = moment(curDate).add(ONE, 'month')\n            const dateForURL = nextMonth.format('YYYY-MM')\n            hashHistory.push({pathname, query: filter.getParams({[DATE]: dateForURL})})\n        },\n\n        handleClickDay: props => (day) => {\n            const {location, location: {pathname}, filter} = props\n            const date = _.get(location, ['query', DATE])\n            hashHistory.push({pathname, query: filter.getParams({[DAY]: day, [DATE]: date})})\n        },\n\n        handleOpenOrderDetails: props => (id) => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[ORDER_DETAILS]: id})})\n        },\n\n        handleCloseOrderDetails: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[ORDER_DETAILS]: ZERO})})\n        },\n\n        handleOpenReportImage: props => (id) => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[IMAGE]: id})})\n        },\n\n        handleCloseReportImage: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[IMAGE]: ZERO})})\n        }\n    })\n)\n\nconst ActivityList = enhance((props) => {\n    const {\n        filter,\n        orderList,\n        orderListLoading,\n        orderItem,\n        orderItemLoading,\n        visitList,\n        visitListLoading,\n        reportList,\n        reportListLoading,\n        reportImage,\n        reportImageLoading,\n        returnList,\n        returnListLoading,\n        paymentList,\n        paymentListLoading,\n        deliveryList,\n        deliveryListLoading,\n        location,\n        layout\n    } = props\n\n    const openOrderDetails = _.toInteger(_.get(location, ['query', ORDER_DETAILS]) || ZERO) > ZERO\n    const openReportImage = _.toInteger(_.get(location, ['query', IMAGE]) || ZERO) > ZERO\n    const orderId = _.toInteger(_.get(location, ['query', ORDER_DETAILS]))\n    const selectedDay = _.toInteger(_.get(location, ['query', DAY]) || today)\n    const selectedDate = _.get(location, ['query', DATE]) || currentDate\n\n    const orderDetails = {\n        id: orderId,\n        openOrderDetails,\n        detailLoading: orderItemLoading,\n        data: orderItem,\n        handleOpenOrderDetails: props.handleOpenOrderDetails,\n        handleCloseOrderDetails: props.handleCloseOrderDetails\n    }\n\n    const reportImageData = {\n        imageData: {\n            data: {image: reportImage}\n        },\n        reportImageLoading,\n        openReportImage,\n        handleOpenReportImage: props.handleOpenReportImage,\n        handleCloseReportImage: props.handleCloseReportImage\n    }\n\n    const orderlistData = {\n        data: _.get(orderList, 'results'),\n        orderListLoading\n    }\n\n    const visitlistData = {\n        data: _.get(visitList, 'results'),\n        visitListLoading\n    }\n\n    const reportlistData = {\n        data: _.get(reportList, 'results'),\n        reportListLoading\n    }\n\n    const returnlistData = {\n        data: _.get(returnList, 'results'),\n        returnListLoading\n    }\n\n    const paymentlistData = {\n        data: _.get(paymentList, 'results'),\n        paymentListLoading\n    }\n\n    const deliverylistData = {\n        data: _.get(deliveryList, 'results'),\n        deliveryListLoading\n    }\n\n    const calendar = {\n        selectedDay: selectedDay,\n        selectedDate: selectedDate,\n        handlePrevMonth: props.handlePrevMonth,\n        handleNextMonth: props.handleNextMonth\n    }\n\n    return (\n        <Layout {...layout}>\n            <ActivityWrapper\n                filter={filter}\n                orderlistData={orderlistData}\n                orderDetails={orderDetails}\n                visitlistData={visitlistData}\n                reportlistData={reportlistData}\n                reportImageData={reportImageData}\n                returnlistData={returnlistData}\n                paymentlistData={paymentlistData}\n                deliverylistData={deliverylistData}\n                handleClickDay={props.handleClickDay}\n                calendar={calendar}\n            />\n        </Layout>\n    )\n})\n\nexport default ActivityList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Activity/ActivityList.js","import ActivityList from './ActivityList'\n\nexport {ActivityList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Activity/index.js","import _ from 'lodash'\nimport React from 'react'\nimport {connect} from 'react-redux'\nimport {setTokenAction, signOutAction} from '../../actions/signIn'\nimport {trackingListFetchAction} from '../../actions/tracking'\nimport DocumentTitle from 'react-document-title'\nimport {hashHistory} from 'react-router'\nimport {compose, withHandlers} from 'recompose'\nimport {\n    notificationGetNotViewed\n} from '../../actions/notifications'\nimport * as ROUTES from '../../constants/routes'\n\nconst time = 10000\nconst refreshAgentsList = 45000\n@compose(\n    connect(),\n    withHandlers({\n        handleSignOut: prop => (event) => {\n            const {dispatch} = prop\n            event.preventDefault()\n\n            dispatch(signOutAction()).then(() => {\n                hashHistory.push(ROUTES.SIGN_IN)\n            })\n        }\n    })\n)\nclass App extends React.Component {\n    constructor (props) {\n        super(props)\n        const pathname = _.get(props, ['location', 'pathname'])\n        const {dispatch} = props\n        dispatch(setTokenAction())\n        setInterval(() => {\n            dispatch(notificationGetNotViewed())\n        }, time)\n        if (pathname === '/' + ROUTES.TRACKING) {\n            setInterval(() => {\n                dispatch(trackingListFetchAction())\n            }, refreshAgentsList)\n        }\n\n        const mediaQueryList = window.matchMedia('print')\n        mediaQueryList.addListener((mql) => {\n            if (mql.matches) {\n                // Console.log('on before print equivalent')\n            } else {\n                // Console.log('on after print equivalent')\n            }\n        })\n    }\n\n    render () {\n        const {handleSignOut} = this.props\n        const layout = {\n            handleSignOut\n        }\n        const title = this.props.title || ''\n\n        return (\n            <DocumentTitle title={title}>\n                {React.cloneElement(this.props.children, {layout})}\n            </DocumentTitle>\n        )\n    }\n}\n\nexport default App\n\n\n\n// WEBPACK FOOTER //\n// src/containers/App/App.js","import App from './App'\n\nexport default App\n\n\n\n// WEBPACK FOOTER //\n// src/containers/App/index.js","import React from 'react'\nimport _ from 'lodash'\nimport sprintf from 'sprintf'\nimport {connect} from 'react-redux'\nimport {reset} from 'redux-form'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport {\n    BRAND_CREATE_DIALOG_OPEN,\n    BRAND_UPDATE_DIALOG_OPEN,\n    BRAND_DELETE_DIALOG_OPEN,\n    BrandGridList\n} from '../../components/Brand'\nimport {\n    brandCreateAction,\n    brandUpdateAction,\n    brandListFetchAction,\n    brandDeleteAction,\n    brandItemFetchAction\n} from '../../actions/brand'\nimport {openSnackbarAction} from '../../actions/snackbar'\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['brand', 'item', 'data'])\n        const detailLoading = _.get(state, ['brand', 'item', 'loading'])\n        const createLoading = _.get(state, ['brand', 'create', 'loading'])\n        const updateLoading = _.get(state, ['brand', 'update', 'loading'])\n        const list = _.get(state, ['brand', 'list', 'data'])\n        const listLoading = _.get(state, ['brand', 'list', 'loading'])\n        const createForm = _.get(state, ['form', 'BrandCreateForm'])\n        const filter = filterHelper(list, pathname, query)\n\n        return {\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            createLoading,\n            updateLoading,\n            filter,\n            createForm\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(brandListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const brandId = _.get(nextProps, ['params', 'brandId'])\n\n        return brandId && _.get(props, ['params', 'brandId']) !== brandId\n    }, ({dispatch, params}) => {\n        const brandId = _.toInteger(_.get(params, 'brandId'))\n        brandId && dispatch(brandItemFetchAction(brandId))\n    }),\n\n    withHandlers({\n        handleActionEdit: props => () => {\n            return null\n        },\n\n        handleOpenDeleteDialog: props => () => {\n            return null\n        },\n\n        handleOpenConfirmDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.BRAND_ITEM_PATH, id),\n                query: filter.getParams({[BRAND_DELETE_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseConfirmDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[BRAND_DELETE_DIALOG_OPEN]: false})})\n        },\n        handleSendConfirmDialog: props => () => {\n            const {dispatch, detail, filter, location: {pathname}} = props\n            dispatch(brandDeleteAction(detail.id))\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[BRAND_DELETE_DIALOG_OPEN]: false})})\n                    dispatch(brandListFetchAction(filter))\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\n                })\n                .catch(() => {\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\n                })\n        },\n\n        handleOpenCreateDialog: props => () => {\n            const {dispatch, location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[BRAND_CREATE_DIALOG_OPEN]: true})})\n            dispatch(reset('BrandCreateForm'))\n        },\n\n        handleCloseCreateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[BRAND_CREATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitCreateDialog: props => () => {\n            const {dispatch, createForm, filter, location: {pathname}} = props\n\n            return dispatch(brandCreateAction(_.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[BRAND_CREATE_DIALOG_OPEN]: false})})\n                    dispatch(brandListFetchAction(filter))\n                })\n        },\n\n        handleOpenUpdateDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.BRAND_ITEM_PATH, id),\n                query: filter.getParams({[BRAND_UPDATE_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseUpdateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[BRAND_UPDATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitUpdateDialog: props => () => {\n            const {dispatch, createForm, filter} = props\n            const brandId = _.toInteger(_.get(props, ['params', 'brandId']))\n\n            return dispatch(brandUpdateAction(brandId, _.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push(filter.createURL({[BRAND_UPDATE_DIALOG_OPEN]: false}))\n                    dispatch(brandListFetchAction(filter))\n                })\n        }\n    })\n)\n\nconst BrandList = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        createLoading,\n        updateLoading,\n        filter,\n        layout,\n        params\n    } = props\n\n    const openCreateDialog = toBoolean(_.get(location, ['query', BRAND_CREATE_DIALOG_OPEN]))\n    const openUpdateDialog = toBoolean(_.get(location, ['query', BRAND_UPDATE_DIALOG_OPEN]))\n    const openConfirmDialog = toBoolean(_.get(location, ['query', BRAND_DELETE_DIALOG_OPEN]))\n\n    const detailId = _.toInteger(_.get(params, 'brandId'))\n\n    const actionsDialog = {\n        handleActionEdit: props.handleActionEdit,\n        handleActionDelete: props.handleOpenDeleteDialog\n    }\n\n    const createDialog = {\n        createLoading,\n        openCreateDialog,\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\n    }\n\n    const confirmDialog = {\n        confirmLoading: detailLoading,\n        openConfirmDialog: openConfirmDialog,\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\n        handleSendConfirmDialog: props.handleSendConfirmDialog\n    }\n\n    const updateDialog = {\n        initialValues: (() => {\n            if (!detail) {\n                return {}\n            }\n\n            return {\n                name: _.get(detail, 'name')\n            }\n        })(),\n        updateLoading: detailLoading || updateLoading,\n        openUpdateDialog,\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\n    }\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n\n    const detailData = {\n        id: detailId,\n        data: detail,\n        detailLoading\n    }\n\n    return (\n        <Layout {...layout}>\n            <BrandGridList\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                createDialog={createDialog}\n                confirmDialog={confirmDialog}\n                updateDialog={updateDialog}\n                actionsDialog={actionsDialog}\n            />\n        </Layout>\n    )\n})\n\nexport default BrandList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Brand/BrandList.js","import BrandList from './BrandList'\n\nexport {BrandList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Brand/index.js","import React from 'react'\nimport _ from 'lodash'\nimport sprintf from 'sprintf'\nimport {connect} from 'react-redux'\nimport {reset} from 'redux-form'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport {\n    CASHBOX_CREATE_DIALOG_OPEN,\n    CASHBOX_UPDATE_DIALOG_OPEN,\n    CASHBOX_DELETE_DIALOG_OPEN,\n    CashboxGridList\n} from '../../components/Cashbox'\nimport {\n    cashboxCreateAction,\n    cashboxUpdateAction,\n    cashboxListFetchAction,\n    cashboxDeleteAction,\n    cashboxItemFetchAction\n} from '../../actions/cashbox'\nimport {openSnackbarAction} from '../../actions/snackbar'\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['cashbox', 'item', 'data'])\n        const itemLoading = _.get(state, ['cashbox', 'item', 'loading'])\n        const createLoading = _.get(state, ['cashbox', 'create', 'loading'])\n        const updateLoading = _.get(state, ['cashbox', 'update', 'loading'])\n        const list = _.get(state, ['cashbox', 'list', 'data'])\n        const listLoading = _.get(state, ['cashbox', 'list', 'loading'])\n        const createForm = _.get(state, ['form', 'CashboxCreateForm'])\n        const filter = filterHelper(list, pathname, query)\n\n        return {\n            list,\n            listLoading,\n            detail,\n            itemLoading,\n            createLoading,\n            updateLoading,\n            filter,\n            createForm\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(cashboxListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const cashboxId = _.get(nextProps, ['params', 'cashboxId'])\n        return cashboxId && _.get(props, ['params', 'cashboxId']) !== cashboxId\n    }, ({dispatch, params}) => {\n        const cashboxId = _.toInteger(_.get(params, 'cashboxId'))\n        cashboxId && dispatch(cashboxItemFetchAction(cashboxId))\n    }),\n\n    withHandlers({\n        handleActionEdit: props => () => {\n            return null\n        },\n\n        handleOpenConfirmDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.CASHBOX_ITEM_PATH, id),\n                query: filter.getParams({[CASHBOX_DELETE_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseConfirmDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[CASHBOX_DELETE_DIALOG_OPEN]: false})})\n        },\n        handleSendConfirmDialog: props => () => {\n            const {dispatch, detail, filter, location: {pathname}} = props\n            dispatch(cashboxDeleteAction(detail.id))\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[CASHBOX_DELETE_DIALOG_OPEN]: false})})\n                    dispatch(cashboxListFetchAction(filter))\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\n                })\n                .catch(() => {\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\n                })\n        },\n\n        handleOpenDeleteDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({\n                pathname,\n                query: filter.getParams({openDeleteDialog: 'yes'})\n            })\n        },\n\n        handleCloseDeleteDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({openDeleteDialog: false})})\n        },\n\n        handleOpenCreateDialog: props => () => {\n            const {dispatch, location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[CASHBOX_CREATE_DIALOG_OPEN]: true})})\n            dispatch(reset('CashboxCreateForm'))\n        },\n\n        handleCloseCreateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[CASHBOX_CREATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitCreateDialog: props => () => {\n            const {dispatch, createForm, filter, location: {pathname}} = props\n\n            return dispatch(cashboxCreateAction(_.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[CASHBOX_CREATE_DIALOG_OPEN]: false})})\n                    dispatch(cashboxListFetchAction(filter))\n                })\n        },\n\n        handleOpenUpdateDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.CASHBOX_ITEM_PATH, id),\n                query: filter.getParams({[CASHBOX_UPDATE_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseUpdateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[CASHBOX_UPDATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitUpdateDialog: props => () => {\n            const {dispatch, createForm, filter} = props\n            const cashboxId = _.toInteger(_.get(props, ['params', 'cashboxId']))\n\n            return dispatch(cashboxUpdateAction(cashboxId, _.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(cashboxItemFetchAction(cashboxId))\n                })\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push(filter.createURL({[CASHBOX_UPDATE_DIALOG_OPEN]: false}))\n                    dispatch(cashboxListFetchAction(filter))\n                })\n        }\n    })\n)\n\nconst CashboxList = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        detail,\n        itemLoading,\n        createLoading,\n        updateLoading,\n        filter,\n        layout,\n        params\n    } = props\n\n    const openCreateDialog = toBoolean(_.get(location, ['query', CASHBOX_CREATE_DIALOG_OPEN]))\n    const openUpdateDialog = toBoolean(_.get(location, ['query', CASHBOX_UPDATE_DIALOG_OPEN]))\n    const openConfirmDialog = toBoolean(_.get(location, ['query', CASHBOX_DELETE_DIALOG_OPEN]))\n    const detailId = _.toInteger(_.get(params, 'cashboxId'))\n\n    const actionsDialog = {\n        handleActionEdit: props.handleActionEdit,\n        handleActionDelete: props.handleOpenDeleteDialog\n    }\n\n    const createDialog = {\n        createLoading,\n        openCreateDialog,\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\n    }\n\n    const confirmDialog = {\n        confirmLoading: itemLoading,\n        openConfirmDialog: openConfirmDialog,\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\n        handleSendConfirmDialog: props.handleSendConfirmDialog\n    }\n\n    const updateDialog = {\n        initialValues: (() => {\n            if (!detail || openCreateDialog) {\n                return {}\n            }\n\n            return {\n                name: _.get(detail, 'name'),\n                currency: {\n                    value: _.get(detail, 'currency')\n                },\n                cashier: {\n                    value: _.get(detail, 'cashier')\n                },\n                type: {\n                    value: _.get(detail, 'type')\n                }\n            }\n        })(),\n        updateLoading: itemLoading || updateLoading,\n        openUpdateDialog,\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\n    }\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n\n    const detailData = {\n        id: detailId,\n        data: detail,\n        itemLoading\n    }\n\n    return (\n        <Layout {...layout}>\n            <CashboxGridList\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                createDialog={createDialog}\n                confirmDialog={confirmDialog}\n                updateDialog={updateDialog}\n                actionsDialog={actionsDialog}\n            />\n        </Layout>\n    )\n})\n\nexport default CashboxList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Cashbox/CashboxList.js","import CashboxList from './CashboxList'\n\nexport {CashboxList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Cashbox/index.js","import React from 'react'\nimport _ from 'lodash'\nimport sprintf from 'sprintf'\nimport {connect} from 'react-redux'\nimport {reset} from 'redux-form'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withState, withHandlers} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport {\n    CLIENT_CREATE_DIALOG_OPEN,\n    CLIENT_UPDATE_DIALOG_OPEN,\n    ClientGridList\n} from '../../components/Client'\nimport {\n    clientCreateAction,\n    clientUpdateAction,\n    clientListFetchAction,\n    clientDeleteAction,\n    clientItemFetchAction\n} from '../../actions/client'\nimport {openSnackbarAction} from '../../actions/snackbar'\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['client', 'item', 'data'])\n        const detailLoading = _.get(state, ['client', 'item', 'loading'])\n        const createLoading = _.get(state, ['client', 'create', 'loading'])\n        const updateLoading = _.get(state, ['client', 'update', 'loading'])\n        const list = _.get(state, ['client', 'list', 'data'])\n        const listLoading = _.get(state, ['client', 'list', 'loading'])\n        const createForm = _.get(state, ['form', 'ClientCreateForm'])\n        const filter = filterHelper(list, pathname, query)\n\n        return {\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            createLoading,\n            updateLoading,\n            filter,\n            createForm\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(clientListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const clientId = _.get(nextProps, ['params', 'clientId'])\n        return clientId && _.get(props, ['params', 'clientId']) !== clientId\n    }, ({dispatch, params}) => {\n        const clientId = _.toInteger(_.get(params, 'clientId'))\n        clientId && dispatch(clientItemFetchAction(clientId))\n    }),\n\n    withState('openConfirmDialog', 'setOpenConfirmDialog', false),\n\n    withHandlers({\n        handleActionEdit: props => () => {\n            return null\n        },\n\n        handleOpenConfirmDialog: props => () => {\n            const {setOpenConfirmDialog} = props\n            setOpenConfirmDialog(true)\n        },\n\n        handleCloseConfirmDialog: props => () => {\n            const {setOpenConfirmDialog} = props\n            setOpenConfirmDialog(false)\n        },\n        handleSendConfirmDialog: props => () => {\n            const {dispatch, detail, setOpenConfirmDialog, filter} = props\n            dispatch(clientDeleteAction(detail.id))\n                .then(() => {\n                    setOpenConfirmDialog(false)\n                    dispatch(clientListFetchAction(filter))\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\n                })\n                .catch(() => {\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\n                })\n        },\n\n        handleOpenCreateDialog: props => () => {\n            const {dispatch, location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[CLIENT_CREATE_DIALOG_OPEN]: true})})\n            dispatch(reset('ClientCreateForm'))\n        },\n\n        handleCloseCreateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[CLIENT_CREATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitCreateDialog: props => () => {\n            const {dispatch, createForm, filter} = props\n\n            return dispatch(clientCreateAction(_.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    dispatch(clientListFetchAction(filter))\n                    hashHistory.push(filter.createURL({[CLIENT_CREATE_DIALOG_OPEN]: false}))\n                })\n        },\n\n        handleOpenUpdateDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.CLIENT_ITEM_PATH, id),\n                query: filter.getParams({[CLIENT_UPDATE_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseUpdateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[CLIENT_UPDATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitUpdateDialog: props => () => {\n            const {dispatch, createForm, filter} = props\n            const clientId = _.toInteger(_.get(props, ['params', 'clientId']))\n\n            return dispatch(clientUpdateAction(clientId, _.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(clientItemFetchAction(clientId))\n                })\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push(filter.createURL({[CLIENT_UPDATE_DIALOG_OPEN]: false}))\n                    dispatch(clientListFetchAction(filter))\n                })\n        },\n\n        handleCloseDetail: props => () => {\n            const {filter} = props\n            hashHistory.push({pathname: ROUTER.CLIENT_LIST_URL, query: filter.getParams()})\n        }\n    })\n)\n\nconst ClientList = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        createLoading,\n        updateLoading,\n        filter,\n        layout,\n        params\n    } = props\n\n    const openCreateDialog = toBoolean(_.get(location, ['query', CLIENT_CREATE_DIALOG_OPEN]))\n    const openUpdateDialog = toBoolean(_.get(location, ['query', CLIENT_UPDATE_DIALOG_OPEN]))\n    const detailId = _.toInteger(_.get(params, 'clientId'))\n    const tab = _.get(params, 'tab')\n\n    const createDialog = {\n        createLoading,\n        openCreateDialog,\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\n    }\n\n    const confirmDialog = {\n        openConfirmDialog: props.openConfirmDialog,\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\n        handleSendConfirmDialog: props.handleSendConfirmDialog\n    }\n\n    const updateDialog = {\n        initialValues: (() => {\n            if (!detail || openCreateDialog) {\n                return {\n                    contacts: [{}]\n                }\n            }\n\n            const contacts = _(detail).get('contacts').map((contact) => {\n                return {\n                    name: _.get(contact, 'name'),\n                    email: _.get(contact, 'email'),\n                    telephone: _.get(contact, 'telephone'),\n                    id: _.get(contact, 'id')\n\n                }\n            })\n\n            return {\n                name: _.get(detail, 'name'),\n                address: _.get(detail, 'address'),\n                contacts: _.union(contacts, [{}])\n            }\n        })(),\n        updateLoading: detailLoading || updateLoading,\n        openUpdateDialog,\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\n    }\n\n    const tabData = {\n        tab,\n        handleTabChange: props.handleTabChange\n    }\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n\n    const detailData = {\n        id: detailId,\n        data: detail,\n        detailLoading,\n        handleCloseDetail: props.handleCloseDetail\n    }\n\n    return (\n        <Layout {...layout}>\n            <ClientGridList\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                tabData={tabData}\n                createDialog={createDialog}\n                confirmDialog={confirmDialog}\n                updateDialog={updateDialog}\n            />\n        </Layout>\n    )\n})\n\nexport default ClientList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Client/ClientList.js","import ClientList from './ClientList'\n\nexport {ClientList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Client/index.js","import React from 'react'\nimport moment from 'moment'\nimport _ from 'lodash'\nimport sprintf from 'sprintf'\nimport {connect} from 'react-redux'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withState, withHandlers} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport {\n    CLIENT_BALANCE_INFO_DIALOG_OPEN,\n    CLIENT_BALANCE_FILTER_KEY,\n    CLIENT_BALANCE_FILTER_OPEN,\n    ClientBalanceGridList\n} from '../../components/ClientBalance'\nimport {\n    clientBalanceListFetchAction,\n    clientBalanceItemFetchAction\n} from '../../actions/clientBalance'\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['clientBalance', 'item', 'data'])\n        const detailLoading = _.get(state, ['clientBalance', 'item', 'loading'])\n        const createLoading = _.get(state, ['clientBalance', 'create', 'loading'])\n        const updateLoading = _.get(state, ['clientBalance', 'update', 'loading'])\n        const list = _.get(state, ['clientBalance', 'list', 'data'])\n        const listLoading = _.get(state, ['clientBalance', 'list', 'loading'])\n        const filterForm = _.get(state, ['form', 'ClientBalanceFilterForm'])\n        const createForm = _.get(state, ['form', 'ClientBalanceCreateForm'])\n        const filter = filterHelper(list, pathname, query)\n        const filterItem = filterHelper(detail, pathname, query, {'page': 'dPage', 'pageSize': 'dPageSize'})\n\n        return {\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            createLoading,\n            updateLoading,\n            filter,\n            filterItem,\n            filterForm,\n            createForm\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest() &&\n            toBoolean(_.get(nextProps, ['location', 'query', CLIENT_BALANCE_INFO_DIALOG_OPEN])) === false\n    }, ({dispatch, filter}) => {\n        dispatch(clientBalanceListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const clientBalanceId = _.get(nextProps, ['params', 'clientBalanceId'])\n        return clientBalanceId && (_.get(props, ['params', 'clientBalanceId']) !== clientBalanceId ||\n            props.filterItem.filterRequest() !== nextProps.filterItem.filterRequest())\n    }, ({dispatch, params, filterItem}) => {\n        const clientBalanceId = _.toInteger(_.get(params, 'clientBalanceId'))\n        clientBalanceId && dispatch(clientBalanceItemFetchAction(filterItem, clientBalanceId))\n    }),\n\n    withState('openConfirmDialog', 'setOpenConfirmDialog', false),\n\n    withHandlers({\n        handleOpenFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[CLIENT_BALANCE_FILTER_OPEN]: true})})\n        },\n\n        handleCloseFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[CLIENT_BALANCE_FILTER_OPEN]: false})})\n        },\n\n        handleClearFilterDialog: props => () => {\n            const {location: {pathname}} = props\n            hashHistory.push({pathname, query: {}})\n        },\n\n        handleSubmitFilterDialog: props => () => {\n            const {filter, filterForm} = props\n            const fromDate = _.get(filterForm, ['values', 'date', 'fromDate']) || null\n            const toDate = _.get(filterForm, ['values', 'date', 'toDate']) || null\n\n            filter.filterBy({\n                [CLIENT_BALANCE_FILTER_OPEN]: false,\n                [CLIENT_BALANCE_FILTER_KEY.FROM_DATE]: fromDate && fromDate.format('YYYY-MM-DD'),\n                [CLIENT_BALANCE_FILTER_KEY.TO_DATE]: toDate && toDate.format('YYYY-MM-DD')\n            })\n        },\n\n        handleOpenInfoDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.CLIENT_BALANCE_ITEM_PATH, id),\n                query: filter.getParams({[CLIENT_BALANCE_INFO_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseInfoDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[CLIENT_BALANCE_INFO_DIALOG_OPEN]: false, 'dPage': null, 'dPageSize': null})})\n        }\n    })\n)\n\nconst ClientBalanceList = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        filter,\n        filterItem,\n        layout,\n        params\n    } = props\n\n    const openFilterDialog = toBoolean(_.get(location, ['query', CLIENT_BALANCE_FILTER_OPEN]))\n    const openInfoDialog = toBoolean(_.get(location, ['query', CLIENT_BALANCE_INFO_DIALOG_OPEN]))\n    const fromDate = filter.getParam(CLIENT_BALANCE_FILTER_KEY.FROM_DATE)\n    const toDate = filter.getParam(CLIENT_BALANCE_FILTER_KEY.TO_DATE)\n    const detailId = _.toInteger(_.get(params, 'clientBalanceId'))\n\n    const infoDialog = {\n        updateLoading: detailLoading,\n        openInfoDialog,\n        handleOpenInfoDialog: props.handleOpenInfoDialog,\n        handleCloseInfoDialog: props.handleCloseInfoDialog\n    }\n\n    const filterDialog = {\n        initialValues: {\n            date: {\n                fromDate: fromDate && moment(fromDate, 'YYYY-MM-DD'),\n                toDate: toDate && moment(toDate, 'YYYY-MM-DD')\n            }\n        },\n        filterLoading: false,\n        openFilterDialog,\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\n        handleClearFilterDialog: props.handleClearFilterDialog,\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\n    }\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n\n    const detailData = {\n        id: detailId,\n        data: _.get(detail, 'results'),\n        detailLoading\n    }\n\n    return (\n        <Layout {...layout}>\n            <ClientBalanceGridList\n                filter={filter}\n                filterItem={filterItem}\n                listData={listData}\n                detailData={detailData}\n                infoDialog={infoDialog}\n                filterDialog={filterDialog}\n            />\n        </Layout>\n    )\n})\n\nexport default ClientBalanceList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/ClientBalance/ClientBalanceList.js","import ClientBalanceList from './ClientBalanceList'\n\nexport {ClientBalanceList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/ClientBalance/index.js","import React from 'react'\nimport _ from 'lodash'\nimport sprintf from 'sprintf'\nimport moment from 'moment'\nimport {connect} from 'react-redux'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport {\n    CLIENT_TRANSACTION_CREATE_EXPENSE_DIALOG_OPEN,\n    CLIENT_TRANSACTION_CREATE_INCOME_DIALOG_OPEN,\n    CLIENT_TRANSACTION_UPDATE_EXPENSE_DIALOG_OPEN,\n    CLIENT_TRANSACTION_UPDATE_INCOME_DIALOG_OPEN,\n    CLIENT_TRANSACTION_CREATE_SEND_DIALOG_OPEN,\n    CLIENT_TRANSACTION_DELETE_DIALOG_OPEN,\n    CLIENT_TRANSACTION_FILTER_KEY,\n    CLIENT_TRANSACTION_FILTER_OPEN,\n    ClientTransactionGridList\n} from '../../components/ClientTransaction'\nimport {\n    clientTransactionCreateExpenseAction,\n    clientTransactionCreateIncomeAction,\n    clientTransactionCreateSendAction,\n    clientTransactionListFetchAction,\n    clientTransactionDeleteAction\n} from '../../actions/clientTransaction'\nimport {\n    clientListFetchAction\n} from '../../actions/client'\nimport {openSnackbarAction} from '../../actions/snackbar'\n\nconst ZERO = 0\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['clientTransaction', 'item', 'data'])\n        const detailLoading = _.get(state, ['clientTransaction', 'item', 'loading'])\n        const createLoading = _.get(state, ['clientTransaction', 'create', 'loading'])\n        const updateLoading = _.get(state, ['clientTransaction', 'update', 'loading'])\n        const list = _.get(state, ['clientTransaction', 'list', 'data'])\n        const clientList = _.get(state, ['client', 'list', 'data'])\n        const clientListLoading = _.get(state, ['client', 'list', 'loading'])\n        const listLoading = _.get(state, ['clientTransaction', 'list', 'loading'])\n        const filterForm = _.get(state, ['form', 'ClientTransactionFilterForm'])\n        const createForm = _.get(state, ['form', 'ClientTransactionCreateForm'])\n        const filter = filterHelper(list, pathname, query)\n        const filterClient = filterHelper(clientList, pathname, query)\n        return {\n            list,\n            clientList,\n            clientListLoading,\n            listLoading,\n            detail,\n            detailLoading,\n            createLoading,\n            updateLoading,\n            filter,\n            filterClient,\n            filterForm,\n            createForm\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return (!nextProps.clientListLoading && _.isNil(nextProps.clientList)) ||\n            (props.filterClient.filterRequest() !== nextProps.filterClient.filterRequest())\n    }, ({dispatch, filterClient}) => {\n        dispatch(clientListFetchAction(filterClient))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        return (props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()) ||\n            (_.get(props, ['params', 'clientTransactionId']) !== _.get(nextProps, ['params', 'clientTransactionId']))\n    }, ({dispatch, filter, params}) => {\n        const clientId = _.toInteger(_.get(params, 'clientTransactionId'))\n        dispatch(clientTransactionListFetchAction(filter, clientId === ZERO ? null : clientId))\n    }),\n\n    withHandlers({\n        handleActionEdit: props => () => {\n            return null\n        },\n\n        handleOpenDeleteDialog: props => () => {\n            return null\n        },\n\n        handleOpenConfirmDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.CLIENT_TRANSACTION_ITEM_PATH, id),\n                query: filter.getParams({[CLIENT_TRANSACTION_DELETE_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseConfirmDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[CLIENT_TRANSACTION_DELETE_DIALOG_OPEN]: false})})\n        },\n        handleExpenseConfirmDialog: props => () => {\n            const {dispatch, detail, filter, location: {pathname}, clientId} = props\n            dispatch(clientTransactionDeleteAction(detail.id))\n                .catch(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\n                })\n                .then(() => {\n                    hashHistory.push({\n                        pathname,\n                        query: filter.getParams({[CLIENT_TRANSACTION_DELETE_DIALOG_OPEN]: false})\n                    })\n                    dispatch(clientTransactionListFetchAction(filter, clientId))\n                })\n        },\n\n        handleOpenFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[CLIENT_TRANSACTION_FILTER_OPEN]: true})})\n        },\n\n        handleCloseFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[CLIENT_TRANSACTION_FILTER_OPEN]: false})})\n        },\n\n        handleClearFilterDialog: props => () => {\n            const {location: {pathname}} = props\n            hashHistory.push({pathname, query: {}})\n        },\n\n        handleSubmitFilterDialog: props => () => {\n            const {filter, filterForm} = props\n            const fromDate = _.get(filterForm, ['values', 'date', 'fromDate']) || null\n            const toDate = _.get(filterForm, ['values', 'date', 'toDate']) || null\n            const type = _.get(filterForm, ['values', 'type', 'value']) || null\n            const categoryExpense = _.get(filterForm, ['values', 'categoryExpense', 'value']) || null\n\n            filter.filterBy({\n                [CLIENT_TRANSACTION_FILTER_OPEN]: false,\n                [CLIENT_TRANSACTION_FILTER_KEY.TYPE]: type,\n                [CLIENT_TRANSACTION_FILTER_KEY.CATEGORY_EXPENSE]: categoryExpense,\n                [CLIENT_TRANSACTION_FILTER_KEY.FROM_DATE]: fromDate && fromDate.format('YYYY-MM-DD'),\n                [CLIENT_TRANSACTION_FILTER_KEY.TO_DATE]: toDate && toDate.format('YYYY-MM-DD')\n            })\n        },\n\n        handleOpenCreateExpenseDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({\n                pathname,\n                query: filter.getParams({[CLIENT_TRANSACTION_CREATE_EXPENSE_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseCreateExpenseDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({\n                pathname,\n                query: filter.getParams({[CLIENT_TRANSACTION_CREATE_EXPENSE_DIALOG_OPEN]: false})\n            })\n        },\n\n        handleSubmitCreateExpenseDialog: props => () => {\n            const {dispatch, createForm, filter, location: {pathname}, params} = props\n            const clientId = _.get(params, 'clientTransactionId')\n            return dispatch(clientTransactionCreateExpenseAction(_.get(createForm, ['values']), clientId))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push({\n                        pathname,\n                        query: filter.getParams({[CLIENT_TRANSACTION_CREATE_EXPENSE_DIALOG_OPEN]: false})\n                    })\n                    dispatch(clientTransactionListFetchAction(filter, clientId))\n                })\n        },\n\n        handleOpenCreateIncomeDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({\n                pathname,\n                query: filter.getParams({[CLIENT_TRANSACTION_CREATE_INCOME_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseCreateIncomeDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({\n                pathname,\n                query: filter.getParams({[CLIENT_TRANSACTION_CREATE_INCOME_DIALOG_OPEN]: false})\n            })\n        },\n\n        handleSubmitCreateIncomeDialog: props => () => {\n            const {dispatch, createForm, filter, location: {pathname}, params} = props\n            const clientId = _.get(params, 'clientTransactionId')\n            return dispatch(clientTransactionCreateIncomeAction(_.get(createForm, ['values']), clientId))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push({\n                        pathname,\n                        query: filter.getParams({[CLIENT_TRANSACTION_CREATE_INCOME_DIALOG_OPEN]: false})\n                    })\n                    dispatch(clientTransactionListFetchAction(filter, clientId))\n                })\n        },\n\n        handleOpenCreateSendDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[CLIENT_TRANSACTION_CREATE_SEND_DIALOG_OPEN]: true})})\n        },\n\n        handleCloseCreateSendDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[CLIENT_TRANSACTION_CREATE_SEND_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitCreateSendDialog: props => () => {\n            const {dispatch, createForm, filter, location: {pathname}, clientId} = props\n            return dispatch(clientTransactionCreateSendAction(_.get(createForm, ['values']), clientId))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push({\n                        pathname,\n                        query: filter.getParams({[CLIENT_TRANSACTION_CREATE_SEND_DIALOG_OPEN]: false})\n                    })\n                    dispatch(clientTransactionListFetchAction(filter))\n                    dispatch(clientListFetchAction(filter))\n                })\n        },\n\n        handleClickClient: props => (id) => {\n            hashHistory.push({pathname: sprintf(ROUTER.CLIENT_TRANSACTION_ITEM_PATH, _.toInteger(id)), query: {}})\n        }\n    })\n)\n\nconst ClientTransactionList = enhance((props) => {\n    const {\n        location,\n        list,\n        clientList,\n        clientListLoading,\n        listLoading,\n        detail,\n        detailLoading,\n        createLoading,\n        updateLoading,\n        filter,\n        filterClient,\n        layout,\n        params\n    } = props\n\n    const openFilterDialog = toBoolean(_.get(location, ['query', CLIENT_TRANSACTION_FILTER_OPEN]))\n    const openCreateExpenseDialog = toBoolean(_.get(location, ['query', CLIENT_TRANSACTION_CREATE_EXPENSE_DIALOG_OPEN]))\n    const openCreateIncomeDialog = toBoolean(_.get(location, ['query', CLIENT_TRANSACTION_CREATE_INCOME_DIALOG_OPEN]))\n    const openUpdateExpenseDialog = toBoolean(_.get(location, ['query', CLIENT_TRANSACTION_UPDATE_EXPENSE_DIALOG_OPEN]))\n    const openUpdateIncomeDialog = toBoolean(_.get(location, ['query', CLIENT_TRANSACTION_UPDATE_INCOME_DIALOG_OPEN]))\n    const openCreateSendDialog = toBoolean(_.get(location, ['query', CLIENT_TRANSACTION_CREATE_SEND_DIALOG_OPEN]))\n    const openConfirmDialog = toBoolean(_.get(location, ['query', CLIENT_TRANSACTION_DELETE_DIALOG_OPEN]))\n\n    const categoryExpense = _.toInteger(filter.getParam(CLIENT_TRANSACTION_FILTER_KEY.CATEGORY_EXPENSE))\n    const type = _.toInteger(filter.getParam(CLIENT_TRANSACTION_FILTER_KEY.TYPE))\n    const fromDate = filter.getParam(CLIENT_TRANSACTION_FILTER_KEY.FROM_DATE)\n    const toDate = filter.getParam(CLIENT_TRANSACTION_FILTER_KEY.TO_DATE)\n    const detailId = _.toInteger(_.get(params, 'clientTransactionId'))\n\n    const actionsDialog = {\n        handleActionEdit: props.handleActionEdit,\n        handleActionDelete: props.handleOpenDeleteDialog\n    }\n\n    const createExpenseDialog = {\n        loading: createLoading,\n        open: openCreateExpenseDialog,\n        handleOpenDialog: props.handleOpenCreateExpenseDialog,\n        handleCloseDialog: props.handleCloseCreateExpenseDialog,\n        handleSubmitDialog: props.handleSubmitCreateExpenseDialog\n    }\n\n    const createIncomeDialog = {\n        loading: createLoading,\n        open: openCreateIncomeDialog,\n        handleOpenDialog: props.handleOpenCreateIncomeDialog,\n        handleCloseDialog: props.handleCloseCreateIncomeDialog,\n        handleSubmitDialog: props.handleSubmitCreateIncomeDialog\n    }\n\n    const createSendDialog = {\n        loading: createLoading,\n        open: openCreateSendDialog,\n        handleOpenDialog: props.handleOpenCreateSendDialog,\n        handleCloseDialog: props.handleCloseCreateSendDialog,\n        handleSubmitDialog: props.handleSubmitCreateSendDialog\n    }\n\n    const updateExpenseDialog = {\n        initialValues: (() => {\n            if (!detailId || openUpdateExpenseDialog) {\n                return {}\n            }\n            return {\n                comment: _.get(detail, 'comment'),\n                category: {\n                    value: _.get(detail, ['expanseCategory', 'id'])\n                },\n                amount: _.get(detail, 'amount')\n            }\n        })(),\n        loading: updateLoading,\n        open: openUpdateExpenseDialog,\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\n        handleCloseUpdateDialog: props.handleCloseUpdateExpenseDialog,\n        handleSubmitUpdateDialog: props.handleSubmitUpdateExpenseDialog\n    }\n\n    const updateIncomeDialog = {\n        initialValues: (() => {\n            if (!detailId || openCreateIncomeDialog) {\n                return {}\n            }\n\n            return {\n                comment: _.get(detail, 'comment'),\n                amount: _.get(detail, 'amount')\n            }\n        })(),\n        loading: updateLoading,\n        open: openUpdateIncomeDialog,\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\n        handleCloseUpdateDialog: props.handleCloseUpdateIncomeDialog,\n        handleSubmitUpdateDialog: props.handleSubmitUpdateIncomeDialog\n    }\n\n    const confirmDialog = {\n        open: openConfirmDialog,\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\n        handleExpenseConfirmDialog: props.handleExpenseConfirmDialog\n    }\n\n    const filterDialog = {\n        initialValues: {\n            category: {\n                value: categoryExpense\n            },\n            type: {\n                value: type\n            },\n            date: {\n                fromDate: fromDate && moment(fromDate, 'YYYY-MM-DD'),\n                toDate: toDate && moment(toDate, 'YYYY-MM-DD')\n            }\n        },\n        filterLoading: false,\n        openFilterDialog,\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\n        handleClearFilterDialog: props.handleClearFilterDialog,\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\n    }\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n\n    const clientData = {\n        data: _.get(clientList, 'results'),\n        handleClickClient: props.handleClickClient,\n        clientId: _.toInteger(detailId),\n        listLoading\n\n    }\n\n    const detailData = {\n        id: detailId,\n        data: detail,\n        detailLoading\n    }\n\n    return (\n        <Layout {...layout}>\n            <ClientTransactionGridList\n                filterClient={filterClient}\n                filter={filter}\n                listData={listData}\n                clientListLoading={clientListLoading}\n                clientData={clientData}\n                detailData={detailData}\n                createExpenseDialog={createExpenseDialog}\n                createIncomeDialog={createIncomeDialog}\n                updateIncomeDialog={updateIncomeDialog}\n                updateExpenseDialog={updateExpenseDialog}\n                createSendDialog={createSendDialog}\n                confirmDialog={confirmDialog}\n                actionsDialog={actionsDialog}\n                filterDialog={filterDialog}\n            />\n        </Layout>\n    )\n})\n\nexport default ClientTransactionList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/ClientTransaction/ClientTransactionList.js","import ClientTransactionList from './ClientTransactionList'\n\nexport {ClientTransactionList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/ClientTransaction/index.js","import React from 'react'\nimport _ from 'lodash'\nimport {reset} from 'redux-form'\nimport sprintf from 'sprintf'\nimport {connect} from 'react-redux'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withState, withHandlers} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport {\n    CURRENCY_CREATE_DIALOG_OPEN,\n    CURRENCY_UPDATE_DIALOG_OPEN,\n    ADD_COURSE_DIALOG_OPEN,\n    CurrencyGridList\n} from '../../components/Currency'\nimport {\n    courseCreateAction,\n    currencyCreateAction,\n    currencyUpdateAction,\n    currencyListFetchAction,\n    currencyDeleteAction,\n    currencyItemFetchAction\n} from '../../actions/currency'\nimport {openSnackbarAction} from '../../actions/snackbar'\n\nconst ZERO = 0\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['currency', 'item', 'data'])\n        const detailLoading = _.get(state, ['currency', 'item', 'loading'])\n        const createLoading = _.get(state, ['currency', 'create', 'loading'])\n        const updateLoading = _.get(state, ['currency', 'update', 'loading'])\n        const list = _.get(state, ['currency', 'list', 'data'])\n        const listLoading = _.get(state, ['currency', 'list', 'loading'])\n        const createForm = _.get(state, ['form', 'CurrencyCreateForm'])\n        const courseForm = _.get(state, ['form', 'AddCourseForm'])\n        const baseCreateForm = _.get(state, ['form', 'BaseCurrencyCreateForm'])\n        const detailId = _.toInteger(_.get(props, ['params', 'currencyId']) || '-1')\n        const detailFilter = filterHelper(detail, pathname, query)\n        const filter = filterHelper(list, pathname, query)\n        return {\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            createLoading,\n            updateLoading,\n            filter,\n            baseCreateForm,\n            createForm,\n            courseForm,\n            detailId,\n            detailFilter\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(currencyListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const currencyId = _.get(nextProps, ['params', 'currencyId'])\n        return (currencyId && _.get(props, ['params', 'currencyId']) !== currencyId) ||\n            props.detailFilter.filterRequest() !== nextProps.detailFilter.filterRequest()\n    }, ({dispatch, params, detailFilter}) => {\n        const currencyId = _.toInteger(_.get(params, 'currencyId'))\n        currencyId && dispatch(currencyItemFetchAction(detailFilter, currencyId))\n    }),\n\n    withState('openConfirmDialog', 'setOpenConfirmDialog', false),\n\n    withHandlers({\n        handleActionEdit: props => () => {\n            return null\n        },\n\n        handleOpenConfirmDialog: props => () => {\n            const {setOpenConfirmDialog} = props\n            setOpenConfirmDialog(true)\n        },\n\n        handleCloseConfirmDialog: props => () => {\n            const {setOpenConfirmDialog} = props\n            setOpenConfirmDialog(false)\n        },\n        handleSendConfirmDialog: props => () => {\n            const {dispatch, detailId, filter, setOpenConfirmDialog} = props\n            dispatch(currencyDeleteAction(_.toNumber(detailId)))\n                .then(() => {\n                    setOpenConfirmDialog(false)\n                    dispatch(currencyListFetchAction(filter))\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\n                })\n                .catch(() => {\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\n                })\n        },\n\n        handleOpenDeleteDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({\n                pathname,\n                query: filter.getParams({openDeleteDialog: 'yes'})\n            })\n        },\n\n        handleCloseDeleteDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({openDeleteDialog: false})})\n        },\n\n        handleOpenCourseDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[ADD_COURSE_DIALOG_OPEN]: true})})\n        },\n\n        handleCloseCourseDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[ADD_COURSE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitCourseDialog: props => () => {\n            const {location: {pathname}, dispatch, courseForm, filter, params} = props\n            const currency = _.get(params, 'currencyId')\n            return dispatch(courseCreateAction(_.get(courseForm, ['values']), currency))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Курс обновлен'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[ADD_COURSE_DIALOG_OPEN]: false})})\n                    dispatch(currencyListFetchAction(filter))\n                    dispatch(reset('AddCourseForm'))\n                })\n        },\n\n        handleOpenCreateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[CURRENCY_CREATE_DIALOG_OPEN]: true})})\n        },\n\n        handleCloseCreateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[CURRENCY_CREATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitCreateDialog: props => () => {\n            const {location: {pathname}, dispatch, createForm, filter} = props\n\n            return dispatch(currencyCreateAction(_.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[CURRENCY_CREATE_DIALOG_OPEN]: false})})\n                    dispatch(currencyListFetchAction(filter))\n                })\n        },\n\n        handleOpenUpdateDialog: props => (id) => {\n            const {dispatch, filter, location: {pathname}} = props\n            hashHistory.push({\n                pathname,\n                query: filter.getParams({[CURRENCY_UPDATE_DIALOG_OPEN]: true})\n            })\n            dispatch(currencyItemFetchAction(id))\n        },\n\n        handleCloseUpdateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({\n                pathname,\n                query: filter.getParams({[CURRENCY_UPDATE_DIALOG_OPEN]: false})\n            })\n        },\n\n        handleSubmitUpdateDialog: props => () => {\n            const {dispatch, createForm, filter, detailId} = props\n\n            return dispatch(currencyUpdateAction(detailId, _.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push(filter.createURL({[CURRENCY_UPDATE_DIALOG_OPEN]: false}))\n                    dispatch(currencyListFetchAction(filter))\n                })\n        },\n\n        handleCurrencyClick: props => (id) => {\n            const {filter} = props\n            hashHistory.push({pathname: sprintf(ROUTER.CURRENCY_ITEM_PATH, _.toNumber(id)), query: filter.getParams()})\n        }\n    })\n)\n\nconst CurrencyList = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        createLoading,\n        updateLoading,\n        openConfirmDialog,\n        filter,\n        layout,\n        params,\n        detailId,\n        detailFilter\n    } = props\n\n    const openCreateDialog = toBoolean(_.get(location, ['query', CURRENCY_CREATE_DIALOG_OPEN]))\n    const openCourseDialog = toBoolean(_.get(location, ['query', ADD_COURSE_DIALOG_OPEN]))\n    const openUpdateDialog = toBoolean(_.get(location, ['query', CURRENCY_UPDATE_DIALOG_OPEN]))\n\n    if (_.get(list, ['results']) && !_.get(params, 'currencyId')) {\n        const currencyMiniId = _.get(_.nth(_.get(list, ['results']), ZERO), 'id')\n        props.handleCurrencyClick(currencyMiniId)\n    }\n\n    const currencyDetailId = _.toInteger(_.get(params, 'currencyId'))\n\n    const actionsDialog = {\n        handleActionEdit: props.handleActionEdit,\n        handleActionDelete: props.handleOpenDeleteDialog\n    }\n\n    const createDialog = {\n        initialValues: (() => {\n            return {}\n        })(),\n        createLoading,\n        openCreateDialog,\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\n    }\n    const courseDialog = {\n        initialValues: (() => {\n            return {}\n        })(),\n        openCourseDialog,\n        handleOpenCourseDialog: props.handleOpenCourseDialog,\n        handleCloseCourseDialog: props.handleCloseCourseDialog,\n        handleSubmitCourseDialog: props.handleSubmitCourseDialog\n    }\n\n    const confirmDialog = {\n        openConfirmDialog: openConfirmDialog,\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\n        handleSendConfirmDialog: props.handleSendConfirmDialog\n    }\n\n    const updateDialog = {\n        initialValues: (() => {\n            const currencyName = _.get(_.find((_.get(list, 'results')), {'id': detailId}), 'name')\n            const currencyRate = _.get(_.find((_.get(list, 'results')), {'id': detailId}), 'rate')\n            if (!currencyName || openCreateDialog) {\n                return {}\n            }\n            return {\n                name: currencyName,\n                rate: currencyRate\n            }\n        })(),\n        updateLoading: detailLoading || updateLoading,\n        openUpdateDialog,\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\n    }\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading,\n        handleCurrencyClick: props.handleCurrencyClick\n    }\n\n    const detailData = {\n        id: currencyDetailId,\n        data: detail,\n        detailLoading\n    }\n\n    return (\n        <Layout {...layout}>\n            <CurrencyGridList\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                createDialog={createDialog}\n                courseDialog={courseDialog}\n                confirmDialog={confirmDialog}\n                updateDialog={updateDialog}\n                actionsDialog={actionsDialog}\n                detailId={detailId}\n                detailFilter={detailFilter}\n            />\n        </Layout>\n    )\n})\n\nexport default CurrencyList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Currency/CurrencyList.js","import CurrencyList from './CurrencyList'\n\nexport {CurrencyList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Currency/index.js","import React from 'react'\nimport _ from 'lodash'\nimport sprintf from 'sprintf'\nimport {reset} from 'redux-form'\nimport {connect} from 'react-redux'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport {\n    EQUIPMENT_CREATE_DIALOG_OPEN,\n    EQUIPMENT_UPDATE_DIALOG_OPEN,\n    EQUIPMENT_DELETE_DIALOG_OPEN,\n    EquipmentGridList\n} from '../../components/Equipment'\nimport {\n    equipmentCreateAction,\n    equipmentUpdateAction,\n    equipmentListFetchAction,\n    equipmentDeleteAction,\n    equipmentItemFetchAction\n} from '../../actions/equipment'\nimport {openSnackbarAction} from '../../actions/snackbar'\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['equipment', 'item', 'data'])\n        const detailLoading = _.get(state, ['equipment', 'item', 'loading'])\n        const createLoading = _.get(state, ['equipment', 'create', 'loading'])\n        const updateLoading = _.get(state, ['equipment', 'update', 'loading'])\n        const list = _.get(state, ['equipment', 'list', 'data'])\n        const listLoading = _.get(state, ['equipment', 'list', 'loading'])\n        const createForm = _.get(state, ['form', 'EquipmentCreateForm'])\n        const filter = filterHelper(list, pathname, query)\n\n        return {\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            createLoading,\n            updateLoading,\n            filter,\n            createForm\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(equipmentListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const equipmentId = _.get(nextProps, ['params', 'equipmentId'])\n        return equipmentId && _.get(props, ['params', 'equipmentId']) !== equipmentId\n    }, ({dispatch, params}) => {\n        const equipmentId = _.toInteger(_.get(params, 'equipmentId'))\n        equipmentId && dispatch(equipmentItemFetchAction(equipmentId))\n    }),\n\n    withHandlers({\n        handleActionEdit: props => () => {\n            return null\n        },\n        handleOpenDeleteDialog: props => () => {\n            return null\n        },\n\n        handleOpenConfirmDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.EQUIPMENT_ITEM_PATH, id),\n                query: filter.getParams({[EQUIPMENT_DELETE_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseConfirmDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[EQUIPMENT_DELETE_DIALOG_OPEN]: false})})\n        },\n\n        handleSendConfirmDialog: props => () => {\n            const {dispatch, detail, filter, location: {pathname}} = props\n            dispatch(equipmentDeleteAction(detail.id))\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[EQUIPMENT_DELETE_DIALOG_OPEN]: false})})\n                    dispatch(equipmentListFetchAction(filter))\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\n                })\n                .catch(() => {\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\n                })\n        },\n\n        handleOpenCreateDialog: props => () => {\n            const {dispatch, location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[EQUIPMENT_CREATE_DIALOG_OPEN]: true})})\n            dispatch(reset('EquipmentCreateForm'))\n        },\n\n        handleCloseCreateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[EQUIPMENT_CREATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitCreateDialog: props => () => {\n            const {dispatch, createForm, filter, location: {pathname}} = props\n\n            return dispatch(equipmentCreateAction(_.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[EQUIPMENT_CREATE_DIALOG_OPEN]: false})})\n                    dispatch(equipmentListFetchAction(filter))\n                })\n        },\n\n        handleOpenUpdateDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.EQUIPMENT_ITEM_PATH, id),\n                query: filter.getParams({[EQUIPMENT_UPDATE_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseUpdateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[EQUIPMENT_UPDATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitUpdateDialog: props => () => {\n            const {dispatch, createForm, filter} = props\n            const equipmentId = _.toInteger(_.get(props, ['params', 'equipmentId']))\n\n            return dispatch(equipmentUpdateAction(equipmentId, _.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push(filter.createURL({[EQUIPMENT_UPDATE_DIALOG_OPEN]: false}))\n                    dispatch(equipmentListFetchAction(filter))\n                })\n        }\n    })\n)\n\nconst EquipmentList = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        createLoading,\n        updateLoading,\n        filter,\n        layout,\n        params\n    } = props\n\n    const openCreateDialog = toBoolean(_.get(location, ['query', EQUIPMENT_CREATE_DIALOG_OPEN]))\n    const openUpdateDialog = toBoolean(_.get(location, ['query', EQUIPMENT_UPDATE_DIALOG_OPEN]))\n    const openConfirmDialog = toBoolean(_.get(location, ['query', EQUIPMENT_DELETE_DIALOG_OPEN]))\n\n    const detailId = _.toInteger(_.get(params, 'equipmentId'))\n\n    const actionsDialog = {\n        handleActionEdit: props.handleActionEdit,\n        handleActionDelete: props.handleOpenDeleteDialog\n    }\n\n    const createDialog = {\n        createLoading,\n        openCreateDialog,\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\n    }\n\n    const confirmDialog = {\n        confirmLoading: detailLoading,\n        openConfirmDialog: openConfirmDialog,\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\n        handleSendConfirmDialog: props.handleSendConfirmDialog\n    }\n\n    const updateDialog = {\n        initialValues: (() => {\n            if (!detail || openCreateDialog) {\n                return {}\n            }\n            return {\n                name: _.get(detail, 'name'),\n                manufacture: {\n                    value: _.get(detail, 'manufacture')\n                },\n                image: _.get(detail, 'image')\n            }\n        })(),\n        updateLoading: detailLoading || updateLoading,\n        openUpdateDialog,\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\n    }\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n\n    const detailData = {\n        id: detailId,\n        data: detail,\n        detailLoading\n    }\n\n    return (\n        <Layout {...layout}>\n            <EquipmentGridList\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                createDialog={createDialog}\n                confirmDialog={confirmDialog}\n                updateDialog={updateDialog}\n                actionsDialog={actionsDialog}\n            />\n        </Layout>\n    )\n})\n\nexport default EquipmentList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Equipment/EquipmentList.js","import EquipmentList from './EquipmentList'\n\nexport {EquipmentList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Equipment/index.js","import React from 'react'\nimport _ from 'lodash'\nimport sprintf from 'sprintf'\nimport {connect} from 'react-redux'\nimport {reset} from 'redux-form'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport {\n    EXPENSIVE_CATEGORY_CREATE_DIALOG_OPEN,\n    EXPENSIVE_CATEGORY_UPDATE_DIALOG_OPEN,\n    EXPENSIVE_CATEGORY_DELETE_DIALOG_OPEN,\n    ExpensiveCategoryGridList\n} from '../../components/ExpensiveCategory'\nimport {\n    expensiveCategoryCreateAction,\n    expensiveCategoryUpdateAction,\n    expensiveCategoryListFetchAction,\n    expensiveCategoryDeleteAction,\n    expensiveCategoryItemFetchAction\n} from '../../actions/expensiveCategory'\nimport {openSnackbarAction} from '../../actions/snackbar'\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['expensiveCategory', 'item', 'data'])\n        const detailLoading = _.get(state, ['expensiveCategory', 'item', 'loading'])\n        const createLoading = _.get(state, ['expensiveCategory', 'create', 'loading'])\n        const updateLoading = _.get(state, ['expensiveCategory', 'update', 'loading'])\n        const list = _.get(state, ['expensiveCategory', 'list', 'data'])\n        const listLoading = _.get(state, ['expensiveCategory', 'list', 'loading'])\n        const createForm = _.get(state, ['form', 'ExpensiveCategoryCreateForm'])\n        const filter = filterHelper(list, pathname, query)\n\n        return {\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            createLoading,\n            updateLoading,\n            filter,\n            createForm\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(expensiveCategoryListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const expensiveCategoryId = _.get(nextProps, ['params', 'expensiveCategoryId'])\n        return expensiveCategoryId && _.get(props, ['params', 'expensiveCategoryId']) !== expensiveCategoryId\n    }, ({dispatch, params}) => {\n        const expensiveCategoryId = _.toInteger(_.get(params, 'expensiveCategoryId'))\n        expensiveCategoryId && dispatch(expensiveCategoryItemFetchAction(expensiveCategoryId))\n    }),\n\n    withHandlers({\n        handleActionEdit: props => () => {\n            return null\n        },\n\n        handleOpenConfirmDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.EXPENSIVE_CATEGORY_ITEM_PATH, id),\n                query: filter.getParams({[EXPENSIVE_CATEGORY_DELETE_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseConfirmDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[EXPENSIVE_CATEGORY_DELETE_DIALOG_OPEN]: false})})\n        },\n        handleSendConfirmDialog: props => () => {\n            const {dispatch, detail, filter, location: {pathname}} = props\n            dispatch(expensiveCategoryDeleteAction(detail.id))\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[EXPENSIVE_CATEGORY_DELETE_DIALOG_OPEN]: false})})\n                    dispatch(expensiveCategoryListFetchAction(filter))\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\n                })\n                .catch(() => {\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\n                })\n        },\n\n        handleOpenCreateDialog: props => () => {\n            const {dispatch, location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[EXPENSIVE_CATEGORY_CREATE_DIALOG_OPEN]: true})})\n            dispatch(reset('ExpensiveCategoryCreateForm'))\n        },\n\n        handleCloseCreateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[EXPENSIVE_CATEGORY_CREATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitCreateDialog: props => () => {\n            const {dispatch, createForm, filter, location: {pathname}} = props\n\n            return dispatch(expensiveCategoryCreateAction(_.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[EXPENSIVE_CATEGORY_CREATE_DIALOG_OPEN]: false})})\n                    dispatch(expensiveCategoryListFetchAction(filter))\n                })\n        },\n\n        handleOpenUpdateDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.EXPENSIVE_CATEGORY_ITEM_PATH, id),\n                query: filter.getParams({[EXPENSIVE_CATEGORY_UPDATE_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseUpdateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[EXPENSIVE_CATEGORY_UPDATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitUpdateDialog: props => () => {\n            const {dispatch, createForm, filter} = props\n            const expensiveCategoryId = _.toInteger(_.get(props, ['params', 'expensiveCategoryId']))\n\n            return dispatch(expensiveCategoryUpdateAction(expensiveCategoryId, _.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push(filter.createURL({[EXPENSIVE_CATEGORY_UPDATE_DIALOG_OPEN]: false}))\n                    dispatch(expensiveCategoryListFetchAction(filter))\n                })\n        }\n    })\n)\n\nconst ExpensiveCategoryList = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        createLoading,\n        updateLoading,\n        filter,\n        layout,\n        params\n    } = props\n\n    const openCreateDialog = toBoolean(_.get(location, ['query', EXPENSIVE_CATEGORY_CREATE_DIALOG_OPEN]))\n    const openUpdateDialog = toBoolean(_.get(location, ['query', EXPENSIVE_CATEGORY_UPDATE_DIALOG_OPEN]))\n    const openConfirmDialog = toBoolean(_.get(location, ['query', EXPENSIVE_CATEGORY_DELETE_DIALOG_OPEN]))\n\n    const detailId = _.toInteger(_.get(params, 'expensiveCategoryId'))\n\n    const createDialog = {\n        createLoading,\n        openCreateDialog,\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\n    }\n\n    const confirmDialog = {\n        confirmLoading: detailLoading,\n        openConfirmDialog: openConfirmDialog,\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\n        handleSendConfirmDialog: props.handleSendConfirmDialog\n    }\n\n    const updateDialog = {\n        initialValues: (() => {\n            if (!detail || openCreateDialog) {\n                return {}\n            }\n            return {\n                name: _.get(detail, 'name')\n            }\n        })(),\n        updateLoading: detailLoading || updateLoading,\n        openUpdateDialog,\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\n    }\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n\n    const detailData = {\n        id: detailId,\n        data: detail,\n        detailLoading\n    }\n\n    return (\n        <Layout {...layout}>\n            <ExpensiveCategoryGridList\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                createDialog={createDialog}\n                confirmDialog={confirmDialog}\n                updateDialog={updateDialog}\n            />\n        </Layout>\n    )\n})\n\nexport default ExpensiveCategoryList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/ExpensiveCategory/ExpensiveCategoryList.js","import ExpensiveCategoryList from './ExpensiveCategoryList'\n\nexport {ExpensiveCategoryList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/ExpensiveCategory/index.js","import React from 'react'\nimport _ from 'lodash'\nimport sprintf from 'sprintf'\nimport {reset} from 'redux-form'\nimport {connect} from 'react-redux'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport * as MANUFACTURE_TAB from '../../constants/manufactureTab'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport {\n    OPEN_USER_CREATE_DIALOG,\n    OPEN_USER_UPDATE_DIALOG,\n    MANUFACTURE_SHOW_BOM_DIALOG_OPEN,\n    MANUFACTURE_CREATE_PRODUCT_DIALOG_OPEN,\n    MANUFACTURE_ADD_PRODUCT_DIALOG_OPEN,\n    MANUFACTURE_EDIT_PRODUCT_DIALOG_OPEN,\n    OPEN_USER_CONFIRM_DIALOG,\n    OPEN_DELETE_PRODUCT_DIALOG,\n    OPEN_DELETE_MATERIALS_DIALOG,\n    MANUFACTURE_CHANGE,\n    TAB,\n    ManufactureGridList\n} from '../../components/Manufacture'\nimport {PRODUCT_FILTER_KEY, PRODUCT_FILTER_OPEN} from '../../components/Product'\nimport {PERSON_FILTER_KEY, PERSON_FILTER_OPEN} from '../../components/Manufacture/PersonFilterForm'\nimport {\n    manufactureListFetchAction\n} from '../../actions/manufacture'\nimport {\n    userShiftCreateAction,\n    userShiftListFetchAction,\n    userShiftUpdateAction,\n    userShiftDeleteAction\n} from '../../actions/userShift'\n\nimport {\n    productListFetchAction,\n    productItemFetchAction\n} from '../../actions/product'\nimport {\n    shipmentListFetchAction,\n    shipmentItemFetchAction\n} from '../../actions/shipment'\nimport {\n    manufactureProductCreateAction,\n    manufactureProductDeleteAction,\n    productChangeManufacture\n} from '../../actions/manufactureProduct'\nimport {\n    ingredientCreateAction,\n    ingredientUpdateAction,\n    ingredientListFetchAction,\n    ingredientDeleteAction\n} from '../../actions/ingredient'\nimport {equipmentListFetchAction} from '../../actions/equipment'\nimport {openSnackbarAction} from '../../actions/snackbar'\n\nconst MINUS_ONE = -1\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const selectProduct = _.get(state, ['product', 'item', 'data'])\n        const detail = _.get(state, ['manufacture', 'item', 'data'])\n        const detailLoading = _.get(state, ['manufacture', 'item', 'loading'])\n        const createLoading = _.get(state, ['manufacture', 'create', 'loading'])\n        const updateLoading = _.get(state, ['manufacture', 'update', 'loading'])\n        const list = _.get(state, ['manufacture', 'list', 'data'])\n        const listLoading = _.get(state, ['manufacture', 'list', 'loading'])\n        const createForm = _.get(state, ['form', 'ManufactureCreateForm'])\n        const ingredientCreateForm = _.get(state, ['form', 'IngredientCreateForm'])\n        const filter = filterHelper(list, pathname, query)\n\n        const productList = _.get(state, ['product', 'list', 'data'])\n        const productDetail = _.get(state, ['ingredient', 'list', 'data'])\n        const productDetailLoading = _.get(state, ['ingredient', 'list', 'loading'])\n        const productListLoading = _.get(state, ['product', 'list', 'loading'])\n        const productAddForm = _.get(state, ['form', 'ProviderCreateForm'])\n        const changeForm = _.get(state, ['form', 'ChangeManufactureForm'])\n        const filterProduct = filterHelper(productList, pathname, query)\n        const filterProductForm = _.get(state, ['form', 'ProductFilterForm'])\n\n        const userShiftList = _.get(state, ['userShift', 'list', 'data'])\n        const userShiftLoading = _.get(state, ['userShift', 'list', 'loading'])\n        const filterUser = filterHelper(userShiftList, pathname, query)\n        const staffCreateForm = _.get(state, ['form', 'ManufactureCreateUserForm'])\n        const filterPersonForm = _.get(state, ['form', 'PersonFilterForm'])\n\n        const equipmentList = _.get(state, ['equipment', 'list', 'data'])\n        const equipmentListLoading = _.get(state, ['equipment', 'list', 'loading'])\n        const filterEquipment = filterHelper(equipmentList, pathname, query)\n\n        const shipmentList = _.get(state, ['shipment', 'list', 'data'])\n        const shipmentListLoading = _.get(state, ['shipment', 'list', 'loading'])\n        const shipmentDetail = _.get(state, ['shipment', 'item', 'data'])\n        const shipmentDetailLoading = _.get(state, ['shipment', 'item', 'loading'])\n        const filterShipment = filterHelper(shipmentList, pathname, query)\n\n        return {\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            createLoading,\n            updateLoading,\n            filter,\n            createForm,\n            selectProduct,\n\n            productList,\n            productDetail,\n            productListLoading,\n            productDetailLoading,\n            productAddForm,\n            ingredientCreateForm,\n            changeForm,\n            filterProduct,\n            filterProductForm,\n\n            staffCreateForm,\n            userShiftList,\n            userShiftLoading,\n            filterUser,\n            filterPersonForm,\n\n            equipmentList,\n            equipmentListLoading,\n            filterEquipment,\n\n            shipmentList,\n            shipmentListLoading,\n            shipmentDetail,\n            shipmentDetailLoading,\n            filterShipment\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return !nextProps.listLoading && _.isNil(nextProps.list)\n    }, ({dispatch, filter}) => {\n        dispatch(manufactureListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const manufactureId = _.get(nextProps, ['params', 'manufactureId'])\n        const tab = _.get(props, ['location', 'query', 'tab'])\n        const nextTab = _.get(nextProps, ['location', 'query', 'tab'])\n        const productId = _.get(props, ['location', 'query', 'productId'])\n        const nextProductId = _.get(nextProps, ['location', 'query', 'productId'])\n        return (manufactureId && _.get(props, ['params', 'manufactureId']) !== manufactureId) ||\n            ((tab !== nextTab) ||\n            (productId !== nextProductId) ||\n            (props.filterProduct.filterRequest() !== nextProps.filterProduct.filterRequest()) ||\n            (props.filterUser.filterRequest() !== nextProps.filterUser.filterRequest()))\n    }, ({dispatch, location, params, filterProduct, filterUser, filterEquipment, filterShipment}) => {\n        const nextTab = _.get(location, ['query', 'tab']) || 'product'\n        const manufactureId = _.get(params, 'manufactureId')\n        if (nextTab === 'product') {\n            dispatch(productListFetchAction(filterProduct, manufactureId))\n            if (_.get(location, ['query', 'productId'])) {\n                const productId = _.toInteger(_.get(location, ['query', 'productId']))\n                dispatch(productItemFetchAction(productId))\n                dispatch(ingredientListFetchAction(productId))\n            }\n        } else if (nextTab === 'person') {\n            dispatch(userShiftListFetchAction(filterUser, manufactureId))\n        } else if (nextTab === 'equipment') {\n            dispatch(equipmentListFetchAction(filterEquipment, manufactureId))\n        } else if (nextTab === 'shipment') {\n            if (_.get(location, ['query', 'shipmentId'])) {\n                const shipmentId = _.toInteger(_.get(location, ['query', 'shipmentId']))\n                dispatch(shipmentItemFetchAction(shipmentId))\n            }\n            dispatch(shipmentListFetchAction(filterShipment, manufactureId))\n        }\n    }),\n\n    // Product withHandlers\n    withHandlers({\n        handleOpenProductFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_FILTER_OPEN]: true})})\n        },\n        handleCloseProductFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_FILTER_OPEN]: false})})\n        },\n        handleClearProductFilterDialog: props => () => {\n            const {location: {pathname}} = props\n            hashHistory.push({pathname, query: {}})\n        },\n        handleSubmitProductFilterDialog: props => () => {\n            const {filterProduct, filterProductForm} = props\n            const type = _.get(filterProductForm, ['values', 'type', 'value']) || null\n            const measurement = _.get(filterProductForm, ['values', 'measurement', 'value']) || null\n            const brand = _.get(filterProductForm, ['values', 'brand', 'value']) || null\n\n            filterProduct.filterBy({\n                [PRODUCT_FILTER_OPEN]: false,\n                [PRODUCT_FILTER_KEY.TYPE]: type,\n                [PRODUCT_FILTER_KEY.MEASUREMENT]: measurement,\n                [PRODUCT_FILTER_KEY.BRAND]: brand\n            })\n        },\n\n        handleOpenAddProductDialog: props => () => {\n            const {dispatch, location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[MANUFACTURE_ADD_PRODUCT_DIALOG_OPEN]: true})})\n            dispatch(reset('ProviderCreateForm'))\n        },\n        handleCloseAddProductDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[MANUFACTURE_ADD_PRODUCT_DIALOG_OPEN]: false})})\n        },\n        handleSubmitAddProductDialog: props => () => {\n            const {dispatch, productAddForm, filterProduct, location: {pathname}, params} = props\n            const manufactureId = _.toInteger(_.get(params, 'manufactureId'))\n\n            return dispatch(manufactureProductCreateAction(_.get(productAddForm, ['values']), manufactureId))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push({\n                        pathname,\n                        query: filterProduct.getParams({[MANUFACTURE_ADD_PRODUCT_DIALOG_OPEN]: false})\n                    })\n                    return dispatch(productListFetchAction(filterProduct, manufactureId))\n                })\n        },\n\n        handleOpenProductConfirmDialog: props => (id) => {\n            const {filter, location: {pathname}} = props\n            hashHistory.push({pathname, query: filter.getParams({[OPEN_DELETE_PRODUCT_DIALOG]: true, 'productId': id})})\n        },\n        handleCloseProductConfirmDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({\n                pathname,\n                query: filter.getParams({[OPEN_DELETE_PRODUCT_DIALOG]: false})\n            })\n        },\n        handleSendProductConfirmDialog: props => () => {\n            const {dispatch, filterProduct, location: {pathname}, params} = props\n            const productId = _.get(props, ['location', 'query', 'productId'])\n            const manufactureId = _.toInteger(_.get(params, 'manufactureId'))\n            dispatch(manufactureProductDeleteAction(_.toInteger(productId)))\n                .catch(() => {\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\n                })\n                .then(() => {\n                    hashHistory.push({\n                        pathname,\n                        query: filterProduct.getParams({[OPEN_DELETE_PRODUCT_DIALOG]: false, 'productId': MINUS_ONE})\n                    })\n                    dispatch(openSnackbarAction({message: 'Успешно удалено'}))\n                    return dispatch(productListFetchAction(filterProduct, manufactureId))\n                })\n        },\n\n        handleOpenChangeManufacture: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[MANUFACTURE_CHANGE]: true})})\n        },\n        handleCloseChangeManufacture: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[MANUFACTURE_CHANGE]: false})})\n        },\n        handleSubmitChangeManufacture: props => () => {\n            const {dispatch, filterProduct, location: {pathname}, params, changeForm} = props\n            const manufactureId = _.toNumber(_.get(params, 'manufactureId'))\n            const productId = _.toNumber(_.get(props, ['location', 'query', 'productId']))\n\n            dispatch(productChangeManufacture(productId, _.get(changeForm, ['values'])))\n                .then(() => {\n                    hashHistory.push({pathname, query: filterProduct.getParams({[MANUFACTURE_CHANGE]: false})})\n                    dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                    return dispatch(productListFetchAction(filterProduct, manufactureId))\n                })\n        },\n\n        handleCloseDetail: props => () => {\n            const {filter, location: {pathname}} = props\n            hashHistory.push({pathname, query: filter.getParam({'productId': MINUS_ONE})})\n        }\n    }),\n    // Ingredient withHandlers\n    withHandlers({\n        handleOpenCreateMaterials: props => () => {\n            const {dispatch, location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[MANUFACTURE_CREATE_PRODUCT_DIALOG_OPEN]: true})})\n            dispatch(reset('IngredientCreateForm'))\n        },\n        handleCloseCreateMaterials: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[MANUFACTURE_CREATE_PRODUCT_DIALOG_OPEN]: false})})\n        },\n        handleSubmitCreateMaterials: props => () => {\n            const {dispatch, ingredientCreateForm, filter, location: {pathname}} = props\n            const productId = _.toNumber(_.get(props, ['location', 'query', 'productId']))\n            return dispatch(ingredientCreateAction(_.get(ingredientCreateForm, ['values']), productId))\n                .then(() => {\n                    hashHistory.push({\n                        pathname,\n                        query: filter.getParams({[MANUFACTURE_CREATE_PRODUCT_DIALOG_OPEN]: false})\n                    })\n                    dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                    return dispatch(ingredientListFetchAction(productId))\n                })\n        },\n\n        handleOpenEditMaterials: props => (id) => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({\n                pathname,\n                query: filter.getParams({[MANUFACTURE_EDIT_PRODUCT_DIALOG_OPEN]: true, 'ingId': id})\n            })\n        },\n        handleCloseEditMaterials: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({\n                pathname,\n                query: filter.getParams({[MANUFACTURE_EDIT_PRODUCT_DIALOG_OPEN]: false, 'ingId': MINUS_ONE})\n            })\n        },\n        handleSubmitEditMaterials: props => () => {\n            const {dispatch, ingredientCreateForm, filter, location: {pathname}} = props\n            const productId = _.toNumber(_.get(props, ['location', 'query', 'productId']))\n            const ingredientId = _.toNumber(_.get(props, ['location', 'query', 'ingId']))\n            return dispatch(ingredientUpdateAction(_.get(ingredientCreateForm, ['values']), _.toNumber(ingredientId), productId))\n                .then(() => {\n                    hashHistory.push({\n                        pathname,\n                        query: filter.getParams({[MANUFACTURE_EDIT_PRODUCT_DIALOG_OPEN]: false, 'ingId': MINUS_ONE})\n                    })\n                    dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                    return dispatch(ingredientListFetchAction(productId))\n                })\n        },\n\n        handleOpenMaterialsConfirmDialog: props => (id) => {\n            const {filter, location: {pathname}} = props\n            hashHistory.push({pathname, query: filter.getParams({[OPEN_DELETE_MATERIALS_DIALOG]: true, 'ingId': id})})\n        },\n        handleCloseMaterialsConfirmDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({\n                pathname,\n                query: filter.getParams({[OPEN_DELETE_MATERIALS_DIALOG]: false, 'ingId': MINUS_ONE})\n            })\n        },\n        handleSendMaterialsConfirmDialog: props => () => {\n            const {dispatch, filter, location: {pathname}} = props\n            const ingId = _.toNumber(_.get(props, ['location', 'query', 'ingId']))\n            const productId = _.toNumber(_.get(props, ['location', 'query', 'productId']))\n            dispatch(ingredientDeleteAction(_.toNumber(ingId)))\n                .catch(() => {\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\n                })\n                .then(() => {\n                    hashHistory.push({\n                        pathname,\n                        query: filter.getParams({[OPEN_DELETE_MATERIALS_DIALOG]: false, 'ingId': MINUS_ONE})\n                    })\n                    dispatch(openSnackbarAction({message: 'Успешно удалено'}))\n                    return dispatch(ingredientListFetchAction(productId))\n                })\n        }\n    }),\n    // Person withHandlers\n    withHandlers({\n        handleOpenPersonFilterDialog: props => () => {\n            const {location: {pathname}, filterUser} = props\n            hashHistory.push({pathname, query: filterUser.getParams({[PERSON_FILTER_OPEN]: true})})\n        },\n        handleClosePersonFilterDialog: props => () => {\n            const {location: {pathname}, filterUser} = props\n            hashHistory.push({pathname, query: filterUser.getParams({[PERSON_FILTER_OPEN]: false})})\n        },\n        handleClearPersonFilterDialog: props => () => {\n            const {location: {pathname}} = props\n            hashHistory.push({pathname, query: {}})\n        },\n        handleSubmitPersonFilterDialog: props => () => {\n            const {filterUser, filterPersonForm} = props\n            const shift = _.get(filterPersonForm, ['values', 'shift', 'value']) || null\n            filterUser.filterBy({\n                [PRODUCT_FILTER_OPEN]: false,\n                [PRODUCT_FILTER_KEY.SHIFT]: shift\n            })\n        },\n\n        handleOpenUserCreateDialog: props => () => {\n            const {dispatch, location: {pathname}, filterUser} = props\n            hashHistory.push({pathname, query: filterUser.getParams({[OPEN_USER_CREATE_DIALOG]: true})})\n            dispatch(reset('ManufactureCreateUserForm'))\n        },\n        handleCloseUserCreateDialog: props => () => {\n            const {location: {pathname}, filterUser} = props\n            hashHistory.push({pathname, query: filterUser.getParams({[OPEN_USER_CREATE_DIALOG]: false})})\n        },\n        handleSubmitUserCreateDialog: props => () => {\n            const {dispatch, staffCreateForm, filterUser, location: {pathname}, params} = props\n            const manufactureId = _.get(params, 'manufactureId')\n            return dispatch(userShiftCreateAction(_.get(staffCreateForm, ['values']), manufactureId))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filterUser.getParams({[OPEN_USER_CREATE_DIALOG]: false})})\n                    dispatch(userShiftListFetchAction(filterUser, manufactureId))\n                })\n        },\n\n        handleOpenUserUpdateDialog: props => (id) => {\n            const {filterUser, location: {pathname}} = props\n            hashHistory.push({pathname, query: filterUser.getParams({[OPEN_USER_UPDATE_DIALOG]: true, 'personId': id})})\n        },\n        handleCloseUserUpdateDialog: props => () => {\n            const {location: {pathname}, filterUser} = props\n            hashHistory.push({pathname, query: filterUser.getParams({[OPEN_USER_UPDATE_DIALOG]: false, 'personId': -1})})\n        },\n        handleSubmitUserUpdateDialog: props => () => {\n            const {dispatch, staffCreateForm, filterUser, params} = props\n            const manufactureId = _.get(params, 'manufactureId')\n            const personId = _.toNumber(_.get(props, ['location', 'query', 'personId']))\n            return dispatch(userShiftUpdateAction(personId, _.get(staffCreateForm, ['values']), manufactureId))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push(filterUser.createURL({[OPEN_USER_UPDATE_DIALOG]: false, 'personId': -1}))\n                    dispatch(userShiftListFetchAction(filterUser, manufactureId))\n                })\n        },\n\n        handleOpenUserConfirmDialog: props => (id) => {\n            const {filterUser, location: {pathname}} = props\n            hashHistory.push({pathname, query: filterUser.getParams({[OPEN_USER_CONFIRM_DIALOG]: true, 'personId': id})})\n        },\n        handleCloseUserConfirmDialog: props => () => {\n            const {location: {pathname}, filterUser} = props\n            hashHistory.push({pathname, query: filterUser.getParams({[OPEN_USER_CONFIRM_DIALOG]: false, 'personId': -1})})\n        },\n        handleSendUserConfirmDialog: props => () => {\n            const {dispatch, filterUser, location: {pathname}, params} = props\n            const personId = _.toNumber(_.get(props, ['location', 'query', 'personId']) || '-1')\n            const manufactureId = _.toNumber(_.get(params, 'manufactureId'))\n            dispatch(userShiftDeleteAction(_.toInteger(personId)))\n                .catch(() => {\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\n                })\n                .then(() => {\n                    hashHistory.push({\n                        pathname,\n                        query: filterUser.getParams({[OPEN_USER_CONFIRM_DIALOG]: false, 'personId': -1})\n                    })\n                    dispatch(openSnackbarAction({message: 'Успешно удалено'}))\n                    return dispatch(userShiftListFetchAction(filterUser, manufactureId))\n                })\n        }\n    }),\n    // Shipment withHeader\n    withHandlers({\n        handleShipmentClick: props => (id) => {\n            const {filterShipment, location: {pathname}, dispatch} = props\n            hashHistory.push({\n                pathname,\n                query: filterShipment.getParams({'shipmentId': id})\n            })\n            dispatch(shipmentItemFetchAction(id))\n        }\n    }),\n    // List withHandlers\n    withHandlers({\n        handleOpenShowBom: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[MANUFACTURE_SHOW_BOM_DIALOG_OPEN]: true})})\n        },\n\n        handleCloseShowBom: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[MANUFACTURE_SHOW_BOM_DIALOG_OPEN]: false})})\n        },\n\n        handleClickItem: props => (id) => {\n            const tab = _.get(props, ['location', 'query', 'tab'])\n            hashHistory.push({pathname: sprintf(ROUTER.MANUFACTURE_ITEM_PATH, id), query: {'tab': tab}})\n        },\n        handleTabChange: props => (tab) => {\n            const {location: {pathname}} = props\n            hashHistory.push({\n                pathname: pathname,\n                query: {[TAB]: tab}\n            })\n        },\n        handleItemClick: props => (id) => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({'productId': id})})\n        }\n    })\n)\n\nconst ManufactureList = enhance((props) => {\n    const {\n        list,\n        equipmentList,\n        equipmentListLoading,\n        listLoading,\n        location,\n        detail,\n        detailLoading,\n        layout,\n        filterEquipment,\n        params,\n\n        productList,\n        productListLoading,\n        productDetail,\n        productDetailLoading,\n        filterProduct,\n\n        userShiftList,\n        userShiftLoading,\n        filterUser,\n\n        shipmentList,\n        shipmentListLoading,\n        shipmentDetail,\n        shipmentDetailLoading,\n        filterShipment\n    } = props\n\n    const openShowBom = toBoolean(_.get(location, ['query', MANUFACTURE_SHOW_BOM_DIALOG_OPEN]))\n    const openEditMaterials = toBoolean(_.get(location, ['query', MANUFACTURE_EDIT_PRODUCT_DIALOG_OPEN]))\n    const openCreateMaterials = toBoolean(_.get(location, ['query', MANUFACTURE_CREATE_PRODUCT_DIALOG_OPEN]))\n    const type = _.toInteger(filterProduct.getParam(PRODUCT_FILTER_KEY.TYPE))\n    const shift = _.toInteger(filterProduct.getParam(PERSON_FILTER_KEY.SHIFT))\n    const brand = _.toInteger(filterProduct.getParam(PRODUCT_FILTER_KEY.BRAND))\n    const openDeleteMaterialsDialog = toBoolean(_.get(location, ['query', OPEN_DELETE_MATERIALS_DIALOG]))\n    const tab = _.get(location, ['query', TAB]) || MANUFACTURE_TAB.MANUFACTURE_DEFAULT_TAB\n\n    const openAddProductDialog = toBoolean(_.get(location, ['query', MANUFACTURE_ADD_PRODUCT_DIALOG_OPEN]))\n    const openProductConfirmDialog = toBoolean(_.get(location, ['query', OPEN_DELETE_PRODUCT_DIALOG]))\n    const openProductFilterDialog = toBoolean(_.get(location, ['query', PRODUCT_FILTER_OPEN]))\n    const openPersonFilterDialog = toBoolean(_.get(location, ['query', PERSON_FILTER_OPEN]))\n    const openManufactureChangeDialog = toBoolean(_.get(location, ['query', MANUFACTURE_CHANGE]))\n    const productId = _.get(props, ['location', 'query', 'productId']) || MINUS_ONE\n\n    const openCreateUser = toBoolean(_.get(location, ['query', OPEN_USER_CREATE_DIALOG]))\n    const openUpdateUserDialog = toBoolean(_.get(location, ['query', OPEN_USER_UPDATE_DIALOG]))\n    const openUserConfirmDialog = toBoolean(_.get(location, ['query', OPEN_USER_CONFIRM_DIALOG]))\n\n    const personId = _.get(props, ['location', 'query', 'personId']) || MINUS_ONE\n    const ingredientId = _.get(props, ['location', 'query', 'ingId']) || MINUS_ONE\n    const shipmentId = _.toNumber(_.get(props, ['location', 'query', 'shipmentId']) || MINUS_ONE)\n\n    const detailId = _.toInteger(_.get(params, 'manufactureId'))\n\n    const detailData = {\n        id: detailId,\n        data: detail,\n        detailLoading,\n        handleCloseDetail: props.handleCloseDetail\n    }\n\n    const showBom = {\n        open: openShowBom,\n        handleOpen: props.handleOpenShowBom,\n        handleClose: props.handleCloseShowBom,\n        handleLoading: props.handleCloseShowBom\n    }\n    const addProductDialog = {\n        open: openAddProductDialog,\n        productList: _.get(productList, 'results'),\n        productListLoading,\n        handleOpenCreateDialog: props.handleOpenAddProductDialog,\n        handleCloseCreateDialog: props.handleCloseAddProductDialog,\n        handleSubmitCreateDialog: props.handleSubmitAddProductDialog\n    }\n    const createMaterials = {\n        open: openCreateMaterials,\n        handleOpen: props.handleOpenCreateMaterials,\n        handleClose: props.handleCloseCreateMaterials,\n        handleSubmit: props.handleSubmitCreateMaterials\n    }\n\n    const selectProduct = _.find(_.get(productDetail, 'ingredient'), {'id': _.toInteger(ingredientId)})\n    const editMaterials = {\n        initialValues: {\n            ingredient: {\n                value: _.get(selectProduct, ['ingredient', 'id'])\n            },\n            amount: _.get(selectProduct, 'amount')\n        },\n        measurement: _.get(selectProduct, ['ingredient', 'measurement', 'name']),\n        open: openEditMaterials,\n        handleOpen: props.handleOpenEditMaterials,\n        handleClose: props.handleCloseEditMaterials,\n        handleSubmit: props.handleSubmitEditMaterials\n    }\n\n    const deleteMaterials = {\n        name: _.get(selectProduct, ['ingredient', 'name']),\n        open: openDeleteMaterialsDialog,\n        handleOpenConfirmDialog: props.handleOpenMaterialsConfirmDialog,\n        handleCloseConfirmDialog: props.handleCloseMaterialsConfirmDialog,\n        handleSendConfirmDialog: props.handleSendMaterialsConfirmDialog\n    }\n\n    const equipmentData = {\n        filter: filterEquipment,\n        listLoading: equipmentListLoading,\n        equipmentList: _.get(equipmentList, 'results')\n    }\n\n    const shipmentDetailData = {\n        id: shipmentId,\n        data: shipmentDetail,\n        loading: shipmentDetailLoading\n    }\n    const shipmentData = {\n        filter: filterShipment,\n        listLoading: shipmentListLoading,\n        shipmentList: _.get(shipmentList, 'results'),\n        detailData: shipmentDetailData,\n        handleShipmentClick: props.handleShipmentClick\n    }\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading,\n        handleClickItem: props.handleClickItem\n    }\n\n    const tabData = {\n        filter: filterProduct,\n        tab,\n        handleTabChange: props.handleTabChange\n    }\n\n    const productFilterDialog = {\n        initialValues: {\n            type: {\n                value: type\n            },\n            brand: {\n                value: brand\n            }\n        },\n        filterLoading: false,\n        openFilterDialog: openProductFilterDialog,\n        handleOpenFilterDialog: props.handleOpenProductFilterDialog,\n        handleCloseFilterDialog: props.handleCloseProductFilterDialog,\n        handleClearFilterDialog: props.handleClearProductFilterDialog,\n        handleSubmitFilterDialog: props.handleSubmitProductFilterDialog\n    }\n    const deleteProductDialog = {\n        openConfirmDialog: openProductConfirmDialog,\n        handleOpenConfirmDialog: props.handleOpenProductConfirmDialog,\n        handleCloseConfirmDialog: props.handleCloseProductConfirmDialog,\n        handleSendConfirmDialog: props.handleSendProductConfirmDialog\n    }\n\n    const productDetailData = {\n        id: productId,\n        data: productDetail,\n        detailLoading: productDetailLoading\n    }\n\n    const changeManufacture = {\n        open: openManufactureChangeDialog,\n        handleOpenChangeManufacture: props.handleOpenChangeManufacture,\n        handleCloseChangeManufacture: props.handleCloseChangeManufacture,\n        handleSubmitChangeManufacture: props.handleSubmitChangeManufacture\n    }\n\n    const productData = {\n        productList: _.get(productList, 'results'),\n        listLoading: productListLoading,\n        detailData: productDetailData,\n        createDialog: addProductDialog,\n        filterDialog: productFilterDialog,\n        confirmDialog: deleteProductDialog,\n        handleItemClick: props.handleItemClick,\n        changeManufacture: changeManufacture\n    }\n\n    const personFilterDialog = {\n        initialValues: {\n            shift: {\n                value: shift\n            }\n        },\n        filterLoading: false,\n        openFilterDialog: openPersonFilterDialog,\n        handleOpenFilterDialog: props.handleOpenPersonFilterDialog,\n        handleCloseFilterDialog: props.handleClosePersonFilterDialog,\n        handleClearFilterDialog: props.handleClearPersonFilterDialog,\n        handleSubmitFilterDialog: props.handleSubmitPersonFilterDialog\n    }\n\n    const addUser = {\n        open: openCreateUser,\n        handleOpenDialog: props.handleOpenUserCreateDialog,\n        handleCloseDialog: props.handleCloseUserCreateDialog,\n        handleSubmitDialog: props.handleSubmitUserCreateDialog\n    }\n    const userShiftItem = _.find(_.get(userShiftList, 'results'), (o) => {\n        return o.id === _.toInteger(personId)\n    })\n\n    const updateUser = {\n        initialValues: (() => {\n            if (!userShiftItem || openCreateUser) {\n                return {}\n            }\n            return {\n                user: {\n                    value: _.get(userShiftItem, ['user', 'id'])\n                },\n                shift: {\n                    value: _.get(userShiftItem, 'shift')\n                }\n            }\n        })(),\n        open: openUpdateUserDialog,\n        handleOpenUpdateDialog: props.handleOpenUserUpdateDialog,\n        handleCloseUpdateDialog: props.handleCloseUserUpdateDialog,\n        handleSubmitUpdateDialog: props.handleSubmitUserUpdateDialog\n    }\n    const confirmUser = {\n        open: openUserConfirmDialog,\n        handleOpenConfirmDialog: props.handleOpenUserConfirmDialog,\n        handleCloseConfirmDialog: props.handleCloseUserConfirmDialog,\n        handleSendConfirmDialog: props.handleSendUserConfirmDialog\n    }\n\n    const personData = {\n        userShiftItem,\n        list: userShiftList,\n        listLoading: userShiftLoading,\n        filter: filterUser,\n        filterDialog: personFilterDialog,\n        createDialog: addUser,\n        updateDialog: updateUser,\n        confirmDialog: confirmUser\n    }\n\n    return (\n        <Layout {...layout}>\n            <ManufactureGridList\n                createMaterials={createMaterials}\n                editMaterials={editMaterials}\n                deleteMaterials={deleteMaterials}\n                detailData={detailData}\n                listData={listData}\n                equipmentData={equipmentData}\n                showBom={showBom}\n                productData={productData}\n                tabData={tabData}\n                productFilterDialog={productFilterDialog}\n                personData={personData}\n                shipmentData={shipmentData}\n            />\n        </Layout>\n    )\n})\n\nexport default ManufactureList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Manufacture/ManufactureList.js","import ManufactureList from './ManufactureList'\n\nexport {ManufactureList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Manufacture/index.js","import React from 'react'\nimport _ from 'lodash'\nimport sprintf from 'sprintf'\nimport {connect} from 'react-redux'\nimport {reset} from 'redux-form'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport {\n    MARKET_TYPE_CREATE_DIALOG_OPEN,\n    MARKET_TYPE_UPDATE_DIALOG_OPEN,\n    MARKET_TYPE_DELETE_DIALOG_OPEN,\n    MarketTypeGridList\n} from '../../components/MarketType'\nimport {\n    marketTypeCreateAction,\n    marketTypeUpdateAction,\n    marketTypeListFetchAction,\n    marketTypeDeleteAction,\n    marketTypeItemFetchAction\n} from '../../actions/marketType'\nimport {openSnackbarAction} from '../../actions/snackbar'\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['marketType', 'item', 'data'])\n        const detailLoading = _.get(state, ['marketType', 'item', 'loading'])\n        const createLoading = _.get(state, ['marketType', 'create', 'loading'])\n        const updateLoading = _.get(state, ['marketType', 'update', 'loading'])\n        const list = _.get(state, ['marketType', 'list', 'data'])\n        const listLoading = _.get(state, ['marketType', 'list', 'loading'])\n        const createForm = _.get(state, ['form', 'MarketTypeCreateForm'])\n        const filter = filterHelper(list, pathname, query)\n\n        return {\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            createLoading,\n            updateLoading,\n            filter,\n            createForm\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(marketTypeListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const marketTypeId = _.get(nextProps, ['params', 'marketTypeId'])\n\n        return marketTypeId && _.get(props, ['params', 'marketTypeId']) !== marketTypeId\n    }, ({dispatch, params}) => {\n        const marketTypeId = _.toInteger(_.get(params, 'marketTypeId'))\n        marketTypeId && dispatch(marketTypeItemFetchAction(marketTypeId))\n    }),\n\n    withHandlers({\n        handleActionEdit: props => () => {\n            return null\n        },\n\n        handleOpenDeleteDialog: props => () => {\n            return null\n        },\n\n        handleOpenConfirmDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.MARKET_TYPE_ITEM_PATH, id),\n                query: filter.getParams({[MARKET_TYPE_DELETE_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseConfirmDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[MARKET_TYPE_DELETE_DIALOG_OPEN]: false})})\n        },\n        handleSendConfirmDialog: props => () => {\n            const {dispatch, detail, filter, location: {pathname}} = props\n            dispatch(marketTypeDeleteAction(detail.id))\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[MARKET_TYPE_DELETE_DIALOG_OPEN]: false})})\n                    dispatch(marketTypeListFetchAction(filter))\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\n                })\n                .catch(() => {\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\n                })\n        },\n\n        handleOpenCreateDialog: props => () => {\n            const {dispatch, location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[MARKET_TYPE_CREATE_DIALOG_OPEN]: true})})\n            dispatch(reset('MarketTypeCreateForm'))\n        },\n\n        handleCloseCreateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[MARKET_TYPE_CREATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitCreateDialog: props => () => {\n            const {dispatch, createForm, filter, location: {pathname}} = props\n\n            return dispatch(marketTypeCreateAction(_.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[MARKET_TYPE_CREATE_DIALOG_OPEN]: false})})\n                    dispatch(marketTypeListFetchAction(filter))\n                })\n        },\n\n        handleOpenUpdateDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.MARKET_TYPE_ITEM_PATH, id),\n                query: filter.getParams({[MARKET_TYPE_UPDATE_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseUpdateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[MARKET_TYPE_UPDATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitUpdateDialog: props => () => {\n            const {dispatch, createForm, filter} = props\n            const marketTypeId = _.toInteger(_.get(props, ['params', 'marketTypeId']))\n\n            return dispatch(marketTypeUpdateAction(marketTypeId, _.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push(filter.createURL({[MARKET_TYPE_UPDATE_DIALOG_OPEN]: false}))\n                    dispatch(marketTypeListFetchAction(filter))\n                })\n        }\n    })\n)\n\nconst MarketTypeList = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        createLoading,\n        updateLoading,\n        filter,\n        layout,\n        params\n    } = props\n\n    const openCreateDialog = toBoolean(_.get(location, ['query', MARKET_TYPE_CREATE_DIALOG_OPEN]))\n    const openUpdateDialog = toBoolean(_.get(location, ['query', MARKET_TYPE_UPDATE_DIALOG_OPEN]))\n    const openConfirmDialog = toBoolean(_.get(location, ['query', MARKET_TYPE_DELETE_DIALOG_OPEN]))\n\n    const detailId = _.toInteger(_.get(params, 'marketTypeId'))\n\n    const actionsDialog = {\n        handleActionEdit: props.handleActionEdit,\n        handleActionDelete: props.handleOpenDeleteDialog\n    }\n\n    const createDialog = {\n        createLoading,\n        openCreateDialog,\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\n    }\n\n    const confirmDialog = {\n        confirmLoading: detailLoading,\n        openConfirmDialog: openConfirmDialog,\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\n        handleSendConfirmDialog: props.handleSendConfirmDialog\n    }\n\n    const updateDialog = {\n        initialValues: (() => {\n            if (!detail || openCreateDialog) {\n                return {}\n            }\n\n            return {\n                name: _.get(detail, 'name')\n            }\n        })(),\n        updateLoading: detailLoading || updateLoading,\n        openUpdateDialog,\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\n    }\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n    const detailData = {\n        id: detailId,\n        data: detail,\n        detailLoading\n    }\n\n    return (\n        <Layout {...layout}>\n            <MarketTypeGridList\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                createDialog={createDialog}\n                confirmDialog={confirmDialog}\n                updateDialog={updateDialog}\n                actionsDialog={actionsDialog}\n            />\n        </Layout>\n    )\n})\n\nexport default MarketTypeList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/MarketType/MarketTypeList.js","import MarketTypeList from './MarketTypeList'\n\nexport {MarketTypeList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/MarketType/index.js","import React from 'react'\nimport _ from 'lodash'\nimport sprintf from 'sprintf'\nimport {connect} from 'react-redux'\nimport {reset} from 'redux-form'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport {\n    MEASUREMENT_CREATE_DIALOG_OPEN,\n    MEASUREMENT_UPDATE_DIALOG_OPEN,\n    MEASUREMENT_DELETE_DIALOG_OPEN,\n    MeasurementGridList\n} from '../../components/Measurement'\nimport {\n    measurementCreateAction,\n    measurementUpdateAction,\n    measurementListFetchAction,\n    measurementDeleteAction,\n    measurementItemFetchAction\n} from '../../actions/measurement'\nimport {openSnackbarAction} from '../../actions/snackbar'\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['measurement', 'item', 'data'])\n        const detailLoading = _.get(state, ['measurement', 'item', 'loading'])\n        const createLoading = _.get(state, ['measurement', 'create', 'loading'])\n        const updateLoading = _.get(state, ['measurement', 'update', 'loading'])\n        const list = _.get(state, ['measurement', 'list', 'data'])\n        const listLoading = _.get(state, ['measurement', 'list', 'loading'])\n        const createForm = _.get(state, ['form', 'MeasurementCreateForm'])\n        const filter = filterHelper(list, pathname, query)\n\n        return {\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            createLoading,\n            updateLoading,\n            filter,\n            createForm\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(measurementListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const measurementId = _.get(nextProps, ['params', 'measurementId'])\n        return measurementId && _.get(props, ['params', 'measurementId']) !== measurementId\n    }, ({dispatch, params}) => {\n        const measurementId = _.toInteger(_.get(params, 'measurementId'))\n        measurementId && dispatch(measurementItemFetchAction(measurementId))\n    }),\n\n    withHandlers({\n        handleActionEdit: props => () => {\n            return null\n        },\n\n        handleOpenDeleteDialog: props => () => {\n            return null\n        },\n\n        handleOpenConfirmDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.MEASUREMENT_ITEM_PATH, id),\n                query: filter.getParams({[MEASUREMENT_DELETE_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseConfirmDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[MEASUREMENT_DELETE_DIALOG_OPEN]: false})})\n        },\n        handleSendConfirmDialog: props => () => {\n            const {dispatch, detail, filter, location: {pathname}} = props\n            dispatch(measurementDeleteAction(detail.id))\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[MEASUREMENT_DELETE_DIALOG_OPEN]: false})})\n                    dispatch(measurementListFetchAction(filter))\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\n                })\n                .catch(() => {\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\n                })\n        },\n\n        handleOpenCreateDialog: props => () => {\n            const {dispatch, location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[MEASUREMENT_CREATE_DIALOG_OPEN]: true})})\n            dispatch(reset('MeasurementCreateForm'))\n        },\n\n        handleCloseCreateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[MEASUREMENT_CREATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitCreateDialog: props => () => {\n            const {dispatch, createForm, filter, location: {pathname}} = props\n\n            return dispatch(measurementCreateAction(_.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[MEASUREMENT_CREATE_DIALOG_OPEN]: false})})\n                    dispatch(measurementListFetchAction(filter))\n                })\n        },\n\n        handleOpenUpdateDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.MEASUREMENT_ITEM_PATH, id),\n                query: filter.getParams({[MEASUREMENT_UPDATE_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseUpdateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[MEASUREMENT_UPDATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitUpdateDialog: props => () => {\n            const {dispatch, createForm, filter} = props\n            const measurementId = _.toInteger(_.get(props, ['params', 'measurementId']))\n\n            return dispatch(measurementUpdateAction(measurementId, _.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push(filter.createURL({[MEASUREMENT_UPDATE_DIALOG_OPEN]: false}))\n                    dispatch(measurementListFetchAction(filter))\n                })\n        }\n    })\n)\n\nconst MeasurementList = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        createLoading,\n        updateLoading,\n        filter,\n        layout,\n        params\n    } = props\n\n    const openCreateDialog = toBoolean(_.get(location, ['query', MEASUREMENT_CREATE_DIALOG_OPEN]))\n    const openUpdateDialog = toBoolean(_.get(location, ['query', MEASUREMENT_UPDATE_DIALOG_OPEN]))\n    const openConfirmDialog = toBoolean(_.get(location, ['query', MEASUREMENT_DELETE_DIALOG_OPEN]))\n    const detailId = _.toInteger(_.get(params, 'measurementId'))\n\n    const actionsDialog = {\n        handleActionEdit: props.handleActionEdit,\n        handleActionDelete: props.handleOpenDeleteDialog\n    }\n\n    const createDialog = {\n        createLoading,\n        openCreateDialog,\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\n    }\n\n    const confirmDialog = {\n        confirmLoading: detailLoading,\n        openConfirmDialog: openConfirmDialog,\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\n        handleSendConfirmDialog: props.handleSendConfirmDialog\n    }\n\n    const updateDialog = {\n        initialValues: (() => {\n            if (!detail || openCreateDialog) {\n                return {}\n            }\n            return {\n                name: _.get(detail, 'name')\n            }\n        })(),\n        updateLoading: detailLoading || updateLoading,\n        openUpdateDialog,\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\n    }\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n\n    const detailData = {\n        id: detailId,\n        data: detail,\n        detailLoading\n    }\n\n    return (\n        <Layout {...layout}>\n            <MeasurementGridList\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                createDialog={createDialog}\n                confirmDialog={confirmDialog}\n                updateDialog={updateDialog}\n                actionsDialog={actionsDialog}\n            />\n        </Layout>\n    )\n})\n\nexport default MeasurementList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Measurement/MeasurementList.js","import MeasurementList from './MeasurementList'\n\nexport {MeasurementList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Measurement/index.js","import React from 'react'\nimport injectJSS from 'react-jss'\nimport SingInLayout from '../../components/SingInLayout'\nimport Container from '../../components/Container'\n\nconst NotFound = ({classes}) => {\n    return (\n        <SingInLayout>\n            <Container className={classes.wrapper}>\n                <h1 className={classes.content}>\n                    404 <br/>\n                    Page not found\n                </h1>\n            </Container>\n        </SingInLayout>\n    )\n}\n\nexport default injectJSS({\n    wrapper: {\n        height: '100%',\n        display: 'flex !important',\n        justifyContent: 'center',\n        flexDirection: 'column'\n    },\n\n    content: {\n        textAlign: 'center'\n    }\n})(NotFound)\n\n\n\n// WEBPACK FOOTER //\n// src/containers/NotFound/NotFound.js","import NotFound from './NotFound'\n\nexport default NotFound\n\n\n\n// WEBPACK FOOTER //\n// src/containers/NotFound/index.js","import React from 'react'\nimport _ from 'lodash'\nimport moment from 'moment'\nimport {connect} from 'react-redux'\nimport {reset} from 'redux-form'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withState, withHandlers} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport numberFormat from '../../helpers/numberFormat'\nimport toBoolean from '../../helpers/toBoolean'\nimport * as ORDER_TAB from '../../constants/orderTab'\nimport {openErrorAction} from '../../actions/error'\n\nimport {\n    ORDER_CREATE_DIALOG_OPEN,\n    ORDER_UPDATE_DIALOG_OPEN,\n    ORDER_FILTER_KEY,\n    ORDER_FILTER_OPEN,\n    ORDER_TRANSACTIONS_DIALOG_OPEN,\n    ORDER_ITEM_RETURN_DIALOG_OPEN,\n    ORDER_RETURN_DIALOG_OPEN,\n    ORDER_SHORTAGE_DIALOG_OPEN,\n    TAB,\n    OrderGridList,\n    OrderPrint\n} from '../../components/Order'\nconst CLIENT_CREATE_DIALOG_OPEN = 'openClientCreate'\nconst CANCEL_ORDER_RETURN_DIALOG_OPEN = 'openCancelConfirmDialog'\nimport {\n    orderCreateAction,\n    orderUpdateAction,\n    orderListFetchAction,\n    orderDeleteAction,\n    orderItemFetchAction,\n    orderReturnAction,\n    orderReturnListAction,\n    orderTransactionFetchAction,\n    orderItemReturnFetchAction,\n    orderListPintFetchAction,\n    orderReturnCancelAction\n} from '../../actions/order'\nimport {\n    clientCreateAction\n} from '../../actions/client'\nimport {openSnackbarAction} from '../../actions/snackbar'\n\nconst MINUS_ONE = -1\nconst ZERO = 0\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['order', 'item', 'data'])\n        const payment = _.get(state, ['order', 'payment', 'data'])\n        const paymentLoading = _.get(state, ['order', 'payment', 'loading'])\n        const orderReturnList = _.get(state, ['order', 'returnList', 'data'])\n        const detailLoading = _.get(state, ['order', 'item', 'loading'])\n        const createLoading = _.get(state, ['order', 'create', 'loading'])\n        const createClientLoading = _.get(state, ['client', 'create', 'loading'])\n        const returnLoading = _.get(state, ['order', 'return', 'loading'])\n        const returnDataLoading = _.get(state, ['order', 'return', 'loading'])\n        const returnDialogLoading = _.get(state, ['order', 'returnList', 'loading'])\n        const shortageLoading = _.get(state, ['order', 'create', 'loading'])\n        const updateLoading = _.get(state, ['order', 'update', 'loading'])\n        const list = _.get(state, ['order', 'list', 'data'])\n        const listPrint = _.get(state, ['order', 'listPrint', 'data'])\n        const listPrintLoading = _.get(state, ['order', 'listPrint', 'loading'])\n        const listLoading = _.get(state, ['order', 'list', 'loading'])\n        const filterForm = _.get(state, ['form', 'OrderFilterForm'])\n        const createForm = _.get(state, ['form', 'OrderCreateForm'])\n        const clientCreateForm = _.get(state, ['form', 'ClientCreateForm'])\n        const returnForm = _.get(state, ['form', 'OrderReturnForm'])\n        const returnData = _.get(state, ['order', 'return', 'data', 'results'])\n        const products = _.get(state, ['form', 'OrderCreateForm', 'values', 'products'])\n        const filter = filterHelper(list, pathname, query)\n\n        return {\n            list,\n            listLoading,\n            detail,\n            payment,\n            listPrintLoading,\n            listPrint,\n            detailLoading,\n            createLoading,\n            createClientLoading,\n            returnLoading,\n            shortageLoading,\n            updateLoading,\n            filter,\n            filterForm,\n            paymentLoading,\n            createForm,\n            clientCreateForm,\n            returnForm,\n            returnData,\n            orderReturnList,\n            returnDataLoading,\n            returnDialogLoading,\n            products\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(orderListFetchAction(filter))\n    }),\n    withPropsOnChange((props, nextProps) => {\n        const prevTransaction = _.get(props, ['location', 'query', 'openTransactionsDialog'])\n        const nextTransaction = _.get(nextProps, ['location', 'query', 'openTransactionsDialog'])\n        return prevTransaction !== nextTransaction && nextTransaction === 'true'\n    }, ({dispatch, params}) => {\n        const orderId = _.toInteger(_.get(params, 'orderId'))\n        if (orderId > ZERO) {\n            dispatch(orderTransactionFetchAction(orderId))\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        const prevOrderId = _.get(props, ['params', 'orderId'])\n        const nextOrderId = _.get(nextProps, ['params', 'orderId'])\n        const prevTab = _.get(props, ['location', 'query', 'tab'])\n        const nextTab = _.get(nextProps, ['location', 'query', 'tab'])\n        return (prevOrderId !== nextOrderId || prevTab !== nextTab) && nextTab === 'return'\n    }, ({dispatch, params}) => {\n        const orderId = _.toInteger(_.get(params, 'orderId'))\n        if (orderId > ZERO) {\n            dispatch(orderItemReturnFetchAction(orderId))\n        }\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const orderId = _.get(nextProps, ['params', 'orderId'])\n\n        return orderId && _.get(props, ['params', 'orderId']) !== orderId\n    }, ({dispatch, params}) => {\n        const orderId = _.toInteger(_.get(params, 'orderId'))\n        orderId && dispatch(orderItemFetchAction(orderId))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const prevReturn = _.toInteger(_.get(props, ['location', 'query', 'openOrderItemReturnDialog']))\n        const nextReturn = _.toInteger(_.get(nextProps, ['location', 'query', 'openOrderItemReturnDialog']))\n        return prevReturn !== nextReturn && nextReturn > ZERO\n    }, ({dispatch, location}) => {\n        const returnItemId = _.toInteger(_.get(location, ['query', 'openOrderItemReturnDialog']))\n        if (returnItemId > ZERO) {\n            dispatch(orderReturnListAction(returnItemId))\n        }\n    }),\n\n    withState('openConfirmDialog', 'setOpenConfirmDialog', false),\n    withState('openPrint', 'setOpenPrint', false),\n\n    withHandlers({\n        handleOpenPrintDialog: props => () => {\n            const {setOpenPrint, dispatch, filter} = props\n            setOpenPrint(true)\n            dispatch(orderListPintFetchAction(filter))\n                .then(() => {\n                    window.print()\n                })\n        },\n\n        handleClosePrintDialog: props => () => {\n            const {setOpenPrint} = props\n            setOpenPrint(false)\n        },\n\n        handleTabChange: props => (tab) => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({\n                pathname: pathname,\n                query: filter.getParams({[TAB]: tab})\n            })\n        },\n\n        handleOpenConfirmDialog: props => () => {\n            const {setOpenConfirmDialog} = props\n            setOpenConfirmDialog(true)\n        },\n\n        handleCloseConfirmDialog: props => () => {\n            const {setOpenConfirmDialog} = props\n            setOpenConfirmDialog(false)\n        },\n        handleSendConfirmDialog: props => () => {\n            const {dispatch, detail, setOpenConfirmDialog, filter} = props\n            dispatch(orderDeleteAction(detail.id))\n                .then(() => {\n                    setOpenConfirmDialog(false)\n                    dispatch(orderListFetchAction(filter))\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\n                })\n                .catch(() => {\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\n                })\n        },\n\n        handleOpenFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[ORDER_FILTER_OPEN]: true})})\n        },\n\n        handleCloseFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[ORDER_FILTER_OPEN]: false})})\n        },\n\n        handleClearFilterDialog: props => () => {\n            const {location: {pathname}} = props\n            hashHistory.push({pathname, query: {}})\n        },\n\n        handleSubmitFilterDialog: props => () => {\n            const {filter, filterForm} = props\n            const fromDate = _.get(filterForm, ['values', 'data', 'fromDate']) || null\n            const deliveryFromDate = _.get(filterForm, ['values', 'deliveryDate', 'fromDate']) || null\n            const toDate = _.get(filterForm, ['values', 'data', 'toDate']) || null\n            const deliveryToDate = _.get(filterForm, ['values', 'deliveryDate', 'toDate']) || null\n            const client = _.get(filterForm, ['values', 'client', 'value']) || null\n            const orderStatus = _.get(filterForm, ['values', 'orderStatus', 'value']) || null\n            const shop = _.get(filterForm, ['values', 'shop', 'value']) || null\n            const zone = _.get(filterForm, ['values', 'zone', 'value']) || null\n            const dept = _.get(filterForm, ['values', 'dept', 'value']) || null\n            const initiator = _.get(filterForm, ['values', 'initiator', 'value']) || null\n\n            filter.filterBy({\n                [ORDER_FILTER_OPEN]: false,\n                [ORDER_FILTER_KEY.CLIENT]: client,\n                [ORDER_FILTER_KEY.ORDERSTATUS]: orderStatus,\n                [ORDER_FILTER_KEY.INITIATOR]: initiator,\n                [ORDER_FILTER_KEY.ZONE]: zone,\n                [ORDER_FILTER_KEY.SHOP]: shop,\n                [ORDER_FILTER_KEY.DEPT]: dept,\n                [ORDER_FILTER_KEY.FROM_DATE]: fromDate && fromDate.format('YYYY-MM-DD'),\n                [ORDER_FILTER_KEY.DELIVERY_FROM_DATE]: deliveryFromDate && deliveryFromDate.format('YYYY-MM-DD'),\n                [ORDER_FILTER_KEY.TO_DATE]: toDate && toDate.format('YYYY-MM-DD'),\n                [ORDER_FILTER_KEY.DELIVERY_TO_DATE]: deliveryToDate && deliveryToDate.format('YYYY-MM-DD')\n            })\n        },\n\n        handleOpenCreateDialog: props => () => {\n            const {dispatch, location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[ORDER_CREATE_DIALOG_OPEN]: true})})\n            dispatch(reset('OrderCreateForm'))\n        },\n\n        handleCloseCreateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[ORDER_CREATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitCreateDialog: props => () => {\n            const {dispatch, createForm, filter, location: {pathname}} = props\n\n            return dispatch(orderCreateAction(_.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[ORDER_CREATE_DIALOG_OPEN]: false})})\n                    dispatch(orderListFetchAction(filter))\n                })\n        },\n\n        handleOpenTransactionsDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[ORDER_TRANSACTIONS_DIALOG_OPEN]: true})})\n        },\n\n        handleCloseTransactionsDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[ORDER_TRANSACTIONS_DIALOG_OPEN]: false})})\n        },\n\n        handleOpenItemReturnDialog: props => (id) => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[ORDER_ITEM_RETURN_DIALOG_OPEN]: id})})\n        },\n\n        handleCloseItemReturnDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[ORDER_ITEM_RETURN_DIALOG_OPEN]: MINUS_ONE})})\n        },\n\n        handleOpenReturnDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[ORDER_RETURN_DIALOG_OPEN]: true})})\n        },\n\n        handleCloseReturnDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[ORDER_RETURN_DIALOG_OPEN]: false})})\n        },\n        handleSubmitReturnDialog: props => () => {\n            const {dispatch, returnForm, detail, filter, location: {pathname}, params} = props\n            const orderId = _.toInteger(_.get(params, 'orderId'))\n            return dispatch(orderReturnAction(_.get(returnForm, ['values']), detail))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[ORDER_RETURN_DIALOG_OPEN]: false})})\n                    dispatch(orderItemReturnFetchAction(orderId))\n                    dispatch(orderItemFetchAction(orderId))\n                })\n                .catch((error) => {\n                    const commentError = _.get(error, ['comment', '0'])\n                    const amountError = _.map(_.get(error, 'returned_products'), (item) => {\n                        const amount = _.get(item, ['amount', '0'])\n                        if (amount) {\n                            return (\n                                <div style={{marginTop: '10px'}}>Количество возвращаемого товара превышает количество\n                                    товара в заказе</div>)\n                        }\n                        return false\n                    })\n                    dispatch(openErrorAction({\n                        message: <div>{(commentError) && 'Введите комментарий к возврату!'} {amountError}</div>\n                    }))\n                })\n        },\n        handleOpenCancelOrderReturnDialog: props => (id) => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[CANCEL_ORDER_RETURN_DIALOG_OPEN]: id})})\n        },\n\n        handleCloseCancelOrderReturnDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[CANCEL_ORDER_RETURN_DIALOG_OPEN]: false})})\n        },\n        handleSubmitCancelOrderReturnDialog: props => () => {\n            const {dispatch, filter, params, location: {pathname, query}} = props\n            const orderReturnId = _.toInteger(_.get(query, CANCEL_ORDER_RETURN_DIALOG_OPEN))\n            const orderId = _.toInteger(_.get(params, 'orderId'))\n            return dispatch(orderReturnCancelAction(orderReturnId))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно отменена'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[CANCEL_ORDER_RETURN_DIALOG_OPEN]: false})})\n                    dispatch(orderItemReturnFetchAction(orderId))\n                    dispatch(orderItemFetchAction(orderId))\n                })\n        },\n\n        handleOpenShortageDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[ORDER_SHORTAGE_DIALOG_OPEN]: true})})\n        },\n\n        handleCloseShortageDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[ORDER_SHORTAGE_DIALOG_OPEN]: false})})\n        },\n        handleSubmitShortageDialog: props => () => {\n            const {dispatch, createForm, filter, location: {pathname}} = props\n            return dispatch(orderCreateAction(_.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно отправлено'}))\n                })\n                .then(() => {\n                    hashHistory.push({\n                        pathname,\n                        query: filter.getParams({\n                            [ORDER_SHORTAGE_DIALOG_OPEN]: false,\n                            [ORDER_CREATE_DIALOG_OPEN]: false\n                        })\n                    })\n                    dispatch(orderListFetchAction(filter))\n                })\n        },\n\n        handleOpenUpdateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[ORDER_UPDATE_DIALOG_OPEN]: true})})\n        },\n\n        handleCloseUpdateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[ORDER_UPDATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitUpdateDialog: props => () => {\n            const {dispatch, createForm, filter, location: {pathname}} = props\n            const orderId = _.toInteger(_.get(props, ['params', 'orderId']))\n\n            return dispatch(orderUpdateAction(orderId, _.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(orderItemFetchAction(orderId))\n                })\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[ORDER_UPDATE_DIALOG_OPEN]: false})})\n                    dispatch(orderListFetchAction(filter))\n                })\n        },\n\n        handleOpenCreateClientDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[CLIENT_CREATE_DIALOG_OPEN]: true})})\n        },\n\n        handleCloseCreateClientDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[CLIENT_CREATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitCreateClientDialog: props => () => {\n            const {dispatch, clientCreateForm, filter} = props\n\n            return dispatch(clientCreateAction(_.get(clientCreateForm, ['values'])))\n                .then((data) => {\n                    const value = _.get(data, ['value', 'id'])\n                    dispatch({\n                        type: '@@redux-form/CHANGE',\n                        payload: {text: '', value: value},\n                        meta: {\n                            field: 'client',\n                            touch: false,\n                            form: 'OrderCreateForm',\n                            persistentSubmitErrors: false\n                        }\n                    })\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push(filter.createURL({[CLIENT_CREATE_DIALOG_OPEN]: false}))\n                })\n        },\n\n        handleGetDocument: props => (id) => {\n            const {dispatch, filter, setOpenPrint} = props\n            setOpenPrint(true)\n            return dispatch(orderListPintFetchAction(filter, id))\n                .then(() => {\n                    window.print()\n                })\n        },\n\n        handleCloseDetail: props => () => {\n            const {filter} = props\n            hashHistory.push({pathname: ROUTER.ORDER_LIST_URL, query: filter.getParams()})\n        },\n        handleRefreshList: props => () => {\n            const {dispatch, filter} = props\n            return dispatch(orderListFetchAction(filter))\n        }\n    }),\n)\n\nconst OrderList = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        detail,\n        returnData,\n        orderReturnList,\n        payment,\n        detailLoading,\n        createLoading,\n        createClientLoading,\n        returnLoading,\n        shortageLoading,\n        updateLoading,\n        returnDataLoading,\n        returnDialogLoading,\n        filter,\n        layout,\n        products,\n        openPrint,\n        paymentLoading,\n        params,\n        listPrint,\n        listPrintLoading\n    } = props\n\n    const openFilterDialog = toBoolean(_.get(location, ['query', ORDER_FILTER_OPEN]))\n    const openCreateDialog = toBoolean(_.get(location, ['query', ORDER_CREATE_DIALOG_OPEN]))\n    const openTransactionsDialog = toBoolean(_.get(location, ['query', ORDER_TRANSACTIONS_DIALOG_OPEN]))\n    const openOrderItemReturnDialog = _.toInteger(_.get(location, ['query', 'openOrderItemReturnDialog']) || MINUS_ONE) > MINUS_ONE\n    const openReturnDialog = toBoolean(_.get(location, ['query', ORDER_RETURN_DIALOG_OPEN]))\n    const openShortageDialog = toBoolean(_.get(location, ['query', ORDER_SHORTAGE_DIALOG_OPEN]))\n    const openUpdateDialog = toBoolean(_.get(location, ['query', ORDER_UPDATE_DIALOG_OPEN]))\n    const openCancelOrderReturnDialog = _.toInteger(_.get(location, ['query', CANCEL_ORDER_RETURN_DIALOG_OPEN]))\n    const client = _.toInteger(filter.getParam(ORDER_FILTER_KEY.CLIENT))\n    const zone = _.toInteger(filter.getParam(ORDER_FILTER_KEY.ZONE))\n    const orderStatus = _.toInteger(filter.getParam(ORDER_FILTER_KEY.ORDERSTATUS))\n    const fromDate = filter.getParam(ORDER_FILTER_KEY.FROM_DATE)\n    const deliveryFromDate = filter.getParam(ORDER_FILTER_KEY.DELIVERY_FROM_DATE)\n    const toDate = filter.getParam(ORDER_FILTER_KEY.TO_DATE)\n    const deliveryToDate = filter.getParam(ORDER_FILTER_KEY.DELIVERY_TO_DATE)\n    const detailId = _.toInteger(_.get(params, 'orderId'))\n    const tab = _.get(location, ['query', TAB]) || ORDER_TAB.ORDER_DEFAULT_TAB\n\n    const openCreateClientDialog = toBoolean(_.get(location, ['query', CLIENT_CREATE_DIALOG_OPEN]))\n    const createDialog = {\n        createLoading,\n        openCreateDialog,\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\n    }\n\n    const transactionsDialog = {\n        openTransactionsDialog,\n        handleOpenTransactionsDialog: props.handleOpenTransactionsDialog,\n        handleCloseTransactionsDialog: props.handleCloseTransactionsDialog\n    }\n\n    const cancelOrderReturnDialog = {\n        openCancelOrderReturnDialog,\n        handleOpenCancelOrderReturnDialog: props.handleOpenCancelOrderReturnDialog,\n        handleCloseCancelOrderReturnDialog: props.handleCloseCancelOrderReturnDialog,\n        handleSubmitCancelOrderReturnDialog: props.handleSubmitCancelOrderReturnDialog\n    }\n    const itemReturnDialog = {\n        returnDialogLoading,\n        openOrderItemReturnDialog,\n        handleOpenItemReturnDialog: props.handleOpenItemReturnDialog,\n        handleCloseItemReturnDialog: props.handleCloseItemReturnDialog\n    }\n\n    const returnDialog = {\n        returnLoading,\n        openReturnDialog,\n        handleOpenReturnDialog: props.handleOpenReturnDialog,\n        handleCloseReturnDialog: props.handleCloseReturnDialog,\n        handleSubmitReturnDialog: props.handleSubmitReturnDialog\n    }\n    const shortageDialog = {\n        shortageLoading,\n        openShortageDialog,\n        handleOpenShortageDialog: props.handleOpenShortageDialog,\n        handleCloseShortageDialog: props.handleCloseShortageDialog,\n        handleSubmitShortageDialog: props.handleSubmitShortageDialog\n    }\n\n    const getDocument = {\n        handleGetDocument: props.handleGetDocument\n    }\n\n    const confirmDialog = {\n        openConfirmDialog: props.openConfirmDialog,\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\n        handleSendConfirmDialog: props.handleSendConfirmDialog\n    }\n\n    const createClientDialog = {\n        initialValues: (() => {\n            return {\n                contacts: [{}]\n            }\n        })(),\n        createClientLoading,\n        openCreateClientDialog,\n        handleOpenCreateClientDialog: props.handleOpenCreateClientDialog,\n        handleCloseCreateClientDialog: props.handleCloseCreateClientDialog,\n        handleSubmitCreateClientDialog: props.handleSubmitCreateClientDialog\n    }\n    const forUpdateProducts = _.map(_.get(detail, 'products'), (item) => {\n        return {\n            amount: _.get(item, 'amount'),\n            cost: _.get(item, 'price'),\n            measurement: _.get(item, ['product', 'measurement', 'name']),\n            product: {\n                value: _.get(item, ['product', 'id']),\n                text: _.get(item, ['product', 'name'])\n            }\n\n        }\n    })\n\n    const updateDialog = {\n        initialValues: (() => {\n            if (!detail || openCreateDialog) {\n                return {}\n            }\n            const HUND = 100\n            const discountPrice = _.toNumber(_.get(detail, 'discountPrice'))\n            const totalPrice = _.toNumber(_.get(detail, 'totalPrice'))\n            const discount = (discountPrice / (discountPrice + totalPrice)) * HUND\n\n            const deliveryType = _.toInteger(_.get(detail, ['deliveryType', 'id']))\n            let deliveryTypeText = 'Доставка'\n            if (deliveryType === ZERO) {\n                deliveryTypeText = 'Самовывоз'\n            }\n            const dealType = _.toInteger(_.get(detail, 'dealType'))\n            let dealTypeText = 'Консигнация'\n            if (dealType === ZERO) {\n                deliveryTypeText = 'Стандартная'\n            }\n            return {\n                client: {\n                    value: _.toInteger(_.get(detail, ['client', 'id']))\n                },\n                contact: {\n                    value: _.toInteger(_.get(detail, ['contact', 'id']))\n                },\n                market: {\n                    value: _.toInteger(_.get(detail, ['market', 'id']))\n                },\n                deliveryType: {\n                    value: deliveryType,\n                    text: deliveryTypeText\n                },\n                dealType: {\n                    value: dealType,\n                    text: dealTypeText\n                },\n                deliveryDate: moment(_.get(detail, ['dateDelivery'])).toDate(),\n                deliveryPrice: numberFormat(_.get(detail, 'deliveryPrice')),\n                discountPrice: discount,\n                paymentDate: moment(_.get(detail, ['paymentDate'])).toDate(),\n                products: forUpdateProducts\n            }\n        })(),\n        updateLoading: detailLoading || updateLoading,\n        openUpdateDialog,\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\n    }\n\n    const filterDialog = {\n        initialValues: {\n            client: {\n                value: client\n            },\n            orderStatus: {\n                value: orderStatus\n            },\n            zone: {\n                value: zone\n            },\n            deliveryDate: {\n                deliveryFromDate: deliveryFromDate && moment(deliveryFromDate, 'YYYY-MM-DD'),\n                deliveryToDate: deliveryToDate && moment(deliveryToDate, 'YYYY-MM-DD')\n            },\n            date: {\n                fromDate: fromDate && moment(fromDate, 'YYYY-MM-DD'),\n                toDate: toDate && moment(toDate, 'YYYY-MM-DD')\n            }\n        },\n        filterLoading: false,\n        openFilterDialog,\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\n        handleClearFilterDialog: props.handleClearFilterDialog,\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\n    }\n    const listPrintData = {\n        data: listPrint,\n        listPrintLoading\n    }\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n\n    const tabData = {\n        tab,\n        handleTabChange: props.handleTabChange\n    }\n\n    const detailData = {\n        id: detailId,\n        data: detail,\n        return: returnData,\n        detailLoading,\n        handleCloseDetail: props.handleCloseDetail\n    }\n\n    const paymentData = {\n        id: detailId,\n        data: payment,\n        paymentLoading\n    }\n\n    const printDialog = {\n        openPrint,\n        handleOpenPrintDialog: props.handleOpenPrintDialog,\n        handleClosePrintDialog: props.handleClosePrintDialog\n    }\n\n    if (openPrint) {\n        document.getElementById('wrapper').style.height = 'auto'\n\n        return <OrderPrint\n            printDialog={printDialog}\n            listPrintData={listPrintData}/>\n    }\n\n    document.getElementById('wrapper').style.height = '100%'\n    const order = true\n    return (\n        <Layout {...layout}>\n            <OrderGridList\n                filter={filter}\n                listData={listData}\n                tabData={tabData}\n                detailData={detailData}\n                returnListData={orderReturnList}\n                paymentData={paymentData}\n                createDialog={createDialog}\n                getDocument={getDocument}\n                createClientDialog={createClientDialog}\n                transactionsDialog={transactionsDialog}\n                itemReturnDialog={itemReturnDialog}\n                returnDialog={returnDialog}\n                shortageDialog={shortageDialog}\n                confirmDialog={confirmDialog}\n                returnDataLoading={returnDataLoading}\n                updateDialog={updateDialog}\n                filterDialog={filterDialog}\n                products={products}\n                printDialog={printDialog}\n                type={order}\n                refreshAction={props.handleRefreshList}\n                cancelOrderReturnDialog={cancelOrderReturnDialog}\n            />\n        </Layout>\n    )\n})\n\nexport default OrderList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Order/OrderList.js","import OrderList from './OrderList'\n\nexport {OrderList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Order/index.js","import React from 'react'\nimport moment from 'moment'\nimport _ from 'lodash'\nimport sprintf from 'sprintf'\nimport {connect} from 'react-redux'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withState, withHandlers} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport {\n    PENDING_EXPENSES_UPDATE_DIALOG_OPEN,\n    PENDING_EXPENSES_FILTER_KEY,\n    PENDING_EXPENSES_FILTER_OPEN,\n    PendingExpensesGridList\n} from '../../components/PendingExpenses'\nimport {\n    pendingExpensesUpdateAction,\n    pendingExpensesListFetchAction,\n    pendingExpensesItemFetchAction\n} from '../../actions/pendingExpenses'\n\nimport {openSnackbarAction} from '../../actions/snackbar'\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['pendingExpenses', 'item', 'data'])\n        const detailLoading = _.get(state, ['pendingExpenses', 'item', 'loading'])\n        const createLoading = _.get(state, ['pendingExpenses', 'create', 'loading'])\n        const updateLoading = _.get(state, ['pendingExpenses', 'update', 'loading'])\n        const list = _.get(state, ['pendingExpenses', 'list', 'data'])\n        const listLoading = _.get(state, ['pendingExpenses', 'list', 'loading'])\n        const filterForm = _.get(state, ['form', 'PendingExpensesFilterForm'])\n        const createForm = _.get(state, ['form', 'PendingExpensesCreateForm'])\n        const filter = filterHelper(list, pathname, query)\n\n        return {\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            createLoading,\n            updateLoading,\n            filter,\n            filterForm,\n            createForm\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(pendingExpensesListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const pendingExpensesId = _.get(nextProps, ['params', 'pendingExpensesId'])\n\n        return pendingExpensesId && _.get(props, ['params', 'pendingExpensesId']) !== pendingExpensesId\n    }, ({dispatch, params}) => {\n        const pendingExpensesId = _.toInteger(_.get(params, 'pendingExpensesId'))\n        pendingExpensesId && dispatch(pendingExpensesItemFetchAction(pendingExpensesId))\n    }),\n\n    withState('openConfirmDialog', 'setOpenConfirmDialog', false),\n\n    withHandlers({\n        handleOpenFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PENDING_EXPENSES_FILTER_OPEN]: true})})\n        },\n\n        handleCloseFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PENDING_EXPENSES_FILTER_OPEN]: false})})\n        },\n\n        handleClearFilterDialog: props => () => {\n            const {location: {pathname}} = props\n            hashHistory.push({pathname, query: {}})\n        },\n\n        handleSubmitFilterDialog: props => () => {\n            const {filter, filterForm} = props\n            const fromDate = _.get(filterForm, ['values', 'date', 'fromDate']) || null\n            const toDate = _.get(filterForm, ['values', 'date', 'toDate']) || null\n\n            filter.filterBy({\n                [PENDING_EXPENSES_FILTER_OPEN]: false,\n                [PENDING_EXPENSES_FILTER_KEY.FROM_DATE]: fromDate && fromDate.format('YYYY-MM-DD'),\n                [PENDING_EXPENSES_FILTER_KEY.TO_DATE]: toDate && toDate.format('YYYY-MM-DD')\n            })\n        },\n\n        handleOpenUpdateDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.PENDING_EXPENSES_ITEM_PATH, id),\n                query: filter.getParams({[PENDING_EXPENSES_UPDATE_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseUpdateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PENDING_EXPENSES_UPDATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitUpdateDialog: props => () => {\n            const {dispatch, createForm, filter, detail} = props\n\n            return dispatch(pendingExpensesUpdateAction(detail.id, _.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push(filter.createURL({[PENDING_EXPENSES_UPDATE_DIALOG_OPEN]: false}))\n                    dispatch(pendingExpensesListFetchAction(filter))\n                })\n        }\n    })\n)\n\nconst PendingExpensesList = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        updateLoading,\n        filter,\n        layout,\n        params\n    } = props\n\n    const openFilterDialog = toBoolean(_.get(location, ['query', PENDING_EXPENSES_FILTER_OPEN]))\n    const openUpdateDialog = toBoolean(_.get(location, ['query', PENDING_EXPENSES_UPDATE_DIALOG_OPEN]))\n    const fromDate = filter.getParam(PENDING_EXPENSES_FILTER_KEY.FROM_DATE)\n    const toDate = filter.getParam(PENDING_EXPENSES_FILTER_KEY.TO_DATE)\n    const detailId = _.toInteger(_.get(params, 'pendingExpensesId'))\n\n    const confirmDialog = {\n        openConfirmDialog: props.openConfirmDialog,\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\n        handleSendConfirmDialog: props.handleSendConfirmDialog\n    }\n\n    const updateDialog = {\n        initialValues: (() => {\n            if (!detail || openUpdateDialog) {\n                return {}\n            }\n\n            return {\n                name: _.get(detail, 'name'),\n                category: {\n                    value: _.get(detail, 'category')\n                },\n                address: _.get(detail, 'address'),\n                guide: _.get(detail, 'guide'),\n                phone: _.get(detail, 'phone'),\n                contactName: _.get(detail, 'contactName'),\n                official: _.get(detail, 'official'),\n                latLng: {\n                    lat: _.get(detail, 'lat'),\n                    lng: _.get(detail, 'lon')\n                }\n            }\n        })(),\n        updateLoading: detailLoading || updateLoading,\n        openUpdateDialog,\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\n    }\n\n    const filterDialog = {\n        initialValues: {\n            date: {\n                fromDate: fromDate && moment(fromDate, 'YYYY-MM-DD'),\n                toDate: toDate && moment(toDate, 'YYYY-MM-DD')\n            }\n        },\n        filterLoading: false,\n        openFilterDialog,\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\n        handleClearFilterDialog: props.handleClearFilterDialog,\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\n    }\n\n    const csvDialog = {\n        csvData: props.csvData,\n        csvLoading: props.csvLoading,\n        openCSVDialog: props.openCSVDialog,\n        handleOpenCSVDialog: props.handleOpenCSVDialog,\n        handleCloseCSVDialog: props.handleCloseCSVDialog\n    }\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n\n    const detailData = {\n        id: detailId,\n        data: detail,\n        detailLoading\n    }\n\n    return (\n        <Layout {...layout}>\n            <PendingExpensesGridList\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                confirmDialog={confirmDialog}\n                updateDialog={updateDialog}\n                filterDialog={filterDialog}\n                csvDialog={csvDialog}\n            />\n        </Layout>\n    )\n})\n\nexport default PendingExpensesList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/PendingExpenses/PendingExpensesList.js","import PendingExpensesList from './PendingExpensesList'\n\nexport {PendingExpensesList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/PendingExpenses/index.js","import React from 'react'\nimport moment from 'moment'\nimport _ from 'lodash'\nimport sprintf from 'sprintf'\nimport {connect} from 'react-redux'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withState, withHandlers} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport {reset} from 'redux-form'\nimport toBoolean from '../../helpers/toBoolean'\nimport filterHelper from '../../helpers/filter'\nimport {\n    PENDING_PAYMENTS_UPDATE_DIALOG_OPEN,\n    PENDING_PAYMENTS_FILTER_KEY,\n    PENDING_PAYMENTS_FILTER_OPEN,\n    PendingPaymentsGridList\n} from '../../components/PendingPayments'\nimport {\n    pendingPaymentsUpdateAction,\n    pendingPaymentsListFetchAction,\n    pendingPaymentsItemFetchAction\n} from '../../actions/pendingPayments'\n\nimport {openSnackbarAction} from '../../actions/snackbar'\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['pendingPayments', 'item', 'data'])\n        const detailLoading = _.get(state, ['pendingPayments', 'item', 'loading'])\n        const updateLoading = _.get(state, ['pendingPayments', 'update', 'loading'])\n        const list = _.get(state, ['pendingPayments', 'list', 'data'])\n        const listLoading = _.get(state, ['pendingPayments', 'list', 'loading'])\n        const filterForm = _.get(state, ['form', 'PendingPaymentsFilterForm'])\n        const createForm = _.get(state, ['form', 'PendingPaymentsCreateForm'])\n        const filter = filterHelper(list, pathname, query)\n\n        return {\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            updateLoading,\n            filter,\n            filterForm,\n            createForm\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(pendingPaymentsListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const pendingPaymentsId = _.get(nextProps, ['params', 'pendingPaymentsId'])\n\n        return pendingPaymentsId && _.get(props, ['params', 'pendingPaymentsId']) !== pendingPaymentsId\n    }, ({dispatch, params}) => {\n        const pendingPaymentsId = _.toInteger(_.get(params, 'pendingPaymentsId'))\n        pendingPaymentsId && dispatch(pendingPaymentsItemFetchAction(pendingPaymentsId))\n    }),\n\n    withState('openConfirmDialog', 'setOpenConfirmDialog', false),\n\n    withHandlers({\n        handleOpenFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PENDING_PAYMENTS_FILTER_OPEN]: true})})\n        },\n\n        handleCloseFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PENDING_PAYMENTS_FILTER_OPEN]: false})})\n        },\n\n        handleClearFilterDialog: props => () => {\n            const {location: {pathname}} = props\n            hashHistory.push({pathname, query: {}})\n        },\n\n        handleSubmitFilterDialog: props => () => {\n            const {filter, filterForm} = props\n            const fromDate = _.get(filterForm, ['values', 'date', 'fromDate']) || null\n            const toDate = _.get(filterForm, ['values', 'date', 'toDate']) || null\n            const client = _.get(filterForm, ['values', 'client', 'value']) || null\n            const market = _.get(filterForm, ['values', 'market', 'value']) || null\n            const paymentType = _.get(filterForm, ['values', 'paymentType', 'value']) || null\n\n            filter.filterBy({\n                [PENDING_PAYMENTS_FILTER_OPEN]: false,\n                [PENDING_PAYMENTS_FILTER_KEY.FROM_DATE]: fromDate && fromDate.format('YYYY-MM-DD'),\n                [PENDING_PAYMENTS_FILTER_KEY.TO_DATE]: toDate && toDate.format('YYYY-MM-DD'),\n                [PENDING_PAYMENTS_FILTER_KEY.MARKET]: market,\n                [PENDING_PAYMENTS_FILTER_KEY.CLIENT]: client,\n                [PENDING_PAYMENTS_FILTER_KEY.PAYMENT_TYPE]: paymentType\n            })\n        },\n\n        handleOpenUpdateDialog: props => (id) => {\n            const {filter, dispatch, detail} = props\n\n            hashHistory.push({\n                pathname: sprintf(ROUTER.PENDING_PAYMENTS_ITEM_PATH, id),\n                query: filter.getParams({[PENDING_PAYMENTS_UPDATE_DIALOG_OPEN]: true})\n            })\n            dispatch(reset('PendingPaymentsCreateForm'))\n            if (_.get(detail, 'id') === id) {\n                dispatch(pendingPaymentsItemFetchAction(id))\n            }\n        },\n\n        handleCloseUpdateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PENDING_PAYMENTS_UPDATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitUpdateDialog: props => () => {\n            const {dispatch, createForm, filter} = props\n            const pendingPaymentsId = _.toInteger(_.get(props, ['params', 'pendingPaymentsId']))\n\n            return dispatch(pendingPaymentsUpdateAction(_.get(createForm, ['values']), pendingPaymentsId))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push(filter.createURL({[PENDING_PAYMENTS_UPDATE_DIALOG_OPEN]: false}))\n                    dispatch(pendingPaymentsListFetchAction(filter))\n                })\n        }\n    })\n)\n\nconst PendingPaymentsList = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        updateLoading,\n        filter,\n        layout,\n        params\n    } = props\n\n    const openFilterDialog = toBoolean(_.get(location, ['query', PENDING_PAYMENTS_FILTER_OPEN]))\n    const openUpdateDialog = toBoolean(_.get(location, ['query', PENDING_PAYMENTS_UPDATE_DIALOG_OPEN]))\n    const fromDate = filter.getParam(PENDING_PAYMENTS_FILTER_KEY.FROM_DATE)\n    const paymentType = filter.getParam(PENDING_PAYMENTS_FILTER_KEY.PAYMENT_TYPE)\n    const client = filter.getParam(PENDING_PAYMENTS_FILTER_KEY.CLIENT)\n    const market = filter.getParam(PENDING_PAYMENTS_FILTER_KEY.MARKET)\n    const toDate = filter.getParam(PENDING_PAYMENTS_FILTER_KEY.TO_DATE)\n    const detailId = _.toInteger(_.get(params, 'pendingPaymentsId'))\n\n    const confirmDialog = {\n        openConfirmDialog: props.openConfirmDialog,\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\n        handleSendConfirmDialog: props.handleSendConfirmDialog\n    }\n\n    const updateDialog = {\n        initialValues: {},\n        updateLoading: detailLoading || updateLoading,\n        openUpdateDialog,\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\n    }\n\n    const filterDialog = {\n        initialValues: {\n            date: {\n                fromDate: fromDate && moment(fromDate, 'YYYY-MM-DD'),\n                toDate: toDate && moment(toDate, 'YYYY-MM-DD')\n            },\n            paymentType: {\n                value: paymentType\n            },\n            client: {\n                value: client\n            },\n            market: {\n                value: market\n            }\n        },\n        filterLoading: false,\n        openFilterDialog,\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\n        handleClearFilterDialog: props.handleClearFilterDialog,\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\n    }\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n\n    const detailData = {\n        id: detailId,\n        data: detail,\n        detailLoading\n    }\n\n    return (\n        <Layout {...layout}>\n            <PendingPaymentsGridList\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                confirmDialog={confirmDialog}\n                updateDialog={updateDialog}\n                filterDialog={filterDialog}\n            />\n        </Layout>\n    )\n})\n\nexport default PendingPaymentsList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/PendingPayments/PendingPaymentsList.js","import PendingPaymentsList from './PendingPaymentsList'\n\nexport {PendingPaymentsList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/PendingPayments/index.js","import React from 'react'\nimport _ from 'lodash'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport {connect} from 'react-redux'\nimport Layout from '../../components/Layout'\nimport {hashHistory} from 'react-router'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport {ADD_PLAN, PlanWrapper, USER_GROUP} from '../../components/Plan'\nimport {\n    planCreateAction,\n    planAgentsListFetchAction,\n    planItemFetchAction,\n    planZonesListFetchAction\n} from '../../actions/plan'\nimport {openSnackbarAction} from '../../actions/snackbar'\n\nconst ONE = 1\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const usersList = _.get(state, ['users', 'list', 'data'])\n        const usersListLoading = _.get(state, ['users', 'list', 'loading'])\n        const detail = _.get(state, ['users', 'item', 'data'])\n        const detailLoading = _.get(state, ['users', 'item', 'loading'])\n        const zones = _.get(state, ['zone', 'list', 'data'])\n        const zonesLoading = _.get(state, ['zone', 'list', 'loading'])\n        const stat = _.get(state, ['plan', 'statistics', 'data'])\n        const statLoading = _.get(state, ['plan', 'statistics', 'loading'])\n        const createForm = _.get(state, ['form', 'PlanCreateForm', 'values'])\n        const filter = filterHelper(usersList, pathname, query)\n        return {\n            query,\n            pathname,\n            usersList,\n            usersListLoading,\n            stat,\n            statLoading,\n            detail,\n            detailLoading,\n            zones,\n            zonesLoading,\n            createForm,\n            filter\n        }\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const prevTab = _.get(props, ['query', 'group'])\n        const nextTab = _.get(nextProps, ['query', 'group'])\n        const prevSearch = _.get(props, ['query', 'search'])\n        const nextSearch = _.get(nextProps, ['query', 'search'])\n\n        return (props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()) ||\n            (prevTab !== nextTab && nextTab) ||\n            (prevSearch !== nextSearch)\n    }, ({dispatch, filter}) => {\n        dispatch(planAgentsListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const agentId = _.get(nextProps, ['params', 'agentId'])\n        return agentId && _.get(props, ['params', 'agentId']) !== agentId\n    }, ({dispatch, params}) => {\n        const agentId = _.toInteger(_.get(params, 'agentId'))\n        agentId && dispatch(planItemFetchAction(agentId))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const prevDialog = toBoolean(_.get(props, ['query', ADD_PLAN]))\n        const nextDialog = toBoolean(_.get(nextProps, ['query', ADD_PLAN]))\n        return prevDialog !== nextDialog && nextDialog === true\n    }, ({dispatch}) => {\n        dispatch(planZonesListFetchAction())\n    }),\n\n    withHandlers({\n        handleClickTab: props => (id) => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[USER_GROUP]: id})})\n        },\n\n        handleOpenAddPlan: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[ADD_PLAN]: true})})\n        },\n\n        handleCloseAddPlan: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[ADD_PLAN]: false})})\n        },\n\n        handleSubmitAddPlan: props => () => {\n            const {location: {pathname}, dispatch, createForm, filter} = props\n\n            return dispatch(planCreateAction(createForm))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Зона успешно добавлена'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[ADD_PLAN]: false})})\n                    dispatch(planAgentsListFetchAction(filter))\n                })\n        }\n    })\n)\n\nconst PlanList = enhance((props) => {\n    const {\n        filter,\n        usersList,\n        usersListLoading,\n        location,\n        layout,\n        params,\n        stat,\n        statLoading,\n        detail,\n        detailLoading,\n        zones,\n        zonesLoading\n    } = props\n\n    const openAddPlan = toBoolean(_.get(location, ['query', ADD_PLAN]))\n    const groupId = _.toInteger(_.get(location, ['query', USER_GROUP]) || ONE)\n    const openDetail = !_.isEmpty(_.get(params, 'agentId'))\n    const detailId = _.toInteger(_.get(params, 'agentId'))\n\n    const addPlan = {\n        openAddPlan,\n        zonesList: _.get(zones, 'results'),\n        zonesLoading,\n        handleOpenAddPlan: props.handleOpenAddPlan,\n        handleCloseAddPlan: props.handleCloseAddPlan,\n        handleSubmitAddPlan: props.handleSubmitAddPlan\n    }\n\n    const listData = {\n        data: _.get(usersList, 'results'),\n        usersListLoading\n    }\n\n    const statData = {\n        data: stat,\n        statLoading\n    }\n\n    const detailData = {\n        openDetail,\n        id: detailId,\n        data: detail,\n        detailLoading\n    }\n\n    return (\n        <Layout {...layout}>\n            <PlanWrapper\n                filter={filter}\n                usersList={listData}\n                statData={statData}\n                addPlan={addPlan}\n                handleClickTab={props.handleClickTab}\n                groupId={groupId}\n                detailData={detailData}\n            />\n        </Layout>\n    )\n})\n\nexport default PlanList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Plan/PlanList.js","import PlanList from './PlanList'\n\nexport {PlanList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Plan/index.js","import React from 'react'\nimport _ from 'lodash'\nimport {reset} from 'redux-form'\nimport sprintf from 'sprintf'\nimport {connect} from 'react-redux'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withState, withHandlers} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport {\n    POSITION_CREATE_DIALOG_OPEN,\n    POSITION_UPDATE_DIALOG_OPEN,\n    ADD_COURSE_DIALOG_OPEN,\n    PositionGridList\n} from '../../components/Position'\nimport {\n    courseCreateAction,\n    positionCreateAction,\n    positionUpdateAction,\n    positionListFetchAction,\n    positionDeleteAction,\n    positionItemFetchAction\n} from '../../actions/position'\nimport {openSnackbarAction} from '../../actions/snackbar'\n\nconst ZERO = 0\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['position', 'item', 'data'])\n        const detailLoading = _.get(state, ['position', 'item', 'loading'])\n        const createLoading = _.get(state, ['position', 'create', 'loading'])\n        const updateLoading = _.get(state, ['position', 'update', 'loading'])\n        const list = _.get(state, ['position', 'list', 'data'])\n        const listLoading = _.get(state, ['position', 'list', 'loading'])\n        const createForm = _.get(state, ['form', 'PositionCreateForm'])\n        const courseForm = _.get(state, ['form', 'AddCourseForm'])\n        const baseCreateForm = _.get(state, ['form', 'BasePositionCreateForm'])\n        const detailId = _.toInteger(_.get(props, ['params', 'positionId']) || '-1')\n        const detailFilter = filterHelper(detail, pathname, query)\n        const filter = filterHelper(list, pathname, query)\n        return {\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            createLoading,\n            updateLoading,\n            filter,\n            baseCreateForm,\n            createForm,\n            courseForm,\n            detailId,\n            detailFilter\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(positionListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const positionId = _.get(nextProps, ['params', 'positionId'])\n        return (positionId && _.get(props, ['params', 'positionId']) !== positionId) ||\n            props.detailFilter.filterRequest() !== nextProps.detailFilter.filterRequest()\n    }, ({dispatch, params, detailFilter}) => {\n        const positionId = _.toInteger(_.get(params, 'positionId'))\n        positionId && dispatch(positionItemFetchAction(detailFilter, positionId))\n    }),\n\n    withState('openConfirmDialog', 'setOpenConfirmDialog', false),\n\n    withHandlers({\n        handleActionEdit: props => () => {\n            return null\n        },\n\n        handleOpenConfirmDialog: props => () => {\n            const {setOpenConfirmDialog} = props\n            setOpenConfirmDialog(true)\n        },\n\n        handleCloseConfirmDialog: props => () => {\n            const {setOpenConfirmDialog} = props\n            setOpenConfirmDialog(false)\n        },\n        handleSendConfirmDialog: props => () => {\n            const {dispatch, detailId, filter, setOpenConfirmDialog} = props\n            dispatch(positionDeleteAction(_.toNumber(detailId)))\n                .then(() => {\n                    setOpenConfirmDialog(false)\n                    dispatch(positionListFetchAction(filter))\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\n                })\n                .catch(() => {\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\n                })\n        },\n\n        handleOpenDeleteDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({\n                pathname,\n                query: filter.getParams({openDeleteDialog: 'yes'})\n            })\n        },\n\n        handleCloseDeleteDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({openDeleteDialog: false})})\n        },\n\n        handleOpenCourseDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[ADD_COURSE_DIALOG_OPEN]: true})})\n        },\n\n        handleCloseCourseDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[ADD_COURSE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitCourseDialog: props => () => {\n            const {location: {pathname}, dispatch, courseForm, filter, params} = props\n            const position = _.get(params, 'positionId')\n            return dispatch(courseCreateAction(_.get(courseForm, ['values']), position))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Курс обновлен'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[ADD_COURSE_DIALOG_OPEN]: false})})\n                    dispatch(positionListFetchAction(filter))\n                    dispatch(reset('AddCourseForm'))\n                })\n        },\n\n        handleOpenCreateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[POSITION_CREATE_DIALOG_OPEN]: true})})\n        },\n\n        handleCloseCreateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[POSITION_CREATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitCreateDialog: props => () => {\n            const {location: {pathname}, dispatch, createForm, filter} = props\n\n            return dispatch(positionCreateAction(_.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[POSITION_CREATE_DIALOG_OPEN]: false})})\n                    dispatch(positionListFetchAction(filter))\n                })\n        },\n\n        handleOpenUpdateDialog: props => (id) => {\n            const {dispatch, filter, location: {pathname}} = props\n            hashHistory.push({\n                pathname,\n                query: filter.getParams({[POSITION_UPDATE_DIALOG_OPEN]: true})\n            })\n            dispatch(positionItemFetchAction(id))\n        },\n\n        handleCloseUpdateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({\n                pathname,\n                query: filter.getParams({[POSITION_UPDATE_DIALOG_OPEN]: false})\n            })\n        },\n\n        handleSubmitUpdateDialog: props => () => {\n            const {dispatch, createForm, filter, detailId} = props\n\n            return dispatch(positionUpdateAction(detailId, _.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push(filter.createURL({[POSITION_UPDATE_DIALOG_OPEN]: false}))\n                    dispatch(positionListFetchAction(filter))\n                })\n        },\n\n        handlePositionClick: props => (id) => {\n            const {filter} = props\n            hashHistory.push({pathname: sprintf(ROUTER.POSITION_ITEM_PATH, _.toNumber(id)), query: filter.getParams()})\n        }\n    })\n)\n\nconst PositionList = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        createLoading,\n        updateLoading,\n        openConfirmDialog,\n        filter,\n        layout,\n        params,\n        detailId,\n        detailFilter\n    } = props\n\n    const openCreateDialog = toBoolean(_.get(location, ['query', POSITION_CREATE_DIALOG_OPEN]))\n    const openCourseDialog = toBoolean(_.get(location, ['query', ADD_COURSE_DIALOG_OPEN]))\n    const openUpdateDialog = toBoolean(_.get(location, ['query', POSITION_UPDATE_DIALOG_OPEN]))\n\n    if (_.get(list, ['results']) && !_.get(params, 'positionId')) {\n        const positionMiniId = _.get(_.nth(_.get(list, ['results']), ZERO), 'id')\n        props.handlePositionClick(positionMiniId)\n    }\n\n    const positionDetailId = _.toInteger(_.get(params, 'positionId'))\n\n    const actionsDialog = {\n        handleActionEdit: props.handleActionEdit,\n        handleActionDelete: props.handleOpenDeleteDialog\n    }\n\n    const createDialog = {\n        initialValues: (() => {\n            return {}\n        })(),\n        createLoading,\n        openCreateDialog,\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\n    }\n    const courseDialog = {\n        initialValues: (() => {\n            return {}\n        })(),\n        openCourseDialog,\n        handleOpenCourseDialog: props.handleOpenCourseDialog,\n        handleCloseCourseDialog: props.handleCloseCourseDialog,\n        handleSubmitCourseDialog: props.handleSubmitCourseDialog\n    }\n\n    const confirmDialog = {\n        openConfirmDialog: openConfirmDialog,\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\n        handleSendConfirmDialog: props.handleSendConfirmDialog\n    }\n\n    const updateDialog = {\n        initialValues: (() => {\n            const positionName = _.get(_.find((_.get(list, 'results')), {'id': detailId}), 'name')\n            const positionRate = _.get(_.find((_.get(list, 'results')), {'id': detailId}), 'rate')\n            if (!positionName || openCreateDialog) {\n                return {}\n            }\n            return {\n                name: positionName,\n                rate: positionRate\n            }\n        })(),\n        updateLoading: detailLoading || updateLoading,\n        openUpdateDialog,\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\n    }\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading,\n        handlePositionClick: props.handlePositionClick\n    }\n\n    const detailData = {\n        id: positionDetailId,\n        data: detail,\n        detailLoading\n    }\n\n    return (\n        <Layout {...layout}>\n            <PositionGridList\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                createDialog={createDialog}\n                courseDialog={courseDialog}\n                confirmDialog={confirmDialog}\n                updateDialog={updateDialog}\n                actionsDialog={actionsDialog}\n                detailId={detailId}\n                detailFilter={detailFilter}\n            />\n        </Layout>\n    )\n})\n\nexport default PositionList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Position/PositionList.js","import PositionList from './PositionList'\n\nexport {PositionList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Position/index.js","import React from 'react'\nimport _ from 'lodash'\nimport {connect} from 'react-redux'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport numberFormat from '../../helpers/numberFormat'\nimport {reset} from 'redux-form'\nimport {\n    PRICE_FILTER_KEY,\n    PRICE_FILTER_OPEN,\n    PRICE_SUPPLY_DIALOG_OPEN,\n    PRICE_SET_FORM_OPEN,\n    PriceGridList\n} from '../../components/Price'\nimport {\n    priceCreateAction,\n    priceListFetchAction,\n    priceItemFetchAction,\n    getPriceItemsAction,\n    priceItemHistoryFetchAction,\n    priceItemExpensesFetchAction\n} from '../../actions/price'\nimport {marketTypeGetAllAction} from '../../actions/marketType'\nimport {openSnackbarAction} from '../../actions/snackbar'\nconst ZERO = 0\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['price', 'item', 'data'])\n        const detailLoading = _.get(state, ['price', 'item', 'loading'])\n        const list = _.get(state, ['price', 'list', 'data'])\n        const listLoading = _.get(state, ['price', 'list', 'loading'])\n        const filterForm = _.get(state, ['form', 'PriceFilterForm'])\n        const createForm = _.get(state, ['form', 'PriceCreateForm'])\n        const globalForm = _.get(state, ['form', 'PriceGlobalForm'])\n        const filter = filterHelper(list, pathname, query)\n        const marketTypeList = _.get(state, ['marketType', 'list', 'data'])\n        const marketTypeLoading = _.get(state, ['marketType', 'list', 'loading'])\n        const priceListItemsList = _.get(state, ['price', 'price', 'data'])\n        const priceListItemsLoading = _.get(state, ['price', 'price', 'loading'])\n        const priceItemHistoryList = _.get(state, ['price', 'history', 'data'])\n        const priceItemHistoryLoading = _.get(state, ['price', 'history', 'loading'])\n        const priceItemExpenseList = _.get(state, ['price', 'expense', 'data'])\n        const priceItemExpenseLoading = _.get(state, ['price', 'expense', 'loading'])\n        return {\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            filter,\n            marketTypeList,\n            marketTypeLoading,\n            filterForm,\n            createForm,\n            priceListItemsList,\n            priceListItemsLoading,\n            priceItemHistoryList,\n            priceItemHistoryLoading,\n            priceItemExpenseList,\n            priceItemExpenseLoading,\n            globalForm\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(priceListFetchAction(filter))\n    }),\n    withPropsOnChange((props, nextProps) => {\n        const priceId = _.get(nextProps, ['params', 'priceId']) || ZERO\n        return priceId > ZERO && _.get(props, ['params', 'priceId']) !== priceId\n    }, ({dispatch, params, location}) => {\n        const priceId = _.toInteger(_.get(params, 'priceId'))\n        const supplyId = _.toInteger(_.get(location, ['query', PRICE_SUPPLY_DIALOG_OPEN]))\n        if (priceId > ZERO) {\n            dispatch(priceItemFetchAction(priceId))\n            dispatch(getPriceItemsAction(priceId))\n            dispatch(marketTypeGetAllAction())\n            dispatch(priceItemHistoryFetchAction(priceId))\n        }\n        if (supplyId > ZERO) {\n            dispatch(priceItemExpensesFetchAction(supplyId))\n        }\n    }),\n\n    withHandlers({\n        handleOpenFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PRICE_FILTER_OPEN]: true})})\n        },\n        handleCloseFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PRICE_FILTER_OPEN]: false})})\n        },\n        handleClearFilterDialog: props => () => {\n            const {location: {pathname}, dispatch} = props\n            hashHistory.push({pathname, query: {}})\n            dispatch(reset('PriceFilterForm'))\n        },\n        handleSubmitFilterDialog: props => () => {\n            const {filter, filterForm} = props\n            const type = _.get(filterForm, ['values', 'type', 'value']) || null\n            const measurement = _.get(filterForm, ['values', 'measurement', 'value']) || null\n            const brand = _.get(filterForm, ['values', 'brand', 'value']) || null\n            filter.filterBy({\n                [PRICE_FILTER_OPEN]: false,\n                [PRICE_FILTER_KEY.TYPE]: type,\n                [PRICE_FILTER_KEY.MEASUREMENT]: measurement,\n                [PRICE_FILTER_KEY.BRAND]: brand\n            })\n        },\n        handleOpenSupplyDialog: props => (id) => {\n            const {location: {pathname}, filter, dispatch} = props\n            hashHistory.push({pathname, query: filter.getParams({[PRICE_SUPPLY_DIALOG_OPEN]: id})})\n            return dispatch(priceItemExpensesFetchAction(id))\n        },\n        handleCloseSupplyDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PRICE_SUPPLY_DIALOG_OPEN]: false})})\n        },\n        handleOpenPriceSetForm: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PRICE_SET_FORM_OPEN]: true})})\n        },\n        handleClosePriceSetForm: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PRICE_SET_FORM_OPEN]: false})})\n        },\n        handleSubmitPriceSetForm: props => () => {\n            const {dispatch, createForm, detail, params: {priceId}, location: {pathname}, filter} = props\n            const detailId = _.get(detail, 'id')\n            return dispatch(priceCreateAction(_.get(createForm, ['values']), priceId))\n                .then(() => {\n                    dispatch(priceListFetchAction(filter))\n                    dispatch(priceItemFetchAction(detailId))\n                    dispatch(getPriceItemsAction(detailId))\n                    hashHistory.push({pathname})\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n        },\n        handleSubmitGlobalPriceForm: props => () => {\n            const {globalForm} = props\n            const globalPrice = _.get(globalForm, ['values', 'globalPrice'])\n            return globalPrice\n        },\n        handleCloseDetail: props => () => {\n            const {filter} = props\n            hashHistory.push({pathname: ROUTER.PRICE_LIST_URL, query: filter.getParams()})\n        }\n    })\n)\n\nconst PriceList = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        marketTypeLoading,\n        marketTypeList,\n        priceListItemsList,\n        priceListItemsLoading,\n        priceItemHistoryList,\n        priceItemHistoryLoading,\n        priceItemExpenseList,\n        priceItemExpenseLoading,\n        filter,\n        layout,\n        params\n    } = props\n    const openFilterDialog = toBoolean(_.get(location, ['query', PRICE_FILTER_OPEN]))\n    const openPriceSupplyDialog = _.toInteger(_.get(location, ['query', PRICE_SUPPLY_DIALOG_OPEN]))\n    const openPriceSetForm = toBoolean(_.get(location, ['query', PRICE_SET_FORM_OPEN]))\n    const detailId = _.toInteger(_.get(params, 'priceId'))\n    const priceSupplyDialog = {\n        openPriceSupplyDialog,\n        handleOpenSupplyDialog: props.handleOpenSupplyDialog,\n        handleCloseSupplyDialog: props.handleCloseSupplyDialog\n    }\n    const filterDialog = {\n        initialValues: {\n        },\n        filterLoading: false,\n        openFilterDialog,\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\n        handleClearFilterDialog: props.handleClearFilterDialog,\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\n    }\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n    const getPriceByParams = (marketTypeId, fieldName) => {\n        const price = _.find(_.get(priceListItemsList, ['results']), (item) => {\n            return item.marketType.id === marketTypeId\n        })\n        if (fieldName === 'cash') {\n            const val = _.get(price, 'cashPrice') || ZERO\n            return numberFormat(val)\n        }\n        const val = _.get(price, 'transferPrice') || ZERO\n        return numberFormat(val)\n    }\n    const getCurrencyByParams = (marketTypeId) => {\n        const priceList = _.find(_.get(priceListItemsList, ['results']), (item) => {\n            return item.marketType.id === marketTypeId\n        })\n        return _.get(priceList, 'currency')\n    }\n    const detailData = {\n        priceItemExpenseLoading,\n        priceItemExpenseList,\n        priceItemHistoryList,\n        priceItemHistoryLoading,\n        id: detailId,\n        priceListItemsLoading,\n        marketTypeLoading: marketTypeLoading,\n        mergedList: () => {\n            return _.map(_.get(marketTypeList, 'results'), (item) => {\n                const marketTypeId = _.get(item, 'id')\n                const marketTypeName = _.get(item, 'name')\n                return {\n                    'cash_price': getPriceByParams(marketTypeId, 'cash'),\n                    'currency': getCurrencyByParams(marketTypeId),\n                    'transfer_price': getPriceByParams(marketTypeId, 'transfer'),\n                    'marketTypeId': marketTypeId,\n                    marketTypeName\n                }\n            })\n        },\n        data: detail,\n        detailLoading,\n        handleCloseDetail: props.handleCloseDetail\n    }\n    const priceSetForm = {\n        initialValues: (() => {\n            const priceList = _.map(detailData.mergedList(), (item) => {\n                return {\n                    'cash_price': _.get(item, 'cash_price'),\n                    'transfer_price': _.get(item, 'transfer_price'),\n                    'market_type': _.get(item, 'marketTypeId'),\n                    'currency': {value: _.get(item, ['currency', 'id'])}\n                }\n            })\n            return {'prices': priceList}\n        })(),\n        openPriceSetForm,\n        handleOpenPriceSetForm: props.handleOpenPriceSetForm,\n        handleClosePriceSetForm: props.handleClosePriceSetForm,\n        handleSubmitPriceSetForm: props.handleSubmitPriceSetForm\n    }\n    return (\n        <Layout {...layout}>\n            <PriceGridList\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                priceSupplyDialog={priceSupplyDialog}\n                priceSetForm={priceSetForm}\n                filterDialog={filterDialog}\n                onSubmit={props.handleSubmitGlobalPriceForm}\n            />\n        </Layout>\n    )\n})\nexport default PriceList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Price/PriceList.js","import PriceList from './PriceList'\n\nexport {PriceList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Price/index.js","import React from 'react'\nimport _ from 'lodash'\nimport sprintf from 'sprintf'\nimport moment from 'moment'\nimport {reset} from 'redux-form'\nimport {connect} from 'react-redux'\nimport {hashHistory} from 'react-router'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport Layout from '../../components/Layout'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport {setItemAction} from '../../components/ReduxForm/Provider/ProviderSearchField'\nimport {\n    PRICES_CREATE_DIALOG_OPEN,\n    PRICES_UPDATE_DIALOG_OPEN,\n    PRICES_FILTER_KEY,\n    PRICES_FILTER_OPEN,\n    PRICES_DELETE_DIALOG_OPEN,\n    PricesGridList\n} from '../../components/Prices'\nimport {\n    pricesCreateAction,\n    pricesUpdateAction,\n    pricesListFetchAction,\n    pricesDeleteAction,\n    pricesItemFetchAction\n} from '../../actions/prices'\n\nimport {openSnackbarAction} from '../../actions/snackbar'\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['prices', 'item', 'data'])\n        const detailLoading = _.get(state, ['prices', 'item', 'loading'])\n        const createLoading = _.get(state, ['prices', 'create', 'loading'])\n        const updateLoading = _.get(state, ['prices', 'update', 'loading'])\n        const list = _.get(state, ['prices', 'list', 'data'])\n        const listLoading = _.get(state, ['prices', 'list', 'loading'])\n        const filterForm = _.get(state, ['form', 'PricesFilterForm'])\n        const createForm = _.get(state, ['form', 'PricesCreateForm'])\n        const filter = filterHelper(list, pathname, query)\n\n        return {\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            createLoading,\n            updateLoading,\n            filter,\n            filterForm,\n            createForm\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(pricesListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const pricesId = _.get(nextProps, ['params', 'pricesId'])\n        return pricesId && _.get(props, ['params', 'pricesId']) !== pricesId\n    }, ({dispatch, params}) => {\n        const pricesId = _.toInteger(_.get(params, 'pricesId'))\n        pricesId && dispatch(pricesItemFetchAction(pricesId))\n    }),\n\n    withHandlers({\n        handleOpenConfirmDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PRICES_DELETE_DIALOG_OPEN]: true})})\n        },\n        handleCloseConfirmDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PRICES_DELETE_DIALOG_OPEN]: false})})\n        },\n        handleSendConfirmDialog: props => () => {\n            const {dispatch, location: {pathname}, filter, params} = props\n            const detailId = _.toNumber(_.get(params, 'pricesId'))\n            dispatch(pricesDeleteAction(detailId))\n                .catch(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно отменено'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[PRICES_DELETE_DIALOG_OPEN]: false})})\n                    dispatch(pricesListFetchAction(filter))\n                })\n        },\n\n        handleOpenFilterDialog: props => () => {\n            const {dispatch, location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PRICES_FILTER_OPEN]: true})})\n            dispatch(reset('PricesCreateForm'))\n        },\n\n        handleCloseFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PRICES_FILTER_OPEN]: false})})\n        },\n\n        handleClearFilterDialog: props => () => {\n            const {location: {pathname}} = props\n            hashHistory.push({pathname, query: {}})\n        },\n\n        handleSubmitFilterDialog: props => () => {\n            const {filter, filterForm} = props\n            const beginFromDate = _.get(filterForm, ['values', 'beginDate', 'fromDate']) || null\n            const beginToDate = _.get(filterForm, ['values', 'beginDate', 'toDate']) || null\n            const tillFromDate = _.get(filterForm, ['values', 'tillFromDate', 'fromDate']) || null\n            const tillToDate = _.get(filterForm, ['values', 'tillToDate', 'toDate']) || null\n\n            filter.filterBy({\n                [PRICES_FILTER_OPEN]: false,\n                [PRICES_FILTER_KEY.BEGIN_FROM_DATE]: beginFromDate && beginFromDate.format('YYYY-MM-DD'),\n                [PRICES_FILTER_KEY.BEGIN_TO_DATE]: beginToDate && beginToDate.format('YYYY-MM-DD'),\n                [PRICES_FILTER_KEY.TILL_FROM_DATE]: tillFromDate && tillFromDate.format('YYYY-MM-DD'),\n                [PRICES_FILTER_KEY.TILL_TO_DATE]: tillToDate && tillToDate.format('YYYY-MM-DD')\n            })\n        },\n\n        handleOpenCreateDialog: props => () => {\n            const {location: {pathname}, filter, dispatch} = props\n            hashHistory.push({pathname, query: filter.getParams({[PRICES_CREATE_DIALOG_OPEN]: true})})\n            dispatch(setItemAction(null, false))\n        },\n\n        handleCloseCreateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PRICES_CREATE_DIALOG_OPEN]: false})})\n        },\n        handleSubmitCreateDialog: props => () => {\n            const {location: {pathname}, dispatch, createForm, filter} = props\n            return dispatch(pricesCreateAction(_.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[PRICES_CREATE_DIALOG_OPEN]: false})})\n                    dispatch(pricesListFetchAction(filter))\n                })\n        },\n\n        handleOpenUpdateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PRICES_UPDATE_DIALOG_OPEN]: true})})\n        },\n\n        handleCloseUpdateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PRICES_UPDATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitUpdateDialog: props => () => {\n            const {dispatch, createForm, filter} = props\n            const pricesId = _.toInteger(_.get(props, ['params', 'pricesId']))\n\n            return dispatch(pricesUpdateAction(pricesId, _.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(pricesItemFetchAction(pricesId))\n                })\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push(filter.createURL({[PRICES_UPDATE_DIALOG_OPEN]: false}))\n                    dispatch(pricesListFetchAction(filter))\n                })\n        },\n        handleCloseDetail: props => () => {\n            const {filter} = props\n            hashHistory.push({pathname: ROUTER.PRICES_LIST_URL, query: filter.getParams()})\n        },\n\n        handleClickDetail: props => (id) => {\n            hashHistory.push({pathname: sprintf(ROUTER.PRICES_ITEM_PATH, id), query: {}})\n        }\n    })\n)\n\nconst PricesList = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        createLoading,\n        updateLoading,\n        filter,\n        layout,\n        params\n    } = props\n\n    const openFilterDialog = toBoolean(_.get(location, ['query', PRICES_FILTER_OPEN]))\n    const openCreateDialog = toBoolean(_.get(location, ['query', PRICES_CREATE_DIALOG_OPEN]))\n    const openUpdateDialog = toBoolean(_.get(location, ['query', PRICES_UPDATE_DIALOG_OPEN]))\n    const openConfirmDialog = toBoolean(_.get(location, ['query', PRICES_DELETE_DIALOG_OPEN]))\n    const beginFromDate = filter.getParam(PRICES_FILTER_KEY.BEGIN_FROM_DATE)\n    const beginToDate = filter.getParam(PRICES_FILTER_KEY.BEGIN_TO_DATE)\n    const tillFromDate = filter.getParam(PRICES_FILTER_KEY.TILL_FROM_DATE)\n    const tillToDate = filter.getParam(PRICES_FILTER_KEY.TILL_TO_DATE)\n    const detailId = _.get(params, 'pricesId')\n\n    const createDialog = {\n        createLoading,\n        openCreateDialog,\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\n    }\n\n    const confirmDialog = {\n        openConfirmDialog: openConfirmDialog,\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\n        handleSendConfirmDialog: props.handleSendConfirmDialog\n    }\n    const forUpdateProducts = _.map(_.get(detail, 'products'), (item) => {\n        return {\n            product: {\n                text: _.get(item, ['product', 'name']),\n                value: {\n                    id: _.get(item, ['product', 'id']),\n                    name: _.get(item, ['product', 'name']),\n                    measurement: _.get(item, ['product', 'measurement'])\n                }\n            },\n            amount: _.get(item, 'amount')\n        }\n    })\n    const forUpdateBonus = _.map(_.get(detail, 'products'), (item) => {\n        return {\n            bonusProduct: {\n                text: _.get(item, ['product', 'name']),\n                value: {\n                    id: _.get(item, ['product', 'id']),\n                    name: _.get(item, ['product', 'name']),\n                    measurement: _.get(item, ['product', 'measurement'])\n                }\n            },\n            bonusAmount: _.get(item, 'amount'),\n            giftProduct: {\n                text: _.get(item, ['bonusProduct', 'name']),\n                value: {\n                    id: _.get(item, ['bonusProduct', 'id']),\n                    name: _.get(item, ['bonusProduct', 'name']),\n                    measurement: _.get(item, ['bonusProduct', 'measurement'])\n                }\n            },\n            giftAmount: _.get(item, 'bonusAmount')\n        }\n    })\n    const updateDialog = {\n        initialValues: (() => {\n            const promotionType = _.get(detail, 'type')\n            if (!detail || openCreateDialog) {\n                return {}\n            }\n            return {\n                name: _.get(detail, 'name'),\n                discount: _.get(detail, 'discount'),\n                beginDate: moment(_.get(detail, ['beginDate'])).toDate(),\n                tillDate: moment(_.get(detail, ['tillDate'])).toDate(),\n                products: forUpdateProducts,\n                bonusProducts: forUpdateBonus && forUpdateBonus,\n                promotionType: promotionType\n            }\n        })(),\n        updateLoading,\n        openUpdateDialog,\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\n    }\n\n    const filterDialog = {\n        initialValues: {\n            beginDate: {\n                fromDate: beginFromDate && moment(beginFromDate, 'YYYY-MM-DD'),\n                toDate: beginToDate && moment(beginToDate, 'YYYY-MM-DD')\n            },\n            tillDate: {\n                fromDate: tillFromDate && moment(tillFromDate, 'YYYY-MM-DD'),\n                toDate: tillToDate && moment(tillToDate, 'YYYY-MM-DD')\n            }\n        },\n        filterLoading: false,\n        openFilterDialog,\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\n        handleClearFilterDialog: props.handleClearFilterDialog,\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\n    }\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading,\n        handleClickDetail: props.handleClickDetail\n    }\n    const detailData = {\n        id: detailId,\n        data: detail,\n        detailLoading,\n        handleCloseDetail: props.handleCloseDetail\n    }\n\n    return (\n        <Layout {...layout}>\n            <PricesGridList\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                createDialog={createDialog}\n                confirmDialog={confirmDialog}\n                updateDialog={updateDialog}\n                filterDialog={filterDialog}\n            />\n        </Layout>\n    )\n})\n\nexport default PricesList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Prices/PricesList.js","import PricesList from './PricesList'\n\nexport {PricesList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Prices/index.js","import React from 'react'\nimport _ from 'lodash'\nimport sprintf from 'sprintf'\nimport {connect} from 'react-redux'\nimport {reset} from 'redux-form'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport {\n    PRODUCT_CREATE_DIALOG_OPEN,\n    PRODUCT_SHOW_PHOTO_OPEN,\n    PRODUCT_UPDATE_DIALOG_OPEN,\n    PRODUCT_DELETE_DIALOG_OPEN,\n    PRODUCT_FILTER_KEY,\n    PRODUCT_FILTER_OPEN,\n    ProductGridList\n} from '../../components/Product'\nimport {\n    productCreateAction,\n    productUpdateAction,\n    productListFetchAction,\n    productDeleteAction,\n    productItemFetchAction\n} from '../../actions/product'\n\nimport {openSnackbarAction} from '../../actions/snackbar'\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['product', 'item', 'data'])\n        const detailLoading = _.get(state, ['product', 'item', 'loading'])\n        const createLoading = _.get(state, ['product', 'create', 'loading'])\n        const showBigImgLoading = _.get(state, ['product', 'item', 'loading'])\n        const updateLoading = _.get(state, ['product', 'update', 'loading'])\n        const list = _.get(state, ['product', 'list', 'data'])\n        const listLoading = _.get(state, ['product', 'list', 'loading'])\n        const filterForm = _.get(state, ['form', 'ProductFilterForm'])\n        const createForm = _.get(state, ['form', 'ProductCreateForm'])\n        const filter = filterHelper(list, pathname, query)\n\n        return {\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            createLoading,\n            showBigImgLoading,\n            updateLoading,\n            filter,\n            filterForm,\n            createForm\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(productListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const productId = _.get(nextProps, ['params', 'productId'])\n\n        return productId && _.get(props, ['params', 'productId']) !== productId\n    }, ({dispatch, params, nextProps}) => {\n        const productId = _.toInteger(_.get(params, 'productId'))\n        productId && !_.get(nextProps, PRODUCT_DELETE_DIALOG_OPEN) && dispatch(productItemFetchAction(productId))\n    }),\n\n    withHandlers({\n        handleActionEdit: props => () => {\n            return null\n        },\n\n        handleOpenConfirmDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.PRODUCT_ITEM_PATH, id),\n                query: filter.getParams({[PRODUCT_DELETE_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseConfirmDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_DELETE_DIALOG_OPEN]: false})})\n        },\n\n        handleSendConfirmDialog: props => () => {\n            const {dispatch, detail, filter, location: {pathname}} = props\n            dispatch(productDeleteAction(detail.id))\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[PRODUCT_DELETE_DIALOG_OPEN]: false})})\n                    dispatch(productListFetchAction(filter))\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\n                })\n                .catch(() => {\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\n                })\n        },\n\n        handleOpenFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_FILTER_OPEN]: true})})\n        },\n\n        handleCloseFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_FILTER_OPEN]: false})})\n        },\n\n        handleClearFilterDialog: props => () => {\n            const {location: {pathname}} = props\n            hashHistory.push({pathname, query: {}})\n        },\n\n        handleSubmitFilterDialog: props => () => {\n            const {filter, filterForm} = props\n            const typeParent = _.get(filterForm, ['values', 'typeParent', 'value']) || null\n            const typeChild = _.get(filterForm, ['values', 'typeChild', 'value']) || null\n            const measurement = _.get(filterForm, ['values', 'measurement', 'value']) || null\n            const brand = _.get(filterForm, ['values', 'brand', 'value']) || null\n\n            filter.filterBy({\n                [PRODUCT_FILTER_OPEN]: false,\n                [PRODUCT_FILTER_KEY.TYPE_PARENT]: typeParent,\n                [PRODUCT_FILTER_KEY.TYPE_CHILD]: typeChild,\n                [PRODUCT_FILTER_KEY.MEASUREMENT]: measurement,\n                [PRODUCT_FILTER_KEY.BRAND]: brand\n            })\n        },\n\n        handleOpenCreateDialog: props => () => {\n            const {dispatch, location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_CREATE_DIALOG_OPEN]: true})})\n            dispatch(reset('ProductCreateForm'))\n        },\n\n        handleCloseCreateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_CREATE_DIALOG_OPEN]: false})})\n        },\n\n        handleOpenShowBigImg: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.PRODUCT_ITEM_PATH, id),\n                query: filter.getParams({[PRODUCT_SHOW_PHOTO_OPEN]: true})\n            })\n        },\n\n        handleCloseShowBigImg: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_SHOW_PHOTO_OPEN]: false})})\n        },\n\n        handleSubmitCreateDialog: props => () => {\n            const {dispatch, createForm, filter, location: {pathname}} = props\n\n            return dispatch(productCreateAction(_.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[PRODUCT_CREATE_DIALOG_OPEN]: false})})\n                    dispatch(productListFetchAction(filter))\n                })\n        },\n\n        handleOpenUpdateDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.PRODUCT_ITEM_PATH, id),\n                query: filter.getParams({[PRODUCT_UPDATE_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseUpdateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_UPDATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitUpdateDialog: props => () => {\n            const {dispatch, createForm, filter} = props\n            const productId = _.toInteger(_.get(props, ['params', 'productId']))\n\n            return dispatch(productUpdateAction(productId, _.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push(filter.createURL({[PRODUCT_UPDATE_DIALOG_OPEN]: false}))\n                    dispatch(productListFetchAction(filter))\n                })\n        }\n    })\n)\n\nconst ProductList = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        createLoading,\n        showBigImgLoading,\n        updateLoading,\n        filter,\n        layout,\n        params\n    } = props\n\n    const openFilterDialog = toBoolean(_.get(location, ['query', PRODUCT_FILTER_OPEN]))\n    const openCreateDialog = toBoolean(_.get(location, ['query', PRODUCT_CREATE_DIALOG_OPEN]))\n    const openShowBigImg = toBoolean(_.get(location, ['query', PRODUCT_SHOW_PHOTO_OPEN]))\n    const openUpdateDialog = toBoolean(_.get(location, ['query', PRODUCT_UPDATE_DIALOG_OPEN]))\n    const openConfirmDialog = toBoolean(_.get(location, ['query', PRODUCT_DELETE_DIALOG_OPEN]))\n    const brand = _.toInteger(filter.getParam(PRODUCT_FILTER_KEY.BRAND))\n    const typeParent = _.toInteger(filter.getParam(PRODUCT_FILTER_KEY.TYPE_PARENT))\n    const typeChild = _.toInteger(filter.getParam(PRODUCT_FILTER_KEY.TYPE_CHILD))\n    const measurement = _.toInteger(filter.getParam(PRODUCT_FILTER_KEY.MEASUREMENT))\n    const detailId = _.toInteger(_.get(params, 'productId'))\n\n    const createDialog = {\n        createLoading,\n        openCreateDialog,\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\n    }\n    const showBigImg = {\n        initialValues: (() => {\n            if (!detail) {\n                return {}\n            }\n\n            return {\n                image: _.get(detail, 'image')\n            }\n        })(),\n        showBigImgLoading,\n        openShowBigImg,\n        handleOpenShowBigImg: props.handleOpenShowBigImg,\n        handleCloseShowBigImg: props.handleCloseShowBigImg\n    }\n    const confirmDialog = {\n        confirmLoading: detailLoading,\n        openConfirmDialog: openConfirmDialog,\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\n        handleSendConfirmDialog: props.handleSendConfirmDialog\n    }\n\n    const updateDialog = {\n        initialValues: (() => {\n            if (!detail || openCreateDialog) {\n                return {}\n            }\n            const childType = _.get(detail, ['type', 'id'])\n            const parentType = _.get(detail, ['type', 'parent'])\n\n            return {\n                name: _.get(detail, 'name'),\n                code: _.get(detail, 'code'),\n                productTypeParent: {\n                    value: parentType || childType\n                },\n                type: {\n                    text: _.get(detail, ['type', 'name']),\n                    value: parentType && childType\n                },\n                measurement: {\n                    text: _.get(detail, ['measurement', 'name']),\n                    value: _.get(detail, ['measurement', 'id'])\n                },\n                image: _.get(detail, ['image'])\n            }\n        })(),\n        updateLoading: detailLoading || updateLoading,\n        openUpdateDialog,\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\n    }\n\n    const filterDialog = {\n        initialValues: {\n            brand: {value: brand},\n            typeParent: {value: typeParent},\n            typeChild: {value: typeChild},\n            measurement: {value: measurement}\n        },\n        filterLoading: false,\n        openFilterDialog,\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\n        handleClearFilterDialog: props.handleClearFilterDialog,\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\n    }\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n\n    const detailData = {\n        id: detailId,\n        data: detail,\n        detailLoading\n    }\n\n    return (\n        <Layout {...layout}>\n            <ProductGridList\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                createDialog={createDialog}\n                showBigImg={showBigImg}\n                confirmDialog={confirmDialog}\n                updateDialog={updateDialog}\n                filterDialog={filterDialog}\n            />\n        </Layout>\n    )\n})\n\nexport default ProductList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Product/ProductList.js","import ProductList from './ProductList'\n\nexport {ProductList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Product/index.js","import React from 'react'\nimport _ from 'lodash'\nimport sprintf from 'sprintf'\nimport {connect} from 'react-redux'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport {\n    PRODUCT_PRICE_UPDATE_DIALOG_OPEN,\n    PRODUCT_PRICE_FILTER_KEY,\n    PRODUCT_PRICE_FILTER_OPEN,\n    ProductPriceGridList\n} from '../../components/ProductPrice'\nimport {\n    productPriceUpdateAction,\n    productPriceListFetchAction,\n    productPriceItemFetchAction\n} from '../../actions/productPrice'\n\nimport {openSnackbarAction} from '../../actions/snackbar'\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['productPrice', 'item', 'data'])\n        const detailLoading = _.get(state, ['productPrice', 'item', 'loading'])\n        const createLoading = _.get(state, ['productPrice', 'create', 'loading'])\n        const updateLoading = _.get(state, ['productPrice', 'update', 'loading'])\n        const list = _.get(state, ['productPrice', 'list', 'data'])\n        const listLoading = _.get(state, ['productPrice', 'list', 'loading'])\n        const filterForm = _.get(state, ['form', 'ProductPriceFilterForm'])\n        const createForm = _.get(state, ['form', 'ProductPriceCreateForm'])\n        const filter = filterHelper(list, pathname, query)\n\n        return {\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            createLoading,\n            updateLoading,\n            filter,\n            filterForm,\n            createForm\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(productPriceListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const productPriceId = _.get(nextProps, ['params', 'productPriceId'])\n\n        return productPriceId && _.get(props, ['params', 'productPriceId']) !== productPriceId\n    }, ({dispatch, params}) => {\n        const productPriceId = _.toInteger(_.get(params, 'productPriceId'))\n        productPriceId && dispatch(productPriceItemFetchAction(productPriceId))\n    }),\n\n    withHandlers({\n        handleOpenFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_PRICE_FILTER_OPEN]: true})})\n        },\n\n        handleCloseFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_PRICE_FILTER_OPEN]: false})})\n        },\n\n        handleClearFilterDialog: props => () => {\n            const {location: {pathname}} = props\n            hashHistory.push({pathname, query: {}})\n        },\n\n        handleSubmitFilterDialog: props => () => {\n            const {filter, filterForm} = props\n            const type = _.get(filterForm, ['values', 'type', 'value']) || null\n            const measurement = _.get(filterForm, ['values', 'measurement', 'value']) || null\n            const brand = _.get(filterForm, ['values', 'brand', 'value']) || null\n\n            filter.filterBy({\n                [PRODUCT_PRICE_FILTER_OPEN]: false,\n                [PRODUCT_PRICE_FILTER_KEY.TYPE]: type,\n                [PRODUCT_PRICE_FILTER_KEY.MEASUREMENT]: measurement,\n                [PRODUCT_PRICE_FILTER_KEY.BRAND]: brand\n            })\n        },\n\n        handleOpenUpdateDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.PRODUCT_PRICE_ITEM_PATH, id),\n                query: filter.getParams({[PRODUCT_PRICE_UPDATE_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseUpdateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_PRICE_UPDATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitUpdateDialog: props => () => {\n            const {dispatch, createForm, filter} = props\n            const productPriceId = _.toInteger(_.get(props, ['params', 'productPriceId']))\n\n            return dispatch(productPriceUpdateAction(productPriceId, _.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(productPriceItemFetchAction(productPriceId))\n                })\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push(filter.createURL({[PRODUCT_PRICE_UPDATE_DIALOG_OPEN]: false}))\n                    dispatch(productPriceListFetchAction(filter))\n                })\n        },\n        handleCloseDetail: props => () => {\n            const {filter} = props\n            hashHistory.push({pathname: ROUTER.PRODUCT_PRICE_LIST_URL, query: filter.getParams()})\n        }\n    })\n)\n\nconst ProductPriceList = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        updateLoading,\n        filter,\n        layout,\n        params\n    } = props\n\n    const openFilterDialog = toBoolean(_.get(location, ['query', PRODUCT_PRICE_FILTER_OPEN]))\n    const openUpdateDialog = toBoolean(_.get(location, ['query', PRODUCT_PRICE_UPDATE_DIALOG_OPEN]))\n\n    const brand = _.toInteger(filter.getParam(PRODUCT_PRICE_FILTER_KEY.BRAND))\n    const type = _.toInteger(filter.getParam(PRODUCT_PRICE_FILTER_KEY.TYPE))\n    const measurement = _.toInteger(filter.getParam(PRODUCT_PRICE_FILTER_KEY.MEASUREMENT))\n    const detailId = _.toInteger(_.get(params, 'productPriceId'))\n\n    const actionsDialog = {\n        handleActionEdit: props.handleActionEdit,\n        handleActionDelete: props.handleOpenDeleteDialog\n    }\n\n    const updateDialog = {\n        initialValues: (() => {\n            if (!detail) {\n                return {}\n            }\n\n            return {\n                price: _.get(detail, 'price')\n            }\n        })(),\n        updateLoading: detailLoading || updateLoading,\n        openUpdateDialog,\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\n    }\n\n    const filterDialog = {\n        initialValues: {\n            brand: {value: brand},\n            type: {value: type},\n            measurement: {value: measurement}\n        },\n        filterLoading: false,\n        openFilterDialog,\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\n        handleClearFilterDialog: props.handleClearFilterDialog,\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\n    }\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n\n    const detailData = {\n        id: detailId,\n        data: detail,\n        detailLoading,\n        handleCloseDetail: props.handleCloseDetail\n    }\n\n    return (\n        <Layout {...layout}>\n            <ProductPriceGridList\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                updateDialog={updateDialog}\n                actionsDialog={actionsDialog}\n                filterDialog={filterDialog}\n            />\n        </Layout>\n    )\n})\n\nexport default ProductPriceList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/ProductPrice/ProductPriceList.js","import ProductPriceList from './ProductPriceList'\n\nexport {ProductPriceList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/ProductPrice/index.js","import React from 'react'\nimport _ from 'lodash'\nimport sprintf from 'sprintf'\nimport {connect} from 'react-redux'\nimport {reset} from 'redux-form'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport {\n    PRODUCT_TYPE_CREATE_DIALOG_OPEN,\n    PRODUCT_TYPE_UPDATE_DIALOG_OPEN,\n    PRODUCT_TYPE_DELETE_DIALOG_OPEN,\n    ProductTypeGridList\n} from '../../components/ProductType'\nimport {\n    productTypeCreateAction,\n    productTypeUpdateAction,\n    productTypeListFetchAction,\n    productTypeDeleteAction,\n    productTypeItemFetchAction\n} from '../../actions/productType'\nimport {openSnackbarAction} from '../../actions/snackbar'\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['productType', 'item', 'data'])\n        const detailLoading = _.get(state, ['productType', 'item', 'loading'])\n        const createLoading = _.get(state, ['productType', 'create', 'loading'])\n        const updateLoading = _.get(state, ['productType', 'update', 'loading'])\n        const list = _.get(state, ['productType', 'list', 'data'])\n        const listLoading = _.get(state, ['productType', 'list', 'loading'])\n        const createForm = _.get(state, ['form', 'ProductTypeCreateForm'])\n        const filter = filterHelper(list, pathname, query)\n\n        return {\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            createLoading,\n            updateLoading,\n            filter,\n            createForm\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(productTypeListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const productTypeId = _.get(nextProps, ['params', 'productTypeId'])\n\n        return productTypeId && _.get(props, ['params', 'productTypeId']) !== productTypeId\n    }, ({dispatch, params}) => {\n        const productTypeId = _.toInteger(_.get(params, 'productTypeId'))\n        productTypeId && dispatch(productTypeItemFetchAction(productTypeId))\n    }),\n\n    withHandlers({\n        handleActionEdit: props => () => {\n            return null\n        },\n\n        handleOpenDeleteDialog: props => () => {\n            return null\n        },\n\n        handleOpenConfirmDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.PRODUCT_TYPE_ITEM_PATH, id),\n                query: filter.getParams({[PRODUCT_TYPE_DELETE_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseConfirmDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_TYPE_DELETE_DIALOG_OPEN]: false})})\n        },\n        handleSendConfirmDialog: props => () => {\n            const {dispatch, detail, filter, location: {pathname}} = props\n            dispatch(productTypeDeleteAction(detail.id))\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[PRODUCT_TYPE_DELETE_DIALOG_OPEN]: false})})\n                    dispatch(productTypeListFetchAction(filter))\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\n                })\n                .catch(() => {\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\n                })\n        },\n\n        handleOpenCreateDialog: props => () => {\n            const {dispatch, location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_TYPE_CREATE_DIALOG_OPEN]: true})})\n            dispatch(reset('ProductTypeCreateForm'))\n        },\n\n        handleCloseCreateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_TYPE_CREATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitCreateDialog: props => () => {\n            const {dispatch, createForm, filter, location: {pathname}} = props\n\n            return dispatch(productTypeCreateAction(_.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[PRODUCT_TYPE_CREATE_DIALOG_OPEN]: false})})\n                    dispatch(productTypeListFetchAction(filter))\n                })\n        },\n\n        handleOpenUpdateDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.PRODUCT_TYPE_ITEM_PATH, id),\n                query: filter.getParams({[PRODUCT_TYPE_UPDATE_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseUpdateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PRODUCT_TYPE_UPDATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitUpdateDialog: props => () => {\n            const {dispatch, createForm, filter} = props\n            const productTypeId = _.toInteger(_.get(props, ['params', 'productTypeId']))\n\n            return dispatch(productTypeUpdateAction(productTypeId, _.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push(filter.createURL({[PRODUCT_TYPE_UPDATE_DIALOG_OPEN]: false}))\n                    dispatch(productTypeListFetchAction(filter))\n                })\n        }\n    })\n)\n\nconst ProductTypeList = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        createLoading,\n        updateLoading,\n        filter,\n        layout,\n        params\n    } = props\n\n    const openCreateDialog = toBoolean(_.get(location, ['query', PRODUCT_TYPE_CREATE_DIALOG_OPEN]))\n    const openUpdateDialog = toBoolean(_.get(location, ['query', PRODUCT_TYPE_UPDATE_DIALOG_OPEN]))\n    const openConfirmDialog = toBoolean(_.get(location, ['query', PRODUCT_TYPE_DELETE_DIALOG_OPEN]))\n\n    const detailId = _.toInteger(_.get(params, 'productTypeId'))\n\n    const actionsDialog = {\n        handleActionEdit: props.handleActionEdit,\n        handleActionDelete: props.handleOpenDeleteDialog\n    }\n\n    const createDialog = {\n        createLoading,\n        openCreateDialog,\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\n    }\n\n    const confirmDialog = {\n        confirmLoading: detailLoading,\n        openConfirmDialog: openConfirmDialog,\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\n        handleSendConfirmDialog: props.handleSendConfirmDialog\n    }\n\n    const updateDialog = {\n        initialValues: (() => {\n            if (!detail || openCreateDialog) {\n                return {}\n            }\n            const parentId = _.get(detail, 'parent')\n            const parentName = _.get(_.find(_.get(list, ['results']), {'id': parentId}), 'name')\n\n            return {\n                name: _.get(detail, 'name'),\n                parent: {\n                    value: parentId,\n                    text: parentName\n                }\n            }\n        })(),\n        updateLoading: detailLoading || updateLoading,\n        openUpdateDialog,\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\n    }\n\n    const listData = {\n        data: list,\n        listLoading\n    }\n\n    const detailData = {\n        id: detailId,\n        data: detail,\n        detailLoading\n    }\n\n    return (\n        <Layout {...layout}>\n            <ProductTypeGridList\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                createDialog={createDialog}\n                confirmDialog={confirmDialog}\n                updateDialog={updateDialog}\n                actionsDialog={actionsDialog}\n            />\n        </Layout>\n    )\n})\n\nexport default ProductTypeList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/ProductType/ProductTypeList.js","import ProductTypeList from './ProductTypeList'\n\nexport {ProductTypeList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/ProductType/index.js","import React from 'react'\nimport _ from 'lodash'\nimport sprintf from 'sprintf'\nimport {reset} from 'redux-form'\nimport {connect} from 'react-redux'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withState, withHandlers} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport {\n    PROVIDER_CREATE_DIALOG_OPEN,\n    PROVIDER_UPDATE_DIALOG_OPEN,\n    ProviderGridList\n} from '../../components/Provider'\nimport {\n    providerCreateAction,\n    providerUpdateAction,\n    providerListFetchAction,\n    providerDeleteAction,\n    providerItemFetchAction\n} from '../../actions/provider'\nimport {openSnackbarAction} from '../../actions/snackbar'\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['provider', 'item', 'data'])\n        const detailLoading = _.get(state, ['provider', 'item', 'loading'])\n        const createLoading = _.get(state, ['provider', 'create', 'loading'])\n        const updateLoading = _.get(state, ['provider', 'update', 'loading'])\n        const list = _.get(state, ['provider', 'list', 'data'])\n        const listLoading = _.get(state, ['provider', 'list', 'loading'])\n        const createForm = _.get(state, ['form', 'ProviderCreateForm'])\n        const filter = filterHelper(list, pathname, query)\n\n        return {\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            createLoading,\n            updateLoading,\n            filter,\n            createForm\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(providerListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const providerId = _.get(nextProps, ['params', 'providerId'])\n        return providerId && _.get(props, ['params', 'providerId']) !== providerId\n    }, ({dispatch, params}) => {\n        const providerId = _.toInteger(_.get(params, 'providerId'))\n        providerId && dispatch(providerItemFetchAction(providerId))\n    }),\n\n    withState('openConfirmDialog', 'setOpenConfirmDialog', false),\n\n    withHandlers({\n        handleOpenConfirmDialog: props => () => {\n            const {setOpenConfirmDialog} = props\n            setOpenConfirmDialog(true)\n        },\n\n        handleCloseConfirmDialog: props => () => {\n            const {setOpenConfirmDialog} = props\n            setOpenConfirmDialog(false)\n        },\n        handleSendConfirmDialog: props => () => {\n            const {dispatch, detail, setOpenConfirmDialog, filter} = props\n            dispatch(providerDeleteAction(detail.id))\n                .then(() => {\n                    setOpenConfirmDialog(false)\n                    dispatch(providerListFetchAction(filter))\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\n                })\n                .catch(() => {\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\n                })\n        },\n\n        handleOpenCreateDialog: props => () => {\n            const {dispatch, location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PROVIDER_CREATE_DIALOG_OPEN]: true})})\n            dispatch(reset('ProviderCreateForm'))\n        },\n\n        handleCloseCreateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PROVIDER_CREATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitCreateDialog: props => () => {\n            const {dispatch, createForm, filter, location: {pathname}} = props\n\n            return dispatch(providerCreateAction(_.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[PROVIDER_CREATE_DIALOG_OPEN]: false})})\n                    dispatch(providerListFetchAction(filter))\n                })\n        },\n\n        handleOpenUpdateDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.PROVIDER_ITEM_PATH, id),\n                query: filter.getParams({[PROVIDER_UPDATE_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseUpdateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[PROVIDER_UPDATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitUpdateDialog: props => () => {\n            const {dispatch, createForm, filter} = props\n            const providerId = _.toInteger(_.get(props, ['params', 'providerId']))\n\n            return dispatch(providerUpdateAction(providerId, _.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(providerItemFetchAction(providerId))\n                })\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push(filter.createURL({[PROVIDER_UPDATE_DIALOG_OPEN]: false}))\n                    dispatch(providerListFetchAction(filter))\n                })\n        },\n\n        handleCloseDetail: props => () => {\n            const {filter} = props\n            hashHistory.push({pathname: ROUTER.PROVIDER_LIST_URL, query: filter.getParams()})\n        }\n    })\n)\n\nconst ProviderList = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        createLoading,\n        updateLoading,\n        filter,\n        layout,\n        params\n    } = props\n\n    const openCreateDialog = toBoolean(_.get(location, ['query', PROVIDER_CREATE_DIALOG_OPEN]))\n    const openUpdateDialog = toBoolean(_.get(location, ['query', PROVIDER_UPDATE_DIALOG_OPEN]))\n    const detailId = _.toInteger(_.get(params, 'providerId'))\n\n    const createDialog = {\n        createLoading,\n        openCreateDialog,\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\n    }\n\n    const confirmDialog = {\n        openConfirmDialog: props.openConfirmDialog,\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\n        handleSendConfirmDialog: props.handleSendConfirmDialog\n    }\n\n    const updateDialog = {\n        initialValues: (() => {\n            if (!detail || openCreateDialog) {\n                return {\n                    contacts: [{}]\n                }\n            }\n\n            const contacts = _(detail).get('contacts').map((contact) => {\n                return {\n                    name: _.get(contact, 'name'),\n                    email: _.get(contact, 'email'),\n                    phone: _.get(contact, 'phone'),\n                    id: _.get(contact, 'id')\n                }\n            })\n            return {\n                name: _.get(detail, 'name'),\n                address: _.get(detail, 'address'),\n                contacts: _.union(contacts, [{}])\n            }\n        })(),\n        updateLoading: detailLoading || updateLoading,\n        openUpdateDialog,\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\n    }\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n\n    const detailData = {\n        id: detailId,\n        data: detail,\n        detailLoading,\n        handleCloseDetail: props.handleCloseDetail\n    }\n\n    return (\n        <Layout {...layout}>\n            <ProviderGridList\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                createDialog={createDialog}\n                confirmDialog={confirmDialog}\n                updateDialog={updateDialog}\n            />\n        </Layout>\n    )\n})\n\nexport default ProviderList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Provider/ProviderList.js","import ProviderList from './ProviderList'\n\nexport {ProviderList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Provider/index.js","import React from 'react'\nimport _ from 'lodash'\nimport {connect} from 'react-redux'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport {reset} from 'redux-form'\nimport {openSnackbarAction} from '../../actions/snackbar'\nimport {openErrorAction} from '../../actions/error'\n\nimport {\n    RemainderGridList,\n    REMAINDER_TRANSFER_DIALOG_OPEN,\n    REMAINDER_FILTER_OPEN,\n    REMAINDER_FILTER_KEY,\n    REMAINDER_DISCARD_DIALOG_OPEN\n} from '../../components/Remainder'\nimport {\n    remainderListFetchAction,\n    remainderItemFetchAction,\n    remainderTransferAction,\n    remainderDiscardAction\n} from '../../actions/remainder'\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['remainder', 'item', 'data'])\n        const detailLoading = _.get(state, ['remainder', 'item', 'loading'])\n        const list = _.get(state, ['remainder', 'list', 'data'])\n        const listLoading = _.get(state, ['remainder', 'list', 'loading'])\n        const filterForm = _.get(state, ['form', 'RemainderFilterForm'])\n        const searchForm = _.get(state, ['form', 'RemainderSearchForm'])\n        const transferForm = _.get(state, ['form', 'RemainderTransferForm'])\n        const discardForm = _.get(state, ['form', 'RemainderDiscardForm'])\n        const filter = filterHelper(list, pathname, query)\n        const filterItem = filterHelper(detail, pathname, query, {'page': 'dPage', 'pageSize': 'dPageSize'})\n\n        return {\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            filter,\n            filterForm,\n            transferForm,\n            discardForm,\n            searchForm,\n            filterItem\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(remainderListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const remainderId = _.get(nextProps, ['params', 'remainderId'])\n        return remainderId && _.get(props, ['params', 'remainderId']) !== remainderId\n    }, ({dispatch, params, filter}) => {\n        const remainderId = _.toInteger(_.get(params, 'remainderId'))\n        remainderId && dispatch(remainderItemFetchAction(remainderId, filter))\n    }),\n    withHandlers({\n        handleOpenFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[REMAINDER_FILTER_OPEN]: true})})\n        },\n        handleCloseFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[REMAINDER_FILTER_OPEN]: false})})\n        },\n        handleClearFilterDialog: props => () => {\n            const {location: {pathname}} = props\n            hashHistory.push({pathname, query: {}})\n        },\n        handleSubmitFilterDialog: props => () => {\n            const {filter, filterForm} = props\n            const type = _.get(filterForm, ['values', 'type', 'value']) || null\n            const stock = _.get(filterForm, ['values', 'stock', 'value']) || null\n            const status = _.get(filterForm, ['values', 'status', 'value']) || null\n            filter.filterBy({\n                [REMAINDER_FILTER_OPEN]: false,\n                [REMAINDER_FILTER_KEY.TYPE]: type,\n                [REMAINDER_FILTER_KEY.STOCK]: stock,\n                [REMAINDER_FILTER_KEY.STATUS]: status\n            })\n        },\n        handleSubmitSearch: props => () => {\n            const {filter, searchForm} = props\n            const search = _.get(searchForm, ['values', 'search']) || null\n            filter.filterBy({\n                'search': search\n            })\n        },\n        handleOpenTransferDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[REMAINDER_TRANSFER_DIALOG_OPEN]: true})})\n        },\n        handleCloseTransferDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[REMAINDER_TRANSFER_DIALOG_OPEN]: false})})\n        },\n        handleSubmitTransferDialog: props => () => {\n            const {location: {pathname}, dispatch, transferForm, filter} = props\n            return dispatch(remainderTransferAction(_.get(transferForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно отправлено'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[REMAINDER_TRANSFER_DIALOG_OPEN]: false})})\n                    dispatch(remainderListFetchAction(filter))\n                })\n                .catch((error) => {\n                    const amountError = _.map(error, (item) => {\n                        const amount = _.get(item, ['non_field_errors', '0'])\n                        if (amount) {\n                            return (\n                                <div style={{marginTop: '10px'}}>{amount}</div>)\n                        }\n                        return null\n                    })\n                    dispatch(openErrorAction({\n                        message: <div>{amountError}</div>\n                    }))\n                })\n        },\n        handleOpenDiscardDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[REMAINDER_DISCARD_DIALOG_OPEN]: true})})\n        },\n        handleCloseDiscardDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[REMAINDER_DISCARD_DIALOG_OPEN]: false})})\n        },\n        handleSubmitDiscardDialog: props => () => {\n            const {location: {pathname}, dispatch, discardForm, filter} = props\n            return dispatch(remainderDiscardAction(_.get(discardForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно списано'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[REMAINDER_DISCARD_DIALOG_OPEN]: false})})\n                    dispatch(remainderListFetchAction(filter))\n                })\n        },\n        handleResetFilter: props => () => {\n            const {dispatch, location: {pathname}} = props\n            dispatch(reset('RemainderFilterForm'))\n            hashHistory.push({pathname})\n        },\n        handleCloseDetail: props => () => {\n            const {filter} = props\n            hashHistory.push({pathname: ROUTER.REMAINDER_LIST_URL, query: filter.getParams()})\n        }\n    })\n)\n\nconst RemainderList = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        filter,\n        layout,\n        params,\n        filterItem\n    } = props\n\n    const stock = _.toInteger(filter.getParam(REMAINDER_FILTER_KEY.STOCK))\n    const type = _.toInteger(filter.getParam(REMAINDER_FILTER_KEY.TYPE))\n    const status = filter.getParam(REMAINDER_FILTER_KEY.STATUS)\n    const openFilterDialog = toBoolean(_.get(location, ['query', REMAINDER_FILTER_OPEN]))\n    const openTransferDialog = toBoolean(_.get(location, ['query', REMAINDER_TRANSFER_DIALOG_OPEN]))\n    const openDiscardDialog = toBoolean(_.get(location, ['query', REMAINDER_DISCARD_DIALOG_OPEN]))\n    const detailId = _.toInteger(_.get(params, 'remainderId'))\n\n    const filterDialog = {\n        initialValues: {\n            stock: {\n                value: stock\n            },\n            type: {\n                value: type\n            },\n            status: {\n                value: status\n            }\n        },\n        openFilterDialog: openFilterDialog,\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog,\n        handleClearFilterDialog: props.handleClearFilterDialog\n    }\n\n    const discardDialog = {\n        openDiscardDialog,\n        handleOpenDiscardDialog: props.handleOpenDiscardDialog,\n        handleCloseDiscardDialog: props.handleCloseDiscardDialog,\n        handleSubmitDiscardDialog: props.handleSubmitDiscardDialog\n    }\n    const transferDialog = {\n        openTransferDialog: openTransferDialog,\n        handleOpenTransferDialog: props.handleOpenTransferDialog,\n        handleCloseTransferDialog: props.handleCloseTransferDialog,\n        handleSubmitTransferDialog: props.handleSubmitTransferDialog\n    }\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n\n    const currentRow = _.filter(_.get(list, 'results'), (item) => {\n        return _.get(item, 'id') === detailId\n    })\n\n    const detailData = {\n        id: detailId,\n        data: detail,\n        detailLoading,\n        currentRow\n    }\n\n    return (\n        <Layout {...layout}>\n            <RemainderGridList\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                filterDialog={filterDialog}\n                handleCloseDetail={props.handleCloseDetail}\n                transferDialog={transferDialog}\n                resetFilter={props.handleResetFilter}\n                discardDialog={discardDialog}\n                searchSubmit={props.handleSubmitSearch}\n                filterItem={filterItem}\n            />\n        </Layout>\n    )\n})\n\nexport default RemainderList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Remainder/RemainderList.js","import RemainderList from './RemainderList'\n\nexport {RemainderList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Remainder/index.js","import React from 'react'\nimport _ from 'lodash'\nimport sprintf from 'sprintf'\nimport {reset} from 'redux-form'\nimport {connect} from 'react-redux'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport {\n    SHIFT_CREATE_DIALOG_OPEN,\n    SHIFT_UPDATE_DIALOG_OPEN,\n    SHIFT_DELETE_DIALOG_OPEN,\n    ShiftGridList\n} from '../../components/Shift'\nimport {\n    shiftCreateAction,\n    shiftUpdateAction,\n    shiftListFetchAction,\n    shiftDeleteAction,\n    shiftItemFetchAction\n} from '../../actions/shift'\nimport {openSnackbarAction} from '../../actions/snackbar'\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['shift', 'item', 'data'])\n        const detailLoading = _.get(state, ['shift', 'item', 'loading'])\n        const createLoading = _.get(state, ['shift', 'create', 'loading'])\n        const updateLoading = _.get(state, ['shift', 'update', 'loading'])\n        const list = _.get(state, ['shift', 'list', 'data'])\n        const listLoading = _.get(state, ['shift', 'list', 'loading'])\n        const createForm = _.get(state, ['form', 'ShiftCreateForm'])\n        const filter = filterHelper(list, pathname, query)\n\n        return {\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            createLoading,\n            updateLoading,\n            filter,\n            createForm\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(shiftListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const shiftId = _.get(nextProps, ['params', 'shiftId'])\n        return shiftId && _.get(props, ['params', 'shiftId']) !== shiftId\n    }, ({dispatch, params}) => {\n        const shiftId = _.toInteger(_.get(params, 'shiftId'))\n        shiftId && dispatch(shiftItemFetchAction(shiftId))\n    }),\n\n    withHandlers({\n        handleActionEdit: props => () => {\n            return null\n        },\n        handleOpenDeleteDialog: props => () => {\n            return null\n        },\n\n        handleOpenConfirmDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.SHIFT_ITEM_PATH, id),\n                query: filter.getParams({[SHIFT_DELETE_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseConfirmDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[SHIFT_DELETE_DIALOG_OPEN]: false})})\n        },\n\n        handleSendConfirmDialog: props => () => {\n            const {dispatch, detail, filter, location: {pathname}} = props\n            dispatch(shiftDeleteAction(detail.id))\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[SHIFT_DELETE_DIALOG_OPEN]: false})})\n                    dispatch(shiftListFetchAction(filter))\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\n                })\n                .catch(() => {\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\n                })\n        },\n\n        handleOpenCreateDialog: props => () => {\n            const {dispatch, location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[SHIFT_CREATE_DIALOG_OPEN]: true})})\n            dispatch(reset('ShiftCreateForm'))\n        },\n\n        handleCloseCreateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[SHIFT_CREATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitCreateDialog: props => () => {\n            const {dispatch, createForm, filter, location: {pathname}} = props\n\n            return dispatch(shiftCreateAction(_.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[SHIFT_CREATE_DIALOG_OPEN]: false})})\n                    dispatch(shiftListFetchAction(filter))\n                })\n        },\n\n        handleOpenUpdateDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.SHIFT_ITEM_PATH, id),\n                query: filter.getParams({[SHIFT_UPDATE_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseUpdateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[SHIFT_UPDATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitUpdateDialog: props => () => {\n            const {dispatch, createForm, filter} = props\n            const shiftId = _.toInteger(_.get(props, ['params', 'shiftId']))\n\n            return dispatch(shiftUpdateAction(shiftId, _.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(shiftItemFetchAction(shiftId))\n                })\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push(filter.createURL({[SHIFT_UPDATE_DIALOG_OPEN]: false}))\n                    dispatch(shiftListFetchAction(filter))\n                })\n        }\n    })\n)\n\nconst ShiftList = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        createLoading,\n        updateLoading,\n        filter,\n        layout,\n        params\n    } = props\n\n    const openCreateDialog = toBoolean(_.get(location, ['query', SHIFT_CREATE_DIALOG_OPEN]))\n    const openUpdateDialog = toBoolean(_.get(location, ['query', SHIFT_UPDATE_DIALOG_OPEN]))\n    const openConfirmDialog = toBoolean(_.get(location, ['query', SHIFT_DELETE_DIALOG_OPEN]))\n\n    const detailId = _.toInteger(_.get(params, 'shiftId'))\n\n    const actionsDialog = {\n        handleActionEdit: props.handleActionEdit,\n        handleActionDelete: props.handleOpenDeleteDialog\n    }\n\n    const createDialog = {\n        createLoading,\n        openCreateDialog,\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\n    }\n\n    const confirmDialog = {\n        confirmLoading: detailLoading,\n        openConfirmDialog: openConfirmDialog,\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\n        handleSendConfirmDialog: props.handleSendConfirmDialog\n    }\n    const updateDialog = {\n        initialValues: (() => {\n            if (!detail || openCreateDialog) {\n                return {}\n            }\n            return {\n                name: _.get(detail, 'name'),\n                beginTime: {\n                    value: _.get(detail, 'beginTime')\n                },\n                endTime: {\n                    value: _.get(detail, 'endTime')\n                }\n            }\n        })(),\n        updateLoading: detailLoading || updateLoading,\n        openUpdateDialog,\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\n    }\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n\n    const detailData = {\n        id: detailId,\n        data: detail,\n        detailLoading\n    }\n\n    return (\n        <Layout {...layout}>\n            <ShiftGridList\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                createDialog={createDialog}\n                confirmDialog={confirmDialog}\n                updateDialog={updateDialog}\n                actionsDialog={actionsDialog}\n            />\n        </Layout>\n    )\n})\n\nexport default ShiftList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Shift/ShiftList.js","import ShiftList from './ShiftList'\n\nexport {ShiftList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Shift/index.js","import React from 'react'\nimport _ from 'lodash'\nimport {connect} from 'react-redux'\nimport {hashHistory} from 'react-router'\nimport {reset} from 'redux-form'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withState, withHandlers} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport {DELETE_DIALOG_OPEN} from '../../components/DeleteDialog'\nimport {\n    SHOP_CREATE_DIALOG_OPEN,\n    SHOP_UPDATE_DIALOG_OPEN,\n    SHOP_FILTER_KEY,\n    SHOP_FILTER_OPEN,\n    SHOP_MAP_DIALOG_OPEN,\n    SHOP_UPDATE_MAP_DIALOG_OPEN,\n    ADD_PHOTO_DIALOG_OPEN,\n    SHOP_SLIDESHOW_DIALOG_OPEN,\n    DELETE_IMAGE_OPEN,\n    ShopGridList\n} from '../../components/Shop'\nimport {\n    shopCreateAction,\n    imageCreateAction,\n    setPrimaryImageAction,\n    imageDeleteAction,\n    shopUpdateAction,\n    shopDeleteAction,\n    shopItemFetchAction,\n    shopListFetchAction,\n    slideShowFetchAction\n} from '../../actions/shop'\nimport {openSnackbarAction} from '../../actions/snackbar'\n\nconst ZERO = 0\nconst ONE = 1\nconst MINUS_ONE = -1\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['shop', 'item', 'data'])\n        const detailLoading = _.get(state, ['shop', 'item', 'loading'])\n        const createLoading = _.get(state, ['shop', 'create', 'loading'])\n        const updateLoading = _.get(state, ['shop', 'update', 'loading'])\n        const list = _.get(state, ['shop', 'list', 'data'])\n        const listLoading = _.get(state, ['shop', 'list', 'loading'])\n        const filterForm = _.get(state, ['form', 'ShopFilterForm'])\n        const createForm = _.get(state, ['form', 'ShopCreateForm'])\n        const mapForm = _.get(state, ['form', 'ShopMapForm'])\n        const addPhotoForm = _.get(state, ['form', 'ShopAddPhotoForm', 'values'])\n        const mapLocation = _.get(state, ['form', 'ShopMapForm', 'values', 'latLng'])\n        const image = _.get(state, ['form', 'ShopAddPhotoForm', 'values', 'image'])\n        const gallery = _.get(state, ['shop', 'gallery', 'data'])\n        const galleryLoading = _.get(state, ['shop', 'gallery', 'loading'])\n        const filter = filterHelper(list, pathname, query)\n\n        return {\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            createLoading,\n            updateLoading,\n            filter,\n            filterForm,\n            createForm,\n            mapForm,\n            mapLocation,\n            addPhotoForm,\n            image,\n            gallery,\n            galleryLoading\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(shopListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const prevId = _.get(props, ['params', 'shopId'])\n        const nextId = _.get(nextProps, ['params', 'shopId'])\n        return prevId !== nextId\n    }, ({dispatch, params}) => {\n        const shopId = _.toInteger(_.get(params, 'shopId'))\n        if (shopId > ZERO) {\n            dispatch(shopItemFetchAction(shopId))\n        }\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const prevId = _.toNumber(_.get(props, ['location', 'query', 'openImagesDialog']))\n        const nextId = _.toNumber(_.get(nextProps, ['location', 'query', 'openImagesDialog']))\n        return prevId !== nextId && nextId > MINUS_ONE\n    }, ({dispatch, location, detail}) => {\n        const images = _.get(detail, 'images')\n        const index = _.toNumber(_.get(location, ['query', 'openImagesDialog']))\n        const fileId = _.toInteger(_.get(_.nth(images, index), 'fileId'))\n        if (index > MINUS_ONE) {\n            dispatch(slideShowFetchAction(fileId))\n        }\n    }),\n\n    withState('openConfirmDialog', 'setOpenConfirmDialog', false),\n    withState('openDeleteImage', 'setOpenDeleteImage', false),\n\n    withHandlers({\n        handleOpenConfirmDialog: props => () => {\n            const {setOpenConfirmDialog} = props\n            setOpenConfirmDialog(true)\n        },\n\n        handleCloseConfirmDialog: props => () => {\n            const {setOpenConfirmDialog} = props\n            setOpenConfirmDialog(false)\n        },\n        handleSendConfirmDialog: props => () => {\n            const {dispatch, detail, filter, setOpenConfirmDialog} = props\n            dispatch(shopDeleteAction(detail.id))\n                .then(() => {\n                    setOpenConfirmDialog(false)\n                    dispatch(shopListFetchAction(filter))\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\n                })\n                .catch(() => {\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\n                })\n        },\n\n        handleSetPrimaryImage: props => () => {\n            const {dispatch, params, detail, location} = props\n            const images = _.get(detail, 'images')\n            const index = _.toNumber(_.get(location, ['query', 'openImagesDialog']))\n            const fileId = _.toInteger(_.get(_.nth(images, index), 'fileId'))\n            const imgId = _.toInteger(_.get(_.nth(images, index), 'id'))\n            const shopId = _.toInteger(_.get(params, 'shopId'))\n            dispatch(setPrimaryImageAction(shopId, imgId))\n                .then(() => {\n                    dispatch(slideShowFetchAction(fileId))\n                    dispatch(shopItemFetchAction(shopId))\n                })\n        },\n\n        handleOpenDeleteImageDialog: props => (id) => {\n            const {setOpenDeleteImage, location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[DELETE_IMAGE_OPEN]: id})})\n            setOpenDeleteImage(true)\n        },\n\n        handleCloseDeleteImageDialog: props => () => {\n            const {setOpenDeleteImage, location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[DELETE_IMAGE_OPEN]: ZERO})})\n            setOpenDeleteImage(false)\n        },\n        handleSendDeleteImageDialog: props => () => {\n            const {dispatch, setOpenDeleteImage} = props\n            const imgId = _.toInteger(_.get(props, ['location', 'query', 'openDeleteImageDialog']))\n            const shopId = _.toInteger(_.get(props, ['params', 'shopId']))\n            dispatch(imageDeleteAction(shopId, imgId))\n                .then(() => {\n                    setOpenDeleteImage(false)\n                    dispatch(shopItemFetchAction(shopId))\n                    return dispatch(openSnackbarAction({message: 'Изображение успешно удалено'}))\n                })\n                .catch(() => {\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\n                })\n        },\n\n        handleOpenFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_FILTER_OPEN]: true})})\n        },\n\n        handleCloseFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_FILTER_OPEN]: false})})\n        },\n\n        handleClearFilterDialog: props => () => {\n            const {location: {pathname}} = props\n            hashHistory.push({pathname, query: {}})\n        },\n        handleSubmitFilterDialog: props => () => {\n            const {filter, filterForm} = props\n            const client = _.get(filterForm, ['values', 'client', 'value']) || null\n            const createdBy = _.get(filterForm, ['values', 'createdBy', 'value']) || null\n            const marketType = _.get(filterForm, ['values', 'marketType', 'value']) || null\n            const zone = _.get(filterForm, ['values', 'zone', 'value']) || null\n            const isActive = _.get(filterForm, ['values', 'isActive', 'value'])\n            const frequency = _.get(filterForm, ['values', 'frequency', 'value']) || null\n\n            filter.filterBy({\n                [SHOP_FILTER_OPEN]: false,\n                [SHOP_FILTER_KEY.CLIENT]: client,\n                [SHOP_FILTER_KEY.CREATED_BY]: createdBy,\n                [SHOP_FILTER_KEY.MARKET_TYPE]: marketType,\n                [SHOP_FILTER_KEY.STATUS]: isActive,\n                [SHOP_FILTER_KEY.FREQUENCY]: frequency,\n                [SHOP_FILTER_KEY.ZONE]: zone\n            })\n        },\n        handleOpenCreateDialog: props => () => {\n            const {dispatch, location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_CREATE_DIALOG_OPEN]: true})})\n            dispatch(reset('ShopCreateForm'))\n        },\n\n        handleCloseCreateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_CREATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitCreateDialog: props => () => {\n            const {location: {pathname}, dispatch, createForm, mapLocation, filter} = props\n\n            return dispatch(shopCreateAction(_.get(createForm, ['values']), mapLocation))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[SHOP_CREATE_DIALOG_OPEN]: false})})\n                    dispatch(shopListFetchAction(filter))\n                })\n        },\n\n        handleOpenSlideShowDialog: props => (index) => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_SLIDESHOW_DIALOG_OPEN]: index})})\n        },\n\n        handleCloseSlideShowDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_SLIDESHOW_DIALOG_OPEN]: MINUS_ONE})})\n        },\n\n        handlePrevImage: props => (index, last) => {\n            const {location: {pathname}, filter} = props\n            let currentIndex = index\n            let prevIndex = currentIndex - ONE\n            if (prevIndex === MINUS_ONE) {\n                currentIndex = last - ONE\n                prevIndex = currentIndex\n            }\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_SLIDESHOW_DIALOG_OPEN]: prevIndex})})\n        },\n        handleNextImage: props => (index, last) => {\n            const {location: {pathname}, filter} = props\n            let currentIndex = index\n            let nextIndex = currentIndex + ONE\n            if (nextIndex === last) {\n                currentIndex = ZERO\n                nextIndex = currentIndex\n            }\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_SLIDESHOW_DIALOG_OPEN]: nextIndex})})\n        },\n\n        handleOpenAddPhotoDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[ADD_PHOTO_DIALOG_OPEN]: true})})\n        },\n\n        handleCloseAddPhotoDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[ADD_PHOTO_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitAddPhotoDialog: props => () => {\n            const {location: {pathname}, dispatch, addPhotoForm, detail, filter} = props\n            const shopId = _.get(detail, 'id')\n            const imageId = _.get(addPhotoForm, 'image')\n\n            return dispatch(imageCreateAction(imageId, shopId))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Фотография добавлена'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[ADD_PHOTO_DIALOG_OPEN]: false})})\n                    dispatch(shopItemFetchAction(shopId))\n                })\n        },\n\n        handleOpenMapDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_MAP_DIALOG_OPEN]: true})})\n        },\n\n        handleCloseMapDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_MAP_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitMapDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_MAP_DIALOG_OPEN]: false})})\n        },\n\n        handleOpenMapUpdateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_UPDATE_MAP_DIALOG_OPEN]: true})})\n        },\n\n        handleCloseMapUpdateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_UPDATE_MAP_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitMapUpdateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_UPDATE_MAP_DIALOG_OPEN]: false})})\n        },\n\n        handleOpenUpdateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_UPDATE_DIALOG_OPEN]: true})})\n        },\n\n        handleCloseUpdateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[SHOP_UPDATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitUpdateDialog: props => () => {\n            const {dispatch, createForm, filter, mapLocation} = props\n            const shopId = _.toInteger(_.get(props, ['params', 'shopId']))\n\n            return dispatch(shopUpdateAction(shopId, _.get(createForm, ['values']), mapLocation))\n                .then(() => {\n                    return dispatch(shopItemFetchAction(shopId))\n                })\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push(filter.createURL({[SHOP_UPDATE_DIALOG_OPEN]: false}))\n                })\n        },\n\n        handleCloseDetail: props => () => {\n            const {filter} = props\n            hashHistory.push({pathname: ROUTER.SHOP_LIST_URL, query: filter.getParams()})\n        }\n    })\n)\n\nconst ShopList = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        createLoading,\n        updateLoading,\n        filter,\n        layout,\n        params,\n        mapLocation,\n        gallery,\n        galleryLoading\n    } = props\n\n    const openFilterDialog = toBoolean(_.get(location, ['query', SHOP_FILTER_OPEN]))\n    const openCreateDialog = toBoolean(_.get(location, ['query', SHOP_CREATE_DIALOG_OPEN]))\n    const openMapDialog = toBoolean(_.get(location, ['query', SHOP_MAP_DIALOG_OPEN]))\n    const openUpdateMapDialog = toBoolean(_.get(location, ['query', SHOP_UPDATE_MAP_DIALOG_OPEN]))\n    const openUpdateDialog = toBoolean(_.get(location, ['query', SHOP_UPDATE_DIALOG_OPEN]))\n    const openDeleteDialog = toBoolean(_.get(location, ['query', DELETE_DIALOG_OPEN]))\n    const openAddPhotoDialog = toBoolean(_.get(location, ['query', ADD_PHOTO_DIALOG_OPEN]))\n    const openSlideShowDialog = _.toInteger(_.get(location, ['query', SHOP_SLIDESHOW_DIALOG_OPEN]) || MINUS_ONE) > MINUS_ONE\n    const client = _.toInteger(filter.getParam(SHOP_FILTER_KEY.CLIENT))\n    const marketType = filter.getParam(SHOP_FILTER_KEY.MARKET_TYPE)\n    const detailId = _.toInteger(_.get(params, 'shopId'))\n\n    const createDialog = {\n        createLoading,\n        openCreateDialog,\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\n    }\n\n    const addPhotoDialog = {\n        openAddPhotoDialog,\n        handleOpenAddPhotoDialog: props.handleOpenAddPhotoDialog,\n        handleCloseAddPhotoDialog: props.handleCloseAddPhotoDialog,\n        handleSubmitAddPhotoDialog: props.handleSubmitAddPhotoDialog\n    }\n\n    const slideShowDialog = {\n        gallery,\n        galleryLoading,\n        openSlideShowDialog,\n        handleOpenSlideShowDialog: props.handleOpenSlideShowDialog,\n        handleCloseSlideShowDialog: props.handleCloseSlideShowDialog\n    }\n\n    const mapDialog = {\n        initialValues: (() => {\n            if (!detail) {\n                return {}\n            }\n            return {\n                latLng: {\n                    lat: _.get(detail, ['location', 'lat']),\n                    lng: _.get(detail, ['location', 'lon'])\n                }\n            }\n        })(),\n        openMapDialog,\n        handleOpenMapDialog: props.handleOpenMapDialog,\n        handleCloseMapDialog: props.handleCloseMapDialog,\n        handleSubmitMapDialog: props.handleSubmitMapDialog\n    }\n\n    const deleteDialog = {\n        openDeleteDialog,\n        handleOpenDeleteDialog: props.handleOpenDeleteDialog,\n        handleCloseDeleteDialog: props.handleCloseDeleteDialog\n    }\n\n    const confirmDialog = {\n        openConfirmDialog: props.openConfirmDialog,\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\n        handleSendConfirmDialog: props.handleSendConfirmDialog\n    }\n\n    const imageDeleteDialog = {\n        openDeleteImage: props.openDeleteImage,\n        handleOpenDeleteImageDialog: props.handleOpenDeleteImageDialog,\n        handleCloseDeleteImageDialog: props.handleCloseDeleteImageDialog,\n        handleSendDeleteImageDialog: props.handleSendDeleteImageDialog\n    }\n\n    const navigationButtons = {\n        handlePrevImage: props.handlePrevImage,\n        handleNextImage: props.handleNextImage\n\n    }\n    const updateDialog = {\n        initialValues: (() => {\n            const NOT_ACTIVE = 2\n            if (!detail || openCreateDialog) {\n                return {}\n            }\n            const status = _.get(detail, 'status')\n            let isActive = 1\n            if (status === false) {\n                isActive = NOT_ACTIVE\n            }\n            return {\n                name: _.get(detail, 'name'),\n                address: _.get(detail, 'address'),\n                client: _.get(detail, ['client', 'name']),\n                contactName: _.get(detail, 'contactName'),\n                frequency: {\n                    value: _.toNumber(_.get(detail, 'visitFrequency'))\n                },\n                guide: _.get(detail, 'guide'),\n                phone: _.get(detail, 'phone'),\n                latLng: {\n                    lat: _.get(detail, ['location', 'lat']),\n                    lng: _.get(detail, ['location', 'lon'])\n                },\n                marketType: {\n                    value: _.get(detail, ['marketType', 'id']),\n                    text: _.get(detail, ['marketType', 'name'])\n                },\n                status: {\n                    value: isActive\n                }\n            }\n        })(),\n        updateLoading: detailLoading || updateLoading,\n        openUpdateDialog,\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\n    }\n\n    const updateMapDialog = {\n        initialValues: (() => {\n            if (!mapLocation) {\n                return {}\n            }\n            return {\n                latLng: {\n                    lat: _.get(mapLocation, 'lat'),\n                    lng: _.get(mapLocation, 'lng')\n                }\n            }\n        })(),\n        openUpdateMapDialog,\n        handleOpenMapUpdateDialog: props.handleOpenMapUpdateDialog,\n        handleCloseMapUpdateDialog: props.handleCloseMapUpdateDialog,\n        handleSubmitMapUpdateDialog: props.handleSubmitMapUpdateDialog\n    }\n\n    const filterDialog = {\n        initialValues: {\n            category: {\n                value: client\n            },\n            marketType: {\n                value: marketType\n            }\n        },\n        filterLoading: false,\n        openFilterDialog,\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\n        handleClearFilterDialog: props.handleClearFilterDialog,\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\n    }\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n\n    const detailData = {\n        id: detailId,\n        data: detail,\n        detailLoading,\n        handleCloseDetail: props.handleCloseDetail,\n        handleSetPrimaryImage: props.handleSetPrimaryImage\n    }\n\n    return (\n        <Layout {...layout}>\n            <ShopGridList\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                createDialog={createDialog}\n                mapDialog={mapDialog}\n                addPhotoDialog={addPhotoDialog}\n                slideShowDialog={slideShowDialog}\n                updateMapDialog={updateMapDialog}\n                deleteDialog={deleteDialog}\n                confirmDialog={confirmDialog}\n                imageDeleteDialog={imageDeleteDialog}\n                updateDialog={updateDialog}\n                filterDialog={filterDialog}\n                mapLocation={mapLocation}\n                navigationButtons={navigationButtons}\n            />\n        </Layout>\n    )\n})\n\nexport default ShopList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Shop/ShopList.js","import ShopList from './ShopList'\n\nexport {ShopList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Shop/index.js","import React from 'react'\nimport _ from 'lodash'\nimport {compose} from 'recompose'\nimport {hashHistory} from 'react-router'\nimport {connect} from 'react-redux'\nimport injectSheet from 'react-jss'\nimport {signInAction, authConfirmAction} from '../../actions/signIn'\nimport SignInForm from '../../components/SignInForm'\nimport {getConfig} from '../../actions/primeryCurrency'\nimport * as ROUTES from '../../constants/routes'\n\nconst enhance = compose(\n    injectSheet({\n        container: {\n            height: '100%',\n            display: 'flex !important',\n            justifyContent: 'center',\n            flexDirection: 'column'\n        }\n    }),\n    connect(state => {\n        return {\n            formValues: _.get(state, ['form', 'SignInForm', 'values']),\n            loading: _.get(state, ['signIn', 'loading']),\n            config: _.get(state, ['config', 'primaryCurrency', 'data'])\n        }\n    })\n)\n\nconst SignIn = enhance((props) => {\n    const {classes, dispatch, location, loading, formValues} = props\n\n    const onSubmit = () => {\n        return dispatch(signInAction(formValues))\n            .then(() => {\n                const redirectUrl = _.get(location, ['query', 'redirect']) || ROUTES.DASHBOARD_URL\n                dispatch(getConfig())\n                hashHistory.push(redirectUrl)\n                dispatch(authConfirmAction())\n            })\n    }\n\n    return (\n        <div className={classes.container}>\n            <SignInForm loading={loading} onSubmit={onSubmit} />\n        </div>\n    )\n})\n\nexport default SignIn\n\n\n\n// WEBPACK FOOTER //\n// src/containers/SignIn/SignIn.js","import SignIn from './SignIn'\n\nexport default SignIn\n\n\n\n// WEBPACK FOOTER //\n// src/containers/SignIn/index.js","import React from 'react'\nimport _ from 'lodash'\nimport {connect} from 'react-redux'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withState, withHandlers} from 'recompose'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport {\n    ORDER_DETAIL_OPEN,\n    StatCashboxGridList\n} from '../../components/StatCashbox'\nimport {\n    statCashboxListFetchAction,\n    statCashboxItemFetchAction\n} from '../../actions/statCashbox'\nimport {orderListFetchAction, orderItemFetchAction} from '../../actions/order'\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['statCashbox', 'item', 'data'])\n        const orderDetail = _.get(state, ['order', 'item', 'data'])\n        const detailLoading = _.get(state, ['statCashbox', 'item', 'loading'])\n        const createLoading = _.get(state, ['statCashbox', 'create', 'loading'])\n        const updateLoading = _.get(state, ['statCashbox', 'update', 'loading'])\n        const list = _.get(state, ['statCashbox', 'list', 'data'])\n        const orderList = _.get(state, ['order', 'list', 'data'])\n        const orderLoading = _.get(state, ['order', 'list', 'loading'])\n        const listLoading = _.get(state, ['statCashbox', 'list', 'loading'])\n        const createForm = _.get(state, ['form', 'StatCashboxCreateForm'])\n        const orderId = _.toInteger(_.get(['location', 'query', 'orderId']))\n\n        const filter = filterHelper(list, pathname, query)\n\n        return {\n            list,\n            listLoading,\n            orderList,\n            orderLoading,\n            detail,\n            orderDetail,\n            orderId,\n            detailLoading,\n            createLoading,\n            updateLoading,\n            filter,\n            createForm\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(statCashboxListFetchAction(filter))\n        dispatch(orderListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const statCashboxId = _.get(nextProps, ['params', 'statCashboxId'])\n        return statCashboxId && _.get(props, ['params', 'statCashboxId']) !== statCashboxId\n    }, ({dispatch, params, filter}) => {\n        const statCashboxId = _.toInteger(_.get(params, 'statCashboxId'))\n        statCashboxId && dispatch(statCashboxItemFetchAction(statCashboxId))\n        dispatch(orderListFetchAction(filter))\n    }),\n\n    withState('openCSVDialog', 'setOpenCSVDialog', false),\n\n    withHandlers({\n        handleOrderClick: props => (id) => {\n            const {filter, location: {pathname}, dispatch} = props\n            hashHistory.push({\n                pathname: pathname,\n                query: filter.getParams({[ORDER_DETAIL_OPEN]: true, 'orderId': id})\n            })\n            dispatch(orderItemFetchAction(id))\n        },\n\n        handleOrderDetailClose: props => () => {\n            const {filter, location: {pathname}} = props\n            hashHistory.push({\n                pathname: pathname,\n                query: filter.getParams({[ORDER_DETAIL_OPEN]: false, 'orderId': -1})\n            })\n        }\n    })\n)\n\nconst StatCashbox = enhance((props) => {\n    const {\n        location,\n        list,\n        orderList,\n        orderLoading,\n        orderDetail,\n        listLoading,\n        detail,\n        detailLoading,\n        filter,\n        layout,\n        params\n    } = props\n\n    const orderDetailOpen = toBoolean(_.get(location, ['query', ORDER_DETAIL_OPEN]))\n\n    const detailId = _.toInteger(_.get(params, 'statCashboxId'))\n\n    const actionsDialog = {\n        handleActionEdit: props.handleActionEdit,\n        handleActionDelete: props.handleOpenDeleteDialog\n    }\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n\n    const detailData = {\n        id: detailId,\n        data: detail,\n        detailLoading\n    }\n\n    const orderData = {\n        orderList,\n        orderDetail,\n        orderLoading,\n        orderDetailOpen: orderDetailOpen,\n        handleOrderDetailClose: props.handleOrderDetailClose,\n        handleOrderClick: props.handleOrderClick\n    }\n\n    return (\n        <Layout {...layout}>\n            <StatCashboxGridList\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                actionsDialog={actionsDialog}\n                orderData={orderData}\n            />\n        </Layout>\n    )\n})\n\nexport default StatCashbox\n\n\n\n// WEBPACK FOOTER //\n// src/containers/StatCashbox/StatCashbox.js","import StatCashbox from './StatCashbox'\n\nexport {StatCashbox}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/StatCashbox/index.js","import React from 'react'\nimport _ from 'lodash'\nimport {connect} from 'react-redux'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport filterHelper from '../../helpers/filter'\nimport moment from 'moment'\nimport toBoolean from '../../helpers/toBoolean'\nimport {\n    STATDEBTORS_FILTER_OPEN,\n    STATDEBTORS_FILTER_KEY,\n    ORDER_DETAIL_OPEN,\n    StatDebtorsGridList\n} from '../../components/StatDebtors'\nimport {\n    statDebtorsListFetchAction,\n    statDebtorsOrderListFetchAction,\n    statDebtorsSumFetchAction,\n    getDocumentAction\n} from '../../actions/statDebtors'\nimport {orderItemFetchAction} from '../../actions/order'\nimport * as ROUTER from '../../constants/routes'\n\nconst ONE = 1\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const list = _.get(state, ['statDebtors', 'list', 'data'])\n        const listLoading = _.get(state, ['statDebtors', 'list', 'loading'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['statDebtors', 'item', 'data'])\n        const detailLoading = _.get(state, ['statDebtors', 'orderList', 'loading'])\n        const orderList = _.get(state, ['statDebtors', 'orderList', 'data'])\n        const orderDetail = _.get(state, ['order', 'item', 'data'])\n        const orderDetailLoading = _.get(state, ['order', 'item', 'loading'])\n        const orderLoading = _.get(state, ['statDebtors', 'orderList', 'loading'])\n        const createLoading = _.get(state, ['statDebtors', 'create', 'loading'])\n        const updateLoading = _.get(state, ['statDebtors', 'update', 'loading'])\n        const createForm = _.get(state, ['form', 'StatDebtorsCreateForm'])\n        const orderId = _.toInteger(_.get(['location', 'query', 'orderId']))\n        const sumList = _.get(state, ['statDebtors', 'sum', 'data'])\n        const sumLoading = _.get(state, ['statDebtors', 'sum', 'loading'])\n        const tab = _.toInteger(_.get(props, ['location', 'query', 'tab']) || ONE)\n\n        const filter = filterHelper(list, pathname, query)\n        const filterForm = _.get(state, ['form', 'StatDebtorsFilterForm'])\n\n        return {\n            list,\n            listLoading,\n            orderList,\n            orderLoading,\n            detail,\n            orderDetail,\n            orderDetailLoading,\n            orderId,\n            detailLoading,\n            createLoading,\n            updateLoading,\n            filter,\n            filterForm,\n            createForm,\n            sumList,\n            tab,\n            sumLoading\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return (props.filter.filterRequest() !== nextProps.filter.filterRequest() || props.tab !== nextProps.tab)\n    }, ({dispatch, filter, tab}) => {\n        if (tab === ONE) dispatch(statDebtorsListFetchAction(filter))\n        else dispatch(statDebtorsOrderListFetchAction(true))\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return !nextProps.sumList && _.isNil(nextProps.sumLoading)\n    }, ({dispatch}) => {\n        dispatch(statDebtorsSumFetchAction())\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const statDebtorsId = _.get(nextProps, ['params', 'statDebtorsId'])\n        return statDebtorsId && _.get(props, ['params', 'statDebtorsId']) !== statDebtorsId\n    }, ({dispatch, params}) => {\n        const statDebtorsId = _.toInteger(_.get(params, 'statDebtorsId'))\n        statDebtorsId && dispatch(statDebtorsOrderListFetchAction(statDebtorsId))\n    }),\n\n    withHandlers({\n        handleOpenFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[STATDEBTORS_FILTER_OPEN]: true})})\n        },\n\n        handleCloseFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[STATDEBTORS_FILTER_OPEN]: false})})\n        },\n\n        handleClearFilterDialog: props => () => {\n            const {location: {pathname}} = props\n            hashHistory.push({pathname, query: {}})\n        },\n\n        handleSubmitFilterDialog: props => () => {\n            const {filter, filterForm} = props\n            const fromDate = _.get(filterForm, ['values', 'date', 'fromDate']) || null\n            const toDate = _.get(filterForm, ['values', 'date', 'toDate']) || null\n\n            filter.filterBy({\n                [STATDEBTORS_FILTER_OPEN]: false,\n                [STATDEBTORS_FILTER_KEY.FROM_DATE]: fromDate && fromDate.format('YYYY-MM-DD'),\n                [STATDEBTORS_FILTER_KEY.TO_DATE]: toDate && toDate.format('YYYY-MM-DD')\n            })\n        },\n\n        handleOrderClick: props => (id) => {\n            const {filter, location: {pathname}, dispatch} = props\n            hashHistory.push({\n                pathname: pathname,\n                query: filter.getParams({[ORDER_DETAIL_OPEN]: true, 'orderId': id})\n            })\n            dispatch(orderItemFetchAction(id))\n        },\n\n        handleOrderDetailClose: props => () => {\n            const {filter, location: {pathname}} = props\n            hashHistory.push({\n                pathname: pathname,\n                query: filter.getParams({[ORDER_DETAIL_OPEN]: false, 'orderId': -1})\n            })\n        },\n        handleClickTab: props => (tab) => {\n            const {filter, location: {pathname}} = props\n            hashHistory.push({\n                pathname: pathname,\n                query: filter.getParams({'tab': tab})\n            })\n        },\n        handleGetDocument: props => () => {\n            const {dispatch, filter} = props\n            return dispatch(getDocumentAction(filter))\n        },\n        handleCloseDetail: props => () => {\n            const {filter} = props\n            hashHistory.push({pathname: ROUTER.STATDEBTORS_LIST_URL, query: filter.getParams()})\n        }\n    })\n)\n\nconst StatDebtors = enhance((props) => {\n    const {\n        location,\n        list,\n        orderList,\n        orderDetail,\n        orderDetailLoading,\n        listLoading,\n        detail,\n        detailLoading,\n        sumLoading,\n        sumList,\n        filter,\n        layout,\n        params\n    } = props\n\n    const openFilterDialog = toBoolean(_.get(location, ['query', STATDEBTORS_FILTER_OPEN]))\n    const orderDetailOpen = toBoolean(_.get(location, ['query', ORDER_DETAIL_OPEN]))\n    const tab = _.toInteger(_.get(location, ['query', 'tab'])) || ONE\n\n    const detailId = _.toInteger(_.get(params, 'statDebtorsId'))\n\n    const fromDate = filter.getParam(STATDEBTORS_FILTER_KEY.FROM_DATE)\n    const toDate = filter.getParam(STATDEBTORS_FILTER_KEY.TO_DATE)\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n\n    const detailData = {\n        id: detailId,\n        data: detail,\n        detailLoading,\n        handleCloseDetail: props.handleCloseDetail\n    }\n\n    const filterDialog = {\n        initialValues: {\n            date: {\n                fromDate: fromDate && moment(fromDate, 'YYYY-MM-DD'),\n                toDate: toDate && moment(toDate, 'YYYY-MM-DD')\n            }\n        },\n        filterLoading: false,\n        openFilterDialog,\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\n        handleClearFilterDialog: props.handleClearFilterDialog,\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\n    }\n\n    const orderData = {\n        orderList,\n        orderDetail,\n        detailLoading: orderDetailLoading,\n        orderDetailOpen: orderDetailOpen,\n        handleOrderDetailClose: props.handleOrderDetailClose,\n        handleOrderClick: props.handleOrderClick\n    }\n\n    const sumData = {\n        data: sumList,\n        loading: sumLoading\n    }\n\n    const tabData = {\n        tab: _.toInteger(tab),\n        handleClick: props.handleClickTab\n    }\n\n    const getDocument = {\n        handleGetDocument: props.handleGetDocument\n    }\n\n    return (\n        <Layout {...layout}>\n            <StatDebtorsGridList\n                filter={filter}\n                filterDialog={filterDialog}\n                listData={listData}\n                sumData={sumData}\n                detailData={detailData}\n                orderData={orderData}\n                tabData={tabData}\n                getDocument={getDocument}\n            />\n        </Layout>\n    )\n})\n\nexport default StatDebtors\n\n\n\n// WEBPACK FOOTER //\n// src/containers/StatDebtors/StatDebtors.js","import StatDebtors from './StatDebtors'\n\nexport {StatDebtors}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/StatDebtors/index.js","import React from 'react'\nimport _ from 'lodash'\nimport sprintf from 'sprintf'\nimport {connect} from 'react-redux'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport {\n    StatManufactureGridList,\n    STAT_MANUFACTURE_CREATE_DIALOG_OPEN\n} from '../../components/StatManufacture'\nimport {\n    statManufactureListFetchAction,\n    statManufactureItemFetchAction\n} from '../../actions/statManufacture'\nimport {orderListFetchAction} from '../../actions/order'\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['statManufacture', 'item', 'data'])\n        const orderDetail = _.get(state, ['order', 'item', 'data'])\n        const detailLoading = _.get(state, ['statManufacture', 'item', 'loading'])\n        const createLoading = _.get(state, ['statManufacture', 'create', 'loading'])\n        const updateLoading = _.get(state, ['statManufacture', 'update', 'loading'])\n        const list = _.get(state, ['statManufacture', 'list', 'data'])\n        const orderList = _.get(state, ['order', 'list', 'data'])\n        const orderLoading = _.get(state, ['order', 'list', 'loading'])\n        const listLoading = _.get(state, ['statManufacture', 'list', 'loading'])\n        const createForm = _.get(state, ['form', 'StatManufactureCreateForm'])\n        const orderId = _.toInteger(_.get(['location', 'query', 'orderId']))\n\n        const filter = filterHelper(list, pathname, query)\n\n        return {\n            list,\n            listLoading,\n            orderList,\n            orderLoading,\n            detail,\n            orderDetail,\n            orderId,\n            detailLoading,\n            createLoading,\n            updateLoading,\n            filter,\n            createForm\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(statManufactureListFetchAction(filter))\n        dispatch(orderListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const statManufactureId = _.get(nextProps, ['params', 'statManufactureId'])\n        return statManufactureId && _.get(props, ['params', 'statManufactureId']) !== statManufactureId\n    }, ({dispatch, params, filter}) => {\n        const statManufactureId = _.toInteger(_.get(params, 'statManufactureId'))\n        statManufactureId && dispatch(statManufactureItemFetchAction(statManufactureId))\n        dispatch(orderListFetchAction(filter))\n    }),\n\n    withHandlers({\n        handleOpenCreateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[STAT_MANUFACTURE_CREATE_DIALOG_OPEN]: true})})\n        },\n\n        handleCloseCreateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[STAT_MANUFACTURE_CREATE_DIALOG_OPEN]: false})})\n        },\n        handleClickItem: props => (id) => {\n            hashHistory.push({\n                pathname: sprintf(ROUTER.STAT_MANUFACTURE_ITEM_PATH, id)\n            })\n        }\n    })\n)\n\nconst StatManufacture = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        createLoading,\n        filter,\n        layout,\n        params\n    } = props\n\n    const openCreateDialog = toBoolean(_.get(location, ['query', STAT_MANUFACTURE_CREATE_DIALOG_OPEN]))\n\n    const detailId = _.toInteger(_.get(params, 'statManufactureId'))\n\n    const actionsDialog = {\n        handleActionEdit: props.handleActionEdit,\n        handleActionDelete: props.handleOpenDeleteDialog\n    }\n\n    const createDialog = {\n        createLoading,\n        openCreateDialog,\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\n        handleCloseCreateDialog: props.handleCloseCreateDialog\n    }\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading,\n        handleClickItem: props.handleClickItem\n    }\n\n    const detailData = {\n        id: detailId,\n        data: detail,\n        detailLoading\n    }\n\n    return (\n        <Layout {...layout}>\n            <StatManufactureGridList\n                filter={filter}\n                createDialog={createDialog}\n                listData={listData}\n                detailData={detailData}\n                actionsDialog={actionsDialog}\n            />\n        </Layout>\n    )\n})\n\nexport default StatManufacture\n\n\n\n// WEBPACK FOOTER //\n// src/containers/StatManufacture/StatManufacture.js","import StatManufacture from './StatManufacture'\n\nexport {StatManufacture}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/StatManufacture/index.js","import React from 'react'\nimport _ from 'lodash'\nimport sprintf from 'sprintf'\nimport {connect} from 'react-redux'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport moment from 'moment'\nimport toBoolean from '../../helpers/toBoolean'\nimport {\n    STATSTOCK_FILTER_OPEN,\n    STATSTOCK_FILTER_KEY,\n    StatStockGridList\n} from '../../components/StatStock'\nimport {\n    statStockListFetchAction,\n    statStockDataFetchAction,\n    getDocumentAction\n} from '../../actions/statStock'\nimport {\n    remainderStockListFetchAction\n} from '../../actions/remainderStock'\nimport {\n    transactionStockListFetchAction\n} from '../../actions/transactionStock'\nconst ONE = 1\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['statStock', 'item', 'data'])\n        const detailLoading = _.get(state, ['statStock', 'item', 'loading'])\n        const createLoading = _.get(state, ['statStock', 'create', 'loading'])\n        const updateLoading = _.get(state, ['statStock', 'update', 'loading'])\n        const list = _.get(state, ['statStock', 'list', 'data'])\n        const remainderList = _.get(state, ['remainderStock', 'list', 'data'])\n        const remainderLoading = _.get(state, ['remainderStock', 'list', 'loading'])\n        const transactionList = _.get(state, ['transactionStock', 'list', 'data'])\n        const transactionLoading = _.get(state, ['transactionStock', 'list', 'loading'])\n        const listLoading = _.get(state, ['statStock', 'list', 'loading'])\n        const createForm = _.get(state, ['form', 'StatStockCreateForm'])\n        const tab = _.toInteger(_.get(props, ['location', 'query', 'tab']) || ONE)\n        const statStockData = _.get(state, ['statStock', 'statStockData', 'data'])\n        const statStockDataLoading = _.get(state, ['statStock', 'statStockData', 'loading'])\n        const filter = filterHelper(tab === ONE ? remainderList : transactionList, pathname, query)\n        const filterForm = _.get(state, ['form', 'StatStockFilterForm'])\n        return {\n            list,\n            remainderList,\n            remainderLoading,\n            transactionList,\n            transactionLoading,\n            listLoading,\n            detail,\n            detailLoading,\n            createLoading,\n            updateLoading,\n            filter,\n            filterForm,\n            tab,\n            createForm,\n            statStockData,\n            statStockDataLoading\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        const currentStat = _.toInteger(_.get(props, ['params', 'statStockId']))\n        const statStockId = _.toInteger(_.get(nextProps, ['params', 'statStockId']))\n\n        return (\n            (props.filter.filterRequest() !== nextProps.filter.filterRequest()) || currentStat !== statStockId ||\n            (_.get(props, 'tab') !== _.get(nextProps, 'tab'))\n        )\n    }, ({dispatch, filter, params, tab}) => {\n        const statStockId = _.toInteger(_.get(params, 'statStockId'))\n        if (_.toInteger(tab) === ONE) dispatch(remainderStockListFetchAction(filter, statStockId))\n        else dispatch(transactionStockListFetchAction(filter, statStockId))\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return !nextProps.listLoading && _.isNil(nextProps.list)\n    }, ({dispatch, filter}) => {\n        dispatch(statStockListFetchAction(filter))\n    }),\n    withPropsOnChange((props, nextProps) => {\n        const statStockId = _.get(nextProps, ['params', 'statStockId'])\n        return statStockId && _.get(props, ['params', 'statStockId']) !== statStockId\n    }, ({dispatch, params}) => {\n        const statStockId = _.toInteger(_.get(params, 'statStockId'))\n        dispatch(statStockDataFetchAction(statStockId))\n    }),\n\n    withHandlers({\n        handleOpenFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[STATSTOCK_FILTER_OPEN]: true})})\n        },\n\n        handleCloseFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[STATSTOCK_FILTER_OPEN]: false})})\n        },\n\n        handleClearFilterDialog: props => () => {\n            const {location: {pathname}} = props\n            const tab = _.get(props, ['location', 'query', 'tab'])\n            hashHistory.push({pathname, query: {'tab': tab}})\n        },\n\n        handleSubmitFilterDialog: props => () => {\n            const {filter, filterForm} = props\n            const tab = _.toInteger(_.get(props, ['location', 'query', 'tab']))\n            const fromDate = _.get(filterForm, ['values', 'date', 'fromDate']) || null\n            const toDate = _.get(filterForm, ['values', 'date', 'toDate']) || null\n            const brand = _.get(filterForm, ['values', 'brand', 'value']) || null\n            const type = _.get(filterForm, ['values', 'type', 'value']) || null\n            if (tab === ONE) {\n                filter.filterBy({\n                    [STATSTOCK_FILTER_OPEN]: false,\n                    [STATSTOCK_FILTER_KEY.TYPE]: type,\n                    [STATSTOCK_FILTER_KEY.BRAND]: brand\n                })\n            } else {\n                filter.filterBy({\n                    [STATSTOCK_FILTER_OPEN]: false,\n                    [STATSTOCK_FILTER_KEY.FROM_DATE]: fromDate && fromDate.format('YYYY-MM-DD'),\n                    [STATSTOCK_FILTER_KEY.TO_DATE]: toDate && toDate.format('YYYY-MM-DD'),\n                    [STATSTOCK_FILTER_KEY.BRAND]: brand,\n                    [STATSTOCK_FILTER_KEY.TYPE]: type\n                })\n            }\n        },\n\n        handleClickTapChange: props => (id) => {\n            const {filter, location: {pathname}} = props\n            hashHistory.push({pathname, query: filter.getParams({'tab': id})})\n        },\n        handleClickStock: props => (id) => {\n            const {filter, dispatch} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.STATSTOCK_ITEM_PATH, id),\n                query: filter.getParams()\n            })\n            dispatch(statStockDataFetchAction())\n        },\n        handleClickStatStock: props => (id) => {\n            hashHistory.push({pathname: sprintf(ROUTER.STATSTOCK_ITEM_PATH, id), query: {}})\n        },\n\n        handleGetDocument: props => () => {\n            const {dispatch, filter} = props\n            return dispatch(getDocumentAction(filter))\n        }\n    })\n)\n\nconst StatStock = enhance((props) => {\n    const {\n        location,\n        list,\n        remainderList,\n        remainderLoading,\n        transactionList,\n        transactionLoading,\n        listLoading,\n        detail,\n        detailLoading,\n        filter,\n        layout,\n        params,\n        statStockData,\n        statStockDataLoading,\n        tab\n    } = props\n\n    const openFilterDialog = toBoolean(_.get(location, ['query', STATSTOCK_FILTER_OPEN]))\n    const brand = _.toInteger(filter.getParam(STATSTOCK_FILTER_KEY.BRAND))\n    const type = _.toInteger(filter.getParam(STATSTOCK_FILTER_KEY.TYPE))\n    const detailId = _.toInteger(_.get(params, 'statStockId'))\n\n    const fromDate = filter.getParam(STATSTOCK_FILTER_KEY.FROM_DATE)\n    const toDate = filter.getParam(STATSTOCK_FILTER_KEY.TO_DATE)\n\n    const listData = {\n        stockList: _.get(list, 'results'),\n        transactionList: _.get(transactionList, 'results'),\n        remainderList: _.get(remainderList, 'results'),\n        remainderLoading,\n        transactionLoading,\n        listLoading,\n        handleClickTapChange: props.handleClickTapChange,\n        handleClickStatStock: props.handleClickStatStock,\n        tab: _.toInteger(tab)\n\n    }\n\n    const detailData = {\n        id: detailId,\n        data: detail,\n        detailLoading\n    }\n\n    const filterDialog = {\n        initialValues: (() => {\n            return {\n                date: {\n                    fromDate: fromDate && moment(fromDate, 'YYYY-MM-DD'),\n                    toDate: toDate && moment(toDate, 'YYYY-MM-DD')\n                },\n                brand: {\n                    value: brand\n                },\n                type: {\n                    value: type\n                }\n            }\n        })(),\n        filterLoading: false,\n        openFilterDialog,\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\n        handleClearFilterDialog: props.handleClearFilterDialog,\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\n    }\n\n    const handleClickStock = {\n        clickItem: props.handleClickStock\n    }\n    const statStockDataExp = {\n        statStockData,\n        statStockDataLoading\n    }\n\n    const getDocument = {\n        handleGetDocument: props.handleGetDocument\n    }\n\n    return (\n        <Layout {...layout}>\n            <StatStockGridList\n                filter={filter}\n                filterDialog={filterDialog}\n                listData={listData}\n                detailData={detailData}\n                statStockData={statStockDataExp}\n                handleClickStock={handleClickStock}\n                getDocument={getDocument}\n            />\n        </Layout>\n    )\n})\n\nexport default StatStock\n\n\n\n// WEBPACK FOOTER //\n// src/containers/StatStock/StatStock.js","import StatStock from './StatStock'\n\nexport {StatStock}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/StatStock/index.js","import React from 'react'\nimport _ from 'lodash'\nimport sprintf from 'sprintf'\nimport {connect} from 'react-redux'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport getDocuments from '../../helpers/getDocument'\nimport * as API from '../../constants/api'\nimport * as serializers from '../../serializers/Statistics/statAgentSerializer'\nimport moment from 'moment'\n\nimport {\n    StatAgentGridList,\n    STAT_AGENT_DIALOG_OPEN\n} from '../../components/Statistics'\nimport {STAT_AGENT_FILTER_KEY} from '../../components/Statistics/StatAgentGridList'\nimport {\n    statAgentListFetchAction,\n    statAgentItemFetchAction\n} from '../../actions/statAgent'\n\nconst ZERO = 0\nconst ONE = 1\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['statAgent', 'item', 'data'])\n        const detailLoading = _.get(state, ['statAgent', 'item', 'loading'])\n        const list = _.get(state, ['statAgent', 'list', 'data'])\n        const listLoading = _.get(state, ['statAgent', 'list', 'loading'])\n        const filterForm = _.get(state, ['form', 'StatAgentFilterForm'])\n        const filter = filterHelper(list, pathname, query)\n        const filterItem = filterHelper(detail, pathname, query)\n        return {\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            filter,\n            query,\n            filterForm,\n            filterItem\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest() &&\n            (!_.get(props, ['params', 'statAgentId'])) &&\n            (!_.get(nextProps, ['params', 'statAgentId']))\n    }, ({dispatch, filter}) => {\n        dispatch(statAgentListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const statAgentId = _.get(nextProps, ['params', 'statAgentId']) || ZERO\n        return statAgentId > ZERO && _.get(props, ['params', 'statAgentId']) !== statAgentId\n    }, ({dispatch, params, filter, filterItem}) => {\n        const statAgentId = _.toInteger(_.get(params, 'statAgentId'))\n        if (statAgentId > ZERO) {\n            dispatch(statAgentItemFetchAction(filter, filterItem, statAgentId))\n        }\n    }),\n\n    withHandlers({\n        handleOpenStatAgentDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({pathname: sprintf(ROUTER.STATISTICS_AGENT_ITEM_PATH, id), query: filter.getParams({[STAT_AGENT_DIALOG_OPEN]: true})})\n        },\n\n        handleCloseStatAgentDialog: props => () => {\n            const {filter} = props\n            hashHistory.push({pathname: ROUTER.STATISTICS_AGENT_URL, query: filter.getParams({[STAT_AGENT_DIALOG_OPEN]: false})})\n        },\n        handleCloseDetail: props => () => {\n            const {filter} = props\n            hashHistory.push({pathname: ROUTER.STATISTICS_LIST_URL, query: filter.getParams()})\n        },\n\n        handleSubmitFilterDialog: props => (event) => {\n            event.preventDefault()\n            const {filter, filterForm} = props\n\n            const search = _.get(filterForm, ['values', 'search']) || null\n            const user = _.get(filterForm, ['values', 'user', 'value']) || null\n            const fromDate = _.get(filterForm, ['values', 'date', 'fromDate']) || null\n            const toDate = _.get(filterForm, ['values', 'date', 'toDate']) || null\n            filter.filterBy({\n                [STAT_AGENT_FILTER_KEY.SEARCH]: search,\n                [STAT_AGENT_FILTER_KEY.USER]: user,\n                [STAT_AGENT_FILTER_KEY.FROM_DATE]: fromDate && fromDate.format('YYYY-MM-DD'),\n                [STAT_AGENT_FILTER_KEY.TO_DATE]: toDate && toDate.format('YYYY-MM-DD')\n\n            })\n        },\n        handleGetDocument: props => () => {\n            const {filter} = props\n            const params = serializers.listFilterSerializer(filter.getParams())\n            getDocuments(API.STAT_AGENT_GET_DOCUMENT, params)\n        }\n    })\n)\n\nconst StatAgentList = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        filter,\n        layout,\n        filterItem,\n        filterForm,\n        params\n    } = props\n\n    const openStatAgentDialog = toBoolean(_.get(location, ['query', STAT_AGENT_DIALOG_OPEN]))\n    const detailId = _.toInteger(_.get(params, 'statAgentId'))\n    const firstDayOfMonth = _.get(location, ['query', 'fromDate']) || moment().format('YYYY-MM-01')\n    const lastDay = moment().daysInMonth()\n    const lastDayOfMonth = _.get(location, ['query', 'toDate']) || moment().format('YYYY-MM-' + lastDay)\n\n    const statAgentDialog = {\n        openStatAgentDialog,\n        handleCloseStatAgentDialog: props.handleCloseStatAgentDialog,\n        handleOpenStatAgentDialog: props.handleOpenStatAgentDialog\n    }\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n    const agentDetail = _.filter(_.get(list, 'results'), (item) => {\n        return _.get(item, 'id') === detailId\n    })\n    const filterDateRange = (_.get(filterForm, ['values', 'date', 'fromDate']) && _.get(filterForm, ['values', 'date', 'toDate'])) ? {\n        'fromDate': _.get(filterForm, ['values', 'date', 'fromDate']),\n        'toDate': _.get(filterForm, ['values', 'date', 'toDate'])\n    } : {}\n\n    const defaultDate = {\n        'fromDate': moment().subtract(ONE, 'month'),\n        'toDate': moment()\n    }\n\n    const detailData = {\n        filter: filterItem,\n        id: detailId,\n        data: detail,\n        agentDetail,\n        detailLoading,\n        handleCloseDetail: props.handleCloseDetail,\n        filterDateRange\n\n    }\n    const getDocument = {\n        handleGetDocument: props.handleGetDocument\n    }\n    const initialValues = {\n        date: {\n            date: filterDateRange || defaultDate,\n            fromDate: moment(firstDayOfMonth),\n            toDate: moment(lastDayOfMonth)\n        }\n    }\n\n    return (\n        <Layout {...layout}>\n            <StatAgentGridList\n                filter={filter}\n                handleSubmitFilterDialog={props.handleSubmitFilterDialog}\n                listData={listData}\n                detailData={detailData}\n                statAgentDialog={statAgentDialog}\n                getDocument={getDocument}\n                initialValues={initialValues}\n            />\n        </Layout>\n    )\n})\n\nexport default StatAgentList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Statistics/StatAgent.js","import React from 'react'\nimport _ from 'lodash'\nimport moment from 'moment'\nimport {connect} from 'react-redux'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport * as API from '../../constants/api'\nimport * as serializers from '../../serializers/Statistics/statCashboxSerializer'\nimport getDocuments from '../../helpers/getDocument'\n\nimport {StatCashboxGridList} from '../../components/Statistics'\nimport {STAT_CASHBOX_FILTER_KEY} from '../../components/Statistics/StatCashboxGridList'\nimport {\n    statCashboxListFetchAction,\n    statCashboxItemFetchAction\n} from '../../actions/statisticsCashboxt'\nimport {transactionListFetchAction} from '../../actions/transaction'\n\nconst ZERO = 0\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['cashbox', 'item', 'data'])\n        const detailLoading = _.get(state, ['cashbox', 'item', 'loading'])\n        const list = _.get(state, ['cashbox', 'list', 'data'])\n        const listLoading = _.get(state, ['cashbox', 'list', 'loading'])\n        const filterForm = _.get(state, ['form', 'StatCashboxFilterForm'])\n        const filter = filterHelper(list, pathname, query)\n        const transactionsList = _.get(state, ['transaction', 'list', 'data'])\n        const transactionsLoading = _.get(state, ['transaction', 'list', 'loading'])\n        return {\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            transactionsList,\n            transactionsLoading,\n            filter,\n            filterForm\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(statCashboxListFetchAction(filter))\n    }),\n    withPropsOnChange((props, nextProps) => {\n        const prevId = _.toInteger(_.get(props, ['params', 'cashboxId']))\n        const nextId = _.toInteger(_.get(nextProps, ['params', 'cashboxId']))\n        return prevId !== nextId && nextId > ZERO\n    }, ({dispatch, params, filter}) => {\n        const id = _.toInteger(_.get(params, 'cashboxId'))\n        if (id > ZERO) {\n            dispatch(statCashboxItemFetchAction(id))\n            dispatch(transactionListFetchAction(filter, id))\n        }\n    }),\n\n    withHandlers({\n        handleSubmitFilterDialog: props => (event) => {\n            event.preventDefault()\n            const {filter, filterForm} = props\n\n            const cashbox = _.get(filterForm, ['values', 'cashbox', 'value']) || null\n            const fromDate = _.get(filterForm, ['values', 'date', 'fromDate']) || null\n            const toDate = _.get(filterForm, ['values', 'date', 'toDate']) || null\n\n            filter.filterBy({\n                [STAT_CASHBOX_FILTER_KEY.CASHBOX]: cashbox,\n                [STAT_CASHBOX_FILTER_KEY.FROM_DATE]: fromDate && fromDate.format('YYYY-MM-DD'),\n                [STAT_CASHBOX_FILTER_KEY.TO_DATE]: toDate && toDate.format('YYYY-MM-DD')\n\n            })\n        },\n\n        handleCloseDetail: props => () => {\n            const {filter} = props\n            hashHistory.push({pathname: ROUTER.STATISTICS_CASHBOX_URL, query: filter.getParams()})\n        },\n\n        handleGetDocument: props => () => {\n            const {filter} = props\n            const params = serializers.listFilterSerializer(filter.getParams())\n            getDocuments(API.STAT_CASHBOX_GET_DOCUMENT, params)\n        }\n    })\n)\n\nconst StatCashboxList = enhance((props) => {\n    const {\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        filter,\n        layout,\n        transactionsList,\n        transactionsLoading,\n        params,\n        location\n    } = props\n\n    const detailId = _.toInteger(_.get(params, 'cashboxId'))\n    const firstDayOfMonth = _.get(location, ['query', 'fromDate']) || moment().format('YYYY-MM-01')\n    const lastDay = moment().daysInMonth()\n    const lastDayOfMonth = _.get(location, ['query', 'toDate']) || moment().format('YYYY-MM-' + lastDay)\n\n    const openDetails = detailId > ZERO\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading,\n        openDetails\n    }\n\n    const detailData = {\n        id: detailId,\n        data: detail,\n        transactionData: _.get(transactionsList, 'results'),\n        detailLoading,\n        transactionsLoading,\n        handleCloseDetail: props.handleCloseDetail\n    }\n    const getDocument = {\n        handleGetDocument: props.handleGetDocument\n    }\n    const filterForm = {\n        initialValues: {\n            date: {\n                fromDate: moment(firstDayOfMonth),\n                toDate: moment(lastDayOfMonth)\n            }\n        }\n    }\n\n    return (\n        <Layout {...layout}>\n            <StatCashboxGridList\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                handleSubmitFilterDialog={props.handleSubmitFilterDialog}\n                getDocument={getDocument}\n                initialValues={filterForm.initialValues}\n                filterForm={filterForm}\n            />\n        </Layout>\n    )\n})\n\nexport default StatCashboxList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Statistics/StatCashbox.js","import React from 'react'\nimport _ from 'lodash'\nimport {connect} from 'react-redux'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withHandlers, withPropsOnChange, withState} from 'recompose'\nimport {\n    statDebtorsListFetchAction,\n    statDebtorsDataFetchAction,\n    statDebtorsItemFetchAction,\n    statDebtorsOrderItemFetchAction,\n    getDocumentAction\n} from '../../actions/statisticsDeptors'\nimport filterHelper from '../../helpers/filter'\nimport {StatDebtorsGridList} from '../../components/Statistics'\nimport {STAT_DEBTORS_FILTER_KEY} from '../../components/Statistics/StatDebtorsGridList'\n\nconst ZERO = 0\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detailOrder = _.get(state, ['order', 'item', 'data'])\n        const detailOrderLoading = _.get(state, ['order', 'item', 'loading'])\n        const detail = _.get(state, ['statisticsDebtors', 'item', 'data'])\n        const detailLoading = _.get(state, ['statisticsDebtors', 'item', 'loading'])\n        const statData = _.get(state, ['statisticsDebtors', 'data', 'data'])\n        const list = _.get(state, ['statisticsDebtors', 'list', 'data'])\n        const listLoading = _.get(state, ['statisticsDebtors', 'list', 'loading'])\n        const filterForm = _.get(state, ['form', 'StatDebtorsFilterForm'])\n        const filter = filterHelper(list, pathname, query)\n        const filterItem = filterHelper(detail, pathname, query)\n        return {\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            filter,\n            filterForm,\n            filterItem,\n            detailOrder,\n            detailOrderLoading,\n            statData\n        }\n    }),\n    withState('openDetail', 'setOpenDetail', false),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(statDebtorsListFetchAction(filter))\n        dispatch(statDebtorsDataFetchAction())\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const orderId = _.toInteger(_.get(props, ['location', 'query', 'orderId']))\n        return _.toInteger(_.get(nextProps, ['location', 'query', 'orderId'])) !== orderId &&\n            _.toInteger(_.get(nextProps, ['location', 'query', 'orderId'])) !== ZERO\n    }, ({dispatch, location}) => {\n        const id = _.toInteger(_.get(location, ['query', 'orderId']))\n        dispatch(statDebtorsOrderItemFetchAction(_.toInteger(id)))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const detailId = _.toInteger(_.get(props, ['location', 'query', 'detailId']))\n        return detailId && _.toInteger(_.get(nextProps, ['location', 'query', 'detailId'])) !== detailId &&\n            _.toInteger(_.get(nextProps, ['location', 'query', 'detailId'])) !== ZERO\n    }, ({dispatch, location}) => {\n        const id = _.toInteger(_.get(location, ['query', 'detailId']))\n        dispatch(statDebtorsItemFetchAction(id))\n    }),\n\n    withHandlers({\n        handleSubmitFilterDialog: props => () => {\n            const {filter, filterForm} = props\n            const product = _.get(filterForm, ['values', 'product', 'value']) || null\n            const productType = _.get(filterForm, ['values', 'productType', 'value']) || null\n            const fromDate = _.get(filterForm, ['values', 'date', 'fromDate']) || null\n            const toDate = _.get(filterForm, ['values', 'date', 'toDate']) || null\n\n            filter.filterBy({\n                [STAT_DEBTORS_FILTER_KEY.PRODUCT]: product,\n                [STAT_DEBTORS_FILTER_KEY.PRODUCT_TYPE]: productType,\n                [STAT_DEBTORS_FILTER_KEY.FROM_DATE]: fromDate && fromDate.format('YYYY-MM-DD'),\n                [STAT_DEBTORS_FILTER_KEY.TO_DATE]: toDate && toDate.format('YYYY-MM-DD')\n\n            })\n        },\n\n        handleOpenStatDebtorsDialog: props => (id) => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({'orderId': id})})\n        },\n\n        handleCloseStatDebtorsDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({'orderId': ZERO})})\n        },\n        handleCloseDetail: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({'detailId': ZERO})})\n        },\n        handleOpenDetail: props => (id) => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({'detailId': id})})\n        },\n        handleGetDocument: props => () => {\n            const {dispatch, filter} = props\n            return dispatch(getDocumentAction(filter))\n        }\n    })\n)\n\nconst StatDebtorsList = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        detailOrder,\n        detailOrderLoading,\n        filter,\n        layout,\n        statData,\n        params\n    } = props\n\n    const detailId = _.toInteger(_.get(params, 'statDebtorsId'))\n    const openDetailId = _.toInteger(_.get(location, ['query', 'detailId']))\n    const openStatDebtorsDialog = _.toInteger(_.get(location, ['query', 'orderId']))\n\n    const statDebtorsDialog = {\n        openStatDebtorsDialog,\n        handleCloseStatDebtorsDialog: props.handleCloseStatDebtorsDialog,\n        handleOpenStatDebtorsDialog: props.handleOpenStatDebtorsDialog\n    }\n\n    const listData = {\n        statData: statData,\n        data: _.get(list, 'results'),\n        listLoading\n    }\n\n    const detailData = {\n        openDetailId: openDetailId,\n        id: detailId,\n        data: _.get(detail, 'results'),\n        detailLoading,\n        detailOrder,\n        detailOrderLoading\n    }\n    const handleOpenCloseDetail = {\n        handleOpenDetail: props.handleOpenDetail,\n        handleCloseDetail: props.handleCloseDetail\n    }\n    const getDocument = {\n        handleGetDocument: props.handleGetDocument\n    }\n    return (\n        <Layout {...layout}>\n            <StatDebtorsGridList\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                statDebtorsDialog={statDebtorsDialog}\n                handleOpenCloseDetail={handleOpenCloseDetail}\n                getDocument={getDocument}\n            />\n        </Layout>\n    )\n})\n\nexport default StatDebtorsList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Statistics/StatDebtors.js","import React from 'react'\nimport _ from 'lodash'\nimport moment from 'moment'\nimport {connect} from 'react-redux'\nimport Layout from '../../components/Layout'\nimport {compose, withHandlers, withPropsOnChange} from 'recompose'\nimport filterHelper from '../../helpers/filter'\n\nimport {StatFinanceGridList} from '../../components/Statistics'\nimport {STAT_FINANCE_FILTER_KEY} from '../../components/Statistics/StatFinanceGridList'\n\nimport {\n    statFinanceInDataFetchAction,\n    statFinanceOutDataFetchAction,\n    statFinanceListFetchAction\n} from '../../actions/statFianace'\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const graphIn = _.get(state, ['statFinance', 'dataIn', 'data'])\n        const graphOut = _.get(state, ['statFinance', 'dataOut', 'data'])\n        const graphInLoading = _.get(state, ['statFinance', 'dataIn', 'loading'])\n        const graphOutLoading = _.get(state, ['statFinance', 'dataOut', 'loading'])\n        const list = _.get(state, ['statFinance', 'list', 'data'])\n        const listLoading = _.get(state, ['statFinance', 'list', 'loading'])\n        const filterForm = _.get(state, ['form', 'StatFinanceFilterForm'])\n        const filter = filterHelper(list, pathname, query)\n        return {\n            list,\n            listLoading,\n            graphIn,\n            graphOut,\n            graphInLoading,\n            graphOutLoading,\n            filter,\n            filterForm\n        }\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(statFinanceListFetchAction(filter))\n        dispatch(statFinanceInDataFetchAction())\n        dispatch(statFinanceOutDataFetchAction())\n    }),\n\n    withHandlers({\n        handleSubmitFilterDialog: props => () => {\n            const {filter, filterForm} = props\n            const product = _.get(filterForm, ['values', 'product', 'value']) || null\n            const productType = _.get(filterForm, ['values', 'productType', 'value']) || null\n            const fromDate = _.get(filterForm, ['values', 'date', 'fromDate']) || null\n            const toDate = _.get(filterForm, ['values', 'date', 'toDate']) || null\n\n            filter.filterBy({\n                [STAT_FINANCE_FILTER_KEY.PRODUCT]: product,\n                [STAT_FINANCE_FILTER_KEY.PRODUCT_TYPE]: productType,\n                [STAT_FINANCE_FILTER_KEY.FROM_DATE]: fromDate && fromDate.format('YYYY-MM-DD'),\n                [STAT_FINANCE_FILTER_KEY.TO_DATE]: toDate && toDate.format('YYYY-MM-DD')\n\n            })\n        }\n    })\n)\n\nconst StatFinanceList = enhance((props) => {\n    const {\n        list,\n        listLoading,\n        filter,\n        layout,\n        graphIn,\n        graphOut,\n        graphInLoading,\n        graphOutLoading,\n        location\n    } = props\n    const firstDayOfMonth = _.get(location, ['query', 'fromDate']) || moment().format('YYYY-MM-01')\n    const lastDay = moment().daysInMonth()\n    const lastDayOfMonth = _.get(location, ['query', 'toDate']) || moment().format('YYYY-MM-' + lastDay)\n\n    const graphData = {\n        dataIn: graphIn,\n        dataOut: graphOut,\n        graphOutLoading,\n        graphInLoading\n    }\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n    const filterForm = {\n        initialValues: {\n            date: {\n                fromDate: moment(firstDayOfMonth),\n                toDate: moment(lastDayOfMonth)\n            }\n        }\n    }\n\n    return (\n        <Layout {...layout}>\n            <StatFinanceGridList\n                filter={filter}\n                listData={listData}\n                graphData={graphData}\n                initialValues={filterForm.initialValues}\n                filterForm={filterForm}\n\n            />\n        </Layout>\n    )\n})\n\nexport default StatFinanceList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Statistics/StatFinance.js","import React from 'react'\nimport moment from 'moment'\nimport _ from 'lodash'\nimport {connect} from 'react-redux'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\n\nimport {\n    StatIncomeGridList,\n    STAT_INCOME_DIALOG_OPEN\n} from '../../components/Statistics'\nimport {STAT_INCOME_FILTER_KEY} from '../../components/Statistics/StatIncomeGridList'\nimport {\n    statIncomeListFetchAction,\n    statIncomeDataFetchAction\n} from '../../actions/statIncome'\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detailLoading = _.get(state, ['statIncome', 'item', 'loading'])\n        const grafData = _.get(state, ['statIncome', 'data', 'data'])\n        const list = _.get(state, ['statIncome', 'list', 'data'])\n        const listLoading = _.get(state, ['statIncome', 'list', 'loading'])\n        const filterForm = _.get(state, ['form', 'StatIncomeFilterForm'])\n        const filter = filterHelper(list, pathname, query)\n        return {\n            list,\n            listLoading,\n            grafData,\n            detailLoading,\n            filter,\n            query,\n            filterForm\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(statIncomeListFetchAction(filter))\n        dispatch(statIncomeDataFetchAction())\n    }),\n\n    withHandlers({\n        handleSubmitFilterDialog: props => (event) => {\n            event.preventDefault()\n            const {filter, filterForm} = props\n\n            const search = _.get(filterForm, ['values', 'search']) || null\n            const fromDate = _.get(filterForm, ['values', 'date', 'fromDate']) || null\n            const toDate = _.get(filterForm, ['values', 'date', 'toDate']) || null\n\n            filter.filterBy({\n                [STAT_INCOME_FILTER_KEY.SEARCH]: search,\n                [STAT_INCOME_FILTER_KEY.FROM_DATE]: fromDate && fromDate.format('YYYY-MM-DD'),\n                [STAT_INCOME_FILTER_KEY.TO_DATE]: toDate && toDate.format('YYYY-MM-DD')\n\n            })\n        }\n    })\n)\n\nconst StatIncomeList = enhance((props) => {\n    const {\n        location,\n        list,\n        grafData,\n        listLoading,\n        filter,\n        layout\n    } = props\n\n    const openStatIncomeDialog = toBoolean(_.get(location, ['query', STAT_INCOME_DIALOG_OPEN]))\n    const firstDayOfMonth = _.get(location, ['query', 'fromDate']) || moment().format('YYYY-MM-01')\n    const lastDay = moment().daysInMonth()\n    const lastDayOfMonth = _.get(location, ['query', 'toDate']) || moment().format('YYYY-MM-' + lastDay)\n\n    const statIncomeDialog = {\n        openStatIncomeDialog,\n        handleCloseStatIncomeDialog: props.handleCloseStatIncomeDialog,\n        handleOpenStatIncomeDialog: props.handleOpenStatIncomeDialog\n    }\n    const listData = {\n        grafData: grafData,\n        data: _.get(list, 'results'),\n        listLoading\n    }\n    const filterForm = {\n        initialValues: {\n            date: {\n                fromDate: moment(firstDayOfMonth),\n                toDate: moment(lastDayOfMonth)\n            }\n        }\n    }\n\n    return (\n        <Layout {...layout}>\n            <StatIncomeGridList\n                filter={filter}\n                handleSubmitFilterDialog={props.handleSubmitFilterDialog}\n                listData={listData}\n                statIncomeDialog={statIncomeDialog}\n                initialValues={filterForm.initialValues}\n                filterForm={filterForm}\n            />\n        </Layout>\n    )\n})\n\nexport default StatIncomeList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Statistics/StatIncome.js","import _ from 'lodash'\nimport moment from 'moment'\nimport sprintf from 'sprintf'\nimport React from 'react'\nimport {connect} from 'react-redux'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withHandlers, withPropsOnChange} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport * as API from '../../constants/api'\nimport * as serializers from '../../serializers/Statistics/statProductSerializer'\nimport getDocuments from '../../helpers/getDocument'\nimport {\n    statMarketListFetchAction,\n    statMarketDataFetchAction\n} from '../../actions/statMarket'\n\nimport {StatMarketGridList, STAT_MARKET_DIALOG_OPEN} from '../../components/Statistics'\nimport {STAT_MARKET_FILTER_KEY} from '../../components/Statistics/StatMarketGridList'\n\nconst ZERO = 0\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const graphList = _.get(state, ['statMarket', 'data', 'data'])\n        const graphLoading = _.get(state, ['statMarket', 'data', 'loading'])\n        const list = _.get(state, ['statMarket', 'list', 'data'])\n        const listLoading = _.get(state, ['statMarket', 'list', 'loading'])\n        const filterForm = _.get(state, ['form', 'StatMarketFilterForm'])\n        const filter = filterHelper(list, pathname, query)\n        return {\n            list,\n            listLoading,\n            filter,\n            filterForm,\n            graphList,\n            graphLoading\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return (props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest())\n    }, ({dispatch, filter}) => {\n        dispatch(statMarketListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const statMarketId = _.get(nextProps, ['params', 'statMarketId']) || ZERO\n        return statMarketId > ZERO && (_.get(props, ['params', 'statMarketId']) !== statMarketId)\n    }, ({dispatch, params}) => {\n        const statMarketId = _.toInteger(_.get(params, 'statMarketId'))\n        if (statMarketId > ZERO) {\n            dispatch(statMarketDataFetchAction(statMarketId))\n        }\n    }),\n    withHandlers({\n        handleSubmitFilterDialog: props => (event) => {\n            event.preventDefault()\n            const {filter, filterForm} = props\n            const search = _.get(filterForm, ['values', 'search']) || null\n            const fromDate = _.get(filterForm, ['values', 'date', 'fromDate']) || null\n            const toDate = _.get(filterForm, ['values', 'date', 'toDate']) || null\n            filter.filterBy({\n                [STAT_MARKET_FILTER_KEY.SEARCH]: search,\n                [STAT_MARKET_FILTER_KEY.FROM_DATE]: fromDate && fromDate.format('YYYY-MM-DD'),\n                [STAT_MARKET_FILTER_KEY.TO_DATE]: toDate && toDate.format('YYYY-MM-DD')\n\n            })\n        },\n\n        handleOpenStatMarketDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.STATISTICS_MARKET_ITEM_PATH, id),\n                query: filter.getParams({[STAT_MARKET_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseStatMarketDialog: props => () => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: ROUTER.STATISTICS_MARKET_URL,\n                query: filter.getParams({[STAT_MARKET_DIALOG_OPEN]: false})\n            })\n        },\n        handleOpenDetail: props => (id) => {\n            const {filter} = props\n            hashHistory.push({pathname: sprintf(ROUTER.STATISTICS_MARKET_ITEM_PATH, id), query: filter.getParams()})\n        },\n        handleCloseDetail: props => () => {\n            const {filter} = props\n            hashHistory.push({pathname: ROUTER.STATISTICS_MARKET_URL, query: filter.getParams()})\n        },\n        handleGetDocument: props => () => {\n            const {filter} = props\n            const params = serializers.listFilterSerializer(filter.getParams())\n            getDocuments(API.STAT_MARKET_GET_DOCUMENT, params)\n        }\n    })\n)\n\nconst StatMarketList = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        filter,\n        filterItem,\n        filterForm,\n        layout,\n        params,\n        graphList,\n        graphLoading\n    } = props\n\n    const detailId = _.toInteger(_.get(params, 'statMarketId'))\n    const openStatMarketDialog = toBoolean(_.get(location, ['query', STAT_MARKET_DIALOG_OPEN]))\n    const firstDayOfMonth = _.get(location, ['query', 'fromDate']) || moment().format('YYYY-MM-01')\n    const lastDay = moment().daysInMonth()\n    const lastDayOfMonth = _.get(location, ['query', 'toDate']) || moment().format('YYYY-MM-' + lastDay)\n\n    const statMarketDialog = {\n        openStatMarketDialog,\n        handleCloseStatMarketDialog: props.handleCloseStatMarketDialog,\n        handleOpenStatMarketDialog: props.handleOpenStatMarketDialog\n    }\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n    const marketDetail = _.find(_.get(list, 'results'), (item) => {\n        return _.toInteger(_.get(item, 'id')) === _.toInteger(detailId)\n    })\n    const filterDateRange = {\n        'fromDate': _.get(filterForm, ['values', 'date', 'fromDate']) || null,\n        'toDate': _.get(filterForm, ['values', 'date', 'toDate']) || null\n    }\n    const detailData = {\n        filter: filterItem,\n        id: detailId,\n        marketDetail,\n        graphList,\n        graphLoading,\n        handleCloseDetail: props.handleCloseDetail,\n        handleOpenDetail: props.handleOpenDetail,\n        filterDateRange\n\n    }\n    const getDocument = {\n        handleGetDocument: props.handleGetDocument\n    }\n    const initialValues = {\n        date: {\n            fromDate: moment(firstDayOfMonth),\n            toDate: moment(lastDayOfMonth)\n        }\n    }\n    return (\n        <Layout {...layout}>\n            <StatMarketGridList\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                statMarketDialog={statMarketDialog}\n                handleSubmitFilterDialog={props.handleSubmitFilterDialog}\n                getDocument={getDocument}\n                filterItem={filterItem}\n                initialValues={initialValues}\n                filterForm={filterForm}\n            />\n        </Layout>\n    )\n})\n\nexport default StatMarketList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Statistics/StatMarket.js","import React from 'react'\nimport _ from 'lodash'\nimport moment from 'moment'\nimport {connect} from 'react-redux'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\n\nimport {\n    StatOutcomeGridList,\n    STAT_OUTCOME_DIALOG_OPEN\n} from '../../components/Statistics'\nimport {STAT_OUTCOME_FILTER_KEY} from '../../components/Statistics/StatOutcomeGridList'\nimport {\n    statOutcomeListFetchAction,\n    statOutcomeDataFetchAction,\n    getDocumentAction\n} from '../../actions/statOutcome'\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detailLoading = _.get(state, ['statOutcome', 'item', 'loading'])\n        const grafData = _.get(state, ['statOutcome', 'data', 'data'])\n        const list = _.get(state, ['statOutcome', 'list', 'data'])\n        const listLoading = _.get(state, ['statOutcome', 'list', 'loading'])\n        const filterForm = _.get(state, ['form', 'StatOutcomeFilterForm'])\n        const filter = filterHelper(list, pathname, query)\n        return {\n            list,\n            listLoading,\n            grafData,\n            detailLoading,\n            filter,\n            query,\n            filterForm\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(statOutcomeListFetchAction(filter))\n        dispatch(statOutcomeDataFetchAction())\n    }),\n\n    withHandlers({\n        handleSubmitFilterDialog: props => (event) => {\n            event.preventDefault()\n            const {filter, filterForm} = props\n\n            const search = _.get(filterForm, ['values', 'search']) || null\n            const fromDate = _.get(filterForm, ['values', 'date', 'fromDate']) || null\n            const toDate = _.get(filterForm, ['values', 'date', 'toDate']) || null\n\n            filter.filterBy({\n                [STAT_OUTCOME_FILTER_KEY.SEARCH]: search,\n                [STAT_OUTCOME_FILTER_KEY.FROM_DATE]: fromDate && fromDate.format('YYYY-MM-DD'),\n                [STAT_OUTCOME_FILTER_KEY.TO_DATE]: toDate && toDate.format('YYYY-MM-DD')\n\n            })\n        },\n        handleGetDocument: props => () => {\n            const {dispatch, filter} = props\n            return dispatch(getDocumentAction(filter))\n        }\n    })\n)\n\nconst StatOutcomeList = enhance((props) => {\n    const {\n        location,\n        list,\n        grafData,\n        listLoading,\n        filter,\n        layout\n    } = props\n\n    const openStatOutcomeDialog = toBoolean(_.get(location, ['query', STAT_OUTCOME_DIALOG_OPEN]))\n    const firstDayOfMonth = _.get(location, ['query', 'fromDate']) || moment().format('YYYY-MM-01')\n    const lastDay = moment().daysInMonth()\n    const lastDayOfMonth = _.get(location, ['query', 'toDate']) || moment().format('YYYY-MM-' + lastDay)\n\n    const statOutcomeDialog = {\n        openStatOutcomeDialog,\n        handleCloseStatOutcomeDialog: props.handleCloseStatOutcomeDialog,\n        handleOpenStatOutcomeDialog: props.handleOpenStatOutcomeDialog\n    }\n    const listData = {\n        grafData: grafData,\n        data: _.get(list, 'results'),\n        listLoading\n    }\n    const getDocument = {\n        handleGetDocument: props.handleGetDocument\n    }\n    const filterForm = {\n        initialValues: {\n            date: {\n                fromDate: moment(firstDayOfMonth),\n                toDate: moment(lastDayOfMonth)\n            }\n        }\n    }\n\n    return (\n        <Layout {...layout}>\n            <StatOutcomeGridList\n                filter={filter}\n                handleSubmitFilterDialog={props.handleSubmitFilterDialog}\n                listData={listData}\n                statOutcomeDialog={statOutcomeDialog}\n                getDocument={getDocument}\n                initialValues={filterForm.initialValues}\n                filterForm={filterForm}\n            />\n        </Layout>\n    )\n})\n\nexport default StatOutcomeList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Statistics/StatOutcome.js","import React from 'react'\nimport _ from 'lodash'\nimport moment from 'moment'\nimport {connect} from 'react-redux'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport filterHelper from '../../helpers/filter'\nimport {StatOutcomeCategoryGridList} from '../../components/Statistics'\nimport {STAT_OUTCOME_CATEGORY_FILTER_KEY} from '../../components/Statistics/StatOutcomeCategoryGridList'\nimport {\n    statOutcomeCategoryListFetchAction,\n    statOutcomeCategoryItemFetchAction,\n    getDocumentAction\n} from '../../actions/statOutcomeCategory'\n\nconst ZERO = 0\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['statOutcomeCategory', 'item', 'data'])\n        const detailLoading = _.get(state, ['statOutcomeCategory', 'item', 'loading'])\n        const list = _.get(state, ['statOutcomeCategory', 'list', 'data'])\n        const listLoading = _.get(state, ['statOutcomeCategory', 'list', 'loading'])\n        const filterForm = _.get(state, ['form', 'StatOutcomeCategoryFilterForm'])\n        const filter = filterHelper(list, pathname, query)\n        const filterItem = filterHelper(detail, pathname, query)\n        return {\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            filter,\n            query,\n            filterForm,\n            filterItem\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest() &&\n            (!_.get(props, ['params', 'statOutcomeCategoryId'])) &&\n            (!_.get(nextProps, ['params', 'statOutcomeCategoryId']))\n    }, ({dispatch, filter}) => {\n        dispatch(statOutcomeCategoryListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const statOutcomeCategoryId = _.get(nextProps, ['params', 'statOutcomeCategoryId']) || ZERO\n        return statOutcomeCategoryId > ZERO && _.get(props, ['params', 'statOutcomeCategoryId']) !== statOutcomeCategoryId\n    }, ({dispatch, params, filter, filterItem}) => {\n        const statOutcomeCategoryId = _.toInteger(_.get(params, 'statOutcomeCategoryId'))\n        if (statOutcomeCategoryId > ZERO) {\n            dispatch(statOutcomeCategoryItemFetchAction(filter, filterItem, statOutcomeCategoryId))\n        }\n    }),\n\n    withHandlers({\n        handleSubmitFilterDialog: props => (event) => {\n            event.preventDefault()\n            const {filter, filterForm} = props\n\n            const fromDate = _.get(filterForm, ['values', 'date', 'fromDate']) || null\n            const toDate = _.get(filterForm, ['values', 'date', 'toDate']) || null\n            filter.filterBy({\n                [STAT_OUTCOME_CATEGORY_FILTER_KEY.FROM_DATE]: fromDate && fromDate.format('YYYY-MM-DD'),\n                [STAT_OUTCOME_CATEGORY_FILTER_KEY.TO_DATE]: toDate && toDate.format('YYYY-MM-DD')\n\n            })\n        },\n        handleGetDocument: props => () => {\n            const {dispatch, filter} = props\n            return dispatch(getDocumentAction(filter))\n        }\n    })\n)\n\nconst StatOutcomeCategoryList = enhance((props) => {\n    const {\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        filter,\n        layout,\n        filterItem,\n        filterForm,\n        location,\n        params\n    } = props\n\n    const detailId = _.toInteger(_.get(params, 'statOutcomeCategoryId'))\n    const firstDayOfMonth = _.get(location, ['query', 'fromDate']) || moment().format('YYYY-MM-01')\n    const lastDay = moment().daysInMonth()\n    const lastDayOfMonth = _.get(location, ['query', 'toDate']) || moment().format('YYYY-MM-' + lastDay)\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n    const outcomeCategoryDetail = _.filter(_.get(list, 'results'), (item) => {\n        return _.get(item, 'id') === detailId\n    })\n    const filterDateRange = {\n        'fromDate': _.get(filterForm, ['values', 'date', 'fromDate']) || null,\n        'toDate': _.get(filterForm, ['values', 'date', 'toDate']) || null\n    }\n    const detailData = {\n        filter: filterItem,\n        id: detailId,\n        data: detail,\n        outcomeCategoryDetail,\n        detailLoading,\n        handleCloseDetail: props.handleCloseDetail,\n        filterDateRange\n\n    }\n    const getDocument = {\n        handleGetDocument: props.handleGetDocument\n    }\n    const initialValues = {\n        date: {\n            fromDate: moment(firstDayOfMonth),\n            toDate: moment(lastDayOfMonth)\n        }\n    }\n\n    return (\n        <Layout {...layout}>\n            <StatOutcomeCategoryGridList\n                filter={filter}\n                handleSubmitFilterDialog={props.handleSubmitFilterDialog}\n                listData={listData}\n                detailData={detailData}\n                getDocument={getDocument}\n                initialValues={initialValues}\n                filterForm={filterForm}\n            />\n        </Layout>\n    )\n})\n\nexport default StatOutcomeCategoryList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Statistics/StatOutcomeCategory.js","import React from 'react'\nimport _ from 'lodash'\nimport moment from 'moment'\nimport {connect} from 'react-redux'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport * as API from '../../constants/api'\nimport * as serializers from '../../serializers/Statistics/statProductSerializer'\nimport getDocuments from '../../helpers/getDocument'\n\nimport {StatProductGridList} from '../../components/Statistics'\nimport {STAT_PRODUCT_FILTER_KEY} from '../../components/Statistics/StatProductGridList'\nimport {\n    statProductListFetchAction\n} from '../../actions/statProduct'\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['statProduct', 'item', 'data'])\n        const detailLoading = _.get(state, ['statProduct', 'item', 'loading'])\n        const list = _.get(state, ['statProduct', 'list', 'data'])\n        const listLoading = _.get(state, ['statProduct', 'list', 'loading'])\n        const filterForm = _.get(state, ['form', 'StatProductFilterForm'])\n        const filter = filterHelper(list, pathname, query)\n        return {\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            filter,\n            filterForm\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(statProductListFetchAction(filter))\n    }),\n\n    withHandlers({\n        handleSubmitFilterDialog: props => (event) => {\n            event.preventDefault()\n            const {filter, filterForm} = props\n\n            const search = _.get(filterForm, ['values', 'search']) || null\n            const product = _.get(filterForm, ['values', 'product', 'value']) || null\n            const productType = _.get(filterForm, ['values', 'productType', 'value']) || null\n            const fromDate = _.get(filterForm, ['values', 'date', 'fromDate']) || null\n            const toDate = _.get(filterForm, ['values', 'date', 'toDate']) || null\n\n            filter.filterBy({\n                [STAT_PRODUCT_FILTER_KEY.SEARCH]: search,\n                [STAT_PRODUCT_FILTER_KEY.PRODUCT]: product,\n                [STAT_PRODUCT_FILTER_KEY.PRODUCT_TYPE]: productType,\n                [STAT_PRODUCT_FILTER_KEY.FROM_DATE]: fromDate && fromDate.format('YYYY-MM-DD'),\n                [STAT_PRODUCT_FILTER_KEY.TO_DATE]: toDate && toDate.format('YYYY-MM-DD')\n\n            })\n        },\n        handleCloseDetail: props => () => {\n            const {filter} = props\n            hashHistory.push({pathname: ROUTER.STATISTICS_LIST_URL, query: filter.getParams()})\n        },\n        handleGetDocument: props => () => {\n            const {filter} = props\n            const params = serializers.listFilterSerializer(filter.getParams())\n            getDocuments(API.STAT_PRODUCT_GET_DOCUMENT, params)\n        }\n    })\n)\n\nconst StatProductList = enhance((props) => {\n    const {\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        filter,\n        layout,\n        location,\n        params\n    } = props\n    const detailId = _.toInteger(_.get(params, 'statProductId'))\n    const firstDayOfMonth = _.get(location, ['query', 'fromDate']) || moment().format('YYYY-MM-01')\n    const lastDay = moment().daysInMonth()\n    const lastDayOfMonth = _.get(location, ['query', 'toDate']) || moment().format('YYYY-MM-' + lastDay)\n\n    const filterForm = {\n        initialValues: {\n            date: {\n                fromDate: moment(firstDayOfMonth),\n                toDate: moment(lastDayOfMonth)\n            }\n        }\n    }\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n\n    const detailData = {\n        id: detailId,\n        data: detail,\n        detailLoading,\n        handleCloseDetail: props.handleCloseDetail\n    }\n    const getDocument = {\n        handleGetDocument: props.handleGetDocument\n    }\n\n    return (\n        <Layout {...layout}>\n            <StatProductGridList\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                handleSubmitFilterDialog={props.handleSubmitFilterDialog}\n                getDocument={getDocument}\n                initialValues={filterForm.initialValues}\n                filterForm={filterForm}\n            />\n        </Layout>\n    )\n})\n\nexport default StatProductList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Statistics/StatProduct.js","import React from 'react'\nimport _ from 'lodash'\nimport sprintf from 'sprintf'\nimport {connect} from 'react-redux'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\n\nimport {\n    StatRemainderGridList,\n    STAT_REMAINDER_DIALOG_OPEN\n} from '../../components/Statistics'\n\nimport {STAT_REMAINDER_FILTER_KEY} from '../../components/Statistics/StatRemainderGridLIst'\nimport {\n    statRemainderListFetchAction,\n    statRemainderItemFetchAction\n} from '../../actions/statRemainder'\n\nconst ZERO = 0\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['statRemainder', 'item', 'data'])\n        const detailLoading = _.get(state, ['statRemainder', 'item', 'loading'])\n        const list = _.get(state, ['statRemainder', 'list', 'data'])\n        const listLoading = _.get(state, ['statRemainder', 'list', 'loading'])\n        const filterForm = _.get(state, ['form', 'StatRemainderFilterForm'])\n        const filter = filterHelper(list, pathname, query)\n        const filterItem = filterHelper(detail, pathname, query, {'page': 'dPage', 'pageSize': 'dPageSize'})\n        return {\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            filter,\n            query,\n            filterForm,\n            filterItem\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest() &&\n            (!_.get(props, ['params', 'statRemainderId'])) &&\n            (!_.get(nextProps, ['params', 'statRemainderId']))\n    }, ({dispatch, filter}) => {\n        dispatch(statRemainderListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const statRemainderId = _.get(nextProps, ['params', 'statRemainderId']) || ZERO\n        return statRemainderId > ZERO && (_.get(props, ['params', 'statRemainderId']) !== statRemainderId ||\n            props.filterItem.filterRequest() !== nextProps.filterItem.filterRequest())\n    }, ({dispatch, params, filterItem}) => {\n        const statRemainderId = _.toInteger(_.get(params, 'statRemainderId'))\n        if (statRemainderId > ZERO) {\n            dispatch(statRemainderItemFetchAction(filterItem, statRemainderId))\n        }\n    }),\n\n    withHandlers({\n        handleOpenStatRemainderDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({pathname: sprintf(ROUTER.STATISTICS_REMAINDER_ITEM_PATH, id), query: filter.getParams({[STAT_REMAINDER_DIALOG_OPEN]: true})})\n        },\n\n        handleCloseStatRemainderDialog: props => () => {\n            const {filter} = props\n            hashHistory.push({pathname: ROUTER.STATISTICS_REMAINDER_URL, query: filter.getParams({[STAT_REMAINDER_DIALOG_OPEN]: false})})\n        },\n        handleCloseDetail: props => () => {\n            const {filter} = props\n            hashHistory.push({pathname: ROUTER.STATISTICS_LIST_URL, query: filter.getParams()})\n        },\n        handleSubmitFilterDialog: props => () => {\n            const {filter, filterForm} = props\n            const product = _.get(filterForm, ['values', 'product', 'value']) || null\n            const type = _.get(filterForm, ['values', 'type', 'value']) || null\n            const stock = _.get(filterForm, ['values', 'stock', 'value']) || null\n\n            filter.filterBy({\n                [STAT_REMAINDER_FILTER_KEY.PRODUCT]: product,\n                [STAT_REMAINDER_FILTER_KEY.TYPE]: type,\n                [STAT_REMAINDER_FILTER_KEY.STOCK]: stock\n\n            })\n        }\n    })\n)\n\nconst StatRemainderList = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        filter,\n        layout,\n        filterItem,\n        params\n    } = props\n    const openStatRemainderDialog = toBoolean(_.get(location, ['query', STAT_REMAINDER_DIALOG_OPEN]))\n    const detailId = _.toInteger(_.get(params, 'statRemainderId'))\n    const statRemainderDialog = {\n        openStatRemainderDialog,\n        handleCloseStatRemainderDialog: props.handleCloseStatRemainderDialog,\n        handleOpenStatRemainderDialog: props.handleOpenStatRemainderDialog\n    }\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n    const rowDetail = _.filter(_.get(list, 'results'), (item) => {\n        return _.get(item, 'id') === detailId\n    })\n    const detailData = {\n        id: detailId,\n        data: detail,\n        rowDetail,\n        detailLoading,\n        handleCloseDetail: props.handleCloseDetail\n\n    }\n    const getDocument = {\n        handleGetDocument: props.handleGetDocument\n    }\n\n    return (\n        <Layout {...layout}>\n            <StatRemainderGridList\n                filter={filter}\n                onSubmit={props.handleSubmitFilterDialog}\n                listData={listData}\n                detailData={detailData}\n                statRemainderDialog={statRemainderDialog}\n                getDocument={getDocument}\n                filterItem={filterItem}\n            />\n        </Layout>\n    )\n})\n\nexport default StatRemainderList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Statistics/StatRemainder.js","import React from 'react'\nimport _ from 'lodash'\nimport moment from 'moment'\nimport {connect} from 'react-redux'\nimport sprintf from 'sprintf'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport * as ROUTER from '../../constants/routes'\nimport {compose, withHandlers, withPropsOnChange} from 'recompose'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\n\nimport {StatSalesGridList, STAT_SALES_DIALOG_OPEN} from '../../components/Statistics'\nimport {STAT_SALES_FILTER_KEY} from '../../components/Statistics/StatSalesGridList'\nimport {\n    orderListFetchAction,\n    orderItemFetchAction\n} from '../../actions/order'\n\nimport {\n    statSalesDataFetchAction\n}\nfrom '../../actions/statSales'\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['order', 'item', 'data'])\n        const graphList = _.get(state, ['statSales', 'data', 'data'])\n        const graphLoading = _.get(state, ['statSales', 'data', 'loading'])\n        const detailLoading = _.get(state, ['order', 'item', 'loading'])\n        const list = _.get(state, ['order', 'list', 'data'])\n        const listLoading = _.get(state, ['order', 'list', 'loading'])\n        const filterForm = _.get(state, ['form', 'StatSalesFilterForm'])\n        const filter = filterHelper(list, pathname, query)\n        return {\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            filter,\n            filterForm,\n            graphList,\n            graphLoading\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(orderListFetchAction(filter))\n        dispatch(statSalesDataFetchAction(filter))\n    }),\n    withPropsOnChange((props, nextProps) => {\n        const saleId = _.get(nextProps, ['params', 'statSaleId'])\n        return saleId && _.get(props, ['params', 'statSaleId']) !== saleId\n    }, ({dispatch, params}) => {\n        const saleId = _.toInteger(_.get(params, 'statSaleId'))\n        saleId && dispatch(orderItemFetchAction(saleId))\n    }),\n\n    withHandlers({\n        handleOpenStatSaleDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({pathname: sprintf(ROUTER.STATISTICS_SALES_ITEM_PATH, id), query: filter.getParams({[STAT_SALES_DIALOG_OPEN]: true})})\n        },\n\n        handleCloseStatSaleDialog: props => () => {\n            const {filter} = props\n            hashHistory.push({pathname: ROUTER.STATISTICS_SALES_URL, query: filter.getParams({[STAT_SALES_DIALOG_OPEN]: false})})\n        },\n        handleSubmitFilterDialog: props => () => {\n            const {filter, filterForm} = props\n            const fromDate = _.get(filterForm, ['values', 'date', 'fromDate']) || null\n            const toDate = _.get(filterForm, ['values', 'date', 'toDate']) || null\n\n            filter.filterBy({\n                [STAT_SALES_FILTER_KEY.FROM_DATE]: fromDate && fromDate.format('YYYY-MM-DD'),\n                [STAT_SALES_FILTER_KEY.TO_DATE]: toDate && toDate.format('YYYY-MM-DD')\n\n            })\n        }\n    })\n)\n\nconst StatSalesList = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        filter,\n        layout,\n        returnData,\n        params,\n        graphList,\n        graphLoading\n    } = props\n\n    const detailId = _.toInteger(_.get(params, 'statSaleId'))\n    const openStatSaleDialog = toBoolean(_.get(location, ['query', STAT_SALES_DIALOG_OPEN]))\n    const firstDayOfMonth = _.get(location, ['query', 'fromDate']) || moment().format('YYYY-MM-01')\n    const lastDay = moment().daysInMonth()\n    const lastDayOfMonth = _.get(location, ['query', 'toDate']) || moment().format('YYYY-MM-' + lastDay)\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n    const statSaleDialog = {\n        openStatSaleDialog,\n        handleCloseStatSaleDialog: props.handleCloseStatSaleDialog,\n        handleOpenStatSaleDialog: props.handleOpenStatSaleDialog\n    }\n    const detailData = {\n        id: detailId,\n        data: detail,\n        return: returnData,\n        detailLoading,\n        handleCloseDetail: props.handleCloseDetail\n    }\n\n    const filterForm = {\n        initialValues: {\n            date: {\n                fromDate: moment(firstDayOfMonth),\n                toDate: moment(lastDayOfMonth)\n            }\n        }\n    }\n\n    const graphData = {\n        data: graphList,\n        graphLoading\n    }\n    const order = false\n\n    return (\n        <Layout {...layout}>\n            <StatSalesGridList\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                statSaleDialog={statSaleDialog}\n                type={order}\n                initialValues={filterForm.initialValues}\n                filterForm={filterForm}\n                onSubmit={props.handleSubmitFilterDialog}\n                graphData={graphData}\n            />\n        </Layout>\n    )\n})\n\nexport default StatSalesList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Statistics/StatSales.js","import StatAgentList from './StatAgent'\nimport StatProductList from './StatProduct'\nimport StatMarketList from './StatMarket'\nimport StatSalesList from './StatSales'\nimport StatFinanceList from './StatFinance'\nimport StatIncomeList from './StatIncome'\nimport StatOutcomeList from './StatOutcome'\nimport StatDebtorsList from './StatDebtors'\nimport StatOutcomeCategoryList from './StatOutcomeCategory'\nimport StatRemainderList from './StatRemainder'\nimport StatCashboxList from './StatCashbox'\n\nexport {\n    StatAgentList,\n    StatProductList,\n    StatMarketList,\n    StatSalesList,\n    StatFinanceList,\n    StatIncomeList,\n    StatOutcomeList,\n    StatDebtorsList,\n    StatOutcomeCategoryList,\n    StatRemainderList,\n    StatCashboxList\n}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Statistics/index.js","import React from 'react'\nimport _ from 'lodash'\nimport sprintf from 'sprintf'\nimport {connect} from 'react-redux'\nimport {reset} from 'redux-form'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport {\n    STOCK_CREATE_DIALOG_OPEN,\n    STOCK_UPDATE_DIALOG_OPEN,\n    STOCK_DELETE_DIALOG_OPEN,\n    StockGridList\n} from '../../components/Stock'\nimport {\n    stockCreateAction,\n    stockUpdateAction,\n    stockListFetchAction,\n    stockDeleteAction,\n    stockItemFetchAction\n} from '../../actions/stock'\nimport {openSnackbarAction} from '../../actions/snackbar'\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['stock', 'item', 'data'])\n        const detailLoading = _.get(state, ['stock', 'item', 'loading'])\n        const createLoading = _.get(state, ['stock', 'create', 'loading'])\n        const updateLoading = _.get(state, ['stock', 'update', 'loading'])\n        const list = _.get(state, ['stock', 'list', 'data'])\n        const listLoading = _.get(state, ['stock', 'list', 'loading'])\n        const createForm = _.get(state, ['form', 'StockCreateForm'])\n        const filter = filterHelper(list, pathname, query)\n\n        return {\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            createLoading,\n            updateLoading,\n            filter,\n            createForm\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(stockListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const stockId = _.get(nextProps, ['params', 'stockId'])\n        return stockId && _.get(props, ['params', 'stockId']) !== stockId\n    }, ({dispatch, params}) => {\n        const stockId = _.toInteger(_.get(params, 'stockId'))\n        stockId && dispatch(stockItemFetchAction(stockId))\n    }),\n\n    withHandlers({\n        handleActionEdit: props => () => {\n            return null\n        },\n\n        handleOpenConfirmDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.STOCK_ITEM_PATH, id),\n                query: filter.getParams({[STOCK_DELETE_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseConfirmDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[STOCK_DELETE_DIALOG_OPEN]: false})})\n        },\n        handleSendConfirmDialog: props => () => {\n            const {dispatch, detail, filter, location: {pathname}} = props\n            dispatch(stockDeleteAction(detail.id))\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[STOCK_DELETE_DIALOG_OPEN]: false})})\n                    dispatch(stockListFetchAction(filter))\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\n                })\n                .catch(() => {\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\n                })\n        },\n\n        handleOpenDeleteDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({\n                pathname,\n                query: filter.getParams({openDeleteDialog: 'yes'})\n            })\n        },\n\n        handleCloseDeleteDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({openDeleteDialog: false})})\n        },\n\n        handleOpenCreateDialog: props => () => {\n            const {dispatch, location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[STOCK_CREATE_DIALOG_OPEN]: true})})\n            dispatch(reset('StockCreateForm'))\n        },\n\n        handleCloseCreateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[STOCK_CREATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitCreateDialog: props => () => {\n            const {dispatch, createForm, filter, location: {pathname}} = props\n\n            return dispatch(stockCreateAction(_.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[STOCK_CREATE_DIALOG_OPEN]: false})})\n                    dispatch(stockListFetchAction(filter))\n                })\n        },\n\n        handleOpenUpdateDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.STOCK_ITEM_PATH, id),\n                query: filter.getParams({[STOCK_UPDATE_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseUpdateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[STOCK_UPDATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitUpdateDialog: props => () => {\n            const {dispatch, createForm, filter} = props\n            const stockId = _.toInteger(_.get(props, ['params', 'stockId']))\n            return dispatch(stockUpdateAction(stockId, _.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(stockItemFetchAction(stockId))\n                })\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push(filter.createURL({[STOCK_UPDATE_DIALOG_OPEN]: false}))\n                    dispatch(stockListFetchAction(filter))\n                })\n        }\n    })\n)\n\nconst StockList = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        createLoading,\n        updateLoading,\n        filter,\n        layout,\n        params\n    } = props\n\n    const openCreateDialog = toBoolean(_.get(location, ['query', STOCK_CREATE_DIALOG_OPEN]))\n    const openUpdateDialog = toBoolean(_.get(location, ['query', STOCK_UPDATE_DIALOG_OPEN]))\n    const openConfirmDialog = toBoolean(_.get(location, ['query', STOCK_DELETE_DIALOG_OPEN]))\n\n    const detailId = _.toInteger(_.get(params, 'stockId'))\n\n    const actionsDialog = {\n        handleActionEdit: props.handleActionEdit,\n        handleActionDelete: props.handleOpenDeleteDialog\n    }\n\n    const createDialog = {\n        createLoading,\n        openCreateDialog,\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\n    }\n\n    const confirmDialog = {\n        confirmLoading: detailLoading,\n        openConfirmDialog: openConfirmDialog,\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\n        handleSendConfirmDialog: props.handleSendConfirmDialog\n    }\n    const updateDialog = {\n        initialValues: (() => {\n            if (!detail || openCreateDialog) {\n                return {}\n            }\n            return {\n                name: _.get(detail, 'name'),\n                manager: {\n                    value: _.get(detail, ['manager', 'id'])\n                },\n                stockType: {\n                    value: _.get(detail, 'stockType')\n                }\n            }\n        })(),\n        updateLoading: detailLoading || updateLoading,\n        openUpdateDialog,\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\n    }\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n\n    const detailData = {\n        id: detailId,\n        data: detail,\n        detailLoading\n    }\n\n    return (\n        <Layout {...layout}>\n            <StockGridList\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                createDialog={createDialog}\n                confirmDialog={confirmDialog}\n                updateDialog={updateDialog}\n                actionsDialog={actionsDialog}\n            />\n        </Layout>\n    )\n})\n\nexport default StockList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Stock/StockList.js","import StockList from './StockList'\n\nexport {StockList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Stock/index.js","import React from 'react'\nimport _ from 'lodash'\nimport {connect} from 'react-redux'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withHandlers, withState} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport sprintf from 'sprintf'\nimport moment from 'moment'\nimport * as STOCK_TAB from '../../constants/stockReceiveTab'\nimport {OrderPrint} from '../../components/Order'\nimport {\n    StockReceiveGridList,\n    STOCK_RECEIVE_CREATE_DIALOG_OPEN,\n    STOCK_RECEIVE_UPDATE_DIALOG_OPEN,\n    HISTORY_FILTER_OPEN,\n    HISTORY_FILTER_KEY,\n    TAB,\n    STOCK_CONFIRM_DIALOG_OPEN,\n    TAB_RECEIVE_FILTER_KEY\n} from '../../components/StockReceive'\nimport {\n    stockReceiveListFetchAction,\n    stockReceiveItemFetchAction,\n    stockReceiveCreateAction,\n    stockHistoryListFetchAction,\n    stockTransferListFetchAction,\n    stockTransferItemFetchAction,\n    stockTransferItemAcceptAction,\n    stockReceiveItemConfirmAction,\n    stockReceiveItemReturnAction\n} from '../../actions/stockReceive'\nimport {\n    orderListPintFetchAction,\n    orderReturnListAction\n}\n\nfrom '../../actions/order'\nimport {openSnackbarAction} from '../../actions/snackbar'\nimport {openErrorAction} from '../../actions/error'\n\nconst TYPE = 'openType'\nconst ZERO = 0\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const stockReceiveType = _.get(props, ['location', 'query', 'openType'])\n        const detail = (stockReceiveType === 'supply') ? _.get(state, ['stockReceive', 'item', 'data'])\n                        : (stockReceiveType === 'transfer') ? _.get(state, ['stockReceive', 'transferItem', 'data'])\n                            : _.get(state, ['order', 'returnList', 'data'])\n\n        const detailProducts = _.get(state, ['stockReceive', 'item', 'data'])\n        const detailLoading = (stockReceiveType === 'supply') ? _.get(state, ['stockReceive', 'item', 'loading'])\n                                : (stockReceiveType === 'transfer') ? _.get(state, ['stockReceive', 'transferItem', 'loading'])\n                                    : _.get(state, ['order', 'returnList', 'loading'])\n\n        const list = _.get(state, ['stockReceive', 'list', 'data'])\n        const listLoading = _.get(state, ['stockReceive', 'list', 'loading'])\n        const historyList = _.get(state, ['stockReceive', 'history', 'data'])\n        const historyListLoading = _.get(state, ['stockReceive', 'history', 'loading'])\n        const transferList = _.get(state, ['stockReceive', 'transfer', 'data'])\n        const transferListLoading = _.get(state, ['stockReceive', 'transfer', 'loading'])\n        const transferDetail = _.get(state, ['stockReceive', 'transferItem', 'data'])\n        const transferDetailLoading = _.get(state, ['stockReceive', 'transferItem', 'loading'])\n        const barcodeList = _.get(state, ['stockReceive', 'barcodeList', 'data'])\n        const barcodeListLoading = _.get(state, ['stockReceive', 'barcodeList', 'loading'])\n        const createLoading = _.get(state, ['stockReceive', 'create', 'loading'])\n        const createForm = _.get(state, ['form', 'StockReceiveCreateForm'])\n        const printList = _.get(state, ['stockReceive', 'print', 'data'])\n        const printLoading = _.get(state, ['stockReceive', 'print', 'loading'])\n        const historyFilterForm = _.get(state, ['form', 'HistoryFilterForm'])\n        const tabTransferFilterForm = _.get(state, ['form', 'TabTransferFilterForm'])\n        const tabReceiveFilterForm = _.get(state, ['form', 'TabReceiveFilterForm'])\n        const isDefect = _.get(state, ['form', 'StockReceiveCreateForm', 'values', 'isDefect'])\n        const productId = _.toNumber(_.get(state, ['form', 'StockReceiveCreateForm', 'values', 'product', 'value', 'id']))\n        const filter = filterHelper((_.get(query, 'tab') === 'receive' || _.get(query, 'tab') === 'receiveHistory')\n                                                            ? list : (_.get(query, 'tab') === 'transfer' || _.get(query, 'tab') === 'transferHistory')\n                                                              ? transferList : (_.get(query, 'tab') === 'outHistory')\n                                                                ? historyList : list, pathname, query)\n\n        return {\n            list,\n            listLoading,\n            historyList,\n            historyListLoading,\n            transferList,\n            transferListLoading,\n            transferDetail,\n            transferDetailLoading,\n            barcodeList,\n            barcodeListLoading,\n            detail,\n            detailProducts,\n            detailLoading,\n            createLoading,\n            filter,\n            createForm,\n            isDefect,\n            productId,\n            printList,\n            printLoading,\n            historyFilterForm,\n            tabTransferFilterForm,\n            tabReceiveFilterForm\n        }\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const prevTab = _.get(props, ['location', 'query', 'tab']) || 'receive'\n        const nextTab = _.get(nextProps, ['location', 'query', 'tab']) || 'receive'\n        return (props.filter.filterRequest() !== nextProps.filter.filterRequest()) || (prevTab !== nextTab)\n    }, ({dispatch, filter, location}) => {\n        const currentTab = _.get(location, ['query', 'tab']) || 'receive'\n        if (currentTab === 'receive') {\n            dispatch(stockReceiveListFetchAction(filter))\n        } else if (currentTab === 'transfer') {\n            dispatch(stockTransferListFetchAction(filter))\n        } else if (currentTab === 'outHistory') {\n            dispatch(stockHistoryListFetchAction(filter))\n        } else if (currentTab === 'transferHistory') {\n            const history = true\n            dispatch(stockTransferListFetchAction(filter, history))\n        } else if (currentTab === 'receiveHistory') {\n            const history = true\n            dispatch(stockReceiveListFetchAction(filter, history))\n        }\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const prevId = _.toInteger(_.get(props, ['params', 'stockReceiveId']))\n        const nextId = _.toInteger(_.get(nextProps, ['params', 'stockReceiveId']))\n        return prevId !== nextId\n    }, ({dispatch, params, location}) => {\n        const currentTab = _.get(location, ['query', 'tab']) || 'receive'\n        const stockReceiveType = _.get(location, ['query', 'openType'])\n        const stockReceiveId = _.toInteger(_.get(params, 'stockReceiveId'))\n        if (stockReceiveId > ZERO && (currentTab === 'receive' || currentTab === 'receiveHistory')) {\n            if (stockReceiveType === 'supply') {\n                dispatch(stockReceiveItemFetchAction(stockReceiveId))\n            } else if (stockReceiveType === 'transfer') {\n                dispatch(stockTransferItemFetchAction(stockReceiveId))\n            } else if (stockReceiveType === 'order_return') {\n                dispatch(orderReturnListAction(stockReceiveId))\n            }\n        } else if ((currentTab === 'transfer' || currentTab === 'transferHistory') && stockReceiveId > ZERO) {\n            dispatch(stockTransferItemFetchAction(stockReceiveId))\n        }\n    }),\n\n    withState('openPrint', 'setOpenPrint', false),\n\n    withHandlers({\n        handleOpenPrintDialog: props => (id) => {\n            const {setOpenPrint, dispatch, filter} = props\n            setOpenPrint(true)\n            dispatch(orderListPintFetchAction(filter, id))\n                .then(() => {\n                    window.print()\n                })\n        },\n\n        handleClosePrintDialog: props => () => {\n            const {setOpenPrint} = props\n            setOpenPrint(false)\n        },\n        handleTabChange: props => (tab) => {\n            hashHistory.push({\n                pathname: 'stockReceive',\n                query: {[TAB]: tab}\n            })\n        },\n\n        handleOpenFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[HISTORY_FILTER_OPEN]: true})})\n        },\n\n        handleCloseFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[HISTORY_FILTER_OPEN]: false})})\n        },\n\n        handleClearFilterDialog: props => () => {\n            const {location: {pathname, query}} = props\n            const currentTab = _.get(query, 'tab') || 'receive'\n            hashHistory.push({pathname, query: {[TAB]: currentTab}})\n        },\n        handleSubmitFilterDialog: props => () => {\n            const {filter, historyFilterForm} = props\n            const brand = _.get(historyFilterForm, ['values', 'brand', 'value']) || null\n            const stock = _.get(historyFilterForm, ['values', 'stock', 'value']) || null\n            const type = _.get(historyFilterForm, ['values', 'type', 'value']) || null\n            const productType = _.get(historyFilterForm, ['values', 'productType', 'value']) || null\n            const product = _.get(historyFilterForm, ['values', 'product', 'value']) || null\n            const fromDate = _.get(historyFilterForm, ['values', 'date', 'fromDate']) || null\n            const toDate = _.get(historyFilterForm, ['values', 'date', 'toDate']) || null\n\n            filter.filterBy({\n                [HISTORY_FILTER_OPEN]: false,\n                [HISTORY_FILTER_KEY.BRAND]: brand,\n                [HISTORY_FILTER_KEY.STOCK]: stock,\n                [HISTORY_FILTER_KEY.TYPE]: type,\n                [HISTORY_FILTER_KEY.PRODUCT_TYPE]: productType,\n                [HISTORY_FILTER_KEY.PRODUCT]: product,\n                [HISTORY_FILTER_KEY.FROM_DATE]: fromDate && moment(fromDate).format('YYYY-MM-DD'),\n                [HISTORY_FILTER_KEY.TO_DATE]: toDate && moment(toDate).format('YYYY-MM-DD')\n\n            })\n        },\n\n        handleSubmitTabReceiveFilterDialog: props => () => {\n            const {filter, tabReceiveFilterForm} = props\n            const stock = _.get(tabReceiveFilterForm, ['values', 'stock', 'value']) || null\n            const type = _.get(tabReceiveFilterForm, ['values', 'type', 'value']) || null\n            const fromDate = _.get(tabReceiveFilterForm, ['values', 'date', 'fromDate']) || null\n            const toDate = _.get(tabReceiveFilterForm, ['values', 'date', 'toDate']) || null\n            filter.filterBy({\n                [HISTORY_FILTER_OPEN]: false,\n                [TAB_RECEIVE_FILTER_KEY.STOCK]: stock,\n                [TAB_RECEIVE_FILTER_KEY.TYPE]: type,\n                [TAB_RECEIVE_FILTER_KEY.FROM_DATE]: fromDate && moment(fromDate).format('YYYY-MM-DD'),\n                [TAB_RECEIVE_FILTER_KEY.TO_DATE]: toDate && moment(toDate).format('YYYY-MM-DD')\n\n            })\n        },\n\n        handleSubmitTabTransferFilterDialog: props => () => {\n            const {filter, tabTransferFilterForm} = props\n            const stock = _.get(tabTransferFilterForm, ['values', 'stock', 'value']) || null\n            const type = _.get(tabTransferFilterForm, ['values', 'type', 'value']) || null\n            const fromDate = _.get(tabTransferFilterForm, ['values', 'date', 'fromDate']) || null\n            const toDate = _.get(tabTransferFilterForm, ['values', 'date', 'toDate']) || null\n            filter.filterBy({\n                [HISTORY_FILTER_OPEN]: false,\n                [HISTORY_FILTER_KEY.STOCK]: stock,\n                [HISTORY_FILTER_KEY.TYPE]: type,\n                [HISTORY_FILTER_KEY.FROM_DATE]: fromDate && fromDate.format('YYYY-MM-DD'),\n                [HISTORY_FILTER_KEY.TO_DATE]: toDate && toDate.format('YYYY-MM-DD')\n\n            })\n        },\n        handleOpenConfirmDialog: props => (status) => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[STOCK_CONFIRM_DIALOG_OPEN]: status})})\n        },\n\n        handleCloseConfirmDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[STOCK_CONFIRM_DIALOG_OPEN]: false})})\n        },\n        handleSubmitOrderReturnDialog: props => () => {\n            const {dispatch, filter, location: {pathname}, params} = props\n            const id = _.toInteger(_.get(params, 'stockReceiveId'))\n            return dispatch(stockReceiveItemReturnAction(id))\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[STOCK_CONFIRM_DIALOG_OPEN]: false})})\n                    dispatch(stockReceiveListFetchAction(filter))\n                    return dispatch(openSnackbarAction({message: 'Успешно принять'}))\n                })\n        },\n        handleSubmitTransferAcceptDialog: props => () => {\n            const {dispatch, filter, location: {pathname, query}, params} = props\n            const id = _.toInteger(_.get(params, 'stockReceiveId'))\n            const stockId = Number(_.get(query, TYPE))\n            return dispatch(stockTransferItemAcceptAction(id, stockId))\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[STOCK_CONFIRM_DIALOG_OPEN]: false})})\n                    dispatch(stockTransferListFetchAction(filter))\n                    return dispatch(openSnackbarAction({message: 'Успешно принять'}))\n                })\n        },\n        handleSubmitReceiveConfirmDialog: props => () => {\n            const {dispatch, filter, location: {pathname, query}, params} = props\n            const id = _.toInteger(_.get(params, 'stockReceiveId'))\n            const status = _.get(query, STOCK_CONFIRM_DIALOG_OPEN)\n            return dispatch(stockReceiveItemConfirmAction(id, status))\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[STOCK_CONFIRM_DIALOG_OPEN]: false})})\n                    dispatch(stockReceiveListFetchAction(filter))\n                    return dispatch(openSnackbarAction({message: 'Успешно принять'}))\n                })\n        },\n        handleOpenCreateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[STOCK_RECEIVE_CREATE_DIALOG_OPEN]: true})})\n        },\n\n        handleCloseCreateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[STOCK_RECEIVE_CREATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitCreateDialog: props => () => {\n            const {dispatch, createForm, filter, location: {pathname}, params, detail} = props\n            const formValues = _.get(createForm, ['values'])\n            const supplyId = _.toInteger(_.get(params, 'stockReceiveId'))\n\n            return dispatch(stockReceiveCreateAction(formValues, supplyId, detail))\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[STOCK_RECEIVE_CREATE_DIALOG_OPEN]: false})})\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    dispatch(stockReceiveListFetchAction(filter))\n                })\n                .catch((error) => {\n                    const comment = _.map(error, (item) => {\n                        return (<p>{_.get(item, 'amount')}</p>)\n                    })\n                    return dispatch(openErrorAction({message: {comment}}))\n                })\n        },\n        handleOpenUpdateDialog: props => () => {\n            const {filter, location: {pathname}} = props\n            hashHistory.push({pathname, query: filter.getParams({[STOCK_RECEIVE_UPDATE_DIALOG_OPEN]: true})})\n        },\n\n        handleCloseUpdateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[STOCK_RECEIVE_UPDATE_DIALOG_OPEN]: false})})\n        },\n\n       /* HandleSubmitUpdateDialog: props => () => {\n            const {dispatch, createForm, filter} = props\n            const stockId = _.toInteger(_.get(props, ['params', 'stockId']))\n            return dispatch(stockUpdateAction(stockId, _.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(stockItemFetchAction(stockId))\n                })\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push(filter.createURL({[STOCK_RECEIVE_UPDATE_DIALOG_OPEN]: false}))\n                    dispatch(stockReceiveListFetchAction(filter))\n                })\n        }, */\n        handleCloseDetail: props => () => {\n            const {filter} = props\n            hashHistory.push({pathname: ROUTER.STOCK_RECEIVE_LIST_URL, query: filter.getParams()})\n        },\n        handleOpenDetail: props => (id, type) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.STOCK_RECEIVE_ITEM_PATH, id),\n                query: filter.getParams({[TYPE]: type})\n            })\n        }\n    })\n)\n\nconst StockReceiveList = enhance((props) => {\n    const {\n        list,\n        listLoading,\n        historyList,\n        historyListLoading,\n        transferList,\n        transferListLoading,\n        transferDetail,\n        transferDetailLoading,\n        location,\n        detail,\n        detailProducts,\n        detailLoading,\n        createLoading,\n        isDefect,\n        filter,\n        layout,\n        openPrint,\n        printList,\n        printLoading,\n        params\n    } = props\n    const detailType = _.get(location, ['query', TYPE])\n    const detailId = _.toInteger(_.get(params, 'stockReceiveId'))\n    const openConfirmDialog = _.toInteger(_.get(location, ['query', STOCK_CONFIRM_DIALOG_OPEN]))\n    const openCreateDialog = toBoolean(_.get(location, ['query', STOCK_RECEIVE_CREATE_DIALOG_OPEN]))\n    const openFilterDialog = toBoolean(_.get(location, ['query', HISTORY_FILTER_OPEN]))\n    const openUpdateDialog = toBoolean(_.get(location, ['query', STOCK_RECEIVE_UPDATE_DIALOG_OPEN]))\n    const brand = _.toInteger(filter.getParam(HISTORY_FILTER_KEY.BRAND))\n    const stock = _.toInteger(filter.getParam(HISTORY_FILTER_KEY.STOCK))\n    const type = _.toInteger(filter.getParam(HISTORY_FILTER_KEY.TYPE))\n    const productType = _.toInteger(filter.getParam(HISTORY_FILTER_KEY.PRODUCT_TYPE))\n    const product = _.toInteger(filter.getParam(HISTORY_FILTER_KEY.PRODUCT))\n    const fromDate = filter.getParam(HISTORY_FILTER_KEY.FROM_DATE)\n    const toDate = filter.getParam(HISTORY_FILTER_KEY.TO_DATE)\n    const tab = _.get(location, ['query', TAB]) || STOCK_TAB.STOCK_RECEIVE_DEFAULT_TAB\n    const handleCloseDetail = _.get(props, 'handleCloseDetail')\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading,\n        handleOpenDetail: props.handleOpenDetail\n    }\n\n    const historyData = {\n        data: _.get(historyList, 'results'),\n        historyListLoading\n    }\n\n    const transferData = {\n        handleOpenDetail: props.handleOpenDetail,\n        data: _.get(transferList, 'results'),\n        transferListLoading\n    }\n    const orderData = {\n        data: printList,\n        printLoading\n    }\n    const currentTransferDetail = _.find(_.get(transferList, 'results'), (obj) => {\n        return _.get(obj, 'id') === detailId && Number(_.get(obj, ['stock', 'id'])) === Number(detailType)\n    })\n\n    const transferDetailData = {\n        type: detailType,\n        id: detailId,\n        data: transferDetail,\n        transferDetailLoading,\n        currentTransferDetail\n    }\n    const currentDetail = _.find(_.get(list, 'results'), (obj) => {\n        return _.get(obj, 'id') === detailId && _.get(obj, 'type') === detailType\n    })\n\n    const detailData = {\n        type: detailType,\n        id: detailId,\n        data: detail,\n        detailLoading,\n        currentDetail\n    }\n\n    const confirmDialog = {\n        openConfirmDialog,\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\n        handleSubmitTransferAcceptDialog: props.handleSubmitTransferAcceptDialog,\n        handleSubmitReceiveConfirmDialog: props.handleSubmitReceiveConfirmDialog,\n        handleSubmitOrderReturnDialog: props.handleSubmitOrderReturnDialog\n    }\n    const createDialog = {\n        createLoading,\n        openCreateDialog,\n        isDefect,\n        detailProducts,\n        detailLoading,\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\n    }\n    const updateDialog = {\n        detailProducts,\n        updateLoading: detailLoading,\n        openUpdateDialog,\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\n        initialValues: (() => {\n            if (!detail || openCreateDialog) {\n                return {}\n            }\n            return {\n                product: _.map(_.get(detail, 'products'), (item) => {\n                    return {\n                        accepted: _.get(item, 'postedAmount'),\n                        defected: _.get(item, 'defectAmount')\n                    }\n                })\n            }\n        })()\n    }\n    const tabData = {\n        tab,\n        handleTabChange: props.handleTabChange\n    }\n\n    const filterDialog = {\n        initialValues: {\n            brand: {\n                value: brand\n            },\n            type: {\n                value: type\n            },\n            product: {\n                value: product\n            },\n            date: {\n                fromDate: fromDate && moment(fromDate),\n                toDate: toDate && moment(toDate)\n            },\n            productType: {\n                value: productType\n            },\n            stock: {\n                value: stock\n            }\n        },\n        filterLoading: false,\n        openFilterDialog,\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\n        handleClearFilterDialog: props.handleClearFilterDialog,\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog,\n        handleSubmitTabReceiveFilterDialog: props.handleSubmitTabReceiveFilterDialog\n    }\n\n    const printDialog = {\n        openPrint,\n        handleOpenPrintDialog: props.handleOpenPrintDialog,\n        handleClosePrintDialog: props.handleClosePrintDialog\n    }\n\n    if (openPrint) {\n        document.getElementById('wrapper').style.height = 'auto'\n\n        return <OrderPrint\n            printDialog={printDialog}\n            listPrintData={orderData}/>\n    }\n    document.getElementById('wrapper').style.height = '100%'\n\n    return (\n        <Layout {...layout}>\n            <StockReceiveGridList\n                filter={filter}\n                tabData={tabData}\n                listData={listData}\n                filterDialog={filterDialog}\n                historyData={historyData}\n                transferData={transferData}\n                transferDetail={transferDetailData}\n                detailData={detailData}\n                createDialog={createDialog}\n                handleCloseDetail={handleCloseDetail}\n                confirmDialog={confirmDialog}\n                printDialog={printDialog}\n                updateDialog={updateDialog}\n            />\n        </Layout>\n    )\n})\n\nexport default StockReceiveList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/StockReceive/StockReceiveList.js","import StockReceiveList from './StockReceiveList'\n\nexport {StockReceiveList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/StockReceive/index.js","import React from 'react'\nimport _ from 'lodash'\nimport moment from 'moment'\nimport {connect} from 'react-redux'\nimport {reset} from 'redux-form'\nimport {hashHistory} from 'react-router'\nimport {compose, withPropsOnChange, withState, withHandlers} from 'recompose'\nimport Layout from '../../components/Layout'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport {DELETE_DIALOG_OPEN} from '../../components/DeleteDialog'\nimport {setItemAction} from '../../components/ReduxForm/Provider/ProviderSearchField'\nimport {\n    SUPPLY_CREATE_DIALOG_OPEN,\n    SUPPLY_UPDATE_DIALOG_OPEN,\n    SUPPLY_FILTER_KEY,\n    SUPPLY_FILTER_OPEN,\n    SUPPLY_EXPENSE_CREATE_DIALOG_OPEN,\n    SUPPLY_DEFECT_DIALOG_OPEN,\n    SupplyGridList\n} from '../../components/Supply'\nimport {\n    supplyCreateAction,\n    supplyUpdateAction,\n    supplyListFetchAction,\n    supplyDeleteAction,\n    supplyItemFetchAction,\n    supplyDefectAction\n} from '../../actions/supply'\nimport {\n    supplyExpenseCreateAction,\n    supplyExpenseDeleteAction,\n    supplyExpenseListFetchAction\n} from '../../actions/supplyExpense'\nimport {openSnackbarAction} from '../../actions/snackbar'\n\nconst MINUS_ONE = -1\nconst ZERO = 0\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['supply', 'item', 'data'])\n        const detailLoading = _.get(state, ['supply', 'item', 'loading'])\n        const createLoading = _.get(state, ['supply', 'create', 'loading'])\n        const updateLoading = _.get(state, ['supply', 'update', 'loading'])\n        const list = _.get(state, ['supply', 'list', 'data'])\n        const defectData = _.get(state, ['supply', 'defect', 'data'])\n        const listLoading = _.get(state, ['supply', 'list', 'loading'])\n        const filterForm = _.get(state, ['form', 'SupplyFilterForm'])\n        const createForm = _.get(state, ['form', 'SupplyCreateForm'])\n        const filter = filterHelper(list, pathname, query)\n\n        const supplyExpenseLoading = _.get(state, ['supplyExpense', 'create', 'loading'])\n        const createSupplyExpenseForm = _.get(state, ['form', 'SupplyExpenseCreateForm'])\n        const supplyExpenseList = _.get(state, ['supplyExpense', 'list', 'data'])\n        const supplyExpenseListLoading = _.get(state, ['supplyExpense', 'list', 'loading'])\n\n        return {\n            list,\n            listLoading,\n            detail,\n            defectData,\n            detailLoading,\n            createLoading,\n            updateLoading,\n            filter,\n            filterForm,\n            createForm,\n            supplyExpenseLoading,\n            createSupplyExpenseForm,\n            supplyExpenseList,\n            supplyExpenseListLoading\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(supplyListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const prevDefect = _.toInteger(_.get(props, ['location', 'query', 'openDefectDialog']))\n        const nextDefect = _.toInteger(_.get(nextProps, ['location', 'query', 'openDefectDialog']))\n        return prevDefect !== nextDefect && nextDefect > ZERO\n    }, ({dispatch, params, location}) => {\n        const supplyId = _.toInteger(_.get(params, 'supplyId'))\n        const productId = _.toInteger(_.get(location, ['query', 'openDefectDialog']))\n        if (productId > ZERO) {\n            dispatch(supplyDefectAction(supplyId, productId))\n        }\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const supplyId = _.get(nextProps, ['params', 'supplyId'])\n        return supplyId && _.get(props, ['params', 'supplyId']) !== supplyId\n    }, ({dispatch, params}) => {\n        const supplyId = _.toInteger(_.get(params, 'supplyId'))\n        supplyId && dispatch(supplyItemFetchAction(supplyId))\n        supplyId && dispatch(supplyExpenseListFetchAction(supplyId))\n    }),\n\n    withState('openConfirmDialog', 'setOpenConfirmDialog', false),\n    withState('openConfirmExpenseDialog', 'setOpenConfirmExpenseDialog', false),\n    withState('openSupplyExpenseConfirmDialog', 'setOpenSupplyExpenseConfirmDialog', false),\n    withState('expenseRemoveId', 'setExpenseRemoveId', false),\n\n    withHandlers({\n        handleActionEdit: props => () => {\n            return null\n        },\n\n        handleOpenConfirmDialog: props => () => {\n            const {setOpenConfirmDialog} = props\n            setOpenConfirmDialog(true)\n        },\n        handleCloseConfirmDialog: props => () => {\n            const {setOpenConfirmDialog} = props\n            setOpenConfirmDialog(false)\n        },\n        handleSendConfirmDialog: props => () => {\n            const {dispatch, params, setOpenConfirmDialog, filter} = props\n            const detailId = _.get(params, 'supplyId')\n            dispatch(supplyDeleteAction(detailId))\n                .catch(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно отменено'}))\n                })\n                .then(() => {\n                    setOpenConfirmDialog(false)\n                    dispatch(supplyListFetchAction(filter))\n                })\n        },\n\n        handleOpenConfirmExpenseDialog: props => (expId) => {\n            const {setExpenseRemoveId} = props\n            setExpenseRemoveId(expId)\n        },\n\n        handleCloseConfirmExpenseDialog: props => () => {\n            const {setExpenseRemoveId} = props\n            setExpenseRemoveId(false)\n        },\n        handleSendConfirmExpenseDialog: props => () => {\n            const {dispatch, setExpenseRemoveId, expenseRemoveId, detail} = props\n            const id = _.get(detail, 'id')\n            dispatch(supplyExpenseDeleteAction(expenseRemoveId))\n                .then(() => {\n                    setExpenseRemoveId(false)\n                    dispatch(supplyExpenseListFetchAction(id))\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\n                })\n                .catch(() => {\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\n                })\n        },\n\n        handleOpenFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[SUPPLY_FILTER_OPEN]: true})})\n        },\n\n        handleCloseFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[SUPPLY_FILTER_OPEN]: false})})\n        },\n\n        handleClearFilterDialog: props => () => {\n            const {location: {pathname}} = props\n            hashHistory.push({pathname, query: {}})\n        },\n\n        handleSubmitFilterDialog: props => () => {\n            const {filter, filterForm} = props\n            const deliveryFromDate = _.get(filterForm, ['values', 'dateDelivery', 'fromDate']) || null\n            const deliveryToDate = _.get(filterForm, ['values', 'dateDelivery', 'toDate']) || null\n            const createdFromDate = _.get(filterForm, ['values', 'dateCreated', 'fromDate']) || null\n            const createdToDate = _.get(filterForm, ['values', 'dateCreated', 'toDate']) || null\n            const provider = _.get(filterForm, ['values', 'provider', 'value']) || null\n            const stock = _.get(filterForm, ['values', 'stock', 'value']) || null\n\n            filter.filterBy({\n                [SUPPLY_FILTER_OPEN]: false,\n                [SUPPLY_FILTER_KEY.PROVIDER]: provider,\n                [SUPPLY_FILTER_KEY.STOCK]: stock,\n                [SUPPLY_FILTER_KEY.DELIVERY_FROM_DATE]: deliveryFromDate && deliveryFromDate.format('YYYY-MM-DD'),\n                [SUPPLY_FILTER_KEY.DELIVERY_TO_DATE]: deliveryToDate && deliveryToDate.format('YYYY-MM-DD'),\n                [SUPPLY_FILTER_KEY.CREATED_FROM_DATE]: createdFromDate && createdFromDate.format('YYYY-MM-DD'),\n                [SUPPLY_FILTER_KEY.CREATED_TO_DATE]: createdToDate && createdToDate.format('YYYY-MM-DD')\n            })\n        },\n        handleOpenDeleteDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({\n                pathname,\n                query: filter.getParams({openDeleteDialog: 'yes'})\n            })\n        },\n\n        handleCloseDeleteDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({openDeleteDialog: false})})\n        },\n\n        handleOpenCreateDialog: props => () => {\n            const {location: {pathname}, filter, dispatch} = props\n            hashHistory.push({pathname, query: filter.getParams({[SUPPLY_CREATE_DIALOG_OPEN]: true})})\n            dispatch(setItemAction(null, false))\n        },\n\n        handleCloseCreateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[SUPPLY_CREATE_DIALOG_OPEN]: false})})\n        },\n        handleSubmitCreateDialog: props => () => {\n            const {location: {pathname}, dispatch, createForm, filter} = props\n            return dispatch(supplyCreateAction(_.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[SUPPLY_CREATE_DIALOG_OPEN]: false})})\n                    dispatch(supplyListFetchAction(filter))\n                })\n        },\n\n        handleOpenDefectDialog: props => (id) => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[SUPPLY_DEFECT_DIALOG_OPEN]: id})})\n        },\n\n        handleCloseDefectDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[SUPPLY_DEFECT_DIALOG_OPEN]: MINUS_ONE})})\n        },\n\n        handleOpenUpdateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[SUPPLY_UPDATE_DIALOG_OPEN]: true})})\n        },\n\n        handleCloseUpdateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[SUPPLY_UPDATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitUpdateDialog: props => () => {\n            const {dispatch, createForm, filter} = props\n            const supplyId = _.toInteger(_.get(props, ['params', 'supplyId']))\n\n            return dispatch(supplyUpdateAction(supplyId, _.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(supplyItemFetchAction(supplyId))\n                })\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push(filter.createURL({[SUPPLY_UPDATE_DIALOG_OPEN]: false}))\n                    dispatch(supplyListFetchAction(filter))\n                })\n        },\n        handleCloseDetail: props => () => {\n            const {filter} = props\n            hashHistory.push({pathname: ROUTER.SUPPLY_LIST_URL, query: filter.getParams()})\n        }\n    }),\n\n    withHandlers({\n        handleSupplyExpenseOpenCreateDialog: props => () => {\n            const {location: {pathname}, filter, dispatch} = props\n            hashHistory.push({pathname, query: filter.getParams({[SUPPLY_EXPENSE_CREATE_DIALOG_OPEN]: true})})\n            dispatch(reset('SupplyExpenseCreateForm'))\n        },\n\n        handleSupplyExpenseCloseCreateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[SUPPLY_EXPENSE_CREATE_DIALOG_OPEN]: false})})\n        },\n        handleSupplyExpenseSubmitCreateDialog: props => () => {\n            const {dispatch, createSupplyExpenseForm, filter, detail, location: {pathname}} = props\n            const id = _.get(detail, 'id')\n\n            return dispatch(supplyExpenseCreateAction(_.get(createSupplyExpenseForm, ['values']), id))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Successful saved'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[SUPPLY_EXPENSE_CREATE_DIALOG_OPEN]: false})})\n                    dispatch(supplyExpenseListFetchAction(id))\n                })\n        }\n    })\n)\n\nconst SupplyList = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        detail,\n        defectData,\n        detailLoading,\n        createLoading,\n        updateLoading,\n        filter,\n        layout,\n        params,\n        expenseRemoveId,\n\n        supplyExpenseLoading,\n        supplyExpenseList,\n        supplyExpenseListLoading\n    } = props\n\n    const openFilterDialog = toBoolean(_.get(location, ['query', SUPPLY_FILTER_OPEN]))\n    const openCreateDialog = toBoolean(_.get(location, ['query', SUPPLY_CREATE_DIALOG_OPEN]))\n    const openDefectDialog = _.toInteger(_.get(location, ['query', 'openDefectDialog']) || MINUS_ONE) > MINUS_ONE\n    const openUpdateDialog = toBoolean(_.get(location, ['query', SUPPLY_UPDATE_DIALOG_OPEN]))\n    const openDeleteDialog = toBoolean(_.get(location, ['query', DELETE_DIALOG_OPEN]))\n    const provider = _.toInteger(filter.getParam(SUPPLY_FILTER_KEY.PROVIDER))\n    const stock = _.toInteger(filter.getParam(SUPPLY_FILTER_KEY.STOCK))\n    const deliveryFromDate = filter.getParam(SUPPLY_FILTER_KEY.DELIVERY_FROM_DATE)\n    const deliveryToDate = filter.getParam(SUPPLY_FILTER_KEY.DELIVERY_TO_DATE)\n    const createdFromDate = filter.getParam(SUPPLY_FILTER_KEY.CREATED_FROM_DATE)\n    const createdToDate = filter.getParam(SUPPLY_FILTER_KEY.CREATED_TO_DATE)\n    const detailId = _.toInteger(_.get(params, 'supplyId'))\n\n    const actionsDialog = {\n        handleActionEdit: props.handleActionEdit,\n        handleActionDelete: props.handleOpenDeleteDialog\n    }\n\n    const createDialog = {\n        createLoading,\n        openCreateDialog,\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog\n    }\n\n    const defectDialog = {\n        openDefectDialog,\n        handleOpenDefectDialog: props.handleOpenDefectDialog,\n        handleCloseDefectDialog: props.handleCloseDefectDialog\n    }\n\n    const deleteDialog = {\n        openDeleteDialog,\n        handleOpenDeleteDialog: props.handleOpenDeleteDialog,\n        handleCloseDeleteDialog: props.handleCloseDeleteDialog\n    }\n\n    const confirmDialog = {\n        openConfirmDialog: props.openConfirmDialog,\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\n        handleSendConfirmDialog: props.handleSendConfirmDialog\n    }\n\n    const confirmExpenseDialog = {\n        removeId: expenseRemoveId,\n        openConfirmExpenseDialog: (expenseRemoveId > ZERO),\n        handleOpenConfirmExpenseDialog: props.handleOpenConfirmExpenseDialog,\n        handleCloseConfirmExpenseDialog: props.handleCloseConfirmExpenseDialog,\n        handleSendConfirmExpenseDialog: props.handleSendConfirmExpenseDialog\n    }\n    const forUpdateProducts = _.map(_.get(detail, 'products'), (item) => {\n        return {\n            amount: _.get(item, 'amount'),\n            cost: _.get(item, 'cost'),\n            product: {\n                value: {\n                    id: _.get(item, ['product', 'id']),\n                    name: _.get(item, ['product', 'name']),\n                    measurement: _.get(item, ['product', 'measurement'])\n                }\n            }\n\n        }\n    })\n    const updateDialog = {\n        initialValues: (() => {\n            if (!detail || openCreateDialog) {\n                return {}\n            }\n            return {\n                provider: {\n                    value: _.get(detail, ['provider', 'id'])\n                },\n                stock: {\n                    value: _.get(detail, ['stock', 'id'])\n                },\n                currency: {\n                    value: _.get(detail, ['currency', 'id'])\n                },\n                contact: {\n                    value: _.get(detail, ['contact', 'id']) + ' ' + _.get(detail, ['contact', 'phone']) + ' ' + _.get(detail, ['contact', 'email'])\n                },\n                date_delivery: moment(_.get(detail, ['dateDelivery'])).toDate(),\n                products: forUpdateProducts,\n                comment: _.get(detail, 'comment')\n            }\n        })(),\n        updateLoading: detailLoading || updateLoading,\n        openUpdateDialog,\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog\n    }\n\n    const filterDialog = {\n        initialValues: {\n            provider: {\n                value: provider\n            },\n            stock: {\n                value: stock\n            },\n            dateDelivery: {\n                fromDate: deliveryFromDate && moment(deliveryFromDate, 'YYYY-MM-DD'),\n                toDate: deliveryToDate && moment(deliveryToDate, 'YYYY-MM-DD')\n            },\n            dateCreated: {\n                fromDate: createdFromDate && moment(createdFromDate, 'YYYY-MM-DD'),\n                toDate: createdToDate && moment(createdToDate, 'YYYY-MM-DD')\n            }\n        },\n        filterLoading: false,\n        openFilterDialog,\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\n        handleClearFilterDialog: props.handleClearFilterDialog,\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\n    }\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n    const detailData = {\n        id: detailId,\n        data: detail,\n        defect: defectData,\n        detailLoading,\n        handleCloseDetail: props.handleCloseDetail\n    }\n\n    // Supply Expense\n\n    const supplyListData = {\n        data: _.get(supplyExpenseList, 'results'),\n        supplyExpenseListLoading,\n        openSupplyExpenseConfirmDialog: props.openSupplyExpenseConfirmDialog,\n        handleSupplyExpenseOpenConfirmDialog: props.handleSupplyExpenseOpenConfirmDialog,\n        handleSupplyExpenseCloseConfirmDialog: props.handleSupplyExpenseCloseConfirmDialog\n    }\n    const openSupplyExpenseCreateDialog = toBoolean(_.get(location, ['query', SUPPLY_EXPENSE_CREATE_DIALOG_OPEN]))\n\n    const supplyExpenseCreateDialog = {\n        supplyExpenseLoading,\n        openSupplyExpenseCreateDialog,\n        handleSupplyExpenseOpenCreateDialog: props.handleSupplyExpenseOpenCreateDialog,\n        handleSupplyExpenseCloseCreateDialog: props.handleSupplyExpenseCloseCreateDialog,\n        handleSupplyExpenseSubmitCreateDialog: props.handleSupplyExpenseSubmitCreateDialog\n    }\n\n    return (\n        <Layout {...layout}>\n            <SupplyGridList\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                createDialog={createDialog}\n                defectDialog={defectDialog}\n                deleteDialog={deleteDialog}\n                confirmDialog={confirmDialog}\n                confirmExpenseDialog={confirmExpenseDialog}\n                updateDialog={updateDialog}\n                actionsDialog={actionsDialog}\n                filterDialog={filterDialog}\n\n                supplyListData={supplyListData}\n                supplyExpenseCreateDialog={supplyExpenseCreateDialog}\n            />\n        </Layout>\n    )\n})\n\nexport default SupplyList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Supply/SupplyList.js","import SupplyList from './SupplyList'\n\nexport {SupplyList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Supply/index.js","import React from 'react'\nimport _ from 'lodash'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport {connect} from 'react-redux'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport sprintf from 'sprintf'\nimport * as ROUTER from '../../constants/routes'\nimport TrackingWrapper from '../../components/Tracking/TrackingWrapper'\nimport {TOGGLE_INFO, OPEN_SHOP_DETAILS} from '../../components/Tracking'\nimport toBoolean from '../../helpers/toBoolean'\nimport filterHelper from '../../helpers/filter'\nimport moment from 'moment'\nimport {\n    trackingListFetchAction,\n    locationListAction,\n    marketsLocationFetchAction\n} from '../../actions/tracking'\nimport {shopItemFetchAction} from '../../actions/shop'\n\nconst TRACKING_FILTER_KEY = {\n    DATE: 'date',\n    FROM_TIME: 'fromTime',\n    TO_TIME: 'toTime',\n    SHOW_MARKETS: 'showMarkets',\n    SHOW_ZONES: 'showZones',\n    AGENT_TRACK: 'agentTrack'\n}\n\nconst ZERO = 0\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const list = _.get(state, ['tracking', 'list', 'data'])\n        const listLoading = _.get(state, ['tracking', 'list', 'loading'])\n        const detail = _.get(state, ['tracking', 'item', 'data'])\n        const detailLoading = _.get(state, ['tracking', 'item', 'loading'])\n        const agentLocation = _.get(state, ['tracking', 'location', 'data'])\n        const marketsLocation = _.get(state, ['tracking', 'markets', 'data'])\n        const filterForm = _.get(state, ['form', 'TrackingFilterForm'])\n        const filter = filterHelper(list, pathname, query)\n        const isOpenTrack = toBoolean(_.get(query, 'agentTrack'))\n        const isOpenMarkets = toBoolean(_.get(query, 'showMarkets'))\n        const marketData = _.get(state, ['shop', 'item', 'data'])\n        const marketDataLoading = _.get(state, ['shop', 'item', 'loading'])\n\n        return {\n            query,\n            pathname,\n            filter,\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            agentLocation,\n            marketsLocation,\n            filterForm,\n            isOpenTrack,\n            isOpenMarkets,\n            marketData,\n            marketDataLoading\n        }\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const prevToggle = toBoolean(_.get(props, ['query', 'openInfo']))\n        const nextToggle = toBoolean(_.get(nextProps, ['query', 'openInfo']))\n        return prevToggle !== nextToggle && nextToggle === true\n    }, ({dispatch, filter}) => {\n        dispatch(trackingListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const prevAgent = _.get(props, ['params', 'agentId'])\n        const nextAgent = _.get(nextProps, ['params', 'agentId'])\n        const prevTrack = toBoolean(_.get(props, ['query', 'agentTrack']))\n        const nextTrack = toBoolean(_.get(nextProps, ['query', 'agentTrack']))\n        return (prevAgent !== nextAgent || prevTrack !== nextTrack) && nextTrack === true\n    }, ({dispatch, params, location}) => {\n        const id = _.toInteger(_.get(params, 'agentId'))\n        const serializerData = {\n            date: _.get(location, ['query', 'date']),\n            beginTime: _.get(location, ['query', 'fromTime']),\n            endTime: _.get(location, ['query', 'toTime'])\n        }\n        if (id > ZERO) {\n            dispatch(locationListAction(id, serializerData))\n        }\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const prevMarket = toBoolean(_.get(props, ['query', 'showMarkets']))\n        const nextMarket = toBoolean(_.get(nextProps, ['query', 'showMarkets']))\n        return prevMarket !== nextMarket && nextMarket === true\n    }, ({dispatch}) => {\n        dispatch(marketsLocationFetchAction())\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const prevMarket = _.get(props, ['query', 'openShop'])\n        const nextMarket = _.get(nextProps, ['query', 'openShop'])\n        return prevMarket !== nextMarket && nextMarket > ZERO\n    }, ({dispatch, location}) => {\n        const id = _.toInteger(_.get(location, ['query', 'openShop']))\n        if (id > ZERO) {\n            dispatch(shopItemFetchAction(id))\n        }\n    }),\n\n    withHandlers({\n        handleOpenDetails: props => (id) => {\n            const {filter} = props\n            hashHistory.push({pathname: sprintf(ROUTER.TRACKING_ITEM_PATH, id), query: filter.getParams({[TOGGLE_INFO]: true})})\n        },\n\n        handleOpenShopDetails: props => (id) => {\n            const {filter, location: {pathname}} = props\n            hashHistory.push({pathname, query: filter.getParams({[OPEN_SHOP_DETAILS]: id, [TOGGLE_INFO]: true})})\n        },\n\n        handleCloseShopDetails: props => () => {\n            const {filter, location: {pathname}} = props\n            hashHistory.push({pathname, query: filter.getParams({[OPEN_SHOP_DETAILS]: ZERO})})\n        },\n\n        handleExpandInfo: props => () => {\n            const {location: {pathname}, dispatch, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[TOGGLE_INFO]: true})})\n\n            return dispatch(trackingListFetchAction(filter))\n        },\n\n        handleCollapseInfo: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[TOGGLE_INFO]: false})})\n        },\n\n        handleSubmitFilterDialog: props => () => {\n            const {filter, filterForm} = props\n            const showZones = _.get(filterForm, ['values', 'showZones']) || null\n            const showMarkets = _.get(filterForm, ['values', 'showMarkets']) || null\n            const agentTrack = _.get(filterForm, ['values', 'agentTrack']) || null\n            const date = _.get(filterForm, ['values', 'date']) || null\n            const fromTime = _.get(filterForm, ['values', 'fromTime']) || null\n            const toTime = _.get(filterForm, ['values', 'toTime']) || null\n\n            filter.filterBy({\n                [TRACKING_FILTER_KEY.DATE]: moment(date).format('YYYY-MM-DD'),\n                [TRACKING_FILTER_KEY.FROM_TIME]: moment(fromTime).format('HH-mm'),\n                [TRACKING_FILTER_KEY.TO_TIME]: moment(toTime).format('HH-mm'),\n                [TRACKING_FILTER_KEY.SHOW_MARKETS]: showMarkets,\n                [TRACKING_FILTER_KEY.SHOW_ZONES]: showZones,\n                [TRACKING_FILTER_KEY.AGENT_TRACK]: agentTrack\n            })\n        }\n    })\n)\n\nconst Tracking = enhance((props) => {\n    const {\n        location,\n        params,\n        filter,\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        agentLocation,\n        marketsLocation,\n        isOpenTrack,\n        isOpenMarkets,\n        marketData,\n        marketDataLoading,\n        layout\n    } = props\n\n    const split = 4\n    const openToggle = toBoolean(_.get(location, ['query', TOGGLE_INFO]))\n    const openDetail = !_.isEmpty(_.get(params, 'agentId'))\n    const detailId = _.toInteger(_.get(params, 'agentId'))\n    const openShopDetails = _.toInteger(_.get(location, ['query', OPEN_SHOP_DETAILS]) || ZERO) > ZERO\n\n    const showZones = toBoolean(filter.getParam(TRACKING_FILTER_KEY.SHOW_ZONES)) || false\n    const showMarkets = toBoolean(filter.getParam(TRACKING_FILTER_KEY.SHOW_MARKETS)) || false\n    const agentTrack = toBoolean(filter.getParam(TRACKING_FILTER_KEY.AGENT_TRACK)) || false\n    const date = filter.getParam(TRACKING_FILTER_KEY.DATE)\n\n    const fromDate = _.split(filter.getParam(TRACKING_FILTER_KEY.FROM_TIME), '-', split)\n    const toDate = _.split(filter.getParam(TRACKING_FILTER_KEY.TO_TIME), '-', split)\n    const fromHour = _.get(fromDate, '0') || '00'\n    const fromMinute = _.get(fromDate, '1') || '00'\n    const toHour = _.get(toDate, '0') || '23'\n    const toMinute = _.get(toDate, '1') || '59'\n\n    let currentDate = moment().format('YYYY-MM-DD')\n    if (date) {\n        currentDate = date\n    }\n    const fromTime = moment(moment(currentDate + ' ' + fromHour + ':' + fromMinute + ':00').format('YYYY-MM-DD HH:mm:ss')).toDate()\n    const toTime = moment(moment(currentDate + ' ' + toHour + ':' + toMinute + ':00').format('YYYY-MM-DD HH:mm:ss')).toDate()\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n\n    const detailData = {\n        openDetail,\n        id: detailId,\n        data: detail,\n        detailLoading\n    }\n\n    const filterForm = {\n        initialValues: {\n            agentTrack: agentTrack,\n            date: moment(currentDate).toDate(),\n            fromTime: fromTime,\n            toTime: toTime,\n            showMarkets: showMarkets,\n            showZones: showZones\n        },\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\n    }\n\n    const toggle = {\n        openToggle,\n        handleExpandInfo: props.handleExpandInfo,\n        handleCollapseInfo: props.handleCollapseInfo\n    }\n\n    const shopDetails = {\n        marketData,\n        marketDataLoading,\n        openShopDetails,\n        handleOpenShopDetails: props.handleOpenShopDetails,\n        handleCloseShopDetails: props.handleCloseShopDetails\n    }\n\n    return (\n        <Layout {...layout}>\n            <TrackingWrapper\n                filter={filter}\n                listData={listData}\n                toggle={toggle}\n                detailData={detailData}\n                shopDetails={shopDetails}\n                filterForm={filterForm}\n                agentLocation={agentLocation}\n                initialValues={filterForm.initialValues}\n                marketsLocation={marketsLocation}\n                handleOpenDetails={props.handleOpenDetails}\n                isOpenTrack={isOpenTrack}\n                isOpenMarkets={isOpenMarkets}\n            />\n        </Layout>\n    )\n})\n\nexport default Tracking\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Tracking/Tracking.js","import Tracking from './Tracking'\n\nexport {Tracking}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Tracking/index.js","import React from 'react'\nimport _ from 'lodash'\nimport sprintf from 'sprintf'\nimport moment from 'moment'\nimport {reset} from 'redux-form'\nimport {connect} from 'react-redux'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport {\n    TRANSACTION_CREATE_EXPENSE_DIALOG_OPEN,\n    TRANSACTION_CREATE_INCOME_DIALOG_OPEN,\n    TRANSACTION_UPDATE_EXPENSE_DIALOG_OPEN,\n    TRANSACTION_UPDATE_INCOME_DIALOG_OPEN,\n    TRANSACTION_CREATE_SEND_DIALOG_OPEN,\n    TRANSACTION_DELETE_DIALOG_OPEN,\n    TRANSACTION_FILTER_KEY,\n    TRANSACTION_FILTER_OPEN,\n    TRANSACTION_CASH_DIALOG_OPEN,\n    TRANSACTION_ACCEPT_DIALOG_OPEN,\n    TransactionGridList,\n    TRANSACTION_ACCEPT_CASH_DETAIL_OPEN\n} from '../../components/Transaction'\nimport {\n    transactionCreateExpenseAction,\n    transactionCreateIncomeAction,\n    transactionUpdateExpenseAction,\n    transactionUpdateIncomeAction,\n    transactionCreateSendAction,\n    transactionListFetchAction,\n    transactionDeleteAction,\n    transactionItemFetchAction,\n    acceptClientTransactionAction,\n    acceptCashListFetchAction,\n    pendingTransactionFetchAction\n} from '../../actions/transaction'\nimport {\n    cashboxListFetchAction\n} from '../../actions/cashbox'\nimport {openSnackbarAction} from '../../actions/snackbar'\n\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['transaction', 'item', 'data'])\n        const detailLoading = _.get(state, ['transaction', 'item', 'loading'])\n        const createLoading = _.get(state, ['transaction', 'create', 'loading'])\n        const updateLoading = _.get(state, ['transaction', 'update', 'loading'])\n        const list = _.get(state, ['transaction', 'list', 'data'])\n        const cashboxList = _.get(state, ['cashbox', 'list', 'data'])\n        const cashboxListLoading = _.get(state, ['cashbox', 'list', 'loading'])\n        const listLoading = _.get(state, ['transaction', 'list', 'loading'])\n        const filterForm = _.get(state, ['form', 'TransactionFilterForm'])\n        const createForm = _.get(state, ['form', 'TransactionCreateForm'])\n        const acceptForm = _.get(state, ['form', 'AcceptClientTransactionForm'])\n        const payment = _.get(state, ['cashbox', 'pending', 'data'])\n        const acceptCashData = _.get(state, ['transaction', 'acceptCash', 'data'])\n        const acceptCashLoading = _.get(state, ['transaction', 'acceptCash', 'loading'])\n        const paymentLoading = _.get(state, ['cashbox', 'pending', 'loading'])\n        const filter = filterHelper(list, pathname, query)\n        const filterCashbox = filterHelper(cashboxList, pathname, query)\n        const cashboxId = _.get(props, ['location', 'query', 'cashboxId'])\n        return {\n            list,\n            cashboxList,\n            cashboxListLoading,\n            listLoading,\n            acceptCashData,\n            acceptCashLoading,\n            detail,\n            detailLoading,\n            createLoading,\n            updateLoading,\n            filter,\n            filterForm,\n            filterCashbox,\n            paymentLoading,\n            cashboxId,\n            createForm,\n            payment,\n            acceptForm\n        }\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        return !nextProps.cashboxListLoading && _.isNil(nextProps.cashboxList)\n    }, ({dispatch, filterCashbox}) => {\n        dispatch(cashboxListFetchAction(filterCashbox))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const prevCashList = toBoolean(_.get(props, ['location', 'query', TRANSACTION_CASH_DIALOG_OPEN]))\n        const nextCashList = toBoolean(_.get(nextProps, ['location', 'query', TRANSACTION_CASH_DIALOG_OPEN]))\n        return prevCashList !== nextCashList && nextCashList === true\n    }, ({dispatch, location}) => {\n        const nextCashList = toBoolean(_.get(location, ['query', TRANSACTION_CASH_DIALOG_OPEN]))\n        nextCashList && dispatch(acceptCashListFetchAction())\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        return (props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()) ||\n            (_.get(props, ['location', 'query', 'cashboxId']) !== _.get(nextProps, ['location', 'query', 'cashboxId']))\n    }, ({dispatch, filter, location}) => {\n        const cashboxId = _.get(location, ['query', 'cashboxId'])\n        dispatch(transactionListFetchAction(filter, cashboxId))\n    }),\n\n    withHandlers({\n        handleOpenConfirmDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.TRANSACTION_ITEM_PATH, id),\n                query: filter.getParams({[TRANSACTION_DELETE_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseConfirmDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_DELETE_DIALOG_OPEN]: false})})\n        },\n        handleExpenseConfirmDialog: props => () => {\n            const {dispatch, detail, filter, location: {pathname}, cashboxId} = props\n            dispatch(transactionDeleteAction(detail.id))\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_DELETE_DIALOG_OPEN]: false})})\n                    dispatch(transactionListFetchAction(filter, cashboxId))\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\n                })\n                .catch(() => {\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\n                })\n        },\n\n        handleOpenFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_FILTER_OPEN]: true})})\n        },\n\n        handleCloseFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_FILTER_OPEN]: false})})\n        },\n\n        handleClearFilterDialog: props => () => {\n            const {location: {pathname}} = props\n            hashHistory.push({pathname, query: {}})\n        },\n\n        handleSubmitFilterDialog: props => () => {\n            const {filter, filterForm} = props\n            const fromDate = _.get(filterForm, ['values', 'date', 'fromDate']) || null\n            const toDate = _.get(filterForm, ['values', 'date', 'toDate']) || null\n            const type = _.get(filterForm, ['values', 'type', 'value']) || null\n            const categoryExpense = _.get(filterForm, ['values', 'categoryExpense', 'value']) || null\n\n            filter.filterBy({\n                [TRANSACTION_FILTER_OPEN]: false,\n                [TRANSACTION_FILTER_KEY.TYPE]: type,\n                [TRANSACTION_FILTER_KEY.CATEGORY_EXPENSE]: categoryExpense,\n                [TRANSACTION_FILTER_KEY.FROM_DATE]: fromDate && fromDate.format('YYYY-MM-DD'),\n                [TRANSACTION_FILTER_KEY.TO_DATE]: toDate && toDate.format('YYYY-MM-DD')\n            })\n        },\n\n        handleOpenCreateExpenseDialog: props => () => {\n            const {dispatch, location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_CREATE_EXPENSE_DIALOG_OPEN]: true})})\n            dispatch(reset('TransactionCreateForm'))\n        },\n\n        handleCloseCreateExpenseDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_CREATE_EXPENSE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitCreateExpenseDialog: props => () => {\n            const {dispatch, createForm, filter, location: {pathname}, cashboxId, filterCashbox} = props\n            return dispatch(transactionCreateExpenseAction(_.get(createForm, ['values']), cashboxId))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_CREATE_EXPENSE_DIALOG_OPEN]: false})})\n                    dispatch(transactionListFetchAction(filter, cashboxId))\n                    dispatch(cashboxListFetchAction(filterCashbox))\n                })\n        },\n\n        handleOpenCreateIncomeDialog: props => () => {\n            const {dispatch, location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_CREATE_INCOME_DIALOG_OPEN]: true})})\n            dispatch(reset('TransactionCreateForm'))\n        },\n\n        handleCloseCreateIncomeDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_CREATE_INCOME_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitCreateIncomeDialog: props => () => {\n            const {dispatch, createForm, filter, location: {pathname}, cashboxId, filterCashbox} = props\n            return dispatch(transactionCreateIncomeAction(_.get(createForm, ['values']), cashboxId))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_CREATE_INCOME_DIALOG_OPEN]: false})})\n                    dispatch(transactionListFetchAction(filter, cashboxId))\n                    dispatch(cashboxListFetchAction(filterCashbox))\n                })\n        },\n\n        handleOpenCreateSendDialog: props => () => {\n            const {dispatch, location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_CREATE_SEND_DIALOG_OPEN]: true})})\n            dispatch(reset('TransactionCreateForm'))\n        },\n\n        handleCloseCreateSendDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_CREATE_SEND_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitCreateSendDialog: props => () => {\n            const {dispatch, createForm, filter, location: {pathname}, filterCashbox} = props\n            const cashboxId = _.get(props, ['location', 'query', 'cashboxId'])\n            return dispatch(transactionCreateSendAction(_.get(createForm, ['values']), cashboxId))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_CREATE_SEND_DIALOG_OPEN]: false})})\n                    dispatch(transactionListFetchAction(filter, cashboxId))\n                    dispatch(cashboxListFetchAction(filterCashbox))\n                })\n        },\n\n        handleClickCashbox: props => (id) => {\n            const {location: {pathname}} = props\n            hashHistory.push({pathname, query: {'cashboxId': id}})\n        },\n\n        handleOpenUpdateDialog: props => (id, amount) => {\n            const {filter, dispatch} = props\n            const zero = 0\n            if (_.toNumber(amount) < zero) {\n                hashHistory.push({\n                    pathname: sprintf(ROUTER.TRANSACTION_ITEM_PATH, id),\n                    query: filter.getParams({[TRANSACTION_UPDATE_EXPENSE_DIALOG_OPEN]: true})\n                })\n            } else {\n                hashHistory.push({\n                    pathname: sprintf(ROUTER.TRANSACTION_ITEM_PATH, id),\n                    query: filter.getParams({[TRANSACTION_UPDATE_INCOME_DIALOG_OPEN]: true})\n                })\n            }\n            dispatch(transactionItemFetchAction(id))\n        },\n\n        handleCloseUpdateExpenseDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_UPDATE_EXPENSE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitUpdateExpenseDialog: props => () => {\n            const {dispatch, createForm, filter, cashboxId} = props\n            const transactionId = _.toInteger(_.get(props, ['params', 'transactionId']))\n            return dispatch(transactionUpdateExpenseAction(transactionId, _.get(createForm, ['values']), cashboxId))\n                .then(() => {\n                    return dispatch(transactionItemFetchAction(transactionId))\n                })\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push(filter.createURL({[TRANSACTION_UPDATE_EXPENSE_DIALOG_OPEN]: false}))\n                    dispatch(transactionListFetchAction(filter, cashboxId))\n                })\n        },\n\n        handleCloseUpdateIncomeDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_UPDATE_INCOME_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitUpdateIncomeDialog: props => () => {\n            const {dispatch, createForm, filter, cashboxId} = props\n            const transactionId = _.toInteger(_.get(props, ['params', 'transactionId']))\n            return dispatch(transactionUpdateIncomeAction(transactionId, _.get(createForm, ['values']), cashboxId))\n                .then(() => {\n                    return dispatch(transactionItemFetchAction(transactionId))\n                })\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push(filter.createURL({[TRANSACTION_UPDATE_INCOME_DIALOG_OPEN]: false}))\n                    dispatch(transactionListFetchAction(filter, cashboxId))\n                })\n        },\n\n        handleOpenCashDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_CASH_DIALOG_OPEN]: true})})\n        },\n\n        handleCloseCashDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_CASH_DIALOG_OPEN]: false, [TRANSACTION_ACCEPT_CASH_DETAIL_OPEN]: false})})\n        },\n\n        handleSubmitCashDialog: props => () => {\n            const {dispatch, createForm, filter, location: {pathname}} = props\n            const cashboxId = _.get(props, ['location', 'query', 'cashboxId'])\n            return dispatch(transactionCreateSendAction(_.get(createForm, ['values']), cashboxId))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_CASH_DIALOG_OPEN]: false})})\n                })\n        },\n        handleOpenCashBoxDialog: props => (user, currency) => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_ACCEPT_DIALOG_OPEN]: true, 'openUser': user, 'openCurrency': currency})})\n        },\n\n        handleCloseCashBoxDialog: props => () => {\n            const {location: {pathname}, filter, dispatch} = props\n            hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_ACCEPT_DIALOG_OPEN]: false})})\n            dispatch(reset('AcceptClientTransactionForm'))\n        },\n        handleSubmitCashBoxDialog: props => (amount) => {\n            const {dispatch, acceptForm, filter, location: {pathname}} = props\n            const cashboxId = _.toInteger(filter.getParam('cashboxId'))\n            const data = {\n                'currency': _.toInteger(filter.getParam('openCurrency')),\n                'agent': _.toInteger(filter.getParam('openUser')),\n                'amount': _.toNumber(amount),\n                'cashbox': _.get(acceptForm, ['values', 'cashBox', 'value'])\n            }\n            return dispatch(acceptClientTransactionAction(data))\n                .then(() => {\n                    dispatch(acceptCashListFetchAction())\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    dispatch(reset('AcceptClientTransactionForm'))\n                    cashboxId === _.toNumber(_.get(acceptForm, ['values', 'cashBox', 'value'])) && dispatch(cashboxListFetchAction(filter))\n                    dispatch(transactionListFetchAction(filter, cashboxId))\n\n                    hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_ACCEPT_DIALOG_OPEN]: false})})\n                })\n        },\n        handleOpenAcceptCashDetail: props => (user, currency) => {\n            const {filter, location: {pathname}, dispatch} = props\n            hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_ACCEPT_CASH_DETAIL_OPEN]: user + '_' + currency, 'openUser': user, 'openCurrency': currency})})\n            dispatch(pendingTransactionFetchAction(user, currency))\n        },\n        handleCloseAcceptCashDetail: props => () => {\n            const {filter, location: {pathname}} = props\n            hashHistory.push({pathname, query: filter.getParams({[TRANSACTION_ACCEPT_CASH_DETAIL_OPEN]: false})})\n        }\n\n    })\n)\n\nconst TransactionList = enhance((props) => {\n    const {\n        location,\n        list,\n        cashboxList,\n        cashboxId,\n        cashboxListLoading,\n        listLoading,\n        detail,\n        detailLoading,\n        createLoading,\n        updateLoading,\n        filter,\n        acceptCashData,\n        acceptCashLoading,\n        layout,\n        params,\n        payment,\n        paymentLoading\n    } = props\n\n    const openFilterDialog = toBoolean(_.get(location, ['query', TRANSACTION_FILTER_OPEN]))\n    const openCreateExpenseDialog = toBoolean(_.get(location, ['query', TRANSACTION_CREATE_EXPENSE_DIALOG_OPEN]))\n    const openCreateIncomeDialog = toBoolean(_.get(location, ['query', TRANSACTION_CREATE_INCOME_DIALOG_OPEN]))\n    const openUpdateExpenseDialog = toBoolean(_.get(location, ['query', TRANSACTION_UPDATE_EXPENSE_DIALOG_OPEN]))\n    const openUpdateIncomeDialog = toBoolean(_.get(location, ['query', TRANSACTION_UPDATE_INCOME_DIALOG_OPEN]))\n    const openCreateSendDialog = toBoolean(_.get(location, ['query', TRANSACTION_CREATE_SEND_DIALOG_OPEN]))\n    const openConfirmDialog = toBoolean(_.get(location, ['query', TRANSACTION_DELETE_DIALOG_OPEN]))\n    const openCashDialog = toBoolean(_.get(location, ['query', TRANSACTION_CASH_DIALOG_OPEN]))\n    const openAcceptCashDetail = (_.get(location, ['query', TRANSACTION_ACCEPT_CASH_DETAIL_OPEN]))\n    const openCashBoxDialog = toBoolean(_.get(location, ['query', TRANSACTION_ACCEPT_DIALOG_OPEN]))\n\n    const categoryExpense = _.toInteger(filter.getParam(TRANSACTION_FILTER_KEY.CATEGORY_EXPENSE))\n    const type = _.toInteger(filter.getParam(TRANSACTION_FILTER_KEY.TYPE))\n    const fromDate = filter.getParam(TRANSACTION_FILTER_KEY.FROM_DATE)\n    const toDate = filter.getParam(TRANSACTION_FILTER_KEY.TO_DATE)\n    const detailId = _.toInteger(_.get(params, 'transactionId'))\n    const currencyId = _.toInteger(filter.getParam('openCurrency'))\n    const userId = _.toInteger(filter.getParam('openUser'))\n\n    const createExpenseDialog = {\n        loading: createLoading,\n        open: openCreateExpenseDialog,\n        handleOpenDialog: props.handleOpenCreateExpenseDialog,\n        handleCloseDialog: props.handleCloseCreateExpenseDialog,\n        handleSubmitDialog: props.handleSubmitCreateExpenseDialog\n    }\n\n    const createIncomeDialog = {\n        loading: createLoading,\n        open: openCreateIncomeDialog,\n        handleOpenDialog: props.handleOpenCreateIncomeDialog,\n        handleCloseDialog: props.handleCloseCreateIncomeDialog,\n        handleSubmitDialog: props.handleSubmitCreateIncomeDialog\n    }\n\n    const acceptCashDialog = {\n        data: _.get(acceptCashData, 'results'),\n        loading: acceptCashLoading,\n        openAcceptCashDetail,\n        handleOpenAcceptCashDetail: props.handleOpenAcceptCashDetail,\n        handleCloseAcceptCashDetail: props.handleCloseAcceptCashDetail,\n        open: openCashDialog,\n        handleOpenCashDialog: props.handleOpenCashDialog,\n        handleCloseCashDialog: props.handleCloseCashDialog,\n        handleSubmitCashDialog: props.handleSubmitCashDialog,\n        userId,\n        currencyId\n    }\n    const createSendDialog = {\n        loading: createLoading,\n        open: openCreateSendDialog,\n        handleOpenDialog: props.handleOpenCreateSendDialog,\n        handleCloseDialog: props.handleCloseCreateSendDialog,\n        handleSubmitDialog: props.handleSubmitCreateSendDialog\n    }\n\n    const updateExpenseDialog = {\n        initialValues: (() => {\n            if (!detailId || openCreateExpenseDialog) {\n                return {}\n            }\n            return {\n                comment: _.get(detail, 'comment'),\n                expanseCategory: {\n                    value: _.get(detail, ['expanseCategory', 'id']),\n                    text: _.get(detail, ['expanseCategory', 'name'])\n                },\n                amount: _.get(detail, 'amount')\n            }\n        })(),\n        loading: updateLoading,\n        open: openUpdateExpenseDialog,\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\n        handleCloseUpdateDialog: props.handleCloseUpdateExpenseDialog,\n        handleSubmitUpdateDialog: props.handleSubmitUpdateExpenseDialog\n    }\n\n    const updateIncomeDialog = {\n        initialValues: (() => {\n            if (!detailId || openCreateIncomeDialog) {\n                return {}\n            }\n\n            return {\n                comment: _.get(detail, 'comment'),\n                amount: _.get(detail, 'amount')\n            }\n        })(),\n        loading: updateLoading,\n        open: openUpdateIncomeDialog,\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\n        handleCloseUpdateDialog: props.handleCloseUpdateIncomeDialog,\n        handleSubmitUpdateDialog: props.handleSubmitUpdateIncomeDialog\n    }\n\n    const confirmDialog = {\n        open: openConfirmDialog,\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\n        handleExpenseConfirmDialog: props.handleExpenseConfirmDialog\n    }\n\n    const filterDialog = {\n        initialValues: {\n            category: {\n                value: categoryExpense\n            },\n            type: {\n                value: type\n            },\n            date: {\n                fromDate: fromDate && moment(fromDate, 'YYYY-MM-DD'),\n                toDate: toDate && moment(toDate, 'YYYY-MM-DD')\n            }\n        },\n        filterLoading: false,\n        openFilterDialog,\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\n        handleClearFilterDialog: props.handleClearFilterDialog,\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\n    }\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n\n    const cashboxData = {\n        data: _.get(cashboxList, 'results'),\n        handleClickCashbox: props.handleClickCashbox,\n        cashboxId: _.toInteger(cashboxId),\n        listLoading\n\n    }\n\n    const detailData = {\n        id: detailId,\n        data: detail,\n        detailLoading\n    }\n\n    const currentCashBoxDetails = _.find(_.get(acceptCashData, ['results']), (obj) => {\n        return _.toNumber(_.get(obj, ['currency', 'id'])) === currencyId && _.toNumber(_.get(obj, ['user', 'id'])) === userId\n    })\n\n    const cashBoxDialog = {\n        openCashBoxDialog,\n        handleOpenCashBoxDialog: props.handleOpenCashBoxDialog,\n        handleCloseCashBoxDialog: props.handleCloseCashBoxDialog,\n        handleSubmitCashBoxDialog: props.handleSubmitCashBoxDialog\n    }\n    const paymentData = {\n        data: _.get(payment, 'results'),\n        paymentLoading,\n        currentCashBoxDetails\n    }\n\n    return (\n        <Layout {...layout}>\n            <TransactionGridList\n                filter={filter}\n                listData={listData}\n                cashboxListLoading={cashboxListLoading}\n                cashboxData={cashboxData}\n                detailData={detailData}\n                createExpenseDialog={createExpenseDialog}\n                createIncomeDialog={createIncomeDialog}\n                updateIncomeDialog={updateIncomeDialog}\n                updateExpenseDialog={updateExpenseDialog}\n                createSendDialog={createSendDialog}\n                confirmDialog={confirmDialog}\n                filterDialog={filterDialog}\n                paymentData={paymentData}\n                cashBoxDialog={cashBoxDialog}\n                acceptCashDialog={acceptCashDialog}\n            />\n        </Layout>\n    )\n})\n\nexport default TransactionList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Transaction/TransactionList.js","import TransactionList from './TransactionList'\n\nexport {TransactionList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Transaction/index.js","import React from 'react'\nimport _ from 'lodash'\nimport sprintf from 'sprintf'\nimport {reset} from 'redux-form'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport {connect} from 'react-redux'\nimport {hashHistory} from 'react-router'\nimport Layout from '../../components/Layout'\nimport * as ROUTER from '../../constants/routes'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport {\n    USERS_CREATE_DIALOG_OPEN,\n    USERS_UPDATE_DIALOG_OPEN,\n    USERS_DELETE_DIALOG_OPEN,\n    USERS_FILTER_KEY,\n    USERS_FILTER_OPEN,\n    UsersGridList\n} from '../../components/Users'\nimport {\n    usersCreateAction,\n    usersUpdateAction,\n    usersListFetchAction,\n    usersDeleteAction,\n    usersItemFetchAction,\n    userGroupListFetchAction\n} from '../../actions/users'\nimport {stockListFetchAction} from '../../actions/stock'\nimport {openSnackbarAction} from '../../actions/snackbar'\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const detail = _.get(state, ['users', 'item', 'data'])\n        const detailLoading = _.get(state, ['users', 'item', 'loading'])\n        const createLoading = _.get(state, ['users', 'create', 'loading'])\n        const updateLoading = _.get(state, ['users', 'update', 'loading'])\n        const list = _.get(state, ['users', 'list', 'data'])\n        const groupList = _.get(state, ['users', 'groupList', 'data'])\n        const groupListLoading = _.get(state, ['users', 'groupList', 'loading'])\n        const stockList = _.get(state, ['stock', 'list', 'data'])\n        const stockListLoading = _.get(state, ['stock', 'list', 'loading'])\n        const listLoading = _.get(state, ['users', 'list', 'loading'])\n        const filterForm = _.get(state, ['form', 'UsersFilterForm'])\n        const createForm = _.get(state, ['form', 'UsersCreateForm'])\n        const filter = filterHelper(list, pathname, query)\n\n        return {\n            list,\n            listLoading,\n            detail,\n            detailLoading,\n            createLoading,\n            updateLoading,\n            filter,\n            filterForm,\n            createForm,\n            groupList,\n            groupListLoading,\n            stockList,\n            stockListLoading\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        return props.list && props.filter.filterRequest() !== nextProps.filter.filterRequest()\n    }, ({dispatch, filter}) => {\n        dispatch(usersListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const usersId = _.get(nextProps, ['params', 'usersId'])\n        return usersId && _.get(props, ['params', 'usersId']) !== usersId\n    }, ({dispatch, params}) => {\n        const usersId = _.toInteger(_.get(params, 'usersId'))\n        usersId && dispatch(usersItemFetchAction(usersId))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const prevCreateDialog = _.get(props, ['location', 'query', USERS_CREATE_DIALOG_OPEN])\n        const nextCreateDialog = _.get(nextProps, ['location', 'query', USERS_CREATE_DIALOG_OPEN])\n        const prevUpdateDialog = _.get(props, ['location', 'query', USERS_UPDATE_DIALOG_OPEN])\n        const nextUpdateDialog = _.get(nextProps, ['location', 'query', USERS_UPDATE_DIALOG_OPEN])\n        return ((prevCreateDialog !== nextCreateDialog) || (prevUpdateDialog !== nextUpdateDialog)) &&\n            (nextCreateDialog === 'true' || nextUpdateDialog === 'true')\n    }, ({dispatch, filter}) => {\n        dispatch(userGroupListFetchAction())\n        dispatch(stockListFetchAction(filter))\n    }),\n\n    withHandlers({\n        handleActionEdit: props => () => {\n            return null\n        },\n\n        handleOpenConfirmDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.USERS_ITEM_PATH, id),\n                query: filter.getParams({[USERS_DELETE_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseConfirmDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[USERS_DELETE_DIALOG_OPEN]: false})})\n        },\n        handleSendConfirmDialog: props => () => {\n            const {dispatch, detail, filter, location: {pathname}} = props\n            dispatch(usersDeleteAction(detail.id))\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[USERS_DELETE_DIALOG_OPEN]: false})})\n                    dispatch(usersListFetchAction(filter))\n                    return dispatch(openSnackbarAction({message: 'Успешно удалено'}))\n                })\n                .catch(() => {\n                    return dispatch(openSnackbarAction({message: 'Ошибка при удалении'}))\n                })\n        },\n\n        handleOpenFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[USERS_FILTER_OPEN]: true})})\n        },\n\n        handleCloseFilterDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[USERS_FILTER_OPEN]: false})})\n        },\n\n        handleClearFilterDialog: props => () => {\n            const {location: {pathname}} = props\n            hashHistory.push({pathname, query: {}})\n        },\n\n        handleSubmitFilterDialog: props => () => {\n            const {filter, filterForm} = props\n            const manufacture = _.get(filterForm, ['values', 'manufacture', 'value']) || null\n            const group = _.get(filterForm, ['values', 'group', 'value']) || null\n\n            filter.filterBy({\n                [USERS_FILTER_OPEN]: false,\n                [USERS_FILTER_KEY.MANUFACTURE]: manufacture,\n                [USERS_FILTER_KEY.GROUP]: group\n            })\n        },\n        handleOpenDeleteDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({\n                pathname,\n                query: filter.getParams({openDeleteDialog: 'yes'})\n            })\n        },\n\n        handleCloseDeleteDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({openDeleteDialog: false})})\n        },\n\n        handleOpenCreateDialog: props => () => {\n            const {dispatch, location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[USERS_CREATE_DIALOG_OPEN]: true})})\n            dispatch(reset('UsersCreateForm'))\n        },\n\n        handleCloseCreateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[USERS_CREATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitCreateDialog: props => () => {\n            const {dispatch, createForm, filter, location: {pathname}} = props\n\n            return dispatch(usersCreateAction(_.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[USERS_CREATE_DIALOG_OPEN]: false})})\n                    dispatch(usersListFetchAction(filter))\n                })\n        },\n\n        handleOpenUpdateDialog: props => (id) => {\n            const {filter} = props\n            hashHistory.push({\n                pathname: sprintf(ROUTER.USERS_ITEM_PATH, id),\n                query: filter.getParams({[USERS_UPDATE_DIALOG_OPEN]: true})\n            })\n        },\n\n        handleCloseUpdateDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[USERS_UPDATE_DIALOG_OPEN]: false})})\n        },\n\n        handleSubmitUpdateDialog: props => () => {\n            const {dispatch, createForm, filter, location: {pathname}} = props\n            const usersId = _.toInteger(_.get(props, ['params', 'usersId']))\n            return dispatch(usersUpdateAction(usersId, _.get(createForm, ['values'])))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Успешно сохранено'}))\n                })\n                .then(() => {\n                    hashHistory.push({\n                        pathname,\n                        query: filter.getParams({[USERS_UPDATE_DIALOG_OPEN]: false, 'passErr': false})\n                    })\n                    dispatch(usersListFetchAction(filter))\n                })\n        }\n    })\n)\n\nconst UsersList = enhance((props) => {\n    const {\n        location,\n        list,\n        listLoading,\n        detail,\n        detailLoading,\n        createLoading,\n        updateLoading,\n        filter,\n        layout,\n        params,\n        groupList,\n        groupListLoading,\n        stockList,\n        stockListLoading\n    } = props\n\n    const openFilterDialog = toBoolean(_.get(location, ['query', USERS_FILTER_OPEN]))\n    const openCreateDialog = toBoolean(_.get(location, ['query', USERS_CREATE_DIALOG_OPEN]))\n    const openUpdateDialog = toBoolean(_.get(location, ['query', USERS_UPDATE_DIALOG_OPEN]))\n    const openConfirmDialog = toBoolean(_.get(location, ['query', USERS_DELETE_DIALOG_OPEN]))\n\n    const manufacture = _.toInteger(filter.getParam(USERS_FILTER_KEY.MANUFACTURE))\n    const group = _.toInteger(filter.getParam(USERS_FILTER_KEY.GROUP))\n    const detailId = _.toInteger(_.get(params, 'usersId'))\n    const showError = toBoolean(_.get(location, ['query', 'passErr']))\n\n    const actionsDialog = {\n        handleActionEdit: props.handleActionEdit,\n        handleActionDelete: props.handleOpenDeleteDialog\n    }\n\n    const errorData = {\n        errorText: 'Введены неправильные значения',\n        show: showError\n    }\n\n    const isSelectedGroups = _.map(_.get(groupList, 'results'), (obj) => {\n        const userSelectedGroups = _.find(_.get(detail, 'groups'), {'id': obj.id})\n        const userSelectedGrId = _.get(userSelectedGroups, 'id')\n        if (userSelectedGrId === obj.id) {\n            return {id: obj.id, selected: true}\n        }\n        return {id: obj.id, selected: false}\n    })\n\n    const createDialog = {\n        initialValues: (() => {\n            return {\n                groups: isSelectedGroups\n            }\n        })(),\n        createLoading,\n        openCreateDialog,\n        handleOpenCreateDialog: props.handleOpenCreateDialog,\n        handleCloseCreateDialog: props.handleCloseCreateDialog,\n        handleSubmitCreateDialog: props.handleSubmitCreateDialog,\n        errorData\n    }\n    const confirmDialog = {\n        confirmLoading: detailLoading,\n        openConfirmDialog: openConfirmDialog,\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\n        handleSendConfirmDialog: props.handleSendConfirmDialog\n    }\n    const updateDialog = {\n        initialValues: (() => {\n            if (!detail || openCreateDialog) {\n                return {}\n            }\n\n            return {\n                username: _.get(detail, 'username'),\n                firstName: _.get(detail, 'firstName'),\n                secondName: _.get(detail, 'secondName'),\n                phoneNumber: _.get(detail, 'phoneNumber'),\n                groups: isSelectedGroups,\n                region: _.get(detail, 'region'),\n                password: _.get(detail, 'password'),\n                typeUser: _.get(detail, 'typeUser'),\n                image: _.get(detail, 'image')\n            }\n        })(),\n        updateLoading: detailLoading || updateLoading,\n        openUpdateDialog,\n        handleOpenUpdateDialog: props.handleOpenUpdateDialog,\n        handleCloseUpdateDialog: props.handleCloseUpdateDialog,\n        handleSubmitUpdateDialog: props.handleSubmitUpdateDialog,\n        errorData\n    }\n    const filterDialog = {\n        initialValues: {\n            manufacture: {\n                value: manufacture\n            },\n            group: {\n                value: group\n            }\n        },\n        filterLoading: false,\n        openFilterDialog,\n        handleOpenFilterDialog: props.handleOpenFilterDialog,\n        handleCloseFilterDialog: props.handleCloseFilterDialog,\n        handleClearFilterDialog: props.handleClearFilterDialog,\n        handleSubmitFilterDialog: props.handleSubmitFilterDialog\n    }\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n    const detailData = {\n        id: detailId,\n        data: detail,\n        detailLoading\n    }\n\n    const groupListData = {\n        data: _.get(groupList, 'results'),\n        groupListLoading\n    }\n    const stockListData = {\n        data: _.get(stockList, 'results'),\n        stockListLoading\n    }\n\n    return (\n        <Layout {...layout}>\n            <UsersGridList\n                filter={filter}\n                listData={listData}\n                detailData={detailData}\n                createDialog={createDialog}\n                confirmDialog={confirmDialog}\n                updateDialog={updateDialog}\n                actionsDialog={actionsDialog}\n                filterDialog={filterDialog}\n                groupListData={groupListData}\n                stockListData={stockListData}\n            />\n        </Layout>\n    )\n})\n\nexport default UsersList\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Users/UsersList.js","import UsersList from './UsersList'\n\nexport {UsersList}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Users/index.js","import React from 'react'\nimport _ from 'lodash'\nimport {compose, withPropsOnChange, withHandlers} from 'recompose'\nimport {connect} from 'react-redux'\nimport {reset} from 'redux-form'\nimport Layout from '../../components/Layout'\nimport {hashHistory} from 'react-router'\nimport filterHelper from '../../helpers/filter'\nimport toBoolean from '../../helpers/toBoolean'\nimport ZonesWrapper from '../../components/Zones/ZonesWrapper'\nimport {ADD_ZONE, TOGGLE_INFO, BIND_AGENT, CONFIRM_DIALOG} from '../../components/Zones'\nimport {\n    zoneCreateAction,\n    zoneListFetchAction,\n    zoneListSearchFetchAction,\n    zoneStatisticsFetchAction,\n    zoneItemFetchAction,\n    zoneBindAgentAction,\n    zoneUnbindAgentAction\n} from '../../actions/zones'\nimport {openSnackbarAction} from '../../actions/snackbar'\nconst ZERO = 0\nconst enhance = compose(\n    connect((state, props) => {\n        const query = _.get(props, ['location', 'query'])\n        const pathname = _.get(props, ['location', 'pathname'])\n        const list = _.get(state, ['zone', 'list', 'data'])\n        const listLoading = _.get(state, ['zone', 'list', 'loading'])\n        const detail = _.get(state, ['zone', 'item', 'data'])\n        const detailLoading = _.get(state, ['zone', 'item', 'loading'])\n        const stat = _.get(state, ['zone', 'statistics', 'data'])\n        const statLoading = _.get(state, ['zone', 'statistics', 'loading'])\n        const createForm = _.get(state, ['form', 'ZoneCreateForm', 'values'])\n        const zoneBindForm = _.get(state, ['form', 'ZoneBindAgentForm', 'values'])\n        const bindAgentLoading = _.get(state, ['zone', 'bindAgent', 'loading'])\n        const filter = filterHelper(list, pathname, query)\n        return {\n            query,\n            pathname,\n            list,\n            listLoading,\n            stat,\n            statLoading,\n            detail,\n            detailLoading,\n            createForm,\n            zoneBindForm,\n            bindAgentLoading,\n            filter\n        }\n    }),\n    withPropsOnChange((props, nextProps) => {\n        const prevToggle = toBoolean(_.get(props, ['query', 'openInfo']))\n        const nextToggle = toBoolean(_.get(nextProps, ['query', 'openInfo']))\n        return prevToggle !== nextToggle && nextToggle === true\n    }, ({dispatch, filter}) => {\n        dispatch(zoneListFetchAction(filter))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const prevId = _.get(props, ['params', 'zoneId'])\n        const nextId = _.get(nextProps, ['params', 'zoneId'])\n        return prevId !== nextId\n    }, ({dispatch, params}) => {\n        const zoneId = _.toInteger(_.get(params, 'zoneId'))\n        if (zoneId > ZERO) {\n            dispatch(zoneItemFetchAction(zoneId))\n        }\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const prevSearch = _.get(props, ['query', 'search'])\n        const nextSearch = _.get(nextProps, ['query', 'search'])\n        return prevSearch !== nextSearch\n    }, ({dispatch, query}) => {\n        const search = _.get(query, 'search')\n        dispatch(zoneListSearchFetchAction(search))\n    }),\n\n    withPropsOnChange((props, nextProps) => {\n        const prevToggle = toBoolean(_.get(props, ['query', 'openInfo']))\n        const nextToggle = toBoolean(_.get(nextProps, ['query', 'openInfo']))\n        return prevToggle !== nextToggle && nextToggle === true\n    }, ({dispatch, filter}) => {\n        dispatch(zoneStatisticsFetchAction(filter))\n    }),\n\n    withHandlers({\n        handleOpenConfirmDialog: props => (id) => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[CONFIRM_DIALOG]: id})})\n        },\n\n        handleCloseConfirmDialog: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[CONFIRM_DIALOG]: ZERO})})\n        },\n        handleSendConfirmDialog: props => () => {\n            const {dispatch, location, location: {pathname}, filter, params} = props\n            const detailId = _.toInteger(_.get(params, 'zoneId'))\n            const agentId = _.toInteger(_.get(location, ['query', CONFIRM_DIALOG]))\n            dispatch(zoneUnbindAgentAction(detailId, agentId))\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[CONFIRM_DIALOG]: ZERO})})\n                    dispatch(zoneItemFetchAction(detailId))\n                    return dispatch(openSnackbarAction({message: 'Агент откреплен из зоны'}))\n                })\n                .catch(() => {\n                    return dispatch(openSnackbarAction({message: 'Ошибка'}))\n                })\n        },\n\n        handleExpandInfo: props => () => {\n            const {location: {pathname}, dispatch, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[TOGGLE_INFO]: true})})\n\n            return dispatch(zoneStatisticsFetchAction(filter))\n        },\n\n        handleCollapseInfo: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[TOGGLE_INFO]: false})})\n        },\n\n        handleOpenAddZone: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[ADD_ZONE]: true})})\n        },\n\n        handleCloseAddZone: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[ADD_ZONE]: false})})\n        },\n\n        handleSubmitAddZone: props => () => {\n            const {location: {pathname}, dispatch, createForm, filter} = props\n\n            return dispatch(zoneCreateAction(createForm))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Зона успешно добавлена'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[ADD_ZONE]: false})})\n                    dispatch(zoneListFetchAction(filter))\n                })\n        },\n\n        handleOpenBindAgent: props => () => {\n            const {location: {pathname}, filter, dispatch} = props\n            hashHistory.push({pathname, query: filter.getParams({[BIND_AGENT]: true})})\n            dispatch(reset('ZoneBindAgentForm'))\n        },\n\n        handleCloseBindAgent: props => () => {\n            const {location: {pathname}, filter} = props\n            hashHistory.push({pathname, query: filter.getParams({[BIND_AGENT]: false})})\n        },\n\n        handleSubmitBindAgent: props => () => {\n            const {location: {pathname}, dispatch, zoneBindForm, filter, params} = props\n            const zoneId = _.toInteger(_.get(params, 'zoneId'))\n\n            return dispatch(zoneBindAgentAction(zoneId, zoneBindForm))\n                .then(() => {\n                    return dispatch(openSnackbarAction({message: 'Агент закреплен'}))\n                })\n                .then(() => {\n                    hashHistory.push({pathname, query: filter.getParams({[BIND_AGENT]: false})})\n                    dispatch(zoneItemFetchAction(zoneId))\n                })\n        }\n    })\n)\n\nconst Zones = enhance((props) => {\n    const {\n        filter,\n        list,\n        listLoading,\n        location,\n        layout,\n        params,\n        stat,\n        statLoading,\n        detail,\n        detailLoading,\n        bindAgentLoading\n    } = props\n\n    const openAddZone = toBoolean(_.get(location, ['query', ADD_ZONE]))\n    const openBindAgent = toBoolean(_.get(location, ['query', BIND_AGENT]))\n    const openToggle = toBoolean(_.get(location, ['query', TOGGLE_INFO]))\n    const openConfirmDialog = _.toInteger(_.get(location, ['query', CONFIRM_DIALOG]) || ZERO) > ZERO\n    const openDetail = !_.isEmpty(_.get(params, 'zoneId'))\n    const detailId = _.toInteger(_.get(params, 'zoneId'))\n\n    const addZone = {\n        openAddZone,\n        handleOpenAddZone: props.handleOpenAddZone,\n        handleCloseAddZone: props.handleCloseAddZone,\n        handleSubmitAddZone: props.handleSubmitAddZone\n    }\n\n    const bindAgent = {\n        openBindAgent,\n        bindAgentLoading,\n        handleOpenBindAgent: props.handleOpenBindAgent,\n        handleCloseBindAgent: props.handleCloseBindAgent,\n        handleSubmitBindAgent: props.handleSubmitBindAgent\n    }\n\n    const unbindAgent = {\n        openConfirmDialog,\n        handleOpenConfirmDialog: props.handleOpenConfirmDialog,\n        handleCloseConfirmDialog: props.handleCloseConfirmDialog,\n        handleSendConfirmDialog: props.handleSendConfirmDialog\n    }\n\n    const listData = {\n        data: _.get(list, 'results'),\n        listLoading\n    }\n\n    const statData = {\n        data: stat,\n        statLoading\n    }\n\n    const detailData = {\n        openDetail,\n        id: detailId,\n        data: detail,\n        detailLoading\n    }\n\n    const toggle = {\n        openToggle,\n        handleExpandInfo: props.handleExpandInfo,\n        handleCollapseInfo: props.handleCollapseInfo\n    }\n\n    return (\n        <Layout {...layout}>\n            <ZonesWrapper\n                filter={filter}\n                listData={listData}\n                statData={statData}\n                addZone={addZone}\n                toggle={toggle}\n                detailData={detailData}\n                bindAgent={bindAgent}\n                unbindAgent={unbindAgent}\n            />\n        </Layout>\n    )\n})\n\nexport default Zones\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Zones/Zones.js","import Zones from './Zones'\n\nexport {Zones}\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Zones/index.js","import createReducer from './createReducer'\n\nconst createStandardReducer = (actionName) => {\n    return createReducer({\n        data: null,\n        loading: false\n    }, {\n        [actionName] (state, action) {\n            return {...state, data: action.data, loading: action.loading}\n        }\n    })\n}\n\nexport default createStandardReducer\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/createStandardReducer.js","import createReducer from './createReducer'\nimport toCamelCase from './toCamelCase'\n\nconst defaultState = {\n    data: null,\n    error: null,\n    loading: false,\n    failed: false\n}\n\nconst createThunkReducer = (actionName) => {\n    return createReducer(defaultState, {\n        [`${actionName}_PENDING`] (state, action) {\n            return {\n                ...state,\n                loading: true\n            }\n        },\n        [`${actionName}_FULFILLED`] (state, action) {\n            return {\n                ...state,\n                data: toCamelCase(action.payload),\n                error: null,\n                loading: false,\n                failed: false\n            }\n        },\n        [`${actionName}_REJECTED`] (state, action) {\n            return {\n                ...state,\n                data: null,\n                error: toCamelCase(action.payload),\n                loading: false,\n                failed: true\n            }\n        },\n        [`${actionName}_CLEAR`] () {\n            return defaultState\n        }\n    })\n}\n\nexport default createThunkReducer\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/createThunkReducer.js","const ONE = 1\nconst dealTypeFormat = (type) => {\n    return (Number(type) === ONE) ? 'Консигнация' : 'Стандартная'\n}\n\nexport default dealTypeFormat\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/dealTypeFormat.js","import _ from 'lodash'\n\nconst NOT_FOUND = -1\n\nconst excludeObjKey = (obj, keys) => {\n    return _.pickBy(obj, (value, key) => {\n        const find = _\n            .chain(keys)\n            .indexOf(key)\n            .value()\n        return find === NOT_FOUND\n    })\n}\n\nexport default excludeObjKey\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/excludeObjKey.js","import _ from 'lodash'\n\nexport default function openErrorDialog (initialState, handlers) {\n    return function reducer (state = initialState, action) {\n        if (_.has(handlers, action.type)) {\n            return handlers[action.type](state, action)\n        }\n\n        return state\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/helpers/openErrorDialog.js","import _ from 'lodash'\nimport {routerActions} from 'react-router-redux'\nimport {UserAuthWrapper as userAuthWrapper} from 'redux-auth-wrapper'\n\nexport const userIsAuth = userAuthWrapper({\n    authSelector: state => _.get(state, 'signIn'),\n    failureRedirectPath: '/sign-in',\n    redirectAction: routerActions.replace,\n    predicate: signIn => {\n        const token = _.get(signIn, 'data')\n        return !_.isEmpty(token)\n    },\n    wrapperDisplayName: 'UserIsAuthenticated'\n})\n\nexport const visibleOnlyAdmin = userAuthWrapper({\n    authSelector: state => state.user,\n    wrapperDisplayName: 'VisibleOnlyAdmin',\n    predicate: user => user.isAdmin,\n    FailureComponent: null\n})\n\n\n\n// WEBPACK FOOTER //\n// src/permissions/index.js","import * as actionTypes from '../constants/actionTypes'\nimport errorDialog from '../helpers/openErrorDialog'\n\nexport const defaultState = {\n    open: false,\n    message: 'Ошибка соединения с базой!'\n}\n\nconst errorReducer = () => {\n    return errorDialog(defaultState, {\n        [`${actionTypes.ERROR_OPEN}`] (state, {payload}) {\n            return {\n                ...state,\n                ...payload,\n                open: true\n            }\n        },\n\n        [`${actionTypes.ERROR_CLOSE}`] (state) {\n            return {\n                ...state,\n                open: false\n            }\n        }\n    })\n}\n\nexport default errorReducer\n\n\n\n// WEBPACK FOOTER //\n// src/reducers/errorReducer.js","import {reducer as formReducer} from 'redux-form'\nimport {reducer as toastrReducer} from 'react-redux-toastr'\nimport {routerReducer} from 'react-router-redux'\nimport {combineReducers} from 'redux'\nimport createThunkReducer from '../helpers/createThunkReducer'\nimport createStandardReducer from '../helpers/createStandardReducer'\nimport * as actionTypes from '../constants/actionTypes'\nimport snackbarReducer from './snackbarReducer'\nimport errorReducer from './errorReducer'\n\nconst rootReducer = combineReducers({\n    signIn: createThunkReducer(actionTypes.SIGN_IN),\n    authConfirm: createThunkReducer(actionTypes.AUTH_CONFIRM),\n    config: combineReducers({\n        primaryCurrency: createThunkReducer(actionTypes.CONFIG)\n    }),\n    shop: combineReducers({\n        create: createThunkReducer(actionTypes.SHOP_CREATE),\n        list: createThunkReducer(actionTypes.SHOP_LIST),\n        item: createThunkReducer(actionTypes.SHOP_ITEM),\n        update: createThunkReducer(actionTypes.SHOP_UPDATE),\n        image: createThunkReducer(actionTypes.SHOP_ITEM_ADD_IMAGE),\n        gallery: createThunkReducer(actionTypes.SHOP_ITEM_SHOW_IMAGE)\n    }),\n    cashbox: combineReducers({\n        create: createThunkReducer(actionTypes.CASHBOX_CREATE),\n        list: createThunkReducer(actionTypes.CASHBOX_LIST),\n        item: createThunkReducer(actionTypes.CASHBOX_ITEM),\n        update: createThunkReducer(actionTypes.CASHBOX_UPDATE),\n        pending: createThunkReducer(actionTypes.ORDER_TRANSACTION)\n    }),\n    shipment: combineReducers({\n        list: createThunkReducer(actionTypes.SHIPMENT_LIST),\n        item: createThunkReducer(actionTypes.SHIPMENT_ITEM)\n    }),\n    transaction: combineReducers({\n        create: createThunkReducer(actionTypes.TRANSACTION_CREATE),\n        list: createThunkReducer(actionTypes.TRANSACTION_LIST),\n        item: createThunkReducer(actionTypes.TRANSACTION_ITEM),\n        update: createThunkReducer(actionTypes.TRANSACTION_UPDATE),\n        acceptCash: createThunkReducer(actionTypes.TRANSACTION_ACCEPT_CASH)\n    }),\n    clientTransaction: combineReducers({\n        create: createThunkReducer(actionTypes.CLIENT_TRANSACTION_CREATE),\n        item: createThunkReducer(actionTypes.CLIENT_TRANSACTION_ITEM),\n        update: createThunkReducer(actionTypes.CLIENT_TRANSACTION_UPDATE),\n        list: createThunkReducer(actionTypes.CLIENT_TRANSACTION_LIST)\n    }),\n    supply: combineReducers({\n        create: createThunkReducer(actionTypes.SUPPLY_CREATE),\n        list: createThunkReducer(actionTypes.SUPPLY_LIST),\n        item: createThunkReducer(actionTypes.SUPPLY_ITEM),\n        update: createThunkReducer(actionTypes.SUPPLY_UPDATE),\n        defect: createThunkReducer(actionTypes.SUPPLY_DEFECT)\n    }),\n    prices: combineReducers({\n        create: createThunkReducer(actionTypes.PRICES_CREATE),\n        list: createThunkReducer(actionTypes.PRICES_LIST),\n        item: createThunkReducer(actionTypes.PRICES_ITEM),\n        update: createThunkReducer(actionTypes.PRICES_UPDATE)\n    }),\n    supplyExpense: combineReducers({\n        create: createThunkReducer(actionTypes.SUPPLY_EXPENSE_CREATE),\n        list: createThunkReducer(actionTypes.SUPPLY_EXPENSE_LIST),\n        item: createThunkReducer(actionTypes.SUPPLY_EXPENSE_ITEM),\n        update: createThunkReducer(actionTypes.SUPPLY_EXPENSE_UPDATE)\n    }),\n    order: combineReducers({\n        create: createThunkReducer(actionTypes.ORDER_CREATE),\n        list: createThunkReducer(actionTypes.ORDER_LIST),\n        listPrint: createThunkReducer(actionTypes.ORDER_LIST_PRINT),\n        payment: createThunkReducer(actionTypes.ORDER_PAYMENTS),\n        item: createThunkReducer(actionTypes.ORDER_ITEM),\n        document: createThunkReducer(actionTypes.GET_DOCUMENT),\n        return: createThunkReducer(actionTypes.ORDER_RETURN),\n        returnList: createThunkReducer(actionTypes.ORDER_RETURN_LIST),\n        update: createThunkReducer(actionTypes.ORDER_UPDATE)\n    }),\n    product: combineReducers({\n        create: createThunkReducer(actionTypes.PRODUCT_CREATE),\n        list: createThunkReducer(actionTypes.PRODUCT_LIST),\n        update: createThunkReducer(actionTypes.PRODUCT_UPDATE),\n        item: createThunkReducer(actionTypes.PRODUCT_ITEM),\n        measurement: createStandardReducer(actionTypes.PRODUCT_MEASUREMENT),\n        extra: createStandardReducer(actionTypes.PRODUCT_EXTRA)\n    }),\n    ingredient: combineReducers({\n        create: createThunkReducer(actionTypes.INGREDIENT_CREATE),\n        list: createThunkReducer(actionTypes.INGREDIENT_LIST),\n        update: createThunkReducer(actionTypes.INGREDIENT_UPDATE),\n        item: createThunkReducer(actionTypes.INGREDIENT_ITEM)\n    }),\n    productType: combineReducers({\n        create: createThunkReducer(actionTypes.PRODUCT_TYPE_CREATE),\n        list: createThunkReducer(actionTypes.PRODUCT_TYPE_H_LIST),\n        update: createThunkReducer(actionTypes.PRODUCT_TYPE_UPDATE),\n        item: createThunkReducer(actionTypes.PRODUCT_TYPE_ITEM)\n    }),\n    productPrice: combineReducers({\n        create: createThunkReducer(actionTypes.PRODUCT_PRICE_CREATE),\n        list: createThunkReducer(actionTypes.PRODUCT_PRICE_LIST),\n        update: createThunkReducer(actionTypes.PRODUCT_PRICE_UPDATE),\n        item: createThunkReducer(actionTypes.PRODUCT_PRICE_ITEM)\n    }),\n    category: combineReducers({\n        create: createThunkReducer(actionTypes.CATEGORY_CREATE),\n        list: createThunkReducer(actionTypes.CATEGORY_LIST),\n        update: createThunkReducer(actionTypes.CATEGORY_UPDATE),\n        item: createThunkReducer(actionTypes.CATEGORY_ITEM)\n    }),\n    equipment: combineReducers({\n        create: createThunkReducer(actionTypes.EQUIPMENT_CREATE),\n        list: createThunkReducer(actionTypes.EQUIPMENT_LIST),\n        update: createThunkReducer(actionTypes.EQUIPMENT_UPDATE),\n        item: createThunkReducer(actionTypes.EQUIPMENT_ITEM)\n    }),\n    stock: combineReducers({\n        create: createThunkReducer(actionTypes.STOCK_CREATE),\n        list: createThunkReducer(actionTypes.STOCK_LIST),\n        update: createThunkReducer(actionTypes.STOCK_UPDATE),\n        item: createThunkReducer(actionTypes.STOCK_ITEM)\n    }),\n    currency: combineReducers({\n        create: createThunkReducer(actionTypes.CURRENCY_CREATE),\n        list: createThunkReducer(actionTypes.CURRENCY_LIST),\n        update: createThunkReducer(actionTypes.CURRENCY_UPDATE),\n        item: createThunkReducer(actionTypes.CURRENCY_ITEM),\n        primary: createThunkReducer(actionTypes.CURRENCY_PRIMARY),\n        primaryUpdate: createThunkReducer(actionTypes.CURRENCY_PRIMARY_UPDATE)\n    }),\n    measurement: combineReducers({\n        create: createThunkReducer(actionTypes.MEASUREMENT_CREATE),\n        list: createThunkReducer(actionTypes.MEASUREMENT_LIST),\n        update: createThunkReducer(actionTypes.MEASUREMENT_UPDATE),\n        item: createThunkReducer(actionTypes.MEASUREMENT_ITEM)\n    }),\n    expensiveCategory: combineReducers({\n        create: createThunkReducer(actionTypes.EXPENSIVE_CATEGORY_CREATE),\n        list: createThunkReducer(actionTypes.EXPENSIVE_CATEGORY_LIST),\n        update: createThunkReducer(actionTypes.EXPENSIVE_CATEGORY_UPDATE),\n        item: createThunkReducer(actionTypes.EXPENSIVE_CATEGORY_ITEM)\n    }),\n    users: combineReducers({\n        create: createThunkReducer(actionTypes.USERS_CREATE),\n        list: createThunkReducer(actionTypes.USERS_LIST),\n        update: createThunkReducer(actionTypes.USERS_UPDATE),\n        item: createThunkReducer(actionTypes.USERS_ITEM),\n        groupList: createThunkReducer(actionTypes.USERS_GROUP)\n    }),\n    provider: combineReducers({\n        create: createThunkReducer(actionTypes.PROVIDER_CREATE),\n        list: createThunkReducer(actionTypes.PROVIDER_LIST),\n        update: createThunkReducer(actionTypes.PROVIDER_UPDATE),\n        item: createThunkReducer(actionTypes.PROVIDER_ITEM),\n        contacts: createStandardReducer(actionTypes.PROVIDER_CONTACTS)\n    }),\n    client: combineReducers({\n        create: createThunkReducer(actionTypes.CLIENT_CREATE),\n        list: createThunkReducer(actionTypes.CLIENT_LIST),\n        update: createThunkReducer(actionTypes.CLIENT_UPDATE),\n        item: createThunkReducer(actionTypes.CLIENT_ITEM),\n        contacts: createStandardReducer(actionTypes.CLIENT_CONTACTS)\n    }),\n    brand: combineReducers({\n        create: createThunkReducer(actionTypes.BRAND_CREATE),\n        list: createThunkReducer(actionTypes.BRAND_LIST),\n        update: createThunkReducer(actionTypes.BRAND_UPDATE),\n        item: createThunkReducer(actionTypes.BRAND_ITEM)\n    }),\n    manufacture: combineReducers({\n        create: createThunkReducer(actionTypes.MANUFACTURE_CREATE),\n        list: createThunkReducer(actionTypes.MANUFACTURE_LIST),\n        update: createThunkReducer(actionTypes.MANUFACTURE_UPDATE),\n        item: createThunkReducer(actionTypes.MANUFACTURE_ITEM)\n    }),\n    shift: combineReducers({\n        create: createThunkReducer(actionTypes.SHIFT_CREATE),\n        list: createThunkReducer(actionTypes.SHIFT_LIST),\n        update: createThunkReducer(actionTypes.SHIFT_UPDATE),\n        item: createThunkReducer(actionTypes.SHIFT_ITEM)\n    }),\n    userShift: combineReducers({\n        create: createThunkReducer(actionTypes.USER_SHIFT_CREATE),\n        list: createThunkReducer(actionTypes.USER_SHIFT_LIST),\n        update: createThunkReducer(actionTypes.USER_SHIFT_UPDATE),\n        item: createThunkReducer(actionTypes.USER_SHIFT_ITEM)\n    }),\n    notifications: combineReducers({\n        list: createThunkReducer(actionTypes.NOTIFICATIONS_LIST),\n        item: createThunkReducer(actionTypes.NOTIFICATIONS_ITEM),\n        timeInterval: createThunkReducer((actionTypes.NOTIFICATIONS_TIME_INTERVAL))\n    }),\n    pendingExpenses: combineReducers({\n        create: createThunkReducer(actionTypes.PENDING_EXPENSES_CREATE),\n        list: createThunkReducer(actionTypes.PENDING_EXPENSES_LIST),\n        update: createThunkReducer(actionTypes.PENDING_EXPENSES_UPDATE),\n        item: createThunkReducer(actionTypes.PENDING_EXPENSES_ITEM)\n    }),\n    statStock: combineReducers({\n        create: createThunkReducer(actionTypes.STATSTOCK_CREATE),\n        list: createThunkReducer(actionTypes.STATSTOCK_LIST),\n        update: createThunkReducer(actionTypes.STATSTOCK_UPDATE),\n        item: createThunkReducer(actionTypes.STATSTOCK_ITEM),\n        statStockData: createThunkReducer(actionTypes.STATSTOCK_DATA),\n        document: createThunkReducer(actionTypes.STATSTOCK_GET_DOCUMENT)\n    }),\n    remainderStock: combineReducers({\n        create: createThunkReducer(actionTypes.REMAINDER_STOCK_CREATE),\n        list: createThunkReducer(actionTypes.REMAINDER_STOCK_LIST),\n        update: createThunkReducer(actionTypes.REMAINDER_STOCK_UPDATE),\n        item: createThunkReducer(actionTypes.REMAINDER_STOCK_ITEM)\n    }),\n    transactionStock: combineReducers({\n        create: createThunkReducer(actionTypes.TRANSACTION_STOCK_CREATE),\n        list: createThunkReducer(actionTypes.TRANSACTION_STOCK_LIST),\n        update: createThunkReducer(actionTypes.TRANSACTION_STOCK_UPDATE)\n    }),\n    statDebtors: combineReducers({\n        create: createThunkReducer(actionTypes.STATDEBTORS_CREATE),\n        list: createThunkReducer(actionTypes.STATDEBTORS_LIST),\n        update: createThunkReducer(actionTypes.STATDEBTORS_UPDATE),\n        item: createThunkReducer(actionTypes.STATDEBTORS_ITEM),\n        sum: createThunkReducer(actionTypes.STATDEBTORS_SUM),\n        orderList: createThunkReducer(actionTypes.STATDEBTORS_ORDER_LIST),\n        document: createThunkReducer(actionTypes.STATDEBTORS_GET_DOCUMENT)\n    }),\n    statManufacture: combineReducers({\n        create: createThunkReducer(actionTypes.STAT_MANUFACTURE_CREATE),\n        list: createThunkReducer(actionTypes.STAT_MANUFACTURE_LIST),\n        update: createThunkReducer(actionTypes.STAT_MANUFACTURE_UPDATE),\n        item: createThunkReducer(actionTypes.STAT_MANUFACTURE_ITEM)\n    }),\n    statCashbox: combineReducers({\n        create: createThunkReducer(actionTypes.STAT_CASHBOX_CREATE),\n        list: createThunkReducer(actionTypes.STAT_CASHBOX_LIST),\n        update: createThunkReducer(actionTypes.STAT_CASHBOX_UPDATE),\n        item: createThunkReducer(actionTypes.STAT_CASHBOX_ITEM)\n    }),\n    pendingPayments: combineReducers({\n        create: createThunkReducer(actionTypes.PENDING_PAYMENTS_CREATE),\n        list: createThunkReducer(actionTypes.PENDING_PAYMENTS_LIST),\n        update: createThunkReducer(actionTypes.PENDING_PAYMENTS_UPDATE),\n        item: createThunkReducer(actionTypes.PENDING_PAYMENTS_ITEM)\n    }),\n    marketType: combineReducers({\n        create: createThunkReducer(actionTypes.MARKET_TYPE_CREATE),\n        list: createThunkReducer(actionTypes.MARKET_TYPE_LIST),\n        update: createThunkReducer(actionTypes.MARKET_TYPE_UPDATE),\n        item: createThunkReducer(actionTypes.MARKET_TYPE_ITEM)\n    }),\n    price: combineReducers({\n        list: createThunkReducer(actionTypes.PRICE_LIST),\n        item: createThunkReducer(actionTypes.PRICE_ITEM),\n        price: createThunkReducer(actionTypes.PRICE_LIST_ITEM_LIST),\n        history: createThunkReducer(actionTypes.PRICE_LIST_ITEM_HISTORY),\n        expense: createThunkReducer(actionTypes.PRICE_LIST_ITEM_EXPENSES)\n    }),\n    zone: combineReducers({\n        create: createThunkReducer(actionTypes.ZONE_CREATE),\n        list: createThunkReducer(actionTypes.ZONE_LIST),\n        update: createThunkReducer(actionTypes.ZONE_UPDATE),\n        item: createThunkReducer(actionTypes.ZONE_ITEM),\n        statistics: createThunkReducer(actionTypes.ZONE_STAT),\n        bindAgent: createThunkReducer(actionTypes.ZONE_BIND_AGENT)\n    }),\n    tracking: combineReducers({\n        list: createThunkReducer(actionTypes.TRACKING_LIST),\n        item: createThunkReducer(actionTypes.TRACKING_ITEM),\n        location: createThunkReducer(actionTypes.LOCATION_LIST),\n        markets: createThunkReducer(actionTypes.MARKETS_LOCATION)\n    }),\n    remainder: combineReducers({\n        create: createThunkReducer(actionTypes.REMAINDER_CREATE),\n        list: createThunkReducer(actionTypes.REMAINDER_LIST),\n        update: createThunkReducer(actionTypes.REMAINDER_UPDATE),\n        item: createThunkReducer(actionTypes.REMAINDER_ITEM)\n    }),\n    statAgent: combineReducers({\n        list: createThunkReducer(actionTypes.STAT_AGENT_LIST),\n        item: createThunkReducer(actionTypes.STAT_AGENT_ITEM)\n    }),\n    statProduct: combineReducers({\n        list: createThunkReducer(actionTypes.STAT_PRODUCT_LIST)\n    }),\n    statMarket: combineReducers({\n        list: createThunkReducer(actionTypes.STAT_MARKET_LIST),\n        item: createThunkReducer(actionTypes.STAT_MARKET_ITEM),\n        data: createThunkReducer(actionTypes.STAT_MARKET_DATA)\n    }),\n    statIncome: combineReducers({\n        data: createThunkReducer(actionTypes.STAT_INCOME_DATA),\n        list: createThunkReducer(actionTypes.STAT_INCOME_LIST)\n    }),\n    statOutcome: combineReducers({\n        data: createThunkReducer(actionTypes.STAT_OUTCOME_DATA),\n        list: createThunkReducer(actionTypes.STAT_OUTCOME_LIST)\n    }),\n    statisticsDebtors: combineReducers({\n        data: createThunkReducer(actionTypes.STAT_DEBTORS_DATA),\n        list: createThunkReducer(actionTypes.STAT_DEBTORS_LIST),\n        item: createThunkReducer(actionTypes.STAT_DEBTORS_ITEM)\n    }),\n    statOutcomeCategory: combineReducers({\n        list: createThunkReducer(actionTypes.STAT_OUTCOME_CATEGORY_LIST)\n    }),\n    stockReceive: combineReducers({\n        list: createThunkReducer(actionTypes.STOCK_RECEIVE_LIST),\n        history: createThunkReducer(actionTypes.STOCK_HISTORY_LIST),\n        print: createThunkReducer(actionTypes.ORDER_LIST_PRINT),\n        transfer: createThunkReducer(actionTypes.STOCK_TRANSFER_LIST),\n        transferItem: createThunkReducer(actionTypes.STOCK_TRANSFER_ITEM),\n        item: createThunkReducer(actionTypes.STOCK_RECEIVE_ITEM),\n        create: createThunkReducer(actionTypes.STOCK_RECEIVE_CREATE),\n        barcodeList: createThunkReducer(actionTypes.STOCK_BARCODE_LIST)\n    }),\n    statistics: combineReducers({\n        list: createThunkReducer(actionTypes.REMAINDER_LIST),\n        item: createThunkReducer(actionTypes.REMAINDER_ITEM)\n    }),\n    clientBalance: combineReducers({\n        create: createThunkReducer(actionTypes.CLIENT_BALANCE_CREATE),\n        list: createThunkReducer(actionTypes.CLIENT_BALANCE_LIST),\n        update: createThunkReducer(actionTypes.CLIENT_BALANCE_UPDATE),\n        item: createThunkReducer(actionTypes.CLIENT_BALANCE_ITEM)\n    }),\n    statRemainder: combineReducers({\n        list: createThunkReducer(actionTypes.STAT_REMAINDER_LIST),\n        item: createThunkReducer(actionTypes.STAT_REMAINDER_ITEM)\n    }),\n    position: combineReducers({\n        create: createThunkReducer(actionTypes.POSITION_CREATE),\n        list: createThunkReducer(actionTypes.POSITION_LIST),\n        update: createThunkReducer(actionTypes.POSITION_UPDATE),\n        item: createThunkReducer(actionTypes.POSITION_ITEM),\n        primary: createThunkReducer(actionTypes.POSITION_PRIMARY),\n        primaryUpdate: createThunkReducer(actionTypes.POSITION_PRIMARY_UPDATE)\n    }),\n    statSales: combineReducers({\n        data: createThunkReducer(actionTypes.STAT_SALES_DATA)\n    }),\n    statFinance: combineReducers({\n        dataIn: createThunkReducer(actionTypes.STAT_FINANCE_DATA_IN),\n        dataOut: createThunkReducer(actionTypes.STAT_FINANCE_DATA_OUT),\n        list: createThunkReducer(actionTypes.STAT_FINANCE_LIST)\n    }),\n    activity: combineReducers({\n        orderList: createThunkReducer(actionTypes.ACTIVITY_ORDER_LIST),\n        orderItem: createThunkReducer(actionTypes.ACTIVITY_ORDER_ITEM),\n        visitList: createThunkReducer(actionTypes.ACTIVITY_VISIT_LIST),\n        reportList: createThunkReducer(actionTypes.ACTIVITY_REPORT_LIST),\n        reportImage: createThunkReducer(actionTypes.ACTIVITY_REPORT_SHOW_IMAGE),\n        returnList: createThunkReducer(actionTypes.ACTIVITY_ORDER_RETURN_LIST),\n        paymentList: createThunkReducer(actionTypes.ACTIVITY_PAYMENT_LIST),\n        deliveryList: createThunkReducer(actionTypes.ACTIVITY_DELIVERY_LIST)\n    }),\n\n    snackbar: snackbarReducer(),\n    error: errorReducer(),\n    form: formReducer,\n    toastr: toastrReducer,\n    routing: routerReducer\n})\n\nexport default rootReducer\n\n\n\n// WEBPACK FOOTER //\n// src/reducers/index.js","import * as actionTypes from '../constants/actionTypes'\nimport createReducer from '../helpers/createReducer'\n\nexport const defaultState = {\n    open: false,\n    message: 'Message',\n    autoHideDuration: 3000\n}\n\nconst snackbarReducer = () => {\n    return createReducer(defaultState, {\n        [`${actionTypes.SNACKBAR_OPEN}`] (state, {payload}) {\n            return {\n                ...state,\n                ...payload,\n                open: true\n            }\n        },\n\n        [`${actionTypes.SNACKBAR_CLOSE}`] (state) {\n            return {\n                ...state,\n                open: false\n            }\n        }\n    })\n}\n\nexport default snackbarReducer\n\n\n\n// WEBPACK FOOTER //\n// src/reducers/snackbarReducer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../../helpers/serializer'\n\nexport const createSerializer = (data, productId) => {\n    const price = _.get(data, ['price'])\n    return {\n        price,\n        'product': productId\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'brand': _.get(defaultData, 'brand'),\n        'type': _.get(defaultData, 'type'),\n        'measurement': _.get(defaultData, 'measurement'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Product/productPriceSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n    const code = _.get(data, 'code')\n    const type = _.get(data, ['type', 'value']) || _.get(data, ['productTypeParent', 'value'])\n    const measurement = _.get(data, ['measurement', 'value'])\n    const image = _.get(data, 'image')\n    const imageId = (_.get(image, ['id'])) ? _.get(image, ['id']) : image\n\n    return {\n        name,\n        code,\n        type,\n        measurement,\n        image: imageId\n    }\n}\n\nexport const listFilterSerializer = (data, manufacture) => {\n    const {...defaultData} = data\n    const type = _.get(defaultData, 'typeChild') || _.get(defaultData, 'typeParent')\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'manufacture': manufacture,\n        'brand': _.get(defaultData, 'brand'),\n        type,\n        'measurement': _.get(defaultData, 'measurement'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Product/productSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n    const parent = _.get(data, ['parent', 'value'])\n\n    return {\n        name,\n        parent\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'name': _.get(defaultData, 'name'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Product/productTypeSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../../helpers/serializer'\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering),\n        'created_date_0': _.get(defaultData, 'fromDate'),\n        'created_date_1': _.get(defaultData, 'toDate')\n    }\n}\n\nexport const itemSerializer = (id) => {\n    return {\n        'client': id,\n        'dept': true\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Statistics/statDebtorsSerializer.js","import _ from 'lodash'\nimport moment from 'moment'\nimport {orderingSnakeCase} from '../../helpers/serializer'\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n    const firstDayOfMonth = moment().format('YYYY-MM-01')\n    const lastDay = moment().daysInMonth()\n    const lastDayOfMonth = moment().format('YYYY-MM-' + lastDay)\n\n    return {\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering),\n        'created_date_0': _.get(defaultData, 'fromDate') || firstDayOfMonth,\n        'created_date_1': _.get(defaultData, 'toDate') || lastDayOfMonth\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Statistics/statFinanceSerializer.js","import _ from 'lodash'\nimport moment from 'moment'\nimport {orderingSnakeCase} from '../../helpers/serializer'\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n    const firstDayOfMonth = moment().format('YYYY-MM-01')\n    const lastDay = moment().daysInMonth()\n    const lastDayOfMonth = moment().format('YYYY-MM-' + lastDay)\n\n    return {\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering),\n        'created_date_0': _.get(defaultData, 'fromDate') || firstDayOfMonth,\n        'created_date_1': _.get(defaultData, 'toDate') || lastDayOfMonth,\n        'type': 'in'\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Statistics/statIncomeSerializer.js","import _ from 'lodash'\nimport moment from 'moment'\nimport {orderingSnakeCase} from '../../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n\n    return {\n        name\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    const firstDayOfMonth = moment().format('YYYY-MM-01')\n    const lastDay = moment().daysInMonth()\n    const lastDayOfMonth = moment().format('YYYY-MM-' + lastDay)\n\n    return {\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering),\n        'created_date_0': _.get(defaultData, 'fromDate') || firstDayOfMonth,\n        'created_date_1': _.get(defaultData, 'toDate') || lastDayOfMonth\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Statistics/statMarketSerializer.js","import _ from 'lodash'\nimport moment from 'moment'\nimport {orderingSnakeCase} from '../../helpers/serializer'\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    const firstDayOfMonth = moment().format('YYYY-MM-01')\n    const lastDay = moment().daysInMonth()\n    const lastDayOfMonth = moment().format('YYYY-MM-' + lastDay)\n\n    return {\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering),\n        'begin_date': _.get(defaultData, 'fromDate') || firstDayOfMonth,\n        'end_date': _.get(defaultData, 'toDate') || lastDayOfMonth\n    }\n}\n\nexport const itemSerializer = (data, filterItem, id) => {\n    const {...defaultData} = data\n\n    return {\n        'user': id,\n        'page': _.get(filterItem, 'page'),\n        'page_size': _.get(filterItem, 'pageSize'),\n        'created_date_0': _.get(defaultData, 'fromDate'),\n        'created_date_1': _.get(defaultData, 'toDate')\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Statistics/statOutcomeCategorySerializer.js","import _ from 'lodash'\nimport moment from 'moment'\nimport {orderingSnakeCase} from '../../helpers/serializer'\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n    const firstDayOfMonth = moment().format('YYYY-MM-01')\n    const lastDay = moment().daysInMonth()\n    const lastDayOfMonth = moment().format('YYYY-MM-' + lastDay)\n\n    return {\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering),\n        'created_date_0': _.get(defaultData, 'fromDate') || firstDayOfMonth,\n        'created_date_1': _.get(defaultData, 'toDate') || lastDayOfMonth,\n        'type': 'out'\n\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Statistics/statOutcomeSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../../helpers/serializer'\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering),\n        'type': _.get(defaultData, 'type'),\n        'product': _.get(defaultData, 'product'),\n        'stock': _.get(defaultData, 'stock')\n    }\n}\n\nexport const itemFilterSerializer = (data) => {\n    const {...defaultData} = data\n\n    return {\n        'page': _.get(defaultData, 'dPage'),\n        'page_size': _.get(defaultData, 'dPageSize')\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Statistics/statRemainderSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../../helpers/serializer'\nimport moment from 'moment'\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n    const maxDay = 90\n    const firstDayOfMonth = moment().format('YYYY-MM-01')\n    const lastDay = moment().daysInMonth()\n    const lastDayOfMonth = moment().format('YYYY-MM-' + lastDay)\n    const urlFromDate = _.get(defaultData, 'fromDate')\n    const urlToDate = _.get(defaultData, 'toDate')\n    const fromDay = moment(urlFromDate)\n    const toDay = moment(urlToDate)\n    let type = 'day'\n    if ((_.toInteger(toDay.diff(fromDay, 'days'))) >= maxDay) {\n        type = 'month'\n    }\n\n    return {\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering),\n        'begin_date': urlFromDate || firstDayOfMonth,\n        'end_date': urlToDate || lastDayOfMonth,\n        type\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Statistics/statSalesSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../../helpers/serializer'\n\nexport const createSerializer = (data, id) => {\n    const supply = id\n    const amount = _.get(data, ['amount'])\n    const currency = _.get(data, ['currency', 'value'])\n    const comment = _.get(data, ['comment'])\n\n    return {\n        supply,\n        amount,\n        currency,\n        comment\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'provider': _.get(defaultData, 'provider'),\n        'stock': _.get(defaultData, 'stock'),\n        'created_date_0': _.get(defaultData, 'fromDate'),\n        'created_date_1': _.get(defaultData, 'toDate'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const expenseSupplySerializer = (supplyId) => {\n    return {\n        'supply': supplyId\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Supply/supplyExpenseSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../../helpers/serializer'\nimport moment from 'moment'\n\nexport const createSerializer = (data) => {\n    const provider = _.get(data, ['provider', 'value'])\n    const stock = _.get(data, ['stock', 'value'])\n    const currency = _.get(data, ['currency', 'value'])\n    const comment = _.get(data, ['comment'])\n    const contact = _.get(data, ['contact'])\n    const products = _.map(_.get(data, ['products']), (item) => {\n        const amount = _.get(item, 'amount')\n        const itemCost = _.get(item, 'cost')\n        const summary = _.toInteger(amount) * _.toInteger(itemCost)\n        const product = _.get(item, ['product', 'value', 'id'])\n        return {\n            amount: amount,\n            cost: summary,\n            product: product\n        }\n    })\n\n    return {\n        provider,\n        stock,\n        contact,\n        comment,\n        'date_delivery': moment(_.get(data, ['date_delivery'])).format('YYYY-MM-DD'),\n        currency,\n        products\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n    return {\n        'provider': _.get(defaultData, 'provider'),\n        'stock': _.get(defaultData, 'stock'),\n        'date_delivery_0': _.get(defaultData, 'deliveryFromDate'),\n        'date_delivery_1': _.get(defaultData, 'deliveryToDate'),\n        'created_date_0': _.get(defaultData, 'createdFromDate'),\n        'created_date_1': _.get(defaultData, 'createdToDate'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Supply/supplySerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../../helpers/serializer'\nimport numberWithoutSpaces from '../../helpers/numberWithoutSpaces'\n\nconst ZERO = 0\nconst ONE = 1\nconst MINUS_ONE = -1\n\nexport const createIncomeSerializer = (data, cashboxId) => {\n    const amount = _.get(data, 'amount') < ZERO ? _.get(data, 'amount') * MINUS_ONE : _.get(data, 'amount')\n    const comment = _.get(data, 'comment')\n    const clientId = _.get(data, ['client', 'value'])\n    return {\n        'amount': numberWithoutSpaces(amount),\n        comment,\n        'cashbox': cashboxId,\n        'client_id': clientId\n    }\n}\n\nexport const createExpenseSerializer = (data, cashboxId) => {\n    let amount = numberWithoutSpaces(_.get(data, 'amount'))\n    if (amount > ZERO) {\n        amount *= MINUS_ONE\n    }\n    const comment = _.get(data, 'comment')\n    const objectId = _.get(data, ['expanseCategory', 'value'])\n    const clientId = _.get(data, ['client', 'value'])\n    return {\n        amount: amount,\n        comment,\n        'cashbox': cashboxId,\n        'expanse_category': objectId,\n        'client_id': clientId\n    }\n}\n\nexport const createSendSerializer = (data, cashboxId) => {\n    const amount = _.get(data, 'amount') < ZERO ? _.get(data, 'amount') * MINUS_ONE : _.get(data, 'amount')\n    const toCashbox = _.get(data, ['categoryId', 'value'])\n    const comment = _.get(data, 'comment')\n    return {\n        amount: numberWithoutSpaces(amount),\n        'from_cashbox': cashboxId,\n        'to_cashbox': toCashbox,\n        comment\n    }\n}\n\nexport const listFilterSerializer = (data, cashbox) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n    const newCashbox = (cashbox && cashbox > ZERO) ? cashbox : null\n    const payType = _.get(defaultData, 'type')\n    const type = (payType) ? (_.toNumber(payType) === ONE) ? 'out' : 'in' : null\n    return {\n        'created_date_0': _.get(defaultData, 'fromDate'),\n        'created_date_1': _.get(defaultData, 'toDate'),\n        'type': type,\n        'cashbox': newCashbox,\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering),\n        'expanse_category': _.get(data, 'categoryExpense')\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Transaction/transactionSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n\n    return {\n        name\n    }\n}\n\nconst ZERO = 0\nexport const listFilterSerializer = (data, stock) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n    return (stock !== ZERO) ? {\n        'brand': _.get(defaultData, 'brand'),\n        'type': _.get(defaultData, 'type'),\n        'stock': stock,\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'search': _.get(defaultData, 'search'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    } : {\n        'brand': _.get(defaultData, 'brand'),\n        'type': _.get(defaultData, 'type'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Transaction/transactionStockSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../../helpers/serializer'\n\nexport const createSerializer = (data, manufacture) => {\n    const user = _.get(data, ['user', 'value'])\n    const shift = _.get(data, ['shift', 'value'])\n    return {\n        user,\n        shift,\n        manufacture\n    }\n}\n\nexport const listFilterSerializer = (data, manufacture) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        manufacture,\n        'name': _.get(defaultData, 'name'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'shift': _.get(defaultData, 'shift'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\nexport const shiftManufactureSerializer = (manufactureId) => {\n    return {\n        'manufacture': manufactureId\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Users/userShiftSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const username = _.get(data, 'username')\n    const firstName = _.get(data, 'firstName')\n    const secondName = _.get(data, 'secondName')\n    const phoneNumber = _.get(data, 'phoneNumber')\n    const image = _.get(data, 'image')\n    const password = _.get(data, 'password')\n    const isActive = _.get(data, 'isActive')\n    const groups = _.filter(_.get(data, ['groups']), (o) => {\n        return _.get(o, 'selected')\n    })\n    const newGroup = _.map(groups, (val) => {\n        return val.id\n    })\n\n    return {\n        username,\n        'first_name': firstName,\n        'second_name': secondName,\n        'phone_number': phoneNumber,\n        image,\n        password,\n        'groups': newGroup,\n        'is_active': isActive\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering') || '-id'\n    return {\n        'manufacture': _.get(defaultData, 'manufacture'),\n        'user_group': _.get(defaultData, 'group'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/Users/usersSerializer.js","import _ from 'lodash'\nimport moment from 'moment'\n\nexport const listFilterSerializer = (data, type, thumbnailType) => {\n    const TEN = 10\n    const date = _.get(data, 'date') || moment().format('YYYY-MM')\n    let day = _.get(data, 'day') || moment().format('D')\n    if (_.toInteger(day) < TEN) {\n        day = '0' + day\n    }\n    const fullDate = date + '-' + day\n\n    return {\n        'date': fullDate,\n        'type': type,\n        'thumbnail_type': thumbnailType\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/activitySerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n\n    return {\n        name\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'name': _.get(defaultData, 'name'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/brandSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n    const currency = _.get(data, ['currency', 'value'])\n    const cashier = _.get(data, ['cashier', 'value'])\n    const type = _.get(data, ['type', 'value'])\n\n    return {\n        name,\n        currency,\n        cashier,\n        type\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'name': _.get(defaultData, 'name'),\n        'cashier': _.get(defaultData, 'cashier'),\n        'type': _.get(defaultData, 'type'),\n        'created_date_0': _.get(defaultData, 'fromDate'),\n        'created_date_1': _.get(defaultData, 'toDate'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/cashboxSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data, expenseId) => {\n    const cashboxId = _.get(data, ['cashbox', 'value'])\n    const categoryId = _.get(data, ['categoryId', 'value'])\n    return {\n        'cashbox': cashboxId,\n        'expanse': expenseId,\n        'expanse_category': categoryId\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'created_date_0': _.get(defaultData, 'fromDate'),\n        'created_date_1': _.get(defaultData, 'toDate'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\nexport const itemFilterSerializer = (data, id) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'client': id,\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'dPage'),\n        'page_size': _.get(defaultData, 'dPageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/clientBalanceSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, 'name')\n    const address = _.get(data, 'address')\n    const contacts = _(data)\n        .get('contacts')\n        .filter((item) => {\n            return !_.isEmpty(item)\n        })\n\n    return {\n        name,\n        address,\n        contacts\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/clientSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\nimport numberWithoutSpaces from '../helpers/numberWithoutSpaces'\n\nconst MINUS_ONE = -1\nconst ZERO = 0\nexport const createIncomeSerializer = (data, client) => {\n    const amount = _.get(data, 'amount') < ZERO ? _.get(data, 'amount') * MINUS_ONE : _.get(data, 'amount')\n    const comment = _.get(data, 'comment')\n    const currency = _.get(data, ['currency', 'value'])\n\n    return {\n        'amount': numberWithoutSpaces(amount),\n        'comment': comment,\n        'client': client,\n        'currency': currency\n    }\n}\n\nexport const createExpenseSerializer = (data, client) => {\n    const amount = _.get(data, 'amount') > ZERO ? _.get(data, 'amount') * MINUS_ONE : _.get(data, 'amount')\n    const comment = _.get(data, 'comment')\n    const currency = _.get(data, ['currency', 'value'])\n    const category = _.get(data, ['category', 'value'])\n\n    return {\n        'amount': numberWithoutSpaces(amount),\n        'comment': comment,\n        'client': client,\n        'currency': currency,\n        'category': category\n    }\n}\n\nexport const listFilterSerializer = (data, client) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n    return {\n        'client': client,\n        'created_date_0': _.get(defaultData, 'fromDate'),\n        'created_date_1': _.get(defaultData, 'toDate'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering),\n        'expanse_category': _.get(data, 'categoryExpense')\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/clientTransactionSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const courseSerializer = (data, currency) => {\n    const rate = _.get(data, 'rate')\n\n    return {\n        rate,\n        currency\n    }\n}\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, 'name')\n    const rate = _.get(data, 'rate')\n\n    return {\n        name,\n        rate\n    }\n}\n\nexport const itemSerializer = (data, id) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n    return {\n        'currency': id,\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'name': _.get(defaultData, 'name'),\n        'page': 1,\n        'page_size': 300,\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/currencySerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, 'name')\n    const manufacture = _.get(data, ['manufacture', 'value'])\n    const image = _.get(data, 'image')\n\n    return {\n        name,\n        manufacture,\n        image\n    }\n}\n\nexport const listFilterSerializer = (data, manufacture) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'manufacture': manufacture,\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/equipmentSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n\n    return {\n        name\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'name': _.get(defaultData, 'name'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/expensiveCategorySerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data, id) => {\n    const ingredients = _.map(_.get(data, ['ingredients']), (item) => {\n        return {\n            amount: item.amount,\n            ingredient: item.ingredient.value\n        }\n    })\n    const amount = _.get(data, 'amount')\n    return {\n        'product': id,\n        'ingredients': ingredients,\n        'amount': amount\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'name': _.get(defaultData, 'name'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/ingredientSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data, manufactureId) => {\n    const product = _.get(data, ['product', 'value'])\n    const manufacture = manufactureId\n    const ingredients = _.map(_.get(data, ['ingredients']), (item) => {\n        return {\n            amount: item.amount,\n            ingredient: item.ingredient.value\n        }\n    })\n\n    return {\n        manufacture,\n        product,\n        ingredients\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'provider': _.get(defaultData, 'provider'),\n        'stock': _.get(defaultData, 'stock'),\n        'date_delivery_0': _.get(defaultData, 'fromDate'),\n        'date_delivery_1': _.get(defaultData, 'toDate'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\nexport const changeManufacture = (data) => {\n    const manufacture = _.get(data, ['manufacture', 'value'])\n\n    return {\n        'manufacture': manufacture\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/manufactureProductSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n\n    return {\n        name\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'name': _.get(defaultData, 'name'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/marketTypeSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n\n    return {\n        name\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'name': _.get(defaultData, 'name'),\n        'type': _.get(defaultData, 'type'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/measurementSerializer.js","import _ from 'lodash'\n\nexport const createSerializer = (data, detail) => {\n    const order = _.get(detail, 'id')\n    const comment = _.get(data, 'comment')\n    const dealType = _.get(data, 'dealType')\n    const returnedProducts = _.map(_.get(data, ['returned_products']), (item) => {\n        return {\n            order_product: item.product.value.id,\n            amount: item.amount,\n            cost: item.cost,\n            comment: item.comment,\n            product: item.product.value,\n            name: item.product.value.product.name\n        }\n    })\n    return {\n        order,\n        comment,\n        'dealType': dealType,\n        'returned_products': returnedProducts,\n        stock: 2\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/orderReturnSerializer.js","import _ from 'lodash'\nimport moment from 'moment'\nimport {orderingSnakeCase} from '../helpers/serializer'\nimport numberWithoutSpaces from '../helpers/numberWithoutSpaces'\n\nconst ONE = 1\nconst TWO = 2\nexport const createSerializer = (data) => {\n    const client = _.get(data, ['client', 'value'])\n    const contact = _.get(data, ['contact'])\n    const paymentType = 1\n    const paymentTerm = 1\n    const paymentDate = moment(_.get(data, ['paymentDate'])).format('YYYY-MM-DD')\n    const deliveryDate = moment(_.get(data, ['deliveryDate'])).format('YYYY-MM-DD')\n    const deliveryType = _.get(data, ['deliveryType', 'value'])\n    const deliveryPrice = numberWithoutSpaces(_.get(data, 'deliveryPrice'))\n    const discountPrice = _.get(data, 'discountPrice')\n    const requestDeadline = moment(_.get(data, ['request_dedline'])).format('YYYY-MM-DD')\n    const dealType = _.get(data, ['dealType', 'value'])\n    const market = _.get(data, ['market', 'value'])\n    const products = _.map(_.get(data, ['products']), (item) => {\n        return {\n            amount: item.amount,\n            cost: item.cost,\n            product: item.product.value\n        }\n    })\n    return {\n        client,\n        contact,\n        'date_delivery': deliveryDate,\n        'request_dedline': requestDeadline,\n        'delivery_type': deliveryType,\n        'delivery_price': deliveryPrice,\n        'discount_price': discountPrice,\n        'payment_date': paymentDate,\n        'payment_type': paymentType,\n        'payment_term': paymentTerm,\n        'deal_type': dealType,\n        market,\n        products\n    }\n}\n\nexport const listFilterSerializer = (data, id) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n    const dept = _.toInteger(_.get(defaultData, 'dept'))\n\n    const firstDayOfMonth = moment().format('YYYY-MM-01')\n    const lastDay = moment().daysInMonth()\n    const lastDayOfMonth = moment().format('YYYY-MM-' + lastDay)\n    if (id) {\n        return {\n            'id': id\n        }\n    }\n    return {\n        'id': _.get(defaultData, 'id'),\n        'client': _.get(defaultData, 'client'),\n        'zone': _.get(defaultData, 'zone'),\n        'user': _.get(defaultData, 'initiator'),\n        'dept': dept === ONE ? true : (dept === TWO ? false : null),\n        'shop': _.get(defaultData, 'shop'),\n        'dateDelivery': _.get(defaultData, 'dateDelivery'),\n        'totalCost': _.get(defaultData, 'totalCost'),\n        'totalBalance': _.get(defaultData, 'totalBalance'),\n        'orderStatus': _.get(defaultData, 'orderStatus'),\n        'created_date_0': _.get(defaultData, 'fromDate') || firstDayOfMonth,\n        'created_date_1': _.get(defaultData, 'toDate') || lastDayOfMonth,\n        'delivery_date_0': _.get(defaultData, 'deliveryFromDate'),\n        'delivery_date_1': _.get(defaultData, 'deliveryToDate'),\n        'search': _.get(defaultData, 'search'),\n\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/orderSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data, expenseId) => {\n    const cashboxId = _.get(data, ['cashbox', 'value'])\n    const categoryId = _.get(data, ['categoryId', 'value'])\n    return {\n        'cashbox': cashboxId,\n        'expanse': expenseId,\n        'expanse_category': categoryId\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'transaction': 'null',\n        'created_date_0': _.get(defaultData, 'fromDate'),\n        'created_date_1': _.get(defaultData, 'toDate'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/pendingExpensesSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\nimport numberWithoutSpaces from '../helpers/numberWithoutSpaces'\n\nexport const createSerializer = (data, order) => {\n    const amount = _.get(data, 'amount')\n    const cashbox = _.get(data, ['cashbox', 'value', 'id'])\n    const now = _.get(data, 'now') || true\n    return {\n        order,\n        'amount': numberWithoutSpaces(amount),\n        cashbox,\n        now\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'created_date_0': _.get(defaultData, 'fromDate'),\n        'created_date_1': _.get(defaultData, 'toDate'),\n        'debt': true,\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering),\n        'market': _.get(defaultData, 'market'),\n        'client': _.get(defaultData, 'client'),\n        'payment_type': _.get(defaultData, 'paymentType')\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/pendingPaymentsSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const listFilterSerializer = (data) => {\n    const ONE = 1\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'search': _.get(defaultData, 'search'),\n        'group': _.get(defaultData, 'group') || ONE,\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/planSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const courseSerializer = (data, currency) => {\n    const rate = _.get(data, 'rate')\n\n    return {\n        rate,\n        currency\n    }\n}\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, 'name')\n    const rate = _.get(data, 'rate')\n\n    return {\n        name,\n        rate\n    }\n}\n\nexport const itemSerializer = (data, id) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n    return {\n        'currency': id,\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'name': _.get(defaultData, 'name'),\n        'page': 1,\n        'page_size': 300,\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/positionSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\nimport numberWithoutSpaces from '../helpers/numberWithoutSpaces'\n\nexport const createSerializer = (data, productId) => {\n    const prices = _.get(data, 'prices')\n    const isPrimary = _.get(data, 'isPrimary')\n    const newPrices = _.map(prices, (val) => {\n        let obj = {\n            'cash_price': numberWithoutSpaces(_.get(val, 'cash_price')),\n            'market_type': _.get(val, 'market_type'),\n            'transfer_price': numberWithoutSpaces(_.get(val, 'transfer_price')),\n            'currency': _.get(val, ['currency', 'value'])\n        }\n\n        if (Number(isPrimary) === Number(obj.market_type)) {\n            obj.is_primary = true\n        }\n        return obj\n    })\n\n    return {\n        'product': productId,\n        'prices': newPrices\n    }\n}\n\nexport const listFilterSerializer = (data, manufacture) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n    return {\n        'manufacture': manufacture,\n        'brand': _.get(defaultData, 'brand'),\n        'type': _.get(defaultData, 'type'),\n        'measurement': _.get(defaultData, 'measurement'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/priceSerializer.js","import _ from 'lodash'\nimport moment from 'moment'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const beginDate = moment(_.get(data, 'beginDate')).format('YYYY-MM-DD')\n    const tillDate = moment(_.get(data, 'tillDate')).format('YYYY-MM-DD')\n    const name = _.get(data, 'name')\n    const discount = _.get(data, ['discount'])\n    const type = _.get(data, 'promotionType')\n    const products = _.map(_.get(data, ['bonusProducts']), (item) => {\n        const product = _.get(item, ['bonusProduct', 'value', 'id'])\n        const amount = _.get(item, 'bonusAmount')\n        const bonusProduct = _.get(item, ['giftProduct', 'value', 'id'])\n        const bonusAmount = _.get(item, 'giftAmount')\n        return {\n            product,\n            amount,\n            'bonus_product': bonusProduct,\n            'bonus_amount': bonusAmount\n        }\n    })\n\n    return {\n        'begin_date': beginDate,\n        'till_date': tillDate,\n        name,\n        discount,\n        products,\n        type\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n    return {\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'begin_date_0': _.get(defaultData, 'beginFromDate'),\n        'begin_date_1': _.get(defaultData, 'beginToDate'),\n        'till_date_0': _.get(defaultData, 'tillFromDate'),\n        'till_date_1': _.get(defaultData, 'tillToDate'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/pricesSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, 'name')\n    const address = _.get(data, 'address')\n    const contacts = _(data)\n        .get('contacts')\n        .filter((item) => {\n            return !_.isEmpty(item)\n        })\n\n    return {\n        name,\n        address,\n        contacts\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/providerSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\nimport moment from 'moment'\nconst ONE = 1\nconst ZERO = 0\nconst TWO = 2\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const status = (_.toInteger(_.get(defaultData, 'status')) === _.toInteger(ONE)) ? ZERO\n        : (_.toInteger(_.get(defaultData, 'status')) === _.toInteger(TWO)) ? ONE\n            : null\n    const ordering = _.get(data, 'ordering')\n    return {\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'type': _.get(defaultData, 'type'),\n        'stock': _.get(defaultData, 'stock'),\n        'status': status,\n        'searching': _.get(defaultData, 'search'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const itemFilterSerializer = (data) => {\n    const {...defaultData} = data\n\n    return {\n        'page': _.get(defaultData, 'dPage'),\n        'page_size': _.get(defaultData, 'dPageSize')\n    }\n}\nexport const transferSerializer = (data) => {\n    const fromStock = _.get(data, ['fromStock', 'value'])\n    const toStock = _.get(data, ['toStock', 'value'])\n    const comment = _.get(data, ['comment'])\n    const deliveryDate = moment(_.get(data, 'deliveryDate')).format('YYYY-MM-DD')\n    const products = _.map(_.get(data, 'products'), (item) => {\n        return {\n            amount: item.amount,\n            product: item.product.value.id,\n            isDefect: _.get(item, ['isDefect', 'id']) === ONE\n        }\n    })\n\n    return {\n        'from_stock': fromStock,\n        'to_stock': toStock,\n        'date_delivery': deliveryDate,\n        products,\n        comment\n    }\n}\n\nexport const discardSerializer = (data) => {\n    const comment = _.get(data, ['comment'])\n    const stock = _.get(data, ['fromStock', 'value'])\n    const products = _.map(_.get(data, 'products'), (item) => {\n        return {\n            amount: item.amount,\n            product: item.product.value.id,\n            isDefect: _.get(item, ['isDefect', 'id']) === ONE\n        }\n    })\n\n    return {\n        products,\n        comment,\n        stock\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/remainderSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n\n    return {\n        name\n    }\n}\n\nconst ZERO = 0\nexport const listFilterSerializer = (data, stock) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n    const newStock = (stock !== ZERO) ? stock : null\n    return {\n        'brand': _.get(defaultData, 'brand'),\n        'type': _.get(defaultData, 'type'),\n        'date_delivery_0': _.get(defaultData, 'deliveryFromDate'),\n        'date_delivery_1': _.get(defaultData, 'deliveryToDate'),\n        'stock': newStock,\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'search': _.get(defaultData, 'search'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/remainderStockSerializer.js","import _ from 'lodash'\nimport moment from 'moment'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n    const beginTime = _.get(data, ['beginTime'])\n    const endTime = _.get(data, ['endTime'])\n\n    return {\n        name,\n        'begin_time': moment(beginTime).format('HH:mm:ss'),\n        'end_time': moment(endTime).format('HH:mm:ss')\n    }\n}\n\nexport const listFilterSerializer = (data, manufacture) => {\n    const {...defaultData} = data\n\n    return {\n        'manufacture': manufacture,\n        'name': _.get(defaultData, 'name'),\n        'begin_time': _.get(defaultData, 'begin_time'),\n        'end_time': _.get(defaultData, 'end_time')\n    }\n}\nexport const shiftManufactureSerializer = (manufactureId) => {\n    return {\n        'manufacture': manufactureId\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/shiftSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n\n    return {\n        name\n    }\n}\n\nexport const listFilterSerializer = (data, manufacture) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'manufacture': manufacture,\n        'name': _.get(defaultData, 'name'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/shipmentSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nconst ONE = 1\nexport const createSerializer = (data, location, image) => {\n    const name = _.get(data, 'name')\n    const client = _.get(data, ['client', 'value'])\n    const marketType = _.get(data, ['marketType', 'value'])\n    const address = _.get(data, 'address')\n    const guide = _.get(data, 'guide')\n    const frequency = _.get(data, ['frequency', 'value'])\n    const phone = _.get(data, 'phone')\n    const status = _.get(data, ['status', 'value'])\n    const lat = _.get(location, 'lat')\n    const lon = _.get(location, 'lng')\n    const contactName = _.get(data, ['contactName'])\n    let isActive = false\n    if (status === ONE) {\n        isActive = true\n    }\n\n    return {\n        name,\n        client,\n        'market_type': marketType,\n        address,\n        guide,\n        'visit_frequency': frequency,\n        phone,\n        'contact_name': contactName,\n        'location': {\n            'lat': lat,\n            'lon': lon\n        },\n        'is_active': isActive\n    }\n}\n\nexport const updateSerializer = (data, location, image) => {\n    const name = _.get(data, 'name')\n    const client = _.get(data, 'client')\n    const marketType = _.get(data, ['marketType', 'value'])\n    const address = _.get(data, 'address')\n    const guide = _.get(data, 'guide')\n    const frequency = _.get(data, ['frequency', 'value'])\n    const phone = _.get(data, 'phone')\n    const status = _.get(data, ['status', 'value'])\n    const lat = _.get(location, 'lat')\n    const lon = _.get(location, 'lng')\n    const contactName = _.get(data, ['contactName'])\n    let isActive = false\n    if (status === ONE) {\n        isActive = true\n    }\n\n    return {\n        name,\n        client,\n        'market_type': marketType,\n        address,\n        guide,\n        'visit_frequency': frequency,\n        phone,\n        'contact_name': contactName,\n        'location': {\n            'lat': lat,\n            'lon': lon\n        },\n        'is_active': isActive\n    }\n}\n\nexport const imageSerializer = (image) => {\n    return {\n        'image': image,\n        'is_primary': false\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'client': _.get(defaultData, 'client'),\n        'created_by': _.get(defaultData, 'createdBy'),\n        'is_active': _.get(defaultData, 'isActive'),\n        'frequency': _.get(defaultData, 'frequency'),\n        'zone': _.get(defaultData, 'zone'),\n        'market_type': _.get(defaultData, 'marketType'),\n        'created_date_0': _.get(defaultData, 'fromDate'),\n        'created_date_1': _.get(defaultData, 'toDate'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/shopSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n\n    return {\n        name\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'name': _.get(defaultData, 'name'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/statCashboxSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n\n    return {\n        name\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'name': _.get(defaultData, 'name'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'created_date_0': _.get(defaultData, 'fromDate'),\n        'created_date_1': _.get(defaultData, 'toDate'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\nexport const orderListFilterSerializer = (id) => {\n    if (id === true) return {'dept': true}\n    return {'client': id}\n}\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/statDebtorsSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n\n    return {\n        name\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'name': _.get(defaultData, 'name'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/statManufactureSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n\n    return {\n        name\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/statStockSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const acceptSerializer = (id, stock) => {\n    return {\n        'order': id,\n        stock\n    }\n}\n\nexport const createSerializer = (data, detail) => {\n    const provider = _.get(detail, ['provider', 'id'])\n    const products = _.map(_.get(detail, 'products'), (item, index) => {\n        const supplyProduct = _.get(item, 'id')\n\n        return {\n            'amount': _.get(data, ['product', index, 'accepted']),\n            'defect_amount': _.get(data, ['product', index, 'defected']),\n            'supply_product': supplyProduct\n        }\n    })\n\n    const stock = _.get(detail, ['stock', 'id'])\n    const dateDelivery = _.get(detail, 'dateDelivery')\n    const contact = _.get(detail, ['contact', 'id'])\n    const currency = _.get(detail, ['currency', 'id'])\n\n    return {\n        provider,\n        products,\n        stock,\n        'date_delivery': dateDelivery,\n        contact,\n        currency\n    }\n}\n\nexport const listFilterSerializer = (data, history) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n    return {\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'search': _.get(defaultData, 'search'),\n        'type': _.get(defaultData, 'type'),\n        'stock': _.get(defaultData, 'stock'),\n        'product': _.get(defaultData, 'product'),\n        'brand': _.get(defaultData, 'brand'),\n        'product_type': _.get(defaultData, 'productType'),\n        'from_date': _.get(defaultData, 'fromDate'),\n        'to_date': _.get(defaultData, 'toDate'),\n        'ordering': ordering && orderingSnakeCase(ordering),\n        history\n\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/stockReceiveSerializer.js","import _ from 'lodash'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const createSerializer = (data) => {\n    const name = _.get(data, ['name'])\n    const manager = _.get(data, ['manager', 'value'])\n    const stockType = _.get(data, ['stockType', 'value'])\n    return {\n        name,\n        manager,\n        'stock_type': stockType\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering')\n\n    return {\n        'id': _.get(defaultData, 'id'),\n        'name': _.get(defaultData, 'name'),\n        'stockType': _.get(defaultData, 'stock_type'),\n        'manager': _.get(defaultData, 'manager'),\n        'data_created': _.get(defaultData, 'dataCreated'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\nexport const csvFilterSerializer = (data) => {\n    const {...defaultData} = listFilterSerializer(data)\n\n    return {\n        ...defaultData,\n        format: 'csv'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/stockSerializer.js","import _ from 'lodash'\nimport moment from 'moment'\nimport {orderingSnakeCase} from '../helpers/serializer'\n\nexport const agentLocationSerializer = (user, data) => {\n    const split = 4\n    const date = _.get(data, 'date')\n    const begin = _.split(_.get(data, 'beginTime'), '-', split)\n    const end = _.split(_.get(data, 'endTime'), '-', split)\n    const beginH = _.get(begin, '0')\n    const beginM = _.get(begin, '1')\n    const endH = _.get(end, '0')\n    const endM = _.get(end, '1')\n    const beginDate = moment(date + ' ' + beginH + ':' + beginM + ':00').format('YYYY-MM-DD HH:mm:ss')\n    const endDate = moment(date + ' ' + endH + ':' + endM + ':00').format('YYYY-MM-DD HH:mm:ss')\n    return {\n        'page_size': 6000,\n        date,\n        'begin_date': beginDate,\n        'end_date': endDate,\n        user\n    }\n}\n\nexport const listFilterSerializer = (data) => {\n    const {...defaultData} = data\n    const ordering = _.get(data, 'ordering') || '-id'\n    return {\n        'begin_date': _.get(defaultData, 'manufacture'),\n        'end_date': _.get(defaultData, 'group'),\n        'search': _.get(defaultData, 'search'),\n        'page': _.get(defaultData, 'page'),\n        'page_size': _.get(defaultData, 'pageSize'),\n        'ordering': ordering && orderingSnakeCase(ordering)\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/trackingSerializer.js","import _ from 'lodash'\n\nexport const createSerializer = (data) => {\n    const title = _.get(data, ['zoneName'])\n\n    return {\n        title,\n        'coordinates': {\n            'type': 'Polygon',\n            'coordinates': [[\n            ]]\n        }\n    }\n}\n\nexport const bindAgentSerializer = (data) => {\n    const agent = _.get(data, ['user', 'value'])\n\n    return {\n        'user_id': agent\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/serializers/zoneSerializer.js","var canUseDOM = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nmodule.exports = canUseDOM;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/can-use-dom/index.js\n// module id = 1396\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800&subset=cyrillic);\", \"\"]);\n\n// module\nexports.push([module.id, \".react-datepicker__input-container {\\n    width: 100%;\\n}\\ninput:-webkit-autofill {\\n    -webkit-box-shadow: 0 0 0 1000px white inset;\\n}\\n#wrapper {\\n    background: rgb(93, 100, 116);\\n}\\n\\n::-webkit-scrollbar-button {\\n    height: 0;\\n}\\n::-webkit-scrollbar-track {\\n    background: #bebebe\\n}\\n::-webkit-scrollbar-track-piece {\\n    background: #bebebe\\n}\\n::-webkit-scrollbar-thumb {\\n    background: #6c6c6c;\\n}\\n::-webkit-scrollbar {\\n    width: 4px;\\n    height: 4px;\\n}\\n* {\\n    box-sizing: border-box;\\n}\\n\\nhtml {\\n    height: 100%;\\n    width: 100%;\\n    margin: 0;\\n    padding: 0;\\n}\\n\\nbody {\\n    margin: 0;\\n    padding: 0;\\n    height: 100%;\\n    width: 100%;\\n    font-family: 'Open Sans',sans-serif !important;\\n    font-size: 13px;\\n    color: #333 !important;\\n    min-width: 1024px;\\n}\\n\\np, h1, h2, h3, h4, h5, h6 {\\n    padding: 0;\\n    margin: 0\\n}\\n\\na {\\n    font-weight: 400;\\n    text-decoration: none;\\n    color: #129fdd;\\n    cursor: pointer;\\n}\\n\\nlabel, button, input, span {\\n    font-size: 13px !important;\\n}\\n\\nul {\\n    margin: 0;\\n    padding: 0;\\n    list-style: none;\\n}\\n\\nstrong {\\n    font-weight: 600;\\n}\\n\\n.dottedList {\\n    display: flex;\\n    align-items: center;\\n    position: relative;\\n    padding: 20px 0;\\n}\\n.dottedList:after {\\n    content: \\\"\\\";\\n    background-image: url(\" + require(\"../components/Images/dot.png\") + \");\\n    position: absolute;\\n    bottom: 0;\\n    height: 2px;\\n    left: 0;\\n    right: 0;\\n}\\n\\n.dottedListSpec {\\n    width: 100%;\\n    padding: 10px 0;\\n    position: relative;\\n}\\n.dottedListSpec:last-child:after {\\n    background-image: none;\\n}\\n.dottedListSpec:after {\\n    content: \\\"\\\";\\n    background-image: url(\" + require(\"../components/Images/dot.png\") + \");\\n    position: absolute;\\n    bottom: 0;\\n    height: 2px;\\n    left: 30px;\\n    right: 30px;\\n}\\n\\nhr.lineDote {\\n    height: 2px;\\n    border: none;\\n    margin: 0;\\n    background-image: url(\" + require(\"../components/Images/dot.png\") + \");\\n}\\n.notificationText {\\n    display: block;\\n    display: -webkit-box;\\n    -webkit-line-clamp: 2;\\n    -webkit-box-orient: vertical;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n}\\n.greenFont {color:#81c784 !important;}\\n.greenFont svg {color:#81c784 !important;}\\n.redFont {color:#e57373 !important;}\\n.redFont svg {color:#e57373 !important;}\\n\\n/*Linear progress*/\\n.progress {\\n    position: absolute;\\n    left: 0;\\n    right: 0;\\n    height: 2px;\\n    display: block;\\n    background-color: #fff;\\n    overflow: hidden;\\n}\\n\\n.progress .indeterminate {\\n    background-color: #12aaeb;\\n}\\n\\n.progress .indeterminate:before {\\n    content: '';\\n    position: absolute;\\n    background-color: inherit;\\n    top: 0;\\n    left: 0;\\n    bottom: 0;\\n    will-change: left, right;\\n    -webkit-animation: indeterminate 1.5s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;\\n    animation: indeterminate 1.5s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;\\n}\\n.sendButtonWrapper {\\n    width: 40px;\\n    height: 40px;\\n    position: absolute;\\n    top: 10px;\\n    right: 0;\\n    margin-bottom: 0;\\n    border-radius: 100%;\\n    z-index: 999;\\n}\\n\\n.sendButtonWrapper ul {\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n    position: absolute;\\n    right: 40px;\\n    height: 100%;\\n    top: 50%;\\n    margin: 0;\\n    /*right: calc(100% + 10px);*/\\n    -webkit-transform: translate(0, -50%);\\n    -moz-transform: translate(0, -50%);\\n    -ms-transform: translate(0, -50%);\\n    -o-transform: translate(0, -50%);\\n    transform: translate(0, -50%);\\n\\n}\\n\\n.sendButtonWrapper ul li{\\n    width: 30px;\\n    height: 30px;\\n    margin-right: 10px;\\n    opacity: 0;\\n    position: relative;\\n    -webkit-transform: scale(0.4);\\n    -moz-transform: scale(0.4);\\n    -ms-transform: scale(0.4);\\n    -o-transform: scale(0.4);\\n    transform: scale(0.4);\\n    -webkit-transition: all 0.3s ease;\\n    -moz-transition: all 0.3s ease;\\n    -ms-transition: all 0.3s ease;\\n    -o-transition: all 0.3s ease;\\n    transition: all 0.3s ease;\\n}\\n\\n.sendButtonWrapper ul li button div {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n}\\n\\n.sendButtonWrapper:hover ul li {\\n    -webkit-transform: scale(1);\\n    -moz-transform: scale(1);\\n    -ms-transform: scale(1);\\n    -o-transform: scale(1);\\n    transform: scale(1);\\n    left: 0 !important;\\n    opacity: 1;\\n}\\n\\n.progress .indeterminate:after {\\n    content: '';\\n    position: absolute;\\n    background-color: inherit;\\n    top: 0;\\n    left: 0;\\n    bottom: 0;\\n    will-change: left, right;\\n    -webkit-animation: indeterminate-short 1.5s cubic-bezier(0.165, 0.84, 0.44, 1) infinite;\\n    animation: indeterminate-short 1.5s cubic-bezier(0.165, 0.84, 0.44, 1) infinite;\\n    -webkit-animation-delay: 1.15s;\\n    animation-delay: 1.15s;\\n}\\n.printCloseBtn {\\n    position: absolute !important;\\n    top: 5px;\\n    right: 5px;\\n}\\n.printItem {\\n    width: 100%;\\n    padding: 20px 30px;\\n    box-sizing: border-box;\\n    border-bottom: 1px solid #ccc;\\n}\\n@media print {\\n    .printCloseBtn {\\n        display: none !important;\\n    }\\n    .printItem {\\n        page-break-inside: avoid;\\n    }\\n    .printItem > div:first-child > div {\\n        margin: 0;\\n    }\\n}\\n\\n@-webkit-keyframes indeterminate {\\n    0% {\\n        left: -35%;\\n        right: 100%;\\n    }\\n    60% {\\n        left: 100%;\\n        right: -90%;\\n    }\\n    100% {\\n        left: 100%;\\n        right: -90%;\\n    }\\n}\\n\\n@keyframes indeterminate {\\n    0% {\\n        left: -35%;\\n        right: 100%;\\n    }\\n    60% {\\n        left: 100%;\\n        right: -90%;\\n    }\\n    100% {\\n        left: 100%;\\n        right: -90%;\\n    }\\n}\\n\\n@-webkit-keyframes indeterminate-short {\\n    0% {\\n        left: -200%;\\n        right: 100%;\\n    }\\n    60% {\\n        left: 107%;\\n        right: -8%;\\n    }\\n    100% {\\n        left: 107%;\\n        right: -8%;\\n    }\\n}\\n\\n@keyframes indeterminate-short {\\n    0% {\\n        left: -200%;\\n        right: 100%;\\n    }\\n    60% {\\n        left: 107%;\\n        right: -8%;\\n    }\\n    100% {\\n        left: 107%;\\n        right: -8%;\\n    }\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./src/styles/custom.css\n// module id = 1451\n// module chunks = 0","module.exports = __webpack_public_path__ + \"4d64b7437d07efdafe5210e3566e1760.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Images/Notification.png\n// module id = 1475\n// module chunks = 0","module.exports = __webpack_public_path__ + \"cc6f5b66b5630fd55a7e8f6a05dffb84.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Images/agent.png\n// module id = 1476\n// module chunks = 0","module.exports = __webpack_public_path__ + \"4643477527788dbcc923c451b2d94c2f.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Images/logo.png\n// module id = 1477\n// module chunks = 0","module.exports = __webpack_public_path__ + \"0b066a3ff2e23297bab7f3e1426b78b2.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Images/market-location.png\n// module id = 1478\n// module chunks = 0","module.exports = __webpack_public_path__ + \"8e3b13f890f179a4985d24f731c7549f.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Images/noPayment.png\n// module id = 1479\n// module chunks = 0","module.exports = __webpack_public_path__ + \"ca624f1d135dbb780f9f4c51c28b5d70.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Images/person-pin-green.png\n// module id = 1480\n// module chunks = 0","module.exports = __webpack_public_path__ + \"08c0bc0376d30d78b1f6ec98c0166a9e.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Images/person-pin-red.png\n// module id = 1481\n// module chunks = 0","/**\n * @name MarkerClustererPlus for Google Maps V3\n * @version 2.1.2 [May 28, 2014]\n * @author Gary Little\n * @fileoverview\n * The library creates and manages per-zoom-level clusters for large amounts of markers.\n * <p>\n * This is an enhanced V3 implementation of the\n * <a href=\"http://gmaps-utility-library-dev.googlecode.com/svn/tags/markerclusterer/\"\n * >V2 MarkerClusterer</a> by Xiaoxi Wu. It is based on the\n * <a href=\"http://google-maps-utility-library-v3.googlecode.com/svn/tags/markerclusterer/\"\n * >V3 MarkerClusterer</a> port by Luke Mahe. MarkerClustererPlus was created by Gary Little.\n * <p>\n * v2.0 release: MarkerClustererPlus v2.0 is backward compatible with MarkerClusterer v1.0. It\n *  adds support for the <code>ignoreHidden</code>, <code>title</code>, <code>batchSizeIE</code>,\n *  and <code>calculator</code> properties as well as support for four more events. It also allows\n *  greater control over the styling of the text that appears on the cluster marker. The\n *  documentation has been significantly improved and the overall code has been simplified and\n *  polished. Very large numbers of markers can now be managed without causing Javascript timeout\n *  errors on Internet Explorer. Note that the name of the <code>clusterclick</code> event has been\n *  deprecated. The new name is <code>click</code>, so please change your application code now.\n */\n\n/**\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * @name ClusterIconStyle\n * @class This class represents the object for values in the <code>styles</code> array passed\n *  to the {@link MarkerClusterer} constructor. The element in this array that is used to\n *  style the cluster icon is determined by calling the <code>calculator</code> function.\n *\n * @property {string} url The URL of the cluster icon image file. Required.\n * @property {number} height The display height (in pixels) of the cluster icon. Required.\n * @property {number} width The display width (in pixels) of the cluster icon. Required.\n * @property {Array} [anchorText] The position (in pixels) from the center of the cluster icon to\n *  where the text label is to be centered and drawn. The format is <code>[yoffset, xoffset]</code>\n *  where <code>yoffset</code> increases as you go down from center and <code>xoffset</code>\n *  increases to the right of center. The default is <code>[0, 0]</code>.\n * @property {Array} [anchorIcon] The anchor position (in pixels) of the cluster icon. This is the\n *  spot on the cluster icon that is to be aligned with the cluster position. The format is\n *  <code>[yoffset, xoffset]</code> where <code>yoffset</code> increases as you go down and\n *  <code>xoffset</code> increases to the right of the top-left corner of the icon. The default\n *  anchor position is the center of the cluster icon.\n * @property {string} [textColor=\"black\"] The color of the label text shown on the\n *  cluster icon.\n * @property {number} [textSize=11] The size (in pixels) of the label text shown on the\n *  cluster icon.\n * @property {string} [textDecoration=\"none\"] The value of the CSS <code>text-decoration</code>\n *  property for the label text shown on the cluster icon.\n * @property {string} [fontWeight=\"bold\"] The value of the CSS <code>font-weight</code>\n *  property for the label text shown on the cluster icon.\n * @property {string} [fontStyle=\"normal\"] The value of the CSS <code>font-style</code>\n *  property for the label text shown on the cluster icon.\n * @property {string} [fontFamily=\"Arial,sans-serif\"] The value of the CSS <code>font-family</code>\n *  property for the label text shown on the cluster icon.\n * @property {string} [backgroundPosition=\"0 0\"] The position of the cluster icon image\n *  within the image defined by <code>url</code>. The format is <code>\"xpos ypos\"</code>\n *  (the same format as for the CSS <code>background-position</code> property). You must set\n *  this property appropriately when the image defined by <code>url</code> represents a sprite\n *  containing multiple images. Note that the position <i>must</i> be specified in px units.\n */\n/**\n * @name ClusterIconInfo\n * @class This class is an object containing general information about a cluster icon. This is\n *  the object that a <code>calculator</code> function returns.\n *\n * @property {string} text The text of the label to be shown on the cluster icon.\n * @property {number} index The index plus 1 of the element in the <code>styles</code>\n *  array to be used to style the cluster icon.\n * @property {string} title The tooltip to display when the mouse moves over the cluster icon.\n *  If this value is <code>undefined</code> or <code>\"\"</code>, <code>title</code> is set to the\n *  value of the <code>title</code> property passed to the MarkerClusterer.\n */\n/**\n * A cluster icon.\n *\n * @constructor\n * @extends google.maps.OverlayView\n * @param {Cluster} cluster The cluster with which the icon is to be associated.\n * @param {Array} [styles] An array of {@link ClusterIconStyle} defining the cluster icons\n *  to use for various cluster sizes.\n * @private\n */\nfunction ClusterIcon(cluster, styles) {\n  cluster.getMarkerClusterer().extend(ClusterIcon, google.maps.OverlayView);\n\n  this.cluster_ = cluster;\n  this.className_ = cluster.getMarkerClusterer().getClusterClass();\n  this.styles_ = styles;\n  this.center_ = null;\n  this.div_ = null;\n  this.sums_ = null;\n  this.visible_ = false;\n\n  this.setMap(cluster.getMap()); // Note: this causes onAdd to be called\n}\n\n\n/**\n * Adds the icon to the DOM.\n */\nClusterIcon.prototype.onAdd = function () {\n  var cClusterIcon = this;\n  var cMouseDownInCluster;\n  var cDraggingMapByCluster;\n\n  this.div_ = document.createElement(\"div\");\n  this.div_.className = this.className_;\n  if (this.visible_) {\n    this.show();\n  }\n\n  this.getPanes().overlayMouseTarget.appendChild(this.div_);\n\n  // Fix for Issue 157\n  this.boundsChangedListener_ = google.maps.event.addListener(this.getMap(), \"bounds_changed\", function () {\n    cDraggingMapByCluster = cMouseDownInCluster;\n  });\n\n  google.maps.event.addDomListener(this.div_, \"mousedown\", function () {\n    cMouseDownInCluster = true;\n    cDraggingMapByCluster = false;\n  });\n\n  google.maps.event.addDomListener(this.div_, \"click\", function (e) {\n    cMouseDownInCluster = false;\n    if (!cDraggingMapByCluster) {\n      var theBounds;\n      var mz;\n      var mc = cClusterIcon.cluster_.getMarkerClusterer();\n      /**\n       * This event is fired when a cluster marker is clicked.\n       * @name MarkerClusterer#click\n       * @param {Cluster} c The cluster that was clicked.\n       * @event\n       */\n      google.maps.event.trigger(mc, \"click\", cClusterIcon.cluster_);\n      google.maps.event.trigger(mc, \"clusterclick\", cClusterIcon.cluster_); // deprecated name\n\n      // The default click handler follows. Disable it by setting\n      // the zoomOnClick property to false.\n      if (mc.getZoomOnClick()) {\n        // Zoom into the cluster.\n        mz = mc.getMaxZoom();\n        theBounds = cClusterIcon.cluster_.getBounds();\n        mc.getMap().fitBounds(theBounds);\n        // There is a fix for Issue 170 here:\n        setTimeout(function () {\n          mc.getMap().fitBounds(theBounds);\n          // Don't zoom beyond the max zoom level\n          if (mz !== null && (mc.getMap().getZoom() > mz)) {\n            mc.getMap().setZoom(mz + 1);\n          }\n        }, 100);\n      }\n\n      // Prevent event propagation to the map:\n      e.cancelBubble = true;\n      if (e.stopPropagation) {\n        e.stopPropagation();\n      }\n    }\n  });\n\n  google.maps.event.addDomListener(this.div_, \"mouseover\", function () {\n    var mc = cClusterIcon.cluster_.getMarkerClusterer();\n    /**\n     * This event is fired when the mouse moves over a cluster marker.\n     * @name MarkerClusterer#mouseover\n     * @param {Cluster} c The cluster that the mouse moved over.\n     * @event\n     */\n    google.maps.event.trigger(mc, \"mouseover\", cClusterIcon.cluster_);\n  });\n\n  google.maps.event.addDomListener(this.div_, \"mouseout\", function () {\n    var mc = cClusterIcon.cluster_.getMarkerClusterer();\n    /**\n     * This event is fired when the mouse moves out of a cluster marker.\n     * @name MarkerClusterer#mouseout\n     * @param {Cluster} c The cluster that the mouse moved out of.\n     * @event\n     */\n    google.maps.event.trigger(mc, \"mouseout\", cClusterIcon.cluster_);\n  });\n};\n\n\n/**\n * Removes the icon from the DOM.\n */\nClusterIcon.prototype.onRemove = function () {\n  if (this.div_ && this.div_.parentNode) {\n    this.hide();\n    google.maps.event.removeListener(this.boundsChangedListener_);\n    google.maps.event.clearInstanceListeners(this.div_);\n    this.div_.parentNode.removeChild(this.div_);\n    this.div_ = null;\n  }\n};\n\n\n/**\n * Draws the icon.\n */\nClusterIcon.prototype.draw = function () {\n  if (this.visible_) {\n    var pos = this.getPosFromLatLng_(this.center_);\n    this.div_.style.top = pos.y + \"px\";\n    this.div_.style.left = pos.x + \"px\";\n  }\n};\n\n\n/**\n * Hides the icon.\n */\nClusterIcon.prototype.hide = function () {\n  if (this.div_) {\n    this.div_.style.display = \"none\";\n  }\n  this.visible_ = false;\n};\n\n\n/**\n * Positions and shows the icon.\n */\nClusterIcon.prototype.show = function () {\n  if (this.div_) {\n    var img = \"\";\n    // NOTE: values must be specified in px units\n    var bp = this.backgroundPosition_.split(\" \");\n    var spriteH = parseInt(bp[0].replace(/^\\s+|\\s+$/g, \"\"), 10);\n    var spriteV = parseInt(bp[1].replace(/^\\s+|\\s+$/g, \"\"), 10);\n    var pos = this.getPosFromLatLng_(this.center_);\n    this.div_.style.cssText = this.createCss(pos);\n    img = \"<img src='\" + this.url_ + \"' style='position: absolute; top: \" + spriteV + \"px; left: \" + spriteH + \"px; \";\n    if (!this.cluster_.getMarkerClusterer().enableRetinaIcons_) {\n      img += \"clip: rect(\" + (-1 * spriteV) + \"px, \" + ((-1 * spriteH) + this.width_) + \"px, \" +\n          ((-1 * spriteV) + this.height_) + \"px, \" + (-1 * spriteH) + \"px);\";\n    }\n    img += \"'>\";\n    this.div_.innerHTML = img + \"<div style='\" +\n        \"position: absolute;\" +\n        \"top: \" + this.anchorText_[0] + \"px;\" +\n        \"left: \" + this.anchorText_[1] + \"px;\" +\n        \"color: \" + this.textColor_ + \";\" +\n        \"font-size: \" + this.textSize_ + \"px;\" +\n        \"font-family: \" + this.fontFamily_ + \";\" +\n        \"font-weight: \" + this.fontWeight_ + \";\" +\n        \"font-style: \" + this.fontStyle_ + \";\" +\n        \"text-decoration: \" + this.textDecoration_ + \";\" +\n        \"text-align: center;\" +\n        \"width: \" + this.width_ + \"px;\" +\n        \"line-height:\" + this.height_ + \"px;\" +\n        \"'>\" + this.sums_.text + \"</div>\";\n    if (typeof this.sums_.title === \"undefined\" || this.sums_.title === \"\") {\n      this.div_.title = this.cluster_.getMarkerClusterer().getTitle();\n    } else {\n      this.div_.title = this.sums_.title;\n    }\n    this.div_.style.display = \"\";\n  }\n  this.visible_ = true;\n};\n\n\n/**\n * Sets the icon styles to the appropriate element in the styles array.\n *\n * @param {ClusterIconInfo} sums The icon label text and styles index.\n */\nClusterIcon.prototype.useStyle = function (sums) {\n  this.sums_ = sums;\n  var index = Math.max(0, sums.index - 1);\n  index = Math.min(this.styles_.length - 1, index);\n  var style = this.styles_[index];\n  this.url_ = style.url;\n  this.height_ = style.height;\n  this.width_ = style.width;\n  this.anchorText_ = style.anchorText || [0, 0];\n  this.anchorIcon_ = style.anchorIcon || [parseInt(this.height_ / 2, 10), parseInt(this.width_ / 2, 10)];\n  this.textColor_ = style.textColor || \"black\";\n  this.textSize_ = style.textSize || 11;\n  this.textDecoration_ = style.textDecoration || \"none\";\n  this.fontWeight_ = style.fontWeight || \"bold\";\n  this.fontStyle_ = style.fontStyle || \"normal\";\n  this.fontFamily_ = style.fontFamily || \"Arial,sans-serif\";\n  this.backgroundPosition_ = style.backgroundPosition || \"0 0\";\n};\n\n\n/**\n * Sets the position at which to center the icon.\n *\n * @param {google.maps.LatLng} center The latlng to set as the center.\n */\nClusterIcon.prototype.setCenter = function (center) {\n  this.center_ = center;\n};\n\n\n/**\n * Creates the cssText style parameter based on the position of the icon.\n *\n * @param {google.maps.Point} pos The position of the icon.\n * @return {string} The CSS style text.\n */\nClusterIcon.prototype.createCss = function (pos) {\n  var style = [];\n  style.push(\"cursor: pointer;\");\n  style.push(\"position: absolute; top: \" + pos.y + \"px; left: \" + pos.x + \"px;\");\n  style.push(\"width: \" + this.width_ + \"px; height: \" + this.height_ + \"px;\");\n  return style.join(\"\");\n};\n\n\n/**\n * Returns the position at which to place the DIV depending on the latlng.\n *\n * @param {google.maps.LatLng} latlng The position in latlng.\n * @return {google.maps.Point} The position in pixels.\n */\nClusterIcon.prototype.getPosFromLatLng_ = function (latlng) {\n  var pos = this.getProjection().fromLatLngToDivPixel(latlng);\n  pos.x -= this.anchorIcon_[1];\n  pos.y -= this.anchorIcon_[0];\n  pos.x = parseInt(pos.x, 10);\n  pos.y = parseInt(pos.y, 10);\n  return pos;\n};\n\n\n/**\n * Creates a single cluster that manages a group of proximate markers.\n *  Used internally, do not call this constructor directly.\n * @constructor\n * @param {MarkerClusterer} mc The <code>MarkerClusterer</code> object with which this\n *  cluster is associated.\n */\nfunction Cluster(mc) {\n  this.markerClusterer_ = mc;\n  this.map_ = mc.getMap();\n  this.gridSize_ = mc.getGridSize();\n  this.minClusterSize_ = mc.getMinimumClusterSize();\n  this.averageCenter_ = mc.getAverageCenter();\n  this.markers_ = [];\n  this.center_ = null;\n  this.bounds_ = null;\n  this.clusterIcon_ = new ClusterIcon(this, mc.getStyles());\n}\n\n\n/**\n * Returns the number of markers managed by the cluster. You can call this from\n * a <code>click</code>, <code>mouseover</code>, or <code>mouseout</code> event handler\n * for the <code>MarkerClusterer</code> object.\n *\n * @return {number} The number of markers in the cluster.\n */\nCluster.prototype.getSize = function () {\n  return this.markers_.length;\n};\n\n\n/**\n * Returns the array of markers managed by the cluster. You can call this from\n * a <code>click</code>, <code>mouseover</code>, or <code>mouseout</code> event handler\n * for the <code>MarkerClusterer</code> object.\n *\n * @return {Array} The array of markers in the cluster.\n */\nCluster.prototype.getMarkers = function () {\n  return this.markers_;\n};\n\n\n/**\n * Returns the center of the cluster. You can call this from\n * a <code>click</code>, <code>mouseover</code>, or <code>mouseout</code> event handler\n * for the <code>MarkerClusterer</code> object.\n *\n * @return {google.maps.LatLng} The center of the cluster.\n */\nCluster.prototype.getCenter = function () {\n  return this.center_;\n};\n\n\n/**\n * Returns the map with which the cluster is associated.\n *\n * @return {google.maps.Map} The map.\n * @ignore\n */\nCluster.prototype.getMap = function () {\n  return this.map_;\n};\n\n\n/**\n * Returns the <code>MarkerClusterer</code> object with which the cluster is associated.\n *\n * @return {MarkerClusterer} The associated marker clusterer.\n * @ignore\n */\nCluster.prototype.getMarkerClusterer = function () {\n  return this.markerClusterer_;\n};\n\n\n/**\n * Returns the bounds of the cluster.\n *\n * @return {google.maps.LatLngBounds} the cluster bounds.\n * @ignore\n */\nCluster.prototype.getBounds = function () {\n  var i;\n  var bounds = new google.maps.LatLngBounds(this.center_, this.center_);\n  var markers = this.getMarkers();\n  for (i = 0; i < markers.length; i++) {\n    bounds.extend(markers[i].getPosition());\n  }\n  return bounds;\n};\n\n\n/**\n * Removes the cluster from the map.\n *\n * @ignore\n */\nCluster.prototype.remove = function () {\n  this.clusterIcon_.setMap(null);\n  this.markers_ = [];\n  delete this.markers_;\n};\n\n\n/**\n * Adds a marker to the cluster.\n *\n * @param {google.maps.Marker} marker The marker to be added.\n * @return {boolean} True if the marker was added.\n * @ignore\n */\nCluster.prototype.addMarker = function (marker) {\n  var i;\n  var mCount;\n  var mz;\n\n  if (this.isMarkerAlreadyAdded_(marker)) {\n    return false;\n  }\n\n  if (!this.center_) {\n    this.center_ = marker.getPosition();\n    this.calculateBounds_();\n  } else {\n    if (this.averageCenter_) {\n      var l = this.markers_.length + 1;\n      var lat = (this.center_.lat() * (l - 1) + marker.getPosition().lat()) / l;\n      var lng = (this.center_.lng() * (l - 1) + marker.getPosition().lng()) / l;\n      this.center_ = new google.maps.LatLng(lat, lng);\n      this.calculateBounds_();\n    }\n  }\n\n  marker.isAdded = true;\n  this.markers_.push(marker);\n\n  mCount = this.markers_.length;\n  mz = this.markerClusterer_.getMaxZoom();\n  if (mz !== null && this.map_.getZoom() > mz) {\n    // Zoomed in past max zoom, so show the marker.\n    if (marker.getMap() !== this.map_) {\n      marker.setMap(this.map_);\n    }\n  } else if (mCount < this.minClusterSize_) {\n    // Min cluster size not reached so show the marker.\n    if (marker.getMap() !== this.map_) {\n      marker.setMap(this.map_);\n    }\n  } else if (mCount === this.minClusterSize_) {\n    // Hide the markers that were showing.\n    for (i = 0; i < mCount; i++) {\n      this.markers_[i].setMap(null);\n    }\n  } else {\n    marker.setMap(null);\n  }\n\n  this.updateIcon_();\n  return true;\n};\n\n\n/**\n * Determines if a marker lies within the cluster's bounds.\n *\n * @param {google.maps.Marker} marker The marker to check.\n * @return {boolean} True if the marker lies in the bounds.\n * @ignore\n */\nCluster.prototype.isMarkerInClusterBounds = function (marker) {\n  return this.bounds_.contains(marker.getPosition());\n};\n\n\n/**\n * Calculates the extended bounds of the cluster with the grid.\n */\nCluster.prototype.calculateBounds_ = function () {\n  var bounds = new google.maps.LatLngBounds(this.center_, this.center_);\n  this.bounds_ = this.markerClusterer_.getExtendedBounds(bounds);\n};\n\n\n/**\n * Updates the cluster icon.\n */\nCluster.prototype.updateIcon_ = function () {\n  var mCount = this.markers_.length;\n  var mz = this.markerClusterer_.getMaxZoom();\n\n  if (mz !== null && this.map_.getZoom() > mz) {\n    this.clusterIcon_.hide();\n    return;\n  }\n\n  if (mCount < this.minClusterSize_) {\n    // Min cluster size not yet reached.\n    this.clusterIcon_.hide();\n    return;\n  }\n\n  var numStyles = this.markerClusterer_.getStyles().length;\n  var sums = this.markerClusterer_.getCalculator()(this.markers_, numStyles);\n  this.clusterIcon_.setCenter(this.center_);\n  this.clusterIcon_.useStyle(sums);\n  this.clusterIcon_.show();\n};\n\n\n/**\n * Determines if a marker has already been added to the cluster.\n *\n * @param {google.maps.Marker} marker The marker to check.\n * @return {boolean} True if the marker has already been added.\n */\nCluster.prototype.isMarkerAlreadyAdded_ = function (marker) {\n  var i;\n  if (this.markers_.indexOf) {\n    return this.markers_.indexOf(marker) !== -1;\n  } else {\n    for (i = 0; i < this.markers_.length; i++) {\n      if (marker === this.markers_[i]) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * @name MarkerClustererOptions\n * @class This class represents the optional parameter passed to\n *  the {@link MarkerClusterer} constructor.\n * @property {number} [gridSize=60] The grid size of a cluster in pixels. The grid is a square.\n * @property {number} [maxZoom=null] The maximum zoom level at which clustering is enabled or\n *  <code>null</code> if clustering is to be enabled at all zoom levels.\n * @property {boolean} [zoomOnClick=true] Whether to zoom the map when a cluster marker is\n *  clicked. You may want to set this to <code>false</code> if you have installed a handler\n *  for the <code>click</code> event and it deals with zooming on its own.\n * @property {boolean} [averageCenter=false] Whether the position of a cluster marker should be\n *  the average position of all markers in the cluster. If set to <code>false</code>, the\n *  cluster marker is positioned at the location of the first marker added to the cluster.\n * @property {number} [minimumClusterSize=2] The minimum number of markers needed in a cluster\n *  before the markers are hidden and a cluster marker appears.\n * @property {boolean} [ignoreHidden=false] Whether to ignore hidden markers in clusters. You\n *  may want to set this to <code>true</code> to ensure that hidden markers are not included\n *  in the marker count that appears on a cluster marker (this count is the value of the\n *  <code>text</code> property of the result returned by the default <code>calculator</code>).\n *  If set to <code>true</code> and you change the visibility of a marker being clustered, be\n *  sure to also call <code>MarkerClusterer.repaint()</code>.\n * @property {string} [title=\"\"] The tooltip to display when the mouse moves over a cluster\n *  marker. (Alternatively, you can use a custom <code>calculator</code> function to specify a\n *  different tooltip for each cluster marker.)\n * @property {function} [calculator=MarkerClusterer.CALCULATOR] The function used to determine\n *  the text to be displayed on a cluster marker and the index indicating which style to use\n *  for the cluster marker. The input parameters for the function are (1) the array of markers\n *  represented by a cluster marker and (2) the number of cluster icon styles. It returns a\n *  {@link ClusterIconInfo} object. The default <code>calculator</code> returns a\n *  <code>text</code> property which is the number of markers in the cluster and an\n *  <code>index</code> property which is one higher than the lowest integer such that\n *  <code>10^i</code> exceeds the number of markers in the cluster, or the size of the styles\n *  array, whichever is less. The <code>styles</code> array element used has an index of\n *  <code>index</code> minus 1. For example, the default <code>calculator</code> returns a\n *  <code>text</code> value of <code>\"125\"</code> and an <code>index</code> of <code>3</code>\n *  for a cluster icon representing 125 markers so the element used in the <code>styles</code>\n *  array is <code>2</code>. A <code>calculator</code> may also return a <code>title</code>\n *  property that contains the text of the tooltip to be used for the cluster marker. If\n *   <code>title</code> is not defined, the tooltip is set to the value of the <code>title</code>\n *   property for the MarkerClusterer.\n * @property {string} [clusterClass=\"cluster\"] The name of the CSS class defining general styles\n *  for the cluster markers. Use this class to define CSS styles that are not set up by the code\n *  that processes the <code>styles</code> array.\n * @property {Array} [styles] An array of {@link ClusterIconStyle} elements defining the styles\n *  of the cluster markers to be used. The element to be used to style a given cluster marker\n *  is determined by the function defined by the <code>calculator</code> property.\n *  The default is an array of {@link ClusterIconStyle} elements whose properties are derived\n *  from the values for <code>imagePath</code>, <code>imageExtension</code>, and\n *  <code>imageSizes</code>.\n * @property {boolean} [enableRetinaIcons=false] Whether to allow the use of cluster icons that\n * have sizes that are some multiple (typically double) of their actual display size. Icons such\n * as these look better when viewed on high-resolution monitors such as Apple's Retina displays.\n * Note: if this property is <code>true</code>, sprites cannot be used as cluster icons.\n * @property {number} [batchSize=MarkerClusterer.BATCH_SIZE] Set this property to the\n *  number of markers to be processed in a single batch when using a browser other than\n *  Internet Explorer (for Internet Explorer, use the batchSizeIE property instead).\n * @property {number} [batchSizeIE=MarkerClusterer.BATCH_SIZE_IE] When Internet Explorer is\n *  being used, markers are processed in several batches with a small delay inserted between\n *  each batch in an attempt to avoid Javascript timeout errors. Set this property to the\n *  number of markers to be processed in a single batch; select as high a number as you can\n *  without causing a timeout error in the browser. This number might need to be as low as 100\n *  if 15,000 markers are being managed, for example.\n * @property {string} [imagePath=MarkerClusterer.IMAGE_PATH]\n *  The full URL of the root name of the group of image files to use for cluster icons.\n *  The complete file name is of the form <code>imagePath</code>n.<code>imageExtension</code>\n *  where n is the image file number (1, 2, etc.).\n * @property {string} [imageExtension=MarkerClusterer.IMAGE_EXTENSION]\n *  The extension name for the cluster icon image files (e.g., <code>\"png\"</code> or\n *  <code>\"jpg\"</code>).\n * @property {Array} [imageSizes=MarkerClusterer.IMAGE_SIZES]\n *  An array of numbers containing the widths of the group of\n *  <code>imagePath</code>n.<code>imageExtension</code> image files.\n *  (The images are assumed to be square.)\n */\n/**\n * Creates a MarkerClusterer object with the options specified in {@link MarkerClustererOptions}.\n * @constructor\n * @extends google.maps.OverlayView\n * @param {google.maps.Map} map The Google map to attach to.\n * @param {Array.<google.maps.Marker>} [opt_markers] The markers to be added to the cluster.\n * @param {MarkerClustererOptions} [opt_options] The optional parameters.\n */\nfunction MarkerClusterer(map, opt_markers, opt_options) {\n  // MarkerClusterer implements google.maps.OverlayView interface. We use the\n  // extend function to extend MarkerClusterer with google.maps.OverlayView\n  // because it might not always be available when the code is defined so we\n  // look for it at the last possible moment. If it doesn't exist now then\n  // there is no point going ahead :)\n  this.extend(MarkerClusterer, google.maps.OverlayView);\n\n  opt_markers = opt_markers || [];\n  opt_options = opt_options || {};\n\n  this.markers_ = [];\n  this.clusters_ = [];\n  this.listeners_ = [];\n  this.activeMap_ = null;\n  this.ready_ = false;\n\n  this.gridSize_ = opt_options.gridSize || 60;\n  this.minClusterSize_ = opt_options.minimumClusterSize || 2;\n  this.maxZoom_ = opt_options.maxZoom || null;\n  this.styles_ = opt_options.styles || [];\n  this.title_ = opt_options.title || \"\";\n  this.zoomOnClick_ = true;\n  if (opt_options.zoomOnClick !== undefined) {\n    this.zoomOnClick_ = opt_options.zoomOnClick;\n  }\n  this.averageCenter_ = false;\n  if (opt_options.averageCenter !== undefined) {\n    this.averageCenter_ = opt_options.averageCenter;\n  }\n  this.ignoreHidden_ = false;\n  if (opt_options.ignoreHidden !== undefined) {\n    this.ignoreHidden_ = opt_options.ignoreHidden;\n  }\n  this.enableRetinaIcons_ = false;\n  if (opt_options.enableRetinaIcons !== undefined) {\n    this.enableRetinaIcons_ = opt_options.enableRetinaIcons;\n  }\n  this.imagePath_ = opt_options.imagePath || MarkerClusterer.IMAGE_PATH;\n  this.imageExtension_ = opt_options.imageExtension || MarkerClusterer.IMAGE_EXTENSION;\n  this.imageSizes_ = opt_options.imageSizes || MarkerClusterer.IMAGE_SIZES;\n  this.calculator_ = opt_options.calculator || MarkerClusterer.CALCULATOR;\n  this.batchSize_ = opt_options.batchSize || MarkerClusterer.BATCH_SIZE;\n  this.batchSizeIE_ = opt_options.batchSizeIE || MarkerClusterer.BATCH_SIZE_IE;\n  this.clusterClass_ = opt_options.clusterClass || \"cluster\";\n\n  if (navigator.userAgent.toLowerCase().indexOf(\"msie\") !== -1) {\n    // Try to avoid IE timeout when processing a huge number of markers:\n    this.batchSize_ = this.batchSizeIE_;\n  }\n\n  this.setupStyles_();\n\n  this.addMarkers(opt_markers, true);\n  this.setMap(map); // Note: this causes onAdd to be called\n}\n\n\n/**\n * Implementation of the onAdd interface method.\n * @ignore\n */\nMarkerClusterer.prototype.onAdd = function () {\n  var cMarkerClusterer = this;\n\n  this.activeMap_ = this.getMap();\n  this.ready_ = true;\n\n  this.repaint();\n\n  // Add the map event listeners\n  this.listeners_ = [\n    google.maps.event.addListener(this.getMap(), \"zoom_changed\", function () {\n      cMarkerClusterer.resetViewport_(false);\n      // Workaround for this Google bug: when map is at level 0 and \"-\" of\n      // zoom slider is clicked, a \"zoom_changed\" event is fired even though\n      // the map doesn't zoom out any further. In this situation, no \"idle\"\n      // event is triggered so the cluster markers that have been removed\n      // do not get redrawn. Same goes for a zoom in at maxZoom.\n      if (this.getZoom() === (this.get(\"minZoom\") || 0) || this.getZoom() === this.get(\"maxZoom\")) {\n        google.maps.event.trigger(this, \"idle\");\n      }\n    }),\n    google.maps.event.addListener(this.getMap(), \"idle\", function () {\n      cMarkerClusterer.redraw_();\n    })\n  ];\n};\n\n\n/**\n * Implementation of the onRemove interface method.\n * Removes map event listeners and all cluster icons from the DOM.\n * All managed markers are also put back on the map.\n * @ignore\n */\nMarkerClusterer.prototype.onRemove = function () {\n  var i;\n\n  // Put all the managed markers back on the map:\n  for (i = 0; i < this.markers_.length; i++) {\n    if (this.markers_[i].getMap() !== this.activeMap_) {\n      this.markers_[i].setMap(this.activeMap_);\n    }\n  }\n\n  // Remove all clusters:\n  for (i = 0; i < this.clusters_.length; i++) {\n    this.clusters_[i].remove();\n  }\n  this.clusters_ = [];\n\n  // Remove map event listeners:\n  for (i = 0; i < this.listeners_.length; i++) {\n    google.maps.event.removeListener(this.listeners_[i]);\n  }\n  this.listeners_ = [];\n\n  this.activeMap_ = null;\n  this.ready_ = false;\n};\n\n\n/**\n * Implementation of the draw interface method.\n * @ignore\n */\nMarkerClusterer.prototype.draw = function () {};\n\n\n/**\n * Sets up the styles object.\n */\nMarkerClusterer.prototype.setupStyles_ = function () {\n  var i, size;\n  if (this.styles_.length > 0) {\n    return;\n  }\n\n  for (i = 0; i < this.imageSizes_.length; i++) {\n    size = this.imageSizes_[i];\n    this.styles_.push({\n      url: this.imagePath_ + (i + 1) + \".\" + this.imageExtension_,\n      height: size,\n      width: size\n    });\n  }\n};\n\n\n/**\n *  Fits the map to the bounds of the markers managed by the clusterer.\n */\nMarkerClusterer.prototype.fitMapToMarkers = function () {\n  var i;\n  var markers = this.getMarkers();\n  var bounds = new google.maps.LatLngBounds();\n  for (i = 0; i < markers.length; i++) {\n    bounds.extend(markers[i].getPosition());\n  }\n\n  this.getMap().fitBounds(bounds);\n};\n\n\n/**\n * Returns the value of the <code>gridSize</code> property.\n *\n * @return {number} The grid size.\n */\nMarkerClusterer.prototype.getGridSize = function () {\n  return this.gridSize_;\n};\n\n\n/**\n * Sets the value of the <code>gridSize</code> property.\n *\n * @param {number} gridSize The grid size.\n */\nMarkerClusterer.prototype.setGridSize = function (gridSize) {\n  this.gridSize_ = gridSize;\n};\n\n\n/**\n * Returns the value of the <code>minimumClusterSize</code> property.\n *\n * @return {number} The minimum cluster size.\n */\nMarkerClusterer.prototype.getMinimumClusterSize = function () {\n  return this.minClusterSize_;\n};\n\n/**\n * Sets the value of the <code>minimumClusterSize</code> property.\n *\n * @param {number} minimumClusterSize The minimum cluster size.\n */\nMarkerClusterer.prototype.setMinimumClusterSize = function (minimumClusterSize) {\n  this.minClusterSize_ = minimumClusterSize;\n};\n\n\n/**\n *  Returns the value of the <code>maxZoom</code> property.\n *\n *  @return {number} The maximum zoom level.\n */\nMarkerClusterer.prototype.getMaxZoom = function () {\n  return this.maxZoom_;\n};\n\n\n/**\n *  Sets the value of the <code>maxZoom</code> property.\n *\n *  @param {number} maxZoom The maximum zoom level.\n */\nMarkerClusterer.prototype.setMaxZoom = function (maxZoom) {\n  this.maxZoom_ = maxZoom;\n};\n\n\n/**\n *  Returns the value of the <code>styles</code> property.\n *\n *  @return {Array} The array of styles defining the cluster markers to be used.\n */\nMarkerClusterer.prototype.getStyles = function () {\n  return this.styles_;\n};\n\n\n/**\n *  Sets the value of the <code>styles</code> property.\n *\n *  @param {Array.<ClusterIconStyle>} styles The array of styles to use.\n */\nMarkerClusterer.prototype.setStyles = function (styles) {\n  this.styles_ = styles;\n};\n\n\n/**\n * Returns the value of the <code>title</code> property.\n *\n * @return {string} The content of the title text.\n */\nMarkerClusterer.prototype.getTitle = function () {\n  return this.title_;\n};\n\n\n/**\n *  Sets the value of the <code>title</code> property.\n *\n *  @param {string} title The value of the title property.\n */\nMarkerClusterer.prototype.setTitle = function (title) {\n  this.title_ = title;\n};\n\n\n/**\n * Returns the value of the <code>zoomOnClick</code> property.\n *\n * @return {boolean} True if zoomOnClick property is set.\n */\nMarkerClusterer.prototype.getZoomOnClick = function () {\n  return this.zoomOnClick_;\n};\n\n\n/**\n *  Sets the value of the <code>zoomOnClick</code> property.\n *\n *  @param {boolean} zoomOnClick The value of the zoomOnClick property.\n */\nMarkerClusterer.prototype.setZoomOnClick = function (zoomOnClick) {\n  this.zoomOnClick_ = zoomOnClick;\n};\n\n\n/**\n * Returns the value of the <code>averageCenter</code> property.\n *\n * @return {boolean} True if averageCenter property is set.\n */\nMarkerClusterer.prototype.getAverageCenter = function () {\n  return this.averageCenter_;\n};\n\n\n/**\n *  Sets the value of the <code>averageCenter</code> property.\n *\n *  @param {boolean} averageCenter The value of the averageCenter property.\n */\nMarkerClusterer.prototype.setAverageCenter = function (averageCenter) {\n  this.averageCenter_ = averageCenter;\n};\n\n\n/**\n * Returns the value of the <code>ignoreHidden</code> property.\n *\n * @return {boolean} True if ignoreHidden property is set.\n */\nMarkerClusterer.prototype.getIgnoreHidden = function () {\n  return this.ignoreHidden_;\n};\n\n\n/**\n *  Sets the value of the <code>ignoreHidden</code> property.\n *\n *  @param {boolean} ignoreHidden The value of the ignoreHidden property.\n */\nMarkerClusterer.prototype.setIgnoreHidden = function (ignoreHidden) {\n  this.ignoreHidden_ = ignoreHidden;\n};\n\n\n/**\n * Returns the value of the <code>enableRetinaIcons</code> property.\n *\n * @return {boolean} True if enableRetinaIcons property is set.\n */\nMarkerClusterer.prototype.getEnableRetinaIcons = function () {\n  return this.enableRetinaIcons_;\n};\n\n\n/**\n *  Sets the value of the <code>enableRetinaIcons</code> property.\n *\n *  @param {boolean} enableRetinaIcons The value of the enableRetinaIcons property.\n */\nMarkerClusterer.prototype.setEnableRetinaIcons = function (enableRetinaIcons) {\n  this.enableRetinaIcons_ = enableRetinaIcons;\n};\n\n\n/**\n * Returns the value of the <code>imageExtension</code> property.\n *\n * @return {string} The value of the imageExtension property.\n */\nMarkerClusterer.prototype.getImageExtension = function () {\n  return this.imageExtension_;\n};\n\n\n/**\n *  Sets the value of the <code>imageExtension</code> property.\n *\n *  @param {string} imageExtension The value of the imageExtension property.\n */\nMarkerClusterer.prototype.setImageExtension = function (imageExtension) {\n  this.imageExtension_ = imageExtension;\n};\n\n\n/**\n * Returns the value of the <code>imagePath</code> property.\n *\n * @return {string} The value of the imagePath property.\n */\nMarkerClusterer.prototype.getImagePath = function () {\n  return this.imagePath_;\n};\n\n\n/**\n *  Sets the value of the <code>imagePath</code> property.\n *\n *  @param {string} imagePath The value of the imagePath property.\n */\nMarkerClusterer.prototype.setImagePath = function (imagePath) {\n  this.imagePath_ = imagePath;\n};\n\n\n/**\n * Returns the value of the <code>imageSizes</code> property.\n *\n * @return {Array} The value of the imageSizes property.\n */\nMarkerClusterer.prototype.getImageSizes = function () {\n  return this.imageSizes_;\n};\n\n\n/**\n *  Sets the value of the <code>imageSizes</code> property.\n *\n *  @param {Array} imageSizes The value of the imageSizes property.\n */\nMarkerClusterer.prototype.setImageSizes = function (imageSizes) {\n  this.imageSizes_ = imageSizes;\n};\n\n\n/**\n * Returns the value of the <code>calculator</code> property.\n *\n * @return {function} the value of the calculator property.\n */\nMarkerClusterer.prototype.getCalculator = function () {\n  return this.calculator_;\n};\n\n\n/**\n * Sets the value of the <code>calculator</code> property.\n *\n * @param {function(Array.<google.maps.Marker>, number)} calculator The value\n *  of the calculator property.\n */\nMarkerClusterer.prototype.setCalculator = function (calculator) {\n  this.calculator_ = calculator;\n};\n\n\n/**\n * Returns the value of the <code>batchSizeIE</code> property.\n *\n * @return {number} the value of the batchSizeIE property.\n */\nMarkerClusterer.prototype.getBatchSizeIE = function () {\n  return this.batchSizeIE_;\n};\n\n\n/**\n * Sets the value of the <code>batchSizeIE</code> property.\n *\n *  @param {number} batchSizeIE The value of the batchSizeIE property.\n */\nMarkerClusterer.prototype.setBatchSizeIE = function (batchSizeIE) {\n  this.batchSizeIE_ = batchSizeIE;\n};\n\n\n/**\n * Returns the value of the <code>clusterClass</code> property.\n *\n * @return {string} the value of the clusterClass property.\n */\nMarkerClusterer.prototype.getClusterClass = function () {\n  return this.clusterClass_;\n};\n\n\n/**\n * Sets the value of the <code>clusterClass</code> property.\n *\n *  @param {string} clusterClass The value of the clusterClass property.\n */\nMarkerClusterer.prototype.setClusterClass = function (clusterClass) {\n  this.clusterClass_ = clusterClass;\n};\n\n\n/**\n *  Returns the array of markers managed by the clusterer.\n *\n *  @return {Array} The array of markers managed by the clusterer.\n */\nMarkerClusterer.prototype.getMarkers = function () {\n  return this.markers_;\n};\n\n\n/**\n *  Returns the number of markers managed by the clusterer.\n *\n *  @return {number} The number of markers.\n */\nMarkerClusterer.prototype.getTotalMarkers = function () {\n  return this.markers_.length;\n};\n\n\n/**\n * Returns the current array of clusters formed by the clusterer.\n *\n * @return {Array} The array of clusters formed by the clusterer.\n */\nMarkerClusterer.prototype.getClusters = function () {\n  return this.clusters_;\n};\n\n\n/**\n * Returns the number of clusters formed by the clusterer.\n *\n * @return {number} The number of clusters formed by the clusterer.\n */\nMarkerClusterer.prototype.getTotalClusters = function () {\n  return this.clusters_.length;\n};\n\n\n/**\n * Adds a marker to the clusterer. The clusters are redrawn unless\n *  <code>opt_nodraw</code> is set to <code>true</code>.\n *\n * @param {google.maps.Marker} marker The marker to add.\n * @param {boolean} [opt_nodraw] Set to <code>true</code> to prevent redrawing.\n */\nMarkerClusterer.prototype.addMarker = function (marker, opt_nodraw) {\n  this.pushMarkerTo_(marker);\n  if (!opt_nodraw) {\n    this.redraw_();\n  }\n};\n\n\n/**\n * Adds an array of markers to the clusterer. The clusters are redrawn unless\n *  <code>opt_nodraw</code> is set to <code>true</code>.\n *\n * @param {Array.<google.maps.Marker>} markers The markers to add.\n * @param {boolean} [opt_nodraw] Set to <code>true</code> to prevent redrawing.\n */\nMarkerClusterer.prototype.addMarkers = function (markers, opt_nodraw) {\n  var key;\n  for (key in markers) {\n    if (markers.hasOwnProperty(key)) {\n      this.pushMarkerTo_(markers[key]);\n    }\n  }  \n  if (!opt_nodraw) {\n    this.redraw_();\n  }\n};\n\n\n/**\n * Pushes a marker to the clusterer.\n *\n * @param {google.maps.Marker} marker The marker to add.\n */\nMarkerClusterer.prototype.pushMarkerTo_ = function (marker) {\n  // If the marker is draggable add a listener so we can update the clusters on the dragend:\n  if (marker.getDraggable()) {\n    var cMarkerClusterer = this;\n    google.maps.event.addListener(marker, \"dragend\", function () {\n      if (cMarkerClusterer.ready_) {\n        this.isAdded = false;\n        cMarkerClusterer.repaint();\n      }\n    });\n  }\n  marker.isAdded = false;\n  this.markers_.push(marker);\n};\n\n\n/**\n * Removes a marker from the cluster.  The clusters are redrawn unless\n *  <code>opt_nodraw</code> is set to <code>true</code>. Returns <code>true</code> if the\n *  marker was removed from the clusterer.\n *\n * @param {google.maps.Marker} marker The marker to remove.\n * @param {boolean} [opt_nodraw] Set to <code>true</code> to prevent redrawing.\n * @return {boolean} True if the marker was removed from the clusterer.\n */\nMarkerClusterer.prototype.removeMarker = function (marker, opt_nodraw) {\n  var removed = this.removeMarker_(marker);\n\n  if (!opt_nodraw && removed) {\n    this.repaint();\n  }\n\n  return removed;\n};\n\n\n/**\n * Removes an array of markers from the cluster. The clusters are redrawn unless\n *  <code>opt_nodraw</code> is set to <code>true</code>. Returns <code>true</code> if markers\n *  were removed from the clusterer.\n *\n * @param {Array.<google.maps.Marker>} markers The markers to remove.\n * @param {boolean} [opt_nodraw] Set to <code>true</code> to prevent redrawing.\n * @return {boolean} True if markers were removed from the clusterer.\n */\nMarkerClusterer.prototype.removeMarkers = function (markers, opt_nodraw) {\n  var i, r;\n  var removed = false;\n\n  for (i = 0; i < markers.length; i++) {\n    r = this.removeMarker_(markers[i]);\n    removed = removed || r;\n  }\n\n  if (!opt_nodraw && removed) {\n    this.repaint();\n  }\n\n  return removed;\n};\n\n\n/**\n * Removes a marker and returns true if removed, false if not.\n *\n * @param {google.maps.Marker} marker The marker to remove\n * @return {boolean} Whether the marker was removed or not\n */\nMarkerClusterer.prototype.removeMarker_ = function (marker) {\n  var i;\n  var index = -1;\n  if (this.markers_.indexOf) {\n    index = this.markers_.indexOf(marker);\n  } else {\n    for (i = 0; i < this.markers_.length; i++) {\n      if (marker === this.markers_[i]) {\n        index = i;\n        break;\n      }\n    }\n  }\n\n  if (index === -1) {\n    // Marker is not in our list of markers, so do nothing:\n    return false;\n  }\n\n  marker.setMap(null);\n  this.markers_.splice(index, 1); // Remove the marker from the list of managed markers\n  return true;\n};\n\n\n/**\n * Removes all clusters and markers from the map and also removes all markers\n *  managed by the clusterer.\n */\nMarkerClusterer.prototype.clearMarkers = function () {\n  this.resetViewport_(true);\n  this.markers_ = [];\n};\n\n\n/**\n * Recalculates and redraws all the marker clusters from scratch.\n *  Call this after changing any properties.\n */\nMarkerClusterer.prototype.repaint = function () {\n  var oldClusters = this.clusters_.slice();\n  this.clusters_ = [];\n  this.resetViewport_(false);\n  this.redraw_();\n\n  // Remove the old clusters.\n  // Do it in a timeout to prevent blinking effect.\n  setTimeout(function () {\n    var i;\n    for (i = 0; i < oldClusters.length; i++) {\n      oldClusters[i].remove();\n    }\n  }, 0);\n};\n\n\n/**\n * Returns the current bounds extended by the grid size.\n *\n * @param {google.maps.LatLngBounds} bounds The bounds to extend.\n * @return {google.maps.LatLngBounds} The extended bounds.\n * @ignore\n */\nMarkerClusterer.prototype.getExtendedBounds = function (bounds) {\n  var projection = this.getProjection();\n\n  // Turn the bounds into latlng.\n  var tr = new google.maps.LatLng(bounds.getNorthEast().lat(),\n      bounds.getNorthEast().lng());\n  var bl = new google.maps.LatLng(bounds.getSouthWest().lat(),\n      bounds.getSouthWest().lng());\n\n  // Convert the points to pixels and the extend out by the grid size.\n  var trPix = projection.fromLatLngToDivPixel(tr);\n  trPix.x += this.gridSize_;\n  trPix.y -= this.gridSize_;\n\n  var blPix = projection.fromLatLngToDivPixel(bl);\n  blPix.x -= this.gridSize_;\n  blPix.y += this.gridSize_;\n\n  // Convert the pixel points back to LatLng\n  var ne = projection.fromDivPixelToLatLng(trPix);\n  var sw = projection.fromDivPixelToLatLng(blPix);\n\n  // Extend the bounds to contain the new bounds.\n  bounds.extend(ne);\n  bounds.extend(sw);\n\n  return bounds;\n};\n\n\n/**\n * Redraws all the clusters.\n */\nMarkerClusterer.prototype.redraw_ = function () {\n  this.createClusters_(0);\n};\n\n\n/**\n * Removes all clusters from the map. The markers are also removed from the map\n *  if <code>opt_hide</code> is set to <code>true</code>.\n *\n * @param {boolean} [opt_hide] Set to <code>true</code> to also remove the markers\n *  from the map.\n */\nMarkerClusterer.prototype.resetViewport_ = function (opt_hide) {\n  var i, marker;\n  // Remove all the clusters\n  for (i = 0; i < this.clusters_.length; i++) {\n    this.clusters_[i].remove();\n  }\n  this.clusters_ = [];\n\n  // Reset the markers to not be added and to be removed from the map.\n  for (i = 0; i < this.markers_.length; i++) {\n    marker = this.markers_[i];\n    marker.isAdded = false;\n    if (opt_hide) {\n      marker.setMap(null);\n    }\n  }\n};\n\n\n/**\n * Calculates the distance between two latlng locations in km.\n *\n * @param {google.maps.LatLng} p1 The first lat lng point.\n * @param {google.maps.LatLng} p2 The second lat lng point.\n * @return {number} The distance between the two points in km.\n * @see http://www.movable-type.co.uk/scripts/latlong.html\n*/\nMarkerClusterer.prototype.distanceBetweenPoints_ = function (p1, p2) {\n  var R = 6371; // Radius of the Earth in km\n  var dLat = (p2.lat() - p1.lat()) * Math.PI / 180;\n  var dLon = (p2.lng() - p1.lng()) * Math.PI / 180;\n  var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(p1.lat() * Math.PI / 180) * Math.cos(p2.lat() * Math.PI / 180) *\n    Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var d = R * c;\n  return d;\n};\n\n\n/**\n * Determines if a marker is contained in a bounds.\n *\n * @param {google.maps.Marker} marker The marker to check.\n * @param {google.maps.LatLngBounds} bounds The bounds to check against.\n * @return {boolean} True if the marker is in the bounds.\n */\nMarkerClusterer.prototype.isMarkerInBounds_ = function (marker, bounds) {\n  return bounds.contains(marker.getPosition());\n};\n\n\n/**\n * Adds a marker to a cluster, or creates a new cluster.\n *\n * @param {google.maps.Marker} marker The marker to add.\n */\nMarkerClusterer.prototype.addToClosestCluster_ = function (marker) {\n  var i, d, cluster, center;\n  var distance = 40000; // Some large number\n  var clusterToAddTo = null;\n  for (i = 0; i < this.clusters_.length; i++) {\n    cluster = this.clusters_[i];\n    center = cluster.getCenter();\n    if (center) {\n      d = this.distanceBetweenPoints_(center, marker.getPosition());\n      if (d < distance) {\n        distance = d;\n        clusterToAddTo = cluster;\n      }\n    }\n  }\n\n  if (clusterToAddTo && clusterToAddTo.isMarkerInClusterBounds(marker)) {\n    clusterToAddTo.addMarker(marker);\n  } else {\n    cluster = new Cluster(this);\n    cluster.addMarker(marker);\n    this.clusters_.push(cluster);\n  }\n};\n\n\n/**\n * Creates the clusters. This is done in batches to avoid timeout errors\n *  in some browsers when there is a huge number of markers.\n *\n * @param {number} iFirst The index of the first marker in the batch of\n *  markers to be added to clusters.\n */\nMarkerClusterer.prototype.createClusters_ = function (iFirst) {\n  var i, marker;\n  var mapBounds;\n  var cMarkerClusterer = this;\n  if (!this.ready_) {\n    return;\n  }\n\n  // Cancel previous batch processing if we're working on the first batch:\n  if (iFirst === 0) {\n    /**\n     * This event is fired when the <code>MarkerClusterer</code> begins\n     *  clustering markers.\n     * @name MarkerClusterer#clusteringbegin\n     * @param {MarkerClusterer} mc The MarkerClusterer whose markers are being clustered.\n     * @event\n     */\n    google.maps.event.trigger(this, \"clusteringbegin\", this);\n\n    if (typeof this.timerRefStatic !== \"undefined\") {\n      clearTimeout(this.timerRefStatic);\n      delete this.timerRefStatic;\n    }\n  }\n\n  // Get our current map view bounds.\n  // Create a new bounds object so we don't affect the map.\n  //\n  // See Comments 9 & 11 on Issue 3651 relating to this workaround for a Google Maps bug:\n  if (this.getMap().getZoom() > 3) {\n    mapBounds = new google.maps.LatLngBounds(this.getMap().getBounds().getSouthWest(),\n      this.getMap().getBounds().getNorthEast());\n  } else {\n    mapBounds = new google.maps.LatLngBounds(new google.maps.LatLng(85.02070771743472, -178.48388434375), new google.maps.LatLng(-85.08136444384544, 178.00048865625));\n  }\n  var bounds = this.getExtendedBounds(mapBounds);\n\n  var iLast = Math.min(iFirst + this.batchSize_, this.markers_.length);\n\n  for (i = iFirst; i < iLast; i++) {\n    marker = this.markers_[i];\n    if (!marker.isAdded && this.isMarkerInBounds_(marker, bounds)) {\n      if (!this.ignoreHidden_ || (this.ignoreHidden_ && marker.getVisible())) {\n        this.addToClosestCluster_(marker);\n      }\n    }\n  }\n\n  if (iLast < this.markers_.length) {\n    this.timerRefStatic = setTimeout(function () {\n      cMarkerClusterer.createClusters_(iLast);\n    }, 0);\n  } else {\n    delete this.timerRefStatic;\n\n    /**\n     * This event is fired when the <code>MarkerClusterer</code> stops\n     *  clustering markers.\n     * @name MarkerClusterer#clusteringend\n     * @param {MarkerClusterer} mc The MarkerClusterer whose markers are being clustered.\n     * @event\n     */\n    google.maps.event.trigger(this, \"clusteringend\", this);\n  }\n};\n\n\n/**\n * Extends an object's prototype by another's.\n *\n * @param {Object} obj1 The object to be extended.\n * @param {Object} obj2 The object to extend with.\n * @return {Object} The new extended object.\n * @ignore\n */\nMarkerClusterer.prototype.extend = function (obj1, obj2) {\n  return (function (object) {\n    var property;\n    for (property in object.prototype) {\n      this.prototype[property] = object.prototype[property];\n    }\n    return this;\n  }).apply(obj1, [obj2]);\n};\n\n\n/**\n * The default function for determining the label text and style\n * for a cluster icon.\n *\n * @param {Array.<google.maps.Marker>} markers The array of markers represented by the cluster.\n * @param {number} numStyles The number of marker styles available.\n * @return {ClusterIconInfo} The information resource for the cluster.\n * @constant\n * @ignore\n */\nMarkerClusterer.CALCULATOR = function (markers, numStyles) {\n  var index = 0;\n  var title = \"\";\n  var count = markers.length.toString();\n\n  var dv = count;\n  while (dv !== 0) {\n    dv = parseInt(dv / 10, 10);\n    index++;\n  }\n\n  index = Math.min(index, numStyles);\n  return {\n    text: count,\n    index: index,\n    title: title\n  };\n};\n\n\n/**\n * The number of markers to process in one batch.\n *\n * @type {number}\n * @constant\n */\nMarkerClusterer.BATCH_SIZE = 2000;\n\n\n/**\n * The number of markers to process in one batch (IE only).\n *\n * @type {number}\n * @constant\n */\nMarkerClusterer.BATCH_SIZE_IE = 500;\n\n\n/**\n * The default root name for the marker cluster images.\n *\n * @type {string}\n * @constant\n */\nMarkerClusterer.IMAGE_PATH = \"https://raw.githubusercontent.com/googlemaps/v3-utility-library/master/markerclustererplus/images/m\";\n\n\n/**\n * The default extension name for the marker cluster images.\n *\n * @type {string}\n * @constant\n */\nMarkerClusterer.IMAGE_EXTENSION = \"png\";\n\n\n/**\n * The default array of sizes for the marker cluster images.\n *\n * @type {Array.<number>}\n * @constant\n */\nMarkerClusterer.IMAGE_SIZES = [53, 56, 66, 78, 90];\n\nmodule.exports = MarkerClusterer\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/marker-clusterer-plus/src/markerclusterer.js\n// module id = 1760\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionAssignment = function ActionAssignment(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm2 14H7v-2h7v2zm3-4H7v-2h10v2zm0-4H7V7h10v2z' })\n  );\n};\nActionAssignment = (0, _pure2.default)(ActionAssignment);\nActionAssignment.displayName = 'ActionAssignment';\nActionAssignment.muiName = 'SvgIcon';\n\nexports.default = ActionAssignment;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/assignment.js\n// module id = 1857\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionCreditCard = function ActionCreditCard(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zm0 14H4v-6h16v6zm0-10H4V6h16v2z' })\n  );\n};\nActionCreditCard = (0, _pure2.default)(ActionCreditCard);\nActionCreditCard.displayName = 'ActionCreditCard';\nActionCreditCard.muiName = 'SvgIcon';\n\nexports.default = ActionCreditCard;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/credit-card.js\n// module id = 1858\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionHome = function ActionHome(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z' })\n  );\n};\nActionHome = (0, _pure2.default)(ActionHome);\nActionHome.displayName = 'ActionHome';\nActionHome.muiName = 'SvgIcon';\n\nexports.default = ActionHome;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/home.js\n// module id = 1859\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionMotorcycle = function ActionMotorcycle(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M19.44 9.03L15.41 5H11v2h3.59l2 2H5c-2.8 0-5 2.2-5 5s2.2 5 5 5c2.46 0 4.45-1.69 4.9-4h1.65l2.77-2.77c-.21.54-.32 1.14-.32 1.77 0 2.8 2.2 5 5 5s5-2.2 5-5c0-2.65-1.97-4.77-4.56-4.97zM7.82 15C7.4 16.15 6.28 17 5 17c-1.63 0-3-1.37-3-3s1.37-3 3-3c1.28 0 2.4.85 2.82 2H5v2h2.82zM19 17c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z' })\n  );\n};\nActionMotorcycle = (0, _pure2.default)(ActionMotorcycle);\nActionMotorcycle.displayName = 'ActionMotorcycle';\nActionMotorcycle.muiName = 'SvgIcon';\n\nexports.default = ActionMotorcycle;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/motorcycle.js\n// module id = 1860\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionPayment = function ActionPayment(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zm0 14H4v-6h16v6zm0-10H4V6h16v2z' })\n  );\n};\nActionPayment = (0, _pure2.default)(ActionPayment);\nActionPayment.displayName = 'ActionPayment';\nActionPayment.muiName = 'SvgIcon';\n\nexports.default = ActionPayment;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/payment.js\n// module id = 1861\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionSettingsPower = function ActionSettingsPower(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M7 24h2v-2H7v2zm4 0h2v-2h-2v2zm2-22h-2v10h2V2zm3.56 2.44l-1.45 1.45C16.84 6.94 18 8.83 18 11c0 3.31-2.69 6-6 6s-6-2.69-6-6c0-2.17 1.16-4.06 2.88-5.12L7.44 4.44C5.36 5.88 4 8.28 4 11c0 4.42 3.58 8 8 8s8-3.58 8-8c0-2.72-1.36-5.12-3.44-6.56zM15 24h2v-2h-2v2z' })\n  );\n};\nActionSettingsPower = (0, _pure2.default)(ActionSettingsPower);\nActionSettingsPower.displayName = 'ActionSettingsPower';\nActionSettingsPower.muiName = 'SvgIcon';\n\nexports.default = ActionSettingsPower;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/settings-power.js\n// module id = 1862\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionSettings = function ActionSettings(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M19.43 12.98c.04-.32.07-.64.07-.98s-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.12-.22-.39-.3-.61-.22l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.23-.09-.49 0-.61.22l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98s.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.12.22.39.3.61.22l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.23.09.49 0 .61-.22l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zM12 15.5c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5 3.5 1.57 3.5 3.5-1.57 3.5-3.5 3.5z' })\n  );\n};\nActionSettings = (0, _pure2.default)(ActionSettings);\nActionSettings.displayName = 'ActionSettings';\nActionSettings.muiName = 'SvgIcon';\n\nexports.default = ActionSettings;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/settings.js\n// module id = 1863\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionStore = function ActionStore(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M20 4H4v2h16V4zm1 10v-2l-1-5H4l-1 5v2h1v6h10v-6h4v6h2v-6h1zm-9 4H6v-4h6v4z' })\n  );\n};\nActionStore = (0, _pure2.default)(ActionStore);\nActionStore.displayName = 'ActionStore';\nActionStore.muiName = 'SvgIcon';\n\nexports.default = ActionStore;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/store.js\n// module id = 1864\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionToday = function ActionToday(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z' })\n  );\n};\nActionToday = (0, _pure2.default)(ActionToday);\nActionToday.displayName = 'ActionToday';\nActionToday.muiName = 'SvgIcon';\n\nexports.default = ActionToday;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/today.js\n// module id = 1865\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionTouchApp = function ActionTouchApp(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M9 11.24V7.5C9 6.12 10.12 5 11.5 5S14 6.12 14 7.5v3.74c1.21-.81 2-2.18 2-3.74C16 5.01 13.99 3 11.5 3S7 5.01 7 7.5c0 1.56.79 2.93 2 3.74zm9.84 4.63l-4.54-2.26c-.17-.07-.35-.11-.54-.11H13v-6c0-.83-.67-1.5-1.5-1.5S10 6.67 10 7.5v10.74l-3.43-.72c-.08-.01-.15-.03-.24-.03-.31 0-.59.13-.79.33l-.79.8 4.94 4.94c.27.27.65.44 1.06.44h6.79c.75 0 1.33-.55 1.44-1.28l.75-5.27c.01-.07.02-.14.02-.2 0-.62-.38-1.16-.91-1.38z' })\n  );\n};\nActionTouchApp = (0, _pure2.default)(ActionTouchApp);\nActionTouchApp.displayName = 'ActionTouchApp';\nActionTouchApp.muiName = 'SvgIcon';\n\nexports.default = ActionTouchApp;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/action/touch-app.js\n// module id = 1866\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar AlertErrorOutline = function AlertErrorOutline(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z' })\n  );\n};\nAlertErrorOutline = (0, _pure2.default)(AlertErrorOutline);\nAlertErrorOutline.displayName = 'AlertErrorOutline';\nAlertErrorOutline.muiName = 'SvgIcon';\n\nexports.default = AlertErrorOutline;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/alert/error-outline.js\n// module id = 1867\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DeviceWidgets = function DeviceWidgets(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M13 13v8h8v-8h-8zM3 21h8v-8H3v8zM3 3v8h8V3H3zm13.66-1.31L11 7.34 16.66 13l5.66-5.66-5.66-5.65z' })\n  );\n};\nDeviceWidgets = (0, _pure2.default)(DeviceWidgets);\nDeviceWidgets.displayName = 'DeviceWidgets';\nDeviceWidgets.muiName = 'SvgIcon';\n\nexports.default = DeviceWidgets;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/device/widgets.js\n// module id = 1868\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar HardwareKeyboardArrowRight = function HardwareKeyboardArrowRight(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z' })\n  );\n};\nHardwareKeyboardArrowRight = (0, _pure2.default)(HardwareKeyboardArrowRight);\nHardwareKeyboardArrowRight.displayName = 'HardwareKeyboardArrowRight';\nHardwareKeyboardArrowRight.muiName = 'SvgIcon';\n\nexports.default = HardwareKeyboardArrowRight;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/hardware/keyboard-arrow-right.js\n// module id = 1869\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ImageImage = function ImageImage(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z' })\n  );\n};\nImageImage = (0, _pure2.default)(ImageImage);\nImageImage.displayName = 'ImageImage';\nImageImage.muiName = 'SvgIcon';\n\nexports.default = ImageImage;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/image/image.js\n// module id = 1871\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ImageLandscape = function ImageLandscape(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M14 6l-3.75 5 2.85 3.8-1.6 1.2C9.81 13.75 7 10 7 10l-6 8h22L14 6z' })\n  );\n};\nImageLandscape = (0, _pure2.default)(ImageLandscape);\nImageLandscape.displayName = 'ImageLandscape';\nImageLandscape.muiName = 'SvgIcon';\n\nexports.default = ImageLandscape;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/image/landscape.js\n// module id = 1872\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MapsDirectionsBike = function MapsDirectionsBike(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M15.5 5.5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zM5 12c-2.8 0-5 2.2-5 5s2.2 5 5 5 5-2.2 5-5-2.2-5-5-5zm0 8.5c-1.9 0-3.5-1.6-3.5-3.5s1.6-3.5 3.5-3.5 3.5 1.6 3.5 3.5-1.6 3.5-3.5 3.5zm5.8-10l2.4-2.4.8.8c1.3 1.3 3 2.1 5.1 2.1V9c-1.5 0-2.7-.6-3.6-1.5l-1.9-1.9c-.5-.4-1-.6-1.6-.6s-1.1.2-1.4.6L7.8 8.4c-.4.4-.6.9-.6 1.4 0 .6.2 1.1.6 1.4L11 14v5h2v-6.2l-2.2-2.3zM19 12c-2.8 0-5 2.2-5 5s2.2 5 5 5 5-2.2 5-5-2.2-5-5-5zm0 8.5c-1.9 0-3.5-1.6-3.5-3.5s1.6-3.5 3.5-3.5 3.5 1.6 3.5 3.5-1.6 3.5-3.5 3.5z' })\n  );\n};\nMapsDirectionsBike = (0, _pure2.default)(MapsDirectionsBike);\nMapsDirectionsBike.displayName = 'MapsDirectionsBike';\nMapsDirectionsBike.muiName = 'SvgIcon';\n\nexports.default = MapsDirectionsBike;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/maps/directions-bike.js\n// module id = 1873\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MapsLocalAtm = function MapsLocalAtm(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M11 17h2v-1h1c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1h-3v-1h4V8h-2V7h-2v1h-1c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h3v1H9v2h2v1zm9-13H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zm0 14H4V6h16v12z' })\n  );\n};\nMapsLocalAtm = (0, _pure2.default)(MapsLocalAtm);\nMapsLocalAtm.displayName = 'MapsLocalAtm';\nMapsLocalAtm.muiName = 'SvgIcon';\n\nexports.default = MapsLocalAtm;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/maps/local-atm.js\n// module id = 1874\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MapsLocalShipping = function MapsLocalShipping(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M20 8h-3V4H3c-1.1 0-2 .9-2 2v11h2c0 1.66 1.34 3 3 3s3-1.34 3-3h6c0 1.66 1.34 3 3 3s3-1.34 3-3h2v-5l-3-4zM6 18.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm13.5-9l1.96 2.5H17V9.5h2.5zm-1.5 9c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z' })\n  );\n};\nMapsLocalShipping = (0, _pure2.default)(MapsLocalShipping);\nMapsLocalShipping.displayName = 'MapsLocalShipping';\nMapsLocalShipping.muiName = 'SvgIcon';\n\nexports.default = MapsLocalShipping;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/maps/local-shipping.js\n// module id = 1875\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MapsPlace = function MapsPlace(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z' })\n  );\n};\nMapsPlace = (0, _pure2.default)(MapsPlace);\nMapsPlace.displayName = 'MapsPlace';\nMapsPlace.muiName = 'SvgIcon';\n\nexports.default = MapsPlace;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/maps/place.js\n// module id = 1876\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MapsTransferWithinAStation = function MapsTransferWithinAStation(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M16.49 15.5v-1.75L14 16.25l2.49 2.5V17H22v-1.5zm3.02 4.25H14v1.5h5.51V23L22 20.5 19.51 18zM9.5 5.5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zM5.75 8.9L3 23h2.1l1.75-8L9 17v6h2v-7.55L8.95 13.4l.6-3C10.85 12 12.8 13 15 13v-2c-1.85 0-3.45-1-4.35-2.45l-.95-1.6C9.35 6.35 8.7 6 8 6c-.25 0-.5.05-.75.15L2 8.3V13h2V9.65l1.75-.75' })\n  );\n};\nMapsTransferWithinAStation = (0, _pure2.default)(MapsTransferWithinAStation);\nMapsTransferWithinAStation.displayName = 'MapsTransferWithinAStation';\nMapsTransferWithinAStation.muiName = 'SvgIcon';\n\nexports.default = MapsTransferWithinAStation;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/maps/transfer-within-a-station.js\n// module id = 1877\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar NavigationClose = function NavigationClose(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z' })\n  );\n};\nNavigationClose = (0, _pure2.default)(NavigationClose);\nNavigationClose.displayName = 'NavigationClose';\nNavigationClose.muiName = 'SvgIcon';\n\nexports.default = NavigationClose;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/navigation/close.js\n// module id = 1879\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar NavigationMoreHoriz = function NavigationMoreHoriz(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z' })\n  );\n};\nNavigationMoreHoriz = (0, _pure2.default)(NavigationMoreHoriz);\nNavigationMoreHoriz.displayName = 'NavigationMoreHoriz';\nNavigationMoreHoriz.muiName = 'SvgIcon';\n\nexports.default = NavigationMoreHoriz;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/navigation/more-horiz.js\n// module id = 1883\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SocialGroup = function SocialGroup(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z' })\n  );\n};\nSocialGroup = (0, _pure2.default)(SocialGroup);\nSocialGroup.displayName = 'SocialGroup';\nSocialGroup.muiName = 'SvgIcon';\n\nexports.default = SocialGroup;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/social/group.js\n// module id = 1884\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SocialNotifications = function SocialNotifications(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M12 22c1.1 0 2-.9 2-2h-4c0 1.1.89 2 2 2zm6-6v-5c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2z' })\n  );\n};\nSocialNotifications = (0, _pure2.default)(SocialNotifications);\nSocialNotifications.displayName = 'SocialNotifications';\nSocialNotifications.muiName = 'SvgIcon';\n\nexports.default = SocialNotifications;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/social/notifications.js\n// module id = 1885\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SocialPerson = function SocialPerson(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z' })\n  );\n};\nSocialPerson = (0, _pure2.default)(SocialPerson);\nSocialPerson.displayName = 'SocialPerson';\nSocialPerson.muiName = 'SvgIcon';\n\nexports.default = SocialPerson;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/social/person.js\n// module id = 1886\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ToggleIndeterminateCheckBox = function ToggleIndeterminateCheckBox(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z' })\n  );\n};\nToggleIndeterminateCheckBox = (0, _pure2.default)(ToggleIndeterminateCheckBox);\nToggleIndeterminateCheckBox.displayName = 'ToggleIndeterminateCheckBox';\nToggleIndeterminateCheckBox.muiName = 'SvgIcon';\n\nexports.default = ToggleIndeterminateCheckBox;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/toggle/indeterminate-check-box.js\n// module id = 1887\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ToggleStarBorder = function ToggleStarBorder(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z' })\n  );\n};\nToggleStarBorder = (0, _pure2.default)(ToggleStarBorder);\nToggleStarBorder.displayName = 'ToggleStarBorder';\nToggleStarBorder.muiName = 'SvgIcon';\n\nexports.default = ToggleStarBorder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/toggle/star-border.js\n// module id = 1890\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _SvgIcon = require('../../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ToggleStar = function ToggleStar(props) {\n  return _react2.default.createElement(\n    _SvgIcon2.default,\n    props,\n    _react2.default.createElement('path', { d: 'M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z' })\n  );\n};\nToggleStar = (0, _pure2.default)(ToggleStar);\nToggleStar.displayName = 'ToggleStar';\nToggleStar.muiName = 'SvgIcon';\n\nexports.default = ToggleStar;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/material-ui/svg-icons/toggle/star.js\n// module id = 1891\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _defineProperty2 = require(\"babel-runtime/helpers/defineProperty\");\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _flowRight2 = require(\"lodash/flowRight\");\n\nvar _flowRight3 = _interopRequireDefault(_flowRight2);\n\nvar _childContextTypes;\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _createReactClass = require(\"create-react-class\");\n\nvar _createReactClass2 = _interopRequireDefault(_createReactClass);\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _markerClustererPlus = require(\"marker-clusterer-plus\");\n\nvar _markerClustererPlus2 = _interopRequireDefault(_markerClustererPlus);\n\nvar _constants = require(\"../constants\");\n\nvar _enhanceElement = require(\"../enhanceElement\");\n\nvar _enhanceElement2 = _interopRequireDefault(_enhanceElement);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar controlledPropTypes = {\n  // NOTICE!!!!!!\n  //\n  // Only expose those with getters & setters in the table as controlled props.\n  //\n  // http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerclustererplus/docs/reference.html\n  averageCenter: _propTypes2.default.bool,\n  batchSizeIE: _propTypes2.default.number,\n  calculator: _propTypes2.default.func,\n  clusterClass: _propTypes2.default.string,\n  enableRetinaIcons: _propTypes2.default.bool,\n  gridSize: _propTypes2.default.number,\n  ignoreHidden: _propTypes2.default.bool,\n  imageExtension: _propTypes2.default.string,\n  imagePath: _propTypes2.default.string,\n  imageSizes: _propTypes2.default.array,\n  maxZoom: _propTypes2.default.number,\n  minimumClusterSize: _propTypes2.default.number,\n  styles: _propTypes2.default.array,\n  title: _propTypes2.default.string,\n  zoomOnClick: _propTypes2.default.bool\n};\n\nvar defaultUncontrolledPropTypes = (0, _enhanceElement.addDefaultPrefixToPropTypes)(controlledPropTypes);\n\nvar eventMap = {\n  // http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerclustererplus/docs/reference.html\n  onClick: \"click\",\n\n  onClusteringBegin: \"clusteringbegin\",\n\n  onClusteringEnd: \"clusteringend\",\n\n  onMouseOut: \"mouseout\",\n\n  onMouseOver: \"mouseover\"\n};\n\nvar publicMethodMap = {\n  // Public APIs\n  //\n  // http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerclustererplus/docs/reference.html#events\n  getAverageCenter: function getAverageCenter(markerClusterer) {\n    return markerClusterer.getAverageCenter();\n  },\n  getBatchSizeIE: function getBatchSizeIE(markerClusterer) {\n    return markerClusterer.getBatchSizeIE();\n  },\n  getCalculator: function getCalculator(markerClusterer) {\n    return markerClusterer.getCalculator();\n  },\n  getClusterClass: function getClusterClass(markerClusterer) {\n    return markerClusterer.getClusterClass();\n  },\n  getClusters: function getClusters(markerClusterer) {\n    return markerClusterer.getClusters();\n  },\n  getEnableRetinaIcons: function getEnableRetinaIcons(markerClusterer) {\n    return markerClusterer.getEnableRetinaIcons();\n  },\n  getGridSize: function getGridSize(markerClusterer) {\n    return markerClusterer.getGridSize();\n  },\n  getIgnoreHidden: function getIgnoreHidden(markerClusterer) {\n    return markerClusterer.getIgnoreHidden();\n  },\n  getImageExtension: function getImageExtension(markerClusterer) {\n    return markerClusterer.getImageExtension();\n  },\n  getImagePath: function getImagePath(markerClusterer) {\n    return markerClusterer.getImagePath();\n  },\n  getImageSize: function getImageSize(markerClusterer) {\n    return markerClusterer.getImageSize();\n  },\n  getMarkers: function getMarkers(markerClusterer) {\n    return markerClusterer.getMarkers();\n  },\n  getMaxZoom: function getMaxZoom(markerClusterer) {\n    return markerClusterer.getMaxZoom();\n  },\n  getMinimumClusterSize: function getMinimumClusterSize(markerClusterer) {\n    return markerClusterer.getMinimumClusterSize();\n  },\n  getStyles: function getStyles(markerClusterer) {\n    return markerClusterer.getStyles();\n  },\n  getTitle: function getTitle(markerClusterer) {\n    return markerClusterer.getTitle();\n  },\n  getTotalClusters: function getTotalClusters(markerClusterer) {\n    return markerClusterer.getTotalClusters();\n  },\n  getZoomOnClick: function getZoomOnClick(markerClusterer) {\n    return markerClusterer.getZoomOnClick();\n  },\n\n\n  // Public APIs - Use this carefully\n  addMarker: function addMarker(markerClusterer, marker) {\n    var nodraw = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    return markerClusterer.addMarker(marker, nodraw);\n  },\n  addMarkers: function addMarkers(markerClusterer, markers) {\n    var nodraw = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    return markerClusterer.addMarkers(markers, nodraw);\n  },\n  removeMarker: function removeMarker(markerClusterer, marker) {\n    var nodraw = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    return markerClusterer.removeMarker(marker, nodraw);\n  },\n  removeMarkers: function removeMarkers(markerClusterer, markers) {\n    var nodraw = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    return markerClusterer.removeMarkers(markers, nodraw);\n  },\n  clearMarkers: function clearMarkers(markerClusterer) {\n    return markerClusterer.clearMarkers();\n  },\n  fitMapToMarkers: function fitMapToMarkers(markerClusterer) {\n    return markerClusterer.fitMapToMarkers();\n  },\n  repaint: function repaint(markerClusterer) {\n    return markerClusterer.repaint();\n  }\n};\n\nvar controlledPropUpdaterMap = {\n  averageCenter: function averageCenter(markerClusterer, _averageCenter) {\n    markerClusterer.setAverageCenter(_averageCenter);\n  },\n  batchSizeIE: function batchSizeIE(markerClusterer, _batchSizeIE) {\n    markerClusterer.setBatchSizeIE(_batchSizeIE);\n  },\n  calculator: function calculator(markerClusterer, _calculator) {\n    markerClusterer.setCalculator(_calculator);\n  },\n  enableRetinaIcons: function enableRetinaIcons(markerClusterer, _enableRetinaIcons) {\n    markerClusterer.setEnableRetinaIcons(_enableRetinaIcons);\n  },\n  gridSize: function gridSize(markerClusterer, _gridSize) {\n    markerClusterer.setGridSize(_gridSize);\n  },\n  ignoreHidden: function ignoreHidden(markerClusterer, _ignoreHidden) {\n    markerClusterer.setIgnoreHidden(_ignoreHidden);\n  },\n  imageExtension: function imageExtension(markerClusterer, _imageExtension) {\n    markerClusterer.setImageExtension(_imageExtension);\n  },\n  imagePath: function imagePath(markerClusterer, _imagePath) {\n    markerClusterer.setImagePath(_imagePath);\n  },\n  imageSizes: function imageSizes(markerClusterer, _imageSizes) {\n    markerClusterer.setImageSizes(_imageSizes);\n  },\n  maxZoom: function maxZoom(markerClusterer, _maxZoom) {\n    markerClusterer.setMaxZoom(_maxZoom);\n  },\n  minimumClusterSize: function minimumClusterSize(markerClusterer, _minimumClusterSize) {\n    markerClusterer.setMinimumClusterSize(_minimumClusterSize);\n  },\n  styles: function styles(markerClusterer, _styles) {\n    markerClusterer.setStyles(_styles);\n  },\n  title: function title(markerClusterer, _title) {\n    markerClusterer.setTitle(_title);\n  },\n  zoomOnClick: function zoomOnClick(markerClusterer, _zoomOnClick) {\n    markerClusterer.setZoomOnClick(_zoomOnClick);\n  }\n};\n\nfunction getInstanceFromComponent(component) {\n  return component.state[_constants.MARKER_CLUSTERER];\n}\n\nexports.default = (0, _flowRight3.default)(_createReactClass2.default, (0, _enhanceElement2.default)(getInstanceFromComponent, publicMethodMap, eventMap, controlledPropUpdaterMap))({\n  displayName: \"MarkerClusterer\",\n\n  propTypes: (0, _extends3.default)({}, controlledPropTypes, defaultUncontrolledPropTypes),\n\n  contextTypes: (0, _defineProperty3.default)({}, _constants.MAP, _propTypes2.default.object),\n\n  childContextTypes: (_childContextTypes = {}, (0, _defineProperty3.default)(_childContextTypes, _constants.ANCHOR, _propTypes2.default.object), (0, _defineProperty3.default)(_childContextTypes, _constants.MARKER_CLUSTERER, _propTypes2.default.object), _childContextTypes),\n\n  getInitialState: function getInitialState() {\n    // http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerclustererplus/docs/reference.html#events\n    var markerClusterer = new _markerClustererPlus2.default(this.context[_constants.MAP], [], (0, _enhanceElement.collectUncontrolledAndControlledProps)(defaultUncontrolledPropTypes, controlledPropTypes, this.props));\n    return (0, _defineProperty3.default)({}, _constants.MARKER_CLUSTERER, markerClusterer);\n  },\n  getChildContext: function getChildContext() {\n    var _ref2;\n\n    var markerClusterer = getInstanceFromComponent(this);\n    return _ref2 = {}, (0, _defineProperty3.default)(_ref2, _constants.ANCHOR, markerClusterer), (0, _defineProperty3.default)(_ref2, _constants.MARKER_CLUSTERER, markerClusterer), _ref2;\n  },\n  componentDidUpdate: function componentDidUpdate() {\n    var markerClusterer = getInstanceFromComponent(this);\n    markerClusterer.repaint();\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    var markerClusterer = getInstanceFromComponent(this);\n    if (markerClusterer) {\n      markerClusterer.setMap(null);\n    }\n  },\n  render: function render() {\n    var children = this.props.children;\n\n\n    return _react2.default.createElement(\n      \"div\",\n      null,\n      children\n    );\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-google-maps/lib/addons/MarkerClusterer.js\n// module id = 2034\n// module chunks = 0","/*!\n  * $script.js JS loader & dependency manager\n  * https://github.com/ded/script.js\n  * (c) Dustin Diaz 2014 | License MIT\n  */\n\n(function (name, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\n  else if (typeof define == 'function' && define.amd) define(definition)\n  else this[name] = definition()\n})('$script', function () {\n  var doc = document\n    , head = doc.getElementsByTagName('head')[0]\n    , s = 'string'\n    , f = false\n    , push = 'push'\n    , readyState = 'readyState'\n    , onreadystatechange = 'onreadystatechange'\n    , list = {}\n    , ids = {}\n    , delay = {}\n    , scripts = {}\n    , scriptpath\n    , urlArgs\n\n  function every(ar, fn) {\n    for (var i = 0, j = ar.length; i < j; ++i) if (!fn(ar[i])) return f\n    return 1\n  }\n  function each(ar, fn) {\n    every(ar, function (el) {\n      return !fn(el)\n    })\n  }\n\n  function $script(paths, idOrDone, optDone) {\n    paths = paths[push] ? paths : [paths]\n    var idOrDoneIsDone = idOrDone && idOrDone.call\n      , done = idOrDoneIsDone ? idOrDone : optDone\n      , id = idOrDoneIsDone ? paths.join('') : idOrDone\n      , queue = paths.length\n    function loopFn(item) {\n      return item.call ? item() : list[item]\n    }\n    function callback() {\n      if (!--queue) {\n        list[id] = 1\n        done && done()\n        for (var dset in delay) {\n          every(dset.split('|'), loopFn) && !each(delay[dset], loopFn) && (delay[dset] = [])\n        }\n      }\n    }\n    setTimeout(function () {\n      each(paths, function loading(path, force) {\n        if (path === null) return callback()\n        \n        if (!force && !/^https?:\\/\\//.test(path) && scriptpath) {\n          path = (path.indexOf('.js') === -1) ? scriptpath + path + '.js' : scriptpath + path;\n        }\n        \n        if (scripts[path]) {\n          if (id) ids[id] = 1\n          return (scripts[path] == 2) ? callback() : setTimeout(function () { loading(path, true) }, 0)\n        }\n\n        scripts[path] = 1\n        if (id) ids[id] = 1\n        create(path, callback)\n      })\n    }, 0)\n    return $script\n  }\n\n  function create(path, fn) {\n    var el = doc.createElement('script'), loaded\n    el.onload = el.onerror = el[onreadystatechange] = function () {\n      if ((el[readyState] && !(/^c|loade/.test(el[readyState]))) || loaded) return;\n      el.onload = el[onreadystatechange] = null\n      loaded = 1\n      scripts[path] = 2\n      fn()\n    }\n    el.async = 1\n    el.src = urlArgs ? path + (path.indexOf('?') === -1 ? '?' : '&') + urlArgs : path;\n    head.insertBefore(el, head.lastChild)\n  }\n\n  $script.get = create\n\n  $script.order = function (scripts, id, done) {\n    (function callback(s) {\n      s = scripts.shift()\n      !scripts.length ? $script(s, id, done) : $script(s, callback)\n    }())\n  }\n\n  $script.path = function (p) {\n    scriptpath = p\n  }\n  $script.urlArgs = function (str) {\n    urlArgs = str;\n  }\n  $script.ready = function (deps, ready, req) {\n    deps = deps[push] ? deps : [deps]\n    var missing = [];\n    !each(deps, function (dep) {\n      list[dep] || missing[push](dep);\n    }) && every(deps, function (dep) {return list[dep]}) ?\n      ready() : !function (key) {\n      delay[key] = delay[key] || []\n      delay[key][push](ready)\n      req && req(missing)\n    }(deps.join('|'))\n    return $script\n  }\n\n  $script.done = function (idOrDone) {\n    $script([null], idOrDone)\n  }\n\n  return $script\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/scriptjs/dist/script.js\n// module id = 2464\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!./custom.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./custom.css\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./custom.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles/custom.css\n// module id = 2469\n// module chunks = 0","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport Rx from 'rxjs'\nimport rxjsconfig from 'recompose/rxjsObservableConfig'\nimport {setObservableConfig} from 'recompose'\nimport getMuiTheme from 'material-ui/styles/getMuiTheme'\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\n\nimport {Router, hashHistory} from 'react-router'\nimport {syncHistoryWithStore} from 'react-router-redux'\nimport injectTapEventPlugin from 'react-tap-event-plugin'\n\nimport createStore from './store/createStore'\nimport routes from './routes'\n\nimport './styles'\n\nconst store = createStore()\nconst history = syncHistoryWithStore(hashHistory, store)\n\ninjectTapEventPlugin()\n\nsetObservableConfig({\n    // Converts a plain ES observable to an RxJS 5 observable\n    fromESObservable: Rx.Observable.from\n})\nsetObservableConfig(rxjsconfig)\n\nconst muiTheme = getMuiTheme({\n    fontFamily: 'Open Sans, sans-serif',\n    palette: {\n        primary1Color: '#5d6474',\n        primary2Color: '#5d6474',\n        primary3Color: '#5d6474',\n        accent1Color: '#5d6474',\n        accent2Color: '#fff',\n        accent3Color: '#fff'\n    },\n    appBar: {\n        height: 50,\n        textColor: 'white'\n    }\n})\n\nReactDOM.render(\n    <Provider store={store}>\n        <MuiThemeProvider muiTheme={getMuiTheme(muiTheme)}>\n            <div style={{width: '100%', height: '100%'}}>\n                <Router history={history} routes={routes} />\n            </div>\n        </MuiThemeProvider>\n    </Provider>,\n    document.getElementById('wrapper')\n)\n\n\n\n// WEBPACK FOOTER //\n// src/index.js"],"mappingshPA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC7WA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC5BA;AACA;;;;;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACjfA;AAiBA;AACA;;;;;;;;;;;;;;ACxNA;AACA;;;;;;;;;;;;;;;;;;;ACDA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACJA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AALA;AAaA;AACA;AAGA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAdA;AAkBA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAtBA;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;;;;;;AC3IA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC9BA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAdA;AAkBA;AACA;AACA;AAFA;AAIA;AACA;AAvIA;AACA;AAyIA;;;;;;;;;;;;;;AC1IA;AACA;AADA;AACA;;;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AADA;AAGA;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC/BA;AACA;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC/BA;AACA;;;;;;;;;;;;;;;;;;;;ACEA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;AAXA;AACA;AACA;AAUA;AACA;AACA;;;AAGA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAQA;AAAA;AAAA;AACA;AACA;AAVA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AA3BA;AA4BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3CA;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArDA;AACA;AADA;AAFA;AAKA;AACA;;;AAkDA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAZA;AADA;AAuBA;;;;AAtFA;AACA;AAwFA;AACA;AADA;AACA;AAGA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAlBA;AAXA;;;;;;AC/GA;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AChCA;AACA;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC/BA;AACA;;;AAAA;AACA;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAQA;AACA;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC/BA;AACA;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACJA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAZA;AAqBA;AACA;AADA;AAGA;AACA;AADA;AAzBA;AACA;AA8BA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAWA;AACA;AACA;AAHA;AAaA;AACA;AACA;AAHA;AACA;AAQA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AADA;AAQA;AAZA;AAeA;AAlBA;AAqBA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;ACtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC/BA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzCA;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;ACAA;AACA;;;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;ACxMA;AACA;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACRA;AACA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AACA;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC/BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AADA;AACA;;;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AADA;AAGA;;;;;;;;;;;;;;;ACbA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;ACnDA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAIA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAdA;AAkBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAzDA;AA0EA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AA/BA;AAPA;AADA;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;;AChNA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;;;;;;;;;;;;;ACPA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;;;ACxFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AAJA;AAbA;AAqBA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AAFA;AAdA;AADA;AAwBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AA5BA;AADA;AAdA;AAuDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;ACpIA;AACA;;;;;AACA;;;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAdA;AAkBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAzDA;AA0EA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAVA;AAPA;AADA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;;ACtLA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAdA;AAkBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAzDA;AA0EA;AACA;AAFA;AAKA;AACA;AACA;AADA;AAGA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAnCA;AAPA;AADA;AAiDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;;AC7NA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AACA;AACA;AAHA;AAtBA;AACA;AA6BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AARA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;;;;;;;;;;;;;;;AC3EA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AATA;AADA;AACA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AACA;AAYA;;;;;;;;;;;;;;;AC3CA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;;AClDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;ACpDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAXA;AAeA;AACA;;;;;;;;;;;;;AClEA;AACA;AAHA;AACA;;;;;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACZA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;;;;;;;;;;;;;;;;;ACbA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrhJA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACxFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACxFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;AC3GA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACpDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACzFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;AChJA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACnEA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACvFA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACrDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;;;AChMA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AADA;AAeA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AADA;AAWA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAfA;AADA;AAdA;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;AC/GA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AADA;AACA;AAcA;AAGA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAtBA;AADA;AAgCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AApCA;AADA;AAdA;AA+DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AADA;AAGA;;;;;;;;;;;;;;ACrIA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAdA;AAkBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAzDA;AA0EA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AATA;AAPA;AADA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;;ACvLA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAdA;AAkBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AAFA;AAIA;AACA;AADA;AArEA;AA0EA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAPA;AADA;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;;;;AChMA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AADA;AAeA;AACA;AAFA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AArBA;AADA;AA0BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AA9BA;AADA;AAdA;AAyDA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;;;;;;;;;;;;;;;;ACrHA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AADA;AAbA;AA0BA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AARA;AAgBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAjBA;AA2BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AA/BA;AADA;AAdA;AA0DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;AC1IA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AADA;AAeA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AADA;AAWA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAfA;AADA;AAdA;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;AC/GA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;;;AACA;AAAA;AACA;AAAA;AACA;AADA;AADA;AACA;AAKA;;;;;;;;;;;;;ACTA;AACA;;;AAAA;AACA;;;;;AACA;AAAA;AACA;AAAA;AACA;AADA;AADA;AACA;AAKA;;;;;;;;;;;;;ACTA;AACA;;;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAMA;AACA;;;;;;;;;;;;;;;ACZA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AATA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AATA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAlBA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AATA;AAaA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AArBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAbA;AAiBA;AACA;AACA;AAFA;AAlMA;AAyMA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAPA;AADA;AAcA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAfA;AARA;AAPA;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;ACzRA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;AAFA;AAzFA;AA+FA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AADA;AAiBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAlBA;AAPA;AAPA;AA4CA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;ACnMA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AATA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AATA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAlBA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AATA;AAaA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AArBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAjLA;AA4LA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAUA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAUA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AArBA;AADA;AADA;AADA;AA+BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAhCA;AAPA;AAPA;AA0DA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;AC9SA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAVA;AAgBA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AATA;AAaA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AArBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AATA;AA7FA;AA8GA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAFA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AADA;AAzBA;AAiCA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAVA;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AARA;AADA;AAVA;AA0BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AADA;AAvBA;AA+BA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AARA;AADA;AAVA;AAxEA;AA7CA;AADA;AADA;AAbA;AAoKA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;ACtUA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AADA;AAeA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AADA;AAWA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAfA;AADA;AAdA;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;AC/GA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AADA;AAeA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AADA;AAWA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAfA;AADA;AAdA;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;AC/GA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAUA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAiBA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAPA;AAWA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAdA;AAkBA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AAJA;AArKA;AA6KA;AACA;AAFA;AACA;AAKA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAmBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BA;AA8BA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAzDA;AA2EA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AADA;AA5EA;AADA;AAqFA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAdA;AAzFA;AADA;AAdA;AA6HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAZA;AAoBA;AACA;AADA;AAGA;;;;;;;;;;;;;ACxYA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAdA;AADA;AA3FA;AACA;AAyHA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AA5BA;AALA;AA4CA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AATA;AARA;AAwBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAtCA;AADA;AADA;AAghCA;AADA;AAFA;AA2CA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AANA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAdA;AADA;AAFA;AA5FA;AAqHA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAEA;AAjIA;AAmIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAxMA;AA4MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAJA;AA5BA;AACA;AAmCA;;;;;;;;;;;;;;ACtdA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AACA;AAcA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAdA;AAkBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAjBA;AA3EA;AAkGA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAPA;AADA;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;;;;AClOA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAHA;AAUA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAjBA;AALA;AA9BA;AA2DA;AACA;AAFA;AAKA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AARA;AAaA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAMA;AAPA;AAdA;AADA;AAJA;AAbA;AA8CA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;;;;;;;;;;;;;;AChKA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAiBA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAZA;AAgBA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AArJA;AA4JA;AACA;AAFA;AAKA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAiBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAlBA;AADA;AA6BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAjCA;AADA;AAdA;AA4DA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;;;;;;;;;;;;;;;;ACvQA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAiBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAZA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAzBA;AA6BA;AACA;AACA;AACA;AAFA;AADA;AAxHA;AAgiBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAPA;AAlBA;AAJA;AAbA;AAwDA;AACA;AACA;AACA;AADA;AAGA;;;;;;;;;;;;;;;;ACpPA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AApBA;AAFA;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAiBA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AARA;AAeA;AACA;AADA;AAGA;AACA;AADA;AAxFA;AA6FA;AACA;AAFA;AAKA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AA5BA;AA8BA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AA/BA;AADA;AAJA;AAdA;AA2DA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;;;;;;;;;;;;AC/LA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACxBA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAdA;AAkBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAzDA;AA0EA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AATA;AAPA;AADA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;;;;ACvLA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAxBA;AA6BA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAPA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAVA;AAYA;AACA;AACA;AACA;AACA;AAJA;AApBA;AAbA;AAJA;AA8CA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AA/CA;AADA;AAdA;AA0EA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;;;;;;;;;;;;;;AClKA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAMA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAdA;AAkBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAzDA;AA0EA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AAtCA;AAPA;AADA;AAoDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;;;;AC5NA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AADA;AAeA;AACA;AAFA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AADA;AAWA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAfA;AADA;AAdA;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;;;;;;;;;;;;;;ACtGA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAdA;AAkBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAzDA;AA0EA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AAzBA;AAPA;AADA;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;;;;AC7MA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAKA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAXA;AAaA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAiBA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAPA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAPA;AAFA;AAFA;AAkBA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAdA;AAkBA;AACA;AACA;AACA;AACA;AADA;AAHA;AAhLA;AAyLA;AACA;AAFA;AAKA;AACA;AACA;AADA;AAGA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAPA;AAgBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAhBA;AAjBA;AA6CA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAPA;AA9CA;AADA;AA2DA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AARA;AA/DA;AADA;AAdA;AAiGA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;;;;;;;;;;;;;;AC7VA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAdA;AAkBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAzDA;AA0EA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AADA;AAPA;AAPA;AADA;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;;;;AC5LA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAMA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AADA;AAeA;AACA;AAFA;AAKA;AACA;AACA;AADA;AAGA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AA9BA;AAsCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AA1CA;AAmDA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AApDA;AADA;AAdA;AA+EA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;;;;;;;;;;;;;;AC3JA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACjBA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAdA;AAkBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAzDA;AA0EA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAfA;AAPA;AADA;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;;;;AC7LA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AADA;AAeA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AARA;AADA;AAkBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAtBA;AADA;AAdA;AAiDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;ACtHA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AAJA;AA5BA;AAoCA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AAFA;AAdA;AAJA;AA2BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AA5BA;AADA;AAdA;AAuDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;ACnJA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AACA;AADA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AALA;AAOA;AACA;AARA;AAUA;AAAA;AAAA;AACA;AADA;AAXA;AAeA;AAAA;AAAA;AAAA;AAAA;AAhBA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AADA;;;;;;;;;;;;;ACrCA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AACA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAPA;AA5BA;AAyCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AATA;AAFA;AADA;AAuBA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;ACnGA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAOA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AANA;AAYA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAvBA;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAnCA;AA2CA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AADA;AAGA;AACA;AADA;AAlBA;AAxIA;AAgKA;AACA;AACA;AADA;AAGA;AAEA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBA;AACA;AA0BA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAPA;AA5BA;AACA;AAsCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AA/BA;AADA;AAuCA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AALA;AAaA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AADA;AARA;AAcA;AArBA;AAjBA;AADA;AAzCA;AAsFA;AACA;;;;;;;;;;;;;;;;ACnUA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;AC7BA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAJA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAiBA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAZA;AAgBA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AATA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AALA;AAYA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAVA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAPA;AAWA;AACA;AACA;AAFA;AAtIA;AA4IA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AACA;AAYA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AAUA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAkBA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AADA;AAnBA;AA0BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AA3BA;AAlBA;AAwDA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;ACrQA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAhBA;AAoBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AANA;AAWA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AA5DA;AA6EA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAGA;AAHA;AAMA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAqBA;AACA;AACA;AACA;AACA;AACA;AA3BA;AAPA;AADA;AAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AACA;AASA;;;;;;;;;;;;;;;;ACzMA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAJA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AANA;AAUA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAZA;AAgBA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AATA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;AAFA;AAtHA;AA4HA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;AA+BA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AADA;AAhCA;AAuCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAxCA;AAdA;AAiEA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;ACjPA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAPA;AAWA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AANA;AA1BA;AAsCA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAPA;AADA;AAwBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AA5BA;AADA;AAdA;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;AClJA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAMA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAiBA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAJA;AAcA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAPA;AAbA;AAlJA;AA8KA;AACA;AAFA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAaA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AADA;AAnBA;AAyBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAnDA;AA+DA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAJA;AAJA;AAbA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArCA;AAhEA;AAwGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAlHA;AADA;AAPA;AAqIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAZA;AAmBA;AACA;AADA;AAGA;;;;;;;;;;;;;;ACxYA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAdA;AAkBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAzDA;AA0EA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAtCA;AAPA;AADA;AAoDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;;ACxNA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAeA;AACA;AACA;AACA;AAJA;AAUA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AAJA;AAUA;AACA;AACA;AACA;AAJA;AAUA;AACA;AACA;AACA;AAJA;AAYA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AACA;AALA;AACA;AAoBA;AAEA;AACA;AACA;AAHA;AASA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AAFA;AAKA;AACA;AACA;AAHA;AAWA;AACA;AAFA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACrKA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAdA;AAkBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAzDA;AA0EA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AANA;AAaA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAVA;AAPA;AADA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AATA;AACA;AAaA;;;;;;;;;;;;;;AChMA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAJA;AAcA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAHA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AARA;AAxBA;AAPA;AA6CA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AAHA;AAcA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAJA;AAaA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAtLA;AACA;AAgywBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AALA;AAFA;AAzBA;AAuCA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AAxBA;AA2BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA5BA;AALA;AADA;AAxCA;AADA;AAvCA;AA2HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;;;;;;;AC7XA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAfA;AAFA;AAhBA;AACA;AAwCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AArBA;AAFA;AADA;AADA;AAdA;AAkDA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;ACzHA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAdA;AAkBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAzDA;AA8DA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AANA;AAaA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAfA;AAPA;AADA;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AAUA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;AC5LA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AArBA;AAmCA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AADA;AAjBA;AAHA;AAyBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AAxJA;AAuKA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AACA;AAYA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AADA;AAZA;AAoBA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAdA;AAsBA;AAAA;AAAA;AACA;AACA;AAFA;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;AAvBA;AA4BA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AACA;AACA;AAFA;AAjCA;AALA;AAJA;AADA;AACA;AAqDA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AACA;AAUA;;;;;;;;;;;;;;AC/VA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAVA;AAcA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AADA;AAbA;AAiBA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AADA;AADA;AAdA;AAHA;AAwBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAVA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AAtLA;AAqMA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AApBA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAkBA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAVA;AA/EA;AACA;AA4FA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAGA;AAHA;AADA;AAMA;AAAA;AAAA;AAAA;AAAA;AAPA;AASA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AALA;AAbA;AA0BA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAbA;AAqBA;AAAA;AAAA;AACA;AACA;AAFA;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;AAtBA;AA2BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAbA;AAkBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AACA;AADA;AAjDA;AAsDA;AACA;AACA;AACA;AACA;AACA;AALA;AA3DA;AAJA;AADA;AACA;AA2EA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;;;;;;;AC1eA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AANA;AAHA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AALA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AApBA;AAkCA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAJA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AALA;AAcA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AADA;AAjBA;AAHA;AAyBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AARA;AAYA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAJA;AA5MA;AAuNA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAUA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AACA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AADA;AANA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AADA;AAJA;AAaA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AACA;AAAA;AACA;AADA;AATA;AAdA;AA6BA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAHA;AADA;AAJA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AARA;AAgBA;AAAA;AAAA;AACA;AACA;AAFA;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;AAjBA;AAsBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AATA;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AAFA;AAzCA;AALA;AAJA;AADA;AACA;AA4DA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AACA;AAUA;;;;;;;;;;;;;;ACrcA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AAAA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAJA;AAaA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AAxBA;AAsCA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AADA;AAjBA;AAHA;AAyBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AARA;AAYA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AADA;AADA;AA3KA;AAkLA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAHA;AAUA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AAHA;AARA;AAcA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAoBA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AARA;AAhFA;AACA;AA2FA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AACA;AAYA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAdA;AAsBA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAvBA;AA2BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AALA;AAaA;AAAA;AAAA;AACA;AADA;AAdA;AAkBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AAFA;AAlDA;AADA;AAJA;AADA;AACA;AAiEA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;;;;;;;;;;;;;;ACncA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAJA;AAaA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AAxBA;AAsCA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AADA;AAjBA;AAHA;AAyBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AARA;AAYA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAJA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AA1KA;AAyLA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAHA;AAUA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AAHA;AARA;AAcA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AARA;AAjEA;AACA;AA4EA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AACA;AAYA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAdA;AAsBA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAvBA;AA2BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AACA;AACA;AAFA;AA5CA;AAJA;AAJA;AADA;AACA;AA8DA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AACA;AAUA;;;;;;;;;;;;;;AC/bA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAJA;AAJA;AAgBA;AACA;AACA;AACA;AACA;AAFA;AAFA;AApBA;AA4BA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAFA;AADA;AAdA;AAHA;AAyBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAHA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AA3JA;AAqKA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAHA;AAUA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AAHA;AARA;AAcA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AARA;AAjEA;AA4EA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AACA;AAYA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AADA;AAdA;AAqBA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAvBA;AA8BA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AADA;AAdA;AAsBA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAdA;AAsBA;AAAA;AAAA;AACA;AACA;AAFA;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;AAvBA;AA4BA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AACA;AACA;AAFA;AAzCA;AALA;AAJA;AADA;AACA;AA6DA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAHA;AACA;AASA;;;;;;;;;;;;;;ACpeA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AArBA;AAmCA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AADA;AAjBA;AAHA;AAyBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AAxJA;AAuKA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AACA;AAYA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AAZA;AAeA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AARA;AAgBA;AAAA;AAAA;AACA;AACA;AAFA;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;AAjBA;AAsBA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AACA;AACA;AAFA;AA3BA;AALA;AAJA;AADA;AACA;AA8CA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;;;;;;;;;;;;;;AClUA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAJA;AAaA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AAxBA;AAsCA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AADA;AAjBA;AAHA;AAyBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AARA;AAYA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAJA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AA1KA;AAyLA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAHA;AAUA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AAHA;AARA;AAcA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AARA;AAjEA;AACA;AA4EA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AACA;AAYA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AARA;AAWA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAdA;AAsBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAvBA;AA4BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AACA;AACA;AAFA;AA7CA;AALA;AAJA;AADA;AACA;AAgEA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;;;;;;;;;;;;;;AC7bA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAVA;AAcA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAJA;AAaA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAfA;AAuBA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAFA;AADA;AAdA;AAHA;AAyBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAHA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AAlIA;AAiJA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AACA;AAYA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAXA;AAcA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAnBA;AA2BA;AAAA;AAAA;AACA;AACA;AAFA;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;AA5BA;AAiCA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AACA;AACA;AAFA;AAtCA;AALA;AAJA;AADA;AACA;AAyDA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;;;;;;;;;;;;;;AC5TA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAVA;AAcA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AAnBA;AAiCA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AADA;AAjBA;AAHA;AAyBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAzIA;AA0JA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AAYA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AADA;AAPA;AAeA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAnBA;AA2BA;AAAA;AAAA;AACA;AACA;AAFA;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;AA5BA;AAiCA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAnCA;AALA;AAJA;AADA;AACA;AAsDA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AACA;AAUA;;;;;;;;;;;;;AC7UA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAHA;AAcA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AAFA;AAZA;AAiBA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AARA;AApBA;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AATA;AArGA;AACA;AA0HA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AATA;AAXA;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;;;;;;;ACvLA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAJA;AAaA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AAtBA;AAoCA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AADA;AAjBA;AAHA;AAyBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AARA;AAYA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAJA;AAhKA;AA2KA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AApBA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAPA;AAWA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AARA;AA1EA;AACA;AAqiBA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAPA;AAeA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAhBA;AAoBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AALA;AALA;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AAFA;AAvCA;AALA;AAJA;AADA;AACA;AA0DA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AACA;AAUA;;;;;;;;;;;;;;;;AC9cA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AACA;AAYA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AApBA;AAqCA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAfA;AADA;AAyBA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AADA;AA7BA;AADA;AAdA;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;ACjJA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AAQA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAUA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAdA;AAkBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAzDA;AA0EA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AAtDA;AAPA;AADA;AAoEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;;;;AChPA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAQA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAXA;AAaA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAHA;AAFA;AANA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAiBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAPA;AAWA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAdA;AAkBA;AACA;AACA;AACA;AACA;AADA;AAHA;AA/KA;AAwLA;AACA;AAFA;AAKA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAPA;AAYA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AAsBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AADA;AApCA;AAoDA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AADA;AArDA;AADA;AA8DA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAlEA;AADA;AAdA;AA6FA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;;;;;;;;;;;;;;;;AChVA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AAFA;AAbA;AAmBA;AACA;AAFA;AAKA;AACA;AACA;AADA;AAGA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AATA;AAkBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AA/BA;AADA;AAyCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AA7CA;AADA;AAbA;AAuEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;;;;;;;;;;;;AC3IA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAdA;AAkBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAzDA;AA0EA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAPA;AADA;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;AClMA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAPA;AAeA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAHA;AASA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AANA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAUA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAZA;AAgBA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAZA;AA5HA;AAiJA;AACA;AAFA;AACA;AAKA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAfA;AAeA;AAAA;AAAA;AAAA;AAAA;AAfA;AADA;AAFA;AAsBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAFA;AAoBA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAGA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AASA;AAzBA;AArBA;AAvBA;AA0EA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAEA;AADA;AA/FA;AACA;AAqGA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAVA;AAFA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAHA;AAjBA;AACA;AAuBA;;;;;;;;;;;;;;AC3VA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAdA;AAkBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AAFA;AAIA;AACA;AADA;AArEA;AA0EA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAPA;AADA;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;;;;AChMA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAFA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AARA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAJA;AAJA;AArDA;AAuEA;AACA;AACA;AAHA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbA;AAeA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAhBA;AAwBA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAOA;AAjBA;AAmBA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAfA;AAiCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AATA;AAnFA;AA+FA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAPA;AAnGA;AADA;AAbA;AAmIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;;;;;;;ACxQA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAdA;AAkBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAzDA;AA0EA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AARA;AADA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAbA;AAPA;AADA;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;AC1LA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAPA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAHA;AASA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AARA;AAaA;AACA;AADA;AAlBA;AAsBA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAXA;AALA;AAqBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AARA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAZA;AAgBA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AAjOA;AAgPA;AACA;AAFA;AAIA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AACA;AASA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAJA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAMA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AATA;AAeA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AARA;AADA;AADA;AAFA;AAsBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAGA;AAHA;AADA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AARA;AADA;AATA;AA0BA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AArCA;AA5BA;AAuEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AATA;AAvFA;AAuGA;AACA;AACA;AACA;AAJA;AA3GA;AACA;AAmHA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAWA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAnBA;AAdA;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAvBA;AACA;AA8BA;;;;;;;;;;;;AClhBA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AACA;AACA;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;;;;;;;;;;;;;;ACCA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACbA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAGA;;;;;;;;;;;;;;;;;ACxCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAYA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAMA;AACA;AAFA;AATA;AAehhBA;;;;;;;;;;;;;AC1DA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;AC1JA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACvFA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACtCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACxFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACzGA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACxFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACtEA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACnBA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACvDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACxFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACvDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACvDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACnFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACxGA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AAAA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAGA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;AChGA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;AC1GA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACnBA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACxFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACvFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACxFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;AC1EA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACzGA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACxFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACtCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;AC1DA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACtCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;AC1EA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACpDA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACpCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACtCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACxDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACvDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;AC1DA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACzCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACxDA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACrBA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;AC1DA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACzDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACzFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;AC1JA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACxGA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACvDA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACrBA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACxEA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACxGA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;ACjHA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AANA;AAYA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAjBA;AA5CA;AACA;AAyEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AADA;AARA;AAaA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;ACnJA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AADA;AAGA;AACA;AADA;AAlBA;AAJA;AA2BA;AACA;AACA;AAFA;AAvFA;AACA;AA6FA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;AC/JA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AADA;AAGA;AACA;AADA;AAlBA;AAJA;AA2BA;AACA;AACA;AAFA;AA5FA;AACA;AAkGA;AACA;AACA;AACA;AACA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AALA;AAFA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;;;;;;;;;;;;;ACtLA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AADA;AAGA;AACA;AADA;AAlBA;AAJA;AA2BA;AACA;AACA;AAFA;AA5FA;AACA;AAkGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAPA;AADA;AAFA;AAeA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;AC/KA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AADA;AAGA;AACA;AADA;AAlBA;AAJA;AA2BA;AACA;AACA;AAFA;AAvFA;AACA;AA6FA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAJA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AACA;AASA;;;;;;;;;;;;;AChLA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AADA;AAGA;AACA;AADA;AAlBA;AAJA;AA2BA;AACA;AACA;AAFA;AAvFA;AACA;AA6FA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;AC7JA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AADA;AAGA;AACA;AADA;AAlBA;AAJA;AA2BA;AACA;AACA;AAFA;AAvFA;AACA;AA6FA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;AC7JA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AADA;AAGA;AACA;AADA;AAlBA;AAJA;AA2BA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AArIA;AACA;AAiJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AAjBA;AACA;AAqBA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AADA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAXA;AAgBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAzBA;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAdA;AACA;AAqBA;;;;;;;;;;;;;;ACpSA;AACA;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACVA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAMA;AACA;;;;;;;;;;;;;;ACZA;AACA;;;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;;;;;;;;;;;;;;ACbA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAQA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAfA;AACA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAUA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AATA;AADA;AAJA;AAuBA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAUA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAnCA;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAzBA;AACA;AA8BA;;;;;;;;;;;;;;AC7NA;AACA;;;AAAA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;ACTA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;;;;;;;;;;;;;;ACbA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AANA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAUA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AATA;AADA;AANA;AAyBA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAUA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AApCA;AA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAxBA;AACA;AA6BA;;;;;;;;;;;;;;ACtOA;AACA;;;AAAA;AACA;;;AAAA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACRA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;AACA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AATA;AAHA;AAoBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAhFA;AACA;AA4FA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAVA;AALA;AA0BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AAZA;AAFA;AAiBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAtBA;AA3BA;AAwDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAXA;AACA;AAkBA;;;;;;;;;;;;;AC/NA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AACA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AATA;AAHA;AAoBA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AATA;AAFA;AAnFA;AA0GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AANA;AADA;AAWA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAWA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAnCA;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAlBA;AACA;AA0BA;;;;;;;;;;;;;;AClRA;AACA;;;AAAA;AACA;;;AAEA;AACA;;;;;;;;;;;;;;ACLA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AALA;AACA;AAQA;AAEA;AACA;AADA;AADA;AACA;AAMA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AACA;AAYA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAUA;AAEA;AACA;AACA;AAHA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AANA;AADA;AALA;AAiBA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAXA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAVA;AACA;AAmBA;;;;;;;;;;;;;ACjLA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAXA;AAsBA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAFA;AAFA;AANA;AAcA;AACA;AACA;AAFA;AAIA;AACA;AADA;AArBA;AAzEA;AACA;AAoGA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AADA;AAHA;AAPA;AACA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;AASA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAFA;AASA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AALA;AAUA;AAXA;AAaA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AANA;AAQA;AATA;AAdA;AAnBA;AAgDA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;;;;;;;;;;;;;;ACxNA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;ACPA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AANA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AA/CA;AAoDA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AATA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvCA;AAJA;AA8CA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AA/CA;AADA;AAbA;AAyEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;ACnLA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AALA;AACA;AAQA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AANA;AAaA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAlFA;AACA;AAuFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAiBA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AACA;AAUA;AAEA;AACA;AACA;AAHA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;AALA;AAUA;AACA;AAAA;AACA;AADA;AAfA;AADA;AAJA;AA4BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AAFA;AAWA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAhEA;AA7BA;AAHA;AA2GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAnDA;AACA;AA4DA;;;;;;;;;;;;;;;AC9YA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AANA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAhCA;AAqCA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BA;AAJA;AAqCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAtCA;AADA;AAbA;AAgEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;;;;;;;ACvJA;AACA;;;AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACnBA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;;;;;;;;;;;;;;;;ACVA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAMA;AACA;;;;;;;;;;;;;;ACZA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAiBA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAXA;AAxFA;AACA;AAuGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAPA;AAWA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AARA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAbA;AAbA;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;;;;;;;;;;;;;ACtLA;AACA;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;;;;;;;;;;;;;;;;ACPA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AACA;AAYA;AACA;AADA;AAdA;AAmBA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AADA;AAWA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AADA;AAZA;AADA;AAbA;AAoCA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;ACxGA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AANA;AAaA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAVA;AAcA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AANA;AAaA;AACA;AACA;AAFA;AA3FA;AAieA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAFA;AAUA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AA1CA;AAhBA;AAlBA;AAuFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AArCA;AACA;AA0CA;;;;;;;;;;;;;;;;ACpWA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AACA;AAYA;AACA;AAAA;AAAA;AAAA;AADA;AAdA;AAmBA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AADA;AAWA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AADA;AAfA;AADA;AAbA;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;AC/GA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACVA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AADA;AACA;AAUA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AACA;AADA;AACA;AAGA;AACA;AACA;AAFA;AAhCA;AAsCA;AADA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AANA;AASA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAPA;AADA;AAVA;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;;;;;;;;;;;;;;;ACjGA;AACA;;;AAAA;AACA;;;;;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAMA;;;;;;;;;;;;;;ACVA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AANA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AASA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AATA;AADA;AAJA;AAuBA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAWA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAnCA;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAlBA;AACA;AA0BA;;;;;;;;;;;;;;ACxMA;AACA;;;AAAA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;ACTA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AADA;AADA;AAbA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AA5BA;AAuCA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAJA;AAXA;AAsBA;AACA;;;;;;;;;;;;;;ACvFA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AANA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AASA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AATA;AADA;AAJA;AAuBA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAWA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAnCA;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAlBA;AACA;AA0BA;;;;;;;;;;;;;;ACrMA;AACA;;;AAAA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;ACTA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AADA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAVA;AAaA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;;;;;;;;;;;;;ACtDA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AATA;AACA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAiBA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AALA;AAZA;AAoBA;AArBA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAvBA;AACA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;AACA;AASA;;;;;;;;;;;;;ACzIA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AACA;AA/BA;AAoCA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AApDA;AAmEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAKA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAlBA;AADA;AACA;AAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAKA;AANA;AASA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAHA;AAQA;AACA;;;;;;;;;;;;;;AC9IA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;;;AACA;AAAA;AACA;AAAA;AACA;AADA;AADA;AACA;AAKA;;;;;;;;;;;;;ACTA;AACA;;;AAAA;AACA;;;;;AACA;AAAA;AACA;AAAA;AACA;AADA;AADA;AACA;AAKA;;;;;;;;;;;;;ACTA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AANA;AAXA;AAsBA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAVA;AA5DA;AA4EA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAKA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAjBA;AADA;AACA;AAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAIA;AAJA;AAHA;AADA;AAYA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAIA;AAAA;AAAA;AAAA;AAAA;AAJA;AAIA;AAJA;AAHA;AADA;AAYA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AANA;AAgBA;AACA;;;;;;;;;;;;;;AC9LA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAFA;AAHA;AAUA;AAAA;AAAA;AACA;AADA;AAXA;AAgBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AADA;AAOA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AADA;AAXA;AAPA;AA4BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AA7CA;AADA;AAyDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AAtBA;AACA;AAwBA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAJA;AAcA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAjCA;;;;;;;;;;;;;AC1GA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAHA;AACA;AASA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAPA;AA7BA;AA0CA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AATA;AAFA;AAZA;AAkCA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;ACjHA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAUA;AACA;AADA;AAGA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAFA;AAnBA;AAwBA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AACA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AARA;AADA;AAkBA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;;;;;;;;;;;;;ACxEA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAIA;AACA;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AAYA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAVA;AACA;AAWA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAxBA;AAmCA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAHA;AA7BA;AAmCA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AA5DA;AAsEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AALA;AAWA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AA1IA;AAoJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAPA;AAbA;AAwBA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAFA;AAaA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AANA;AAdA;AADA;AA4BA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAvCA;AAgDA;AACA;;;;;;;;;;;;;;;;ACpWA;AACA;;;;;AACA;AACA;AACA;AAAA;AACA;AADA;AAKA;AACA;;;;;;;;;;;;;;ACVA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAbA;AAgCA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAhBA;AAPA;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;ACtGA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAbA;AACA;AAmBA;AAEA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AAvDA;AACA;AAsEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAZA;AADA;AAHA;AA+BA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AADA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AADA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AADA;AAjBA;AAHA;AA6BA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAJA;AAQA;AATA;AADA;AAaA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAfA;AA9BA;AAmDA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;;;;;;;;;;;;;ACvOA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAHA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AArBA;AAyBA;AACA;AACA;AAFA;AA3BA;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAVA;AAgBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AARA;AAFA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAbA;AAkBA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AANA;AAWA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AAHA;AAcA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AADA;AAJA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AA7MA;AACA;AAsNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AASA;AAdA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AADA;AAHA;AADA;AAFA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AA6BA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAEA;AACA;AACA;AANA;AAtFA;AAgGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AA1BA;AACA;AA4BA;;;;;;;;;;;;;ACraA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AAAA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AADA;AAGA;AACA;AADA;AA9BA;AALA;AACA;AAyCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAYA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAPA;AADA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AA1BA;AADA;AA+BA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AARA;AACA;AAUA;;;;;;;;;;;;;AClHA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AANA;AAQA;AACA;AADA;AAVA;AACA;AAeA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AAUA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAUA;AACA;;;;;;;;;;;;;;AClGA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AACA;AAMA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAXA;AADA;AAJA;AA2BA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AADA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AARA;AADA;AAmBA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;ACrJA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;;;;;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AANA;AAQA;AACA;AADA;AAVA;AACA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AACA;AAMA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AACA;AAUA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAXA;AAcA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AADA;AADA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAVA;AAqBA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;AClJA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AANA;AAQA;AACA;AADA;AAVA;AACA;AAeA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AAUA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAUA;AACA;;;;;;;;;;;;;;ACtHA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AAtDA;AAqEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;AC3JA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAQA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAfA;AACA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAUA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AATA;AADA;AAJA;AAuBA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAWA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AApCA;AA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAzBA;AACA;AA8BA;;;;;;;;;;;;;;AC/NA;AACA;;;AAAA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACTA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AANA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAUA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AATA;AADA;AAHA;AAsBA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAWA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AArCA;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAzBA;AACA;AA8BA;;;;;;;;;;;;;;AChNA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACPA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAJA;AAaA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AA3BA;AA+BA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AA7EA;AACA;AAmFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AANA;AAagCA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAjCA;AADA;AA2CA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AANA;AADA;AAVA;AAsBA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAUA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAlCA;AADA;AAVA;AA2DA;AA1EA;AA4EA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AA7EA;AAoFA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAtFA;AA/CA;AADA;AA6IA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAfA;AACA;AAiBA;;;;;;;;;;;;;AC9SA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAPA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAHA;AAaA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AA1DA;AACA;AAoEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAyBA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AANA;AAaA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAojDA;AAbA;AAoFA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AA5DA;AAqEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AA9EA;AACA;AAqFA;;;;;;;;;;;;;ACtfA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AARA;AAcA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AANA;AAFA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AATA;AAFA;AAiBA;AACA;AACA;AACA;AAHA;AAjFA;AACA;AAwFA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AARA;AAgBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAPA;AAjBA;AAiCA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAzBA;AAtCA;AAmEA;AACA;AAAA;AAAA;AACA;AADA;AArFA;AA0FA;AACA;;;;;;;;;;;;;;AChNA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAJA;AAaA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AA3BA;AA+BA;AACA;AACA;AACA;AACA;AACA;AALA;AAnEA;AACA;AA4EA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AAzBA;AA2BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA5BA;AADA;AAiCA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;;;;;;;;;;;;;;;;ACzIA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAxBA;AA+BA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AALA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAPA;AAVA;AAJA;AA+BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAhCA;AADA;AAdA;AA2DA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;;;;;;;;;;;;;AClJA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AALA;AACA;AAQA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AANA;AACA;AAcA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAOA;AAEA;AACA;AACA;AAHA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AALA;AAgBA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAVA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAXA;AACA;AAoBA;;;;;;;;;;;;;;AC3KA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACPA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AACA;AAQA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AANA;AACA;AAcA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAOA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AAPA;AAkBA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAVA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAXA;AACA;AAoBA;;;;;;;;;;;;;;ACzLA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACTA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAHA;AAFA;AANA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAZA;AAqBA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAbA;AAuBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAPA;AAWA;AACA;AACA;AACA;AACA;AAJA;AAlBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAVA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAHA;AAcA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAdA;AApQA;AAwkBA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAFA;AAnBA;AAPA;AAmCA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAJA;AADA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAJA;AADA;AAfA;AADA;AA6BA;AAAA;AAAA;AACA;AADA;AA9BA;AApCA;AADA;AADA;AARA;AAqFA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;;;;;;;;;;;;;AC5bA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAEA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AADA;AAdA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAHA;AADA;AASA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAJA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AADA;AAUA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AADA;AAbA;AAHA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AARA;AAaA;AACA;AADA;AAnBA;AAHA;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AADA;AAjBA;AAqBA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AACA;AACA;AADA;AADA;AARA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AACA;AAFA;AApCA;AAyCA;AACA;AACA;AACA;AAHA;AA1CA;AAgDA;AACA;AADA;AA5DA;AAgEA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AALA;AAWA;AACA;AACA;AACA;AACA;AACA;AALA;AA9CA;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAvBA;AAzVA;AACA;AAyXA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AARA;AACA;AAgBA;AACA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AATA;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAFA;AAOA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAFA;AARA;AAgBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAFA;AAOA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAXA;AAjBA;AAfA;AAmDA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AAAA;AAAA;AAAA;AAAA;AARA;AAJA;AAgBA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AAPA;AAJA;AAeA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAJA;AAhCA;AAFA;AAgDA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AANA;AAJA;AAcA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAJA;AAJA;AAYA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAJA;AA3BA;AAFA;AAjDA;AApDA;AAkJA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AAxJA;AAgKA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;;;;;;;;;;;;;AC5kBA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AANA;AAWA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AACA;AAJA;AAzBA;AAgCA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AACA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AANA;AACA;AAaA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAMA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AARA;AADA;AADA;AAqBA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;ACvGA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AATA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAJA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAHA;AAaA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AADA;AAdA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AATA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAZA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AATA;AAvJA;AACA;AAwKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AANA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AATA;AADA;AAcA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAPA;AAUA;AAhBA;AAkBA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AALA;AAxBA;AACA;AAoCA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAWA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AArBA;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAJA;AACA;AAWA;;;;;;;;;;;;;;AC5VA;AACA;;;;;AAAA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;ACNA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAPA;AAcA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAVA;AAcA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AANA;AAaA;AACA;AACA;AAFA;AA5FA;AAmGA;AADA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAWA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAUA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AADA;AALA;AAJA;AAeA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AAFA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAlCA;AAhBA;AAZA;AAyEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AA/BA;AACA;AAoCA;;;;;;;;;;;;;;;;AC7UA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AACA;AAYA;AACA;AAAA;AAAA;AAAA;AADA;AAdA;AAmBA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AADA;AAWA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AADA;AAfA;AADA;AAbA;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;AC/GA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;ACVA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAZA;AAgBA;AACA;AAxBA;AA0BA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AA9GA;AAyHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AAYA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAMA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AADA;AALA;AAkBA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AADA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AARA;AAWA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AA1BA;AARA;AA0CA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAPA;AADA;AADA;AAJA;AAkBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AAnBA;AAnBA;AAbA;AA5CA;AAnBA;AAwHA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAPA;AAcA;;;;;;;;;;;;;;;AC3TA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AARA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AAFA;AAbA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAbA;AAFA;AAvDA;AA+EA;AACA;AAFA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAFA;AAYA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAVA;AADA;AAFA;AAbA;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;AADA;AAYA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AATA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAlBA;AAyBA;;;;;;;;;;;;;;;AClSA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAVA;AAiBA;AACA;AAtBA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAVA;AAiBA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AADA;AAGA;AACA;AALA;AAOA;AACA;AADA;AARA;AAnFA;AAiGA;AACA;AAFA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AANA;AAcA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAPA;AAJA;AAwBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAlBA;AA2BA;AArCA;AAZA;AAzBA;AADA;AAiFA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;;;;;;;;;;;AC/OA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAiBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAPA;AALA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AACA;AACA;AAJA;AAZA;AAmBA;AACA;AACA;AAFA;AA9EA;AAoFA;AACA;AAFA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAKA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AATA;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAbA;AAfA;AAlBA;AAsDA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;;;;;;;;;;;;AC5KA;AACA;;;AAAA;AACA;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACZA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAUA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAHA;AAaA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AAxBA;AAHA;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAJA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AALA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAJA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAPA;AAJA;AAiBA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAHA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAPA;AAjBA;AArEA;AA4GA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AApPA;AACA;AAgQA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AAVA;AALA;AA2BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAPA;AAaA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AADA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AALA;AAeA;AAxBA;AATA;AAoCA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AADA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AALA;AAeA;AAtBA;AATA;AA9EA;AAkHA;AACA;;;;;;;;;;;;;;AC9aA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AA/BA;AACA;AAqCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAUA;AAEA;AACA;AACA;AAHA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AALA;AAUA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAWA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AArCA;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAxBA;AACA;AAiCA;;;;;;;;;;;;;;ACzOA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACVA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AATA;AAZA;AACA;AA2BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAWA;AAEA;AACA;AACA;AAHA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AATA;AADA;AAZA;AA+BA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AADA;AAYA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AA7CA;AAuDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAzBA;AACA;AAkCA;;;;;;;;;;;;;;;;ACpQA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AADA;AAeA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAJA;AAeA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAhBA;AADA;AAdA;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;;;;;;;;;;;;;AC3GA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AAFA;AAXA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AATA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAtGA;AACA;AAqHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAJA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAXA;AAezCA;AADA;AAhBA;AAoEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdA;AANA;AA5EA;AAqGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAJA;AACA;AAYA;;;;;;;;;;;;;AC5QA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAhBA;AA4BA;AACA;AAFA;AACA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAWA;AAEA;AACA;AACA;AAHA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AALA;AADA;AADA;AAbA;AA0BA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAVA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAXA;AACA;AAoBA;;;;;;;;;;;;;;AChOA;AACA;;;AAAA;AACA;;;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACRA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAQA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AARA;AAYA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAtCA;AACA;AA4CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAUA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AATA;AADA;AAiBA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AATA;AADA;AAHA;AAsBA;AA/CA;AAkDA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AATA;AADA;AAHA;AAsBA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAtCA;AAgDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAzBA;AACA;AA8BA;;;;;;;;;;;;;;ACvSA;AACA;;;AAAA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACTA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AATA;AAHA;AAoBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AA/EA;AACA;AA2FA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AAYA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AAVA;AALA;AA0BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AAZA;AAFA;AAiBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAtBA;AA3BA;AAwDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAHA;AACA;AAUA;;;;;;;;;;;;;ACxNA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAfA;AAFA;AAfA;AACA;AAuCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AASA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AANA;AADA;AAWA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAWA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAnCA;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAjBA;AACA;AAyBA;;;;;;;;;;;;;;ACxMA;AACA;;;AAAA;AACA;;;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;ACJA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;AAXA;AACA;AACA;AAUA;AACA;AACA;;;AAGA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAQA;AAAA;AAAA;AACA;AACA;AAVA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AA3BA;AA4BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3CA;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArDA;AACA;AADA;AAFA;AAKA;AACA;;;AAkDA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAZA;AADA;AAuBA;;;;AAtFA;AACA;AAwFA;AACA;AADA;AACA;AAGA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAlBA;AAXA;;;;;;;;;;;;;AC9GA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAdA;AAHA;AAsBA;AACA;AACA;AACA;AAHA;AAvBA;AACA;AACA;AA+BA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AASA;AACA;;;;;;;;;;;;;;AC3GA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AANA;AACA;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAOA;AACA;;;;;;;;;;;;;;;;AClDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AACA;AADA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AANA;AADA;AAWA;AAAA;AAAA;AAAA;AAAA;AAZA;AAeA;AACA;;;;;;;;;;;;;;;;AC1BA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;;;;;;;;;;;;;;;;AC1BA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AATA;AADA;AAkBA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AAZA;AAHA;AAmBA;AACA;;;;;;;;;;;;;;AC1DA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;;;;AAIA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAzCA;AACA;AAmDA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AADA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AATA;AARA;AATA;AAqCA;AAxCA;AA2CA;AACA;;;;;;;;;;;;;;;;AC3HA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;AC9BA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;AC9BA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;AC9BA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;AChCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;AC/BA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAOA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAlBA;AA0BA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAnBA;AAuBA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAlGA;AA0GA;AACA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;AAWA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAPA;AAbA;AACA;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAFA;AAUA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AApBA;AADA;AA6BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AALA;AAaA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AADA;AAJA;AADA;AALA;AAjBA;AADA;AAxCA;AAkFA;AACA;;;;;;;;;;;;;;;;ACxPA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAOA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AANA;AAWA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAlBA;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAZA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AATA;AAtFA;AAwGA;AACA;AACA;AADA;AAGA;AAEA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AACA;AAsBA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAPA;AAxBA;AACA;AAkCA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AADA;AANA;AAaA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAFA;AASA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAlCA;AAXA;AAqDA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AALA;AAcA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAnBA;AADA;AA6BA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AApFA;AA6FA;AACA;;;;;;;;;;;;;;;;ACrTA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAOA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AANA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAlBA;AA0BA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAZA;AA5EA;AA+FA;AACA;AACA;AADA;AAGA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AACA;AAqBA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAPA;AAvBA;AACA;AAiCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAFA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAvBA;AAVA;AAsCA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AALA;AAaA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AADA;AANA;AADA;AALA;AAlBA;AADA;AAyCA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AAhFA;AAyFA;AACA;AACA;AADA;AAGA;;;;;;;;;;;;;ACpQA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;;;;;;;;;;;;;;;;AC9BA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;AC7DA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;;;;;;;;;;;;;;AC9BA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;;;;;;;;;;;;;;;;ACpCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;;;;;;;;;;;;;;ACzCA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;;;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AARA;AAYA;AACA;AACA;AADA;AAGA;;;;;;;;;;;;;;;ACpCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;AC9BA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAFA;AAcA;AACA;;;;;;;;;;;;;;;;ACtCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAPA;AAWA;AACA;;;;;;;;;;;;;;ACrCA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AACA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AARA;AAWA;AACA;;;;;;;;;;;;;;ACzBA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;;;;;;;;;;;;;;;;ACzBA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;ACvCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;AChCA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AANA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AARA;AATA;AAFA;AAyBA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AANA;AAYA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AArGA;AA2GA;AACA;AACA;AADA;AAGA;AAEA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;AACA;AAuBA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAPA;AAzBA;AACA;AAmCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAFA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAVA;AATA;AA8BA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAVA;AATA;AA8BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AA7DA;AAVA;AA+EA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AADA;AALA;AAYA;AA5BA;AAFA;AAiCA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AAnHA;AA8HA;AACA;;;;;;;;;;;;;;;;AC5SA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AANA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AARA;AATA;AAFA;AAyBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAjBA;AAjFA;AAwGA;AACA;AACA;AADA;AAGA;AAEA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AACA;AAqBA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAPA;AAvBA;AACA;AAiCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAFA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AA5BA;AAVA;AA6CA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AADA;AAHA;AAUA;AArBA;AAFA;AA0BA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AA1EA;AAqFA;AACA;;;;;;;;;;;;;;AC/PA;AACA;;;AAAA;AACA;;;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AADA;AAeA;AACA;;;;;;;;;;;;;;ACtBA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AATA;AAcA;AACA;AACA;AACA;AAHA;AAfA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AAZA;AAHA;AAmBA;AACA;;;;;;;;;;;;;;ACjEA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;;;;AAIA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AADA;AAHA;AAzCA;AACA;AAkDA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AADA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AATA;AATA;AATA;AAsCA;AAzCA;AA4CA;AACA;;;;;;;;;;;;;;;;AC3HA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAXA;AAeA;AACA;;;;;;;;;;;;;;;;ACpEA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;AC9BA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;AChCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;AC9BA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AARA;AAYA;AACA;;;;;;;;;;;;;;;;AChCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;AC7BA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAOA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AANA;AAYA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAlBA;AA0BA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAVA;AAcA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAlBA;AApGA;AA4HA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;AACA;AA8BA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAPA;AAhCA;AACA;AA0CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAFA;AASA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AApBA;AAVA;AAqCA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AALA;AAcA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AADA;AANA;AADA;AALA;AAlBA;AADA;AAyCA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AAhFA;AA2FA;AACA;;;;;;;;;;;;;;;;AC1SA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;AC9BA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;;;;ACtCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACRA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAbA;AAkBA;AACA;AADA;AAGA;AACA;AADA;AACA;AA/CA;AACA;AAqDA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AAxBA;AAFA;AA+BA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;;;;;;;;;;;;;AC/GA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AARA;AAeA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAFA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAJA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AACA;AANA;AAcA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAnJA;AA6JA;AACA;AAFA;AACA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AAYA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AAYA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AANA;AACA;AAcA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAQA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAPA;AAeA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AARA;AAkBA;AACA;AACA;AACA;AAHA;AAnBA;AA0BA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAJA;AADA;AALA;AAJA;AADA;AA2BA;AAjEA;AACA;AAqEA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AADA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAZA;AAPA;AA+BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AACA;AADA;AARA;AAYA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/DA;AAkEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAlBA;AACA;AAyBA;;;;;;;;;;;;;;ACveA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;ACTA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AANA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AASA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AATA;AADA;AALA;AAwBA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAWA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAnCA;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAlBA;AACA;AA0BA;;;;;;;;;;;;;;AClNA;AACA;;;AAAA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;ACTA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAbA;AAuBA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAJA;AAaA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAdA;AADA;AAdA;AAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;;;;;;;;;;;;;AC5GA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAJA;AAWA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AATA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AALA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAVA;AAFA;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAPA;AAdA;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AApMA;AA+MA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AAvBA;AALA;AAuCA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AAMA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AALA;AAPA;AAiBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AARA;AAeA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAPA;AAjCA;AAxCA;AAyFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AA1BA;AAkCA;;;;;;;;;;;;;ACjbA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AATA;AAFA;AAZA;AAoCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAkBA;AAEA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AARA;AADA;AAguFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAFA;AArEA;AA0EA;;;;;;;;;;;;;;;ACtUA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AANA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AAlEA;AA6EA;AACA;AAFA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AANA;AAeA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AANA;AAnBA;AADA;AAPA;AAuCA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;AClKA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AAFA;AAlBA;AAuBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AA7EA;AAmFA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AAdA;AAbA;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;;;;;;;;;;;;;;ACzKA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACnBA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AACA;AAOA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AADA;AADA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AADA;AADA;AAUA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAJA;AAeA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAhBA;AA4BA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AArCA;AADA;AAmDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AADA;AAFA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AATA;AAaA;AACA;AACA;AACA;AAHA;AAhBA;AACA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AALA;AACA;AAeA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAHA;AA5DA;;;;;;;;;;;;;ACxHA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AATA;AACA;AAmBA;AACA;AADA;AACA;AAGA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AAhDA;AAwDA;AADA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAPA;AANA;AADA;AAwBA;AACA;;;;;;;;;;;;;;AC9GA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;;;;;;;;;;;;;;ACVA;AACA;;;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAQA;AACA;;;;;;;;;;;;;;AChCA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAfA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAtgBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AANA;AAWA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AALA;AAtKA;AACA;AAsLA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAJA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AARA;AALA;AADA;AADA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AADA;AAPA;AADA;AAeA;AACA;AADA;AAGA;AACA;AACA;AADA;AADA;AACA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAHA;AArBA;AAvCA;AACA;AAmEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAHA;AAUA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AAHA;AARA;AAcA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAPA;AA1EA;AACA;AAomzCA;AAJA;AA3BA;AAmFA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AANA;AA3FA;AA2GA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;;;;;;;;;;;;;ACvgBA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAJA;AAcA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAHA;AAaA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AAxBA;AAHA;AAsCA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AAHA;AAcA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAJA;AAaA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AA/KA;AACA;AAyLA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAFA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AATA;AAHA;AALA;AAFA;AA6BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AANA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AARA;AATA;AAFA;AAwBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AALA;AAFA;AAzBA;AAuCA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AAxBA;AA2BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA5BA;AALA;AADA;AAxCA;AA+EA;AAAA;AAAA;AAAA;AAAA;AA7GA;AAgHA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;;;;;;;;;;;;;;ACtWA;AACA;;;;;AAAA;AACA;AAEA;;;;;;;;;;;;;;ACJA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAfA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAtBA;AA2BA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AARA;AAhaA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAjBA;AALA;AACA;AA8BA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAEA;AAFA;AAAA;AAFA;AAMA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAEA;AAFA;AAAA;AAFA;AAPA;AAcA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AATA;AANA;AAnBA;AA0CA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AApDA;AA6DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;;;;;;;AC7XA;AACA;;;AACA;AACA;AAAA;AACA;;;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;ACXA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAfA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAtBA;AA2BA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAPA;AAWA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAtBA;AAtHA;AACA;AAkJA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAQA;AATA;AADA;AALA;AADA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AADA;AAPA;AADA;AAeA;AACA;AADA;AAGA;AACA;AACA;AADA;AADA;AACA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAHA;AALA;AAtCA;AACA;AAkDA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAHA;AAUA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AAHA;AAPA;AAaA;AACA;AACA;AACA;AACA;AACA;AADA;AAHA;AADA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAPA;AASA;AACA;AADA;AAGA;AACA;AACA;AANA;AAxEA;AAiFA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AANA;AADA;AAJA;AALA;AAwBA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAtCA;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AALA;AACA;AAYA;;;;;;;;;;;;;;ACjcA;AACA;;;AAAA;AACA;;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;ACXA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AAaA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAfA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAfA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAtBA;AA2BA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AA9EA;AACA;AAwFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AASA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AACA;AAQA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AADA;AAOA;AAAA;AAAA;AAAA;AAAA;AAVA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AADA;AAMA;AAPA;AADA;AADA;AAaA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AADA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AADA;AALA;AAUA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AATA;AALA;AAfA;AAsCA;AACA;AACA;AACA;AACA;AAJA;AArDA;AA6DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;;;;;;;AC7UA;AACA;;;AACA;AACA;;;AAEA;AACA;;;;;;;;;;;;;;ACNA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AAFA;AAZA;AAiBA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AARA;AApBA;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AATA;AAzFA;AACA;AA8GA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAJA;AAMA;AAAA;AAAA;AACA;AADA;AAPA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAMA;AAPA;AASA;AAdA;AAZA;AAXA;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;;;;;;;;;;;;;;ACvNA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAVA;AAcA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAJA;AAaA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAdA;AAsBA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AADA;AADA;AAdA;AAHA;AAwBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAVA;AAcA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAVA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AApKA;AAmeA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AAFA;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;AALA;AAhBA;AA2BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAbA;AAkBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AALA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AACA;AACA;AAFA;AAxDA;AALA;AAqEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;;;;;;ACvVA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAidA;AA9BA;AAuDA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AANA;AADA;AAxDA;AAjBA;AAsFA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;;;;;;;;;;;;;AC/OA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAiBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AARA;AAFA;AAeA;AACA;AACA;AACA;AACA;AACA;AALA;AA1DA;AACA;AAmEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAXA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAlBA;AAdA;AAoCA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;;;;;;;;;;;;;AC9HA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AAFA;AAZA;AAiBA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AACA;AAjBA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AATA;AAjFA;AACA;AAsGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAMA;AAPA;AASA;AAdA;AAPA;AAXA;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;;;;;;;;;;;;;ACpMA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AAFA;AAZA;AAiBA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AARA;AApBA;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AATA;AAzFA;AACA;AA8GA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAMA;AAPA;AASA;AAVA;AAPA;AAXA;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;;;;;;;;;;;;;ACtMA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AANA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAUA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAXA;AADA;AANA;AA6BA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAWA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AApCA;AA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAzBA;AACA;AA8BA;;;;;;;;;;;;;;AC9OA;AACA;;;AAAA;AACA;;;AAAA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;ACRA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AAAA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAXA;AAaA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAVA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AAHA;AADA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAbA;AAFA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAZA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;AAFA;AApIA;AA0IA;AACA;AAFA;AACA;AAKA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAPA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAPA;AAbA;AAwBA;AAxCA;AALA;AADA;AAkDA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAtDA;AADA;AAdA;AAgFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;;;;;;;;;;;;;AClRA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AAJA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AARA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AA/EA;AACA;AA2FA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AAUA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AAWA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AASA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AAYA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AALA;AADA;AA7CA;AADA;AAVA;AAJA;AA0EA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AAlBA;AAoBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AArBA;AA3EA;AAFA;AA2GA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;ACnRA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAfA;AAoBA;AACA;AACA;AAFA;AAvBA;AA4BA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAlFA;AACA;AAuFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgBA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AA/CA;AACA;AA8DA;AACA;AAAA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAtCA;AACA;AA6CA;;;;;;;;;;;;;ACjPA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AAbA;AACA;AAyBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAMA;AAEA;AACA;AACA;AAHA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAHA;AACA;AAYA;;;;;;;;;;;;;AChJA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAvEA;AACA;AA4EA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AAEA;AACA;AACA;AAHA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAVA;AAeA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAtBA;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAZA;AACA;AAsBA;;;;;;;;;;;;;AChQA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AAbA;AACA;AAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAUA;AAEA;AACA;AACA;AAHA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAVA;AAaA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAPA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAHA;AACA;AAYA;;;;;;;;;;;;;ACtKA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AAbA;AACA;AAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AASA;AAEA;AACA;AACA;AAHA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AARA;AAWA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAHA;AACA;AAYA;;;;;;;;;;;;;ACrJA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AAJA;AAcA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AARA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAzFA;AACA;AAqGA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AALA;AADA;AADA;AANA;AAJA;AAuBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAtBA;AAwBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAzBA;AAxBA;AAFA;AA4DA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;AClOA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AAJA;AAcA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AARA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AA9FA;AACA;AA0GA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAMA;AANA;AADA;AAUA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AADA;AAXA;AADA;AANA;AAJA;AAmCA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAtBA;AAwBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAzBA;AApCA;AAFA;AAwEA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;ACvPA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AChBA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAtBA;AACA;AAgCA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAKA;AACA;AAPA;AAUA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;ACjFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AAHA;AAfA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAtBA;AAgCA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AAMA;AAPA;AASA;AAVA;AADA;AAJA;AAbA;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;;;;;;;;;;;;;ACtHA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAUA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAHA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAHA;AAaA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AAxBA;AAHA;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAJA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AALA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAPA;AAJA;AAiBA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAPA;AAjBA;AAzDA;AAgGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAvOA;AACA;AAoPA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAayBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAUA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AANA;AADA;AAXA;AA9BA;AAsDA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AAAA;AAHA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAPA;AAaA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AATA;AADA;AAeA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAZA;AAiBA;AA/BA;AAiCA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AAFA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAHA;AAFA;AAFA;AADA;AAcA;AAnCA;AAqCA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAzFA;AApEA;AA0KA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AACA;AAOA;;;;;;;;;;;;;ACtfA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAdA;AAFA;AAnCA;AACA;AA0DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAiBA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AACA;AAUA;AAEA;AACA;AACA;AAHA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAdA;AADA;AAmBA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAWA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AA3DA;AAoEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AA5DA;AACA;AAkEA;;;;;;;;;;;;;;ACrXA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACdA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AADA;AAFA;AAJA;AACA;AAeA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAJA;AAeA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;;;;;;;;;;;;;ACjDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAXA;AAkBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAZA;AAgBA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAdA;AA/EA;AAmGA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxCA;AAFA;AA+CA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AArDA;AAfA;AAyEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAPA;AACA;AASA;;;;;;;;;;;;;;;AC9NA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;AACA;AACA;AACA;AAKA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAXA;AAgBA;AACA;AACA;AA9BA;AAgCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AAFA;AAMA;AA5BA;AA8BA;AACA;AACA;AACA;AACA;AAHA;AAhEA;AAwEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AADA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAWA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AAhBA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAPA;AACA;AAaA;;;;;;;;;;;;;AC9KA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AADA;AAGA;AACA;AADA;AAZA;AAgBA;AACA;AACA;AAFA;AAjBA;AAsBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AALA;AAfA;AA2BA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AADA;AA1FA;AACA;AA+FA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAHA;AAQA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAVA;AAqBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAVA;AAtBA;AAsCA;AA3CA;AAFA;AAZA;AAgEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AACA;AAOA;;;;;;;;;;;;;;AC3NA;AACA;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;ACRA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AARA;AAYA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAHA;AAUA;AACA;AACA;AACA;AADA;AAFA;AAhGA;AAwGA;AACA;AAFA;AAKA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAFA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAbA;AALA;AAbA;AA2CA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;;ACrMA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAXA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAHA;AAUA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAdA;AAHA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AATA;AALA;AAmBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAzHA;AAoIA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AASA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAQA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AADA;AADA;AADA;AAPA;AAkBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAMA;AAPA;AAnBA;AA8BA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AADA;AADA;AAVA;AAoBA;AApEA;AADA;AAJA;AA6EA;AACA;AACA;AACA;AACA;AACA;AA/FA;AAmGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AALA;AAYA;;;;;;;;;;;;;;;ACzSA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AANA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AA/CA;AAoDA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAqBA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AATA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5DA;AAJA;AAmEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AApEA;AADA;AAbA;AA8FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;AC3NA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AALA;AACA;AAQA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AANA;AAaA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AA9EA;AACA;AAmFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAkBA;AAEA;AACA;AACA;AAHA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAXA;AADA;AALA;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AANA;AAFA;AAeA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;AALA;AAUA;AACA;AAAA;AACA;AADA;AAZA;AADA;AAJA;AAyBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAJA;AADA;AAFA;AAiBA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AA7EA;AA1BA;AAHA;AAsHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AA9DA;AACA;AAqEA;;;;;;;;;;;;;;;ACzcA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AANA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAhCA;AAqCA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AATA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BA;AAJA;AAqCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAtCA;AADA;AAbA;AAgEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;;;;;;;ACvJA;AACA;;;AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACzBA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AANA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAaA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AALA;AACA;AAUA;AAEA;AACA;AACA;AAHA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AATA;AADA;AAPA;AA0BA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAWA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AA7CA;AAuDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AA7BA;AACA;AAsCA;;;;;;;;;;;;;;ACjRA;AACA;;;AAAA;AACA;AAAA;AACA;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACXA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AARA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAZA;AAgBA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAPA;AAvCA;AAoDA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AADA;AATA;AAaA;AACA;AACA;AACA;AACA;AAJA;AApBA;AADA;AA8BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AADA;AADA;AA/BA;AA0CA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;;;;;;;;;;;;;;;AC/IA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AADA;AAeA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AADA;AAWA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAfA;AADA;AAdA;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;;;;;;ACzGA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AAFA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AARA;AAaA;AACA;AADA;AAlBA;AAsBA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAXA;AAkBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAHA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AADA;AAfA;AAHA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAZA;AAiBA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAHA;AAJA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AARA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAZA;AAgBA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AANA;AA5MA;AACA;AAwNA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AADA;AAJA;AAFA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AATA;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAHA;AAFA;AADA;AAWA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAlBA;AAFA;AAgCA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAZA;AA/CA;AAfA;AA+EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAVA;AACA;AAiBA;;;;;;;;;;;;;;;AC1VA;AACA;;;AAIA;AACA;AADA;AACA;AACA;AACA;;;AAAA;AACA;;;AACA;AACA;;;;;;;;;;;;;AAIA;;;;;;AAMA;AAAA;AACA;AAAA;AACA;AADA;AADA;AACA;AAIA;AAAA;AACA;AADA;AAAA;AACA;AAMA;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AANA;AADA;;;;;AAWA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AAZA;AADA;AAiBA;;;;;;AAEA;;;;;;;;;;;;;;ACnEA;AACA;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACVA;AAEA;AACA;AAEA;AADA;AAHA;AASA;AACA;AAEA;AADA;AAHA;AASA;AACA;AAEA;AADA;AAHA;AASA;AACA;AAEA;AADA;AAHA;AASA;AACA;AACA;AAEA;AADA;AAJA;AAUA;AACA;AACA;AAEA;AADA;AAJA;AAUA;AACA;AACA;AAEA;AADA;AAJA;AAUA;AACA;AACA;AAEA;AADA;AAJA;AAUA;AACA;AACA;AAEA;AADA;AAJA;AAUA;AACA;AACA;AAEA;AADA;AAJA;AAUA;AACA;AACA;AAEA;AADA;AAJA;AAUA;AACA;AACA;AAEA;AADA;AAJA;AAUA;AACA;AACA;AAEA;AADA;AAJA;AAUA;AACA;AACA;AAEA;AADA;AAJA;AAUA;AACA;AACA;AAEA;AADA;AAJA;AAUA;AACA;AACA;AAEA;AADA;AAJA;AAUA;AACA;AACA;AAEA;AADA;AAJA;AAUA;AACA;AACA;AAEA;AADA;AAJA;;;;;;;;;;;;;ACtJA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAuBA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AApCA;AACA;AA0CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAPA;AACA;AASA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AADA;AAgBA;AACA;;;;;;;;;;;;;;;AC9PA;AACA;;;;;AACA;;;;;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AADA;AACA;;;;;;;;;;;AACA;AACA;AAcA;AAVA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;;;AAYA;AAAA;AACA;AADA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAsBA;AACA;;;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;;;;AArCA;AAwCA;;;;;;;;;;;;;ACpEA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;AAMA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAZA;AAvEA;AACA;AAsFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAdA;AACA;AAgBA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;;AC3OA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;AAMA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAfA;AAhFA;AACA;AAkGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AAvBA;AACA;AAyBA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;;AC9PA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAIA;AACA;AAMA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAKA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAfA;AACA;AAgBA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAjFA;AACA;AAuFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AA5BA;AACA;AA8BA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;;ACzPA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;;;;;;;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AAVA;AACA;AAWA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AAHA;AApCA;AACA;AA0CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AAZA;AACA;AAcA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAWA;AACA;;;;;;;;;;;;;;;AChLA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAUA;AACA;AAMA;AACA;AAEA;AACA;;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAbA;AACA;AAcA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAdA;AACA;AAeA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAdA;AACA;AAeA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAdA;AACA;AAeA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAdA;AACA;AAeA;AAAA;AACA;AACA;AAFA;AA7JA;AACA;AAkKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAjBA;AACA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAfA;AACA;AAiBA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAPA;AAYA;AACA;AACA;AACA;AACA;AACA;AAlBA;AACA;AAoBA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AADA;AAmBA;AACA;;;;;;;;;;;;;;;AC1ZA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;AAOA;AACA;;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAKA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAZA;AACA;AAaA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AACA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AArHA;AACA;AA2HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAhBA;AACA;AAkBA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AADA;AAeA;AACA;;;;;;;;;;;;;;;ACpTA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;AAMA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAZA;AAvEA;AACA;AAsFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAjBA;AACA;AAmBA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;;AC7OA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;AAMA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAZA;AAnEA;AACA;AAkFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAbA;AACA;AAeA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAWA;AACA;;;;;;;;;;;;;;;AC/NA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAaA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAMA;AACA;AAGA;AACA;AAGA;AACA;AAIA;AACA;AAKA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnCA;AAqCA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAZA;AACA;AAaA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAfA;AACA;AAgBA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAhBA;AACA;AAiBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAvGA;AA4GA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAZA;AACA;AAaA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAOA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAbA;AACA;AAcA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAhBA;AAhEA;AAkFA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AAIA;AAPA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAZA;AACA;AAaA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAhBA;AA1EA;AA4FA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AADA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAtBA;AACA;AA4BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AADA;AAGA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAXA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAUA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AAaA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AAjBA;AAmBA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAUA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AADA;AAiBA;AACA;;;;;;;;;;;;;;;AClwBA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;AAMA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAZA;AAvEA;AACA;AAsFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAdA;AACA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;;AC1OA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;AAMA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAZA;AAvEA;AACA;AAsFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAbA;AACA;AAeA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;;ACxOA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AADA;AADA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AADA;AARA;;;;;;;;;;;;;AClBA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAcA;AACA;AAYA;AACA;AAEA;AACA;;;;;;;AAnBA;AACA;AACA;AACA;AAiBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AAyBA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAPA;AACA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAaA;AA1BA;AACA;AA2BA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AA3BA;AA4BA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAbA;AACA;AAcA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAOA;AACA;AACA;AAhBA;AACA;AAiBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAfA;AACA;AAgBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAHA;AAUA;AACA;AAEA;AACA;AACA;AArBA;AACA;AAsBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAPA;AACA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AArSA;AACA;AA2SA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAytBA;AAwBA;AACA;AACA;AACA;AACA;AACA;AAjDA;AACA;AAmDA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAdA;AAmBA;AACA;AACA;AACA;AACA;AACA;AAzBA;AA2BA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;AADA;AA2BA;AACA;;;;;;;;;;;;;;;AC3tBA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;AAKA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AAVA;AACA;AAWA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AAzCA;AACA;AAuDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAVA;AAeA;AACA;AACA;AACA;AACA;AACA;AA1BA;AACA;AA4BA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AAZA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;;ACnOA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;AAKA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAhBA;AACA;AAiBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAZA;AApDA;AACA;AAmEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAXA;AAeA;AACA;AACA;AACA;AACA;AACA;AArBA;AACA;AAuBA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAWA;AACA;;;;;;;;;;;;;;;AC7NA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAKA;AACA;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AAhBA;AACA;AA8BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;;ACzKA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;AAOA;AACA;;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAKA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAZA;AACA;AAaA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AACA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AArHA;AACA;AA2HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAhBA;AACA;AAkBA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AADA;AAeA;AACA;;;;;;;;;;;;;;;ACpTA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAMA;AACA;AAOA;AACA;AAAA;AACA;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAkBA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AAMA;AAXA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AA5DA;AACA;AAkEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAvBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAiBA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;;;;;;;;;;;;;;;AC/QA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAOA;AACA;AAOA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAdA;AACA;AAeA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAVA;AACA;AAWA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAfA;AAgBA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AACA;AACA;AAFA;AA3GA;AACA;AAgHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AAlBA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AApBA;AACA;AAsBA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AACA;AACA;AACA;AAhBA;AACA;AAkBA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;;ACrUA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAQA;AACA;AAOA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAdA;AACA;AAeA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAZA;AAhHA;AACA;AA+HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AAdA;AAgBA;AACA;AACA;AACA;AACA;AACA;AA7BA;AACA;AA+BA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAZA;AACA;AAcA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AAaA;AACA;;;;;;;;;;;;;;;AC1UA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;AAKA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAZA;AACA;AAaA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAfA;AAgBA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AA3DA;AACA;AAiEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAdA;AACA;AAgBA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AAaA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAWA;AACA;;;;;;;;;;;;;;;ACrNA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;AAMA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAZA;AAvEA;AACA;AAsFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AApBA;AACA;AAsBA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;;ACjPA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAIA;AACA;AAMA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAfA;AACA;AAgBA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AA7EA;AACA;AAmFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AA1BA;AACA;AA4BA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAWA;AACA;;;;;;;;;;;;;;;AC5OA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAMA;AACA;;;;;;;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AAMA;AAXA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AANA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AAvBA;AAwBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAVA;AAWA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAxFA;AACA;AA8FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAPA;AAWA;AACA;AACA;AACA;AACA;AAhBA;AACA;AAkBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AADA;AAeA;AACA;;;;;;;;;;;;;;;ACxPA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;AAMA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAfA;AAvEA;AACA;AAyFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AAnBA;AACA;AAqBA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;;ACjPA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAWA;AACA;AAUA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAiBA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAZA;AACA;AAaA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAbA;AACA;AAcA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAlBA;AAmbA;AACA;AAcA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAdA;AACA;AAeA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAxOA;AACA;AA8OA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AAfA;AACA;AAiBA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAlBA;AAsBA;AACA;AACA;AACA;AACA;AACA;AAtCA;AACA;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AAfA;AACA;AAiBA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AAdA;AACA;AAgBA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AADA;AAoBA;AACA;;;;;;;;;;;;;;;AC3iBA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;;;;;;;;;;;;;;AChDA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAGA;AACA;AAGA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AACA;AAQA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAVA;AACA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAUA;AACA;;;;;;;;;;;;;;;ACjJA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;AAKA;AACA;AAAA;AACA;AADA;AACA;;;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAmBA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AAVA;AACA;AAWA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AACA;AAQA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAvDA;AACA;AA6DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AAZA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AADA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AAaA;AACA;;;;;;;;;;;;;;;AClPA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAGA;AACA;AAGA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AACA;AACA;AADA;AAGA;AAJA;AAVA;AACA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAUA;AACA;;;;;;;;;;;;;;;AC5IA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAIA;AACA;AAIA;AACA;AAEA;AACA;;;;;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAkBA;AAEA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAOA;AACA;AAtBA;AACA;AAuBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AAQA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAzDA;AACA;AA+DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;AAYA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AACA;AAsBA;AACA;AADA;AAGA;AACA;AACA;AAFA;AACA;AAIA;AACA;AADA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;;AC5PA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AACA;AACA;AAGA;AACA;AAAA;AACA;;;;;;;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AADA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAOA;AAfA;AAgBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AA/BA;AACA;AAsCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAHA;AADA;AACA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;ACvLA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AACA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AACA;;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AADA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAMA;AAdA;AACA;AAeA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAtBA;AACA;AA6BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAFA;AADA;AADA;AACA;AAQA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;ACzJA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAMA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAdA;AACA;AAeA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAlCA;AACA;AAwCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAWA;AACA;;;;;;;;;;;;;;AC3KA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAdA;AADA;AACA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAFA;AADA;AADA;AACA;AAQA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAWA;AACA;;;;;;;;;;;;;;ACpHA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AAGA;AACA;AAAA;AACA;;;;;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AADA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAMA;AAdA;AADA;AACA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAFA;AADA;AADA;AACA;AAQA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAWA;AACA;;;;;;;;;;;;;;AChHA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;AAIA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AADA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAMA;AAZA;AACA;AAaA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAtCA;AACA;AA6CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AADA;AAGA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AADA;AAcA;AACA;;;;;;;;;;;;;;AChLA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AAGA;AACA;AAAA;AACA;;;;;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AADA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAMA;AAdA;AAeA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAhBA;AACA;AAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAFA;AADA;AADA;AACA;AAQA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;ACzHA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AADA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAKA;AAXA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAbA;AACA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AADA;AAGA;AACA;AACA;AACA;AAFA;AADA;AACA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;AC7IA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AACA;AACA;AAAA;AACA;AAAA;AACA;;;;;;;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AADA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAlBA;AAmBA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAxBA;AACA;AA+BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AADA;AACA;AAQA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;AClIA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AAIA;AACA;AAAA;AACA;;;;;;;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAZA;AAdA;AACA;AA6BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;ACnJA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;;;;;;;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AAVA;AAVA;AACA;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AAFA;AADA;AADA;AACA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AADA;AAcA;AACA;;;;;;;;;;;;;;;AC1JA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACtBA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;AAMA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAdA;AAhFA;AACA;AAiGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AAnBA;AACA;AAqBA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;;;;;;;;;;;;;;;ACzPA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;AASA;AACA;AAUA;AACA;AAKA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AAyBA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAPA;AACA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AALA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA;AArBA;AACA;AAsBA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAdA;AACA;AAeA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAdA;AAenBA;AAoBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;;;;;;;;;;;;;;;AAeA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AA9LA;AACA;AAuMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAQA;AAlBA;AAoBA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAjBA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BA;AACA;AA8BA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AADA;AAkBA;AACA;;;;;;;;;;;;;;;ACjiBA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAQA;AACA;AAOA;AACA;AAIA;AACA;;;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAQA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAZA;AACA;AAaA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAlBA;AAmBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAVA;AACA;AAWA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAfA;AAgBA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AA1JA;AAiKA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAZA;AAXA;AACA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AACA;AAJA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAfA;AAiBA;AACA;AACA;AACA;AACA;AACA;AA3BA;AACA;AA6BA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAXA;AAgBA;AACA;AACA;AACA;AACA;AACA;AAtBA;AACA;AAwBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AADA;AAmBA;AACA;;;;;;;;;;;;;;;ACxeA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAIA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAjBA;AA5BA;AACA;AAgDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AATA;AACA;AAWA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AADA;AAiBA;AACA;;;;;;;;;;;;;;;ACnQA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAaA;AACA;AAYA;AACA;AAEA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAoBA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAdA;AACA;AAeA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAZA;AACA;AAaA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAfA;AACA;AAgBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAdA;AACA;AAeA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAdA;AACA;AAeA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAVA;AAWA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAsBA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AA7PA;AACA;AAmQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AAlBA;AACA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAfA;AACA;AAiBA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAPA;AAYA;AACA;AACA;AACA;AACA;AACA;AAlBA;AACA;AAoBA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AADA;AAoBA;AACA;;;;;;;;;;;;;;;AC5jBA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAOA;AACA;AAOA;AACA;AAAA;AACA;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AAVA;AAWA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAdA;AA1GA;AACA;AA2HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AAyBA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AAdA;AACA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AADA;AAeA;AACA;;;;;;;;;;;;;;;ACtWA;AACA;;;;;AACA;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAQA;AACA;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAbA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAZA;AAvEA;AACA;AAsFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AAaA;AACA;;;;;;;;;;;;;;;AChQA;AACA;;;;;AACA;;;;;;;;;;;;;;;ACFA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;ACZA;AACA;;;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAAA;AACA;AAAA;AAEA;AAEA;AAFA;AAIA;AAEA;AAEA;AACA;AACA;AACA;AALA;AAOA;AAEA;AAEA;AACA;AACA;AACA;AALA;AAOA;AAEA;AACA;AAEA;AACA;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACJA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;;;;;;;;;;;;;ACXA;AACA;AAHA;AACA;;;;;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACTA;AACA;;;AAAA;AACA;AAAA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAUA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAJA;;;;;;;;;;;;;;;;ACfA;AACA;AADA;AACA;AAAA;AACA;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAGA;AAHA;AAKA;AAGA;AAEA;AAFA;AAIA;AAEA;AACA;;;;;;;;;;;;;;AC1BA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAUA;AACA;AACA;AACA;AACA;AA9VA;AACA;AAgWA;;;;;;;;;;;;;;;;AC3WA;AACA;AADA;AACA;AAAA;AACA;;;;;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAGA;AAHA;AAKA;AAGA;AAEA;AAFA;AAIA;AAEA;AACA;;;;;;;;;;;;;;;;;AC3BA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;AC5CA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAGA;;;;;;;;;;;;;;;;;AC9BA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;AC5BA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;AC7BA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAGA;;;;;;;;;;;;;;;;;ACpCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAGA;;;;;;;;;;;;;;;;;ACxCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;AC9BA;AACA;;;AAAA;AACA;;;;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;;AACA;AAAA;AACA;AAEA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;;ACxBA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;;;;;;;;;;;;;;;;;AC7BA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;AC9CA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACzDA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;AC3EA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACxCA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACxCA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;AClDA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;;;;;;;;;;;;;;ACjBA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;AC/BA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACzCA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;AC9CA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACtCA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACxDA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACpDA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACnCA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;AC/BA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACtCA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;;;;;;;;;;;;;;;;AClDA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;AC/BA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;AChCA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;;;;;;;;;;;;;;;;ACvBA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAqBA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACvFA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACnCA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;ACzCA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AAFA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;;;;;;;;;;;;;;;ACbA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACpDA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACjDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACvDA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;ACtCA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;;AACA;AAAA;AACA;AAEA;AACA;AACA;AAFA;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;;;;;;;;;;;;;;ACtEA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACpCA;AACA;;;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;ACtCA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;AChCA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;AC1GA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;AC/BA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAGA;;;;;;;;;;;;;;;;;ACnCA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;AC/BA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAGA;;;;;;;;;;;;;;;AC7BA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;;;;;;;;;;;;;;;;;ACvDA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;ACtCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;;;;;;;;;;;;;;;ACnCA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjmvpBA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AAAA;AACA;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAFA;AAVA;AACA;AAeA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AADA;;;","sourceRoot":""}